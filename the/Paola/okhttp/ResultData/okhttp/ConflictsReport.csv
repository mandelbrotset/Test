=========================================================
Revision: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca.revisions
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/Network.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## Network DEFAULT = new Network() {
    @Override public InetAddress[] resolveInetAddresses(String host) throws UnknownHostException {
      if (host == null) throw new UnknownHostException("host == null");
      return InetAddress.getAllByName(host);
    }
  }; ##FSTMerge## Network DEFAULT = new Network() {
    @Override public InetAddress[] resolveInetAddresses(String host) throws UnknownHostException {
      if (host == null) throw new UnknownHostException("host == null");
      return InetAddress.getAllByName(host);
    }
  };
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/Network.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## InetAddress[] resolveInetAddresses(String host) throws UnknownHostException; ##FSTMerge## InetAddress[] resolveInetAddresses(String host) throws UnknownHostException;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/Network.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final ##FSTMerge## public final
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketWriter.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final boolean isClient; ##FSTMerge## private final boolean isClient;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketWriter.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final BufferedSink sink; ##FSTMerge## private final BufferedSink sink;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketWriter.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final Random random; ##FSTMerge## private final Random random;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketWriter.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final FrameSink frameSink = new FrameSink(); ##FSTMerge## private final FrameSink frameSink = new FrameSink();
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketWriter.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private boolean closed; ##FSTMerge## private boolean closed;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketWriter.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private boolean activeWriter; ##FSTMerge## private boolean activeWriter;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketWriter.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final byte[] maskKey; ##FSTMerge## private final byte[] maskKey;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketWriter.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final byte[] maskBuffer; ##FSTMerge## private final byte[] maskBuffer;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public WebSocketWriter(boolean isClient, BufferedSink sink, Random random) {
    if (sink == null) throw new NullPointerException("sink");
    if (random == null) throw new NullPointerException("random");
    this.isClient = isClient;
    this.sink = sink;
    this.random = random;

    // Masks are only a concern for client writers.
    maskKey = isClient ? new byte[4] : null;
    maskBuffer = isClient ? new byte[2048] : null;
  } ##FSTMerge## public WebSocketWriter(boolean isClient, BufferedSink sink, Random random) {
    if (sink == null) throw new NullPointerException("sink");
    if (random == null) throw new NullPointerException("random");
    this.isClient = isClient;
    this.sink = sink;
    this.random = random;

    // Masks are only a concern for client writers.
    maskKey = isClient ? new byte[4] : null;
    maskBuffer = isClient ? new byte[2048] : null;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void writePing(Buffer payload) throws IOException {
    synchronized (sink) {
      writeControlFrame(OPCODE_CONTROL_PING, payload);
    }
  } ##FSTMerge## public void writePing(Buffer payload) throws IOException {
    synchronized (sink) {
      writeControlFrame(OPCODE_CONTROL_PING, payload);
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void writePong(Buffer payload) throws IOException {
    synchronized (sink) {
      writeControlFrame(OPCODE_CONTROL_PONG, payload);
    }
  } ##FSTMerge## public void writePong(Buffer payload) throws IOException {
    synchronized (sink) {
      writeControlFrame(OPCODE_CONTROL_PONG, payload);
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void writeClose(int code, String reason) throws IOException {
    Buffer payload = null;
    if (code != 0) {
      if (code < 1000 || code >= 5000) {
        throw new IllegalArgumentException("Code must be in range [1000,5000).");
      }
      payload = new Buffer();
      payload.writeShort(code);
      if (reason != null) {
        payload.writeUtf8(reason);
      }
    } else if (reason != null) {
      throw new IllegalArgumentException("Code required to include reason.");
    }

    synchronized (sink) {
      writeControlFrame(OPCODE_CONTROL_CLOSE, payload);
      closed = true;
    }
  } ##FSTMerge## public void writeClose(int code, String reason) throws IOException {
    Buffer payload = null;
    if (code != 0) {
      if (code < 1000 || code >= 5000) {
        throw new IllegalArgumentException("Code must be in range [1000,5000).");
      }
      payload = new Buffer();
      payload.writeShort(code);
      if (reason != null) {
        payload.writeUtf8(reason);
      }
    } else if (reason != null) {
      throw new IllegalArgumentException("Code required to include reason.");
    }

    synchronized (sink) {
      writeControlFrame(OPCODE_CONTROL_CLOSE, payload);
      closed = true;
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void writeControlFrame(int opcode, Buffer payload) throws IOException {
    if (closed) throw new IOException("Closed");

    int length = 0;
    if (payload != null) {
      length = (int) payload.size();
      if (length > PAYLOAD_MAX) {
        throw new IllegalArgumentException(
            "Payload size must be less than or equal to " + PAYLOAD_MAX);
      }
    }

    int b0 = B0_FLAG_FIN | opcode;
    sink.writeByte(b0);

    int b1 = length;
    if (isClient) {
      b1 |= B1_FLAG_MASK;
      sink.writeByte(b1);

      random.nextBytes(maskKey);
      sink.write(maskKey);

      if (payload != null) {
        writeAllMasked(payload, length);
      }
    } else {
      sink.writeByte(b1);

      if (payload != null) {
        sink.writeAll(payload);
      }
    }

    sink.flush();
  } ##FSTMerge## private void writeControlFrame(int opcode, Buffer payload) throws IOException {
    if (closed) throw new IOException("Closed");

    int length = 0;
    if (payload != null) {
      length = (int) payload.size();
      if (length > PAYLOAD_MAX) {
        throw new IllegalArgumentException(
            "Payload size must be less than or equal to " + PAYLOAD_MAX);
      }
    }

    int b0 = B0_FLAG_FIN | opcode;
    sink.writeByte(b0);

    int b1 = length;
    if (isClient) {
      b1 |= B1_FLAG_MASK;
      sink.writeByte(b1);

      random.nextBytes(maskKey);
      sink.write(maskKey);

      if (payload != null) {
        writeAllMasked(payload, length);
      }
    } else {
      sink.writeByte(b1);

      if (payload != null) {
        sink.writeAll(payload);
      }
    }

    sink.flush();
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public BufferedSink newMessageSink(PayloadType type) {
    if (type == null) throw new NullPointerException("type == null");
    if (activeWriter) {
      throw new IllegalStateException("Another message writer is active. Did you call close()?");
    }
    activeWriter = true;

    frameSink.payloadType = type;
    frameSink.isFirstFrame = true;
    return Okio.buffer(frameSink);
  } ##FSTMerge## public BufferedSink newMessageSink(PayloadType type) {
    if (type == null) throw new NullPointerException("type == null");
    if (activeWriter) {
      throw new IllegalStateException("Another message writer is active. Did you call close()?");
    }
    activeWriter = true;

    frameSink.payloadType = type;
    frameSink.isFirstFrame = true;
    return Okio.buffer(frameSink);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void sendMessage(PayloadType type, Buffer payload) throws IOException {
    if (type == null) throw new NullPointerException("type == null");
    if (payload == null) throw new NullPointerException("payload == null");
    if (activeWriter) {
      throw new IllegalStateException("A message writer is active. Did you call close()?");
    }
    writeFrame(type, payload, payload.size(), true /* first frame */, true /* final */);
  } ##FSTMerge## public void sendMessage(PayloadType type, Buffer payload) throws IOException {
    if (type == null) throw new NullPointerException("type == null");
    if (payload == null) throw new NullPointerException("payload == null");
    if (activeWriter) {
      throw new IllegalStateException("A message writer is active. Did you call close()?");
    }
    writeFrame(type, payload, payload.size(), true /* first frame */, true /* final */);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void writeFrame(PayloadType payloadType, Buffer source, long byteCount,
      boolean isFirstFrame, boolean isFinal) throws IOException {
    if (closed) throw new IOException("Closed");

    int opcode = OPCODE_CONTINUATION;
    if (isFirstFrame) {
      switch (payloadType) {
        case TEXT:
          opcode = OPCODE_TEXT;
          break;
        case BINARY:
          opcode = OPCODE_BINARY;
          break;
        default:
          throw new IllegalStateException("Unknown payload type: " + payloadType);
      }
    }

    synchronized (sink) {
      int b0 = opcode;
      if (isFinal) {
        b0 |= B0_FLAG_FIN;
      }
      sink.writeByte(b0);

      int b1 = 0;
      if (isClient) {
        b1 |= B1_FLAG_MASK;
        random.nextBytes(maskKey);
      }
      if (byteCount <= PAYLOAD_MAX) {
        b1 |= (int) byteCount;
        sink.writeByte(b1);
      } else if (byteCount <= Short.MAX_VALUE) {
        b1 |= PAYLOAD_SHORT;
        sink.writeByte(b1);
        sink.writeShort((int) byteCount);
      } else {
        b1 |= PAYLOAD_LONG;
        sink.writeByte(b1);
        sink.writeLong(byteCount);
      }

      if (isClient) {
        sink.write(maskKey);
        writeAllMasked(source, byteCount);
      } else {
        sink.write(source, byteCount);
      }

      sink.flush();
    }
  } ##FSTMerge## private void writeFrame(PayloadType payloadType, Buffer source, long byteCount,
      boolean isFirstFrame, boolean isFinal) throws IOException {
    if (closed) throw new IOException("Closed");

    int opcode = OPCODE_CONTINUATION;
    if (isFirstFrame) {
      switch (payloadType) {
        case TEXT:
          opcode = OPCODE_TEXT;
          break;
        case BINARY:
          opcode = OPCODE_BINARY;
          break;
        default:
          throw new IllegalStateException("Unknown payload type: " + payloadType);
      }
    }

    synchronized (sink) {
      int b0 = opcode;
      if (isFinal) {
        b0 |= B0_FLAG_FIN;
      }
      sink.writeByte(b0);

      int b1 = 0;
      if (isClient) {
        b1 |= B1_FLAG_MASK;
        random.nextBytes(maskKey);
      }
      if (byteCount <= PAYLOAD_MAX) {
        b1 |= (int) byteCount;
        sink.writeByte(b1);
      } else if (byteCount <= Short.MAX_VALUE) {
        b1 |= PAYLOAD_SHORT;
        sink.writeByte(b1);
        sink.writeShort((int) byteCount);
      } else {
        b1 |= PAYLOAD_LONG;
        sink.writeByte(b1);
        sink.writeLong(byteCount);
      }

      if (isClient) {
        sink.write(maskKey);
        writeAllMasked(source, byteCount);
      } else {
        sink.write(source, byteCount);
      }

      sink.flush();
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void writeAllMasked(BufferedSource source, long byteCount) throws IOException {
    long written = 0;
    while (written < byteCount) {
      int toRead = (int) Math.min(byteCount, maskBuffer.length);
      int read = source.read(maskBuffer, 0, toRead);
      if (read == -1) throw new AssertionError();
      toggleMask(maskBuffer, read, maskKey, written);
      sink.write(maskBuffer, 0, read);
      written += read;
    }
  } ##FSTMerge## private void writeAllMasked(BufferedSource source, long byteCount) throws IOException {
    long written = 0;
    while (written < byteCount) {
      int toRead = (int) Math.min(byteCount, maskBuffer.length);
      int read = source.read(maskBuffer, 0, toRead);
      if (read == -1) throw new AssertionError();
      toggleMask(maskBuffer, read, maskKey, written);
      sink.write(maskBuffer, 0, read);
      written += read;
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketWriter.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final ##FSTMerge## private final
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketWriter.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements Sink ##FSTMerge## implements Sink
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketWriter.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private PayloadType payloadType; ##FSTMerge## private PayloadType payloadType;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketWriter.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private boolean isFirstFrame; ##FSTMerge## private boolean isFirstFrame;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public void write(Buffer source, long byteCount) throws IOException {
      writeFrame(payloadType, source, byteCount, isFirstFrame, false /* final */);
      isFirstFrame = false;
    } ##FSTMerge## @Override public void write(Buffer source, long byteCount) throws IOException {
      writeFrame(payloadType, source, byteCount, isFirstFrame, false /* final */);
      isFirstFrame = false;
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public void flush() throws IOException {
      if (closed) throw new IOException("Closed");

      synchronized (sink) {
        sink.flush();
      }
    } ##FSTMerge## @Override public void flush() throws IOException {
      if (closed) throw new IOException("Closed");

      synchronized (sink) {
        sink.flush();
      }
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public Timeout timeout() {
      return sink.timeout();
    } ##FSTMerge## @Override public Timeout timeout() {
      return sink.timeout();
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @SuppressWarnings("PointlessBitwiseExpression")
    @Override public void close() throws IOException {
      if (closed) throw new IOException("Closed");

      int length = 0;

      synchronized (sink) {
        sink.writeByte(B0_FLAG_FIN | OPCODE_CONTINUATION);

        if (isClient) {
          sink.writeByte(B1_FLAG_MASK | length);
          random.nextBytes(maskKey);
          sink.write(maskKey);
        } else {
          sink.writeByte(length);
        }
        sink.flush();
      }

      activeWriter = false;
    } ##FSTMerge## @SuppressWarnings("PointlessBitwiseExpression")
    @Override public void close() throws IOException {
      if (closed) throw new IOException("Closed");

      int length = 0;

      synchronized (sink) {
        sink.writeByte(B0_FLAG_FIN | OPCODE_CONTINUATION);

        if (isClient) {
          sink.writeByte(B1_FLAG_MASK | length);
          random.nextBytes(maskKey);
          sink.write(maskKey);
        } else {
          sink.writeByte(length);
        }
        sink.flush();
      }

      activeWriter = false;
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketWriter.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final ##FSTMerge## public final
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketReader.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketReader.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void onMessage(BufferedSource source, PayloadType type) throws IOException; ##FSTMerge## void onMessage(BufferedSource source, PayloadType type) throws IOException;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketReader.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void onPing(Buffer buffer); ##FSTMerge## void onPing(Buffer buffer);
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketReader.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void onPong(Buffer buffer); ##FSTMerge## void onPong(Buffer buffer);
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketReader.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void onClose(int code, String reason) throws IOException; ##FSTMerge## void onClose(int code, String reason) throws IOException;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketReader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final boolean isClient; ##FSTMerge## private final boolean isClient;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketReader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final BufferedSource source; ##FSTMerge## private final BufferedSource source;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketReader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final FrameCallback frameCallback; ##FSTMerge## private final FrameCallback frameCallback;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketReader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final Source framedMessageSource = new FramedMessageSource(); ##FSTMerge## private final Source framedMessageSource = new FramedMessageSource();
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketReader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private boolean closed; ##FSTMerge## private boolean closed;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketReader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private boolean messageClosed; ##FSTMerge## private boolean messageClosed;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketReader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private int opcode; ##FSTMerge## private int opcode;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketReader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private long frameLength; ##FSTMerge## private long frameLength;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketReader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private long frameBytesRead; ##FSTMerge## private long frameBytesRead;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketReader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private boolean isFinalFrame; ##FSTMerge## private boolean isFinalFrame;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketReader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private boolean isControlFrame; ##FSTMerge## private boolean isControlFrame;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketReader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private boolean isMasked; ##FSTMerge## private boolean isMasked;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketReader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final byte[] maskKey = new byte[4]; ##FSTMerge## private final byte[] maskKey = new byte[4];
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketReader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final byte[] maskBuffer = new byte[2048]; ##FSTMerge## private final byte[] maskBuffer = new byte[2048];
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public WebSocketReader(boolean isClient, BufferedSource source, FrameCallback frameCallback) {
    if (source == null) throw new NullPointerException("source");
    if (frameCallback == null) throw new NullPointerException("frameCallback");
    this.isClient = isClient;
    this.source = source;
    this.frameCallback = frameCallback;
  } ##FSTMerge## public WebSocketReader(boolean isClient, BufferedSource source, FrameCallback frameCallback) {
    if (source == null) throw new NullPointerException("source");
    if (frameCallback == null) throw new NullPointerException("frameCallback");
    this.isClient = isClient;
    this.source = source;
    this.frameCallback = frameCallback;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void processNextFrame() throws IOException {
    readHeader();
    if (isControlFrame) {
      readControlFrame();
    } else {
      readMessageFrame();
    }
  } ##FSTMerge## public void processNextFrame() throws IOException {
    readHeader();
    if (isControlFrame) {
      readControlFrame();
    } else {
      readMessageFrame();
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void readHeader() throws IOException {
    if (closed) throw new IOException("Closed");

    int b0 = source.readByte() & 0xff;

    opcode = b0 & B0_MASK_OPCODE;
    isFinalFrame = (b0 & B0_FLAG_FIN) != 0;
    isControlFrame = (b0 & OPCODE_FLAG_CONTROL) != 0;

    // Control frames must be final frames (cannot contain continuations).
    if (isControlFrame && !isFinalFrame) {
      throw new ProtocolException("Control frames must be final.");
    }

    boolean reservedFlag1 = (b0 & B0_FLAG_RSV1) != 0;
    boolean reservedFlag2 = (b0 & B0_FLAG_RSV2) != 0;
    boolean reservedFlag3 = (b0 & B0_FLAG_RSV3) != 0;
    if (reservedFlag1 || reservedFlag2 || reservedFlag3) {
      // Reserved flags are for extensions which we currently do not support.
      throw new ProtocolException("Reserved flags are unsupported.");
    }

    int b1 = source.readByte() & 0xff;

    isMasked = (b1 & B1_FLAG_MASK) != 0;
    if (isMasked == isClient) {
      // Masked payloads must be read on the server. Unmasked payloads must be read on the client.
      throw new ProtocolException("Client-sent frames must be masked. Server sent must not.");
    }

    // Get frame length, optionally reading from follow-up bytes if indicated by special values.
    frameLength = b1 & B1_MASK_LENGTH;
    if (frameLength == PAYLOAD_SHORT) {
      frameLength = source.readShort();
    } else if (frameLength == PAYLOAD_LONG) {
      frameLength = source.readLong();
    }
    frameBytesRead = 0;

    if (isControlFrame && frameLength > PAYLOAD_MAX) {
      throw new ProtocolException("Control frame must be less than " + PAYLOAD_MAX + "B.");
    }

    if (isMasked) {
      // Read the masking key as bytes so that they can be used directly for unmasking.
      source.readFully(maskKey);
    }
  } ##FSTMerge## private void readHeader() throws IOException {
    if (closed) throw new IOException("Closed");

    int b0 = source.readByte() & 0xff;

    opcode = b0 & B0_MASK_OPCODE;
    isFinalFrame = (b0 & B0_FLAG_FIN) != 0;
    isControlFrame = (b0 & OPCODE_FLAG_CONTROL) != 0;

    // Control frames must be final frames (cannot contain continuations).
    if (isControlFrame && !isFinalFrame) {
      throw new ProtocolException("Control frames must be final.");
    }

    boolean reservedFlag1 = (b0 & B0_FLAG_RSV1) != 0;
    boolean reservedFlag2 = (b0 & B0_FLAG_RSV2) != 0;
    boolean reservedFlag3 = (b0 & B0_FLAG_RSV3) != 0;
    if (reservedFlag1 || reservedFlag2 || reservedFlag3) {
      // Reserved flags are for extensions which we currently do not support.
      throw new ProtocolException("Reserved flags are unsupported.");
    }

    int b1 = source.readByte() & 0xff;

    isMasked = (b1 & B1_FLAG_MASK) != 0;
    if (isMasked == isClient) {
      // Masked payloads must be read on the server. Unmasked payloads must be read on the client.
      throw new ProtocolException("Client-sent frames must be masked. Server sent must not.");
    }

    // Get frame length, optionally reading from follow-up bytes if indicated by special values.
    frameLength = b1 & B1_MASK_LENGTH;
    if (frameLength == PAYLOAD_SHORT) {
      frameLength = source.readShort();
    } else if (frameLength == PAYLOAD_LONG) {
      frameLength = source.readLong();
    }
    frameBytesRead = 0;

    if (isControlFrame && frameLength > PAYLOAD_MAX) {
      throw new ProtocolException("Control frame must be less than " + PAYLOAD_MAX + "B.");
    }

    if (isMasked) {
      // Read the masking key as bytes so that they can be used directly for unmasking.
      source.readFully(maskKey);
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void readControlFrame() throws IOException {
    Buffer buffer = null;
    if (frameBytesRead < frameLength) {
      buffer = new Buffer();

      if (isClient) {
        source.readFully(buffer, frameLength);
      } else {
        while (frameBytesRead < frameLength) {
          int toRead = (int) Math.min(frameLength - frameBytesRead, maskBuffer.length);
          int read = source.read(maskBuffer, 0, toRead);
          if (read == -1) throw new EOFException();
          toggleMask(maskBuffer, read, maskKey, frameBytesRead);
          buffer.write(maskBuffer, 0, read);
          frameBytesRead += read;
        }
      }
    }

    switch (opcode) {
      case OPCODE_CONTROL_PING:
        frameCallback.onPing(buffer);
        break;
      case OPCODE_CONTROL_PONG:
        frameCallback.onPong(buffer);
        break;
      case OPCODE_CONTROL_CLOSE:
        int code = 0;
        String reason = "";
        if (buffer != null) {
          code = buffer.readShort();
          reason = buffer.readUtf8();
        }
        frameCallback.onClose(code, reason);
        closed = true;
        break;
      default:
        throw new IllegalStateException("Unknown control opcode: " + toHexString(opcode));
    }
  } ##FSTMerge## private void readControlFrame() throws IOException {
    Buffer buffer = null;
    if (frameBytesRead < frameLength) {
      buffer = new Buffer();

      if (isClient) {
        source.readFully(buffer, frameLength);
      } else {
        while (frameBytesRead < frameLength) {
          int toRead = (int) Math.min(frameLength - frameBytesRead, maskBuffer.length);
          int read = source.read(maskBuffer, 0, toRead);
          if (read == -1) throw new EOFException();
          toggleMask(maskBuffer, read, maskKey, frameBytesRead);
          buffer.write(maskBuffer, 0, read);
          frameBytesRead += read;
        }
      }
    }

    switch (opcode) {
      case OPCODE_CONTROL_PING:
        frameCallback.onPing(buffer);
        break;
      case OPCODE_CONTROL_PONG:
        frameCallback.onPong(buffer);
        break;
      case OPCODE_CONTROL_CLOSE:
        int code = 0;
        String reason = "";
        if (buffer != null) {
          code = buffer.readShort();
          reason = buffer.readUtf8();
        }
        frameCallback.onClose(code, reason);
        closed = true;
        break;
      default:
        throw new IllegalStateException("Unknown control opcode: " + toHexString(opcode));
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void readMessageFrame() throws IOException {
    PayloadType type;
    switch (opcode) {
      case OPCODE_TEXT:
        type = PayloadType.TEXT;
        break;
      case OPCODE_BINARY:
        type = PayloadType.BINARY;
        break;
      default:
        throw new IllegalStateException("Unknown opcode: " + toHexString(opcode));
    }

    messageClosed = false;
    frameCallback.onMessage(Okio.buffer(framedMessageSource), type);
    if (!messageClosed) {
      throw new IllegalStateException("Listener failed to call close on message payload.");
    }
  } ##FSTMerge## private void readMessageFrame() throws IOException {
    PayloadType type;
    switch (opcode) {
      case OPCODE_TEXT:
        type = PayloadType.TEXT;
        break;
      case OPCODE_BINARY:
        type = PayloadType.BINARY;
        break;
      default:
        throw new IllegalStateException("Unknown opcode: " + toHexString(opcode));
    }

    messageClosed = false;
    frameCallback.onMessage(Okio.buffer(framedMessageSource), type);
    if (!messageClosed) {
      throw new IllegalStateException("Listener failed to call close on message payload.");
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void readUntilNonControlFrame() throws IOException {
    while (!closed) {
      readHeader();
      if (!isControlFrame) {
        break;
      }
      readControlFrame();
    }
  } ##FSTMerge## private void readUntilNonControlFrame() throws IOException {
    while (!closed) {
      readHeader();
      if (!isControlFrame) {
        break;
      }
      readControlFrame();
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketReader.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final ##FSTMerge## private final
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketReader.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements Source ##FSTMerge## implements Source
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public long read(Buffer sink, long byteCount) throws IOException {
      if (closed) throw new IOException("Closed");
      if (messageClosed) throw new IllegalStateException("Closed");

      if (frameBytesRead == frameLength) {
        if (isFinalFrame) return -1; // We are exhausted and have no continuations.

        readUntilNonControlFrame();
        if (opcode != OPCODE_CONTINUATION) {
          throw new ProtocolException("Expected continuation opcode. Got: " + toHexString(opcode));
        }
        if (isFinalFrame && frameLength == 0) {
          return -1; // Fast-path for empty final frame.
        }
      }

      long toRead = Math.min(byteCount, frameLength - frameBytesRead);

      long read;
      if (isMasked) {
        toRead = Math.min(toRead, maskBuffer.length);
        read = source.read(maskBuffer, 0, (int) toRead);
        if (read == -1) throw new EOFException();
        toggleMask(maskBuffer, read, maskKey, frameBytesRead);
        sink.write(maskBuffer, 0, (int) read);
      } else {
        read = source.read(sink, toRead);
        if (read == -1) throw new EOFException();
      }

      frameBytesRead += read;
      return read;
    } ##FSTMerge## @Override public long read(Buffer sink, long byteCount) throws IOException {
      if (closed) throw new IOException("Closed");
      if (messageClosed) throw new IllegalStateException("Closed");

      if (frameBytesRead == frameLength) {
        if (isFinalFrame) return -1; // We are exhausted and have no continuations.

        readUntilNonControlFrame();
        if (opcode != OPCODE_CONTINUATION) {
          throw new ProtocolException("Expected continuation opcode. Got: " + toHexString(opcode));
        }
        if (isFinalFrame && frameLength == 0) {
          return -1; // Fast-path for empty final frame.
        }
      }

      long toRead = Math.min(byteCount, frameLength - frameBytesRead);

      long read;
      if (isMasked) {
        toRead = Math.min(toRead, maskBuffer.length);
        read = source.read(maskBuffer, 0, (int) toRead);
        if (read == -1) throw new EOFException();
        toggleMask(maskBuffer, read, maskKey, frameBytesRead);
        sink.write(maskBuffer, 0, (int) read);
      } else {
        read = source.read(sink, toRead);
        if (read == -1) throw new EOFException();
      }

      frameBytesRead += read;
      return read;
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public Timeout timeout() {
      return source.timeout();
    } ##FSTMerge## @Override public Timeout timeout() {
      return source.timeout();
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public void close() throws IOException {
      if (messageClosed) return;
      messageClosed = true;
      if (closed) return;

      // Exhaust the remainder of the message, if any.
      source.skip(frameLength - frameBytesRead);
      while (!isFinalFrame) {
        readUntilNonControlFrame();
        source.skip(frameLength);
      }
    } ##FSTMerge## @Override public void close() throws IOException {
      if (messageClosed) return;
      messageClosed = true;
      if (closed) return;

      // Exhaust the remainder of the message, if any.
      source.skip(frameLength - frameBytesRead);
      while (!isFinalFrame) {
        readUntilNonControlFrame();
        source.skip(frameLength);
      }
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketReader.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketListener.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void onOpen(WebSocket webSocket, Request request, Response response) throws IOException; ##FSTMerge## void onOpen(WebSocket webSocket, Request request, Response response) throws IOException;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketListener.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void onMessage(BufferedSource payload, PayloadType type) throws IOException; ##FSTMerge## void onMessage(BufferedSource payload, PayloadType type) throws IOException;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketListener.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void onPong(Buffer payload); ##FSTMerge## void onPong(Buffer payload);
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketListener.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void onClose(int code, String reason); ##FSTMerge## void onClose(int code, String reason);
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketListener.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void onFailure(IOException e); ##FSTMerge## void onFailure(IOException e);
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketListener.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketCall.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static WebSocketCall newWebSocketCall(OkHttpClient client, Request request) {
    return new WebSocketCall(client, request);
  } ##FSTMerge## public static WebSocketCall newWebSocketCall(OkHttpClient client, Request request) {
    return new WebSocketCall(client, request);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketCall.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final Request request; ##FSTMerge## private final Request request;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketCall.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final Call call; ##FSTMerge## private final Call call;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketCall.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final Random random; ##FSTMerge## private final Random random;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketCall.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final String key; ##FSTMerge## private final String key;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketCall.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## protected WebSocketCall(OkHttpClient client, Request request) {
    this(client, request, new SecureRandom());
  } ##FSTMerge## protected WebSocketCall(OkHttpClient client, Request request) {
    this(client, request, new SecureRandom());
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketCall.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## WebSocketCall(OkHttpClient client, Request request, Random random) {
    if (!"GET".equals(request.method())) {
      throw new IllegalArgumentException("Request must be GET: " + request.method());
    }
    String url = request.urlString();
    String httpUrl;
    if (url.startsWith("ws://")) {
      httpUrl = "http://" + url.substring(5);
    } else if (url.startsWith("wss://")) {
      httpUrl = "https://" + url.substring(6);
    } else if (url.startsWith("http://") || url.startsWith("https://")) {
      httpUrl = url;
    } else {
      throw new IllegalArgumentException(
          "Request url must use 'ws', 'wss', 'http', or 'https' scheme: " + url);
    }

    this.random = random;

    byte[] nonce = new byte[16];
    random.nextBytes(nonce);
    key = ByteString.of(nonce).base64();

    // Copy the client. Otherwise changes (socket factory, redirect policy,
    // etc.) may incorrectly be reflected in the request when it is executed.
    client = client.clone();
    // Force HTTP/1.1 until the WebSocket over HTTP/2 version is finalized.
    client.setProtocols(Collections.singletonList(com.squareup.okhttp.Protocol.HTTP_1_1));

    request = request.newBuilder()
        .url(httpUrl)
        .header("Upgrade", "websocket")
        .header("Connection", "Upgrade")
        .header("Sec-WebSocket-Key", key)
        .header("Sec-WebSocket-Version", "13")
        .build();
    this.request = request;

    call = client.newCall(request);
  } ##FSTMerge## WebSocketCall(OkHttpClient client, Request request, Random random) {
    if (!"GET".equals(request.method())) {
      throw new IllegalArgumentException("Request must be GET: " + request.method());
    }
    String url = request.urlString();
    String httpUrl;
    if (url.startsWith("ws://")) {
      httpUrl = "http://" + url.substring(5);
    } else if (url.startsWith("wss://")) {
      httpUrl = "https://" + url.substring(6);
    } else if (url.startsWith("http://") || url.startsWith("https://")) {
      httpUrl = url;
    } else {
      throw new IllegalArgumentException(
          "Request url must use 'ws', 'wss', 'http', or 'https' scheme: " + url);
    }

    this.random = random;

    byte[] nonce = new byte[16];
    random.nextBytes(nonce);
    key = ByteString.of(nonce).base64();

    // Copy the client. Otherwise changes (socket factory, redirect policy,
    // etc.) may incorrectly be reflected in the request when it is executed.
    client = client.clone();
    // Force HTTP/1.1 until the WebSocket over HTTP/2 version is finalized.
    client.setProtocols(Collections.singletonList(com.squareup.okhttp.Protocol.HTTP_1_1));

    request = request.newBuilder()
        .url(httpUrl)
        .header("Upgrade", "websocket")
        .header("Connection", "Upgrade")
        .header("Sec-WebSocket-Key", key)
        .header("Sec-WebSocket-Version", "13")
        .build();
    this.request = request;

    call = client.newCall(request);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketCall.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void enqueue(final WebSocketListener listener) {
    Callback responseCallback = new Callback() {
      @Override public void onResponse(Response response) throws IOException {
        try {
          createWebSocket(response, listener);
        } catch (IOException e) {
          listener.onFailure(e);
        }
      }

      @Override public void onFailure(Request request, IOException e) {
        listener.onFailure(e);
      }
    };
    // TODO call.enqueue(responseCallback, true);
    Internal.instance.callEnqueue(call, responseCallback, true);
  } ##FSTMerge## public void enqueue(final WebSocketListener listener) {
    Callback responseCallback = new Callback() {
      @Override public void onResponse(Response response) throws IOException {
        try {
          createWebSocket(response, listener);
        } catch (IOException e) {
          listener.onFailure(e);
        }
      }

      @Override public void onFailure(Request request, IOException e) {
        listener.onFailure(e);
      }
    };
    // TODO call.enqueue(responseCallback, true);
    Internal.instance.callEnqueue(call, responseCallback, true);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketCall.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void cancel() {
    call.cancel();
  } ##FSTMerge## public void cancel() {
    call.cancel();
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketCall.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void createWebSocket(Response response, WebSocketListener listener)
      throws IOException {
    if (response.code() != 101) {
      // TODO call.engine.releaseConnection();
      Internal.instance.callEngineReleaseConnection(call);
      throw new ProtocolException("Expected HTTP 101 response but was '"
          + response.code()
          + " "
          + response.message()
          + "'");
    }

    String headerConnection = response.header("Connection");
    if (!"Upgrade".equalsIgnoreCase(headerConnection)) {
      throw new ProtocolException(
          "Expected 'Connection' header value 'Upgrade' but was '" + headerConnection + "'");
    }
    String headerUpgrade = response.header("Upgrade");
    if (!"websocket".equalsIgnoreCase(headerUpgrade)) {
      throw new ProtocolException(
          "Expected 'Upgrade' header value 'websocket' but was '" + headerUpgrade + "'");
    }
    String headerAccept = response.header("Sec-WebSocket-Accept");
    String acceptExpected = Util.shaBase64(key + WebSocketProtocol.ACCEPT_MAGIC);
    if (!acceptExpected.equals(headerAccept)) {
      throw new ProtocolException("Expected 'Sec-WebSocket-Accept' header value '"
          + acceptExpected
          + "' but was '"
          + headerAccept
          + "'");
    }

    // TODO connection = call.engine.getConnection();
    Connection connection = Internal.instance.callEngineGetConnection(call);
    // TODO if (!connection.clearOwner()) {
    if (!Internal.instance.clearOwner(connection)) {
      throw new IllegalStateException("Unable to take ownership of connection.");
    }

    Socket socket = connection.getSocket();
    BufferedSource source = Okio.buffer(Okio.source(socket));
    BufferedSink sink = Okio.buffer(Okio.sink(socket));

    final RealWebSocket webSocket =
        new ConnectionWebSocket(response, connection, source, sink, random, listener);

    // Start a dedicated thread for reading the web socket.
    new Thread(new NamedRunnable("OkHttp WebSocket reader %s", request.urlString()) {
      @Override protected void execute() {
        while (webSocket.readMessage()) {
        }
      }
    }).start();

    // TODO connection.setOwner(webSocket);
    Internal.instance.connectionSetOwner(connection, webSocket);

    listener.onOpen(webSocket, request, response);
  } ##FSTMerge## private void createWebSocket(Response response, WebSocketListener listener)
      throws IOException {
    if (response.code() != 101) {
      // TODO call.engine.releaseConnection();
      Internal.instance.callEngineReleaseConnection(call);
      throw new ProtocolException("Expected HTTP 101 response but was '"
          + response.code()
          + " "
          + response.message()
          + "'");
    }

    String headerConnection = response.header("Connection");
    if (!"Upgrade".equalsIgnoreCase(headerConnection)) {
      throw new ProtocolException(
          "Expected 'Connection' header value 'Upgrade' but was '" + headerConnection + "'");
    }
    String headerUpgrade = response.header("Upgrade");
    if (!"websocket".equalsIgnoreCase(headerUpgrade)) {
      throw new ProtocolException(
          "Expected 'Upgrade' header value 'websocket' but was '" + headerUpgrade + "'");
    }
    String headerAccept = response.header("Sec-WebSocket-Accept");
    String acceptExpected = Util.shaBase64(key + WebSocketProtocol.ACCEPT_MAGIC);
    if (!acceptExpected.equals(headerAccept)) {
      throw new ProtocolException("Expected 'Sec-WebSocket-Accept' header value '"
          + acceptExpected
          + "' but was '"
          + headerAccept
          + "'");
    }

    // TODO connection = call.engine.getConnection();
    Connection connection = Internal.instance.callEngineGetConnection(call);
    // TODO if (!connection.clearOwner()) {
    if (!Internal.instance.clearOwner(connection)) {
      throw new IllegalStateException("Unable to take ownership of connection.");
    }

    Socket socket = connection.getSocket();
    BufferedSource source = Okio.buffer(Okio.source(socket));
    BufferedSink sink = Okio.buffer(Okio.sink(socket));

    final RealWebSocket webSocket =
        new ConnectionWebSocket(response, connection, source, sink, random, listener);

    // Start a dedicated thread for reading the web socket.
    new Thread(new NamedRunnable("OkHttp WebSocket reader %s", request.urlString()) {
      @Override protected void execute() {
        while (webSocket.readMessage()) {
        }
      }
    }).start();

    // TODO connection.setOwner(webSocket);
    Internal.instance.connectionSetOwner(connection, webSocket);

    listener.onOpen(webSocket, request, response);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketCall.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static ##FSTMerge## private static
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketCall.java
############## CONFLICT ##############
Conflict type: ExtendsList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## extends RealWebSocket ##FSTMerge## extends RealWebSocket
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketCall.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final Connection connection; ##FSTMerge## private final Connection connection;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketCall.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ConnectionWebSocket(Response response, Connection connection, BufferedSource source,
        BufferedSink sink, Random random, WebSocketListener listener) {
      super(true /* is client */, source, sink, random, listener, response.request().urlString());
      this.connection = connection;
    } ##FSTMerge## public ConnectionWebSocket(Response response, Connection connection, BufferedSource source,
        BufferedSink sink, Random random, WebSocketListener listener) {
      super(true /* is client */, source, sink, random, listener, response.request().urlString());
      this.connection = connection;
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketCall.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override protected void closeConnection() throws IOException {
      // TODO connection.closeIfOwnedBy(this);
      Internal.instance.closeIfOwnedBy(connection, this);
    } ##FSTMerge## @Override protected void closeConnection() throws IOException {
      // TODO connection.closeIfOwnedBy(this);
      Internal.instance.closeIfOwnedBy(connection, this);
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketCall.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocket.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## BufferedSink newMessageSink(WebSocket.PayloadType type); ##FSTMerge## BufferedSink newMessageSink(WebSocket.PayloadType type);
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocket.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void sendMessage(WebSocket.PayloadType type, Buffer payload) throws IOException; ##FSTMerge## void sendMessage(WebSocket.PayloadType type, Buffer payload) throws IOException;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocket.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void sendPing(Buffer payload) throws IOException; ##FSTMerge## void sendPing(Buffer payload) throws IOException;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocket.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void close(int code, String reason) throws IOException; ##FSTMerge## void close(int code, String reason) throws IOException;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocket.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public abstract ##FSTMerge## public abstract
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/RealWebSocket.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements WebSocket ##FSTMerge## implements WebSocket
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/RealWebSocket.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static final int CLOSE_PROTOCOL_EXCEPTION = 1002; ##FSTMerge## private static final int CLOSE_PROTOCOL_EXCEPTION = 1002;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/RealWebSocket.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final WebSocketWriter writer; ##FSTMerge## private final WebSocketWriter writer;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/RealWebSocket.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final WebSocketReader reader; ##FSTMerge## private final WebSocketReader reader;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/RealWebSocket.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final WebSocketListener listener; ##FSTMerge## private final WebSocketListener listener;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/RealWebSocket.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private volatile boolean writerSentClose; ##FSTMerge## private volatile boolean writerSentClose;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/RealWebSocket.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private volatile boolean readerSentClose; ##FSTMerge## private volatile boolean readerSentClose;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/RealWebSocket.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final Object closeLock = new Object(); ##FSTMerge## private final Object closeLock = new Object();
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/RealWebSocket.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public RealWebSocket(boolean isClient, BufferedSource source, BufferedSink sink, Random random,
      final WebSocketListener listener, final String url) {
    this.listener = listener;

    // Pings come in on the reader thread. This executor contends with callers for writing pongs.
    final ThreadPoolExecutor pongExecutor = new ThreadPoolExecutor(1, 1, 1, SECONDS,
        new LinkedBlockingDeque<Runnable>(),
        Util.threadFactory(String.format("OkHttp %s WebSocket", url), true));
    pongExecutor.allowCoreThreadTimeOut(true);

    writer = new WebSocketWriter(isClient, sink, random);
    reader = new WebSocketReader(isClient, source, new FrameCallback() {
      @Override public void onMessage(BufferedSource source, PayloadType type) throws IOException {
        listener.onMessage(source, type);
      }

      @Override public void onPing(final Buffer buffer) {
        pongExecutor.execute(new NamedRunnable("OkHttp %s WebSocket Pong", url) {
          @Override protected void execute() {
            try {
              writer.writePong(buffer);
            } catch (IOException ignored) {
            }
          }
        });
      }

      @Override public void onPong(Buffer buffer) {
        listener.onPong(buffer);
      }

      @Override public void onClose(int code, String reason) throws IOException {
        peerClose(code, reason);
      }
    });
  } ##FSTMerge## public RealWebSocket(boolean isClient, BufferedSource source, BufferedSink sink, Random random,
      final WebSocketListener listener, final String url) {
    this.listener = listener;

    // Pings come in on the reader thread. This executor contends with callers for writing pongs.
    final ThreadPoolExecutor pongExecutor = new ThreadPoolExecutor(1, 1, 1, SECONDS,
        new LinkedBlockingDeque<Runnable>(),
        Util.threadFactory(String.format("OkHttp %s WebSocket", url), true));
    pongExecutor.allowCoreThreadTimeOut(true);

    writer = new WebSocketWriter(isClient, sink, random);
    reader = new WebSocketReader(isClient, source, new FrameCallback() {
      @Override public void onMessage(BufferedSource source, PayloadType type) throws IOException {
        listener.onMessage(source, type);
      }

      @Override public void onPing(final Buffer buffer) {
        pongExecutor.execute(new NamedRunnable("OkHttp %s WebSocket Pong", url) {
          @Override protected void execute() {
            try {
              writer.writePong(buffer);
            } catch (IOException ignored) {
            }
          }
        });
      }

      @Override public void onPong(Buffer buffer) {
        listener.onPong(buffer);
      }

      @Override public void onClose(int code, String reason) throws IOException {
        peerClose(code, reason);
      }
    });
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/RealWebSocket.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public boolean readMessage() {
    try {
      reader.processNextFrame();
      return !readerSentClose;
    } catch (IOException e) {
      readerErrorClose(e);
      return false;
    }
  } ##FSTMerge## public boolean readMessage() {
    try {
      reader.processNextFrame();
      return !readerSentClose;
    } catch (IOException e) {
      readerErrorClose(e);
      return false;
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/RealWebSocket.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public BufferedSink newMessageSink(PayloadType type) {
    if (writerSentClose) throw new IllegalStateException("Closed");
    return writer.newMessageSink(type);
  } ##FSTMerge## @Override public BufferedSink newMessageSink(PayloadType type) {
    if (writerSentClose) throw new IllegalStateException("Closed");
    return writer.newMessageSink(type);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/RealWebSocket.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public void sendMessage(PayloadType type, Buffer payload) throws IOException {
    if (writerSentClose) throw new IllegalStateException("Closed");
    writer.sendMessage(type, payload);
  } ##FSTMerge## @Override public void sendMessage(PayloadType type, Buffer payload) throws IOException {
    if (writerSentClose) throw new IllegalStateException("Closed");
    writer.sendMessage(type, payload);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/RealWebSocket.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public void sendPing(Buffer payload) throws IOException {
    if (writerSentClose) throw new IllegalStateException("Closed");
    writer.writePing(payload);
  } ##FSTMerge## @Override public void sendPing(Buffer payload) throws IOException {
    if (writerSentClose) throw new IllegalStateException("Closed");
    writer.writePing(payload);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/RealWebSocket.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void sendPong(Buffer payload) throws IOException {
    if (writerSentClose) throw new IllegalStateException("Closed");
    writer.writePong(payload);
  } ##FSTMerge## public void sendPong(Buffer payload) throws IOException {
    if (writerSentClose) throw new IllegalStateException("Closed");
    writer.writePong(payload);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/RealWebSocket.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public void close(int code, String reason) throws IOException {
    if (writerSentClose) throw new IllegalStateException("Closed");

    boolean closeConnection;
    synchronized (closeLock) {
      writerSentClose = true;

      // If the reader has also indicated a desire to close we will close the connection.
      closeConnection = readerSentClose;
    }

    writer.writeClose(code, reason);

    if (closeConnection) {
      closeConnection();
    }
  } ##FSTMerge## @Override public void close(int code, String reason) throws IOException {
    if (writerSentClose) throw new IllegalStateException("Closed");

    boolean closeConnection;
    synchronized (closeLock) {
      writerSentClose = true;

      // If the reader has also indicated a desire to close we will close the connection.
      closeConnection = readerSentClose;
    }

    writer.writeClose(code, reason);

    if (closeConnection) {
      closeConnection();
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/RealWebSocket.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void peerClose(int code, String reason) throws IOException {
    boolean writeCloseResponse;
    synchronized (closeLock) {
      readerSentClose = true;

      // If the writer has not indicated a desire to close we will write a close response.
      writeCloseResponse = !writerSentClose;
    }

    if (writeCloseResponse) {
      // The reader thread will read no more frames so use it to send the response.
      writer.writeClose(code, reason);
    }

    closeConnection();

    listener.onClose(code, reason);
  } ##FSTMerge## private void peerClose(int code, String reason) throws IOException {
    boolean writeCloseResponse;
    synchronized (closeLock) {
      readerSentClose = true;

      // If the writer has not indicated a desire to close we will write a close response.
      writeCloseResponse = !writerSentClose;
    }

    if (writeCloseResponse) {
      // The reader thread will read no more frames so use it to send the response.
      writer.writeClose(code, reason);
    }

    closeConnection();

    listener.onClose(code, reason);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/RealWebSocket.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void readerErrorClose(IOException e) {
    boolean writeCloseResponse;
    synchronized (closeLock) {
      readerSentClose = true;

      // If the writer has not closed we will close the connection.
      writeCloseResponse = !writerSentClose;
    }

    if (writeCloseResponse) {
      if (e instanceof ProtocolException) {
        // For protocol exceptions, try to inform the server of such.
        try {
          writer.writeClose(CLOSE_PROTOCOL_EXCEPTION, null);
        } catch (IOException ignored) {
        }
      }
    }

    try {
      closeConnection();
    } catch (IOException ignored) {
    }

    listener.onFailure(e);
  } ##FSTMerge## private void readerErrorClose(IOException e) {
    boolean writeCloseResponse;
    synchronized (closeLock) {
      readerSentClose = true;

      // If the writer has not closed we will close the connection.
      writeCloseResponse = !writerSentClose;
    }

    if (writeCloseResponse) {
      if (e instanceof ProtocolException) {
        // For protocol exceptions, try to inform the server of such.
        try {
          writer.writeClose(CLOSE_PROTOCOL_EXCEPTION, null);
        } catch (IOException ignored) {
        }
      }
    }

    try {
      closeConnection();
    } catch (IOException ignored) {
    }

    listener.onFailure(e);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/RealWebSocket.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## protected abstract void closeConnection() throws IOException; ##FSTMerge## protected abstract void closeConnection() throws IOException;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/ws/RealWebSocket.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Variant.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## Protocol getProtocol(); ##FSTMerge## Protocol getProtocol();
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Variant.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## FrameReader newReader(BufferedSource source, boolean client); ##FSTMerge## FrameReader newReader(BufferedSource source, boolean client);
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Variant.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## FrameWriter newWriter(BufferedSink sink, boolean client); ##FSTMerge## FrameWriter newWriter(BufferedSink sink, boolean client);
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Variant.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final ##FSTMerge## public final
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements Variant ##FSTMerge## implements Variant
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public Protocol getProtocol() {
    return Protocol.SPDY_3;
  } ##FSTMerge## @Override public Protocol getProtocol() {
    return Protocol.SPDY_3;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final int TYPE_DATA = 0x0; ##FSTMerge## static final int TYPE_DATA = 0x0;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final int TYPE_SYN_STREAM = 0x1; ##FSTMerge## static final int TYPE_SYN_STREAM = 0x1;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final int TYPE_SYN_REPLY = 0x2; ##FSTMerge## static final int TYPE_SYN_REPLY = 0x2;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final int TYPE_RST_STREAM = 0x3; ##FSTMerge## static final int TYPE_RST_STREAM = 0x3;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final int TYPE_SETTINGS = 0x4; ##FSTMerge## static final int TYPE_SETTINGS = 0x4;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final int TYPE_PING = 0x6; ##FSTMerge## static final int TYPE_PING = 0x6;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final int TYPE_GOAWAY = 0x7; ##FSTMerge## static final int TYPE_GOAWAY = 0x7;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final int TYPE_HEADERS = 0x8; ##FSTMerge## static final int TYPE_HEADERS = 0x8;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final int TYPE_WINDOW_UPDATE = 0x9; ##FSTMerge## static final int TYPE_WINDOW_UPDATE = 0x9;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final int FLAG_FIN = 0x1; ##FSTMerge## static final int FLAG_FIN = 0x1;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final int FLAG_UNIDIRECTIONAL = 0x2; ##FSTMerge## static final int FLAG_UNIDIRECTIONAL = 0x2;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final int VERSION = 3; ##FSTMerge## static final int VERSION = 3;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final byte[] DICTIONARY; ##FSTMerge## static final byte[] DICTIONARY;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public FrameReader newReader(BufferedSource source, boolean client) {
    return new Reader(source, client);
  } ##FSTMerge## @Override public FrameReader newReader(BufferedSource source, boolean client) {
    return new Reader(source, client);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public FrameWriter newWriter(BufferedSink sink, boolean client) {
    return new Writer(sink, client);
  } ##FSTMerge## @Override public FrameWriter newWriter(BufferedSink sink, boolean client) {
    return new Writer(sink, client);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final ##FSTMerge## static final
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements FrameReader ##FSTMerge## implements FrameReader
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final BufferedSource source; ##FSTMerge## private final BufferedSource source;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final boolean client; ##FSTMerge## private final boolean client;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final NameValueBlockReader headerBlockReader; ##FSTMerge## private final NameValueBlockReader headerBlockReader;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## Reader(BufferedSource source, boolean client) {
      this.source = source;
      this.headerBlockReader = new NameValueBlockReader(this.source);
      this.client = client;
    } ##FSTMerge## Reader(BufferedSource source, boolean client) {
      this.source = source;
      this.headerBlockReader = new NameValueBlockReader(this.source);
      this.client = client;
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public void readConnectionPreface() {
    } ##FSTMerge## @Override public void readConnectionPreface() {
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public boolean nextFrame(Handler handler) throws IOException {
      int w1;
      int w2;
      try {
        w1 = source.readInt();
        w2 = source.readInt();
      } catch (IOException e) {
        return false; // This might be a normal socket close.
      }

      boolean control = (w1 & 0x80000000) != 0;
      int flags = (w2 & 0xff000000) >>> 24;
      int length = (w2 & 0xffffff);

      if (control) {
        int version = (w1 & 0x7fff0000) >>> 16;
        int type = (w1 & 0xffff);

        if (version != 3) {
          throw new ProtocolException("version != 3: " + version);
        }

        switch (type) {
          case TYPE_SYN_STREAM:
            readSynStream(handler, flags, length);
            return true;

          case TYPE_SYN_REPLY:
            readSynReply(handler, flags, length);
            return true;

          case TYPE_RST_STREAM:
            readRstStream(handler, flags, length);
            return true;

          case TYPE_SETTINGS:
            readSettings(handler, flags, length);
            return true;

          case TYPE_PING:
            readPing(handler, flags, length);
            return true;

          case TYPE_GOAWAY:
            readGoAway(handler, flags, length);
            return true;

          case TYPE_HEADERS:
            readHeaders(handler, flags, length);
            return true;

          case TYPE_WINDOW_UPDATE:
            readWindowUpdate(handler, flags, length);
            return true;

          default:
            source.skip(length);
            return true;
        }
      } else {
        int streamId = w1 & 0x7fffffff;
        boolean inFinished = (flags & FLAG_FIN) != 0;
        handler.data(inFinished, streamId, source, length);
        return true;
      }
    } ##FSTMerge## @Override public boolean nextFrame(Handler handler) throws IOException {
      int w1;
      int w2;
      try {
        w1 = source.readInt();
        w2 = source.readInt();
      } catch (IOException e) {
        return false; // This might be a normal socket close.
      }

      boolean control = (w1 & 0x80000000) != 0;
      int flags = (w2 & 0xff000000) >>> 24;
      int length = (w2 & 0xffffff);

      if (control) {
        int version = (w1 & 0x7fff0000) >>> 16;
        int type = (w1 & 0xffff);

        if (version != 3) {
          throw new ProtocolException("version != 3: " + version);
        }

        switch (type) {
          case TYPE_SYN_STREAM:
            readSynStream(handler, flags, length);
            return true;

          case TYPE_SYN_REPLY:
            readSynReply(handler, flags, length);
            return true;

          case TYPE_RST_STREAM:
            readRstStream(handler, flags, length);
            return true;

          case TYPE_SETTINGS:
            readSettings(handler, flags, length);
            return true;

          case TYPE_PING:
            readPing(handler, flags, length);
            return true;

          case TYPE_GOAWAY:
            readGoAway(handler, flags, length);
            return true;

          case TYPE_HEADERS:
            readHeaders(handler, flags, length);
            return true;

          case TYPE_WINDOW_UPDATE:
            readWindowUpdate(handler, flags, length);
            return true;

          default:
            source.skip(length);
            return true;
        }
      } else {
        int streamId = w1 & 0x7fffffff;
        boolean inFinished = (flags & FLAG_FIN) != 0;
        handler.data(inFinished, streamId, source, length);
        return true;
      }
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void readSynStream(Handler handler, int flags, int length) throws IOException {
      int w1 = source.readInt();
      int w2 = source.readInt();
      int streamId = w1 & 0x7fffffff;
      int associatedStreamId = w2 & 0x7fffffff;
      source.readShort(); // int priority = (s3 & 0xe000) >>> 13; int slot = s3 & 0xff;
      List<Header> headerBlock = headerBlockReader.readNameValueBlock(length - 10);

      boolean inFinished = (flags & FLAG_FIN) != 0;
      boolean outFinished = (flags & FLAG_UNIDIRECTIONAL) != 0;
      handler.headers(outFinished, inFinished, streamId, associatedStreamId, headerBlock,
          HeadersMode.SPDY_SYN_STREAM);
    } ##FSTMerge## private void readSynStream(Handler handler, int flags, int length) throws IOException {
      int w1 = source.readInt();
      int w2 = source.readInt();
      int streamId = w1 & 0x7fffffff;
      int associatedStreamId = w2 & 0x7fffffff;
      source.readShort(); // int priority = (s3 & 0xe000) >>> 13; int slot = s3 & 0xff;
      List<Header> headerBlock = headerBlockReader.readNameValueBlock(length - 10);

      boolean inFinished = (flags & FLAG_FIN) != 0;
      boolean outFinished = (flags & FLAG_UNIDIRECTIONAL) != 0;
      handler.headers(outFinished, inFinished, streamId, associatedStreamId, headerBlock,
          HeadersMode.SPDY_SYN_STREAM);
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void readSynReply(Handler handler, int flags, int length) throws IOException {
      int w1 = source.readInt();
      int streamId = w1 & 0x7fffffff;
      List<Header> headerBlock = headerBlockReader.readNameValueBlock(length - 4);
      boolean inFinished = (flags & FLAG_FIN) != 0;
      handler.headers(false, inFinished, streamId, -1, headerBlock, HeadersMode.SPDY_REPLY);
    } ##FSTMerge## private void readSynReply(Handler handler, int flags, int length) throws IOException {
      int w1 = source.readInt();
      int streamId = w1 & 0x7fffffff;
      List<Header> headerBlock = headerBlockReader.readNameValueBlock(length - 4);
      boolean inFinished = (flags & FLAG_FIN) != 0;
      handler.headers(false, inFinished, streamId, -1, headerBlock, HeadersMode.SPDY_REPLY);
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void readRstStream(Handler handler, int flags, int length) throws IOException {
      if (length != 8) throw ioException("TYPE_RST_STREAM length: %d != 8", length);
      int streamId = source.readInt() & 0x7fffffff;
      int errorCodeInt = source.readInt();
      ErrorCode errorCode = ErrorCode.fromSpdy3Rst(errorCodeInt);
      if (errorCode == null) {
        throw ioException("TYPE_RST_STREAM unexpected error code: %d", errorCodeInt);
      }
      handler.rstStream(streamId, errorCode);
    } ##FSTMerge## private void readRstStream(Handler handler, int flags, int length) throws IOException {
      if (length != 8) throw ioException("TYPE_RST_STREAM length: %d != 8", length);
      int streamId = source.readInt() & 0x7fffffff;
      int errorCodeInt = source.readInt();
      ErrorCode errorCode = ErrorCode.fromSpdy3Rst(errorCodeInt);
      if (errorCode == null) {
        throw ioException("TYPE_RST_STREAM unexpected error code: %d", errorCodeInt);
      }
      handler.rstStream(streamId, errorCode);
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void readHeaders(Handler handler, int flags, int length) throws IOException {
      int w1 = source.readInt();
      int streamId = w1 & 0x7fffffff;
      List<Header> headerBlock = headerBlockReader.readNameValueBlock(length - 4);
      handler.headers(false, false, streamId, -1, headerBlock, HeadersMode.SPDY_HEADERS);
    } ##FSTMerge## private void readHeaders(Handler handler, int flags, int length) throws IOException {
      int w1 = source.readInt();
      int streamId = w1 & 0x7fffffff;
      List<Header> headerBlock = headerBlockReader.readNameValueBlock(length - 4);
      handler.headers(false, false, streamId, -1, headerBlock, HeadersMode.SPDY_HEADERS);
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void readWindowUpdate(Handler handler, int flags, int length) throws IOException {
      if (length != 8) throw ioException("TYPE_WINDOW_UPDATE length: %d != 8", length);
      int w1 = source.readInt();
      int w2 = source.readInt();
      int streamId = w1 & 0x7fffffff;
      long increment = w2 & 0x7fffffff;
      if (increment == 0) throw ioException("windowSizeIncrement was 0", increment);
      handler.windowUpdate(streamId, increment);
    } ##FSTMerge## private void readWindowUpdate(Handler handler, int flags, int length) throws IOException {
      if (length != 8) throw ioException("TYPE_WINDOW_UPDATE length: %d != 8", length);
      int w1 = source.readInt();
      int w2 = source.readInt();
      int streamId = w1 & 0x7fffffff;
      long increment = w2 & 0x7fffffff;
      if (increment == 0) throw ioException("windowSizeIncrement was 0", increment);
      handler.windowUpdate(streamId, increment);
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void readPing(Handler handler, int flags, int length) throws IOException {
      if (length != 4) throw ioException("TYPE_PING length: %d != 4", length);
      int id = source.readInt();
      boolean ack = client == ((id & 1) == 1);
      handler.ping(ack, id, 0);
    } ##FSTMerge## private void readPing(Handler handler, int flags, int length) throws IOException {
      if (length != 4) throw ioException("TYPE_PING length: %d != 4", length);
      int id = source.readInt();
      boolean ack = client == ((id & 1) == 1);
      handler.ping(ack, id, 0);
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void readGoAway(Handler handler, int flags, int length) throws IOException {
      if (length != 8) throw ioException("TYPE_GOAWAY length: %d != 8", length);
      int lastGoodStreamId = source.readInt() & 0x7fffffff;
      int errorCodeInt = source.readInt();
      ErrorCode errorCode = ErrorCode.fromSpdyGoAway(errorCodeInt);
      if (errorCode == null) {
        throw ioException("TYPE_GOAWAY unexpected error code: %d", errorCodeInt);
      }
      handler.goAway(lastGoodStreamId, errorCode, ByteString.EMPTY);
    } ##FSTMerge## private void readGoAway(Handler handler, int flags, int length) throws IOException {
      if (length != 8) throw ioException("TYPE_GOAWAY length: %d != 8", length);
      int lastGoodStreamId = source.readInt() & 0x7fffffff;
      int errorCodeInt = source.readInt();
      ErrorCode errorCode = ErrorCode.fromSpdyGoAway(errorCodeInt);
      if (errorCode == null) {
        throw ioException("TYPE_GOAWAY unexpected error code: %d", errorCodeInt);
      }
      handler.goAway(lastGoodStreamId, errorCode, ByteString.EMPTY);
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void readSettings(Handler handler, int flags, int length) throws IOException {
      int numberOfEntries = source.readInt();
      if (length != 4 + 8 * numberOfEntries) {
        throw ioException("TYPE_SETTINGS length: %d != 4 + 8 * %d", length, numberOfEntries);
      }
      Settings settings = new Settings();
      for (int i = 0; i < numberOfEntries; i++) {
        int w1 = source.readInt();
        int value = source.readInt();
        int idFlags = (w1 & 0xff000000) >>> 24;
        int id = w1 & 0xffffff;
        settings.set(id, idFlags, value);
      }
      boolean clearPrevious = (flags & Settings.FLAG_CLEAR_PREVIOUSLY_PERSISTED_SETTINGS) != 0;
      handler.settings(clearPrevious, settings);
    } ##FSTMerge## private void readSettings(Handler handler, int flags, int length) throws IOException {
      int numberOfEntries = source.readInt();
      if (length != 4 + 8 * numberOfEntries) {
        throw ioException("TYPE_SETTINGS length: %d != 4 + 8 * %d", length, numberOfEntries);
      }
      Settings settings = new Settings();
      for (int i = 0; i < numberOfEntries; i++) {
        int w1 = source.readInt();
        int value = source.readInt();
        int idFlags = (w1 & 0xff000000) >>> 24;
        int id = w1 & 0xffffff;
        settings.set(id, idFlags, value);
      }
      boolean clearPrevious = (flags & Settings.FLAG_CLEAR_PREVIOUSLY_PERSISTED_SETTINGS) != 0;
      handler.settings(clearPrevious, settings);
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static IOException ioException(String message, Object... args) throws IOException {
      throw new IOException(String.format(message, args));
    } ##FSTMerge## private static IOException ioException(String message, Object... args) throws IOException {
      throw new IOException(String.format(message, args));
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public void close() throws IOException {
      headerBlockReader.close();
    } ##FSTMerge## @Override public void close() throws IOException {
      headerBlockReader.close();
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final ##FSTMerge## static final
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements FrameWriter ##FSTMerge## implements FrameWriter
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final BufferedSink sink; ##FSTMerge## private final BufferedSink sink;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final Buffer headerBlockBuffer; ##FSTMerge## private final Buffer headerBlockBuffer;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final BufferedSink headerBlockOut; ##FSTMerge## private final BufferedSink headerBlockOut;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final boolean client; ##FSTMerge## private final boolean client;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private boolean closed; ##FSTMerge## private boolean closed;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## Writer(BufferedSink sink, boolean client) {
      this.sink = sink;
      this.client = client;

      Deflater deflater = new Deflater();
      deflater.setDictionary(DICTIONARY);
      headerBlockBuffer = new Buffer();
      headerBlockOut = Okio.buffer(new DeflaterSink(headerBlockBuffer, deflater));
    } ##FSTMerge## Writer(BufferedSink sink, boolean client) {
      this.sink = sink;
      this.client = client;

      Deflater deflater = new Deflater();
      deflater.setDictionary(DICTIONARY);
      headerBlockBuffer = new Buffer();
      headerBlockOut = Okio.buffer(new DeflaterSink(headerBlockBuffer, deflater));
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public void ackSettings(Settings peerSettings) {
      // Do nothing: no ACK for SPDY/3 settings.
    } ##FSTMerge## @Override public void ackSettings(Settings peerSettings) {
      // Do nothing: no ACK for SPDY/3 settings.
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
    public void pushPromise(int streamId, int promisedStreamId, List<Header> requestHeaders)
        throws IOException {
      // Do nothing: no push promise for SPDY/3.
    } ##FSTMerge## @Override
    public void pushPromise(int streamId, int promisedStreamId, List<Header> requestHeaders)
        throws IOException {
      // Do nothing: no push promise for SPDY/3.
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public synchronized void connectionPreface() {
      // Do nothing: no connection preface for SPDY/3.
    } ##FSTMerge## @Override public synchronized void connectionPreface() {
      // Do nothing: no connection preface for SPDY/3.
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public synchronized void flush() throws IOException {
      if (closed) throw new IOException("closed");
      sink.flush();
    } ##FSTMerge## @Override public synchronized void flush() throws IOException {
      if (closed) throw new IOException("closed");
      sink.flush();
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public synchronized void synStream(boolean outFinished, boolean inFinished,
        int streamId, int associatedStreamId, List<Header> headerBlock)
        throws IOException {
      if (closed) throw new IOException("closed");
      writeNameValueBlockToBuffer(headerBlock);
      int length = (int) (10 + headerBlockBuffer.size());
      int type = TYPE_SYN_STREAM;
      int flags = (outFinished ? FLAG_FIN : 0) | (inFinished ? FLAG_UNIDIRECTIONAL : 0);

      int unused = 0;
      sink.writeInt(0x80000000 | (VERSION & 0x7fff) << 16 | type & 0xffff);
      sink.writeInt((flags & 0xff) << 24 | length & 0xffffff);
      sink.writeInt(streamId & 0x7fffffff);
      sink.writeInt(associatedStreamId & 0x7fffffff);
      sink.writeShort((unused & 0x7) << 13 | (unused & 0x1f) << 8 | (unused & 0xff));
      sink.writeAll(headerBlockBuffer);
      sink.flush();
    } ##FSTMerge## @Override public synchronized void synStream(boolean outFinished, boolean inFinished,
        int streamId, int associatedStreamId, List<Header> headerBlock)
        throws IOException {
      if (closed) throw new IOException("closed");
      writeNameValueBlockToBuffer(headerBlock);
      int length = (int) (10 + headerBlockBuffer.size());
      int type = TYPE_SYN_STREAM;
      int flags = (outFinished ? FLAG_FIN : 0) | (inFinished ? FLAG_UNIDIRECTIONAL : 0);

      int unused = 0;
      sink.writeInt(0x80000000 | (VERSION & 0x7fff) << 16 | type & 0xffff);
      sink.writeInt((flags & 0xff) << 24 | length & 0xffffff);
      sink.writeInt(streamId & 0x7fffffff);
      sink.writeInt(associatedStreamId & 0x7fffffff);
      sink.writeShort((unused & 0x7) << 13 | (unused & 0x1f) << 8 | (unused & 0xff));
      sink.writeAll(headerBlockBuffer);
      sink.flush();
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public synchronized void synReply(boolean outFinished, int streamId,
        List<Header> headerBlock) throws IOException {
      if (closed) throw new IOException("closed");
      writeNameValueBlockToBuffer(headerBlock);
      int type = TYPE_SYN_REPLY;
      int flags = (outFinished ? FLAG_FIN : 0);
      int length = (int) (headerBlockBuffer.size() + 4);

      sink.writeInt(0x80000000 | (VERSION & 0x7fff) << 16 | type & 0xffff);
      sink.writeInt((flags & 0xff) << 24 | length & 0xffffff);
      sink.writeInt(streamId & 0x7fffffff);
      sink.writeAll(headerBlockBuffer);
      sink.flush();
    } ##FSTMerge## @Override public synchronized void synReply(boolean outFinished, int streamId,
        List<Header> headerBlock) throws IOException {
      if (closed) throw new IOException("closed");
      writeNameValueBlockToBuffer(headerBlock);
      int type = TYPE_SYN_REPLY;
      int flags = (outFinished ? FLAG_FIN : 0);
      int length = (int) (headerBlockBuffer.size() + 4);

      sink.writeInt(0x80000000 | (VERSION & 0x7fff) << 16 | type & 0xffff);
      sink.writeInt((flags & 0xff) << 24 | length & 0xffffff);
      sink.writeInt(streamId & 0x7fffffff);
      sink.writeAll(headerBlockBuffer);
      sink.flush();
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public synchronized void headers(int streamId, List<Header> headerBlock)
        throws IOException {
      if (closed) throw new IOException("closed");
      writeNameValueBlockToBuffer(headerBlock);
      int flags = 0;
      int type = TYPE_HEADERS;
      int length = (int) (headerBlockBuffer.size() + 4);

      sink.writeInt(0x80000000 | (VERSION & 0x7fff) << 16 | type & 0xffff);
      sink.writeInt((flags & 0xff) << 24 | length & 0xffffff);
      sink.writeInt(streamId & 0x7fffffff);
      sink.writeAll(headerBlockBuffer);
    } ##FSTMerge## @Override public synchronized void headers(int streamId, List<Header> headerBlock)
        throws IOException {
      if (closed) throw new IOException("closed");
      writeNameValueBlockToBuffer(headerBlock);
      int flags = 0;
      int type = TYPE_HEADERS;
      int length = (int) (headerBlockBuffer.size() + 4);

      sink.writeInt(0x80000000 | (VERSION & 0x7fff) << 16 | type & 0xffff);
      sink.writeInt((flags & 0xff) << 24 | length & 0xffffff);
      sink.writeInt(streamId & 0x7fffffff);
      sink.writeAll(headerBlockBuffer);
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public synchronized void rstStream(int streamId, ErrorCode errorCode)
        throws IOException {
      if (closed) throw new IOException("closed");
      if (errorCode.spdyRstCode == -1) throw new IllegalArgumentException();
      int flags = 0;
      int type = TYPE_RST_STREAM;
      int length = 8;
      sink.writeInt(0x80000000 | (VERSION & 0x7fff) << 16 | type & 0xffff);
      sink.writeInt((flags & 0xff) << 24 | length & 0xffffff);
      sink.writeInt(streamId & 0x7fffffff);
      sink.writeInt(errorCode.spdyRstCode);
      sink.flush();
    } ##FSTMerge## @Override public synchronized void rstStream(int streamId, ErrorCode errorCode)
        throws IOException {
      if (closed) throw new IOException("closed");
      if (errorCode.spdyRstCode == -1) throw new IllegalArgumentException();
      int flags = 0;
      int type = TYPE_RST_STREAM;
      int length = 8;
      sink.writeInt(0x80000000 | (VERSION & 0x7fff) << 16 | type & 0xffff);
      sink.writeInt((flags & 0xff) << 24 | length & 0xffffff);
      sink.writeInt(streamId & 0x7fffffff);
      sink.writeInt(errorCode.spdyRstCode);
      sink.flush();
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public int maxDataLength() {
      return 16383;
    } ##FSTMerge## @Override public int maxDataLength() {
      return 16383;
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public synchronized void data(boolean outFinished, int streamId, Buffer source,
        int byteCount) throws IOException {
      int flags = (outFinished ? FLAG_FIN : 0);
      sendDataFrame(streamId, flags, source, byteCount);
    } ##FSTMerge## @Override public synchronized void data(boolean outFinished, int streamId, Buffer source,
        int byteCount) throws IOException {
      int flags = (outFinished ? FLAG_FIN : 0);
      sendDataFrame(streamId, flags, source, byteCount);
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void sendDataFrame(int streamId, int flags, Buffer buffer, int byteCount)
        throws IOException {
      if (closed) throw new IOException("closed");
      if (byteCount > 0xffffffL) {
        throw new IllegalArgumentException("FRAME_TOO_LARGE max size is 16Mib: " + byteCount);
      }
      sink.writeInt(streamId & 0x7fffffff);
      sink.writeInt((flags & 0xff) << 24 | byteCount & 0xffffff);
      if (byteCount > 0) {
        sink.write(buffer, byteCount);
      }
    } ##FSTMerge## void sendDataFrame(int streamId, int flags, Buffer buffer, int byteCount)
        throws IOException {
      if (closed) throw new IOException("closed");
      if (byteCount > 0xffffffL) {
        throw new IllegalArgumentException("FRAME_TOO_LARGE max size is 16Mib: " + byteCount);
      }
      sink.writeInt(streamId & 0x7fffffff);
      sink.writeInt((flags & 0xff) << 24 | byteCount & 0xffffff);
      if (byteCount > 0) {
        sink.write(buffer, byteCount);
      }
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void writeNameValueBlockToBuffer(List<Header> headerBlock) throws IOException {
      if (headerBlockBuffer.size() != 0) throw new IllegalStateException();
      headerBlockOut.writeInt(headerBlock.size());
      for (int i = 0, size = headerBlock.size(); i < size; i++) {
        ByteString name = headerBlock.get(i).name;
        headerBlockOut.writeInt(name.size());
        headerBlockOut.write(name);
        ByteString value = headerBlock.get(i).value;
        headerBlockOut.writeInt(value.size());
        headerBlockOut.write(value);
      }
      headerBlockOut.flush();
    } ##FSTMerge## private void writeNameValueBlockToBuffer(List<Header> headerBlock) throws IOException {
      if (headerBlockBuffer.size() != 0) throw new IllegalStateException();
      headerBlockOut.writeInt(headerBlock.size());
      for (int i = 0, size = headerBlock.size(); i < size; i++) {
        ByteString name = headerBlock.get(i).name;
        headerBlockOut.writeInt(name.size());
        headerBlockOut.write(name);
        ByteString value = headerBlock.get(i).value;
        headerBlockOut.writeInt(value.size());
        headerBlockOut.write(value);
      }
      headerBlockOut.flush();
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public synchronized void settings(Settings settings) throws IOException {
      if (closed) throw new IOException("closed");
      int type = TYPE_SETTINGS;
      int flags = 0;
      int size = settings.size();
      int length = 4 + size * 8;
      sink.writeInt(0x80000000 | (VERSION & 0x7fff) << 16 | type & 0xffff);
      sink.writeInt((flags & 0xff) << 24 | length & 0xffffff);
      sink.writeInt(size);
      for (int i = 0; i <= Settings.COUNT; i++) {
        if (!settings.isSet(i)) continue;
        int settingsFlags = settings.flags(i);
        sink.writeInt((settingsFlags & 0xff) << 24 | (i & 0xffffff));
        sink.writeInt(settings.get(i));
      }
      sink.flush();
    } ##FSTMerge## @Override public synchronized void settings(Settings settings) throws IOException {
      if (closed) throw new IOException("closed");
      int type = TYPE_SETTINGS;
      int flags = 0;
      int size = settings.size();
      int length = 4 + size * 8;
      sink.writeInt(0x80000000 | (VERSION & 0x7fff) << 16 | type & 0xffff);
      sink.writeInt((flags & 0xff) << 24 | length & 0xffffff);
      sink.writeInt(size);
      for (int i = 0; i <= Settings.COUNT; i++) {
        if (!settings.isSet(i)) continue;
        int settingsFlags = settings.flags(i);
        sink.writeInt((settingsFlags & 0xff) << 24 | (i & 0xffffff));
        sink.writeInt(settings.get(i));
      }
      sink.flush();
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public synchronized void ping(boolean reply, int payload1, int payload2)
        throws IOException {
      if (closed) throw new IOException("closed");
      boolean payloadIsReply = client != ((payload1 & 1) == 1);
      if (reply != payloadIsReply) throw new IllegalArgumentException("payload != reply");
      int type = TYPE_PING;
      int flags = 0;
      int length = 4;
      sink.writeInt(0x80000000 | (VERSION & 0x7fff) << 16 | type & 0xffff);
      sink.writeInt((flags & 0xff) << 24 | length & 0xffffff);
      sink.writeInt(payload1);
      sink.flush();
    } ##FSTMerge## @Override public synchronized void ping(boolean reply, int payload1, int payload2)
        throws IOException {
      if (closed) throw new IOException("closed");
      boolean payloadIsReply = client != ((payload1 & 1) == 1);
      if (reply != payloadIsReply) throw new IllegalArgumentException("payload != reply");
      int type = TYPE_PING;
      int flags = 0;
      int length = 4;
      sink.writeInt(0x80000000 | (VERSION & 0x7fff) << 16 | type & 0xffff);
      sink.writeInt((flags & 0xff) << 24 | length & 0xffffff);
      sink.writeInt(payload1);
      sink.flush();
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public synchronized void goAway(int lastGoodStreamId, ErrorCode errorCode,
        byte[] ignored) throws IOException {
      if (closed) throw new IOException("closed");
      if (errorCode.spdyGoAwayCode == -1) {
        throw new IllegalArgumentException("errorCode.spdyGoAwayCode == -1");
      }
      int type = TYPE_GOAWAY;
      int flags = 0;
      int length = 8;
      sink.writeInt(0x80000000 | (VERSION & 0x7fff) << 16 | type & 0xffff);
      sink.writeInt((flags & 0xff) << 24 | length & 0xffffff);
      sink.writeInt(lastGoodStreamId);
      sink.writeInt(errorCode.spdyGoAwayCode);
      sink.flush();
    } ##FSTMerge## @Override public synchronized void goAway(int lastGoodStreamId, ErrorCode errorCode,
        byte[] ignored) throws IOException {
      if (closed) throw new IOException("closed");
      if (errorCode.spdyGoAwayCode == -1) {
        throw new IllegalArgumentException("errorCode.spdyGoAwayCode == -1");
      }
      int type = TYPE_GOAWAY;
      int flags = 0;
      int length = 8;
      sink.writeInt(0x80000000 | (VERSION & 0x7fff) << 16 | type & 0xffff);
      sink.writeInt((flags & 0xff) << 24 | length & 0xffffff);
      sink.writeInt(lastGoodStreamId);
      sink.writeInt(errorCode.spdyGoAwayCode);
      sink.flush();
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public synchronized void windowUpdate(int streamId, long increment)
        throws IOException {
      if (closed) throw new IOException("closed");
      if (increment == 0 || increment > 0x7fffffffL) {
        throw new IllegalArgumentException(
            "windowSizeIncrement must be between 1 and 0x7fffffff: " + increment);
      }
      int type = TYPE_WINDOW_UPDATE;
      int flags = 0;
      int length = 8;
      sink.writeInt(0x80000000 | (VERSION & 0x7fff) << 16 | type & 0xffff);
      sink.writeInt((flags & 0xff) << 24 | length & 0xffffff);
      sink.writeInt(streamId);
      sink.writeInt((int) increment);
      sink.flush();
    } ##FSTMerge## @Override public synchronized void windowUpdate(int streamId, long increment)
        throws IOException {
      if (closed) throw new IOException("closed");
      if (increment == 0 || increment > 0x7fffffffL) {
        throw new IllegalArgumentException(
            "windowSizeIncrement must be between 1 and 0x7fffffff: " + increment);
      }
      int type = TYPE_WINDOW_UPDATE;
      int flags = 0;
      int length = 8;
      sink.writeInt(0x80000000 | (VERSION & 0x7fff) << 16 | type & 0xffff);
      sink.writeInt((flags & 0xff) << 24 | length & 0xffffff);
      sink.writeInt(streamId);
      sink.writeInt((int) increment);
      sink.flush();
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public synchronized void close() throws IOException {
      closed = true;
      Util.closeAll(sink, headerBlockOut);
    } ##FSTMerge## @Override public synchronized void close() throws IOException {
      closed = true;
      Util.closeAll(sink, headerBlockOut);
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Spdy3.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final ##FSTMerge## public final
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final int DEFAULT_INITIAL_WINDOW_SIZE = 64 * 1024; ##FSTMerge## static final int DEFAULT_INITIAL_WINDOW_SIZE = 64 * 1024;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final int FLAG_CLEAR_PREVIOUSLY_PERSISTED_SETTINGS = 0x1; ##FSTMerge## static final int FLAG_CLEAR_PREVIOUSLY_PERSISTED_SETTINGS = 0x1;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final int PERSIST_VALUE = 0x1; ##FSTMerge## static final int PERSIST_VALUE = 0x1;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final int PERSISTED = 0x2; ##FSTMerge## static final int PERSISTED = 0x2;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final int UPLOAD_BANDWIDTH = 1; ##FSTMerge## static final int UPLOAD_BANDWIDTH = 1;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final int HEADER_TABLE_SIZE = 1; ##FSTMerge## static final int HEADER_TABLE_SIZE = 1;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final int DOWNLOAD_BANDWIDTH = 2; ##FSTMerge## static final int DOWNLOAD_BANDWIDTH = 2;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final int ENABLE_PUSH = 2; ##FSTMerge## static final int ENABLE_PUSH = 2;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final int ROUND_TRIP_TIME = 3; ##FSTMerge## static final int ROUND_TRIP_TIME = 3;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final int MAX_CONCURRENT_STREAMS = 4; ##FSTMerge## static final int MAX_CONCURRENT_STREAMS = 4;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final int CURRENT_CWND = 5; ##FSTMerge## static final int CURRENT_CWND = 5;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final int MAX_FRAME_SIZE = 5; ##FSTMerge## static final int MAX_FRAME_SIZE = 5;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final int DOWNLOAD_RETRANS_RATE = 6; ##FSTMerge## static final int DOWNLOAD_RETRANS_RATE = 6;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final int MAX_HEADER_LIST_SIZE = 6; ##FSTMerge## static final int MAX_HEADER_LIST_SIZE = 6;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final int INITIAL_WINDOW_SIZE = 7; ##FSTMerge## static final int INITIAL_WINDOW_SIZE = 7;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final int CLIENT_CERTIFICATE_VECTOR_SIZE = 8; ##FSTMerge## static final int CLIENT_CERTIFICATE_VECTOR_SIZE = 8;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final int FLOW_CONTROL_OPTIONS = 10; ##FSTMerge## static final int FLOW_CONTROL_OPTIONS = 10;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final int COUNT = 10; ##FSTMerge## static final int COUNT = 10;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final int FLOW_CONTROL_OPTIONS_DISABLED = 0x1; ##FSTMerge## static final int FLOW_CONTROL_OPTIONS_DISABLED = 0x1;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private int set; ##FSTMerge## private int set;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private int persistValue; ##FSTMerge## private int persistValue;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private int persisted; ##FSTMerge## private int persisted;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final int[] values = new int[COUNT]; ##FSTMerge## private final int[] values = new int[COUNT];
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void clear() {
    set = persistValue = persisted = 0;
    Arrays.fill(values, 0);
  } ##FSTMerge## void clear() {
    set = persistValue = persisted = 0;
    Arrays.fill(values, 0);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## Settings set(int id, int idFlags, int value) {
    if (id >= values.length) {
      return this; // Discard unknown settings.
    }

    int bit = 1 << id;
    set |= bit;
    if ((idFlags & PERSIST_VALUE) != 0) {
      persistValue |= bit;
    } else {
      persistValue &= ~bit;
    }
    if ((idFlags & PERSISTED) != 0) {
      persisted |= bit;
    } else {
      persisted &= ~bit;
    }

    values[id] = value;
    return this;
  } ##FSTMerge## Settings set(int id, int idFlags, int value) {
    if (id >= values.length) {
      return this; // Discard unknown settings.
    }

    int bit = 1 << id;
    set |= bit;
    if ((idFlags & PERSIST_VALUE) != 0) {
      persistValue |= bit;
    } else {
      persistValue &= ~bit;
    }
    if ((idFlags & PERSISTED) != 0) {
      persisted |= bit;
    } else {
      persisted &= ~bit;
    }

    values[id] = value;
    return this;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## boolean isSet(int id) {
    int bit = 1 << id;
    return (set & bit) != 0;
  } ##FSTMerge## boolean isSet(int id) {
    int bit = 1 << id;
    return (set & bit) != 0;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## int get(int id) {
    return values[id];
  } ##FSTMerge## int get(int id) {
    return values[id];
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## int flags(int id) {
    int result = 0;
    if (isPersisted(id)) result |= Settings.PERSISTED;
    if (persistValue(id)) result |= Settings.PERSIST_VALUE;
    return result;
  } ##FSTMerge## int flags(int id) {
    int result = 0;
    if (isPersisted(id)) result |= Settings.PERSISTED;
    if (persistValue(id)) result |= Settings.PERSIST_VALUE;
    return result;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## int size() {
    return Integer.bitCount(set);
  } ##FSTMerge## int size() {
    return Integer.bitCount(set);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## int getUploadBandwidth(int defaultValue) {
    int bit = 1 << UPLOAD_BANDWIDTH;
    return (bit & set) != 0 ? values[UPLOAD_BANDWIDTH] : defaultValue;
  } ##FSTMerge## int getUploadBandwidth(int defaultValue) {
    int bit = 1 << UPLOAD_BANDWIDTH;
    return (bit & set) != 0 ? values[UPLOAD_BANDWIDTH] : defaultValue;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## int getHeaderTableSize() {
    int bit = 1 << HEADER_TABLE_SIZE;
    return (bit & set) != 0 ? values[HEADER_TABLE_SIZE] : -1;
  } ##FSTMerge## int getHeaderTableSize() {
    int bit = 1 << HEADER_TABLE_SIZE;
    return (bit & set) != 0 ? values[HEADER_TABLE_SIZE] : -1;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## int getDownloadBandwidth(int defaultValue) {
    int bit = 1 << DOWNLOAD_BANDWIDTH;
    return (bit & set) != 0 ? values[DOWNLOAD_BANDWIDTH] : defaultValue;
  } ##FSTMerge## int getDownloadBandwidth(int defaultValue) {
    int bit = 1 << DOWNLOAD_BANDWIDTH;
    return (bit & set) != 0 ? values[DOWNLOAD_BANDWIDTH] : defaultValue;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## boolean getEnablePush(boolean defaultValue) {
    int bit = 1 << ENABLE_PUSH;
    return ((bit & set) != 0 ? values[ENABLE_PUSH] : defaultValue ? 1 : 0) == 1;
  } ##FSTMerge## boolean getEnablePush(boolean defaultValue) {
    int bit = 1 << ENABLE_PUSH;
    return ((bit & set) != 0 ? values[ENABLE_PUSH] : defaultValue ? 1 : 0) == 1;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## int getRoundTripTime(int defaultValue) {
    int bit = 1 << ROUND_TRIP_TIME;
    return (bit & set) != 0 ? values[ROUND_TRIP_TIME] : defaultValue;
  } ##FSTMerge## int getRoundTripTime(int defaultValue) {
    int bit = 1 << ROUND_TRIP_TIME;
    return (bit & set) != 0 ? values[ROUND_TRIP_TIME] : defaultValue;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## int getMaxConcurrentStreams(int defaultValue) {
    int bit = 1 << MAX_CONCURRENT_STREAMS;
    return (bit & set) != 0 ? values[MAX_CONCURRENT_STREAMS] : defaultValue;
  } ##FSTMerge## int getMaxConcurrentStreams(int defaultValue) {
    int bit = 1 << MAX_CONCURRENT_STREAMS;
    return (bit & set) != 0 ? values[MAX_CONCURRENT_STREAMS] : defaultValue;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## int getCurrentCwnd(int defaultValue) {
    int bit = 1 << CURRENT_CWND;
    return (bit & set) != 0 ? values[CURRENT_CWND] : defaultValue;
  } ##FSTMerge## int getCurrentCwnd(int defaultValue) {
    int bit = 1 << CURRENT_CWND;
    return (bit & set) != 0 ? values[CURRENT_CWND] : defaultValue;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## int getMaxFrameSize(int defaultValue) {
    int bit = 1 << MAX_FRAME_SIZE;
    return (bit & set) != 0 ? values[MAX_FRAME_SIZE] : defaultValue;
  } ##FSTMerge## int getMaxFrameSize(int defaultValue) {
    int bit = 1 << MAX_FRAME_SIZE;
    return (bit & set) != 0 ? values[MAX_FRAME_SIZE] : defaultValue;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## int getDownloadRetransRate(int defaultValue) {
    int bit = 1 << DOWNLOAD_RETRANS_RATE;
    return (bit & set) != 0 ? values[DOWNLOAD_RETRANS_RATE] : defaultValue;
  } ##FSTMerge## int getDownloadRetransRate(int defaultValue) {
    int bit = 1 << DOWNLOAD_RETRANS_RATE;
    return (bit & set) != 0 ? values[DOWNLOAD_RETRANS_RATE] : defaultValue;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## int getMaxHeaderListSize(int defaultValue) {
    int bit = 1 << MAX_HEADER_LIST_SIZE;
    return (bit & set) != 0 ? values[MAX_HEADER_LIST_SIZE] : defaultValue;
  } ##FSTMerge## int getMaxHeaderListSize(int defaultValue) {
    int bit = 1 << MAX_HEADER_LIST_SIZE;
    return (bit & set) != 0 ? values[MAX_HEADER_LIST_SIZE] : defaultValue;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## int getInitialWindowSize(int defaultValue) {
    int bit = 1 << INITIAL_WINDOW_SIZE;
    return (bit & set) != 0 ? values[INITIAL_WINDOW_SIZE] : defaultValue;
  } ##FSTMerge## int getInitialWindowSize(int defaultValue) {
    int bit = 1 << INITIAL_WINDOW_SIZE;
    return (bit & set) != 0 ? values[INITIAL_WINDOW_SIZE] : defaultValue;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## int getClientCertificateVectorSize(int defaultValue) {
    int bit = 1 << CLIENT_CERTIFICATE_VECTOR_SIZE;
    return (bit & set) != 0 ? values[CLIENT_CERTIFICATE_VECTOR_SIZE] : defaultValue;
  } ##FSTMerge## int getClientCertificateVectorSize(int defaultValue) {
    int bit = 1 << CLIENT_CERTIFICATE_VECTOR_SIZE;
    return (bit & set) != 0 ? values[CLIENT_CERTIFICATE_VECTOR_SIZE] : defaultValue;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## boolean isFlowControlDisabled() {
    int bit = 1 << FLOW_CONTROL_OPTIONS;
    int value = (bit & set) != 0 ? values[FLOW_CONTROL_OPTIONS] : 0;
    return (value & FLOW_CONTROL_OPTIONS_DISABLED) != 0;
  } ##FSTMerge## boolean isFlowControlDisabled() {
    int bit = 1 << FLOW_CONTROL_OPTIONS;
    int value = (bit & set) != 0 ? values[FLOW_CONTROL_OPTIONS] : 0;
    return (value & FLOW_CONTROL_OPTIONS_DISABLED) != 0;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## boolean persistValue(int id) {
    int bit = 1 << id;
    return (persistValue & bit) != 0;
  } ##FSTMerge## boolean persistValue(int id) {
    int bit = 1 << id;
    return (persistValue & bit) != 0;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## boolean isPersisted(int id) {
    int bit = 1 << id;
    return (persisted & bit) != 0;
  } ##FSTMerge## boolean isPersisted(int id) {
    int bit = 1 << id;
    return (persisted & bit) != 0;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void merge(Settings other) {
    for (int i = 0; i < COUNT; i++) {
      if (!other.isSet(i)) continue;
      set(i, other.flags(i), other.get(i));
    }
  } ##FSTMerge## void merge(Settings other) {
    for (int i = 0; i < COUNT; i++) {
      if (!other.isSet(i)) continue;
      set(i, other.flags(i), other.get(i));
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/PushObserver.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## boolean onRequest(int streamId, List<Header> requestHeaders); ##FSTMerge## boolean onRequest(int streamId, List<Header> requestHeaders);
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/PushObserver.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## boolean onHeaders(int streamId, List<Header> responseHeaders, boolean last); ##FSTMerge## boolean onHeaders(int streamId, List<Header> responseHeaders, boolean last);
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/PushObserver.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## boolean onData(int streamId, BufferedSource source, int byteCount, boolean last)
      throws IOException; ##FSTMerge## boolean onData(int streamId, BufferedSource source, int byteCount, boolean last)
      throws IOException;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/PushObserver.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void onReset(int streamId, ErrorCode errorCode); ##FSTMerge## void onReset(int streamId, ErrorCode errorCode);
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/PushObserver.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## PushObserver CANCEL = new PushObserver() {

    @Override public boolean onRequest(int streamId, List<Header> requestHeaders) {
      return true;
    }

    @Override public boolean onHeaders(int streamId, List<Header> responseHeaders, boolean last) {
      return true;
    }

    @Override public boolean onData(int streamId, BufferedSource source, int byteCount,
        boolean last) throws IOException {
      source.skip(byteCount);
      return true;
    }

    @Override public void onReset(int streamId, ErrorCode errorCode) {
    }
  }; ##FSTMerge## PushObserver CANCEL = new PushObserver() {

    @Override public boolean onRequest(int streamId, List<Header> requestHeaders) {
      return true;
    }

    @Override public boolean onHeaders(int streamId, List<Header> responseHeaders, boolean last) {
      return true;
    }

    @Override public boolean onData(int streamId, BufferedSource source, int byteCount,
        boolean last) throws IOException {
      source.skip(byteCount);
      return true;
    }

    @Override public void onReset(int streamId, ErrorCode errorCode) {
    }
  };
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/PushObserver.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final ##FSTMerge## public final
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Ping.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final CountDownLatch latch = new CountDownLatch(1); ##FSTMerge## private final CountDownLatch latch = new CountDownLatch(1);
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Ping.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private long sent = -1; ##FSTMerge## private long sent = -1;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Ping.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private long received = -1; ##FSTMerge## private long received = -1;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Ping.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## Ping() {
  } ##FSTMerge## Ping() {
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Ping.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void send() {
    if (sent != -1) throw new IllegalStateException();
    sent = System.nanoTime();
  } ##FSTMerge## void send() {
    if (sent != -1) throw new IllegalStateException();
    sent = System.nanoTime();
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Ping.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void receive() {
    if (received != -1 || sent == -1) throw new IllegalStateException();
    received = System.nanoTime();
    latch.countDown();
  } ##FSTMerge## void receive() {
    if (received != -1 || sent == -1) throw new IllegalStateException();
    received = System.nanoTime();
    latch.countDown();
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Ping.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void cancel() {
    if (received != -1 || sent == -1) throw new IllegalStateException();
    received = sent - 1;
    latch.countDown();
  } ##FSTMerge## void cancel() {
    if (received != -1 || sent == -1) throw new IllegalStateException();
    received = sent - 1;
    latch.countDown();
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Ping.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public long roundTripTime() throws InterruptedException {
    latch.await();
    return received - sent;
  } ##FSTMerge## public long roundTripTime() throws InterruptedException {
    latch.await();
    return received - sent;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Ping.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public long roundTripTime(long timeout, TimeUnit unit) throws InterruptedException {
    if (latch.await(timeout, unit)) {
      return received - sent;
    } else {
      return -2;
    }
  } ##FSTMerge## public long roundTripTime(long timeout, TimeUnit unit) throws InterruptedException {
    if (latch.await(timeout, unit)) {
      return received - sent;
    } else {
      return -2;
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Ping.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/IncomingStreamHandler.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## IncomingStreamHandler REFUSE_INCOMING_STREAMS = new IncomingStreamHandler() {
    @Override public void receive(SpdyStream stream) throws IOException {
      stream.close(ErrorCode.REFUSED_STREAM);
    }
  }; ##FSTMerge## IncomingStreamHandler REFUSE_INCOMING_STREAMS = new IncomingStreamHandler() {
    @Override public void receive(SpdyStream stream) throws IOException {
      stream.close(ErrorCode.REFUSED_STREAM);
    }
  };
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/IncomingStreamHandler.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void receive(SpdyStream stream) throws IOException; ##FSTMerge## void receive(SpdyStream stream) throws IOException;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/IncomingStreamHandler.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static final int[] CODES = {
      0x1ff8, 0x7fffd8, 0xfffffe2, 0xfffffe3, 0xfffffe4, 0xfffffe5, 0xfffffe6, 0xfffffe7, 0xfffffe8,
      0xffffea, 0x3ffffffc, 0xfffffe9, 0xfffffea, 0x3ffffffd, 0xfffffeb, 0xfffffec, 0xfffffed,
      0xfffffee, 0xfffffef, 0xffffff0, 0xffffff1, 0xffffff2, 0x3ffffffe, 0xffffff3, 0xffffff4,
      0xffffff5, 0xffffff6, 0xffffff7, 0xffffff8, 0xffffff9, 0xffffffa, 0xffffffb, 0x14, 0x3f8,
      0x3f9, 0xffa, 0x1ff9, 0x15, 0xf8, 0x7fa, 0x3fa, 0x3fb, 0xf9, 0x7fb, 0xfa, 0x16, 0x17, 0x18,
      0x0, 0x1, 0x2, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f, 0x5c, 0xfb, 0x7ffc, 0x20, 0xffb,
      0x3fc, 0x1ffa, 0x21, 0x5d, 0x5e, 0x5f, 0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68,
      0x69, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f, 0x70, 0x71, 0x72, 0xfc, 0x73, 0xfd, 0x1ffb, 0x7fff0,
      0x1ffc, 0x3ffc, 0x22, 0x7ffd, 0x3, 0x23, 0x4, 0x24, 0x5, 0x25, 0x26, 0x27, 0x6, 0x74, 0x75,
      0x28, 0x29, 0x2a, 0x7, 0x2b, 0x76, 0x2c, 0x8, 0x9, 0x2d, 0x77, 0x78, 0x79, 0x7a, 0x7b, 0x7ffe,
      0x7fc, 0x3ffd, 0x1ffd, 0xffffffc, 0xfffe6, 0x3fffd2, 0xfffe7, 0xfffe8, 0x3fffd3, 0x3fffd4,
      0x3fffd5, 0x7fffd9, 0x3fffd6, 0x7fffda, 0x7fffdb, 0x7fffdc, 0x7fffdd, 0x7fffde, 0xffffeb,
      0x7fffdf, 0xffffec, 0xffffed, 0x3fffd7, 0x7fffe0, 0xffffee, 0x7fffe1, 0x7fffe2, 0x7fffe3,
      0x7fffe4, 0x1fffdc, 0x3fffd8, 0x7fffe5, 0x3fffd9, 0x7fffe6, 0x7fffe7, 0xffffef, 0x3fffda,
      0x1fffdd, 0xfffe9, 0x3fffdb, 0x3fffdc, 0x7fffe8, 0x7fffe9, 0x1fffde, 0x7fffea, 0x3fffdd,
      0x3fffde, 0xfffff0, 0x1fffdf, 0x3fffdf, 0x7fffeb, 0x7fffec, 0x1fffe0, 0x1fffe1, 0x3fffe0,
      0x1fffe2, 0x7fffed, 0x3fffe1, 0x7fffee, 0x7fffef, 0xfffea, 0x3fffe2, 0x3fffe3, 0x3fffe4,
      0x7ffff0, 0x3fffe5, 0x3fffe6, 0x7ffff1, 0x3ffffe0, 0x3ffffe1, 0xfffeb, 0x7fff1, 0x3fffe7,
      0x7ffff2, 0x3fffe8, 0x1ffffec, 0x3ffffe2, 0x3ffffe3, 0x3ffffe4, 0x7ffffde, 0x7ffffdf,
      0x3ffffe5, 0xfffff1, 0x1ffffed, 0x7fff2, 0x1fffe3, 0x3ffffe6, 0x7ffffe0, 0x7ffffe1, 0x3ffffe7,
      0x7ffffe2, 0xfffff2, 0x1fffe4, 0x1fffe5, 0x3ffffe8, 0x3ffffe9, 0xffffffd, 0x7ffffe3,
      0x7ffffe4, 0x7ffffe5, 0xfffec, 0xfffff3, 0xfffed, 0x1fffe6, 0x3fffe9, 0x1fffe7, 0x1fffe8,
      0x7ffff3, 0x3fffea, 0x3fffeb, 0x1ffffee, 0x1ffffef, 0xfffff4, 0xfffff5, 0x3ffffea, 0x7ffff4,
      0x3ffffeb, 0x7ffffe6, 0x3ffffec, 0x3ffffed, 0x7ffffe7, 0x7ffffe8, 0x7ffffe9, 0x7ffffea,
      0x7ffffeb, 0xffffffe, 0x7ffffec, 0x7ffffed, 0x7ffffee, 0x7ffffef, 0x7fffff0, 0x3ffffee
  }; ##FSTMerge## private static final int[] CODES = {
      0x1ff8, 0x7fffd8, 0xfffffe2, 0xfffffe3, 0xfffffe4, 0xfffffe5, 0xfffffe6, 0xfffffe7, 0xfffffe8,
      0xffffea, 0x3ffffffc, 0xfffffe9, 0xfffffea, 0x3ffffffd, 0xfffffeb, 0xfffffec, 0xfffffed,
      0xfffffee, 0xfffffef, 0xffffff0, 0xffffff1, 0xffffff2, 0x3ffffffe, 0xffffff3, 0xffffff4,
      0xffffff5, 0xffffff6, 0xffffff7, 0xffffff8, 0xffffff9, 0xffffffa, 0xffffffb, 0x14, 0x3f8,
      0x3f9, 0xffa, 0x1ff9, 0x15, 0xf8, 0x7fa, 0x3fa, 0x3fb, 0xf9, 0x7fb, 0xfa, 0x16, 0x17, 0x18,
      0x0, 0x1, 0x2, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f, 0x5c, 0xfb, 0x7ffc, 0x20, 0xffb,
      0x3fc, 0x1ffa, 0x21, 0x5d, 0x5e, 0x5f, 0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68,
      0x69, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f, 0x70, 0x71, 0x72, 0xfc, 0x73, 0xfd, 0x1ffb, 0x7fff0,
      0x1ffc, 0x3ffc, 0x22, 0x7ffd, 0x3, 0x23, 0x4, 0x24, 0x5, 0x25, 0x26, 0x27, 0x6, 0x74, 0x75,
      0x28, 0x29, 0x2a, 0x7, 0x2b, 0x76, 0x2c, 0x8, 0x9, 0x2d, 0x77, 0x78, 0x79, 0x7a, 0x7b, 0x7ffe,
      0x7fc, 0x3ffd, 0x1ffd, 0xffffffc, 0xfffe6, 0x3fffd2, 0xfffe7, 0xfffe8, 0x3fffd3, 0x3fffd4,
      0x3fffd5, 0x7fffd9, 0x3fffd6, 0x7fffda, 0x7fffdb, 0x7fffdc, 0x7fffdd, 0x7fffde, 0xffffeb,
      0x7fffdf, 0xffffec, 0xffffed, 0x3fffd7, 0x7fffe0, 0xffffee, 0x7fffe1, 0x7fffe2, 0x7fffe3,
      0x7fffe4, 0x1fffdc, 0x3fffd8, 0x7fffe5, 0x3fffd9, 0x7fffe6, 0x7fffe7, 0xffffef, 0x3fffda,
      0x1fffdd, 0xfffe9, 0x3fffdb, 0x3fffdc, 0x7fffe8, 0x7fffe9, 0x1fffde, 0x7fffea, 0x3fffdd,
      0x3fffde, 0xfffff0, 0x1fffdf, 0x3fffdf, 0x7fffeb, 0x7fffec, 0x1fffe0, 0x1fffe1, 0x3fffe0,
      0x1fffe2, 0x7fffed, 0x3fffe1, 0x7fffee, 0x7fffef, 0xfffea, 0x3fffe2, 0x3fffe3, 0x3fffe4,
      0x7ffff0, 0x3fffe5, 0x3fffe6, 0x7ffff1, 0x3ffffe0, 0x3ffffe1, 0xfffeb, 0x7fff1, 0x3fffe7,
      0x7ffff2, 0x3fffe8, 0x1ffffec, 0x3ffffe2, 0x3ffffe3, 0x3ffffe4, 0x7ffffde, 0x7ffffdf,
      0x3ffffe5, 0xfffff1, 0x1ffffed, 0x7fff2, 0x1fffe3, 0x3ffffe6, 0x7ffffe0, 0x7ffffe1, 0x3ffffe7,
      0x7ffffe2, 0xfffff2, 0x1fffe4, 0x1fffe5, 0x3ffffe8, 0x3ffffe9, 0xffffffd, 0x7ffffe3,
      0x7ffffe4, 0x7ffffe5, 0xfffec, 0xfffff3, 0xfffed, 0x1fffe6, 0x3fffe9, 0x1fffe7, 0x1fffe8,
      0x7ffff3, 0x3fffea, 0x3fffeb, 0x1ffffee, 0x1ffffef, 0xfffff4, 0xfffff5, 0x3ffffea, 0x7ffff4,
      0x3ffffeb, 0x7ffffe6, 0x3ffffec, 0x3ffffed, 0x7ffffe7, 0x7ffffe8, 0x7ffffe9, 0x7ffffea,
      0x7ffffeb, 0xffffffe, 0x7ffffec, 0x7ffffed, 0x7ffffee, 0x7ffffef, 0x7fffff0, 0x3ffffee
  };
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Huffman.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static final byte[] CODE_LENGTHS = {
      13, 23, 28, 28, 28, 28, 28, 28, 28, 24, 30, 28, 28, 30, 28, 28, 28, 28, 28, 28, 28, 28, 30,
      28, 28, 28, 28, 28, 28, 28, 28, 28, 6, 10, 10, 12, 13, 6, 8, 11, 10, 10, 8, 11, 8, 6, 6, 6, 5,
      5, 5, 6, 6, 6, 6, 6, 6, 6, 7, 8, 15, 6, 12, 10, 13, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
      7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 7, 8, 13, 19, 13, 14, 6, 15, 5, 6, 5, 6, 5, 6, 6, 6, 5, 7, 7, 6,
      6, 6, 5, 6, 7, 6, 5, 5, 6, 7, 7, 7, 7, 7, 15, 11, 14, 13, 28, 20, 22, 20, 20, 22, 22, 22, 23,
      22, 23, 23, 23, 23, 23, 24, 23, 24, 24, 22, 23, 24, 23, 23, 23, 23, 21, 22, 23, 22, 23, 23,
      24, 22, 21, 20, 22, 22, 23, 23, 21, 23, 22, 22, 24, 21, 22, 23, 23, 21, 21, 22, 21, 23, 22,
      23, 23, 20, 22, 22, 22, 23, 22, 22, 23, 26, 26, 20, 19, 22, 23, 22, 25, 26, 26, 26, 27, 27,
      26, 24, 25, 19, 21, 26, 27, 27, 26, 27, 24, 21, 21, 26, 26, 28, 27, 27, 27, 20, 24, 20, 21,
      22, 21, 21, 23, 22, 22, 25, 25, 24, 24, 26, 23, 26, 27, 26, 26, 27, 27, 27, 27, 27, 28, 27,
      27, 27, 27, 27, 26
  }; ##FSTMerge## private static final byte[] CODE_LENGTHS = {
      13, 23, 28, 28, 28, 28, 28, 28, 28, 24, 30, 28, 28, 30, 28, 28, 28, 28, 28, 28, 28, 28, 30,
      28, 28, 28, 28, 28, 28, 28, 28, 28, 6, 10, 10, 12, 13, 6, 8, 11, 10, 10, 8, 11, 8, 6, 6, 6, 5,
      5, 5, 6, 6, 6, 6, 6, 6, 6, 7, 8, 15, 6, 12, 10, 13, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
      7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 7, 8, 13, 19, 13, 14, 6, 15, 5, 6, 5, 6, 5, 6, 6, 6, 5, 7, 7, 6,
      6, 6, 5, 6, 7, 6, 5, 5, 6, 7, 7, 7, 7, 7, 15, 11, 14, 13, 28, 20, 22, 20, 20, 22, 22, 22, 23,
      22, 23, 23, 23, 23, 23, 24, 23, 24, 24, 22, 23, 24, 23, 23, 23, 23, 21, 22, 23, 22, 23, 23,
      24, 22, 21, 20, 22, 22, 23, 23, 21, 23, 22, 22, 24, 21, 22, 23, 23, 21, 21, 22, 21, 23, 22,
      23, 23, 20, 22, 22, 22, 23, 22, 22, 23, 26, 26, 20, 19, 22, 23, 22, 25, 26, 26, 26, 27, 27,
      26, 24, 25, 19, 21, 26, 27, 27, 26, 27, 24, 21, 21, 26, 26, 28, 27, 27, 27, 20, 24, 20, 21,
      22, 21, 21, 23, 22, 22, 25, 25, 24, 24, 26, 23, 26, 27, 26, 26, 27, 27, 27, 27, 27, 28, 27,
      27, 27, 27, 27, 26
  };
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Huffman.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static final Huffman INSTANCE = new Huffman(); ##FSTMerge## private static final Huffman INSTANCE = new Huffman();
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Huffman.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static Huffman get() {
    return INSTANCE;
  } ##FSTMerge## public static Huffman get() {
    return INSTANCE;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Huffman.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final Node root = new Node(); ##FSTMerge## private final Node root = new Node();
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Huffman.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Huffman() {
    buildTree();
  } ##FSTMerge## private Huffman() {
    buildTree();
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Huffman.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void encode(byte[] data, OutputStream out) throws IOException {
    long current = 0;
    int n = 0;

    for (int i = 0; i < data.length; i++) {
      int b = data[i] & 0xFF;
      int code = CODES[b];
      int nbits = CODE_LENGTHS[b];

      current <<= nbits;
      current |= code;
      n += nbits;

      while (n >= 8) {
        n -= 8;
        out.write(((int) (current >> n)));
      }
    }

    if (n > 0) {
      current <<= (8 - n);
      current |= (0xFF >>> n);
      out.write((int) current);
    }
  } ##FSTMerge## void encode(byte[] data, OutputStream out) throws IOException {
    long current = 0;
    int n = 0;

    for (int i = 0; i < data.length; i++) {
      int b = data[i] & 0xFF;
      int code = CODES[b];
      int nbits = CODE_LENGTHS[b];

      current <<= nbits;
      current |= code;
      n += nbits;

      while (n >= 8) {
        n -= 8;
        out.write(((int) (current >> n)));
      }
    }

    if (n > 0) {
      current <<= (8 - n);
      current |= (0xFF >>> n);
      out.write((int) current);
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Huffman.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## int encodedLength(byte[] bytes) {
    long len = 0;

    for (int i = 0; i < bytes.length; i++) {
      int b = bytes[i] & 0xFF;
      len += CODE_LENGTHS[b];
    }

    return (int) ((len + 7) >> 3);
  } ##FSTMerge## int encodedLength(byte[] bytes) {
    long len = 0;

    for (int i = 0; i < bytes.length; i++) {
      int b = bytes[i] & 0xFF;
      len += CODE_LENGTHS[b];
    }

    return (int) ((len + 7) >> 3);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Huffman.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## byte[] decode(byte[] buf) throws IOException {
    ByteArrayOutputStream baos = new ByteArrayOutputStream();
    Node node = root;
    int current = 0;
    int nbits = 0;
    for (int i = 0; i < buf.length; i++) {
      int b = buf[i] & 0xFF;
      current = (current << 8) | b;
      nbits += 8;
      while (nbits >= 8) {
        int c = (current >>> (nbits - 8)) & 0xFF;
        node = node.children[c];
        if (node.children == null) {
          // terminal node
          baos.write(node.symbol);
          nbits -= node.terminalBits;
          node = root;
        } else {
          // non-terminal node
          nbits -= 8;
        }
      }
    }

    while (nbits > 0) {
      int c = (current << (8 - nbits)) & 0xFF;
      node = node.children[c];
      if (node.children != null || node.terminalBits > nbits) {
        break;
      }
      baos.write(node.symbol);
      nbits -= node.terminalBits;
      node = root;
    }

    return baos.toByteArray();
  } ##FSTMerge## byte[] decode(byte[] buf) throws IOException {
    ByteArrayOutputStream baos = new ByteArrayOutputStream();
    Node node = root;
    int current = 0;
    int nbits = 0;
    for (int i = 0; i < buf.length; i++) {
      int b = buf[i] & 0xFF;
      current = (current << 8) | b;
      nbits += 8;
      while (nbits >= 8) {
        int c = (current >>> (nbits - 8)) & 0xFF;
        node = node.children[c];
        if (node.children == null) {
          // terminal node
          baos.write(node.symbol);
          nbits -= node.terminalBits;
          node = root;
        } else {
          // non-terminal node
          nbits -= 8;
        }
      }
    }

    while (nbits > 0) {
      int c = (current << (8 - nbits)) & 0xFF;
      node = node.children[c];
      if (node.children != null || node.terminalBits > nbits) {
        break;
      }
      baos.write(node.symbol);
      nbits -= node.terminalBits;
      node = root;
    }

    return baos.toByteArray();
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Huffman.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void buildTree() {
    for (int i = 0; i < CODE_LENGTHS.length; i++) {
      addCode(i, CODES[i], CODE_LENGTHS[i]);
    }
  } ##FSTMerge## private void buildTree() {
    for (int i = 0; i < CODE_LENGTHS.length; i++) {
      addCode(i, CODES[i], CODE_LENGTHS[i]);
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Huffman.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void addCode(int sym, int code, byte len) {
    Node terminal = new Node(sym, len);

    Node current = root;
    while (len > 8) {
      len -= 8;
      int i = ((code >>> len) & 0xFF);
      if (current.children == null) {
        throw new IllegalStateException("invalid dictionary: prefix not unique");
      }
      if (current.children[i] == null) {
        current.children[i] = new Node();
      }
      current = current.children[i];
    }

    int shift = 8 - len;
    int start = (code << shift) & 0xFF;
    int end = 1 << shift;
    for (int i = start; i < start + end; i++) {
      current.children[i] = terminal;
    }
  } ##FSTMerge## private void addCode(int sym, int code, byte len) {
    Node terminal = new Node(sym, len);

    Node current = root;
    while (len > 8) {
      len -= 8;
      int i = ((code >>> len) & 0xFF);
      if (current.children == null) {
        throw new IllegalStateException("invalid dictionary: prefix not unique");
      }
      if (current.children[i] == null) {
        current.children[i] = new Node();
      }
      current = current.children[i];
    }

    int shift = 8 - len;
    int start = (code << shift) & 0xFF;
    int end = 1 << shift;
    for (int i = start; i < start + end; i++) {
      current.children[i] = terminal;
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Huffman.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static final ##FSTMerge## private static final
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Huffman.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final Node[] children; ##FSTMerge## private final Node[] children;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Huffman.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final int symbol; ##FSTMerge## private final int symbol;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Huffman.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final int terminalBits; ##FSTMerge## private final int terminalBits;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Huffman.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## Node() {
      this.children = new Node[256];
      this.symbol = 0; // Not read.
      this.terminalBits = 0; // Not read.
    } ##FSTMerge## Node() {
      this.children = new Node[256];
      this.symbol = 0; // Not read.
      this.terminalBits = 0; // Not read.
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Huffman.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## Node(int symbol, int bits) {
      this.children = null;
      this.symbol = symbol;
      int b = bits & 0x07;
      this.terminalBits = b == 0 ? 8 : b;
    } ##FSTMerge## Node(int symbol, int bits) {
      this.children = null;
      this.symbol = symbol;
      int b = bits & 0x07;
      this.terminalBits = b == 0 ? 8 : b;
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Huffman.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final ##FSTMerge## public final
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements Variant ##FSTMerge## implements Variant
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static final Logger logger = Logger.getLogger(FrameLogger.class.getName()); ##FSTMerge## private static final Logger logger = Logger.getLogger(FrameLogger.class.getName());
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public Protocol getProtocol() {
    return Protocol.HTTP_2;
  } ##FSTMerge## @Override public Protocol getProtocol() {
    return Protocol.HTTP_2;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static final ByteString CONNECTION_PREFACE
      = ByteString.encodeUtf8("PRI * HTTP/2.0\r\n\r\nSM\r\n\r\n"); ##FSTMerge## private static final ByteString CONNECTION_PREFACE
      = ByteString.encodeUtf8("PRI * HTTP/2.0\r\n\r\nSM\r\n\r\n");
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final int INITIAL_MAX_FRAME_SIZE = 0x4000; ##FSTMerge## static final int INITIAL_MAX_FRAME_SIZE = 0x4000;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final byte TYPE_DATA = 0x0; ##FSTMerge## static final byte TYPE_DATA = 0x0;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final byte TYPE_HEADERS = 0x1; ##FSTMerge## static final byte TYPE_HEADERS = 0x1;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final byte TYPE_PRIORITY = 0x2; ##FSTMerge## static final byte TYPE_PRIORITY = 0x2;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final byte TYPE_RST_STREAM = 0x3; ##FSTMerge## static final byte TYPE_RST_STREAM = 0x3;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final byte TYPE_SETTINGS = 0x4; ##FSTMerge## static final byte TYPE_SETTINGS = 0x4;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final byte TYPE_PUSH_PROMISE = 0x5; ##FSTMerge## static final byte TYPE_PUSH_PROMISE = 0x5;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final byte TYPE_PING = 0x6; ##FSTMerge## static final byte TYPE_PING = 0x6;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final byte TYPE_GOAWAY = 0x7; ##FSTMerge## static final byte TYPE_GOAWAY = 0x7;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final byte TYPE_WINDOW_UPDATE = 0x8; ##FSTMerge## static final byte TYPE_WINDOW_UPDATE = 0x8;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final byte TYPE_CONTINUATION = 0x9; ##FSTMerge## static final byte TYPE_CONTINUATION = 0x9;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final byte FLAG_NONE = 0x0; ##FSTMerge## static final byte FLAG_NONE = 0x0;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final byte FLAG_ACK = 0x1; ##FSTMerge## static final byte FLAG_ACK = 0x1;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final byte FLAG_END_STREAM = 0x1; ##FSTMerge## static final byte FLAG_END_STREAM = 0x1;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final byte FLAG_END_HEADERS = 0x4; ##FSTMerge## static final byte FLAG_END_HEADERS = 0x4;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final byte FLAG_END_PUSH_PROMISE = 0x4; ##FSTMerge## static final byte FLAG_END_PUSH_PROMISE = 0x4;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final byte FLAG_PADDED = 0x8; ##FSTMerge## static final byte FLAG_PADDED = 0x8;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final byte FLAG_PRIORITY = 0x20; ##FSTMerge## static final byte FLAG_PRIORITY = 0x20;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final byte FLAG_COMPRESSED = 0x20; ##FSTMerge## static final byte FLAG_COMPRESSED = 0x20;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public FrameReader newReader(BufferedSource source, boolean client) {
    return new Reader(source, 4096, client);
  } ##FSTMerge## @Override public FrameReader newReader(BufferedSource source, boolean client) {
    return new Reader(source, 4096, client);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public FrameWriter newWriter(BufferedSink sink, boolean client) {
    return new Writer(sink, client);
  } ##FSTMerge## @Override public FrameWriter newWriter(BufferedSink sink, boolean client) {
    return new Writer(sink, client);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final ##FSTMerge## static final
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements FrameReader ##FSTMerge## implements FrameReader
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final BufferedSource source; ##FSTMerge## private final BufferedSource source;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final ContinuationSource continuation; ##FSTMerge## private final ContinuationSource continuation;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final boolean client; ##FSTMerge## private final boolean client;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final HpackDraft10.Reader hpackReader; ##FSTMerge## final HpackDraft10.Reader hpackReader;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## Reader(BufferedSource source, int headerTableSize, boolean client) {
      this.source = source;
      this.client = client;
      this.continuation = new ContinuationSource(this.source);
      this.hpackReader = new HpackDraft10.Reader(headerTableSize, continuation);
    } ##FSTMerge## Reader(BufferedSource source, int headerTableSize, boolean client) {
      this.source = source;
      this.client = client;
      this.continuation = new ContinuationSource(this.source);
      this.hpackReader = new HpackDraft10.Reader(headerTableSize, continuation);
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public void readConnectionPreface() throws IOException {
      if (client) return; // Nothing to read; servers doesn't send a connection preface!
      ByteString connectionPreface = source.readByteString(CONNECTION_PREFACE.size());
      if (logger.isLoggable(FINE)) logger.fine(format("<< CONNECTION %s", connectionPreface.hex()));
      if (!CONNECTION_PREFACE.equals(connectionPreface)) {
        throw ioException("Expected a connection header but was %s", connectionPreface.utf8());
      }
    } ##FSTMerge## @Override public void readConnectionPreface() throws IOException {
      if (client) return; // Nothing to read; servers doesn't send a connection preface!
      ByteString connectionPreface = source.readByteString(CONNECTION_PREFACE.size());
      if (logger.isLoggable(FINE)) logger.fine(format("<< CONNECTION %s", connectionPreface.hex()));
      if (!CONNECTION_PREFACE.equals(connectionPreface)) {
        throw ioException("Expected a connection header but was %s", connectionPreface.utf8());
      }
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public boolean nextFrame(Handler handler) throws IOException {
      try {
        source.require(9); // Frame header size
      } catch (IOException e) {
        return false; // This might be a normal socket close.
      }

      /*  0                   1                   2                   3
       *  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
       * +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       * |                 Length (24)                   |
       * +---------------+---------------+---------------+
       * |   Type (8)    |   Flags (8)   |
       * +-+-+-----------+---------------+-------------------------------+
       * |R|                 Stream Identifier (31)                      |
       * +=+=============================================================+
       * |                   Frame Payload (0...)                      ...
       * +---------------------------------------------------------------+
       */
      int length = readMedium(source);
      if (length < 0 || length > INITIAL_MAX_FRAME_SIZE) {
        throw ioException("FRAME_SIZE_ERROR: %s", length);
      }
      byte type = (byte) (source.readByte() & 0xff);
      byte flags = (byte) (source.readByte() & 0xff);
      int streamId = (source.readInt() & 0x7fffffff); // Ignore reserved bit.
      if (logger.isLoggable(FINE)) logger.fine(formatHeader(true, streamId, length, type, flags));

      switch (type) {
        case TYPE_DATA:
          readData(handler, length, flags, streamId);
          break;

        case TYPE_HEADERS:
          readHeaders(handler, length, flags, streamId);
          break;

        case TYPE_PRIORITY:
          readPriority(handler, length, flags, streamId);
          break;

        case TYPE_RST_STREAM:
          readRstStream(handler, length, flags, streamId);
          break;

        case TYPE_SETTINGS:
          readSettings(handler, length, flags, streamId);
          break;

        case TYPE_PUSH_PROMISE:
          readPushPromise(handler, length, flags, streamId);
          break;

        case TYPE_PING:
          readPing(handler, length, flags, streamId);
          break;

        case TYPE_GOAWAY:
          readGoAway(handler, length, flags, streamId);
          break;

        case TYPE_WINDOW_UPDATE:
          readWindowUpdate(handler, length, flags, streamId);
          break;

        default:
          // Implementations MUST discard frames that have unknown or unsupported types.
          source.skip(length);
      }
      return true;
    } ##FSTMerge## @Override public boolean nextFrame(Handler handler) throws IOException {
      try {
        source.require(9); // Frame header size
      } catch (IOException e) {
        return false; // This might be a normal socket close.
      }

      /*  0                   1                   2                   3
       *  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
       * +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       * |                 Length (24)                   |
       * +---------------+---------------+---------------+
       * |   Type (8)    |   Flags (8)   |
       * +-+-+-----------+---------------+-------------------------------+
       * |R|                 Stream Identifier (31)                      |
       * +=+=============================================================+
       * |                   Frame Payload (0...)                      ...
       * +---------------------------------------------------------------+
       */
      int length = readMedium(source);
      if (length < 0 || length > INITIAL_MAX_FRAME_SIZE) {
        throw ioException("FRAME_SIZE_ERROR: %s", length);
      }
      byte type = (byte) (source.readByte() & 0xff);
      byte flags = (byte) (source.readByte() & 0xff);
      int streamId = (source.readInt() & 0x7fffffff); // Ignore reserved bit.
      if (logger.isLoggable(FINE)) logger.fine(formatHeader(true, streamId, length, type, flags));

      switch (type) {
        case TYPE_DATA:
          readData(handler, length, flags, streamId);
          break;

        case TYPE_HEADERS:
          readHeaders(handler, length, flags, streamId);
          break;

        case TYPE_PRIORITY:
          readPriority(handler, length, flags, streamId);
          break;

        case TYPE_RST_STREAM:
          readRstStream(handler, length, flags, streamId);
          break;

        case TYPE_SETTINGS:
          readSettings(handler, length, flags, streamId);
          break;

        case TYPE_PUSH_PROMISE:
          readPushPromise(handler, length, flags, streamId);
          break;

        case TYPE_PING:
          readPing(handler, length, flags, streamId);
          break;

        case TYPE_GOAWAY:
          readGoAway(handler, length, flags, streamId);
          break;

        case TYPE_WINDOW_UPDATE:
          readWindowUpdate(handler, length, flags, streamId);
          break;

        default:
          // Implementations MUST discard frames that have unknown or unsupported types.
          source.skip(length);
      }
      return true;
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void readHeaders(Handler handler, int length, byte flags, int streamId)
        throws IOException {
      if (streamId == 0) throw ioException("PROTOCOL_ERROR: TYPE_HEADERS streamId == 0");

      boolean endStream = (flags & FLAG_END_STREAM) != 0;

      short padding = (flags & FLAG_PADDED) != 0 ? (short) (source.readByte() & 0xff) : 0;

      if ((flags & FLAG_PRIORITY) != 0) {
        readPriority(handler, streamId);
        length -= 5; // account for above read.
      }

      length = lengthWithoutPadding(length, flags, padding);

      List<Header> headerBlock = readHeaderBlock(length, padding, flags, streamId);

      handler.headers(false, endStream, streamId, -1, headerBlock, HeadersMode.HTTP_20_HEADERS);
    } ##FSTMerge## private void readHeaders(Handler handler, int length, byte flags, int streamId)
        throws IOException {
      if (streamId == 0) throw ioException("PROTOCOL_ERROR: TYPE_HEADERS streamId == 0");

      boolean endStream = (flags & FLAG_END_STREAM) != 0;

      short padding = (flags & FLAG_PADDED) != 0 ? (short) (source.readByte() & 0xff) : 0;

      if ((flags & FLAG_PRIORITY) != 0) {
        readPriority(handler, streamId);
        length -= 5; // account for above read.
      }

      length = lengthWithoutPadding(length, flags, padding);

      List<Header> headerBlock = readHeaderBlock(length, padding, flags, streamId);

      handler.headers(false, endStream, streamId, -1, headerBlock, HeadersMode.HTTP_20_HEADERS);
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private List<Header> readHeaderBlock(int length, short padding, byte flags, int streamId)
        throws IOException {
      continuation.length = continuation.left = length;
      continuation.padding = padding;
      continuation.flags = flags;
      continuation.streamId = streamId;

      // TODO: Concat multi-value headers with 0x0, except COOKIE, which uses 0x3B, 0x20.
      // http://tools.ietf.org/html/draft-ietf-httpbis-http2-16#section-8.1.2.5
      hpackReader.readHeaders();
      return hpackReader.getAndResetHeaderList();
    } ##FSTMerge## private List<Header> readHeaderBlock(int length, short padding, byte flags, int streamId)
        throws IOException {
      continuation.length = continuation.left = length;
      continuation.padding = padding;
      continuation.flags = flags;
      continuation.streamId = streamId;

      // TODO: Concat multi-value headers with 0x0, except COOKIE, which uses 0x3B, 0x20.
      // http://tools.ietf.org/html/draft-ietf-httpbis-http2-16#section-8.1.2.5
      hpackReader.readHeaders();
      return hpackReader.getAndResetHeaderList();
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void readData(Handler handler, int length, byte flags, int streamId)
        throws IOException {
      // TODO: checkState open or half-closed (local) or raise STREAM_CLOSED
      boolean inFinished = (flags & FLAG_END_STREAM) != 0;
      boolean gzipped = (flags & FLAG_COMPRESSED) != 0;
      if (gzipped) {
        throw ioException("PROTOCOL_ERROR: FLAG_COMPRESSED without SETTINGS_COMPRESS_DATA");
      }

      short padding = (flags & FLAG_PADDED) != 0 ? (short) (source.readByte() & 0xff) : 0;
      length = lengthWithoutPadding(length, flags, padding);

      handler.data(inFinished, streamId, source, length);
      source.skip(padding);
    } ##FSTMerge## private void readData(Handler handler, int length, byte flags, int streamId)
        throws IOException {
      // TODO: checkState open or half-closed (local) or raise STREAM_CLOSED
      boolean inFinished = (flags & FLAG_END_STREAM) != 0;
      boolean gzipped = (flags & FLAG_COMPRESSED) != 0;
      if (gzipped) {
        throw ioException("PROTOCOL_ERROR: FLAG_COMPRESSED without SETTINGS_COMPRESS_DATA");
      }

      short padding = (flags & FLAG_PADDED) != 0 ? (short) (source.readByte() & 0xff) : 0;
      length = lengthWithoutPadding(length, flags, padding);

      handler.data(inFinished, streamId, source, length);
      source.skip(padding);
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void readPriority(Handler handler, int length, byte flags, int streamId)
        throws IOException {
      if (length != 5) throw ioException("TYPE_PRIORITY length: %d != 5", length);
      if (streamId == 0) throw ioException("TYPE_PRIORITY streamId == 0");
      readPriority(handler, streamId);
    } ##FSTMerge## private void readPriority(Handler handler, int length, byte flags, int streamId)
        throws IOException {
      if (length != 5) throw ioException("TYPE_PRIORITY length: %d != 5", length);
      if (streamId == 0) throw ioException("TYPE_PRIORITY streamId == 0");
      readPriority(handler, streamId);
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void readPriority(Handler handler, int streamId) throws IOException {
      int w1 = source.readInt();
      boolean exclusive = (w1 & 0x80000000) != 0;
      int streamDependency = (w1 & 0x7fffffff);
      int weight = (source.readByte() & 0xff) + 1;
      handler.priority(streamId, streamDependency, weight, exclusive);
    } ##FSTMerge## private void readPriority(Handler handler, int streamId) throws IOException {
      int w1 = source.readInt();
      boolean exclusive = (w1 & 0x80000000) != 0;
      int streamDependency = (w1 & 0x7fffffff);
      int weight = (source.readByte() & 0xff) + 1;
      handler.priority(streamId, streamDependency, weight, exclusive);
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void readRstStream(Handler handler, int length, byte flags, int streamId)
        throws IOException {
      if (length != 4) throw ioException("TYPE_RST_STREAM length: %d != 4", length);
      if (streamId == 0) throw ioException("TYPE_RST_STREAM streamId == 0");
      int errorCodeInt = source.readInt();
      ErrorCode errorCode = ErrorCode.fromHttp2(errorCodeInt);
      if (errorCode == null) {
        throw ioException("TYPE_RST_STREAM unexpected error code: %d", errorCodeInt);
      }
      handler.rstStream(streamId, errorCode);
    } ##FSTMerge## private void readRstStream(Handler handler, int length, byte flags, int streamId)
        throws IOException {
      if (length != 4) throw ioException("TYPE_RST_STREAM length: %d != 4", length);
      if (streamId == 0) throw ioException("TYPE_RST_STREAM streamId == 0");
      int errorCodeInt = source.readInt();
      ErrorCode errorCode = ErrorCode.fromHttp2(errorCodeInt);
      if (errorCode == null) {
        throw ioException("TYPE_RST_STREAM unexpected error code: %d", errorCodeInt);
      }
      handler.rstStream(streamId, errorCode);
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void readSettings(Handler handler, int length, byte flags, int streamId)
        throws IOException {
      if (streamId != 0) throw ioException("TYPE_SETTINGS streamId != 0");
      if ((flags & FLAG_ACK) != 0) {
        if (length != 0) throw ioException("FRAME_SIZE_ERROR ack frame should be empty!");
        handler.ackSettings();
        return;
      }

      if (length % 6 != 0) throw ioException("TYPE_SETTINGS length %% 6 != 0: %s", length);
      Settings settings = new Settings();
      for (int i = 0; i < length; i += 6) {
        short id = source.readShort();
        int value = source.readInt();

        switch (id) {
          case 1: // SETTINGS_HEADER_TABLE_SIZE
            break;
          case 2: // SETTINGS_ENABLE_PUSH
            if (value != 0 && value != 1) {
              throw ioException("PROTOCOL_ERROR SETTINGS_ENABLE_PUSH != 0 or 1");
            }
            break;
          case 3: // SETTINGS_MAX_CONCURRENT_STREAMS
            id = 4; // Renumbered in draft 10.
            break;
          case 4: // SETTINGS_INITIAL_WINDOW_SIZE
            id = 7; // Renumbered in draft 10.
            if (value < 0) {
              throw ioException("PROTOCOL_ERROR SETTINGS_INITIAL_WINDOW_SIZE > 2^31 - 1");
            }
            break;
          case 5: // SETTINGS_MAX_FRAME_SIZE
            if (value < INITIAL_MAX_FRAME_SIZE || value > 16777215) {
              throw ioException("PROTOCOL_ERROR SETTINGS_MAX_FRAME_SIZE: %s", value);
            }
            break;
          case 6: // SETTINGS_MAX_HEADER_LIST_SIZE
            break; // Advisory only, so ignored.
          default:
            throw ioException("PROTOCOL_ERROR invalid settings id: %s", id);
        }
        settings.set(id, 0, value);
      }
      handler.settings(false, settings);
      if (settings.getHeaderTableSize() >= 0) {
        hpackReader.headerTableSizeSetting(settings.getHeaderTableSize());
      }
    } ##FSTMerge## private void readSettings(Handler handler, int length, byte flags, int streamId)
        throws IOException {
      if (streamId != 0) throw ioException("TYPE_SETTINGS streamId != 0");
      if ((flags & FLAG_ACK) != 0) {
        if (length != 0) throw ioException("FRAME_SIZE_ERROR ack frame should be empty!");
        handler.ackSettings();
        return;
      }

      if (length % 6 != 0) throw ioException("TYPE_SETTINGS length %% 6 != 0: %s", length);
      Settings settings = new Settings();
      for (int i = 0; i < length; i += 6) {
        short id = source.readShort();
        int value = source.readInt();

        switch (id) {
          case 1: // SETTINGS_HEADER_TABLE_SIZE
            break;
          case 2: // SETTINGS_ENABLE_PUSH
            if (value != 0 && value != 1) {
              throw ioException("PROTOCOL_ERROR SETTINGS_ENABLE_PUSH != 0 or 1");
            }
            break;
          case 3: // SETTINGS_MAX_CONCURRENT_STREAMS
            id = 4; // Renumbered in draft 10.
            break;
          case 4: // SETTINGS_INITIAL_WINDOW_SIZE
            id = 7; // Renumbered in draft 10.
            if (value < 0) {
              throw ioException("PROTOCOL_ERROR SETTINGS_INITIAL_WINDOW_SIZE > 2^31 - 1");
            }
            break;
          case 5: // SETTINGS_MAX_FRAME_SIZE
            if (value < INITIAL_MAX_FRAME_SIZE || value > 16777215) {
              throw ioException("PROTOCOL_ERROR SETTINGS_MAX_FRAME_SIZE: %s", value);
            }
            break;
          case 6: // SETTINGS_MAX_HEADER_LIST_SIZE
            break; // Advisory only, so ignored.
          default:
            throw ioException("PROTOCOL_ERROR invalid settings id: %s", id);
        }
        settings.set(id, 0, value);
      }
      handler.settings(false, settings);
      if (settings.getHeaderTableSize() >= 0) {
        hpackReader.headerTableSizeSetting(settings.getHeaderTableSize());
      }
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void readPushPromise(Handler handler, int length, byte flags, int streamId)
        throws IOException {
      if (streamId == 0) {
        throw ioException("PROTOCOL_ERROR: TYPE_PUSH_PROMISE streamId == 0");
      }
      short padding = (flags & FLAG_PADDED) != 0 ? (short) (source.readByte() & 0xff) : 0;
      int promisedStreamId = source.readInt() & 0x7fffffff;
      length -= 4; // account for above read.
      length = lengthWithoutPadding(length, flags, padding);
      List<Header> headerBlock = readHeaderBlock(length, padding, flags, streamId);
      handler.pushPromise(streamId, promisedStreamId, headerBlock);
    } ##FSTMerge## private void readPushPromise(Handler handler, int length, byte flags, int streamId)
        throws IOException {
      if (streamId == 0) {
        throw ioException("PROTOCOL_ERROR: TYPE_PUSH_PROMISE streamId == 0");
      }
      short padding = (flags & FLAG_PADDED) != 0 ? (short) (source.readByte() & 0xff) : 0;
      int promisedStreamId = source.readInt() & 0x7fffffff;
      length -= 4; // account for above read.
      length = lengthWithoutPadding(length, flags, padding);
      List<Header> headerBlock = readHeaderBlock(length, padding, flags, streamId);
      handler.pushPromise(streamId, promisedStreamId, headerBlock);
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void readPing(Handler handler, int length, byte flags, int streamId)
        throws IOException {
      if (length != 8) throw ioException("TYPE_PING length != 8: %s", length);
      if (streamId != 0) throw ioException("TYPE_PING streamId != 0");
      int payload1 = source.readInt();
      int payload2 = source.readInt();
      boolean ack = (flags & FLAG_ACK) != 0;
      handler.ping(ack, payload1, payload2);
    } ##FSTMerge## private void readPing(Handler handler, int length, byte flags, int streamId)
        throws IOException {
      if (length != 8) throw ioException("TYPE_PING length != 8: %s", length);
      if (streamId != 0) throw ioException("TYPE_PING streamId != 0");
      int payload1 = source.readInt();
      int payload2 = source.readInt();
      boolean ack = (flags & FLAG_ACK) != 0;
      handler.ping(ack, payload1, payload2);
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void readGoAway(Handler handler, int length, byte flags, int streamId)
        throws IOException {
      if (length < 8) throw ioException("TYPE_GOAWAY length < 8: %s", length);
      if (streamId != 0) throw ioException("TYPE_GOAWAY streamId != 0");
      int lastStreamId = source.readInt();
      int errorCodeInt = source.readInt();
      int opaqueDataLength = length - 8;
      ErrorCode errorCode = ErrorCode.fromHttp2(errorCodeInt);
      if (errorCode == null) {
        throw ioException("TYPE_GOAWAY unexpected error code: %d", errorCodeInt);
      }
      ByteString debugData = EMPTY;
      if (opaqueDataLength > 0) { // Must read debug data in order to not corrupt the connection.
        debugData = source.readByteString(opaqueDataLength);
      }
      handler.goAway(lastStreamId, errorCode, debugData);
    } ##FSTMerge## private void readGoAway(Handler handler, int length, byte flags, int streamId)
        throws IOException {
      if (length < 8) throw ioException("TYPE_GOAWAY length < 8: %s", length);
      if (streamId != 0) throw ioException("TYPE_GOAWAY streamId != 0");
      int lastStreamId = source.readInt();
      int errorCodeInt = source.readInt();
      int opaqueDataLength = length - 8;
      ErrorCode errorCode = ErrorCode.fromHttp2(errorCodeInt);
      if (errorCode == null) {
        throw ioException("TYPE_GOAWAY unexpected error code: %d", errorCodeInt);
      }
      ByteString debugData = EMPTY;
      if (opaqueDataLength > 0) { // Must read debug data in order to not corrupt the connection.
        debugData = source.readByteString(opaqueDataLength);
      }
      handler.goAway(lastStreamId, errorCode, debugData);
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void readWindowUpdate(Handler handler, int length, byte flags, int streamId)
        throws IOException {
      if (length != 4) throw ioException("TYPE_WINDOW_UPDATE length !=4: %s", length);
      long increment = (source.readInt() & 0x7fffffffL);
      if (increment == 0) throw ioException("windowSizeIncrement was 0", increment);
      handler.windowUpdate(streamId, increment);
    } ##FSTMerge## private void readWindowUpdate(Handler handler, int length, byte flags, int streamId)
        throws IOException {
      if (length != 4) throw ioException("TYPE_WINDOW_UPDATE length !=4: %s", length);
      long increment = (source.readInt() & 0x7fffffffL);
      if (increment == 0) throw ioException("windowSizeIncrement was 0", increment);
      handler.windowUpdate(streamId, increment);
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public void close() throws IOException {
      source.close();
    } ##FSTMerge## @Override public void close() throws IOException {
      source.close();
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final ##FSTMerge## static final
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements FrameWriter ##FSTMerge## implements FrameWriter
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final BufferedSink sink; ##FSTMerge## private final BufferedSink sink;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final boolean client; ##FSTMerge## private final boolean client;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final Buffer hpackBuffer; ##FSTMerge## private final Buffer hpackBuffer;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final HpackDraft10.Writer hpackWriter; ##FSTMerge## private final HpackDraft10.Writer hpackWriter;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private int maxFrameSize; ##FSTMerge## private int maxFrameSize;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private boolean closed; ##FSTMerge## private boolean closed;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## Writer(BufferedSink sink, boolean client) {
      this.sink = sink;
      this.client = client;
      this.hpackBuffer = new Buffer();
      this.hpackWriter = new HpackDraft10.Writer(hpackBuffer);
      this.maxFrameSize = INITIAL_MAX_FRAME_SIZE;
    } ##FSTMerge## Writer(BufferedSink sink, boolean client) {
      this.sink = sink;
      this.client = client;
      this.hpackBuffer = new Buffer();
      this.hpackWriter = new HpackDraft10.Writer(hpackBuffer);
      this.maxFrameSize = INITIAL_MAX_FRAME_SIZE;
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public synchronized void flush() throws IOException {
      if (closed) throw new IOException("closed");
      sink.flush();
    } ##FSTMerge## @Override public synchronized void flush() throws IOException {
      if (closed) throw new IOException("closed");
      sink.flush();
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public synchronized void ackSettings(Settings peerSettings) throws IOException {
      if (closed) throw new IOException("closed");
      this.maxFrameSize = peerSettings.getMaxFrameSize(maxFrameSize);
      int length = 0;
      byte type = TYPE_SETTINGS;
      byte flags = FLAG_ACK;
      int streamId = 0;
      frameHeader(streamId, length, type, flags);
      sink.flush();
    } ##FSTMerge## @Override public synchronized void ackSettings(Settings peerSettings) throws IOException {
      if (closed) throw new IOException("closed");
      this.maxFrameSize = peerSettings.getMaxFrameSize(maxFrameSize);
      int length = 0;
      byte type = TYPE_SETTINGS;
      byte flags = FLAG_ACK;
      int streamId = 0;
      frameHeader(streamId, length, type, flags);
      sink.flush();
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public synchronized void connectionPreface() throws IOException {
      if (closed) throw new IOException("closed");
      if (!client) return; // Nothing to write; servers don't send connection headers!
      if (logger.isLoggable(FINE)) {
        logger.fine(format(">> CONNECTION %s", CONNECTION_PREFACE.hex()));
      }
      sink.write(CONNECTION_PREFACE.toByteArray());
      sink.flush();
    } ##FSTMerge## @Override public synchronized void connectionPreface() throws IOException {
      if (closed) throw new IOException("closed");
      if (!client) return; // Nothing to write; servers don't send connection headers!
      if (logger.isLoggable(FINE)) {
        logger.fine(format(">> CONNECTION %s", CONNECTION_PREFACE.hex()));
      }
      sink.write(CONNECTION_PREFACE.toByteArray());
      sink.flush();
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public synchronized void synStream(boolean outFinished, boolean inFinished,
        int streamId, int associatedStreamId, List<Header> headerBlock)
        throws IOException {
      if (inFinished) throw new UnsupportedOperationException();
      if (closed) throw new IOException("closed");
      headers(outFinished, streamId, headerBlock);
    } ##FSTMerge## @Override public synchronized void synStream(boolean outFinished, boolean inFinished,
        int streamId, int associatedStreamId, List<Header> headerBlock)
        throws IOException {
      if (inFinished) throw new UnsupportedOperationException();
      if (closed) throw new IOException("closed");
      headers(outFinished, streamId, headerBlock);
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public synchronized void synReply(boolean outFinished, int streamId,
        List<Header> headerBlock) throws IOException {
      if (closed) throw new IOException("closed");
      headers(outFinished, streamId, headerBlock);
    } ##FSTMerge## @Override public synchronized void synReply(boolean outFinished, int streamId,
        List<Header> headerBlock) throws IOException {
      if (closed) throw new IOException("closed");
      headers(outFinished, streamId, headerBlock);
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public synchronized void headers(int streamId, List<Header> headerBlock)
        throws IOException {
      if (closed) throw new IOException("closed");
      headers(false, streamId, headerBlock);
    } ##FSTMerge## @Override public synchronized void headers(int streamId, List<Header> headerBlock)
        throws IOException {
      if (closed) throw new IOException("closed");
      headers(false, streamId, headerBlock);
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public synchronized void pushPromise(int streamId, int promisedStreamId,
        List<Header> requestHeaders) throws IOException {
      if (closed) throw new IOException("closed");
      if (hpackBuffer.size() != 0) throw new IllegalStateException();
      hpackWriter.writeHeaders(requestHeaders);

      long byteCount = hpackBuffer.size();
      int length = (int) Math.min(maxFrameSize - 4, byteCount);
      byte type = TYPE_PUSH_PROMISE;
      byte flags = byteCount == length ? FLAG_END_HEADERS : 0;
      frameHeader(streamId, length + 4, type, flags);
      sink.writeInt(promisedStreamId & 0x7fffffff);
      sink.write(hpackBuffer, length);

      if (byteCount > length) writeContinuationFrames(streamId, byteCount - length);
    } ##FSTMerge## @Override public synchronized void pushPromise(int streamId, int promisedStreamId,
        List<Header> requestHeaders) throws IOException {
      if (closed) throw new IOException("closed");
      if (hpackBuffer.size() != 0) throw new IllegalStateException();
      hpackWriter.writeHeaders(requestHeaders);

      long byteCount = hpackBuffer.size();
      int length = (int) Math.min(maxFrameSize - 4, byteCount);
      byte type = TYPE_PUSH_PROMISE;
      byte flags = byteCount == length ? FLAG_END_HEADERS : 0;
      frameHeader(streamId, length + 4, type, flags);
      sink.writeInt(promisedStreamId & 0x7fffffff);
      sink.write(hpackBuffer, length);

      if (byteCount > length) writeContinuationFrames(streamId, byteCount - length);
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void headers(boolean outFinished, int streamId, List<Header> headerBlock) throws IOException {
      if (closed) throw new IOException("closed");
      if (hpackBuffer.size() != 0) throw new IllegalStateException();
      hpackWriter.writeHeaders(headerBlock);

      long byteCount = hpackBuffer.size();
      int length = (int) Math.min(maxFrameSize, byteCount);
      byte type = TYPE_HEADERS;
      byte flags = byteCount == length ? FLAG_END_HEADERS : 0;
      if (outFinished) flags |= FLAG_END_STREAM;
      frameHeader(streamId, length, type, flags);
      sink.write(hpackBuffer, length);

      if (byteCount > length) writeContinuationFrames(streamId, byteCount - length);
    } ##FSTMerge## void headers(boolean outFinished, int streamId, List<Header> headerBlock) throws IOException {
      if (closed) throw new IOException("closed");
      if (hpackBuffer.size() != 0) throw new IllegalStateException();
      hpackWriter.writeHeaders(headerBlock);

      long byteCount = hpackBuffer.size();
      int length = (int) Math.min(maxFrameSize, byteCount);
      byte type = TYPE_HEADERS;
      byte flags = byteCount == length ? FLAG_END_HEADERS : 0;
      if (outFinished) flags |= FLAG_END_STREAM;
      frameHeader(streamId, length, type, flags);
      sink.write(hpackBuffer, length);

      if (byteCount > length) writeContinuationFrames(streamId, byteCount - length);
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void writeContinuationFrames(int streamId, long byteCount) throws IOException {
      while (byteCount > 0) {
        int length = (int) Math.min(maxFrameSize, byteCount);
        byteCount -= length;
        frameHeader(streamId, length, TYPE_CONTINUATION, byteCount == 0 ? FLAG_END_HEADERS : 0);
        sink.write(hpackBuffer, length);
      }
    } ##FSTMerge## private void writeContinuationFrames(int streamId, long byteCount) throws IOException {
      while (byteCount > 0) {
        int length = (int) Math.min(maxFrameSize, byteCount);
        byteCount -= length;
        frameHeader(streamId, length, TYPE_CONTINUATION, byteCount == 0 ? FLAG_END_HEADERS : 0);
        sink.write(hpackBuffer, length);
      }
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public synchronized void rstStream(int streamId, ErrorCode errorCode)
        throws IOException {
      if (closed) throw new IOException("closed");
      if (errorCode.spdyRstCode == -1) throw new IllegalArgumentException();

      int length = 4;
      byte type = TYPE_RST_STREAM;
      byte flags = FLAG_NONE;
      frameHeader(streamId, length, type, flags);
      sink.writeInt(errorCode.httpCode);
      sink.flush();
    } ##FSTMerge## @Override public synchronized void rstStream(int streamId, ErrorCode errorCode)
        throws IOException {
      if (closed) throw new IOException("closed");
      if (errorCode.spdyRstCode == -1) throw new IllegalArgumentException();

      int length = 4;
      byte type = TYPE_RST_STREAM;
      byte flags = FLAG_NONE;
      frameHeader(streamId, length, type, flags);
      sink.writeInt(errorCode.httpCode);
      sink.flush();
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public int maxDataLength() {
      return maxFrameSize;
    } ##FSTMerge## @Override public int maxDataLength() {
      return maxFrameSize;
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public synchronized void data(boolean outFinished, int streamId, Buffer source,
        int byteCount) throws IOException {
      if (closed) throw new IOException("closed");
      byte flags = FLAG_NONE;
      if (outFinished) flags |= FLAG_END_STREAM;
      dataFrame(streamId, flags, source, byteCount);
    } ##FSTMerge## @Override public synchronized void data(boolean outFinished, int streamId, Buffer source,
        int byteCount) throws IOException {
      if (closed) throw new IOException("closed");
      byte flags = FLAG_NONE;
      if (outFinished) flags |= FLAG_END_STREAM;
      dataFrame(streamId, flags, source, byteCount);
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void dataFrame(int streamId, byte flags, Buffer buffer, int byteCount) throws IOException {
      byte type = TYPE_DATA;
      frameHeader(streamId, byteCount, type, flags);
      if (byteCount > 0) {
        sink.write(buffer, byteCount);
      }
    } ##FSTMerge## void dataFrame(int streamId, byte flags, Buffer buffer, int byteCount) throws IOException {
      byte type = TYPE_DATA;
      frameHeader(streamId, byteCount, type, flags);
      if (byteCount > 0) {
        sink.write(buffer, byteCount);
      }
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public synchronized void settings(Settings settings) throws IOException {
      if (closed) throw new IOException("closed");
      int length = settings.size() * 6;
      byte type = TYPE_SETTINGS;
      byte flags = FLAG_NONE;
      int streamId = 0;
      frameHeader(streamId, length, type, flags);
      for (int i = 0; i < Settings.COUNT; i++) {
        if (!settings.isSet(i)) continue;
        int id = i;
        if (id == 4) id = 3; // SETTINGS_MAX_CONCURRENT_STREAMS renumbered.
        else if (id == 7) id = 4; // SETTINGS_INITIAL_WINDOW_SIZE renumbered.
        sink.writeShort(id);
        sink.writeInt(settings.get(i));
      }
      sink.flush();
    } ##FSTMerge## @Override public synchronized void settings(Settings settings) throws IOException {
      if (closed) throw new IOException("closed");
      int length = settings.size() * 6;
      byte type = TYPE_SETTINGS;
      byte flags = FLAG_NONE;
      int streamId = 0;
      frameHeader(streamId, length, type, flags);
      for (int i = 0; i < Settings.COUNT; i++) {
        if (!settings.isSet(i)) continue;
        int id = i;
        if (id == 4) id = 3; // SETTINGS_MAX_CONCURRENT_STREAMS renumbered.
        else if (id == 7) id = 4; // SETTINGS_INITIAL_WINDOW_SIZE renumbered.
        sink.writeShort(id);
        sink.writeInt(settings.get(i));
      }
      sink.flush();
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public synchronized void ping(boolean ack, int payload1, int payload2)
        throws IOException {
      if (closed) throw new IOException("closed");
      int length = 8;
      byte type = TYPE_PING;
      byte flags = ack ? FLAG_ACK : FLAG_NONE;
      int streamId = 0;
      frameHeader(streamId, length, type, flags);
      sink.writeInt(payload1);
      sink.writeInt(payload2);
      sink.flush();
    } ##FSTMerge## @Override public synchronized void ping(boolean ack, int payload1, int payload2)
        throws IOException {
      if (closed) throw new IOException("closed");
      int length = 8;
      byte type = TYPE_PING;
      byte flags = ack ? FLAG_ACK : FLAG_NONE;
      int streamId = 0;
      frameHeader(streamId, length, type, flags);
      sink.writeInt(payload1);
      sink.writeInt(payload2);
      sink.flush();
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public synchronized void goAway(int lastGoodStreamId, ErrorCode errorCode,
        byte[] debugData) throws IOException {
      if (closed) throw new IOException("closed");
      if (errorCode.httpCode == -1) throw illegalArgument("errorCode.httpCode == -1");
      int length = 8 + debugData.length;
      byte type = TYPE_GOAWAY;
      byte flags = FLAG_NONE;
      int streamId = 0;
      frameHeader(streamId, length, type, flags);
      sink.writeInt(lastGoodStreamId);
      sink.writeInt(errorCode.httpCode);
      if (debugData.length > 0) {
        sink.write(debugData);
      }
      sink.flush();
    } ##FSTMerge## @Override public synchronized void goAway(int lastGoodStreamId, ErrorCode errorCode,
        byte[] debugData) throws IOException {
      if (closed) throw new IOException("closed");
      if (errorCode.httpCode == -1) throw illegalArgument("errorCode.httpCode == -1");
      int length = 8 + debugData.length;
      byte type = TYPE_GOAWAY;
      byte flags = FLAG_NONE;
      int streamId = 0;
      frameHeader(streamId, length, type, flags);
      sink.writeInt(lastGoodStreamId);
      sink.writeInt(errorCode.httpCode);
      if (debugData.length > 0) {
        sink.write(debugData);
      }
      sink.flush();
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public synchronized void windowUpdate(int streamId, long windowSizeIncrement)
        throws IOException {
      if (closed) throw new IOException("closed");
      if (windowSizeIncrement == 0 || windowSizeIncrement > 0x7fffffffL) {
        throw illegalArgument("windowSizeIncrement == 0 || windowSizeIncrement > 0x7fffffffL: %s",
            windowSizeIncrement);
      }
      int length = 4;
      byte type = TYPE_WINDOW_UPDATE;
      byte flags = FLAG_NONE;
      frameHeader(streamId, length, type, flags);
      sink.writeInt((int) windowSizeIncrement);
      sink.flush();
    } ##FSTMerge## @Override public synchronized void windowUpdate(int streamId, long windowSizeIncrement)
        throws IOException {
      if (closed) throw new IOException("closed");
      if (windowSizeIncrement == 0 || windowSizeIncrement > 0x7fffffffL) {
        throw illegalArgument("windowSizeIncrement == 0 || windowSizeIncrement > 0x7fffffffL: %s",
            windowSizeIncrement);
      }
      int length = 4;
      byte type = TYPE_WINDOW_UPDATE;
      byte flags = FLAG_NONE;
      frameHeader(streamId, length, type, flags);
      sink.writeInt((int) windowSizeIncrement);
      sink.flush();
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public synchronized void close() throws IOException {
      closed = true;
      sink.close();
    } ##FSTMerge## @Override public synchronized void close() throws IOException {
      closed = true;
      sink.close();
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void frameHeader(int streamId, int length, byte type, byte flags) throws IOException {
      if (logger.isLoggable(FINE)) logger.fine(formatHeader(false, streamId, length, type, flags));
      if (length > maxFrameSize) {
        throw illegalArgument("FRAME_SIZE_ERROR length > %d: %d", maxFrameSize, length);
      }
      if ((streamId & 0x80000000) != 0) throw illegalArgument("reserved bit set: %s", streamId);
      writeMedium(sink, length);
      sink.writeByte(type & 0xff);
      sink.writeByte(flags & 0xff);
      sink.writeInt(streamId & 0x7fffffff);
    } ##FSTMerge## void frameHeader(int streamId, int length, byte type, byte flags) throws IOException {
      if (logger.isLoggable(FINE)) logger.fine(formatHeader(false, streamId, length, type, flags));
      if (length > maxFrameSize) {
        throw illegalArgument("FRAME_SIZE_ERROR length > %d: %d", maxFrameSize, length);
      }
      if ((streamId & 0x80000000) != 0) throw illegalArgument("reserved bit set: %s", streamId);
      writeMedium(sink, length);
      sink.writeByte(type & 0xff);
      sink.writeByte(flags & 0xff);
      sink.writeInt(streamId & 0x7fffffff);
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static IllegalArgumentException illegalArgument(String message, Object... args) {
    throw new IllegalArgumentException(format(message, args));
  } ##FSTMerge## private static IllegalArgumentException illegalArgument(String message, Object... args) {
    throw new IllegalArgumentException(format(message, args));
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static IOException ioException(String message, Object... args) throws IOException {
    throw new IOException(format(message, args));
  } ##FSTMerge## private static IOException ioException(String message, Object... args) throws IOException {
    throw new IOException(format(message, args));
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final ##FSTMerge## static final
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements Source ##FSTMerge## implements Source
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final BufferedSource source; ##FSTMerge## private final BufferedSource source;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## int length; ##FSTMerge## int length;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## byte flags; ##FSTMerge## byte flags;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## int streamId; ##FSTMerge## int streamId;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## int left; ##FSTMerge## int left;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## short padding; ##FSTMerge## short padding;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ContinuationSource(BufferedSource source) {
      this.source = source;
    } ##FSTMerge## public ContinuationSource(BufferedSource source) {
      this.source = source;
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public long read(Buffer sink, long byteCount) throws IOException {
      while (left == 0) {
        source.skip(padding);
        padding = 0;
        if ((flags & FLAG_END_HEADERS) != 0) return -1;
        readContinuationHeader();
        // TODO: test case for empty continuation header?
      }

      long read = source.read(sink, Math.min(byteCount, left));
      if (read == -1) return -1;
      left -= read;
      return read;
    } ##FSTMerge## @Override public long read(Buffer sink, long byteCount) throws IOException {
      while (left == 0) {
        source.skip(padding);
        padding = 0;
        if ((flags & FLAG_END_HEADERS) != 0) return -1;
        readContinuationHeader();
        // TODO: test case for empty continuation header?
      }

      long read = source.read(sink, Math.min(byteCount, left));
      if (read == -1) return -1;
      left -= read;
      return read;
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public Timeout timeout() {
      return source.timeout();
    } ##FSTMerge## @Override public Timeout timeout() {
      return source.timeout();
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public void close() throws IOException {
    } ##FSTMerge## @Override public void close() throws IOException {
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void readContinuationHeader() throws IOException {
      int previousStreamId = streamId;

      length = left = readMedium(source);
      byte type = (byte) (source.readByte() & 0xff);
      flags = (byte) (source.readByte() & 0xff);
      if (logger.isLoggable(FINE)) logger.fine(formatHeader(true, streamId, length, type, flags));
      streamId = (source.readInt() & 0x7fffffff);
      if (type != TYPE_CONTINUATION) throw ioException("%s != TYPE_CONTINUATION", type);
      if (streamId != previousStreamId) throw ioException("TYPE_CONTINUATION streamId changed");
    } ##FSTMerge## private void readContinuationHeader() throws IOException {
      int previousStreamId = streamId;

      length = left = readMedium(source);
      byte type = (byte) (source.readByte() & 0xff);
      flags = (byte) (source.readByte() & 0xff);
      if (logger.isLoggable(FINE)) logger.fine(formatHeader(true, streamId, length, type, flags));
      streamId = (source.readInt() & 0x7fffffff);
      if (type != TYPE_CONTINUATION) throw ioException("%s != TYPE_CONTINUATION", type);
      if (streamId != previousStreamId) throw ioException("TYPE_CONTINUATION streamId changed");
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static int lengthWithoutPadding(int length, byte flags, short padding)
      throws IOException {
    if ((flags & FLAG_PADDED) != 0) length--; // Account for reading the padding length.
    if (padding > length) {
      throw ioException("PROTOCOL_ERROR padding %s > remaining length %s", padding, length);
    }
    return (short) (length - padding);
  } ##FSTMerge## private static int lengthWithoutPadding(int length, byte flags, short padding)
      throws IOException {
    if ((flags & FLAG_PADDED) != 0) length--; // Account for reading the padding length.
    if (padding > length) {
      throw ioException("PROTOCOL_ERROR padding %s > remaining length %s", padding, length);
    }
    return (short) (length - padding);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final ##FSTMerge## static final
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static String formatHeader(boolean inbound, int streamId, int length, byte type, byte flags) {
      String formattedType = type < TYPES.length ? TYPES[type] : format("0x%02x", type);
      String formattedFlags = formatFlags(type, flags);
      return format("%s 0x%08x %5d %-13s %s", inbound ? "<<" : ">>", streamId, length,
          formattedType, formattedFlags);
    } ##FSTMerge## static String formatHeader(boolean inbound, int streamId, int length, byte type, byte flags) {
      String formattedType = type < TYPES.length ? TYPES[type] : format("0x%02x", type);
      String formattedFlags = formatFlags(type, flags);
      return format("%s 0x%08x %5d %-13s %s", inbound ? "<<" : ">>", streamId, length,
          formattedType, formattedFlags);
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static String formatFlags(byte type, byte flags) {
      if (flags == 0) return "";
      switch (type) { // Special case types that have 0 or 1 flag.
        case TYPE_SETTINGS:
        case TYPE_PING:
          return flags == FLAG_ACK ? "ACK" : BINARY[flags];
        case TYPE_PRIORITY:
        case TYPE_RST_STREAM:
        case TYPE_GOAWAY:
        case TYPE_WINDOW_UPDATE:
          return BINARY[flags];
      }
      String result = flags < FLAGS.length ? FLAGS[flags] : BINARY[flags];
      // Special case types that have overlap flag values.
      if (type == TYPE_PUSH_PROMISE && (flags & FLAG_END_PUSH_PROMISE) != 0) {
        return result.replace("HEADERS", "PUSH_PROMISE"); // TODO: Avoid allocation.
      } else if (type == TYPE_DATA && (flags & FLAG_COMPRESSED) != 0) {
        return result.replace("PRIORITY", "COMPRESSED"); // TODO: Avoid allocation.
      }
      return result;
    } ##FSTMerge## static String formatFlags(byte type, byte flags) {
      if (flags == 0) return "";
      switch (type) { // Special case types that have 0 or 1 flag.
        case TYPE_SETTINGS:
        case TYPE_PING:
          return flags == FLAG_ACK ? "ACK" : BINARY[flags];
        case TYPE_PRIORITY:
        case TYPE_RST_STREAM:
        case TYPE_GOAWAY:
        case TYPE_WINDOW_UPDATE:
          return BINARY[flags];
      }
      String result = flags < FLAGS.length ? FLAGS[flags] : BINARY[flags];
      // Special case types that have overlap flag values.
      if (type == TYPE_PUSH_PROMISE && (flags & FLAG_END_PUSH_PROMISE) != 0) {
        return result.replace("HEADERS", "PUSH_PROMISE"); // TODO: Avoid allocation.
      } else if (type == TYPE_DATA && (flags & FLAG_COMPRESSED) != 0) {
        return result.replace("PRIORITY", "COMPRESSED"); // TODO: Avoid allocation.
      }
      return result;
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static final String[] TYPES = new String[] {
        "DATA",
        "HEADERS",
        "PRIORITY",
        "RST_STREAM",
        "SETTINGS",
        "PUSH_PROMISE",
        "PING",
        "GOAWAY",
        "WINDOW_UPDATE",
        "CONTINUATION"
    }; ##FSTMerge## private static final String[] TYPES = new String[] {
        "DATA",
        "HEADERS",
        "PRIORITY",
        "RST_STREAM",
        "SETTINGS",
        "PUSH_PROMISE",
        "PING",
        "GOAWAY",
        "WINDOW_UPDATE",
        "CONTINUATION"
    };
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static final String[] FLAGS = new String[0x40]; ##FSTMerge## private static final String[] FLAGS = new String[0x40];
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static final String[] BINARY = new String[256]; ##FSTMerge## private static final String[] BINARY = new String[256];
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static int readMedium(BufferedSource source) throws IOException {
    return (source.readByte() & 0xff) << 16
        |  (source.readByte() & 0xff) <<  8
        |  (source.readByte() & 0xff);
  } ##FSTMerge## private static int readMedium(BufferedSource source) throws IOException {
    return (source.readByte() & 0xff) << 16
        |  (source.readByte() & 0xff) <<  8
        |  (source.readByte() & 0xff);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static void writeMedium(BufferedSink sink, int i) throws IOException {
    sink.writeByte((i >>> 16) & 0xff);
    sink.writeByte((i >>>  8) & 0xff);
    sink.writeByte(i          & 0xff);
  } ##FSTMerge## private static void writeMedium(BufferedSink sink, int i) throws IOException {
    sink.writeByte((i >>> 16) & 0xff);
    sink.writeByte((i >>>  8) & 0xff);
    sink.writeByte(i          & 0xff);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/HeadersMode.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public boolean failIfStreamAbsent() {
    return this == SPDY_REPLY || this == SPDY_HEADERS;
  } ##FSTMerge## public boolean failIfStreamAbsent() {
    return this == SPDY_REPLY || this == SPDY_HEADERS;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/HeadersMode.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public boolean failIfStreamPresent() {
    return this == SPDY_SYN_STREAM;
  } ##FSTMerge## public boolean failIfStreamPresent() {
    return this == SPDY_SYN_STREAM;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/HeadersMode.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public boolean failIfHeadersAbsent() {
    return this == SPDY_HEADERS;
  } ##FSTMerge## public boolean failIfHeadersAbsent() {
    return this == SPDY_HEADERS;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/HeadersMode.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public boolean failIfHeadersPresent() {
    return this == SPDY_REPLY;
  } ##FSTMerge## public boolean failIfHeadersPresent() {
    return this == SPDY_REPLY;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/HeadersMode.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final ##FSTMerge## public final
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Header.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final ByteString RESPONSE_STATUS = ByteString.encodeUtf8(":status"); ##FSTMerge## public static final ByteString RESPONSE_STATUS = ByteString.encodeUtf8(":status");
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Header.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final ByteString TARGET_METHOD = ByteString.encodeUtf8(":method"); ##FSTMerge## public static final ByteString TARGET_METHOD = ByteString.encodeUtf8(":method");
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Header.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final ByteString TARGET_PATH = ByteString.encodeUtf8(":path"); ##FSTMerge## public static final ByteString TARGET_PATH = ByteString.encodeUtf8(":path");
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Header.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final ByteString TARGET_SCHEME = ByteString.encodeUtf8(":scheme"); ##FSTMerge## public static final ByteString TARGET_SCHEME = ByteString.encodeUtf8(":scheme");
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Header.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final ByteString TARGET_AUTHORITY = ByteString.encodeUtf8(":authority"); ##FSTMerge## public static final ByteString TARGET_AUTHORITY = ByteString.encodeUtf8(":authority");
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Header.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final ByteString TARGET_HOST = ByteString.encodeUtf8(":host"); ##FSTMerge## public static final ByteString TARGET_HOST = ByteString.encodeUtf8(":host");
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Header.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final ByteString VERSION = ByteString.encodeUtf8(":version"); ##FSTMerge## public static final ByteString VERSION = ByteString.encodeUtf8(":version");
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Header.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final ByteString name; ##FSTMerge## public final ByteString name;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Header.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final ByteString value; ##FSTMerge## public final ByteString value;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Header.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final int hpackSize; ##FSTMerge## final int hpackSize;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Header.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Header(String name, String value) {
    this(ByteString.encodeUtf8(name), ByteString.encodeUtf8(value));
  } ##FSTMerge## public Header(String name, String value) {
    this(ByteString.encodeUtf8(name), ByteString.encodeUtf8(value));
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Header.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Header(ByteString name, String value) {
    this(name, ByteString.encodeUtf8(value));
  } ##FSTMerge## public Header(ByteString name, String value) {
    this(name, ByteString.encodeUtf8(value));
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Header.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Header(ByteString name, ByteString value) {
    this.name = name;
    this.value = value;
    this.hpackSize = 32 + name.size() + value.size();
  } ##FSTMerge## public Header(ByteString name, ByteString value) {
    this.name = name;
    this.value = value;
    this.hpackSize = 32 + name.size() + value.size();
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Header.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public boolean equals(Object other) {
    if (other instanceof Header) {
      Header that = (Header) other;
      return this.name.equals(that.name)
          && this.value.equals(that.value);
    }
    return false;
  } ##FSTMerge## @Override public boolean equals(Object other) {
    if (other instanceof Header) {
      Header that = (Header) other;
      return this.name.equals(that.name)
          && this.value.equals(that.value);
    }
    return false;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Header.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public int hashCode() {
    int result = 17;
    result = 31 * result + name.hashCode();
    result = 31 * result + value.hashCode();
    return result;
  } ##FSTMerge## @Override public int hashCode() {
    int result = 17;
    result = 31 * result + name.hashCode();
    result = 31 * result + value.hashCode();
    return result;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Header.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public String toString() {
    return String.format("%s: %s", name.utf8(), value.utf8());
  } ##FSTMerge## @Override public String toString() {
    return String.format("%s: %s", name.utf8(), value.utf8());
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Header.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/FrameWriter.java
############## CONFLICT ##############
Conflict type: ExtendsList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## extends Closeable ##FSTMerge## extends Closeable
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/FrameWriter.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void connectionPreface() throws IOException; ##FSTMerge## void connectionPreface() throws IOException;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/FrameWriter.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void ackSettings(Settings peerSettings) throws IOException; ##FSTMerge## void ackSettings(Settings peerSettings) throws IOException;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/FrameWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void pushPromise(int streamId, int promisedStreamId, List<Header> requestHeaders)
      throws IOException; ##FSTMerge## void pushPromise(int streamId, int promisedStreamId, List<Header> requestHeaders)
      throws IOException;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/FrameWriter.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void flush() throws IOException; ##FSTMerge## void flush() throws IOException;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/FrameWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void synStream(boolean outFinished, boolean inFinished, int streamId, int associatedStreamId,
      List<Header> headerBlock) throws IOException; ##FSTMerge## void synStream(boolean outFinished, boolean inFinished, int streamId, int associatedStreamId,
      List<Header> headerBlock) throws IOException;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/FrameWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void synReply(boolean outFinished, int streamId, List<Header> headerBlock)
      throws IOException; ##FSTMerge## void synReply(boolean outFinished, int streamId, List<Header> headerBlock)
      throws IOException;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/FrameWriter.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void headers(int streamId, List<Header> headerBlock) throws IOException; ##FSTMerge## void headers(int streamId, List<Header> headerBlock) throws IOException;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/FrameWriter.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void rstStream(int streamId, ErrorCode errorCode) throws IOException; ##FSTMerge## void rstStream(int streamId, ErrorCode errorCode) throws IOException;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/FrameWriter.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## int maxDataLength(); ##FSTMerge## int maxDataLength();
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/FrameWriter.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void data(boolean outFinished, int streamId, Buffer source, int byteCount) throws IOException; ##FSTMerge## void data(boolean outFinished, int streamId, Buffer source, int byteCount) throws IOException;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/FrameWriter.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void settings(Settings okHttpSettings) throws IOException; ##FSTMerge## void settings(Settings okHttpSettings) throws IOException;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/FrameWriter.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void ping(boolean ack, int payload1, int payload2) throws IOException; ##FSTMerge## void ping(boolean ack, int payload1, int payload2) throws IOException;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/FrameWriter.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void goAway(int lastGoodStreamId, ErrorCode errorCode, byte[] debugData) throws IOException; ##FSTMerge## void goAway(int lastGoodStreamId, ErrorCode errorCode, byte[] debugData) throws IOException;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/FrameWriter.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void windowUpdate(int streamId, long windowSizeIncrement) throws IOException; ##FSTMerge## void windowUpdate(int streamId, long windowSizeIncrement) throws IOException;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/FrameWriter.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/FrameReader.java
############## CONFLICT ##############
Conflict type: ExtendsList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## extends Closeable ##FSTMerge## extends Closeable
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/FrameReader.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void readConnectionPreface() throws IOException; ##FSTMerge## void readConnectionPreface() throws IOException;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/FrameReader.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## boolean nextFrame(Handler handler) throws IOException; ##FSTMerge## boolean nextFrame(Handler handler) throws IOException;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/FrameReader.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/FrameReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void data(boolean inFinished, int streamId, BufferedSource source, int length)
        throws IOException; ##FSTMerge## void data(boolean inFinished, int streamId, BufferedSource source, int length)
        throws IOException;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/FrameReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void headers(boolean outFinished, boolean inFinished, int streamId, int associatedStreamId,
        List<Header> headerBlock, HeadersMode headersMode); ##FSTMerge## void headers(boolean outFinished, boolean inFinished, int streamId, int associatedStreamId,
        List<Header> headerBlock, HeadersMode headersMode);
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/FrameReader.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void rstStream(int streamId, ErrorCode errorCode); ##FSTMerge## void rstStream(int streamId, ErrorCode errorCode);
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/FrameReader.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void settings(boolean clearPrevious, Settings settings); ##FSTMerge## void settings(boolean clearPrevious, Settings settings);
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/FrameReader.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void ackSettings(); ##FSTMerge## void ackSettings();
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/FrameReader.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void ping(boolean ack, int payload1, int payload2); ##FSTMerge## void ping(boolean ack, int payload1, int payload2);
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/FrameReader.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void goAway(int lastGoodStreamId, ErrorCode errorCode, ByteString debugData); ##FSTMerge## void goAway(int lastGoodStreamId, ErrorCode errorCode, ByteString debugData);
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/FrameReader.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void windowUpdate(int streamId, long windowSizeIncrement); ##FSTMerge## void windowUpdate(int streamId, long windowSizeIncrement);
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/FrameReader.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void priority(int streamId, int streamDependency, int weight, boolean exclusive); ##FSTMerge## void priority(int streamId, int streamDependency, int weight, boolean exclusive);
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/FrameReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void pushPromise(int streamId, int promisedStreamId, List<Header> requestHeaders)
        throws IOException; ##FSTMerge## void pushPromise(int streamId, int promisedStreamId, List<Header> requestHeaders)
        throws IOException;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/FrameReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void alternateService(int streamId, String origin, ByteString protocol, String host, int port,
        long maxAge); ##FSTMerge## void alternateService(int streamId, String origin, ByteString protocol, String host, int port,
        long maxAge);
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/FrameReader.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/ErrorCode.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final int httpCode; ##FSTMerge## public final int httpCode;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/ErrorCode.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final int spdyRstCode; ##FSTMerge## public final int spdyRstCode;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/ErrorCode.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final int spdyGoAwayCode; ##FSTMerge## public final int spdyGoAwayCode;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/ErrorCode.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private ErrorCode(int httpCode, int spdyRstCode, int spdyGoAwayCode) {
    this.httpCode = httpCode;
    this.spdyRstCode = spdyRstCode;
    this.spdyGoAwayCode = spdyGoAwayCode;
  } ##FSTMerge## private ErrorCode(int httpCode, int spdyRstCode, int spdyGoAwayCode) {
    this.httpCode = httpCode;
    this.spdyRstCode = spdyRstCode;
    this.spdyGoAwayCode = spdyGoAwayCode;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/ErrorCode.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static ErrorCode fromSpdy3Rst(int code) {
    for (ErrorCode errorCode : ErrorCode.values()) {
      if (errorCode.spdyRstCode == code) return errorCode;
    }
    return null;
  } ##FSTMerge## public static ErrorCode fromSpdy3Rst(int code) {
    for (ErrorCode errorCode : ErrorCode.values()) {
      if (errorCode.spdyRstCode == code) return errorCode;
    }
    return null;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/ErrorCode.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static ErrorCode fromHttp2(int code) {
    for (ErrorCode errorCode : ErrorCode.values()) {
      if (errorCode.httpCode == code) return errorCode;
    }
    return null;
  } ##FSTMerge## public static ErrorCode fromHttp2(int code) {
    for (ErrorCode errorCode : ErrorCode.values()) {
      if (errorCode.httpCode == code) return errorCode;
    }
    return null;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/ErrorCode.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static ErrorCode fromSpdyGoAway(int code) {
    for (ErrorCode errorCode : ErrorCode.values()) {
      if (errorCode.spdyGoAwayCode == code) return errorCode;
    }
    return null;
  } ##FSTMerge## public static ErrorCode fromSpdyGoAway(int code) {
    for (ErrorCode errorCode : ErrorCode.values()) {
      if (errorCode.spdyGoAwayCode == code) return errorCode;
    }
    return null;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/ErrorCode.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/Transport.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## int DISCARD_STREAM_TIMEOUT_MILLIS = 100; ##FSTMerge## int DISCARD_STREAM_TIMEOUT_MILLIS = 100;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/Transport.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## Sink createRequestBody(Request request, long contentLength) throws IOException; ##FSTMerge## Sink createRequestBody(Request request, long contentLength) throws IOException;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/Transport.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void writeRequestHeaders(Request request) throws IOException; ##FSTMerge## void writeRequestHeaders(Request request) throws IOException;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/Transport.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void writeRequestBody(RetryableSink requestBody) throws IOException; ##FSTMerge## void writeRequestBody(RetryableSink requestBody) throws IOException;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/Transport.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void finishRequest() throws IOException; ##FSTMerge## void finishRequest() throws IOException;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/Transport.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## Response.Builder readResponseHeaders() throws IOException; ##FSTMerge## Response.Builder readResponseHeaders() throws IOException;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/Transport.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## ResponseBody openResponseBody(Response response) throws IOException; ##FSTMerge## ResponseBody openResponseBody(Response response) throws IOException;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/Transport.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void releaseConnectionOnIdle() throws IOException; ##FSTMerge## void releaseConnectionOnIdle() throws IOException;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/Transport.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void disconnect(HttpEngine engine) throws IOException; ##FSTMerge## void disconnect(HttpEngine engine) throws IOException;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/Transport.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## boolean canReuseConnection(); ##FSTMerge## boolean canReuseConnection();
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/Transport.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final ##FSTMerge## public final
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpTransport.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements Transport ##FSTMerge## implements Transport
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpTransport.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final HttpEngine httpEngine; ##FSTMerge## private final HttpEngine httpEngine;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpTransport.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final HttpConnection httpConnection; ##FSTMerge## private final HttpConnection httpConnection;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpTransport.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public HttpTransport(HttpEngine httpEngine, HttpConnection httpConnection) {
    this.httpEngine = httpEngine;
    this.httpConnection = httpConnection;
  } ##FSTMerge## public HttpTransport(HttpEngine httpEngine, HttpConnection httpConnection) {
    this.httpEngine = httpEngine;
    this.httpConnection = httpConnection;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpTransport.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public Sink createRequestBody(Request request, long contentLength) throws IOException {
    if ("chunked".equalsIgnoreCase(request.header("Transfer-Encoding"))) {
      // Stream a request body of unknown length.
      return httpConnection.newChunkedSink();
    }

    if (contentLength != -1) {
      // Stream a request body of a known length.
      return httpConnection.newFixedLengthSink(contentLength);
    }

    throw new IllegalStateException(
        "Cannot stream a request body without chunked encoding or a known content length!");
  } ##FSTMerge## @Override public Sink createRequestBody(Request request, long contentLength) throws IOException {
    if ("chunked".equalsIgnoreCase(request.header("Transfer-Encoding"))) {
      // Stream a request body of unknown length.
      return httpConnection.newChunkedSink();
    }

    if (contentLength != -1) {
      // Stream a request body of a known length.
      return httpConnection.newFixedLengthSink(contentLength);
    }

    throw new IllegalStateException(
        "Cannot stream a request body without chunked encoding or a known content length!");
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpTransport.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public void finishRequest() throws IOException {
    httpConnection.flush();
  } ##FSTMerge## @Override public void finishRequest() throws IOException {
    httpConnection.flush();
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpTransport.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public void writeRequestBody(RetryableSink requestBody) throws IOException {
    httpConnection.writeRequestBody(requestBody);
  } ##FSTMerge## @Override public void writeRequestBody(RetryableSink requestBody) throws IOException {
    httpConnection.writeRequestBody(requestBody);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpTransport.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void writeRequestHeaders(Request request) throws IOException {
    httpEngine.writingRequestHeaders();
    String requestLine = RequestLine.get(request,
        httpEngine.getConnection().getRoute().getProxy().type(),
        httpEngine.getConnection().getProtocol());
    httpConnection.writeRequest(request.headers(), requestLine);
  } ##FSTMerge## public void writeRequestHeaders(Request request) throws IOException {
    httpEngine.writingRequestHeaders();
    String requestLine = RequestLine.get(request,
        httpEngine.getConnection().getRoute().getProxy().type(),
        httpEngine.getConnection().getProtocol());
    httpConnection.writeRequest(request.headers(), requestLine);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpTransport.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public Response.Builder readResponseHeaders() throws IOException {
    return httpConnection.readResponse();
  } ##FSTMerge## @Override public Response.Builder readResponseHeaders() throws IOException {
    return httpConnection.readResponse();
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpTransport.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public void releaseConnectionOnIdle() throws IOException {
    if (canReuseConnection()) {
      httpConnection.poolOnIdle();
    } else {
      httpConnection.closeOnIdle();
    }
  } ##FSTMerge## @Override public void releaseConnectionOnIdle() throws IOException {
    if (canReuseConnection()) {
      httpConnection.poolOnIdle();
    } else {
      httpConnection.closeOnIdle();
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpTransport.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public boolean canReuseConnection() {
    // If the request specified that the connection shouldn't be reused, don't reuse it.
    if ("close".equalsIgnoreCase(httpEngine.getRequest().header("Connection"))) {
      return false;
    }

    // If the response specified that the connection shouldn't be reused, don't reuse it.
    if ("close".equalsIgnoreCase(httpEngine.getResponse().header("Connection"))) {
      return false;
    }

    if (httpConnection.isClosed()) {
      return false;
    }

    return true;
  } ##FSTMerge## @Override public boolean canReuseConnection() {
    // If the request specified that the connection shouldn't be reused, don't reuse it.
    if ("close".equalsIgnoreCase(httpEngine.getRequest().header("Connection"))) {
      return false;
    }

    // If the response specified that the connection shouldn't be reused, don't reuse it.
    if ("close".equalsIgnoreCase(httpEngine.getResponse().header("Connection"))) {
      return false;
    }

    if (httpConnection.isClosed()) {
      return false;
    }

    return true;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpTransport.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public ResponseBody openResponseBody(Response response) throws IOException {
    Source source = getTransferStream(response);
    return new RealResponseBody(response.headers(), Okio.buffer(source));
  } ##FSTMerge## @Override public ResponseBody openResponseBody(Response response) throws IOException {
    Source source = getTransferStream(response);
    return new RealResponseBody(response.headers(), Okio.buffer(source));
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpTransport.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Source getTransferStream(Response response) throws IOException {
    if (!HttpEngine.hasBody(response)) {
      return httpConnection.newFixedLengthSource(0);
    }

    if ("chunked".equalsIgnoreCase(response.header("Transfer-Encoding"))) {
      return httpConnection.newChunkedSource(httpEngine);
    }

    long contentLength = OkHeaders.contentLength(response);
    if (contentLength != -1) {
      return httpConnection.newFixedLengthSource(contentLength);
    }

    // Wrap the input stream from the connection (rather than just returning
    // "socketIn" directly here), so that we can control its use after the
    // reference escapes.
    return httpConnection.newUnknownLengthSource();
  } ##FSTMerge## private Source getTransferStream(Response response) throws IOException {
    if (!HttpEngine.hasBody(response)) {
      return httpConnection.newFixedLengthSource(0);
    }

    if ("chunked".equalsIgnoreCase(response.header("Transfer-Encoding"))) {
      return httpConnection.newChunkedSource(httpEngine);
    }

    long contentLength = OkHeaders.contentLength(response);
    if (contentLength != -1) {
      return httpConnection.newFixedLengthSource(contentLength);
    }

    // Wrap the input stream from the connection (rather than just returning
    // "socketIn" directly here), so that we can control its use after the
    // reference escapes.
    return httpConnection.newUnknownLengthSource();
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpTransport.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public void disconnect(HttpEngine engine) throws IOException {
    httpConnection.closeIfOwnedBy(engine);
  } ##FSTMerge## @Override public void disconnect(HttpEngine engine) throws IOException {
    httpConnection.closeIfOwnedBy(engine);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpTransport.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final ##FSTMerge## public final
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static final int STATE_IDLE = 0; ##FSTMerge## private static final int STATE_IDLE = 0;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static final int STATE_OPEN_REQUEST_BODY = 1; ##FSTMerge## private static final int STATE_OPEN_REQUEST_BODY = 1;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static final int STATE_WRITING_REQUEST_BODY = 2; ##FSTMerge## private static final int STATE_WRITING_REQUEST_BODY = 2;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static final int STATE_READ_RESPONSE_HEADERS = 3; ##FSTMerge## private static final int STATE_READ_RESPONSE_HEADERS = 3;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static final int STATE_OPEN_RESPONSE_BODY = 4; ##FSTMerge## private static final int STATE_OPEN_RESPONSE_BODY = 4;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static final int STATE_READING_RESPONSE_BODY = 5; ##FSTMerge## private static final int STATE_READING_RESPONSE_BODY = 5;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static final int STATE_CLOSED = 6; ##FSTMerge## private static final int STATE_CLOSED = 6;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static final int ON_IDLE_HOLD = 0; ##FSTMerge## private static final int ON_IDLE_HOLD = 0;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static final int ON_IDLE_POOL = 1; ##FSTMerge## private static final int ON_IDLE_POOL = 1;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static final int ON_IDLE_CLOSE = 2; ##FSTMerge## private static final int ON_IDLE_CLOSE = 2;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final ConnectionPool pool; ##FSTMerge## private final ConnectionPool pool;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final Connection connection; ##FSTMerge## private final Connection connection;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final Socket socket; ##FSTMerge## private final Socket socket;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final BufferedSource source; ##FSTMerge## private final BufferedSource source;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final BufferedSink sink; ##FSTMerge## private final BufferedSink sink;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private int state = STATE_IDLE; ##FSTMerge## private int state = STATE_IDLE;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private int onIdle = ON_IDLE_HOLD; ##FSTMerge## private int onIdle = ON_IDLE_HOLD;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public HttpConnection(ConnectionPool pool, Connection connection, Socket socket)
      throws IOException {
    this.pool = pool;
    this.connection = connection;
    this.socket = socket;
    this.source = Okio.buffer(Okio.source(socket));
    this.sink = Okio.buffer(Okio.sink(socket));
  } ##FSTMerge## public HttpConnection(ConnectionPool pool, Connection connection, Socket socket)
      throws IOException {
    this.pool = pool;
    this.connection = connection;
    this.socket = socket;
    this.source = Okio.buffer(Okio.source(socket));
    this.sink = Okio.buffer(Okio.sink(socket));
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void setTimeouts(int readTimeoutMillis, int writeTimeoutMillis) {
    if (readTimeoutMillis != 0) {
      source.timeout().timeout(readTimeoutMillis, MILLISECONDS);
    }
    if (writeTimeoutMillis != 0) {
      sink.timeout().timeout(writeTimeoutMillis, MILLISECONDS);
    }
  } ##FSTMerge## public void setTimeouts(int readTimeoutMillis, int writeTimeoutMillis) {
    if (readTimeoutMillis != 0) {
      source.timeout().timeout(readTimeoutMillis, MILLISECONDS);
    }
    if (writeTimeoutMillis != 0) {
      sink.timeout().timeout(writeTimeoutMillis, MILLISECONDS);
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void poolOnIdle() {
    onIdle = ON_IDLE_POOL;

    // If we're already idle, go to the pool immediately.
    if (state == STATE_IDLE) {
      onIdle = ON_IDLE_HOLD; // Set the on idle policy back to the default.
      Internal.instance.recycle(pool, connection);
    }
  } ##FSTMerge## public void poolOnIdle() {
    onIdle = ON_IDLE_POOL;

    // If we're already idle, go to the pool immediately.
    if (state == STATE_IDLE) {
      onIdle = ON_IDLE_HOLD; // Set the on idle policy back to the default.
      Internal.instance.recycle(pool, connection);
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void closeOnIdle() throws IOException {
    onIdle = ON_IDLE_CLOSE;

    // If we're already idle, close immediately.
    if (state == STATE_IDLE) {
      state = STATE_CLOSED;
      connection.getSocket().close();
    }
  } ##FSTMerge## public void closeOnIdle() throws IOException {
    onIdle = ON_IDLE_CLOSE;

    // If we're already idle, close immediately.
    if (state == STATE_IDLE) {
      state = STATE_CLOSED;
      connection.getSocket().close();
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public boolean isClosed() {
    return state == STATE_CLOSED;
  } ##FSTMerge## public boolean isClosed() {
    return state == STATE_CLOSED;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void closeIfOwnedBy(Object owner) throws IOException {
    Internal.instance.closeIfOwnedBy(connection, owner);
  } ##FSTMerge## public void closeIfOwnedBy(Object owner) throws IOException {
    Internal.instance.closeIfOwnedBy(connection, owner);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void flush() throws IOException {
    sink.flush();
  } ##FSTMerge## public void flush() throws IOException {
    sink.flush();
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public long bufferSize() {
    return source.buffer().size();
  } ##FSTMerge## public long bufferSize() {
    return source.buffer().size();
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public boolean isReadable() {
    try {
      int readTimeout = socket.getSoTimeout();
      try {
        socket.setSoTimeout(1);
        if (source.exhausted()) {
          return false; // Stream is exhausted; socket is closed.
        }
        return true;
      } finally {
        socket.setSoTimeout(readTimeout);
      }
    } catch (SocketTimeoutException ignored) {
      return true; // Read timed out; socket is good.
    } catch (IOException e) {
      return false; // Couldn't read; socket is closed.
    }
  } ##FSTMerge## public boolean isReadable() {
    try {
      int readTimeout = socket.getSoTimeout();
      try {
        socket.setSoTimeout(1);
        if (source.exhausted()) {
          return false; // Stream is exhausted; socket is closed.
        }
        return true;
      } finally {
        socket.setSoTimeout(readTimeout);
      }
    } catch (SocketTimeoutException ignored) {
      return true; // Read timed out; socket is good.
    } catch (IOException e) {
      return false; // Couldn't read; socket is closed.
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void writeRequest(Headers headers, String requestLine) throws IOException {
    if (state != STATE_IDLE) throw new IllegalStateException("state: " + state);
    sink.writeUtf8(requestLine).writeUtf8("\r\n");
    for (int i = 0, size = headers.size(); i < size; i ++) {
      sink.writeUtf8(headers.name(i))
          .writeUtf8(": ")
          .writeUtf8(headers.value(i))
          .writeUtf8("\r\n");
    }
    sink.writeUtf8("\r\n");
    state = STATE_OPEN_REQUEST_BODY;
  } ##FSTMerge## public void writeRequest(Headers headers, String requestLine) throws IOException {
    if (state != STATE_IDLE) throw new IllegalStateException("state: " + state);
    sink.writeUtf8(requestLine).writeUtf8("\r\n");
    for (int i = 0, size = headers.size(); i < size; i ++) {
      sink.writeUtf8(headers.name(i))
          .writeUtf8(": ")
          .writeUtf8(headers.value(i))
          .writeUtf8("\r\n");
    }
    sink.writeUtf8("\r\n");
    state = STATE_OPEN_REQUEST_BODY;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Response.Builder readResponse() throws IOException {
    if (state != STATE_OPEN_REQUEST_BODY && state != STATE_READ_RESPONSE_HEADERS) {
      throw new IllegalStateException("state: " + state);
    }

    while (true) {
      StatusLine statusLine = StatusLine.parse(source.readUtf8LineStrict());

      Response.Builder responseBuilder = new Response.Builder()
          .protocol(statusLine.protocol)
          .code(statusLine.code)
          .message(statusLine.message);

      Headers.Builder headersBuilder = new Headers.Builder();
      readHeaders(headersBuilder);
      headersBuilder.add(OkHeaders.SELECTED_PROTOCOL, statusLine.protocol.toString());
      responseBuilder.headers(headersBuilder.build());

      if (statusLine.code != HTTP_CONTINUE) {
        state = STATE_OPEN_RESPONSE_BODY;
        return responseBuilder;
      }
    }
  } ##FSTMerge## public Response.Builder readResponse() throws IOException {
    if (state != STATE_OPEN_REQUEST_BODY && state != STATE_READ_RESPONSE_HEADERS) {
      throw new IllegalStateException("state: " + state);
    }

    while (true) {
      StatusLine statusLine = StatusLine.parse(source.readUtf8LineStrict());

      Response.Builder responseBuilder = new Response.Builder()
          .protocol(statusLine.protocol)
          .code(statusLine.code)
          .message(statusLine.message);

      Headers.Builder headersBuilder = new Headers.Builder();
      readHeaders(headersBuilder);
      headersBuilder.add(OkHeaders.SELECTED_PROTOCOL, statusLine.protocol.toString());
      responseBuilder.headers(headersBuilder.build());

      if (statusLine.code != HTTP_CONTINUE) {
        state = STATE_OPEN_RESPONSE_BODY;
        return responseBuilder;
      }
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void readHeaders(Headers.Builder builder) throws IOException {
    // parse the result headers until the first blank line
    for (String line; (line = source.readUtf8LineStrict()).length() != 0; ) {
      Internal.instance.addLenient(builder, line);
    }
  } ##FSTMerge## public void readHeaders(Headers.Builder builder) throws IOException {
    // parse the result headers until the first blank line
    for (String line; (line = source.readUtf8LineStrict()).length() != 0; ) {
      Internal.instance.addLenient(builder, line);
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Sink newChunkedSink() {
    if (state != STATE_OPEN_REQUEST_BODY) throw new IllegalStateException("state: " + state);
    state = STATE_WRITING_REQUEST_BODY;
    return new ChunkedSink();
  } ##FSTMerge## public Sink newChunkedSink() {
    if (state != STATE_OPEN_REQUEST_BODY) throw new IllegalStateException("state: " + state);
    state = STATE_WRITING_REQUEST_BODY;
    return new ChunkedSink();
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Sink newFixedLengthSink(long contentLength) {
    if (state != STATE_OPEN_REQUEST_BODY) throw new IllegalStateException("state: " + state);
    state = STATE_WRITING_REQUEST_BODY;
    return new FixedLengthSink(contentLength);
  } ##FSTMerge## public Sink newFixedLengthSink(long contentLength) {
    if (state != STATE_OPEN_REQUEST_BODY) throw new IllegalStateException("state: " + state);
    state = STATE_WRITING_REQUEST_BODY;
    return new FixedLengthSink(contentLength);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void writeRequestBody(RetryableSink requestBody) throws IOException {
    if (state != STATE_OPEN_REQUEST_BODY) throw new IllegalStateException("state: " + state);
    state = STATE_READ_RESPONSE_HEADERS;
    requestBody.writeToSocket(sink);
  } ##FSTMerge## public void writeRequestBody(RetryableSink requestBody) throws IOException {
    if (state != STATE_OPEN_REQUEST_BODY) throw new IllegalStateException("state: " + state);
    state = STATE_READ_RESPONSE_HEADERS;
    requestBody.writeToSocket(sink);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Source newFixedLengthSource(long length) throws IOException {
    if (state != STATE_OPEN_RESPONSE_BODY) throw new IllegalStateException("state: " + state);
    state = STATE_READING_RESPONSE_BODY;
    return new FixedLengthSource(length);
  } ##FSTMerge## public Source newFixedLengthSource(long length) throws IOException {
    if (state != STATE_OPEN_RESPONSE_BODY) throw new IllegalStateException("state: " + state);
    state = STATE_READING_RESPONSE_BODY;
    return new FixedLengthSource(length);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Source newChunkedSource(HttpEngine httpEngine) throws IOException {
    if (state != STATE_OPEN_RESPONSE_BODY) throw new IllegalStateException("state: " + state);
    state = STATE_READING_RESPONSE_BODY;
    return new ChunkedSource(httpEngine);
  } ##FSTMerge## public Source newChunkedSource(HttpEngine httpEngine) throws IOException {
    if (state != STATE_OPEN_RESPONSE_BODY) throw new IllegalStateException("state: " + state);
    state = STATE_READING_RESPONSE_BODY;
    return new ChunkedSource(httpEngine);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Source newUnknownLengthSource() throws IOException {
    if (state != STATE_OPEN_RESPONSE_BODY) throw new IllegalStateException("state: " + state);
    state = STATE_READING_RESPONSE_BODY;
    return new UnknownLengthSource();
  } ##FSTMerge## public Source newUnknownLengthSource() throws IOException {
    if (state != STATE_OPEN_RESPONSE_BODY) throw new IllegalStateException("state: " + state);
    state = STATE_READING_RESPONSE_BODY;
    return new UnknownLengthSource();
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final ##FSTMerge## private final
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements Sink ##FSTMerge## implements Sink
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private boolean closed; ##FSTMerge## private boolean closed;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private long bytesRemaining; ##FSTMerge## private long bytesRemaining;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private FixedLengthSink(long bytesRemaining) {
      this.bytesRemaining = bytesRemaining;
    } ##FSTMerge## private FixedLengthSink(long bytesRemaining) {
      this.bytesRemaining = bytesRemaining;
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public Timeout timeout() {
      return sink.timeout();
    } ##FSTMerge## @Override public Timeout timeout() {
      return sink.timeout();
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public void write(Buffer source, long byteCount) throws IOException {
      if (closed) throw new IllegalStateException("closed");
      checkOffsetAndCount(source.size(), 0, byteCount);
      if (byteCount > bytesRemaining) {
        throw new ProtocolException("expected " + bytesRemaining
            + " bytes but received " + byteCount);
      }
      sink.write(source, byteCount);
      bytesRemaining -= byteCount;
    } ##FSTMerge## @Override public void write(Buffer source, long byteCount) throws IOException {
      if (closed) throw new IllegalStateException("closed");
      checkOffsetAndCount(source.size(), 0, byteCount);
      if (byteCount > bytesRemaining) {
        throw new ProtocolException("expected " + bytesRemaining
            + " bytes but received " + byteCount);
      }
      sink.write(source, byteCount);
      bytesRemaining -= byteCount;
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public void flush() throws IOException {
      if (closed) return; // Don't throw; this stream might have been closed on the caller's behalf.
      sink.flush();
    } ##FSTMerge## @Override public void flush() throws IOException {
      if (closed) return; // Don't throw; this stream might have been closed on the caller's behalf.
      sink.flush();
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public void close() throws IOException {
      if (closed) return;
      closed = true;
      if (bytesRemaining > 0) throw new ProtocolException("unexpected end of stream");
      state = STATE_READ_RESPONSE_HEADERS;
    } ##FSTMerge## @Override public void close() throws IOException {
      if (closed) return;
      closed = true;
      if (bytesRemaining > 0) throw new ProtocolException("unexpected end of stream");
      state = STATE_READ_RESPONSE_HEADERS;
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static final byte[] CRLF = { '\r', '\n' }; ##FSTMerge## private static final byte[] CRLF = { '\r', '\n' };
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static final byte[] HEX_DIGITS = {
      '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'
  }; ##FSTMerge## private static final byte[] HEX_DIGITS = {
      '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'
  };
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static final byte[] FINAL_CHUNK = { '0', '\r', '\n', '\r', '\n' }; ##FSTMerge## private static final byte[] FINAL_CHUNK = { '0', '\r', '\n', '\r', '\n' };
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final ##FSTMerge## private final
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements Sink ##FSTMerge## implements Sink
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final byte[] hex = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '\r', '\n' }; ##FSTMerge## private final byte[] hex = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '\r', '\n' };
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private boolean closed; ##FSTMerge## private boolean closed;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public Timeout timeout() {
      return sink.timeout();
    } ##FSTMerge## @Override public Timeout timeout() {
      return sink.timeout();
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public void write(Buffer source, long byteCount) throws IOException {
      if (closed) throw new IllegalStateException("closed");
      if (byteCount == 0) return;

      writeHex(byteCount);
      sink.write(source, byteCount);
      sink.write(CRLF);
    } ##FSTMerge## @Override public void write(Buffer source, long byteCount) throws IOException {
      if (closed) throw new IllegalStateException("closed");
      if (byteCount == 0) return;

      writeHex(byteCount);
      sink.write(source, byteCount);
      sink.write(CRLF);
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public synchronized void flush() throws IOException {
      if (closed) return; // Don't throw; this stream might have been closed on the caller's behalf.
      sink.flush();
    } ##FSTMerge## @Override public synchronized void flush() throws IOException {
      if (closed) return; // Don't throw; this stream might have been closed on the caller's behalf.
      sink.flush();
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public synchronized void close() throws IOException {
      if (closed) return;
      closed = true;
      sink.write(FINAL_CHUNK);
      state = STATE_READ_RESPONSE_HEADERS;
    } ##FSTMerge## @Override public synchronized void close() throws IOException {
      if (closed) return;
      closed = true;
      sink.write(FINAL_CHUNK);
      state = STATE_READ_RESPONSE_HEADERS;
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void writeHex(long i) throws IOException {
      int cursor = 16;
      do {
        hex[--cursor] = HEX_DIGITS[((int) (i & 0xf))];
      } while ((i >>>= 4) != 0);
      sink.write(hex, cursor, hex.length - cursor);
    } ##FSTMerge## private void writeHex(long i) throws IOException {
      int cursor = 16;
      do {
        hex[--cursor] = HEX_DIGITS[((int) (i & 0xf))];
      } while ((i >>>= 4) != 0);
      sink.write(hex, cursor, hex.length - cursor);
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private abstract ##FSTMerge## private abstract
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements Source ##FSTMerge## implements Source
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## protected boolean closed; ##FSTMerge## protected boolean closed;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public Timeout timeout() {
      return source.timeout();
    } ##FSTMerge## @Override public Timeout timeout() {
      return source.timeout();
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## protected final void endOfInput(boolean recyclable) throws IOException {
      if (state != STATE_READING_RESPONSE_BODY) throw new IllegalStateException("state: " + state);

      state = STATE_IDLE;
      if (recyclable && onIdle == ON_IDLE_POOL) {
        onIdle = ON_IDLE_HOLD; // Set the on idle policy back to the default.
        Internal.instance.recycle(pool, connection);
      } else if (onIdle == ON_IDLE_CLOSE) {
        state = STATE_CLOSED;
        connection.getSocket().close();
      }
    } ##FSTMerge## protected final void endOfInput(boolean recyclable) throws IOException {
      if (state != STATE_READING_RESPONSE_BODY) throw new IllegalStateException("state: " + state);

      state = STATE_IDLE;
      if (recyclable && onIdle == ON_IDLE_POOL) {
        onIdle = ON_IDLE_HOLD; // Set the on idle policy back to the default.
        Internal.instance.recycle(pool, connection);
      } else if (onIdle == ON_IDLE_CLOSE) {
        state = STATE_CLOSED;
        connection.getSocket().close();
      }
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## protected final void unexpectedEndOfInput() {
      Util.closeQuietly(connection.getSocket());
      state = STATE_CLOSED;
    } ##FSTMerge## protected final void unexpectedEndOfInput() {
      Util.closeQuietly(connection.getSocket());
      state = STATE_CLOSED;
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private ##FSTMerge## private
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: ExtendsList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## extends AbstractSource ##FSTMerge## extends AbstractSource
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private long bytesRemaining; ##FSTMerge## private long bytesRemaining;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public FixedLengthSource(long length) throws IOException {
      bytesRemaining = length;
      if (bytesRemaining == 0) {
        endOfInput(true);
      }
    } ##FSTMerge## public FixedLengthSource(long length) throws IOException {
      bytesRemaining = length;
      if (bytesRemaining == 0) {
        endOfInput(true);
      }
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public long read(Buffer sink, long byteCount) throws IOException {
      if (byteCount < 0) throw new IllegalArgumentException("byteCount < 0: " + byteCount);
      if (closed) throw new IllegalStateException("closed");
      if (bytesRemaining == 0) return -1;

      long read = source.read(sink, Math.min(bytesRemaining, byteCount));
      if (read == -1) {
        unexpectedEndOfInput(); // The server didn't supply the promised content length.
        throw new ProtocolException("unexpected end of stream");
      }

      bytesRemaining -= read;
      if (bytesRemaining == 0) {
        endOfInput(true);
      }
      return read;
    } ##FSTMerge## @Override public long read(Buffer sink, long byteCount) throws IOException {
      if (byteCount < 0) throw new IllegalArgumentException("byteCount < 0: " + byteCount);
      if (closed) throw new IllegalStateException("closed");
      if (bytesRemaining == 0) return -1;

      long read = source.read(sink, Math.min(bytesRemaining, byteCount));
      if (read == -1) {
        unexpectedEndOfInput(); // The server didn't supply the promised content length.
        throw new ProtocolException("unexpected end of stream");
      }

      bytesRemaining -= read;
      if (bytesRemaining == 0) {
        endOfInput(true);
      }
      return read;
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public void close() throws IOException {
      if (closed) return;

      if (bytesRemaining != 0
          && !Util.discard(this, DISCARD_STREAM_TIMEOUT_MILLIS, MILLISECONDS)) {
        unexpectedEndOfInput();
      }

      closed = true;
    } ##FSTMerge## @Override public void close() throws IOException {
      if (closed) return;

      if (bytesRemaining != 0
          && !Util.discard(this, DISCARD_STREAM_TIMEOUT_MILLIS, MILLISECONDS)) {
        unexpectedEndOfInput();
      }

      closed = true;
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private ##FSTMerge## private
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: ExtendsList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## extends AbstractSource ##FSTMerge## extends AbstractSource
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static final int NO_CHUNK_YET = -1; ##FSTMerge## private static final int NO_CHUNK_YET = -1;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private int bytesRemainingInChunk = NO_CHUNK_YET; ##FSTMerge## private int bytesRemainingInChunk = NO_CHUNK_YET;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private boolean hasMoreChunks = true; ##FSTMerge## private boolean hasMoreChunks = true;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final HttpEngine httpEngine; ##FSTMerge## private final HttpEngine httpEngine;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## ChunkedSource(HttpEngine httpEngine) throws IOException {
      this.httpEngine = httpEngine;
    } ##FSTMerge## ChunkedSource(HttpEngine httpEngine) throws IOException {
      this.httpEngine = httpEngine;
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public long read(Buffer sink, long byteCount) throws IOException {
      if (byteCount < 0) throw new IllegalArgumentException("byteCount < 0: " + byteCount);
      if (closed) throw new IllegalStateException("closed");
      if (!hasMoreChunks) return -1;

      if (bytesRemainingInChunk == 0 || bytesRemainingInChunk == NO_CHUNK_YET) {
        readChunkSize();
        if (!hasMoreChunks) return -1;
      }

      long read = source.read(sink, Math.min(byteCount, bytesRemainingInChunk));
      if (read == -1) {
        unexpectedEndOfInput(); // The server didn't supply the promised chunk length.
        throw new IOException("unexpected end of stream");
      }
      bytesRemainingInChunk -= read;
      return read;
    } ##FSTMerge## @Override public long read(Buffer sink, long byteCount) throws IOException {
      if (byteCount < 0) throw new IllegalArgumentException("byteCount < 0: " + byteCount);
      if (closed) throw new IllegalStateException("closed");
      if (!hasMoreChunks) return -1;

      if (bytesRemainingInChunk == 0 || bytesRemainingInChunk == NO_CHUNK_YET) {
        readChunkSize();
        if (!hasMoreChunks) return -1;
      }

      long read = source.read(sink, Math.min(byteCount, bytesRemainingInChunk));
      if (read == -1) {
        unexpectedEndOfInput(); // The server didn't supply the promised chunk length.
        throw new IOException("unexpected end of stream");
      }
      bytesRemainingInChunk -= read;
      return read;
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void readChunkSize() throws IOException {
      // Read the suffix of the previous chunk.
      if (bytesRemainingInChunk != NO_CHUNK_YET) {
        source.readUtf8LineStrict();
      }
      String chunkSizeString = source.readUtf8LineStrict();
      int index = chunkSizeString.indexOf(";");
      if (index != -1) {
        chunkSizeString = chunkSizeString.substring(0, index);
      }
      try {
        bytesRemainingInChunk = Integer.parseInt(chunkSizeString.trim(), 16);
      } catch (NumberFormatException e) {
        throw new ProtocolException("Expected a hex chunk size but was " + chunkSizeString);
      }
      if (bytesRemainingInChunk == 0) {
        hasMoreChunks = false;
        Headers.Builder trailersBuilder = new Headers.Builder();
        readHeaders(trailersBuilder);
        httpEngine.receiveHeaders(trailersBuilder.build());
        endOfInput(true);
      }
    } ##FSTMerge## private void readChunkSize() throws IOException {
      // Read the suffix of the previous chunk.
      if (bytesRemainingInChunk != NO_CHUNK_YET) {
        source.readUtf8LineStrict();
      }
      String chunkSizeString = source.readUtf8LineStrict();
      int index = chunkSizeString.indexOf(";");
      if (index != -1) {
        chunkSizeString = chunkSizeString.substring(0, index);
      }
      try {
        bytesRemainingInChunk = Integer.parseInt(chunkSizeString.trim(), 16);
      } catch (NumberFormatException e) {
        throw new ProtocolException("Expected a hex chunk size but was " + chunkSizeString);
      }
      if (bytesRemainingInChunk == 0) {
        hasMoreChunks = false;
        Headers.Builder trailersBuilder = new Headers.Builder();
        readHeaders(trailersBuilder);
        httpEngine.receiveHeaders(trailersBuilder.build());
        endOfInput(true);
      }
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public void close() throws IOException {
      if (closed) return;
      if (hasMoreChunks && !Util.discard(this, DISCARD_STREAM_TIMEOUT_MILLIS, MILLISECONDS)) {
        unexpectedEndOfInput();
      }
      closed = true;
    } ##FSTMerge## @Override public void close() throws IOException {
      if (closed) return;
      if (hasMoreChunks && !Util.discard(this, DISCARD_STREAM_TIMEOUT_MILLIS, MILLISECONDS)) {
        unexpectedEndOfInput();
      }
      closed = true;
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private ##FSTMerge## private
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: ExtendsList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## extends AbstractSource ##FSTMerge## extends AbstractSource
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private boolean inputExhausted; ##FSTMerge## private boolean inputExhausted;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public long read(Buffer sink, long byteCount)
        throws IOException {
      if (byteCount < 0) throw new IllegalArgumentException("byteCount < 0: " + byteCount);
      if (closed) throw new IllegalStateException("closed");
      if (inputExhausted) return -1;

      long read = source.read(sink, byteCount);
      if (read == -1) {
        inputExhausted = true;
        endOfInput(false);
        return -1;
      }
      return read;
    } ##FSTMerge## @Override public long read(Buffer sink, long byteCount)
        throws IOException {
      if (byteCount < 0) throw new IllegalArgumentException("byteCount < 0: " + byteCount);
      if (closed) throw new IllegalStateException("closed");
      if (inputExhausted) return -1;

      long read = source.read(sink, byteCount);
      if (read == -1) {
        inputExhausted = true;
        endOfInput(false);
        return -1;
      }
      return read;
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public void close() throws IOException {
      if (closed) return;
      if (!inputExhausted) {
        unexpectedEndOfInput();
      }
      closed = true;
    } ##FSTMerge## @Override public void close() throws IOException {
      if (closed) return;
      if (!inputExhausted) {
        unexpectedEndOfInput();
      }
      closed = true;
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final ##FSTMerge## public final
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/MultipartBuilderTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test(expected = IllegalStateException.class)
  public void onePartRequired() throws Exception {
    new MultipartBuilder().build();
  } ##FSTMerge## @Test(expected = IllegalStateException.class)
  public void onePartRequired() throws Exception {
    new MultipartBuilder().build();
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/MultipartBuilderTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void singlePart() throws Exception {
    String expected = ""
        + "--123\r\n"
        + "Content-Length: 13\r\n"
        + "\r\n"
        + "Hello, World!\r\n"
        + "--123--\r\n";

    RequestBody requestBody = new MultipartBuilder("123")
        .addPart(RequestBody.create(null, "Hello, World!"))
        .build();

    assertEquals("multipart/mixed; boundary=123", requestBody.contentType().toString());

    Buffer buffer = new Buffer();
    requestBody.writeTo(buffer);
    assertEquals(-1L, requestBody.contentLength());
    assertEquals(expected, buffer.readUtf8());
  } ##FSTMerge## @Test public void singlePart() throws Exception {
    String expected = ""
        + "--123\r\n"
        + "Content-Length: 13\r\n"
        + "\r\n"
        + "Hello, World!\r\n"
        + "--123--\r\n";

    RequestBody requestBody = new MultipartBuilder("123")
        .addPart(RequestBody.create(null, "Hello, World!"))
        .build();

    assertEquals("multipart/mixed; boundary=123", requestBody.contentType().toString());

    Buffer buffer = new Buffer();
    requestBody.writeTo(buffer);
    assertEquals(-1L, requestBody.contentLength());
    assertEquals(expected, buffer.readUtf8());
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/MultipartBuilderTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void threeParts() throws Exception {
    String expected = ""
        + "--123\r\n"
        + "Content-Length: 5\r\n"
        + "\r\n"
        + "Quick\r\n"
        + "--123\r\n"
        + "Content-Length: 5\r\n"
        + "\r\n"
        + "Brown\r\n"
        + "--123\r\n"
        + "Content-Length: 3\r\n"
        + "\r\n"
        + "Fox\r\n"
        + "--123--\r\n";

    RequestBody requestBody = new MultipartBuilder("123")
        .addPart(RequestBody.create(null, "Quick"))
        .addPart(RequestBody.create(null, "Brown"))
        .addPart(RequestBody.create(null, "Fox"))
        .build();

    assertEquals("multipart/mixed; boundary=123", requestBody.contentType().toString());

    Buffer buffer = new Buffer();
    requestBody.writeTo(buffer);
    assertEquals(-1L, requestBody.contentLength());
    assertEquals(expected, buffer.readUtf8());
  } ##FSTMerge## @Test public void threeParts() throws Exception {
    String expected = ""
        + "--123\r\n"
        + "Content-Length: 5\r\n"
        + "\r\n"
        + "Quick\r\n"
        + "--123\r\n"
        + "Content-Length: 5\r\n"
        + "\r\n"
        + "Brown\r\n"
        + "--123\r\n"
        + "Content-Length: 3\r\n"
        + "\r\n"
        + "Fox\r\n"
        + "--123--\r\n";

    RequestBody requestBody = new MultipartBuilder("123")
        .addPart(RequestBody.create(null, "Quick"))
        .addPart(RequestBody.create(null, "Brown"))
        .addPart(RequestBody.create(null, "Fox"))
        .build();

    assertEquals("multipart/mixed; boundary=123", requestBody.contentType().toString());

    Buffer buffer = new Buffer();
    requestBody.writeTo(buffer);
    assertEquals(-1L, requestBody.contentLength());
    assertEquals(expected, buffer.readUtf8());
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/MultipartBuilderTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void fieldAndTwoFiles() throws Exception {
    String expected = ""
        + "--AaB03x\r\n"
        + "Content-Disposition: form-data; name=\"submit-name\"\r\n"
        + "Content-Length: 5\r\n"
        + "\r\n"
        + "Larry\r\n"
        + "--AaB03x\r\n"
        + "Content-Disposition: form-data; name=\"files\"\r\n"
        + "Content-Type: multipart/mixed; boundary=BbC04y\r\n"
        + "\r\n"
        + "--BbC04y\r\n"
        + "Content-Disposition: file; filename=\"file1.txt\"\r\n"
        + "Content-Type: text/plain; charset=utf-8\r\n"
        + "Content-Length: 29\r\n"
        + "\r\n"
        + "... contents of file1.txt ...\r\n"
        + "--BbC04y\r\n"
        + "Content-Disposition: file; filename=\"file2.gif\"\r\n"
        + "Content-Transfer-Encoding: binary\r\n"
        + "Content-Type: image/gif\r\n"
        + "Content-Length: 29\r\n"
        + "\r\n"
        + "... contents of file2.gif ...\r\n"
        + "--BbC04y--\r\n"
        + "\r\n"
        + "--AaB03x--\r\n";

    RequestBody requestBody = new MultipartBuilder("AaB03x")
        .type(MultipartBuilder.FORM)
        .addFormDataPart("submit-name", "Larry")
        .addFormDataPart("files", null,
            new MultipartBuilder("BbC04y")
                .addPart(
                    Headers.of("Content-Disposition", "file; filename=\"file1.txt\""),
                    RequestBody.create(
                        MediaType.parse("text/plain"), "... contents of file1.txt ..."))
                .addPart(
                    Headers.of(
                        "Content-Disposition", "file; filename=\"file2.gif\"",
                        "Content-Transfer-Encoding", "binary"),
                    RequestBody.create(
                        MediaType.parse("image/gif"),
                        "... contents of file2.gif ...".getBytes(UTF_8)))
                .build())
        .build();

    assertEquals("multipart/form-data; boundary=AaB03x", requestBody.contentType().toString());

    Buffer buffer = new Buffer();
    requestBody.writeTo(buffer);
    assertEquals(-1L, requestBody.contentLength());
    assertEquals(expected, buffer.readUtf8());
  } ##FSTMerge## @Test public void fieldAndTwoFiles() throws Exception {
    String expected = ""
        + "--AaB03x\r\n"
        + "Content-Disposition: form-data; name=\"submit-name\"\r\n"
        + "Content-Length: 5\r\n"
        + "\r\n"
        + "Larry\r\n"
        + "--AaB03x\r\n"
        + "Content-Disposition: form-data; name=\"files\"\r\n"
        + "Content-Type: multipart/mixed; boundary=BbC04y\r\n"
        + "\r\n"
        + "--BbC04y\r\n"
        + "Content-Disposition: file; filename=\"file1.txt\"\r\n"
        + "Content-Type: text/plain; charset=utf-8\r\n"
        + "Content-Length: 29\r\n"
        + "\r\n"
        + "... contents of file1.txt ...\r\n"
        + "--BbC04y\r\n"
        + "Content-Disposition: file; filename=\"file2.gif\"\r\n"
        + "Content-Transfer-Encoding: binary\r\n"
        + "Content-Type: image/gif\r\n"
        + "Content-Length: 29\r\n"
        + "\r\n"
        + "... contents of file2.gif ...\r\n"
        + "--BbC04y--\r\n"
        + "\r\n"
        + "--AaB03x--\r\n";

    RequestBody requestBody = new MultipartBuilder("AaB03x")
        .type(MultipartBuilder.FORM)
        .addFormDataPart("submit-name", "Larry")
        .addFormDataPart("files", null,
            new MultipartBuilder("BbC04y")
                .addPart(
                    Headers.of("Content-Disposition", "file; filename=\"file1.txt\""),
                    RequestBody.create(
                        MediaType.parse("text/plain"), "... contents of file1.txt ..."))
                .addPart(
                    Headers.of(
                        "Content-Disposition", "file; filename=\"file2.gif\"",
                        "Content-Transfer-Encoding", "binary"),
                    RequestBody.create(
                        MediaType.parse("image/gif"),
                        "... contents of file2.gif ...".getBytes(UTF_8)))
                .build())
        .build();

    assertEquals("multipart/form-data; boundary=AaB03x", requestBody.contentType().toString());

    Buffer buffer = new Buffer();
    requestBody.writeTo(buffer);
    assertEquals(-1L, requestBody.contentLength());
    assertEquals(expected, buffer.readUtf8());
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/MultipartBuilderTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void stringEscapingIsWeird() throws Exception {
    String expected = ""
        + "--AaB03x\r\n"
        + "Content-Disposition: form-data; name=\"field with spaces\"; filename=\"filename with spaces.txt\"\r\n"
        + "Content-Type: text/plain; charset=utf-8\r\n"
        + "Content-Length: 4\r\n"
        + "\r\n"
        + "okay\r\n"
        + "--AaB03x\r\n"
        + "Content-Disposition: form-data; name=\"field with %22\"\r\n"
        + "Content-Length: 1\r\n"
        + "\r\n"
        + "\"\r\n"
        + "--AaB03x\r\n"
        + "Content-Disposition: form-data; name=\"field with %22\"\r\n"
        + "Content-Length: 3\r\n"
        + "\r\n"
        + "%22\r\n"
        + "--AaB03x\r\n"
        + "Content-Disposition: form-data; name=\"field with \u0391\"\r\n"
        + "Content-Length: 5\r\n"
        + "\r\n"
        + "Alpha\r\n"
        + "--AaB03x--\r\n";

    RequestBody requestBody = new MultipartBuilder("AaB03x")
        .type(MultipartBuilder.FORM)
        .addFormDataPart("field with spaces", "filename with spaces.txt",
            RequestBody.create(MediaType.parse("text/plain; charset=utf-8"), "okay"))
        .addFormDataPart("field with \"", "\"")
        .addFormDataPart("field with %22", "%22")
        .addFormDataPart("field with \u0391", "Alpha")
        .build();

    Buffer buffer = new Buffer();
    requestBody.writeTo(buffer);
    assertEquals(expected, buffer.readUtf8());
  } ##FSTMerge## @Test public void stringEscapingIsWeird() throws Exception {
    String expected = ""
        + "--AaB03x\r\n"
        + "Content-Disposition: form-data; name=\"field with spaces\"; filename=\"filename with spaces.txt\"\r\n"
        + "Content-Type: text/plain; charset=utf-8\r\n"
        + "Content-Length: 4\r\n"
        + "\r\n"
        + "okay\r\n"
        + "--AaB03x\r\n"
        + "Content-Disposition: form-data; name=\"field with %22\"\r\n"
        + "Content-Length: 1\r\n"
        + "\r\n"
        + "\"\r\n"
        + "--AaB03x\r\n"
        + "Content-Disposition: form-data; name=\"field with %22\"\r\n"
        + "Content-Length: 3\r\n"
        + "\r\n"
        + "%22\r\n"
        + "--AaB03x\r\n"
        + "Content-Disposition: form-data; name=\"field with \u0391\"\r\n"
        + "Content-Length: 5\r\n"
        + "\r\n"
        + "Alpha\r\n"
        + "--AaB03x--\r\n";

    RequestBody requestBody = new MultipartBuilder("AaB03x")
        .type(MultipartBuilder.FORM)
        .addFormDataPart("field with spaces", "filename with spaces.txt",
            RequestBody.create(MediaType.parse("text/plain; charset=utf-8"), "okay"))
        .addFormDataPart("field with \"", "\"")
        .addFormDataPart("field with %22", "%22")
        .addFormDataPart("field with \u0391", "Alpha")
        .build();

    Buffer buffer = new Buffer();
    requestBody.writeTo(buffer);
    assertEquals(expected, buffer.readUtf8());
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/MultipartBuilderTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void streamingPartHasNoLength() throws Exception {
    class StreamingBody extends RequestBody {
      private final String body;

      StreamingBody(String body) {
        this.body = body;
      }

      @Override public MediaType contentType() {
        return null;
      }

      @Override public void writeTo(BufferedSink sink) throws IOException {
        sink.writeUtf8(body);
      }
    }

    String expected = ""
        + "--123\r\n"
        + "Content-Length: 5\r\n"
        + "\r\n"
        + "Quick\r\n"
        + "--123\r\n"
        + "\r\n"
        + "Brown\r\n"
        + "--123\r\n"
        + "Content-Length: 3\r\n"
        + "\r\n"
        + "Fox\r\n"
        + "--123--\r\n";

    RequestBody requestBody = new MultipartBuilder("123")
        .addPart(RequestBody.create(null, "Quick"))
        .addPart(new StreamingBody("Brown"))
        .addPart(RequestBody.create(null, "Fox"))
        .build();

    assertEquals("multipart/mixed; boundary=123", requestBody.contentType().toString());

    Buffer buffer = new Buffer();
    requestBody.writeTo(buffer);
    assertEquals(expected, buffer.readUtf8());
    assertEquals(-1, requestBody.contentLength());
  } ##FSTMerge## @Test public void streamingPartHasNoLength() throws Exception {
    class StreamingBody extends RequestBody {
      private final String body;

      StreamingBody(String body) {
        this.body = body;
      }

      @Override public MediaType contentType() {
        return null;
      }

      @Override public void writeTo(BufferedSink sink) throws IOException {
        sink.writeUtf8(body);
      }
    }

    String expected = ""
        + "--123\r\n"
        + "Content-Length: 5\r\n"
        + "\r\n"
        + "Quick\r\n"
        + "--123\r\n"
        + "\r\n"
        + "Brown\r\n"
        + "--123\r\n"
        + "Content-Length: 3\r\n"
        + "\r\n"
        + "Fox\r\n"
        + "--123--\r\n";

    RequestBody requestBody = new MultipartBuilder("123")
        .addPart(RequestBody.create(null, "Quick"))
        .addPart(new StreamingBody("Brown"))
        .addPart(RequestBody.create(null, "Fox"))
        .build();

    assertEquals("multipart/mixed; boundary=123", requestBody.contentType().toString());

    Buffer buffer = new Buffer();
    requestBody.writeTo(buffer);
    assertEquals(expected, buffer.readUtf8());
    assertEquals(-1, requestBody.contentLength());
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/MultipartBuilderTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void contentTypeHeaderIsForbidden() throws Exception {
    try {
      new MultipartBuilder().addPart(
          Headers.of("Content-Type", "text/plain"),
          RequestBody.create(null, "Hello, World!"));
      fail();
    } catch (IllegalArgumentException expected) {
    }
  } ##FSTMerge## @Test public void contentTypeHeaderIsForbidden() throws Exception {
    try {
      new MultipartBuilder().addPart(
          Headers.of("Content-Type", "text/plain"),
          RequestBody.create(null, "Hello, World!"));
      fail();
    } catch (IllegalArgumentException expected) {
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/MultipartBuilderTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void contentLengthHeaderIsForbidden() throws Exception {
    try {
      new MultipartBuilder().addPart(
          Headers.of("Content-Length", "13"),
          RequestBody.create(null, "Hello, World!"));
      fail();
    } catch (IllegalArgumentException expected) {
    }
  } ##FSTMerge## @Test public void contentLengthHeaderIsForbidden() throws Exception {
    try {
      new MultipartBuilder().addPart(
          Headers.of("Content-Length", "13"),
          RequestBody.create(null, "Hello, World!"));
      fail();
    } catch (IllegalArgumentException expected) {
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/MultipartBuilderTest.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/SingleInetAddressNetwork.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements Network ##FSTMerge## implements Network
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/SingleInetAddressNetwork.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public InetAddress[] resolveInetAddresses(String host) throws UnknownHostException {
    InetAddress[] allInetAddresses = Network.DEFAULT.resolveInetAddresses(host);
    return new InetAddress[] { allInetAddresses[0] };
  } ##FSTMerge## @Override public InetAddress[] resolveInetAddresses(String host) throws UnknownHostException {
    InetAddress[] allInetAddresses = Network.DEFAULT.resolveInetAddresses(host);
    return new InetAddress[] { allInetAddresses[0] };
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/SingleInetAddressNetwork.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/DoubleInetAddressNetwork.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements Network ##FSTMerge## implements Network
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/DoubleInetAddressNetwork.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public InetAddress[] resolveInetAddresses(String host) throws UnknownHostException {
    InetAddress[] allInetAddresses = Network.DEFAULT.resolveInetAddresses(host);
    return new InetAddress[] { allInetAddresses[0], allInetAddresses[0] };
  } ##FSTMerge## @Override public InetAddress[] resolveInetAddresses(String host) throws UnknownHostException {
    InetAddress[] allInetAddresses = Network.DEFAULT.resolveInetAddresses(host);
    return new InetAddress[] { allInetAddresses[0], allInetAddresses[0] };
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/DoubleInetAddressNetwork.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/WebSocketWriterTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final Buffer data = new Buffer(); ##FSTMerge## private final Buffer data = new Buffer();
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/WebSocketWriterTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final Random random = new Random(0); ##FSTMerge## private final Random random = new Random(0);
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/WebSocketWriterTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final WebSocketWriter serverWriter = new WebSocketWriter(false, data, random); ##FSTMerge## private final WebSocketWriter serverWriter = new WebSocketWriter(false, data, random);
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/WebSocketWriterTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final WebSocketWriter clientWriter = new WebSocketWriter(true, data, random); ##FSTMerge## private final WebSocketWriter clientWriter = new WebSocketWriter(true, data, random);
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/WebSocketWriterTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @After public void tearDown() throws IOException {
    assertEquals("Data not empty", "", data.readByteString().hex());
  } ##FSTMerge## @After public void tearDown() throws IOException {
    assertEquals("Data not empty", "", data.readByteString().hex());
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/WebSocketWriterTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void serverSendSimpleHello() throws IOException {
    Buffer payload = new Buffer().writeUtf8("Hello");
    serverWriter.sendMessage(TEXT, payload);
    assertData("810548656c6c6f");
  } ##FSTMerge## @Test public void serverSendSimpleHello() throws IOException {
    Buffer payload = new Buffer().writeUtf8("Hello");
    serverWriter.sendMessage(TEXT, payload);
    assertData("810548656c6c6f");
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/WebSocketWriterTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void clientSendSimpleHello() throws IOException {
    Buffer payload = new Buffer().writeUtf8("Hello");
    clientWriter.sendMessage(TEXT, payload);
    assertData("818560b420bb28d14cd70f");
  } ##FSTMerge## @Test public void clientSendSimpleHello() throws IOException {
    Buffer payload = new Buffer().writeUtf8("Hello");
    clientWriter.sendMessage(TEXT, payload);
    assertData("818560b420bb28d14cd70f");
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/WebSocketWriterTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void serverStreamSimpleHello() throws IOException {
    BufferedSink sink = serverWriter.newMessageSink(TEXT);

    sink.writeUtf8("Hel").flush();
    assertData("010348656c");

    sink.writeUtf8("lo").flush();
    assertData("00026c6f");

    sink.close();
    assertData("8000");
  } ##FSTMerge## @Test public void serverStreamSimpleHello() throws IOException {
    BufferedSink sink = serverWriter.newMessageSink(TEXT);

    sink.writeUtf8("Hel").flush();
    assertData("010348656c");

    sink.writeUtf8("lo").flush();
    assertData("00026c6f");

    sink.close();
    assertData("8000");
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/WebSocketWriterTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void serverStreamCloseFlushes() throws IOException {
    BufferedSink sink = serverWriter.newMessageSink(TEXT);

    sink.writeUtf8("Hel").flush();
    assertData("010348656c");

    sink.writeUtf8("lo").close();
    assertData("00026c6f");
    assertData("8000");
  } ##FSTMerge## @Test public void serverStreamCloseFlushes() throws IOException {
    BufferedSink sink = serverWriter.newMessageSink(TEXT);

    sink.writeUtf8("Hel").flush();
    assertData("010348656c");

    sink.writeUtf8("lo").close();
    assertData("00026c6f");
    assertData("8000");
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/WebSocketWriterTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void clientStreamSimpleHello() throws IOException {
    BufferedSink sink = clientWriter.newMessageSink(TEXT);

    sink.writeUtf8("Hel").flush();
    assertData("018360b420bb28d14c");

    sink.writeUtf8("lo").flush();
    assertData("00823851d9d4543e");

    sink.close();
    assertData("80807acb933d");
  } ##FSTMerge## @Test public void clientStreamSimpleHello() throws IOException {
    BufferedSink sink = clientWriter.newMessageSink(TEXT);

    sink.writeUtf8("Hel").flush();
    assertData("018360b420bb28d14c");

    sink.writeUtf8("lo").flush();
    assertData("00823851d9d4543e");

    sink.close();
    assertData("80807acb933d");
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/WebSocketWriterTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void serverSendBinary() throws IOException {
    byte[] payload = binaryData(100);
    serverWriter.sendMessage(BINARY, new Buffer().write(payload));
    assertData("8264");
    assertData(payload);
  } ##FSTMerge## @Test public void serverSendBinary() throws IOException {
    byte[] payload = binaryData(100);
    serverWriter.sendMessage(BINARY, new Buffer().write(payload));
    assertData("8264");
    assertData(payload);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/WebSocketWriterTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void serverSendBinaryShort() throws IOException {
    byte[] payload = binaryData(1000);
    serverWriter.sendMessage(BINARY, new Buffer().write(payload));
    assertData("827e03e8");
    assertData(payload);
  } ##FSTMerge## @Test public void serverSendBinaryShort() throws IOException {
    byte[] payload = binaryData(1000);
    serverWriter.sendMessage(BINARY, new Buffer().write(payload));
    assertData("827e03e8");
    assertData(payload);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/WebSocketWriterTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void serverSendBinaryLong() throws IOException {
    byte[] payload = binaryData(65537);
    serverWriter.sendMessage(BINARY, new Buffer().write(payload));
    assertData("827f0000000000010001");
    assertData(payload);
  } ##FSTMerge## @Test public void serverSendBinaryLong() throws IOException {
    byte[] payload = binaryData(65537);
    serverWriter.sendMessage(BINARY, new Buffer().write(payload));
    assertData("827f0000000000010001");
    assertData(payload);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/WebSocketWriterTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void clientSendBinary() throws IOException {
    byte[] payload = binaryData(100);
    clientWriter.sendMessage(BINARY, new Buffer().write(payload));
    assertData("82e4");

    byte[] maskKey = new byte[4];
    random.setSeed(0); // Reset the seed so we can mask the payload.
    random.nextBytes(maskKey);
    toggleMask(payload, payload.length, maskKey, 0);

    assertData(maskKey);
    assertData(payload);
  } ##FSTMerge## @Test public void clientSendBinary() throws IOException {
    byte[] payload = binaryData(100);
    clientWriter.sendMessage(BINARY, new Buffer().write(payload));
    assertData("82e4");

    byte[] maskKey = new byte[4];
    random.setSeed(0); // Reset the seed so we can mask the payload.
    random.nextBytes(maskKey);
    toggleMask(payload, payload.length, maskKey, 0);

    assertData(maskKey);
    assertData(payload);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/WebSocketWriterTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void serverStreamBinary() throws IOException {
    byte[] payload = binaryData(100);
    BufferedSink sink = serverWriter.newMessageSink(BINARY);

    sink.write(payload, 0, 50).flush();
    assertData("0232");
    assertData(Arrays.copyOfRange(payload, 0, 50));

    sink.write(payload, 50, 50).flush();
    assertData("0032");
    assertData(Arrays.copyOfRange(payload, 50, 100));

    sink.close();
    assertData("8000");
  } ##FSTMerge## @Test public void serverStreamBinary() throws IOException {
    byte[] payload = binaryData(100);
    BufferedSink sink = serverWriter.newMessageSink(BINARY);

    sink.write(payload, 0, 50).flush();
    assertData("0232");
    assertData(Arrays.copyOfRange(payload, 0, 50));

    sink.write(payload, 50, 50).flush();
    assertData("0032");
    assertData(Arrays.copyOfRange(payload, 50, 100));

    sink.close();
    assertData("8000");
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/WebSocketWriterTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void clientStreamBinary() throws IOException {
    byte[] maskKey1 = new byte[4];
    random.nextBytes(maskKey1);
    byte[] maskKey2 = new byte[4];
    random.nextBytes(maskKey2);
    byte[] maskKey3 = new byte[4];
    random.nextBytes(maskKey3);

    random.setSeed(0); // Reset the seed so real data matches.

    byte[] payload = binaryData(100);
    BufferedSink sink = clientWriter.newMessageSink(BINARY);

    sink.write(payload, 0, 50).flush();
    byte[] part1 = Arrays.copyOfRange(payload, 0, 50);
    toggleMask(part1, 50, maskKey1, 0);
    assertData("02b2");
    assertData(maskKey1);
    assertData(part1);

    sink.write(payload, 50, 50).flush();
    byte[] part2 = Arrays.copyOfRange(payload, 50, 100);
    toggleMask(part2, 50, maskKey2, 0);
    assertData("00b2");
    assertData(maskKey2);
    assertData(part2);

    sink.close();
    assertData("8080");
    assertData(maskKey3);
  } ##FSTMerge## @Test public void clientStreamBinary() throws IOException {
    byte[] maskKey1 = new byte[4];
    random.nextBytes(maskKey1);
    byte[] maskKey2 = new byte[4];
    random.nextBytes(maskKey2);
    byte[] maskKey3 = new byte[4];
    random.nextBytes(maskKey3);

    random.setSeed(0); // Reset the seed so real data matches.

    byte[] payload = binaryData(100);
    BufferedSink sink = clientWriter.newMessageSink(BINARY);

    sink.write(payload, 0, 50).flush();
    byte[] part1 = Arrays.copyOfRange(payload, 0, 50);
    toggleMask(part1, 50, maskKey1, 0);
    assertData("02b2");
    assertData(maskKey1);
    assertData(part1);

    sink.write(payload, 50, 50).flush();
    byte[] part2 = Arrays.copyOfRange(payload, 50, 100);
    toggleMask(part2, 50, maskKey2, 0);
    assertData("00b2");
    assertData(maskKey2);
    assertData(part2);

    sink.close();
    assertData("8080");
    assertData(maskKey3);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/WebSocketWriterTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void serverEmptyClose() throws IOException {
    serverWriter.writeClose(0, null);
    assertData("8800");
  } ##FSTMerge## @Test public void serverEmptyClose() throws IOException {
    serverWriter.writeClose(0, null);
    assertData("8800");
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/WebSocketWriterTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void serverCloseWithCode() throws IOException {
    serverWriter.writeClose(1005, null);
    assertData("880203ed");
  } ##FSTMerge## @Test public void serverCloseWithCode() throws IOException {
    serverWriter.writeClose(1005, null);
    assertData("880203ed");
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/WebSocketWriterTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void serverCloseWithCodeAndReason() throws IOException {
    serverWriter.writeClose(1005, "Hello");
    assertData("880703ed48656c6c6f");
  } ##FSTMerge## @Test public void serverCloseWithCodeAndReason() throws IOException {
    serverWriter.writeClose(1005, "Hello");
    assertData("880703ed48656c6c6f");
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/WebSocketWriterTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void clientEmptyClose() throws IOException {
    clientWriter.writeClose(0, null);
    assertData("888060b420bb");
  } ##FSTMerge## @Test public void clientEmptyClose() throws IOException {
    clientWriter.writeClose(0, null);
    assertData("888060b420bb");
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/WebSocketWriterTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void clientCloseWithCode() throws IOException {
    clientWriter.writeClose(1005, null);
    assertData("888260b420bb6359");
  } ##FSTMerge## @Test public void clientCloseWithCode() throws IOException {
    clientWriter.writeClose(1005, null);
    assertData("888260b420bb6359");
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/WebSocketWriterTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void clientCloseWithCodeAndReason() throws IOException {
    clientWriter.writeClose(1005, "Hello");
    assertData("888760b420bb635968de0cd84f");
  } ##FSTMerge## @Test public void clientCloseWithCodeAndReason() throws IOException {
    clientWriter.writeClose(1005, "Hello");
    assertData("888760b420bb635968de0cd84f");
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/WebSocketWriterTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void closeWithOnlyReasonThrows() throws IOException {
    try {
      clientWriter.writeClose(0, "Hello");
      fail();
    } catch (IllegalArgumentException e) {
      assertEquals("Code required to include reason.", e.getMessage());
    }
  } ##FSTMerge## @Test public void closeWithOnlyReasonThrows() throws IOException {
    try {
      clientWriter.writeClose(0, "Hello");
      fail();
    } catch (IllegalArgumentException e) {
      assertEquals("Code required to include reason.", e.getMessage());
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/WebSocketWriterTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void closeCodeOutOfRangeThrows() throws IOException {
    try {
      clientWriter.writeClose(98724976, "Hello");
      fail();
    } catch (IllegalArgumentException e) {
      assertEquals("Code must be in range [1000,5000).", e.getMessage());
    }
  } ##FSTMerge## @Test public void closeCodeOutOfRangeThrows() throws IOException {
    try {
      clientWriter.writeClose(98724976, "Hello");
      fail();
    } catch (IllegalArgumentException e) {
      assertEquals("Code must be in range [1000,5000).", e.getMessage());
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/WebSocketWriterTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void serverEmptyPing() throws IOException {
    serverWriter.writePing(null);
    assertData("8900");
  } ##FSTMerge## @Test public void serverEmptyPing() throws IOException {
    serverWriter.writePing(null);
    assertData("8900");
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/WebSocketWriterTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void clientEmptyPing() throws IOException {
    clientWriter.writePing(null);
    assertData("898060b420bb");
  } ##FSTMerge## @Test public void clientEmptyPing() throws IOException {
    clientWriter.writePing(null);
    assertData("898060b420bb");
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/WebSocketWriterTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void serverPingWithPayload() throws IOException {
    serverWriter.writePing(new Buffer().writeUtf8("Hello"));
    assertData("890548656c6c6f");
  } ##FSTMerge## @Test public void serverPingWithPayload() throws IOException {
    serverWriter.writePing(new Buffer().writeUtf8("Hello"));
    assertData("890548656c6c6f");
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/WebSocketWriterTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void clientPingWithPayload() throws IOException {
    clientWriter.writePing(new Buffer().writeUtf8("Hello"));
    assertData("898560b420bb28d14cd70f");
  } ##FSTMerge## @Test public void clientPingWithPayload() throws IOException {
    clientWriter.writePing(new Buffer().writeUtf8("Hello"));
    assertData("898560b420bb28d14cd70f");
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/WebSocketWriterTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void serverEmptyPong() throws IOException {
    serverWriter.writePong(null);
    assertData("8a00");
  } ##FSTMerge## @Test public void serverEmptyPong() throws IOException {
    serverWriter.writePong(null);
    assertData("8a00");
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/WebSocketWriterTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void clientEmptyPong() throws IOException {
    clientWriter.writePong(null);
    assertData("8a8060b420bb");
  } ##FSTMerge## @Test public void clientEmptyPong() throws IOException {
    clientWriter.writePong(null);
    assertData("8a8060b420bb");
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/WebSocketWriterTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void serverPongWithPayload() throws IOException {
    serverWriter.writePong(new Buffer().writeUtf8("Hello"));
    assertData("8a0548656c6c6f");
  } ##FSTMerge## @Test public void serverPongWithPayload() throws IOException {
    serverWriter.writePong(new Buffer().writeUtf8("Hello"));
    assertData("8a0548656c6c6f");
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/WebSocketWriterTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void clientPongWithPayload() throws IOException {
    clientWriter.writePong(new Buffer().writeUtf8("Hello"));
    assertData("8a8560b420bb28d14cd70f");
  } ##FSTMerge## @Test public void clientPongWithPayload() throws IOException {
    clientWriter.writePong(new Buffer().writeUtf8("Hello"));
    assertData("8a8560b420bb28d14cd70f");
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/WebSocketWriterTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void pingTooLongThrows() throws IOException {
    try {
      serverWriter.writePing(new Buffer().write(binaryData(1000)));
      fail();
    } catch (IllegalArgumentException e) {
      assertEquals("Payload size must be less than or equal to 125", e.getMessage());
    }
  } ##FSTMerge## @Test public void pingTooLongThrows() throws IOException {
    try {
      serverWriter.writePing(new Buffer().write(binaryData(1000)));
      fail();
    } catch (IllegalArgumentException e) {
      assertEquals("Payload size must be less than or equal to 125", e.getMessage());
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/WebSocketWriterTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void pongTooLongThrows() throws IOException {
    try {
      serverWriter.writePong(new Buffer().write(binaryData(1000)));
      fail();
    } catch (IllegalArgumentException e) {
      assertEquals("Payload size must be less than or equal to 125", e.getMessage());
    }
  } ##FSTMerge## @Test public void pongTooLongThrows() throws IOException {
    try {
      serverWriter.writePong(new Buffer().write(binaryData(1000)));
      fail();
    } catch (IllegalArgumentException e) {
      assertEquals("Payload size must be less than or equal to 125", e.getMessage());
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/WebSocketWriterTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void closeTooLongThrows() throws IOException {
    try {
      String longString = ByteString.of(binaryData(75)).hex();
      serverWriter.writeClose(1000, longString);
      fail();
    } catch (IllegalArgumentException e) {
      assertEquals("Payload size must be less than or equal to 125", e.getMessage());
    }
  } ##FSTMerge## @Test public void closeTooLongThrows() throws IOException {
    try {
      String longString = ByteString.of(binaryData(75)).hex();
      serverWriter.writeClose(1000, longString);
      fail();
    } catch (IllegalArgumentException e) {
      assertEquals("Payload size must be less than or equal to 125", e.getMessage());
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/WebSocketWriterTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void twoWritersThrows() {
    clientWriter.newMessageSink(TEXT);
    try {
      clientWriter.newMessageSink(TEXT);
      fail();
    } catch (IllegalStateException e) {
      assertEquals("Another message writer is active. Did you call close()?", e.getMessage());
    }
  } ##FSTMerge## @Test public void twoWritersThrows() {
    clientWriter.newMessageSink(TEXT);
    try {
      clientWriter.newMessageSink(TEXT);
      fail();
    } catch (IllegalStateException e) {
      assertEquals("Another message writer is active. Did you call close()?", e.getMessage());
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/WebSocketWriterTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void writeWhileWriterThrows() throws IOException {
    clientWriter.newMessageSink(TEXT);
    try {
      clientWriter.sendMessage(TEXT, new Buffer());
      fail();
    } catch (IllegalStateException e) {
      assertEquals("A message writer is active. Did you call close()?", e.getMessage());
    }
  } ##FSTMerge## @Test public void writeWhileWriterThrows() throws IOException {
    clientWriter.newMessageSink(TEXT);
    try {
      clientWriter.sendMessage(TEXT, new Buffer());
      fail();
    } catch (IllegalStateException e) {
      assertEquals("A message writer is active. Did you call close()?", e.getMessage());
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/WebSocketWriterTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void assertData(String hex) throws EOFException {
    ByteString expected = ByteString.decodeHex(hex);
    ByteString actual = data.readByteString(expected.size());
    assertEquals(expected, actual);
  } ##FSTMerge## private void assertData(String hex) throws EOFException {
    ByteString expected = ByteString.decodeHex(hex);
    ByteString actual = data.readByteString(expected.size());
    assertEquals(expected, actual);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/WebSocketWriterTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void assertData(byte[] data) throws IOException {
    int byteCount = 16;
    for (int i = 0; i < data.length; i += byteCount) {
      int count = Math.min(byteCount, data.length - i);
      Buffer expectedChunk = new Buffer();
      expectedChunk.write(data, i, count);
      assertEquals("At " + i, expectedChunk.readByteString(), this.data.readByteString(count));
    }
  } ##FSTMerge## private void assertData(byte[] data) throws IOException {
    int byteCount = 16;
    for (int i = 0; i < data.length; i += byteCount) {
      int count = Math.min(byteCount, data.length - i);
      Buffer expectedChunk = new Buffer();
      expectedChunk.write(data, i, count);
      assertEquals("At " + i, expectedChunk.readByteString(), this.data.readByteString(count));
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/WebSocketWriterTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static byte[] binaryData(int length) {
    byte[] junk = new byte[length];
    new Random(0).nextBytes(junk);
    return junk;
  } ##FSTMerge## private static byte[] binaryData(int length) {
    byte[] junk = new byte[length];
    new Random(0).nextBytes(junk);
    return junk;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/WebSocketWriterTest.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final ##FSTMerge## public final
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/RealWebSocketTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private RealWebSocket client; ##FSTMerge## private RealWebSocket client;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/RealWebSocketTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private boolean clientConnectionClosed; ##FSTMerge## private boolean clientConnectionClosed;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/RealWebSocketTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final Buffer client2Server = new Buffer(); ##FSTMerge## private final Buffer client2Server = new Buffer();
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/RealWebSocketTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final WebSocketRecorder clientListener = new WebSocketRecorder(); ##FSTMerge## private final WebSocketRecorder clientListener = new WebSocketRecorder();
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/RealWebSocketTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private RealWebSocket server; ##FSTMerge## private RealWebSocket server;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/RealWebSocketTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final Buffer server2client = new Buffer(); ##FSTMerge## private final Buffer server2client = new Buffer();
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/RealWebSocketTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final WebSocketRecorder serverListener = new WebSocketRecorder(); ##FSTMerge## private final WebSocketRecorder serverListener = new WebSocketRecorder();
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/RealWebSocketTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Before public void setUp() {
    Random random = new Random(0);

    client = new RealWebSocket(true, server2client, client2Server, random, clientListener,
        "http://example.com/websocket") {
      @Override protected void closeConnection() throws IOException {
        clientConnectionClosed = true;
      }
    };
    server = new RealWebSocket(false, client2Server, server2client, random, serverListener,
        "http://example.com/websocket") {
      @Override protected void closeConnection() throws IOException {
      }
    };
  } ##FSTMerge## @Before public void setUp() {
    Random random = new Random(0);

    client = new RealWebSocket(true, server2client, client2Server, random, clientListener,
        "http://example.com/websocket") {
      @Override protected void closeConnection() throws IOException {
        clientConnectionClosed = true;
      }
    };
    server = new RealWebSocket(false, client2Server, server2client, random, serverListener,
        "http://example.com/websocket") {
      @Override protected void closeConnection() throws IOException {
      }
    };
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/RealWebSocketTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @After public void tearDown() {
    clientListener.assertExhausted();
    serverListener.assertExhausted();
  } ##FSTMerge## @After public void tearDown() {
    clientListener.assertExhausted();
    serverListener.assertExhausted();
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/RealWebSocketTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void textMessage() throws IOException {
    client.sendMessage(TEXT, new Buffer().writeUtf8("Hello!"));
    server.readMessage();
    serverListener.assertTextMessage("Hello!");
  } ##FSTMerge## @Test public void textMessage() throws IOException {
    client.sendMessage(TEXT, new Buffer().writeUtf8("Hello!"));
    server.readMessage();
    serverListener.assertTextMessage("Hello!");
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/RealWebSocketTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void binaryMessage() throws IOException {
    client.sendMessage(BINARY, new Buffer().writeUtf8("Hello!"));
    server.readMessage();
    serverListener.assertBinaryMessage(new byte[] { 'H', 'e', 'l', 'l', 'o', '!' });
  } ##FSTMerge## @Test public void binaryMessage() throws IOException {
    client.sendMessage(BINARY, new Buffer().writeUtf8("Hello!"));
    server.readMessage();
    serverListener.assertBinaryMessage(new byte[] { 'H', 'e', 'l', 'l', 'o', '!' });
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/RealWebSocketTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void streamingMessage() throws IOException {
    BufferedSink sink = client.newMessageSink(TEXT);
    sink.writeUtf8("Hel").flush();
    sink.writeUtf8("lo!").flush();
    sink.close();
    server.readMessage();
    serverListener.assertTextMessage("Hello!");
  } ##FSTMerge## @Test public void streamingMessage() throws IOException {
    BufferedSink sink = client.newMessageSink(TEXT);
    sink.writeUtf8("Hel").flush();
    sink.writeUtf8("lo!").flush();
    sink.close();
    server.readMessage();
    serverListener.assertTextMessage("Hello!");
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/RealWebSocketTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void streamingMessageCanInterleavePing() throws IOException, InterruptedException {
    BufferedSink sink = client.newMessageSink(TEXT);
    sink.writeUtf8("Hel").flush();
    client.sendPing(new Buffer().writeUtf8("Pong?"));
    sink.writeUtf8("lo!").flush();
    sink.close();
    server.readMessage();
    serverListener.assertTextMessage("Hello!");
    Thread.sleep(1000); // Wait for pong to be written.
    client.readMessage();
    clientListener.assertPong(new Buffer().writeUtf8("Pong?"));
  } ##FSTMerge## @Test public void streamingMessageCanInterleavePing() throws IOException, InterruptedException {
    BufferedSink sink = client.newMessageSink(TEXT);
    sink.writeUtf8("Hel").flush();
    client.sendPing(new Buffer().writeUtf8("Pong?"));
    sink.writeUtf8("lo!").flush();
    sink.close();
    server.readMessage();
    serverListener.assertTextMessage("Hello!");
    Thread.sleep(1000); // Wait for pong to be written.
    client.readMessage();
    clientListener.assertPong(new Buffer().writeUtf8("Pong?"));
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/RealWebSocketTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void pingWritesPong() throws IOException, InterruptedException {
    client.sendPing(new Buffer().writeUtf8("Hello!"));
    server.readMessage(); // Read the ping, enqueue the pong.
    Thread.sleep(1000); // Wait for pong to be written.
    client.readMessage();
    clientListener.assertPong(new Buffer().writeUtf8("Hello!"));
  } ##FSTMerge## @Test public void pingWritesPong() throws IOException, InterruptedException {
    client.sendPing(new Buffer().writeUtf8("Hello!"));
    server.readMessage(); // Read the ping, enqueue the pong.
    Thread.sleep(1000); // Wait for pong to be written.
    client.readMessage();
    clientListener.assertPong(new Buffer().writeUtf8("Hello!"));
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/RealWebSocketTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void unsolicitedPong() throws IOException {
    client.sendPong(new Buffer().writeUtf8("Hello!"));
    server.readMessage();
    serverListener.assertPong(new Buffer().writeUtf8("Hello!"));
  } ##FSTMerge## @Test public void unsolicitedPong() throws IOException {
    client.sendPong(new Buffer().writeUtf8("Hello!"));
    server.readMessage();
    serverListener.assertPong(new Buffer().writeUtf8("Hello!"));
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/RealWebSocketTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void close() throws IOException {
    client.close(1000, "Hello!");
    server.readMessage(); // This will trigger a close response.
    serverListener.assertClose(1000, "Hello!");
    client.readMessage();
    clientListener.assertClose(1000, "Hello!");
  } ##FSTMerge## @Test public void close() throws IOException {
    client.close(1000, "Hello!");
    server.readMessage(); // This will trigger a close response.
    serverListener.assertClose(1000, "Hello!");
    client.readMessage();
    clientListener.assertClose(1000, "Hello!");
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/RealWebSocketTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void clientCloseThenMethodsThrow() throws IOException {
    client.close(1000, "Hello!");

    try {
      client.sendPing(new Buffer().writeUtf8("Pong?"));
      fail();
    } catch (IllegalStateException e) {
      assertEquals("Closed", e.getMessage());
    }
    try {
      client.close(1000, "Hello!");
      fail();
    } catch (IllegalStateException e) {
      assertEquals("Closed", e.getMessage());
    }
    try {
      client.sendMessage(TEXT, new Buffer().writeUtf8("Hello!"));
      fail();
    } catch (IllegalStateException e) {
      assertEquals("Closed", e.getMessage());
    }
    try {
      client.newMessageSink(TEXT);
      fail();
    } catch (IllegalStateException e) {
      assertEquals("Closed", e.getMessage());
    }
  } ##FSTMerge## @Test public void clientCloseThenMethodsThrow() throws IOException {
    client.close(1000, "Hello!");

    try {
      client.sendPing(new Buffer().writeUtf8("Pong?"));
      fail();
    } catch (IllegalStateException e) {
      assertEquals("Closed", e.getMessage());
    }
    try {
      client.close(1000, "Hello!");
      fail();
    } catch (IllegalStateException e) {
      assertEquals("Closed", e.getMessage());
    }
    try {
      client.sendMessage(TEXT, new Buffer().writeUtf8("Hello!"));
      fail();
    } catch (IllegalStateException e) {
      assertEquals("Closed", e.getMessage());
    }
    try {
      client.newMessageSink(TEXT);
      fail();
    } catch (IllegalStateException e) {
      assertEquals("Closed", e.getMessage());
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/RealWebSocketTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void serverCloseThenWritingThrows() throws IOException {
    server.close(1000, "Hello!");
    client.readMessage();
    clientListener.assertClose(1000, "Hello!");

    try {
      client.sendPing(new Buffer().writeUtf8("Pong?"));
      fail();
    } catch (IOException e) {
      assertEquals("Closed", e.getMessage());
    }
    try {
      client.sendMessage(TEXT, new Buffer().writeUtf8("Hi!"));
      fail();
    } catch (IOException e) {
      assertEquals("Closed", e.getMessage());
    }
    try {
      client.close(1000, "Bye!");
      fail();
    } catch (IOException e) {
      assertEquals("Closed", e.getMessage());
    }
  } ##FSTMerge## @Test public void serverCloseThenWritingThrows() throws IOException {
    server.close(1000, "Hello!");
    client.readMessage();
    clientListener.assertClose(1000, "Hello!");

    try {
      client.sendPing(new Buffer().writeUtf8("Pong?"));
      fail();
    } catch (IOException e) {
      assertEquals("Closed", e.getMessage());
    }
    try {
      client.sendMessage(TEXT, new Buffer().writeUtf8("Hi!"));
      fail();
    } catch (IOException e) {
      assertEquals("Closed", e.getMessage());
    }
    try {
      client.close(1000, "Bye!");
      fail();
    } catch (IOException e) {
      assertEquals("Closed", e.getMessage());
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/RealWebSocketTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void serverCloseWhileWritingThrows() throws IOException {
    // Start writing data.
    BufferedSink sink = client.newMessageSink(TEXT);
    sink.writeUtf8("Hel").flush();

    server.close(1000, "Hello!");
    client.readMessage();
    clientListener.assertClose(1000, "Hello!");

    try {
      sink.writeUtf8("lo!").emit(); // No writing to the underlying sink.
      fail();
    } catch (IOException e) {
      assertEquals("Closed", e.getMessage());
      sink.buffer().clear();
    }
    try {
      sink.flush(); // No flushing.
      fail();
    } catch (IOException e) {
      assertEquals("Closed", e.getMessage());
    }
    try {
      sink.close(); // No closing because this requires writing a frame.
      fail();
    } catch (IOException e) {
      assertEquals("Closed", e.getMessage());
    }
  } ##FSTMerge## @Test public void serverCloseWhileWritingThrows() throws IOException {
    // Start writing data.
    BufferedSink sink = client.newMessageSink(TEXT);
    sink.writeUtf8("Hel").flush();

    server.close(1000, "Hello!");
    client.readMessage();
    clientListener.assertClose(1000, "Hello!");

    try {
      sink.writeUtf8("lo!").emit(); // No writing to the underlying sink.
      fail();
    } catch (IOException e) {
      assertEquals("Closed", e.getMessage());
      sink.buffer().clear();
    }
    try {
      sink.flush(); // No flushing.
      fail();
    } catch (IOException e) {
      assertEquals("Closed", e.getMessage());
    }
    try {
      sink.close(); // No closing because this requires writing a frame.
      fail();
    } catch (IOException e) {
      assertEquals("Closed", e.getMessage());
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/RealWebSocketTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void clientCloseClosesConnection() throws IOException {
    client.close(1000, "Hello!");
    assertFalse(clientConnectionClosed);
    server.readMessage(); // Read client close, send server close.
    serverListener.assertClose(1000, "Hello!");

    client.readMessage();
    assertTrue(clientConnectionClosed);
    clientListener.assertClose(1000, "Hello!");
  } ##FSTMerge## @Test public void clientCloseClosesConnection() throws IOException {
    client.close(1000, "Hello!");
    assertFalse(clientConnectionClosed);
    server.readMessage(); // Read client close, send server close.
    serverListener.assertClose(1000, "Hello!");

    client.readMessage();
    assertTrue(clientConnectionClosed);
    clientListener.assertClose(1000, "Hello!");
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/RealWebSocketTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void serverCloseClosesConnection() throws IOException {
    server.close(1000, "Hello!");

    client.readMessage(); // Read server close, send client close, close connection.
    clientListener.assertClose(1000, "Hello!");
    assertTrue(clientConnectionClosed);

    server.readMessage();
    serverListener.assertClose(1000, "Hello!");
  } ##FSTMerge## @Test public void serverCloseClosesConnection() throws IOException {
    server.close(1000, "Hello!");

    client.readMessage(); // Read server close, send client close, close connection.
    clientListener.assertClose(1000, "Hello!");
    assertTrue(clientConnectionClosed);

    server.readMessage();
    serverListener.assertClose(1000, "Hello!");
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/RealWebSocketTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void clientAndServerCloseClosesConnection() throws IOException {
    // Send close from both sides at the same time.
    server.close(1000, "Hello!");
    client.close(1000, "Hi!");
    assertFalse(clientConnectionClosed);

    client.readMessage(); // Read close, should NOT send close.
    assertTrue(clientConnectionClosed);
    clientListener.assertClose(1000, "Hello!");

    server.readMessage();
    serverListener.assertClose(1000, "Hi!");

    serverListener.assertExhausted(); // Client should not have sent second close.
    clientListener.assertExhausted(); // Server should not have sent second close.
  } ##FSTMerge## @Test public void clientAndServerCloseClosesConnection() throws IOException {
    // Send close from both sides at the same time.
    server.close(1000, "Hello!");
    client.close(1000, "Hi!");
    assertFalse(clientConnectionClosed);

    client.readMessage(); // Read close, should NOT send close.
    assertTrue(clientConnectionClosed);
    clientListener.assertClose(1000, "Hello!");

    server.readMessage();
    serverListener.assertClose(1000, "Hi!");

    serverListener.assertExhausted(); // Client should not have sent second close.
    clientListener.assertExhausted(); // Server should not have sent second close.
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/RealWebSocketTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void serverCloseBreaksReadMessageLoop() throws IOException {
    server.sendMessage(TEXT, new Buffer().writeUtf8("Hello!"));
    server.close(1000, "Bye!");
    assertTrue(client.readMessage());
    clientListener.assertTextMessage("Hello!");
    assertFalse(client.readMessage());
    clientListener.assertClose(1000, "Bye!");
  } ##FSTMerge## @Test public void serverCloseBreaksReadMessageLoop() throws IOException {
    server.sendMessage(TEXT, new Buffer().writeUtf8("Hello!"));
    server.close(1000, "Bye!");
    assertTrue(client.readMessage());
    clientListener.assertTextMessage("Hello!");
    assertFalse(client.readMessage());
    clientListener.assertClose(1000, "Bye!");
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/RealWebSocketTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void protocolErrorBeforeCloseSendsClose() {
    server2client.write(ByteString.decodeHex("0a00")); // Invalid non-final ping frame.

    client.readMessage(); // Detects error, send close.
    clientListener.assertFailure(ProtocolException.class, "Control frames must be final.");
    assertTrue(clientConnectionClosed);

    server.readMessage();
    serverListener.assertClose(1002, "");
  } ##FSTMerge## @Test public void protocolErrorBeforeCloseSendsClose() {
    server2client.write(ByteString.decodeHex("0a00")); // Invalid non-final ping frame.

    client.readMessage(); // Detects error, send close.
    clientListener.assertFailure(ProtocolException.class, "Control frames must be final.");
    assertTrue(clientConnectionClosed);

    server.readMessage();
    serverListener.assertClose(1002, "");
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/RealWebSocketTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void protocolErrorAfterCloseDoesNotSendClose() throws IOException {
    client.close(1000, "Hello!");
    server2client.write(ByteString.decodeHex("0a00")); // Invalid non-final ping frame.

    client.readMessage();
    clientListener.assertFailure(ProtocolException.class, "Control frames must be final.");
    assertTrue(clientConnectionClosed);

    server.readMessage();
    serverListener.assertClose(1000, "Hello!");
  } ##FSTMerge## @Test public void protocolErrorAfterCloseDoesNotSendClose() throws IOException {
    client.close(1000, "Hello!");
    server2client.write(ByteString.decodeHex("0a00")); // Invalid non-final ping frame.

    client.readMessage();
    clientListener.assertFailure(ProtocolException.class, "Control frames must be final.");
    assertTrue(clientConnectionClosed);

    server.readMessage();
    serverListener.assertClose(1000, "Hello!");
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/RealWebSocketTest.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Spdy3Test.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final int expectedStreamId = 15; ##FSTMerge## static final int expectedStreamId = 15;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Spdy3Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void tooLargeDataFrame() throws IOException {
    try {
      sendDataFrame(new Buffer().write(new byte[0x1000000]));
      fail();
    } catch (IllegalArgumentException e) {
      assertEquals("FRAME_TOO_LARGE max size is 16Mib: " + 0x1000000L, e.getMessage());
    }
  } ##FSTMerge## @Test public void tooLargeDataFrame() throws IOException {
    try {
      sendDataFrame(new Buffer().write(new byte[0x1000000]));
      fail();
    } catch (IllegalArgumentException e) {
      assertEquals("FRAME_TOO_LARGE max size is 16Mib: " + 0x1000000L, e.getMessage());
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Spdy3Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void badWindowSizeIncrement() throws IOException {
    try {
      windowUpdate(0);
      fail();
    } catch (IllegalArgumentException e) {
      assertEquals("windowSizeIncrement must be between 1 and 0x7fffffff: 0", e.getMessage());
    }
    try {
      windowUpdate(0x80000000L);
      fail();
    } catch (IllegalArgumentException e) {
      assertEquals("windowSizeIncrement must be between 1 and 0x7fffffff: 2147483648",
          e.getMessage());
    }
  } ##FSTMerge## @Test public void badWindowSizeIncrement() throws IOException {
    try {
      windowUpdate(0);
      fail();
    } catch (IllegalArgumentException e) {
      assertEquals("windowSizeIncrement must be between 1 and 0x7fffffff: 0", e.getMessage());
    }
    try {
      windowUpdate(0x80000000L);
      fail();
    } catch (IllegalArgumentException e) {
      assertEquals("windowSizeIncrement must be between 1 and 0x7fffffff: 2147483648",
          e.getMessage());
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Spdy3Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void goAwayRoundTrip() throws IOException {
    Buffer frame = new Buffer();

    final ErrorCode expectedError = ErrorCode.PROTOCOL_ERROR;

    // Compose the expected GOAWAY frame without debug data
    // |C| Version(15bits) | Type(16bits) |
    frame.writeInt(0x80000000 | (Spdy3.VERSION & 0x7fff) << 16 | Spdy3.TYPE_GOAWAY & 0xffff);
    // | Flags (8)  |  Length (24 bits)   |
    frame.writeInt(8); // no flags and length is 8.
    frame.writeInt(expectedStreamId); // last good stream.
    frame.writeInt(expectedError.spdyGoAwayCode);

    // Check writer sends the same bytes.
    assertEquals(frame, sendGoAway(expectedStreamId, expectedError, Util.EMPTY_BYTE_ARRAY));

    // SPDY/3 does not send debug data, so bytes should be same!
    assertEquals(frame, sendGoAway(expectedStreamId, expectedError, new byte[8]));

    FrameReader fr = new Spdy3.Reader(frame, false);

    fr.nextFrame(new BaseTestHandler() { // Consume the goAway frame.
      @Override public void goAway(
          int lastGoodStreamId, ErrorCode errorCode, ByteString debugData) {
        assertEquals(expectedStreamId, lastGoodStreamId);
        assertEquals(expectedError, errorCode);
        assertEquals(0, debugData.size());
      }
    });
  } ##FSTMerge## @Test public void goAwayRoundTrip() throws IOException {
    Buffer frame = new Buffer();

    final ErrorCode expectedError = ErrorCode.PROTOCOL_ERROR;

    // Compose the expected GOAWAY frame without debug data
    // |C| Version(15bits) | Type(16bits) |
    frame.writeInt(0x80000000 | (Spdy3.VERSION & 0x7fff) << 16 | Spdy3.TYPE_GOAWAY & 0xffff);
    // | Flags (8)  |  Length (24 bits)   |
    frame.writeInt(8); // no flags and length is 8.
    frame.writeInt(expectedStreamId); // last good stream.
    frame.writeInt(expectedError.spdyGoAwayCode);

    // Check writer sends the same bytes.
    assertEquals(frame, sendGoAway(expectedStreamId, expectedError, Util.EMPTY_BYTE_ARRAY));

    // SPDY/3 does not send debug data, so bytes should be same!
    assertEquals(frame, sendGoAway(expectedStreamId, expectedError, new byte[8]));

    FrameReader fr = new Spdy3.Reader(frame, false);

    fr.nextFrame(new BaseTestHandler() { // Consume the goAway frame.
      @Override public void goAway(
          int lastGoodStreamId, ErrorCode errorCode, ByteString debugData) {
        assertEquals(expectedStreamId, lastGoodStreamId);
        assertEquals(expectedError, errorCode);
        assertEquals(0, debugData.size());
      }
    });
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Spdy3Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void sendDataFrame(Buffer source) throws IOException {
    Spdy3.Writer writer = new Spdy3.Writer(new Buffer(), true);
    writer.sendDataFrame(expectedStreamId, 0, source, (int) source.size());
  } ##FSTMerge## private void sendDataFrame(Buffer source) throws IOException {
    Spdy3.Writer writer = new Spdy3.Writer(new Buffer(), true);
    writer.sendDataFrame(expectedStreamId, 0, source, (int) source.size());
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Spdy3Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void windowUpdate(long increment) throws IOException {
    new Spdy3.Writer(new Buffer(), true).windowUpdate(expectedStreamId, increment);
  } ##FSTMerge## private void windowUpdate(long increment) throws IOException {
    new Spdy3.Writer(new Buffer(), true).windowUpdate(expectedStreamId, increment);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Spdy3Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Buffer sendGoAway(int lastGoodStreamId, ErrorCode errorCode, byte[] debugData)
      throws IOException {
    Buffer out = new Buffer();
    new Spdy3.Writer(out, true).goAway(lastGoodStreamId, errorCode, debugData);
    return out;
  } ##FSTMerge## private Buffer sendGoAway(int lastGoodStreamId, ErrorCode errorCode, byte[] debugData)
      throws IOException {
    Buffer out = new Buffer();
    new Spdy3.Writer(out, true).goAway(lastGoodStreamId, errorCode, debugData);
    return out;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Spdy3Test.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final ##FSTMerge## public final
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/SettingsTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void unsetField() {
    Settings settings = new Settings();
    assertEquals(-3, settings.getUploadBandwidth(-3));
  } ##FSTMerge## @Test public void unsetField() {
    Settings settings = new Settings();
    assertEquals(-3, settings.getUploadBandwidth(-3));
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/SettingsTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void setFields() {
    Settings settings = new Settings();

    // WARNING: clash on flags between spdy/3 and HTTP/2!
    assertEquals(-3, settings.getUploadBandwidth(-3));
    assertEquals(-1, settings.getHeaderTableSize());
    settings.set(UPLOAD_BANDWIDTH, 0, 42);
    assertEquals(42, settings.getUploadBandwidth(-3));
    settings.set(Settings.HEADER_TABLE_SIZE, 0, 8096);
    assertEquals(8096, settings.getHeaderTableSize());

    // WARNING: clash on flags between spdy/3 and HTTP/2!
    assertEquals(true, settings.getEnablePush(true));
    settings.set(Settings.ENABLE_PUSH, 0, 1);
    assertEquals(true, settings.getEnablePush(false));
    settings.clear();
    assertEquals(-3, settings.getDownloadBandwidth(-3));
    settings.set(DOWNLOAD_BANDWIDTH, 0, 53);
    assertEquals(53, settings.getDownloadBandwidth(-3));

    assertEquals(-3, settings.getRoundTripTime(-3));
    settings.set(Settings.ROUND_TRIP_TIME, 0, 64);
    assertEquals(64, settings.getRoundTripTime(-3));

    assertEquals(-3, settings.getMaxConcurrentStreams(-3));
    settings.set(MAX_CONCURRENT_STREAMS, 0, 75);
    assertEquals(75, settings.getMaxConcurrentStreams(-3));

    // WARNING: clash on flags between spdy/3 and HTTP/2!
    assertEquals(-3, settings.getCurrentCwnd(-3));
    settings.set(Settings.CURRENT_CWND, 0, 86);
    assertEquals(86, settings.getCurrentCwnd(-3));
    settings.clear();
    assertEquals(16384, settings.getMaxFrameSize(16384));
    settings.set(Settings.MAX_FRAME_SIZE, 0, 16777215);
    assertEquals(16777215, settings.getMaxFrameSize(16384));

    // WARNING: clash on flags between spdy/3 and HTTP/2!
    assertEquals(-3, settings.getDownloadRetransRate(-3));
    settings.set(DOWNLOAD_RETRANS_RATE, 0, 97);
    assertEquals(97, settings.getDownloadRetransRate(-3));
    settings.clear();
    assertEquals(-1, settings.getMaxHeaderListSize(-1));
    settings.set(Settings.MAX_HEADER_LIST_SIZE, 0, 16777215);
    assertEquals(16777215, settings.getMaxHeaderListSize(-1));

    assertEquals(DEFAULT_INITIAL_WINDOW_SIZE,
        settings.getInitialWindowSize(DEFAULT_INITIAL_WINDOW_SIZE));
    settings.set(Settings.INITIAL_WINDOW_SIZE, 0, 108);
    assertEquals(108, settings.getInitialWindowSize(DEFAULT_INITIAL_WINDOW_SIZE));

    assertEquals(-3, settings.getClientCertificateVectorSize(-3));
    settings.set(Settings.CLIENT_CERTIFICATE_VECTOR_SIZE, 0, 117);
    assertEquals(117, settings.getClientCertificateVectorSize(-3));
  } ##FSTMerge## @Test public void setFields() {
    Settings settings = new Settings();

    // WARNING: clash on flags between spdy/3 and HTTP/2!
    assertEquals(-3, settings.getUploadBandwidth(-3));
    assertEquals(-1, settings.getHeaderTableSize());
    settings.set(UPLOAD_BANDWIDTH, 0, 42);
    assertEquals(42, settings.getUploadBandwidth(-3));
    settings.set(Settings.HEADER_TABLE_SIZE, 0, 8096);
    assertEquals(8096, settings.getHeaderTableSize());

    // WARNING: clash on flags between spdy/3 and HTTP/2!
    assertEquals(true, settings.getEnablePush(true));
    settings.set(Settings.ENABLE_PUSH, 0, 1);
    assertEquals(true, settings.getEnablePush(false));
    settings.clear();
    assertEquals(-3, settings.getDownloadBandwidth(-3));
    settings.set(DOWNLOAD_BANDWIDTH, 0, 53);
    assertEquals(53, settings.getDownloadBandwidth(-3));

    assertEquals(-3, settings.getRoundTripTime(-3));
    settings.set(Settings.ROUND_TRIP_TIME, 0, 64);
    assertEquals(64, settings.getRoundTripTime(-3));

    assertEquals(-3, settings.getMaxConcurrentStreams(-3));
    settings.set(MAX_CONCURRENT_STREAMS, 0, 75);
    assertEquals(75, settings.getMaxConcurrentStreams(-3));

    // WARNING: clash on flags between spdy/3 and HTTP/2!
    assertEquals(-3, settings.getCurrentCwnd(-3));
    settings.set(Settings.CURRENT_CWND, 0, 86);
    assertEquals(86, settings.getCurrentCwnd(-3));
    settings.clear();
    assertEquals(16384, settings.getMaxFrameSize(16384));
    settings.set(Settings.MAX_FRAME_SIZE, 0, 16777215);
    assertEquals(16777215, settings.getMaxFrameSize(16384));

    // WARNING: clash on flags between spdy/3 and HTTP/2!
    assertEquals(-3, settings.getDownloadRetransRate(-3));
    settings.set(DOWNLOAD_RETRANS_RATE, 0, 97);
    assertEquals(97, settings.getDownloadRetransRate(-3));
    settings.clear();
    assertEquals(-1, settings.getMaxHeaderListSize(-1));
    settings.set(Settings.MAX_HEADER_LIST_SIZE, 0, 16777215);
    assertEquals(16777215, settings.getMaxHeaderListSize(-1));

    assertEquals(DEFAULT_INITIAL_WINDOW_SIZE,
        settings.getInitialWindowSize(DEFAULT_INITIAL_WINDOW_SIZE));
    settings.set(Settings.INITIAL_WINDOW_SIZE, 0, 108);
    assertEquals(108, settings.getInitialWindowSize(DEFAULT_INITIAL_WINDOW_SIZE));

    assertEquals(-3, settings.getClientCertificateVectorSize(-3));
    settings.set(Settings.CLIENT_CERTIFICATE_VECTOR_SIZE, 0, 117);
    assertEquals(117, settings.getClientCertificateVectorSize(-3));
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/SettingsTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void isPersisted() {
    Settings settings = new Settings();

    // Initially false.
    assertFalse(settings.isPersisted(Settings.ROUND_TRIP_TIME));

    // Set no flags.
    settings.set(Settings.ROUND_TRIP_TIME, 0, 0);
    assertFalse(settings.isPersisted(Settings.ROUND_TRIP_TIME));

    // Set the wrong flag.
    settings.set(Settings.ROUND_TRIP_TIME, PERSIST_VALUE, 0);
    assertFalse(settings.isPersisted(Settings.ROUND_TRIP_TIME));

    // Set the right flag.
    settings.set(Settings.ROUND_TRIP_TIME, PERSISTED, 0);
    assertTrue(settings.isPersisted(Settings.ROUND_TRIP_TIME));

    // Set multiple flags.
    settings.set(Settings.ROUND_TRIP_TIME, PERSIST_VALUE | PERSISTED, 0);
    assertTrue(settings.isPersisted(Settings.ROUND_TRIP_TIME));

    // Clear the flag.
    settings.set(Settings.ROUND_TRIP_TIME, PERSIST_VALUE, 0);
    assertFalse(settings.isPersisted(Settings.ROUND_TRIP_TIME));

    // Clear all flags.
    settings.set(Settings.ROUND_TRIP_TIME, 0, 0);
    assertFalse(settings.isPersisted(Settings.ROUND_TRIP_TIME));
  } ##FSTMerge## @Test public void isPersisted() {
    Settings settings = new Settings();

    // Initially false.
    assertFalse(settings.isPersisted(Settings.ROUND_TRIP_TIME));

    // Set no flags.
    settings.set(Settings.ROUND_TRIP_TIME, 0, 0);
    assertFalse(settings.isPersisted(Settings.ROUND_TRIP_TIME));

    // Set the wrong flag.
    settings.set(Settings.ROUND_TRIP_TIME, PERSIST_VALUE, 0);
    assertFalse(settings.isPersisted(Settings.ROUND_TRIP_TIME));

    // Set the right flag.
    settings.set(Settings.ROUND_TRIP_TIME, PERSISTED, 0);
    assertTrue(settings.isPersisted(Settings.ROUND_TRIP_TIME));

    // Set multiple flags.
    settings.set(Settings.ROUND_TRIP_TIME, PERSIST_VALUE | PERSISTED, 0);
    assertTrue(settings.isPersisted(Settings.ROUND_TRIP_TIME));

    // Clear the flag.
    settings.set(Settings.ROUND_TRIP_TIME, PERSIST_VALUE, 0);
    assertFalse(settings.isPersisted(Settings.ROUND_TRIP_TIME));

    // Clear all flags.
    settings.set(Settings.ROUND_TRIP_TIME, 0, 0);
    assertFalse(settings.isPersisted(Settings.ROUND_TRIP_TIME));
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/SettingsTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void persistValue() {
    Settings settings = new Settings();

    // Initially false.
    assertFalse(settings.persistValue(Settings.ROUND_TRIP_TIME));

    // Set no flags.
    settings.set(Settings.ROUND_TRIP_TIME, 0, 0);
    assertFalse(settings.persistValue(Settings.ROUND_TRIP_TIME));

    // Set the wrong flag.
    settings.set(Settings.ROUND_TRIP_TIME, PERSISTED, 0);
    assertFalse(settings.persistValue(Settings.ROUND_TRIP_TIME));

    // Set the right flag.
    settings.set(Settings.ROUND_TRIP_TIME, PERSIST_VALUE, 0);
    assertTrue(settings.persistValue(Settings.ROUND_TRIP_TIME));

    // Set multiple flags.
    settings.set(Settings.ROUND_TRIP_TIME, PERSIST_VALUE | PERSISTED, 0);
    assertTrue(settings.persistValue(Settings.ROUND_TRIP_TIME));

    // Clear the flag.
    settings.set(Settings.ROUND_TRIP_TIME, PERSISTED, 0);
    assertFalse(settings.persistValue(Settings.ROUND_TRIP_TIME));

    // Clear all flags.
    settings.set(Settings.ROUND_TRIP_TIME, 0, 0);
    assertFalse(settings.persistValue(Settings.ROUND_TRIP_TIME));
  } ##FSTMerge## @Test public void persistValue() {
    Settings settings = new Settings();

    // Initially false.
    assertFalse(settings.persistValue(Settings.ROUND_TRIP_TIME));

    // Set no flags.
    settings.set(Settings.ROUND_TRIP_TIME, 0, 0);
    assertFalse(settings.persistValue(Settings.ROUND_TRIP_TIME));

    // Set the wrong flag.
    settings.set(Settings.ROUND_TRIP_TIME, PERSISTED, 0);
    assertFalse(settings.persistValue(Settings.ROUND_TRIP_TIME));

    // Set the right flag.
    settings.set(Settings.ROUND_TRIP_TIME, PERSIST_VALUE, 0);
    assertTrue(settings.persistValue(Settings.ROUND_TRIP_TIME));

    // Set multiple flags.
    settings.set(Settings.ROUND_TRIP_TIME, PERSIST_VALUE | PERSISTED, 0);
    assertTrue(settings.persistValue(Settings.ROUND_TRIP_TIME));

    // Clear the flag.
    settings.set(Settings.ROUND_TRIP_TIME, PERSISTED, 0);
    assertFalse(settings.persistValue(Settings.ROUND_TRIP_TIME));

    // Clear all flags.
    settings.set(Settings.ROUND_TRIP_TIME, 0, 0);
    assertFalse(settings.persistValue(Settings.ROUND_TRIP_TIME));
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/SettingsTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void merge() {
    Settings a = new Settings();
    a.set(UPLOAD_BANDWIDTH, PERSIST_VALUE, 100);
    a.set(DOWNLOAD_BANDWIDTH, PERSIST_VALUE, 200);
    a.set(DOWNLOAD_RETRANS_RATE, 0, 300);

    Settings b = new Settings();
    b.set(DOWNLOAD_BANDWIDTH, 0, 400);
    b.set(DOWNLOAD_RETRANS_RATE, PERSIST_VALUE, 500);
    b.set(MAX_CONCURRENT_STREAMS, PERSIST_VALUE, 600);

    a.merge(b);
    assertEquals(100, a.getUploadBandwidth(-1));
    assertEquals(PERSIST_VALUE, a.flags(UPLOAD_BANDWIDTH));
    assertEquals(400, a.getDownloadBandwidth(-1));
    assertEquals(0, a.flags(DOWNLOAD_BANDWIDTH));
    assertEquals(500, a.getDownloadRetransRate(-1));
    assertEquals(PERSIST_VALUE, a.flags(DOWNLOAD_RETRANS_RATE));
    assertEquals(600, a.getMaxConcurrentStreams(-1));
    assertEquals(PERSIST_VALUE, a.flags(MAX_CONCURRENT_STREAMS));
  } ##FSTMerge## @Test public void merge() {
    Settings a = new Settings();
    a.set(UPLOAD_BANDWIDTH, PERSIST_VALUE, 100);
    a.set(DOWNLOAD_BANDWIDTH, PERSIST_VALUE, 200);
    a.set(DOWNLOAD_RETRANS_RATE, 0, 300);

    Settings b = new Settings();
    b.set(DOWNLOAD_BANDWIDTH, 0, 400);
    b.set(DOWNLOAD_RETRANS_RATE, PERSIST_VALUE, 500);
    b.set(MAX_CONCURRENT_STREAMS, PERSIST_VALUE, 600);

    a.merge(b);
    assertEquals(100, a.getUploadBandwidth(-1));
    assertEquals(PERSIST_VALUE, a.flags(UPLOAD_BANDWIDTH));
    assertEquals(400, a.getDownloadBandwidth(-1));
    assertEquals(0, a.flags(DOWNLOAD_BANDWIDTH));
    assertEquals(500, a.getDownloadRetransRate(-1));
    assertEquals(PERSIST_VALUE, a.flags(DOWNLOAD_RETRANS_RATE));
    assertEquals(600, a.getMaxConcurrentStreams(-1));
    assertEquals(PERSIST_VALUE, a.flags(MAX_CONCURRENT_STREAMS));
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/SettingsTest.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HuffmanTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void roundTripForRequestAndResponse() throws IOException {
    String s = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
    for (int i = 0; i < s.length(); i++) {
      assertRoundTrip(s.substring(0, i).getBytes());
    }

    Random random = new Random(123456789L);
    byte[] buf = new byte[4096];
    random.nextBytes(buf);
    assertRoundTrip(buf);
  } ##FSTMerge## @Test public void roundTripForRequestAndResponse() throws IOException {
    String s = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
    for (int i = 0; i < s.length(); i++) {
      assertRoundTrip(s.substring(0, i).getBytes());
    }

    Random random = new Random(123456789L);
    byte[] buf = new byte[4096];
    random.nextBytes(buf);
    assertRoundTrip(buf);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HuffmanTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void assertRoundTrip(byte[] buf) throws IOException {
    ByteArrayOutputStream baos = new ByteArrayOutputStream();
    DataOutputStream dos = new DataOutputStream(baos);

    Huffman.get().encode(buf, dos);
    assertEquals(baos.size(), Huffman.get().encodedLength(buf));

    byte[] decodedBytes = Huffman.get().decode(baos.toByteArray());
    assertTrue(Arrays.equals(buf, decodedBytes));
  } ##FSTMerge## private void assertRoundTrip(byte[] buf) throws IOException {
    ByteArrayOutputStream baos = new ByteArrayOutputStream();
    DataOutputStream dos = new DataOutputStream(baos);

    Huffman.get().encode(buf, dos);
    assertEquals(baos.size(), Huffman.get().encodedLength(buf));

    byte[] decodedBytes = Huffman.get().decode(baos.toByteArray());
    assertTrue(Arrays.equals(buf, decodedBytes));
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HuffmanTest.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft16Test.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final Buffer frame = new Buffer(); ##FSTMerge## final Buffer frame = new Buffer();
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft16Test.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final FrameReader fr = new Http20Draft16.Reader(frame, 4096, false); ##FSTMerge## final FrameReader fr = new Http20Draft16.Reader(frame, 4096, false);
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft16Test.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final int expectedStreamId = 15; ##FSTMerge## final int expectedStreamId = 15;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft16Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void unknownFrameTypeSkipped() throws IOException {
    writeMedium(frame, 4); // has a 4-byte field
    frame.writeByte(99); // type 99
    frame.writeByte(Http20Draft16.FLAG_NONE);
    frame.writeInt(expectedStreamId);
    frame.writeInt(111111111); // custom data

    fr.nextFrame(new BaseTestHandler()); // Should not callback.
  } ##FSTMerge## @Test public void unknownFrameTypeSkipped() throws IOException {
    writeMedium(frame, 4); // has a 4-byte field
    frame.writeByte(99); // type 99
    frame.writeByte(Http20Draft16.FLAG_NONE);
    frame.writeInt(expectedStreamId);
    frame.writeInt(111111111); // custom data

    fr.nextFrame(new BaseTestHandler()); // Should not callback.
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft16Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void onlyOneLiteralHeadersFrame() throws IOException {
    final List<Header> sentHeaders = headerEntries("name", "value");

    Buffer headerBytes = literalHeaders(sentHeaders);
    writeMedium(frame, (int) headerBytes.size());
    frame.writeByte(Http20Draft16.TYPE_HEADERS);
    frame.writeByte(FLAG_END_HEADERS | FLAG_END_STREAM);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeAll(headerBytes);

    assertEquals(frame, sendHeaderFrames(true, sentHeaders)); // Check writer sends the same bytes.

    fr.nextFrame(new BaseTestHandler() {
      @Override
      public void headers(boolean outFinished, boolean inFinished, int streamId,
          int associatedStreamId, List<Header> headerBlock, HeadersMode headersMode) {
        assertFalse(outFinished);
        assertTrue(inFinished);
        assertEquals(expectedStreamId, streamId);
        assertEquals(-1, associatedStreamId);
        assertEquals(sentHeaders, headerBlock);
        assertEquals(HeadersMode.HTTP_20_HEADERS, headersMode);
      }
    });
  } ##FSTMerge## @Test public void onlyOneLiteralHeadersFrame() throws IOException {
    final List<Header> sentHeaders = headerEntries("name", "value");

    Buffer headerBytes = literalHeaders(sentHeaders);
    writeMedium(frame, (int) headerBytes.size());
    frame.writeByte(Http20Draft16.TYPE_HEADERS);
    frame.writeByte(FLAG_END_HEADERS | FLAG_END_STREAM);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeAll(headerBytes);

    assertEquals(frame, sendHeaderFrames(true, sentHeaders)); // Check writer sends the same bytes.

    fr.nextFrame(new BaseTestHandler() {
      @Override
      public void headers(boolean outFinished, boolean inFinished, int streamId,
          int associatedStreamId, List<Header> headerBlock, HeadersMode headersMode) {
        assertFalse(outFinished);
        assertTrue(inFinished);
        assertEquals(expectedStreamId, streamId);
        assertEquals(-1, associatedStreamId);
        assertEquals(sentHeaders, headerBlock);
        assertEquals(HeadersMode.HTTP_20_HEADERS, headersMode);
      }
    });
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft16Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void headersWithPriority() throws IOException {
    final List<Header> sentHeaders = headerEntries("name", "value");

    Buffer headerBytes = literalHeaders(sentHeaders);
    writeMedium(frame, (int) (headerBytes.size() + 5));
    frame.writeByte(Http20Draft16.TYPE_HEADERS);
    frame.writeByte(FLAG_END_HEADERS | FLAG_PRIORITY);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeInt(0); // Independent stream.
    frame.writeByte(255); // Heaviest weight, zero-indexed.
    frame.writeAll(headerBytes);

    fr.nextFrame(new BaseTestHandler() {
      @Override public void priority(int streamId, int streamDependency, int weight,
          boolean exclusive) {
        assertEquals(0, streamDependency);
        assertEquals(256, weight);
        assertFalse(exclusive);
      }

      @Override public void headers(boolean outFinished, boolean inFinished, int streamId,
          int associatedStreamId, List<Header> nameValueBlock,
          HeadersMode headersMode) {
        assertFalse(outFinished);
        assertFalse(inFinished);
        assertEquals(expectedStreamId, streamId);
        assertEquals(-1, associatedStreamId);
        assertEquals(sentHeaders, nameValueBlock);
        assertEquals(HeadersMode.HTTP_20_HEADERS, headersMode);
      }
    });
  } ##FSTMerge## @Test public void headersWithPriority() throws IOException {
    final List<Header> sentHeaders = headerEntries("name", "value");

    Buffer headerBytes = literalHeaders(sentHeaders);
    writeMedium(frame, (int) (headerBytes.size() + 5));
    frame.writeByte(Http20Draft16.TYPE_HEADERS);
    frame.writeByte(FLAG_END_HEADERS | FLAG_PRIORITY);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeInt(0); // Independent stream.
    frame.writeByte(255); // Heaviest weight, zero-indexed.
    frame.writeAll(headerBytes);

    fr.nextFrame(new BaseTestHandler() {
      @Override public void priority(int streamId, int streamDependency, int weight,
          boolean exclusive) {
        assertEquals(0, streamDependency);
        assertEquals(256, weight);
        assertFalse(exclusive);
      }

      @Override public void headers(boolean outFinished, boolean inFinished, int streamId,
          int associatedStreamId, List<Header> nameValueBlock,
          HeadersMode headersMode) {
        assertFalse(outFinished);
        assertFalse(inFinished);
        assertEquals(expectedStreamId, streamId);
        assertEquals(-1, associatedStreamId);
        assertEquals(sentHeaders, nameValueBlock);
        assertEquals(HeadersMode.HTTP_20_HEADERS, headersMode);
      }
    });
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft16Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void headersFrameThenContinuation() throws IOException {
    final List<Header> sentHeaders = largeHeaders();

    Buffer headerBlock = literalHeaders(sentHeaders);

    // Write the first headers frame.
    writeMedium(frame, Http20Draft16.INITIAL_MAX_FRAME_SIZE);
    frame.writeByte(Http20Draft16.TYPE_HEADERS);
    frame.writeByte(Http20Draft16.FLAG_NONE);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.write(headerBlock, Http20Draft16.INITIAL_MAX_FRAME_SIZE);

    // Write the continuation frame, specifying no more frames are expected.
    writeMedium(frame, (int) headerBlock.size());
    frame.writeByte(Http20Draft16.TYPE_CONTINUATION);
    frame.writeByte(FLAG_END_HEADERS);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeAll(headerBlock);

    assertEquals(frame, sendHeaderFrames(false, sentHeaders)); // Check writer sends the same bytes.

    // Reading the above frames should result in a concatenated headerBlock.
    fr.nextFrame(new BaseTestHandler() {
      @Override public void headers(boolean outFinished, boolean inFinished, int streamId,
          int associatedStreamId, List<Header> headerBlock, HeadersMode headersMode) {
        assertFalse(outFinished);
        assertFalse(inFinished);
        assertEquals(expectedStreamId, streamId);
        assertEquals(-1, associatedStreamId);
        assertEquals(sentHeaders, headerBlock);
        assertEquals(HeadersMode.HTTP_20_HEADERS, headersMode);
      }
    });
  } ##FSTMerge## @Test public void headersFrameThenContinuation() throws IOException {
    final List<Header> sentHeaders = largeHeaders();

    Buffer headerBlock = literalHeaders(sentHeaders);

    // Write the first headers frame.
    writeMedium(frame, Http20Draft16.INITIAL_MAX_FRAME_SIZE);
    frame.writeByte(Http20Draft16.TYPE_HEADERS);
    frame.writeByte(Http20Draft16.FLAG_NONE);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.write(headerBlock, Http20Draft16.INITIAL_MAX_FRAME_SIZE);

    // Write the continuation frame, specifying no more frames are expected.
    writeMedium(frame, (int) headerBlock.size());
    frame.writeByte(Http20Draft16.TYPE_CONTINUATION);
    frame.writeByte(FLAG_END_HEADERS);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeAll(headerBlock);

    assertEquals(frame, sendHeaderFrames(false, sentHeaders)); // Check writer sends the same bytes.

    // Reading the above frames should result in a concatenated headerBlock.
    fr.nextFrame(new BaseTestHandler() {
      @Override public void headers(boolean outFinished, boolean inFinished, int streamId,
          int associatedStreamId, List<Header> headerBlock, HeadersMode headersMode) {
        assertFalse(outFinished);
        assertFalse(inFinished);
        assertEquals(expectedStreamId, streamId);
        assertEquals(-1, associatedStreamId);
        assertEquals(sentHeaders, headerBlock);
        assertEquals(HeadersMode.HTTP_20_HEADERS, headersMode);
      }
    });
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft16Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void pushPromise() throws IOException {
    final int expectedPromisedStreamId = 11;

    final List<Header> pushPromise = Arrays.asList(
        new Header(Header.TARGET_METHOD, "GET"),
        new Header(Header.TARGET_SCHEME, "https"),
        new Header(Header.TARGET_AUTHORITY, "squareup.com"),
        new Header(Header.TARGET_PATH, "/")
    );

    // Write the push promise frame, specifying the associated stream ID.
    Buffer headerBytes = literalHeaders(pushPromise);
    writeMedium(frame, (int) (headerBytes.size() + 4));
    frame.writeByte(Http20Draft16.TYPE_PUSH_PROMISE);
    frame.writeByte(Http20Draft16.FLAG_END_PUSH_PROMISE);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeInt(expectedPromisedStreamId & 0x7fffffff);
    frame.writeAll(headerBytes);

    assertEquals(frame, sendPushPromiseFrames(expectedPromisedStreamId, pushPromise));

    fr.nextFrame(new BaseTestHandler() {
      @Override
      public void pushPromise(int streamId, int promisedStreamId, List<Header> headerBlock) {
        assertEquals(expectedStreamId, streamId);
        assertEquals(expectedPromisedStreamId, promisedStreamId);
        assertEquals(pushPromise, headerBlock);
      }
    });
  } ##FSTMerge## @Test public void pushPromise() throws IOException {
    final int expectedPromisedStreamId = 11;

    final List<Header> pushPromise = Arrays.asList(
        new Header(Header.TARGET_METHOD, "GET"),
        new Header(Header.TARGET_SCHEME, "https"),
        new Header(Header.TARGET_AUTHORITY, "squareup.com"),
        new Header(Header.TARGET_PATH, "/")
    );

    // Write the push promise frame, specifying the associated stream ID.
    Buffer headerBytes = literalHeaders(pushPromise);
    writeMedium(frame, (int) (headerBytes.size() + 4));
    frame.writeByte(Http20Draft16.TYPE_PUSH_PROMISE);
    frame.writeByte(Http20Draft16.FLAG_END_PUSH_PROMISE);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeInt(expectedPromisedStreamId & 0x7fffffff);
    frame.writeAll(headerBytes);

    assertEquals(frame, sendPushPromiseFrames(expectedPromisedStreamId, pushPromise));

    fr.nextFrame(new BaseTestHandler() {
      @Override
      public void pushPromise(int streamId, int promisedStreamId, List<Header> headerBlock) {
        assertEquals(expectedStreamId, streamId);
        assertEquals(expectedPromisedStreamId, promisedStreamId);
        assertEquals(pushPromise, headerBlock);
      }
    });
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft16Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void pushPromiseThenContinuation() throws IOException {
    final int expectedPromisedStreamId = 11;
    final List<Header> pushPromise = largeHeaders();

    // Decoding the first header will cross frame boundaries.
    Buffer headerBlock = literalHeaders(pushPromise);

    // Write the first headers frame.
    writeMedium(frame, Http20Draft16.INITIAL_MAX_FRAME_SIZE);
    frame.writeByte(Http20Draft16.TYPE_PUSH_PROMISE);
    frame.writeByte(Http20Draft16.FLAG_NONE);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeInt(expectedPromisedStreamId & 0x7fffffff);
    frame.write(headerBlock, Http20Draft16.INITIAL_MAX_FRAME_SIZE - 4);

    // Write the continuation frame, specifying no more frames are expected.
    writeMedium(frame, (int) headerBlock.size());
    frame.writeByte(Http20Draft16.TYPE_CONTINUATION);
    frame.writeByte(FLAG_END_HEADERS);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeAll(headerBlock);

    assertEquals(frame, sendPushPromiseFrames(expectedPromisedStreamId, pushPromise));

    // Reading the above frames should result in a concatenated headerBlock.
    fr.nextFrame(new BaseTestHandler() {
      @Override
      public void pushPromise(int streamId, int promisedStreamId, List<Header> headerBlock) {
        assertEquals(expectedStreamId, streamId);
        assertEquals(expectedPromisedStreamId, promisedStreamId);
        assertEquals(pushPromise, headerBlock);
      }
    });
  } ##FSTMerge## @Test public void pushPromiseThenContinuation() throws IOException {
    final int expectedPromisedStreamId = 11;
    final List<Header> pushPromise = largeHeaders();

    // Decoding the first header will cross frame boundaries.
    Buffer headerBlock = literalHeaders(pushPromise);

    // Write the first headers frame.
    writeMedium(frame, Http20Draft16.INITIAL_MAX_FRAME_SIZE);
    frame.writeByte(Http20Draft16.TYPE_PUSH_PROMISE);
    frame.writeByte(Http20Draft16.FLAG_NONE);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeInt(expectedPromisedStreamId & 0x7fffffff);
    frame.write(headerBlock, Http20Draft16.INITIAL_MAX_FRAME_SIZE - 4);

    // Write the continuation frame, specifying no more frames are expected.
    writeMedium(frame, (int) headerBlock.size());
    frame.writeByte(Http20Draft16.TYPE_CONTINUATION);
    frame.writeByte(FLAG_END_HEADERS);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeAll(headerBlock);

    assertEquals(frame, sendPushPromiseFrames(expectedPromisedStreamId, pushPromise));

    // Reading the above frames should result in a concatenated headerBlock.
    fr.nextFrame(new BaseTestHandler() {
      @Override
      public void pushPromise(int streamId, int promisedStreamId, List<Header> headerBlock) {
        assertEquals(expectedStreamId, streamId);
        assertEquals(expectedPromisedStreamId, promisedStreamId);
        assertEquals(pushPromise, headerBlock);
      }
    });
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft16Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void readRstStreamFrame() throws IOException {
    writeMedium(frame, 4);
    frame.writeByte(Http20Draft16.TYPE_RST_STREAM);
    frame.writeByte(Http20Draft16.FLAG_NONE);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeInt(ErrorCode.COMPRESSION_ERROR.httpCode);

    fr.nextFrame(new BaseTestHandler() {
      @Override public void rstStream(int streamId, ErrorCode errorCode) {
        assertEquals(expectedStreamId, streamId);
        assertEquals(ErrorCode.COMPRESSION_ERROR, errorCode);
      }
    });
  } ##FSTMerge## @Test public void readRstStreamFrame() throws IOException {
    writeMedium(frame, 4);
    frame.writeByte(Http20Draft16.TYPE_RST_STREAM);
    frame.writeByte(Http20Draft16.FLAG_NONE);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeInt(ErrorCode.COMPRESSION_ERROR.httpCode);

    fr.nextFrame(new BaseTestHandler() {
      @Override public void rstStream(int streamId, ErrorCode errorCode) {
        assertEquals(expectedStreamId, streamId);
        assertEquals(ErrorCode.COMPRESSION_ERROR, errorCode);
      }
    });
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft16Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void readSettingsFrame() throws IOException {
    final int reducedTableSizeBytes = 16;

    writeMedium(frame, 12); // 2 settings * 6 bytes (2 for the code and 4 for the value).
    frame.writeByte(Http20Draft16.TYPE_SETTINGS);
    frame.writeByte(Http20Draft16.FLAG_NONE);
    frame.writeInt(0); // Settings are always on the connection stream 0.
    frame.writeShort(1); // SETTINGS_HEADER_TABLE_SIZE
    frame.writeInt(reducedTableSizeBytes);
    frame.writeShort(2); // SETTINGS_ENABLE_PUSH
    frame.writeInt(0);

    fr.nextFrame(new BaseTestHandler() {
      @Override public void settings(boolean clearPrevious, Settings settings) {
        assertFalse(clearPrevious); // No clearPrevious in HTTP/2.
        assertEquals(reducedTableSizeBytes, settings.getHeaderTableSize());
        assertEquals(false, settings.getEnablePush(true));
      }
    });
  } ##FSTMerge## @Test public void readSettingsFrame() throws IOException {
    final int reducedTableSizeBytes = 16;

    writeMedium(frame, 12); // 2 settings * 6 bytes (2 for the code and 4 for the value).
    frame.writeByte(Http20Draft16.TYPE_SETTINGS);
    frame.writeByte(Http20Draft16.FLAG_NONE);
    frame.writeInt(0); // Settings are always on the connection stream 0.
    frame.writeShort(1); // SETTINGS_HEADER_TABLE_SIZE
    frame.writeInt(reducedTableSizeBytes);
    frame.writeShort(2); // SETTINGS_ENABLE_PUSH
    frame.writeInt(0);

    fr.nextFrame(new BaseTestHandler() {
      @Override public void settings(boolean clearPrevious, Settings settings) {
        assertFalse(clearPrevious); // No clearPrevious in HTTP/2.
        assertEquals(reducedTableSizeBytes, settings.getHeaderTableSize());
        assertEquals(false, settings.getEnablePush(true));
      }
    });
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft16Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void readSettingsFrameInvalidPushValue() throws IOException {
    writeMedium(frame, 6); // 2 for the code and 4 for the value
    frame.writeByte(Http20Draft16.TYPE_SETTINGS);
    frame.writeByte(Http20Draft16.FLAG_NONE);
    frame.writeInt(0); // Settings are always on the connection stream 0.
    frame.writeShort(2);
    frame.writeInt(2);

    try {
      fr.nextFrame(new BaseTestHandler());
      fail();
    } catch (IOException e) {
      assertEquals("PROTOCOL_ERROR SETTINGS_ENABLE_PUSH != 0 or 1", e.getMessage());
    }
  } ##FSTMerge## @Test public void readSettingsFrameInvalidPushValue() throws IOException {
    writeMedium(frame, 6); // 2 for the code and 4 for the value
    frame.writeByte(Http20Draft16.TYPE_SETTINGS);
    frame.writeByte(Http20Draft16.FLAG_NONE);
    frame.writeInt(0); // Settings are always on the connection stream 0.
    frame.writeShort(2);
    frame.writeInt(2);

    try {
      fr.nextFrame(new BaseTestHandler());
      fail();
    } catch (IOException e) {
      assertEquals("PROTOCOL_ERROR SETTINGS_ENABLE_PUSH != 0 or 1", e.getMessage());
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft16Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void readSettingsFrameInvalidSettingId() throws IOException {
    writeMedium(frame, 6); // 2 for the code and 4 for the value
    frame.writeByte(Http20Draft16.TYPE_SETTINGS);
    frame.writeByte(Http20Draft16.FLAG_NONE);
    frame.writeInt(0); // Settings are always on the connection stream 0.
    frame.writeShort(7); // old number for SETTINGS_INITIAL_WINDOW_SIZE
    frame.writeInt(1);

    try {
      fr.nextFrame(new BaseTestHandler());
      fail();
    } catch (IOException e) {
      assertEquals("PROTOCOL_ERROR invalid settings id: 7", e.getMessage());
    }
  } ##FSTMerge## @Test public void readSettingsFrameInvalidSettingId() throws IOException {
    writeMedium(frame, 6); // 2 for the code and 4 for the value
    frame.writeByte(Http20Draft16.TYPE_SETTINGS);
    frame.writeByte(Http20Draft16.FLAG_NONE);
    frame.writeInt(0); // Settings are always on the connection stream 0.
    frame.writeShort(7); // old number for SETTINGS_INITIAL_WINDOW_SIZE
    frame.writeInt(1);

    try {
      fr.nextFrame(new BaseTestHandler());
      fail();
    } catch (IOException e) {
      assertEquals("PROTOCOL_ERROR invalid settings id: 7", e.getMessage());
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft16Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void readSettingsFrameNegativeWindowSize() throws IOException {
    writeMedium(frame, 6); // 2 for the code and 4 for the value
    frame.writeByte(Http20Draft16.TYPE_SETTINGS);
    frame.writeByte(Http20Draft16.FLAG_NONE);
    frame.writeInt(0); // Settings are always on the connection stream 0.
    frame.writeShort(4); // SETTINGS_INITIAL_WINDOW_SIZE
    frame.writeInt(Integer.MIN_VALUE);

    try {
      fr.nextFrame(new BaseTestHandler());
      fail();
    } catch (IOException e) {
      assertEquals("PROTOCOL_ERROR SETTINGS_INITIAL_WINDOW_SIZE > 2^31 - 1", e.getMessage());
    }
  } ##FSTMerge## @Test public void readSettingsFrameNegativeWindowSize() throws IOException {
    writeMedium(frame, 6); // 2 for the code and 4 for the value
    frame.writeByte(Http20Draft16.TYPE_SETTINGS);
    frame.writeByte(Http20Draft16.FLAG_NONE);
    frame.writeInt(0); // Settings are always on the connection stream 0.
    frame.writeShort(4); // SETTINGS_INITIAL_WINDOW_SIZE
    frame.writeInt(Integer.MIN_VALUE);

    try {
      fr.nextFrame(new BaseTestHandler());
      fail();
    } catch (IOException e) {
      assertEquals("PROTOCOL_ERROR SETTINGS_INITIAL_WINDOW_SIZE > 2^31 - 1", e.getMessage());
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft16Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void readSettingsFrameNegativeFrameLength() throws IOException {
    writeMedium(frame, 6); // 2 for the code and 4 for the value
    frame.writeByte(Http20Draft16.TYPE_SETTINGS);
    frame.writeByte(Http20Draft16.FLAG_NONE);
    frame.writeInt(0); // Settings are always on the connection stream 0.
    frame.writeShort(5); // SETTINGS_MAX_FRAME_SIZE
    frame.writeInt(Integer.MIN_VALUE);

    try {
      fr.nextFrame(new BaseTestHandler());
      fail();
    } catch (IOException e) {
      assertEquals("PROTOCOL_ERROR SETTINGS_MAX_FRAME_SIZE: -2147483648", e.getMessage());
    }
  } ##FSTMerge## @Test public void readSettingsFrameNegativeFrameLength() throws IOException {
    writeMedium(frame, 6); // 2 for the code and 4 for the value
    frame.writeByte(Http20Draft16.TYPE_SETTINGS);
    frame.writeByte(Http20Draft16.FLAG_NONE);
    frame.writeInt(0); // Settings are always on the connection stream 0.
    frame.writeShort(5); // SETTINGS_MAX_FRAME_SIZE
    frame.writeInt(Integer.MIN_VALUE);

    try {
      fr.nextFrame(new BaseTestHandler());
      fail();
    } catch (IOException e) {
      assertEquals("PROTOCOL_ERROR SETTINGS_MAX_FRAME_SIZE: -2147483648", e.getMessage());
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft16Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void readSettingsFrameTooShortFrameLength() throws IOException {
    writeMedium(frame, 6); // 2 for the code and 4 for the value
    frame.writeByte(Http20Draft16.TYPE_SETTINGS);
    frame.writeByte(Http20Draft16.FLAG_NONE);
    frame.writeInt(0); // Settings are always on the connection stream 0.
    frame.writeShort(5); // SETTINGS_MAX_FRAME_SIZE
    frame.writeInt((int) Math.pow(2, 14) - 1);

    try {
      fr.nextFrame(new BaseTestHandler());
      fail();
    } catch (IOException e) {
      assertEquals("PROTOCOL_ERROR SETTINGS_MAX_FRAME_SIZE: 16383", e.getMessage());
    }
  } ##FSTMerge## @Test public void readSettingsFrameTooShortFrameLength() throws IOException {
    writeMedium(frame, 6); // 2 for the code and 4 for the value
    frame.writeByte(Http20Draft16.TYPE_SETTINGS);
    frame.writeByte(Http20Draft16.FLAG_NONE);
    frame.writeInt(0); // Settings are always on the connection stream 0.
    frame.writeShort(5); // SETTINGS_MAX_FRAME_SIZE
    frame.writeInt((int) Math.pow(2, 14) - 1);

    try {
      fr.nextFrame(new BaseTestHandler());
      fail();
    } catch (IOException e) {
      assertEquals("PROTOCOL_ERROR SETTINGS_MAX_FRAME_SIZE: 16383", e.getMessage());
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft16Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void readSettingsFrameTooLongFrameLength() throws IOException {
    writeMedium(frame, 6); // 2 for the code and 4 for the value
    frame.writeByte(Http20Draft16.TYPE_SETTINGS);
    frame.writeByte(Http20Draft16.FLAG_NONE);
    frame.writeInt(0); // Settings are always on the connection stream 0.
    frame.writeShort(5); // SETTINGS_MAX_FRAME_SIZE
    frame.writeInt((int) Math.pow(2, 24));

    try {
      fr.nextFrame(new BaseTestHandler());
      fail();
    } catch (IOException e) {
      assertEquals("PROTOCOL_ERROR SETTINGS_MAX_FRAME_SIZE: 16777216", e.getMessage());
    }
  } ##FSTMerge## @Test public void readSettingsFrameTooLongFrameLength() throws IOException {
    writeMedium(frame, 6); // 2 for the code and 4 for the value
    frame.writeByte(Http20Draft16.TYPE_SETTINGS);
    frame.writeByte(Http20Draft16.FLAG_NONE);
    frame.writeInt(0); // Settings are always on the connection stream 0.
    frame.writeShort(5); // SETTINGS_MAX_FRAME_SIZE
    frame.writeInt((int) Math.pow(2, 24));

    try {
      fr.nextFrame(new BaseTestHandler());
      fail();
    } catch (IOException e) {
      assertEquals("PROTOCOL_ERROR SETTINGS_MAX_FRAME_SIZE: 16777216", e.getMessage());
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft16Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void pingRoundTrip() throws IOException {
    final int expectedPayload1 = 7;
    final int expectedPayload2 = 8;

    writeMedium(frame, 8); // length
    frame.writeByte(Http20Draft16.TYPE_PING);
    frame.writeByte(Http20Draft16.FLAG_ACK);
    frame.writeInt(0); // connection-level
    frame.writeInt(expectedPayload1);
    frame.writeInt(expectedPayload2);

    // Check writer sends the same bytes.
    assertEquals(frame, sendPingFrame(true, expectedPayload1, expectedPayload2));

    fr.nextFrame(new BaseTestHandler() {
      @Override public void ping(boolean ack, int payload1, int payload2) {
        assertTrue(ack);
        assertEquals(expectedPayload1, payload1);
        assertEquals(expectedPayload2, payload2);
      }
    });
  } ##FSTMerge## @Test public void pingRoundTrip() throws IOException {
    final int expectedPayload1 = 7;
    final int expectedPayload2 = 8;

    writeMedium(frame, 8); // length
    frame.writeByte(Http20Draft16.TYPE_PING);
    frame.writeByte(Http20Draft16.FLAG_ACK);
    frame.writeInt(0); // connection-level
    frame.writeInt(expectedPayload1);
    frame.writeInt(expectedPayload2);

    // Check writer sends the same bytes.
    assertEquals(frame, sendPingFrame(true, expectedPayload1, expectedPayload2));

    fr.nextFrame(new BaseTestHandler() {
      @Override public void ping(boolean ack, int payload1, int payload2) {
        assertTrue(ack);
        assertEquals(expectedPayload1, payload1);
        assertEquals(expectedPayload2, payload2);
      }
    });
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft16Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void maxLengthDataFrame() throws IOException {
    final byte[] expectedData = new byte[Http20Draft16.INITIAL_MAX_FRAME_SIZE];
    Arrays.fill(expectedData, (byte) 2);

    writeMedium(frame, expectedData.length);
    frame.writeByte(Http20Draft16.TYPE_DATA);
    frame.writeByte(Http20Draft16.FLAG_NONE);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.write(expectedData);

    // Check writer sends the same bytes.
    assertEquals(frame, sendDataFrame(new Buffer().write(expectedData)));

    fr.nextFrame(new BaseTestHandler() {
      @Override public void data(boolean inFinished, int streamId, BufferedSource source,
          int length) throws IOException {
        assertFalse(inFinished);
        assertEquals(expectedStreamId, streamId);
        assertEquals(Http20Draft16.INITIAL_MAX_FRAME_SIZE, length);
        ByteString data = source.readByteString(length);
        for (byte b : data.toByteArray()) {
          assertEquals(2, b);
        }
      }
    });
  } ##FSTMerge## @Test public void maxLengthDataFrame() throws IOException {
    final byte[] expectedData = new byte[Http20Draft16.INITIAL_MAX_FRAME_SIZE];
    Arrays.fill(expectedData, (byte) 2);

    writeMedium(frame, expectedData.length);
    frame.writeByte(Http20Draft16.TYPE_DATA);
    frame.writeByte(Http20Draft16.FLAG_NONE);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.write(expectedData);

    // Check writer sends the same bytes.
    assertEquals(frame, sendDataFrame(new Buffer().write(expectedData)));

    fr.nextFrame(new BaseTestHandler() {
      @Override public void data(boolean inFinished, int streamId, BufferedSource source,
          int length) throws IOException {
        assertFalse(inFinished);
        assertEquals(expectedStreamId, streamId);
        assertEquals(Http20Draft16.INITIAL_MAX_FRAME_SIZE, length);
        ByteString data = source.readByteString(length);
        for (byte b : data.toByteArray()) {
          assertEquals(2, b);
        }
      }
    });
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft16Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void compressedDataFrameWhenSettingDisabled() throws IOException {
    byte[] expectedData = new byte[Http20Draft16.INITIAL_MAX_FRAME_SIZE];
    Arrays.fill(expectedData, (byte) 2);
    Buffer zipped = gzip(expectedData);
    int zippedSize = (int) zipped.size();

    writeMedium(frame, zippedSize);
    frame.writeByte(Http20Draft16.TYPE_DATA);
    frame.writeByte(FLAG_COMPRESSED);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    zipped.readAll(frame);

    try {
      fr.nextFrame(new BaseTestHandler());
      fail();
    } catch (IOException e) {
      assertEquals("PROTOCOL_ERROR: FLAG_COMPRESSED without SETTINGS_COMPRESS_DATA",
          e.getMessage());
    }
  } ##FSTMerge## @Test public void compressedDataFrameWhenSettingDisabled() throws IOException {
    byte[] expectedData = new byte[Http20Draft16.INITIAL_MAX_FRAME_SIZE];
    Arrays.fill(expectedData, (byte) 2);
    Buffer zipped = gzip(expectedData);
    int zippedSize = (int) zipped.size();

    writeMedium(frame, zippedSize);
    frame.writeByte(Http20Draft16.TYPE_DATA);
    frame.writeByte(FLAG_COMPRESSED);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    zipped.readAll(frame);

    try {
      fr.nextFrame(new BaseTestHandler());
      fail();
    } catch (IOException e) {
      assertEquals("PROTOCOL_ERROR: FLAG_COMPRESSED without SETTINGS_COMPRESS_DATA",
          e.getMessage());
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft16Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void readPaddedDataFrame() throws IOException {
    int dataLength = 1123;
    byte[] expectedData = new byte[dataLength];
    Arrays.fill(expectedData, (byte) 2);

    int paddingLength = 254;
    byte[] padding = new byte[paddingLength];
    Arrays.fill(padding, (byte) 0);

    writeMedium(frame, dataLength + paddingLength + 1);
    frame.writeByte(Http20Draft16.TYPE_DATA);
    frame.writeByte(FLAG_PADDED);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeByte(paddingLength);
    frame.write(expectedData);
    frame.write(padding);

    fr.nextFrame(assertData());
    assertTrue(frame.exhausted()); // Padding was skipped.
  } ##FSTMerge## @Test public void readPaddedDataFrame() throws IOException {
    int dataLength = 1123;
    byte[] expectedData = new byte[dataLength];
    Arrays.fill(expectedData, (byte) 2);

    int paddingLength = 254;
    byte[] padding = new byte[paddingLength];
    Arrays.fill(padding, (byte) 0);

    writeMedium(frame, dataLength + paddingLength + 1);
    frame.writeByte(Http20Draft16.TYPE_DATA);
    frame.writeByte(FLAG_PADDED);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeByte(paddingLength);
    frame.write(expectedData);
    frame.write(padding);

    fr.nextFrame(assertData());
    assertTrue(frame.exhausted()); // Padding was skipped.
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft16Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void readPaddedDataFrameZeroPadding() throws IOException {
    int dataLength = 1123;
    byte[] expectedData = new byte[dataLength];
    Arrays.fill(expectedData, (byte) 2);

    writeMedium(frame, dataLength + 1);
    frame.writeByte(Http20Draft16.TYPE_DATA);
    frame.writeByte(FLAG_PADDED);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeByte(0);
    frame.write(expectedData);

    fr.nextFrame(assertData());
  } ##FSTMerge## @Test public void readPaddedDataFrameZeroPadding() throws IOException {
    int dataLength = 1123;
    byte[] expectedData = new byte[dataLength];
    Arrays.fill(expectedData, (byte) 2);

    writeMedium(frame, dataLength + 1);
    frame.writeByte(Http20Draft16.TYPE_DATA);
    frame.writeByte(FLAG_PADDED);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeByte(0);
    frame.write(expectedData);

    fr.nextFrame(assertData());
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft16Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void readPaddedHeadersFrame() throws IOException {
    int paddingLength = 254;
    byte[] padding = new byte[paddingLength];
    Arrays.fill(padding, (byte) 0);

    Buffer headerBlock = literalHeaders(headerEntries("foo", "barrr", "baz", "qux"));
    writeMedium(frame, (int) headerBlock.size() + paddingLength + 1);
    frame.writeByte(Http20Draft16.TYPE_HEADERS);
    frame.writeByte(FLAG_END_HEADERS | FLAG_PADDED);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeByte(paddingLength);
    frame.writeAll(headerBlock);
    frame.write(padding);

    fr.nextFrame(assertHeaderBlock());
    assertTrue(frame.exhausted()); // Padding was skipped.
  } ##FSTMerge## @Test public void readPaddedHeadersFrame() throws IOException {
    int paddingLength = 254;
    byte[] padding = new byte[paddingLength];
    Arrays.fill(padding, (byte) 0);

    Buffer headerBlock = literalHeaders(headerEntries("foo", "barrr", "baz", "qux"));
    writeMedium(frame, (int) headerBlock.size() + paddingLength + 1);
    frame.writeByte(Http20Draft16.TYPE_HEADERS);
    frame.writeByte(FLAG_END_HEADERS | FLAG_PADDED);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeByte(paddingLength);
    frame.writeAll(headerBlock);
    frame.write(padding);

    fr.nextFrame(assertHeaderBlock());
    assertTrue(frame.exhausted()); // Padding was skipped.
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft16Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void readPaddedHeadersFrameZeroPadding() throws IOException {
    Buffer headerBlock = literalHeaders(headerEntries("foo", "barrr", "baz", "qux"));
    writeMedium(frame, (int) headerBlock.size() + 1);
    frame.writeByte(Http20Draft16.TYPE_HEADERS);
    frame.writeByte(FLAG_END_HEADERS | FLAG_PADDED);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeByte(0);
    frame.writeAll(headerBlock);

    fr.nextFrame(assertHeaderBlock());
  } ##FSTMerge## @Test public void readPaddedHeadersFrameZeroPadding() throws IOException {
    Buffer headerBlock = literalHeaders(headerEntries("foo", "barrr", "baz", "qux"));
    writeMedium(frame, (int) headerBlock.size() + 1);
    frame.writeByte(Http20Draft16.TYPE_HEADERS);
    frame.writeByte(FLAG_END_HEADERS | FLAG_PADDED);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeByte(0);
    frame.writeAll(headerBlock);

    fr.nextFrame(assertHeaderBlock());
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft16Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void readPaddedHeadersFrameThenContinuation() throws IOException {
    int paddingLength = 254;
    byte[] padding = new byte[paddingLength];
    Arrays.fill(padding, (byte) 0);

    // Decoding the first header will cross frame boundaries.
    Buffer headerBlock = literalHeaders(headerEntries("foo", "barrr", "baz", "qux"));

    // Write the first headers frame.
    writeMedium(frame, (int) (headerBlock.size() / 2) + paddingLength + 1);
    frame.writeByte(Http20Draft16.TYPE_HEADERS);
    frame.writeByte(FLAG_PADDED);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeByte(paddingLength);
    frame.write(headerBlock, headerBlock.size() / 2);
    frame.write(padding);

    // Write the continuation frame, specifying no more frames are expected.
    writeMedium(frame, (int) headerBlock.size());
    frame.writeByte(Http20Draft16.TYPE_CONTINUATION);
    frame.writeByte(FLAG_END_HEADERS);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeAll(headerBlock);

    fr.nextFrame(assertHeaderBlock());
    assertTrue(frame.exhausted());
  } ##FSTMerge## @Test public void readPaddedHeadersFrameThenContinuation() throws IOException {
    int paddingLength = 254;
    byte[] padding = new byte[paddingLength];
    Arrays.fill(padding, (byte) 0);

    // Decoding the first header will cross frame boundaries.
    Buffer headerBlock = literalHeaders(headerEntries("foo", "barrr", "baz", "qux"));

    // Write the first headers frame.
    writeMedium(frame, (int) (headerBlock.size() / 2) + paddingLength + 1);
    frame.writeByte(Http20Draft16.TYPE_HEADERS);
    frame.writeByte(FLAG_PADDED);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeByte(paddingLength);
    frame.write(headerBlock, headerBlock.size() / 2);
    frame.write(padding);

    // Write the continuation frame, specifying no more frames are expected.
    writeMedium(frame, (int) headerBlock.size());
    frame.writeByte(Http20Draft16.TYPE_CONTINUATION);
    frame.writeByte(FLAG_END_HEADERS);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeAll(headerBlock);

    fr.nextFrame(assertHeaderBlock());
    assertTrue(frame.exhausted());
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft16Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void tooLargeDataFrame() throws IOException {
    try {
      sendDataFrame(new Buffer().write(new byte[0x1000000]));
      fail();
    } catch (IllegalArgumentException e) {
      assertEquals("FRAME_SIZE_ERROR length > 16384: 16777216", e.getMessage());
    }
  } ##FSTMerge## @Test public void tooLargeDataFrame() throws IOException {
    try {
      sendDataFrame(new Buffer().write(new byte[0x1000000]));
      fail();
    } catch (IllegalArgumentException e) {
      assertEquals("FRAME_SIZE_ERROR length > 16384: 16777216", e.getMessage());
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft16Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void windowUpdateRoundTrip() throws IOException {
    final long expectedWindowSizeIncrement = 0x7fffffff;

    writeMedium(frame, 4); // length
    frame.writeByte(Http20Draft16.TYPE_WINDOW_UPDATE);
    frame.writeByte(Http20Draft16.FLAG_NONE);
    frame.writeInt(expectedStreamId);
    frame.writeInt((int) expectedWindowSizeIncrement);

    // Check writer sends the same bytes.
    assertEquals(frame, windowUpdate(expectedWindowSizeIncrement));

    fr.nextFrame(new BaseTestHandler() {
      @Override public void windowUpdate(int streamId, long windowSizeIncrement) {
        assertEquals(expectedStreamId, streamId);
        assertEquals(expectedWindowSizeIncrement, windowSizeIncrement);
      }
    });
  } ##FSTMerge## @Test public void windowUpdateRoundTrip() throws IOException {
    final long expectedWindowSizeIncrement = 0x7fffffff;

    writeMedium(frame, 4); // length
    frame.writeByte(Http20Draft16.TYPE_WINDOW_UPDATE);
    frame.writeByte(Http20Draft16.FLAG_NONE);
    frame.writeInt(expectedStreamId);
    frame.writeInt((int) expectedWindowSizeIncrement);

    // Check writer sends the same bytes.
    assertEquals(frame, windowUpdate(expectedWindowSizeIncrement));

    fr.nextFrame(new BaseTestHandler() {
      @Override public void windowUpdate(int streamId, long windowSizeIncrement) {
        assertEquals(expectedStreamId, streamId);
        assertEquals(expectedWindowSizeIncrement, windowSizeIncrement);
      }
    });
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft16Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void badWindowSizeIncrement() throws IOException {
    try {
      windowUpdate(0);
      fail();
    } catch (IllegalArgumentException e) {
      assertEquals("windowSizeIncrement == 0 || windowSizeIncrement > 0x7fffffffL: 0",
          e.getMessage());
    }
    try {
      windowUpdate(0x80000000L);
      fail();
    } catch (IllegalArgumentException e) {
      assertEquals("windowSizeIncrement == 0 || windowSizeIncrement > 0x7fffffffL: 2147483648",
          e.getMessage());
    }
  } ##FSTMerge## @Test public void badWindowSizeIncrement() throws IOException {
    try {
      windowUpdate(0);
      fail();
    } catch (IllegalArgumentException e) {
      assertEquals("windowSizeIncrement == 0 || windowSizeIncrement > 0x7fffffffL: 0",
          e.getMessage());
    }
    try {
      windowUpdate(0x80000000L);
      fail();
    } catch (IllegalArgumentException e) {
      assertEquals("windowSizeIncrement == 0 || windowSizeIncrement > 0x7fffffffL: 2147483648",
          e.getMessage());
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft16Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void goAwayWithoutDebugDataRoundTrip() throws IOException {
    final ErrorCode expectedError = ErrorCode.PROTOCOL_ERROR;

    writeMedium(frame, 8); // Without debug data there's only 2 32-bit fields.
    frame.writeByte(Http20Draft16.TYPE_GOAWAY);
    frame.writeByte(Http20Draft16.FLAG_NONE);
    frame.writeInt(0); // connection-scope
    frame.writeInt(expectedStreamId); // last good stream.
    frame.writeInt(expectedError.httpCode);

    // Check writer sends the same bytes.
    assertEquals(frame, sendGoAway(expectedStreamId, expectedError, Util.EMPTY_BYTE_ARRAY));

    fr.nextFrame(new BaseTestHandler() {
      @Override public void goAway(
          int lastGoodStreamId, ErrorCode errorCode, ByteString debugData) {
        assertEquals(expectedStreamId, lastGoodStreamId);
        assertEquals(expectedError, errorCode);
        assertEquals(0, debugData.size());
      }
    });
  } ##FSTMerge## @Test public void goAwayWithoutDebugDataRoundTrip() throws IOException {
    final ErrorCode expectedError = ErrorCode.PROTOCOL_ERROR;

    writeMedium(frame, 8); // Without debug data there's only 2 32-bit fields.
    frame.writeByte(Http20Draft16.TYPE_GOAWAY);
    frame.writeByte(Http20Draft16.FLAG_NONE);
    frame.writeInt(0); // connection-scope
    frame.writeInt(expectedStreamId); // last good stream.
    frame.writeInt(expectedError.httpCode);

    // Check writer sends the same bytes.
    assertEquals(frame, sendGoAway(expectedStreamId, expectedError, Util.EMPTY_BYTE_ARRAY));

    fr.nextFrame(new BaseTestHandler() {
      @Override public void goAway(
          int lastGoodStreamId, ErrorCode errorCode, ByteString debugData) {
        assertEquals(expectedStreamId, lastGoodStreamId);
        assertEquals(expectedError, errorCode);
        assertEquals(0, debugData.size());
      }
    });
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft16Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void goAwayWithDebugDataRoundTrip() throws IOException {
    final ErrorCode expectedError = ErrorCode.PROTOCOL_ERROR;
    final ByteString expectedData = ByteString.encodeUtf8("abcdefgh");

    // Compose the expected GOAWAY frame without debug data.
    writeMedium(frame, 8 + expectedData.size());
    frame.writeByte(Http20Draft16.TYPE_GOAWAY);
    frame.writeByte(Http20Draft16.FLAG_NONE);
    frame.writeInt(0); // connection-scope
    frame.writeInt(0); // never read any stream!
    frame.writeInt(expectedError.httpCode);
    frame.write(expectedData.toByteArray());

    // Check writer sends the same bytes.
    assertEquals(frame, sendGoAway(0, expectedError, expectedData.toByteArray()));

    fr.nextFrame(new BaseTestHandler() {
      @Override public void goAway(
          int lastGoodStreamId, ErrorCode errorCode, ByteString debugData) {
        assertEquals(0, lastGoodStreamId);
        assertEquals(expectedError, errorCode);
        assertEquals(expectedData, debugData);
      }
    });
  } ##FSTMerge## @Test public void goAwayWithDebugDataRoundTrip() throws IOException {
    final ErrorCode expectedError = ErrorCode.PROTOCOL_ERROR;
    final ByteString expectedData = ByteString.encodeUtf8("abcdefgh");

    // Compose the expected GOAWAY frame without debug data.
    writeMedium(frame, 8 + expectedData.size());
    frame.writeByte(Http20Draft16.TYPE_GOAWAY);
    frame.writeByte(Http20Draft16.FLAG_NONE);
    frame.writeInt(0); // connection-scope
    frame.writeInt(0); // never read any stream!
    frame.writeInt(expectedError.httpCode);
    frame.write(expectedData.toByteArray());

    // Check writer sends the same bytes.
    assertEquals(frame, sendGoAway(0, expectedError, expectedData.toByteArray()));

    fr.nextFrame(new BaseTestHandler() {
      @Override public void goAway(
          int lastGoodStreamId, ErrorCode errorCode, ByteString debugData) {
        assertEquals(0, lastGoodStreamId);
        assertEquals(expectedError, errorCode);
        assertEquals(expectedData, debugData);
      }
    });
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft16Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void frameSizeError() throws IOException {
    Http20Draft16.Writer writer = new Http20Draft16.Writer(new Buffer(), true);

    try {
      writer.frameHeader(0, 16777216, Http20Draft16.TYPE_DATA, FLAG_NONE);
      fail();
    } catch (IllegalArgumentException e) {
      // TODO: real max is based on settings between 16384 and 16777215
      assertEquals("FRAME_SIZE_ERROR length > 16384: 16777216", e.getMessage());
    }
  } ##FSTMerge## @Test public void frameSizeError() throws IOException {
    Http20Draft16.Writer writer = new Http20Draft16.Writer(new Buffer(), true);

    try {
      writer.frameHeader(0, 16777216, Http20Draft16.TYPE_DATA, FLAG_NONE);
      fail();
    } catch (IllegalArgumentException e) {
      // TODO: real max is based on settings between 16384 and 16777215
      assertEquals("FRAME_SIZE_ERROR length > 16384: 16777216", e.getMessage());
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft16Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void ackSettingsAppliesMaxFrameSize() throws IOException {
    int newMaxFrameSize = 16777215;

    Http20Draft16.Writer writer = new Http20Draft16.Writer(new Buffer(), true);

    writer.ackSettings(new Settings().set(Settings.MAX_FRAME_SIZE, 0, newMaxFrameSize));

    assertEquals(newMaxFrameSize, writer.maxDataLength());
    writer.frameHeader(0, newMaxFrameSize, Http20Draft16.TYPE_DATA, FLAG_NONE);
  } ##FSTMerge## @Test public void ackSettingsAppliesMaxFrameSize() throws IOException {
    int newMaxFrameSize = 16777215;

    Http20Draft16.Writer writer = new Http20Draft16.Writer(new Buffer(), true);

    writer.ackSettings(new Settings().set(Settings.MAX_FRAME_SIZE, 0, newMaxFrameSize));

    assertEquals(newMaxFrameSize, writer.maxDataLength());
    writer.frameHeader(0, newMaxFrameSize, Http20Draft16.TYPE_DATA, FLAG_NONE);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft16Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void streamIdHasReservedBit() throws IOException {
    Http20Draft16.Writer writer = new Http20Draft16.Writer(new Buffer(), true);

    try {
      int streamId = 3;
      streamId |= 1L << 31; // set reserved bit
      writer.frameHeader(streamId, Http20Draft16.INITIAL_MAX_FRAME_SIZE, Http20Draft16.TYPE_DATA, FLAG_NONE);
      fail();
    } catch (IllegalArgumentException e) {
      assertEquals("reserved bit set: -2147483645", e.getMessage());
    }
  } ##FSTMerge## @Test public void streamIdHasReservedBit() throws IOException {
    Http20Draft16.Writer writer = new Http20Draft16.Writer(new Buffer(), true);

    try {
      int streamId = 3;
      streamId |= 1L << 31; // set reserved bit
      writer.frameHeader(streamId, Http20Draft16.INITIAL_MAX_FRAME_SIZE, Http20Draft16.TYPE_DATA, FLAG_NONE);
      fail();
    } catch (IllegalArgumentException e) {
      assertEquals("reserved bit set: -2147483645", e.getMessage());
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft16Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Buffer literalHeaders(List<Header> sentHeaders) throws IOException {
    Buffer out = new Buffer();
    new HpackDraft10.Writer(out).writeHeaders(sentHeaders);
    return out;
  } ##FSTMerge## private Buffer literalHeaders(List<Header> sentHeaders) throws IOException {
    Buffer out = new Buffer();
    new HpackDraft10.Writer(out).writeHeaders(sentHeaders);
    return out;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft16Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Buffer sendHeaderFrames(boolean outFinished, List<Header> headers) throws IOException {
    Buffer out = new Buffer();
    new Http20Draft16.Writer(out, true).headers(outFinished, expectedStreamId, headers);
    return out;
  } ##FSTMerge## private Buffer sendHeaderFrames(boolean outFinished, List<Header> headers) throws IOException {
    Buffer out = new Buffer();
    new Http20Draft16.Writer(out, true).headers(outFinished, expectedStreamId, headers);
    return out;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft16Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Buffer sendPushPromiseFrames(int streamId, List<Header> headers) throws IOException {
    Buffer out = new Buffer();
    new Http20Draft16.Writer(out, true).pushPromise(expectedStreamId, streamId, headers);
    return out;
  } ##FSTMerge## private Buffer sendPushPromiseFrames(int streamId, List<Header> headers) throws IOException {
    Buffer out = new Buffer();
    new Http20Draft16.Writer(out, true).pushPromise(expectedStreamId, streamId, headers);
    return out;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft16Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Buffer sendPingFrame(boolean ack, int payload1, int payload2) throws IOException {
    Buffer out = new Buffer();
    new Http20Draft16.Writer(out, true).ping(ack, payload1, payload2);
    return out;
  } ##FSTMerge## private Buffer sendPingFrame(boolean ack, int payload1, int payload2) throws IOException {
    Buffer out = new Buffer();
    new Http20Draft16.Writer(out, true).ping(ack, payload1, payload2);
    return out;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft16Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Buffer sendGoAway(int lastGoodStreamId, ErrorCode errorCode, byte[] debugData)
      throws IOException {
    Buffer out = new Buffer();
    new Http20Draft16.Writer(out, true).goAway(lastGoodStreamId, errorCode, debugData);
    return out;
  } ##FSTMerge## private Buffer sendGoAway(int lastGoodStreamId, ErrorCode errorCode, byte[] debugData)
      throws IOException {
    Buffer out = new Buffer();
    new Http20Draft16.Writer(out, true).goAway(lastGoodStreamId, errorCode, debugData);
    return out;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft16Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Buffer sendDataFrame(Buffer data) throws IOException {
    Buffer out = new Buffer();
    new Http20Draft16.Writer(out, true).dataFrame(expectedStreamId, FLAG_NONE, data,
        (int) data.size());
    return out;
  } ##FSTMerge## private Buffer sendDataFrame(Buffer data) throws IOException {
    Buffer out = new Buffer();
    new Http20Draft16.Writer(out, true).dataFrame(expectedStreamId, FLAG_NONE, data,
        (int) data.size());
    return out;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft16Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Buffer windowUpdate(long windowSizeIncrement) throws IOException {
    Buffer out = new Buffer();
    new Http20Draft16.Writer(out, true).windowUpdate(expectedStreamId, windowSizeIncrement);
    return out;
  } ##FSTMerge## private Buffer windowUpdate(long windowSizeIncrement) throws IOException {
    Buffer out = new Buffer();
    new Http20Draft16.Writer(out, true).windowUpdate(expectedStreamId, windowSizeIncrement);
    return out;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft16Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private FrameReader.Handler assertHeaderBlock() {
    return new BaseTestHandler() {
      @Override public void headers(boolean outFinished, boolean inFinished, int streamId,
          int associatedStreamId, List<Header> headerBlock, HeadersMode headersMode) {
        assertFalse(outFinished);
        assertFalse(inFinished);
        assertEquals(expectedStreamId, streamId);
        assertEquals(-1, associatedStreamId);
        assertEquals(headerEntries("foo", "barrr", "baz", "qux"), headerBlock);
        assertEquals(HeadersMode.HTTP_20_HEADERS, headersMode);
      }
    };
  } ##FSTMerge## private FrameReader.Handler assertHeaderBlock() {
    return new BaseTestHandler() {
      @Override public void headers(boolean outFinished, boolean inFinished, int streamId,
          int associatedStreamId, List<Header> headerBlock, HeadersMode headersMode) {
        assertFalse(outFinished);
        assertFalse(inFinished);
        assertEquals(expectedStreamId, streamId);
        assertEquals(-1, associatedStreamId);
        assertEquals(headerEntries("foo", "barrr", "baz", "qux"), headerBlock);
        assertEquals(HeadersMode.HTTP_20_HEADERS, headersMode);
      }
    };
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft16Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private FrameReader.Handler assertData() {
    return new BaseTestHandler() {
      @Override public void data(boolean inFinished, int streamId, BufferedSource source,
          int length) throws IOException {
        assertFalse(inFinished);
        assertEquals(expectedStreamId, streamId);
        assertEquals(1123, length);
        ByteString data = source.readByteString(length);
        for (byte b : data.toByteArray()) {
          assertEquals(2, b);
        }
      }
    };
  } ##FSTMerge## private FrameReader.Handler assertData() {
    return new BaseTestHandler() {
      @Override public void data(boolean inFinished, int streamId, BufferedSource source,
          int length) throws IOException {
        assertFalse(inFinished);
        assertEquals(expectedStreamId, streamId);
        assertEquals(1123, length);
        ByteString data = source.readByteString(length);
        for (byte b : data.toByteArray()) {
          assertEquals(2, b);
        }
      }
    };
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft16Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static Buffer gzip(byte[] data) throws IOException {
    Buffer buffer = new Buffer();
    Okio.buffer(new GzipSink(buffer)).write(data).close();
    return buffer;
  } ##FSTMerge## private static Buffer gzip(byte[] data) throws IOException {
    Buffer buffer = new Buffer();
    Okio.buffer(new GzipSink(buffer)).write(data).close();
    return buffer;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft16Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static List<Header> largeHeaders() {
    String[] nameValues = new String[32];
    char[] chars = new char[512];
    for (int i = 0; i < nameValues.length;) {
      Arrays.fill(chars, (char) i);
      nameValues[i++] = nameValues[i++] = String.valueOf(chars);
    }
    return headerEntries(nameValues);
  } ##FSTMerge## private static List<Header> largeHeaders() {
    String[] nameValues = new String[32];
    char[] chars = new char[512];
    for (int i = 0; i < nameValues.length;) {
      Arrays.fill(chars, (char) i);
      nameValues[i++] = nameValues[i++] = String.valueOf(chars);
    }
    return headerEntries(nameValues);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft16Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static void writeMedium(BufferedSink sink, int i) throws IOException {
    sink.writeByte((i >>> 16) & 0xff);
    sink.writeByte((i >>>  8) & 0xff);
    sink.writeByte( i         & 0xff);
  } ##FSTMerge## private static void writeMedium(BufferedSink sink, int i) throws IOException {
    sink.writeByte((i >>> 16) & 0xff);
    sink.writeByte((i >>>  8) & 0xff);
    sink.writeByte( i         & 0xff);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft16Test.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final Buffer bytesIn = new Buffer(); ##FSTMerge## private final Buffer bytesIn = new Buffer();
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private HpackDraft10.Reader hpackReader; ##FSTMerge## private HpackDraft10.Reader hpackReader;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Buffer bytesOut = new Buffer(); ##FSTMerge## private Buffer bytesOut = new Buffer();
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private HpackDraft10.Writer hpackWriter; ##FSTMerge## private HpackDraft10.Writer hpackWriter;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Before public void reset() {
    hpackReader = newReader(bytesIn);
    hpackWriter = new HpackDraft10.Writer(bytesOut);
  } ##FSTMerge## @Before public void reset() {
    hpackReader = newReader(bytesIn);
    hpackWriter = new HpackDraft10.Writer(bytesOut);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void largeHeaderValue() throws IOException {
    char[] value = new char[4096];
    Arrays.fill(value, '!');
    List<Header> headerBlock = headerEntries("cookie", new String(value));

    hpackWriter.writeHeaders(headerBlock);
    bytesIn.writeAll(bytesOut);
    hpackReader.readHeaders();

    assertEquals(0, hpackReader.headerCount);

    assertEquals(headerBlock, hpackReader.getAndResetHeaderList());
  } ##FSTMerge## @Test public void largeHeaderValue() throws IOException {
    char[] value = new char[4096];
    Arrays.fill(value, '!');
    List<Header> headerBlock = headerEntries("cookie", new String(value));

    hpackWriter.writeHeaders(headerBlock);
    bytesIn.writeAll(bytesOut);
    hpackReader.readHeaders();

    assertEquals(0, hpackReader.headerCount);

    assertEquals(headerBlock, hpackReader.getAndResetHeaderList());
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void tooLargeToHPackIsStillEmitted() throws IOException {
    bytesIn.writeByte(0x00); // Literal indexed
    bytesIn.writeByte(0x0a); // Literal name (len = 10)
    bytesIn.writeUtf8("custom-key");

    bytesIn.writeByte(0x0d); // Literal value (len = 13)
    bytesIn.writeUtf8("custom-header");

    hpackReader.headerTableSizeSetting(1);
    hpackReader.readHeaders();

    assertEquals(0, hpackReader.headerCount);

    assertEquals(headerEntries("custom-key", "custom-header"), hpackReader.getAndResetHeaderList());
  } ##FSTMerge## @Test public void tooLargeToHPackIsStillEmitted() throws IOException {
    bytesIn.writeByte(0x00); // Literal indexed
    bytesIn.writeByte(0x0a); // Literal name (len = 10)
    bytesIn.writeUtf8("custom-key");

    bytesIn.writeByte(0x0d); // Literal value (len = 13)
    bytesIn.writeUtf8("custom-header");

    hpackReader.headerTableSizeSetting(1);
    hpackReader.readHeaders();

    assertEquals(0, hpackReader.headerCount);

    assertEquals(headerEntries("custom-key", "custom-header"), hpackReader.getAndResetHeaderList());
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void testEviction() throws IOException {
    bytesIn.writeByte(0x40); // Literal indexed
    bytesIn.writeByte(0x0a); // Literal name (len = 10)
    bytesIn.writeUtf8("custom-foo");

    bytesIn.writeByte(0x0d); // Literal value (len = 13)
    bytesIn.writeUtf8("custom-header");

    bytesIn.writeByte(0x40); // Literal indexed
    bytesIn.writeByte(0x0a); // Literal name (len = 10)
    bytesIn.writeUtf8("custom-bar");

    bytesIn.writeByte(0x0d); // Literal value (len = 13)
    bytesIn.writeUtf8("custom-header");

    bytesIn.writeByte(0x40); // Literal indexed
    bytesIn.writeByte(0x0a); // Literal name (len = 10)
    bytesIn.writeUtf8("custom-baz");

    bytesIn.writeByte(0x0d); // Literal value (len = 13)
    bytesIn.writeUtf8("custom-header");

    // Set to only support 110 bytes (enough for 2 headers).
    hpackReader.headerTableSizeSetting(110);
    hpackReader.readHeaders();

    assertEquals(2, hpackReader.headerCount);

    Header entry = hpackReader.dynamicTable[headerTableLength() - 1];
    checkEntry(entry, "custom-bar", "custom-header", 55);

    entry = hpackReader.dynamicTable[headerTableLength() - 2];
    checkEntry(entry, "custom-baz", "custom-header", 55);

    // Once a header field is decoded and added to the reconstructed header
    // list, it cannot be removed from it. Hence, foo is here.
    assertEquals(
        headerEntries(
            "custom-foo", "custom-header",
            "custom-bar", "custom-header",
            "custom-baz", "custom-header"),
        hpackReader.getAndResetHeaderList());

    // Simulate receiving a small settings frame, that implies eviction.
    hpackReader.headerTableSizeSetting(55);
    assertEquals(1, hpackReader.headerCount);
  } ##FSTMerge## @Test public void testEviction() throws IOException {
    bytesIn.writeByte(0x40); // Literal indexed
    bytesIn.writeByte(0x0a); // Literal name (len = 10)
    bytesIn.writeUtf8("custom-foo");

    bytesIn.writeByte(0x0d); // Literal value (len = 13)
    bytesIn.writeUtf8("custom-header");

    bytesIn.writeByte(0x40); // Literal indexed
    bytesIn.writeByte(0x0a); // Literal name (len = 10)
    bytesIn.writeUtf8("custom-bar");

    bytesIn.writeByte(0x0d); // Literal value (len = 13)
    bytesIn.writeUtf8("custom-header");

    bytesIn.writeByte(0x40); // Literal indexed
    bytesIn.writeByte(0x0a); // Literal name (len = 10)
    bytesIn.writeUtf8("custom-baz");

    bytesIn.writeByte(0x0d); // Literal value (len = 13)
    bytesIn.writeUtf8("custom-header");

    // Set to only support 110 bytes (enough for 2 headers).
    hpackReader.headerTableSizeSetting(110);
    hpackReader.readHeaders();

    assertEquals(2, hpackReader.headerCount);

    Header entry = hpackReader.dynamicTable[headerTableLength() - 1];
    checkEntry(entry, "custom-bar", "custom-header", 55);

    entry = hpackReader.dynamicTable[headerTableLength() - 2];
    checkEntry(entry, "custom-baz", "custom-header", 55);

    // Once a header field is decoded and added to the reconstructed header
    // list, it cannot be removed from it. Hence, foo is here.
    assertEquals(
        headerEntries(
            "custom-foo", "custom-header",
            "custom-bar", "custom-header",
            "custom-baz", "custom-header"),
        hpackReader.getAndResetHeaderList());

    // Simulate receiving a small settings frame, that implies eviction.
    hpackReader.headerTableSizeSetting(55);
    assertEquals(1, hpackReader.headerCount);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void dynamicallyGrowsBeyond64Entries() throws IOException {
    for (int i = 0; i < 256; i++) {
      bytesIn.writeByte(0x40); // Literal indexed
      bytesIn.writeByte(0x0a); // Literal name (len = 10)
      bytesIn.writeUtf8("custom-foo");

      bytesIn.writeByte(0x0d); // Literal value (len = 13)
      bytesIn.writeUtf8("custom-header");
    }

    hpackReader.headerTableSizeSetting(16384); // Lots of headers need more room!
    hpackReader.readHeaders();

    assertEquals(256, hpackReader.headerCount);
  } ##FSTMerge## @Test public void dynamicallyGrowsBeyond64Entries() throws IOException {
    for (int i = 0; i < 256; i++) {
      bytesIn.writeByte(0x40); // Literal indexed
      bytesIn.writeByte(0x0a); // Literal name (len = 10)
      bytesIn.writeUtf8("custom-foo");

      bytesIn.writeByte(0x0d); // Literal value (len = 13)
      bytesIn.writeUtf8("custom-header");
    }

    hpackReader.headerTableSizeSetting(16384); // Lots of headers need more room!
    hpackReader.readHeaders();

    assertEquals(256, hpackReader.headerCount);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void huffmanDecodingSupported() throws IOException {
    bytesIn.writeByte(0x44); // == Literal indexed ==
                             // Indexed name (idx = 4) -> :path
    bytesIn.writeByte(0x8c); // Literal value Huffman encoded 12 bytes
                             // decodes to www.example.com which is length 15
    bytesIn.write(decodeHex("f1e3c2e5f23a6ba0ab90f4ff"));

    hpackReader.readHeaders();

    assertEquals(1, hpackReader.headerCount);
    assertEquals(52, hpackReader.dynamicTableByteCount);

    Header entry = hpackReader.dynamicTable[headerTableLength() - 1];
    checkEntry(entry, ":path", "www.example.com", 52);
  } ##FSTMerge## @Test public void huffmanDecodingSupported() throws IOException {
    bytesIn.writeByte(0x44); // == Literal indexed ==
                             // Indexed name (idx = 4) -> :path
    bytesIn.writeByte(0x8c); // Literal value Huffman encoded 12 bytes
                             // decodes to www.example.com which is length 15
    bytesIn.write(decodeHex("f1e3c2e5f23a6ba0ab90f4ff"));

    hpackReader.readHeaders();

    assertEquals(1, hpackReader.headerCount);
    assertEquals(52, hpackReader.dynamicTableByteCount);

    Header entry = hpackReader.dynamicTable[headerTableLength() - 1];
    checkEntry(entry, ":path", "www.example.com", 52);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void readLiteralHeaderFieldWithIndexing() throws IOException {
    bytesIn.writeByte(0x40); // Literal indexed
    bytesIn.writeByte(0x0a); // Literal name (len = 10)
    bytesIn.writeUtf8("custom-key");

    bytesIn.writeByte(0x0d); // Literal value (len = 13)
    bytesIn.writeUtf8("custom-header");

    hpackReader.readHeaders();

    assertEquals(1, hpackReader.headerCount);
    assertEquals(55, hpackReader.dynamicTableByteCount);

    Header entry = hpackReader.dynamicTable[headerTableLength() - 1];
    checkEntry(entry, "custom-key", "custom-header", 55);

    assertEquals(headerEntries("custom-key", "custom-header"), hpackReader.getAndResetHeaderList());
  } ##FSTMerge## @Test public void readLiteralHeaderFieldWithIndexing() throws IOException {
    bytesIn.writeByte(0x40); // Literal indexed
    bytesIn.writeByte(0x0a); // Literal name (len = 10)
    bytesIn.writeUtf8("custom-key");

    bytesIn.writeByte(0x0d); // Literal value (len = 13)
    bytesIn.writeUtf8("custom-header");

    hpackReader.readHeaders();

    assertEquals(1, hpackReader.headerCount);
    assertEquals(55, hpackReader.dynamicTableByteCount);

    Header entry = hpackReader.dynamicTable[headerTableLength() - 1];
    checkEntry(entry, "custom-key", "custom-header", 55);

    assertEquals(headerEntries("custom-key", "custom-header"), hpackReader.getAndResetHeaderList());
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void literalHeaderFieldWithoutIndexingIndexedName() throws IOException {
    List<Header> headerBlock = headerEntries(":path", "/sample/path");

    bytesIn.writeByte(0x04); // == Literal not indexed ==
                             // Indexed name (idx = 4) -> :path
    bytesIn.writeByte(0x0c); // Literal value (len = 12)
    bytesIn.writeUtf8("/sample/path");

    hpackWriter.writeHeaders(headerBlock);
    assertEquals(bytesIn, bytesOut);

    hpackReader.readHeaders();

    assertEquals(0, hpackReader.headerCount);

    assertEquals(headerBlock, hpackReader.getAndResetHeaderList());
  } ##FSTMerge## @Test public void literalHeaderFieldWithoutIndexingIndexedName() throws IOException {
    List<Header> headerBlock = headerEntries(":path", "/sample/path");

    bytesIn.writeByte(0x04); // == Literal not indexed ==
                             // Indexed name (idx = 4) -> :path
    bytesIn.writeByte(0x0c); // Literal value (len = 12)
    bytesIn.writeUtf8("/sample/path");

    hpackWriter.writeHeaders(headerBlock);
    assertEquals(bytesIn, bytesOut);

    hpackReader.readHeaders();

    assertEquals(0, hpackReader.headerCount);

    assertEquals(headerBlock, hpackReader.getAndResetHeaderList());
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void literalHeaderFieldWithoutIndexingNewName() throws IOException {
    List<Header> headerBlock = headerEntries("custom-key", "custom-header");

    bytesIn.writeByte(0x00); // Not indexed
    bytesIn.writeByte(0x0a); // Literal name (len = 10)
    bytesIn.writeUtf8("custom-key");

    bytesIn.writeByte(0x0d); // Literal value (len = 13)
    bytesIn.writeUtf8("custom-header");

    hpackWriter.writeHeaders(headerBlock);
    assertEquals(bytesIn, bytesOut);

    hpackReader.readHeaders();

    assertEquals(0, hpackReader.headerCount);

    assertEquals(headerBlock, hpackReader.getAndResetHeaderList());
  } ##FSTMerge## @Test public void literalHeaderFieldWithoutIndexingNewName() throws IOException {
    List<Header> headerBlock = headerEntries("custom-key", "custom-header");

    bytesIn.writeByte(0x00); // Not indexed
    bytesIn.writeByte(0x0a); // Literal name (len = 10)
    bytesIn.writeUtf8("custom-key");

    bytesIn.writeByte(0x0d); // Literal value (len = 13)
    bytesIn.writeUtf8("custom-header");

    hpackWriter.writeHeaders(headerBlock);
    assertEquals(bytesIn, bytesOut);

    hpackReader.readHeaders();

    assertEquals(0, hpackReader.headerCount);

    assertEquals(headerBlock, hpackReader.getAndResetHeaderList());
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void literalHeaderFieldNeverIndexedIndexedName() throws IOException {
    bytesIn.writeByte(0x14); // == Literal never indexed ==
                             // Indexed name (idx = 4) -> :path
    bytesIn.writeByte(0x0c); // Literal value (len = 12)
    bytesIn.writeUtf8("/sample/path");

    hpackReader.readHeaders();

    assertEquals(0, hpackReader.headerCount);

    assertEquals(headerEntries(":path", "/sample/path"), hpackReader.getAndResetHeaderList());
  } ##FSTMerge## @Test public void literalHeaderFieldNeverIndexedIndexedName() throws IOException {
    bytesIn.writeByte(0x14); // == Literal never indexed ==
                             // Indexed name (idx = 4) -> :path
    bytesIn.writeByte(0x0c); // Literal value (len = 12)
    bytesIn.writeUtf8("/sample/path");

    hpackReader.readHeaders();

    assertEquals(0, hpackReader.headerCount);

    assertEquals(headerEntries(":path", "/sample/path"), hpackReader.getAndResetHeaderList());
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void literalHeaderFieldNeverIndexedNewName() throws IOException {
    bytesIn.writeByte(0x10); // Never indexed
    bytesIn.writeByte(0x0a); // Literal name (len = 10)
    bytesIn.writeUtf8("custom-key");

    bytesIn.writeByte(0x0d); // Literal value (len = 13)
    bytesIn.writeUtf8("custom-header");

    hpackReader.readHeaders();

    assertEquals(0, hpackReader.headerCount);

    assertEquals(headerEntries("custom-key", "custom-header"), hpackReader.getAndResetHeaderList());
  } ##FSTMerge## @Test public void literalHeaderFieldNeverIndexedNewName() throws IOException {
    bytesIn.writeByte(0x10); // Never indexed
    bytesIn.writeByte(0x0a); // Literal name (len = 10)
    bytesIn.writeUtf8("custom-key");

    bytesIn.writeByte(0x0d); // Literal value (len = 13)
    bytesIn.writeUtf8("custom-header");

    hpackReader.readHeaders();

    assertEquals(0, hpackReader.headerCount);

    assertEquals(headerEntries("custom-key", "custom-header"), hpackReader.getAndResetHeaderList());
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void staticHeaderIsNotCopiedIntoTheIndexedTable() throws IOException {
    bytesIn.writeByte(0x82); // == Indexed - Add ==
                             // idx = 2 -> :method: GET

    hpackReader.readHeaders();

    assertEquals(0, hpackReader.headerCount);
    assertEquals(0, hpackReader.dynamicTableByteCount);

    assertEquals(null, hpackReader.dynamicTable[headerTableLength() - 1]);

    assertEquals(headerEntries(":method", "GET"), hpackReader.getAndResetHeaderList());
  } ##FSTMerge## @Test public void staticHeaderIsNotCopiedIntoTheIndexedTable() throws IOException {
    bytesIn.writeByte(0x82); // == Indexed - Add ==
                             // idx = 2 -> :method: GET

    hpackReader.readHeaders();

    assertEquals(0, hpackReader.headerCount);
    assertEquals(0, hpackReader.dynamicTableByteCount);

    assertEquals(null, hpackReader.dynamicTable[headerTableLength() - 1]);

    assertEquals(headerEntries(":method", "GET"), hpackReader.getAndResetHeaderList());
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void readIndexedHeaderFieldIndex0() throws IOException {
    bytesIn.writeByte(0x80); // == Indexed - Add idx = 0

    try {
      hpackReader.readHeaders();
      fail();
    } catch (IOException e) {
      assertEquals("index == 0", e.getMessage());
    }
  } ##FSTMerge## @Test public void readIndexedHeaderFieldIndex0() throws IOException {
    bytesIn.writeByte(0x80); // == Indexed - Add idx = 0

    try {
      hpackReader.readHeaders();
      fail();
    } catch (IOException e) {
      assertEquals("index == 0", e.getMessage());
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void readIndexedHeaderFieldTooLargeIndex() throws IOException {
    bytesIn.writeShort(0xff00); // == Indexed - Add idx = 127

    try {
      hpackReader.readHeaders();
      fail();
    } catch (IOException e) {
      assertEquals("Header index too large 127", e.getMessage());
    }
  } ##FSTMerge## @Test public void readIndexedHeaderFieldTooLargeIndex() throws IOException {
    bytesIn.writeShort(0xff00); // == Indexed - Add idx = 127

    try {
      hpackReader.readHeaders();
      fail();
    } catch (IOException e) {
      assertEquals("Header index too large 127", e.getMessage());
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void readIndexedHeaderFieldInsidiousIndex() throws IOException {
    bytesIn.writeByte(0xff); // == Indexed - Add ==
    bytesIn.write(decodeHex("8080808008")); // idx = -2147483521

    try {
      hpackReader.readHeaders();
      fail();
    } catch (IOException e) {
      assertEquals("Header index too large -2147483521", e.getMessage());
    }
  } ##FSTMerge## @Test public void readIndexedHeaderFieldInsidiousIndex() throws IOException {
    bytesIn.writeByte(0xff); // == Indexed - Add ==
    bytesIn.write(decodeHex("8080808008")); // idx = -2147483521

    try {
      hpackReader.readHeaders();
      fail();
    } catch (IOException e) {
      assertEquals("Header index too large -2147483521", e.getMessage());
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void minMaxHeaderTableSize() throws IOException {
    bytesIn.writeByte(0x20);
    hpackReader.readHeaders();

    assertEquals(0, hpackReader.maxDynamicTableByteCount());

    bytesIn.writeByte(0x3f); // encode size 4096
    bytesIn.writeByte(0xe1);
    bytesIn.writeByte(0x1f);
    hpackReader.readHeaders();

    assertEquals(4096, hpackReader.maxDynamicTableByteCount());
  } ##FSTMerge## @Test public void minMaxHeaderTableSize() throws IOException {
    bytesIn.writeByte(0x20);
    hpackReader.readHeaders();

    assertEquals(0, hpackReader.maxDynamicTableByteCount());

    bytesIn.writeByte(0x3f); // encode size 4096
    bytesIn.writeByte(0xe1);
    bytesIn.writeByte(0x1f);
    hpackReader.readHeaders();

    assertEquals(4096, hpackReader.maxDynamicTableByteCount());
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void cannotSetTableSizeLargerThanSettingsValue() throws IOException {
    bytesIn.writeByte(0x3f); // encode size 4097
    bytesIn.writeByte(0xe2);
    bytesIn.writeByte(0x1f);

    try {
      hpackReader.readHeaders();
      fail();
    } catch (IOException e) {
      assertEquals("Invalid dynamic table size update 4097", e.getMessage());
    }
  } ##FSTMerge## @Test public void cannotSetTableSizeLargerThanSettingsValue() throws IOException {
    bytesIn.writeByte(0x3f); // encode size 4097
    bytesIn.writeByte(0xe2);
    bytesIn.writeByte(0x1f);

    try {
      hpackReader.readHeaders();
      fail();
    } catch (IOException e) {
      assertEquals("Invalid dynamic table size update 4097", e.getMessage());
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void readHeaderTableStateChangeInsidiousMaxHeaderByteCount() throws IOException {
    bytesIn.writeByte(0x3f);
    bytesIn.write(decodeHex("e1ffffff07")); // count = -2147483648

    try {
      hpackReader.readHeaders();
      fail();
    } catch (IOException e) {
      assertEquals("Invalid dynamic table size update -2147483648", e.getMessage());
    }
  } ##FSTMerge## @Test public void readHeaderTableStateChangeInsidiousMaxHeaderByteCount() throws IOException {
    bytesIn.writeByte(0x3f);
    bytesIn.write(decodeHex("e1ffffff07")); // count = -2147483648

    try {
      hpackReader.readHeaders();
      fail();
    } catch (IOException e) {
      assertEquals("Invalid dynamic table size update -2147483648", e.getMessage());
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void readIndexedHeaderFieldFromStaticTableWithoutBuffering() throws IOException {
    bytesIn.writeByte(0x82); // == Indexed - Add ==
                             // idx = 2 -> :method: GET

    hpackReader.headerTableSizeSetting(0); // SETTINGS_HEADER_TABLE_SIZE == 0
    hpackReader.readHeaders();

    // Not buffered in header table.
    assertEquals(0, hpackReader.headerCount);

    assertEquals(headerEntries(":method", "GET"), hpackReader.getAndResetHeaderList());
  } ##FSTMerge## @Test public void readIndexedHeaderFieldFromStaticTableWithoutBuffering() throws IOException {
    bytesIn.writeByte(0x82); // == Indexed - Add ==
                             // idx = 2 -> :method: GET

    hpackReader.headerTableSizeSetting(0); // SETTINGS_HEADER_TABLE_SIZE == 0
    hpackReader.readHeaders();

    // Not buffered in header table.
    assertEquals(0, hpackReader.headerCount);

    assertEquals(headerEntries(":method", "GET"), hpackReader.getAndResetHeaderList());
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void readRequestExamplesWithoutHuffman() throws IOException {
    firstRequestWithoutHuffman();
    hpackReader.readHeaders();
    checkReadFirstRequestWithoutHuffman();

    secondRequestWithoutHuffman();
    hpackReader.readHeaders();
    checkReadSecondRequestWithoutHuffman();

    thirdRequestWithoutHuffman();
    hpackReader.readHeaders();
    checkReadThirdRequestWithoutHuffman();
  } ##FSTMerge## @Test public void readRequestExamplesWithoutHuffman() throws IOException {
    firstRequestWithoutHuffman();
    hpackReader.readHeaders();
    checkReadFirstRequestWithoutHuffman();

    secondRequestWithoutHuffman();
    hpackReader.readHeaders();
    checkReadSecondRequestWithoutHuffman();

    thirdRequestWithoutHuffman();
    hpackReader.readHeaders();
    checkReadThirdRequestWithoutHuffman();
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void firstRequestWithoutHuffman() {
    bytesIn.writeByte(0x82); // == Indexed - Add ==
                             // idx = 2 -> :method: GET
    bytesIn.writeByte(0x86); // == Indexed - Add ==
                             // idx = 7 -> :scheme: http
    bytesIn.writeByte(0x84); // == Indexed - Add ==
                             // idx = 6 -> :path: /
    bytesIn.writeByte(0x41); // == Literal indexed ==
                             // Indexed name (idx = 4) -> :authority
    bytesIn.writeByte(0x0f); // Literal value (len = 15)
    bytesIn.writeUtf8("www.example.com");
  } ##FSTMerge## private void firstRequestWithoutHuffman() {
    bytesIn.writeByte(0x82); // == Indexed - Add ==
                             // idx = 2 -> :method: GET
    bytesIn.writeByte(0x86); // == Indexed - Add ==
                             // idx = 7 -> :scheme: http
    bytesIn.writeByte(0x84); // == Indexed - Add ==
                             // idx = 6 -> :path: /
    bytesIn.writeByte(0x41); // == Literal indexed ==
                             // Indexed name (idx = 4) -> :authority
    bytesIn.writeByte(0x0f); // Literal value (len = 15)
    bytesIn.writeUtf8("www.example.com");
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void checkReadFirstRequestWithoutHuffman() {
    assertEquals(1, hpackReader.headerCount);

    // [  1] (s =  57) :authority: www.example.com
    Header entry = hpackReader.dynamicTable[headerTableLength() - 1];
    checkEntry(entry, ":authority", "www.example.com", 57);

    // Table size: 57
    assertEquals(57, hpackReader.dynamicTableByteCount);

    // Decoded header list:
    assertEquals(headerEntries(
        ":method", "GET",
        ":scheme", "http",
        ":path", "/",
        ":authority", "www.example.com"), hpackReader.getAndResetHeaderList());
  } ##FSTMerge## private void checkReadFirstRequestWithoutHuffman() {
    assertEquals(1, hpackReader.headerCount);

    // [  1] (s =  57) :authority: www.example.com
    Header entry = hpackReader.dynamicTable[headerTableLength() - 1];
    checkEntry(entry, ":authority", "www.example.com", 57);

    // Table size: 57
    assertEquals(57, hpackReader.dynamicTableByteCount);

    // Decoded header list:
    assertEquals(headerEntries(
        ":method", "GET",
        ":scheme", "http",
        ":path", "/",
        ":authority", "www.example.com"), hpackReader.getAndResetHeaderList());
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void secondRequestWithoutHuffman() {
    bytesIn.writeByte(0x82); // == Indexed - Add ==
                             // idx = 2 -> :method: GET
    bytesIn.writeByte(0x86); // == Indexed - Add ==
                             // idx = 7 -> :scheme: http
    bytesIn.writeByte(0x84); // == Indexed - Add ==
                             // idx = 6 -> :path: /
    bytesIn.writeByte(0xbe); // == Indexed - Add ==
                             // Indexed name (idx = 62) -> :authority: www.example.com
    bytesIn.writeByte(0x58); // == Literal indexed ==
                             // Indexed name (idx = 24) -> cache-control
    bytesIn.writeByte(0x08); // Literal value (len = 8)
    bytesIn.writeUtf8("no-cache");
  } ##FSTMerge## private void secondRequestWithoutHuffman() {
    bytesIn.writeByte(0x82); // == Indexed - Add ==
                             // idx = 2 -> :method: GET
    bytesIn.writeByte(0x86); // == Indexed - Add ==
                             // idx = 7 -> :scheme: http
    bytesIn.writeByte(0x84); // == Indexed - Add ==
                             // idx = 6 -> :path: /
    bytesIn.writeByte(0xbe); // == Indexed - Add ==
                             // Indexed name (idx = 62) -> :authority: www.example.com
    bytesIn.writeByte(0x58); // == Literal indexed ==
                             // Indexed name (idx = 24) -> cache-control
    bytesIn.writeByte(0x08); // Literal value (len = 8)
    bytesIn.writeUtf8("no-cache");
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void checkReadSecondRequestWithoutHuffman() {
    assertEquals(2, hpackReader.headerCount);

    // [  1] (s =  53) cache-control: no-cache
    Header entry = hpackReader.dynamicTable[headerTableLength() - 2];
    checkEntry(entry, "cache-control", "no-cache", 53);

    // [  2] (s =  57) :authority: www.example.com
    entry = hpackReader.dynamicTable[headerTableLength() - 1];
    checkEntry(entry, ":authority", "www.example.com", 57);

    // Table size: 110
    assertEquals(110, hpackReader.dynamicTableByteCount);

    // Decoded header list:
    assertEquals(headerEntries(
        ":method", "GET",
        ":scheme", "http",
        ":path", "/",
        ":authority", "www.example.com",
        "cache-control", "no-cache"), hpackReader.getAndResetHeaderList());
  } ##FSTMerge## private void checkReadSecondRequestWithoutHuffman() {
    assertEquals(2, hpackReader.headerCount);

    // [  1] (s =  53) cache-control: no-cache
    Header entry = hpackReader.dynamicTable[headerTableLength() - 2];
    checkEntry(entry, "cache-control", "no-cache", 53);

    // [  2] (s =  57) :authority: www.example.com
    entry = hpackReader.dynamicTable[headerTableLength() - 1];
    checkEntry(entry, ":authority", "www.example.com", 57);

    // Table size: 110
    assertEquals(110, hpackReader.dynamicTableByteCount);

    // Decoded header list:
    assertEquals(headerEntries(
        ":method", "GET",
        ":scheme", "http",
        ":path", "/",
        ":authority", "www.example.com",
        "cache-control", "no-cache"), hpackReader.getAndResetHeaderList());
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void thirdRequestWithoutHuffman() {
    bytesIn.writeByte(0x82); // == Indexed - Add ==
                             // idx = 2 -> :method: GET
    bytesIn.writeByte(0x87); // == Indexed - Add ==
                             // idx = 7 -> :scheme: http
    bytesIn.writeByte(0x85); // == Indexed - Add ==
                             // idx = 5 -> :path: /index.html
    bytesIn.writeByte(0xbf); // == Indexed - Add ==
                             // Indexed name (idx = 63) -> :authority: www.example.com
    bytesIn.writeByte(0x40); // Literal indexed
    bytesIn.writeByte(0x0a); // Literal name (len = 10)
    bytesIn.writeUtf8("custom-key");
    bytesIn.writeByte(0x0c); // Literal value (len = 12)
    bytesIn.writeUtf8("custom-value");
  } ##FSTMerge## private void thirdRequestWithoutHuffman() {
    bytesIn.writeByte(0x82); // == Indexed - Add ==
                             // idx = 2 -> :method: GET
    bytesIn.writeByte(0x87); // == Indexed - Add ==
                             // idx = 7 -> :scheme: http
    bytesIn.writeByte(0x85); // == Indexed - Add ==
                             // idx = 5 -> :path: /index.html
    bytesIn.writeByte(0xbf); // == Indexed - Add ==
                             // Indexed name (idx = 63) -> :authority: www.example.com
    bytesIn.writeByte(0x40); // Literal indexed
    bytesIn.writeByte(0x0a); // Literal name (len = 10)
    bytesIn.writeUtf8("custom-key");
    bytesIn.writeByte(0x0c); // Literal value (len = 12)
    bytesIn.writeUtf8("custom-value");
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void checkReadThirdRequestWithoutHuffman() {
    assertEquals(3, hpackReader.headerCount);

    // [  1] (s =  54) custom-key: custom-value
    Header entry = hpackReader.dynamicTable[headerTableLength() - 3];
    checkEntry(entry, "custom-key", "custom-value", 54);

    // [  2] (s =  53) cache-control: no-cache
    entry = hpackReader.dynamicTable[headerTableLength() - 2];
    checkEntry(entry, "cache-control", "no-cache", 53);

    // [  3] (s =  57) :authority: www.example.com
    entry = hpackReader.dynamicTable[headerTableLength() - 1];
    checkEntry(entry, ":authority", "www.example.com", 57);

    // Table size: 164
    assertEquals(164, hpackReader.dynamicTableByteCount);

    // Decoded header list:
    assertEquals(headerEntries(
        ":method", "GET",
        ":scheme", "https",
        ":path", "/index.html",
        ":authority", "www.example.com",
        "custom-key", "custom-value"), hpackReader.getAndResetHeaderList());
  } ##FSTMerge## private void checkReadThirdRequestWithoutHuffman() {
    assertEquals(3, hpackReader.headerCount);

    // [  1] (s =  54) custom-key: custom-value
    Header entry = hpackReader.dynamicTable[headerTableLength() - 3];
    checkEntry(entry, "custom-key", "custom-value", 54);

    // [  2] (s =  53) cache-control: no-cache
    entry = hpackReader.dynamicTable[headerTableLength() - 2];
    checkEntry(entry, "cache-control", "no-cache", 53);

    // [  3] (s =  57) :authority: www.example.com
    entry = hpackReader.dynamicTable[headerTableLength() - 1];
    checkEntry(entry, ":authority", "www.example.com", 57);

    // Table size: 164
    assertEquals(164, hpackReader.dynamicTableByteCount);

    // Decoded header list:
    assertEquals(headerEntries(
        ":method", "GET",
        ":scheme", "https",
        ":path", "/index.html",
        ":authority", "www.example.com",
        "custom-key", "custom-value"), hpackReader.getAndResetHeaderList());
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void readRequestExamplesWithHuffman() throws IOException {
    firstRequestWithHuffman();
    hpackReader.readHeaders();
    checkReadFirstRequestWithHuffman();

    secondRequestWithHuffman();
    hpackReader.readHeaders();
    checkReadSecondRequestWithHuffman();

    thirdRequestWithHuffman();
    hpackReader.readHeaders();
    checkReadThirdRequestWithHuffman();
  } ##FSTMerge## @Test public void readRequestExamplesWithHuffman() throws IOException {
    firstRequestWithHuffman();
    hpackReader.readHeaders();
    checkReadFirstRequestWithHuffman();

    secondRequestWithHuffman();
    hpackReader.readHeaders();
    checkReadSecondRequestWithHuffman();

    thirdRequestWithHuffman();
    hpackReader.readHeaders();
    checkReadThirdRequestWithHuffman();
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void firstRequestWithHuffman() {
    bytesIn.writeByte(0x82); // == Indexed - Add ==
                             // idx = 2 -> :method: GET
    bytesIn.writeByte(0x86); // == Indexed - Add ==
                             // idx = 6 -> :scheme: http
    bytesIn.writeByte(0x84); // == Indexed - Add ==
                             // idx = 4 -> :path: /
    bytesIn.writeByte(0x41); // == Literal indexed ==
                             // Indexed name (idx = 1) -> :authority
    bytesIn.writeByte(0x8c); // Literal value Huffman encoded 12 bytes
                             // decodes to www.example.com which is length 15
    bytesIn.write(decodeHex("f1e3c2e5f23a6ba0ab90f4ff"));
  } ##FSTMerge## private void firstRequestWithHuffman() {
    bytesIn.writeByte(0x82); // == Indexed - Add ==
                             // idx = 2 -> :method: GET
    bytesIn.writeByte(0x86); // == Indexed - Add ==
                             // idx = 6 -> :scheme: http
    bytesIn.writeByte(0x84); // == Indexed - Add ==
                             // idx = 4 -> :path: /
    bytesIn.writeByte(0x41); // == Literal indexed ==
                             // Indexed name (idx = 1) -> :authority
    bytesIn.writeByte(0x8c); // Literal value Huffman encoded 12 bytes
                             // decodes to www.example.com which is length 15
    bytesIn.write(decodeHex("f1e3c2e5f23a6ba0ab90f4ff"));
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void checkReadFirstRequestWithHuffman() {
    assertEquals(1, hpackReader.headerCount);

    // [  1] (s =  57) :authority: www.example.com
    Header entry = hpackReader.dynamicTable[headerTableLength() - 1];
    checkEntry(entry, ":authority", "www.example.com", 57);

    // Table size: 57
    assertEquals(57, hpackReader.dynamicTableByteCount);

    // Decoded header list:
    assertEquals(headerEntries(
        ":method", "GET",
        ":scheme", "http",
        ":path", "/",
        ":authority", "www.example.com"), hpackReader.getAndResetHeaderList());
  } ##FSTMerge## private void checkReadFirstRequestWithHuffman() {
    assertEquals(1, hpackReader.headerCount);

    // [  1] (s =  57) :authority: www.example.com
    Header entry = hpackReader.dynamicTable[headerTableLength() - 1];
    checkEntry(entry, ":authority", "www.example.com", 57);

    // Table size: 57
    assertEquals(57, hpackReader.dynamicTableByteCount);

    // Decoded header list:
    assertEquals(headerEntries(
        ":method", "GET",
        ":scheme", "http",
        ":path", "/",
        ":authority", "www.example.com"), hpackReader.getAndResetHeaderList());
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void secondRequestWithHuffman() {
    bytesIn.writeByte(0x82); // == Indexed - Add ==
                             // idx = 2 -> :method: GET
    bytesIn.writeByte(0x86); // == Indexed - Add ==
                             // idx = 6 -> :scheme: http
    bytesIn.writeByte(0x84); // == Indexed - Add ==
                             // idx = 4 -> :path: /
    bytesIn.writeByte(0xbe); // == Indexed - Add ==
                             // idx = 62 -> :authority: www.example.com
    bytesIn.writeByte(0x58); // == Literal indexed ==
                             // Indexed name (idx = 24) -> cache-control
    bytesIn.writeByte(0x86); // Literal value Huffman encoded 6 bytes
                             // decodes to no-cache which is length 8
    bytesIn.write(decodeHex("a8eb10649cbf"));
  } ##FSTMerge## private void secondRequestWithHuffman() {
    bytesIn.writeByte(0x82); // == Indexed - Add ==
                             // idx = 2 -> :method: GET
    bytesIn.writeByte(0x86); // == Indexed - Add ==
                             // idx = 6 -> :scheme: http
    bytesIn.writeByte(0x84); // == Indexed - Add ==
                             // idx = 4 -> :path: /
    bytesIn.writeByte(0xbe); // == Indexed - Add ==
                             // idx = 62 -> :authority: www.example.com
    bytesIn.writeByte(0x58); // == Literal indexed ==
                             // Indexed name (idx = 24) -> cache-control
    bytesIn.writeByte(0x86); // Literal value Huffman encoded 6 bytes
                             // decodes to no-cache which is length 8
    bytesIn.write(decodeHex("a8eb10649cbf"));
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void checkReadSecondRequestWithHuffman() {
    assertEquals(2, hpackReader.headerCount);

    // [  1] (s =  53) cache-control: no-cache
    Header entry = hpackReader.dynamicTable[headerTableLength() - 2];
    checkEntry(entry, "cache-control", "no-cache", 53);

    // [  2] (s =  57) :authority: www.example.com
    entry = hpackReader.dynamicTable[headerTableLength() - 1];
    checkEntry(entry, ":authority", "www.example.com", 57);

    // Table size: 110
    assertEquals(110, hpackReader.dynamicTableByteCount);

    // Decoded header list:
    assertEquals(headerEntries(
        ":method", "GET",
        ":scheme", "http",
        ":path", "/",
        ":authority", "www.example.com",
        "cache-control", "no-cache"), hpackReader.getAndResetHeaderList());
  } ##FSTMerge## private void checkReadSecondRequestWithHuffman() {
    assertEquals(2, hpackReader.headerCount);

    // [  1] (s =  53) cache-control: no-cache
    Header entry = hpackReader.dynamicTable[headerTableLength() - 2];
    checkEntry(entry, "cache-control", "no-cache", 53);

    // [  2] (s =  57) :authority: www.example.com
    entry = hpackReader.dynamicTable[headerTableLength() - 1];
    checkEntry(entry, ":authority", "www.example.com", 57);

    // Table size: 110
    assertEquals(110, hpackReader.dynamicTableByteCount);

    // Decoded header list:
    assertEquals(headerEntries(
        ":method", "GET",
        ":scheme", "http",
        ":path", "/",
        ":authority", "www.example.com",
        "cache-control", "no-cache"), hpackReader.getAndResetHeaderList());
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void thirdRequestWithHuffman() {
    bytesIn.writeByte(0x82); // == Indexed - Add ==
                             // idx = 2 -> :method: GET
    bytesIn.writeByte(0x87); // == Indexed - Add ==
                             // idx = 7 -> :scheme: https
    bytesIn.writeByte(0x85); // == Indexed - Add ==
                             // idx = 5 -> :path: /index.html
    bytesIn.writeByte(0xbf); // == Indexed - Add ==
                             // idx = 63 -> :authority: www.example.com
    bytesIn.writeByte(0x40); // Literal indexed
    bytesIn.writeByte(0x88); // Literal name Huffman encoded 8 bytes
                             // decodes to custom-key which is length 10
    bytesIn.write(decodeHex("25a849e95ba97d7f"));
    bytesIn.writeByte(0x89); // Literal value Huffman encoded 9 bytes
                             // decodes to custom-value which is length 12
    bytesIn.write(decodeHex("25a849e95bb8e8b4bf"));
  } ##FSTMerge## private void thirdRequestWithHuffman() {
    bytesIn.writeByte(0x82); // == Indexed - Add ==
                             // idx = 2 -> :method: GET
    bytesIn.writeByte(0x87); // == Indexed - Add ==
                             // idx = 7 -> :scheme: https
    bytesIn.writeByte(0x85); // == Indexed - Add ==
                             // idx = 5 -> :path: /index.html
    bytesIn.writeByte(0xbf); // == Indexed - Add ==
                             // idx = 63 -> :authority: www.example.com
    bytesIn.writeByte(0x40); // Literal indexed
    bytesIn.writeByte(0x88); // Literal name Huffman encoded 8 bytes
                             // decodes to custom-key which is length 10
    bytesIn.write(decodeHex("25a849e95ba97d7f"));
    bytesIn.writeByte(0x89); // Literal value Huffman encoded 9 bytes
                             // decodes to custom-value which is length 12
    bytesIn.write(decodeHex("25a849e95bb8e8b4bf"));
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void checkReadThirdRequestWithHuffman() {
    assertEquals(3, hpackReader.headerCount);

    // [  1] (s =  54) custom-key: custom-value
    Header entry = hpackReader.dynamicTable[headerTableLength() - 3];
    checkEntry(entry, "custom-key", "custom-value", 54);

    // [  2] (s =  53) cache-control: no-cache
    entry = hpackReader.dynamicTable[headerTableLength() - 2];
    checkEntry(entry, "cache-control", "no-cache", 53);

    // [  3] (s =  57) :authority: www.example.com
    entry = hpackReader.dynamicTable[headerTableLength() - 1];
    checkEntry(entry, ":authority", "www.example.com", 57);

    // Table size: 164
    assertEquals(164, hpackReader.dynamicTableByteCount);

    // Decoded header list:
    assertEquals(headerEntries(
        ":method", "GET",
        ":scheme", "https",
        ":path", "/index.html",
        ":authority", "www.example.com",
        "custom-key", "custom-value"), hpackReader.getAndResetHeaderList());
  } ##FSTMerge## private void checkReadThirdRequestWithHuffman() {
    assertEquals(3, hpackReader.headerCount);

    // [  1] (s =  54) custom-key: custom-value
    Header entry = hpackReader.dynamicTable[headerTableLength() - 3];
    checkEntry(entry, "custom-key", "custom-value", 54);

    // [  2] (s =  53) cache-control: no-cache
    entry = hpackReader.dynamicTable[headerTableLength() - 2];
    checkEntry(entry, "cache-control", "no-cache", 53);

    // [  3] (s =  57) :authority: www.example.com
    entry = hpackReader.dynamicTable[headerTableLength() - 1];
    checkEntry(entry, ":authority", "www.example.com", 57);

    // Table size: 164
    assertEquals(164, hpackReader.dynamicTableByteCount);

    // Decoded header list:
    assertEquals(headerEntries(
        ":method", "GET",
        ":scheme", "https",
        ":path", "/index.html",
        ":authority", "www.example.com",
        "custom-key", "custom-value"), hpackReader.getAndResetHeaderList());
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void readSingleByteInt() throws IOException {
    assertEquals(10, newReader(byteStream()).readInt(10, 31));
    assertEquals(10, newReader(byteStream()).readInt(0xe0 | 10, 31));
  } ##FSTMerge## @Test public void readSingleByteInt() throws IOException {
    assertEquals(10, newReader(byteStream()).readInt(10, 31));
    assertEquals(10, newReader(byteStream()).readInt(0xe0 | 10, 31));
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void readMultibyteInt() throws IOException {
    assertEquals(1337, newReader(byteStream(154, 10)).readInt(31, 31));
  } ##FSTMerge## @Test public void readMultibyteInt() throws IOException {
    assertEquals(1337, newReader(byteStream(154, 10)).readInt(31, 31));
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void writeSingleByteInt() throws IOException {
    hpackWriter.writeInt(10, 31, 0);
    assertBytes(10);
    hpackWriter.writeInt(10, 31, 0xe0);
    assertBytes(0xe0 | 10);
  } ##FSTMerge## @Test public void writeSingleByteInt() throws IOException {
    hpackWriter.writeInt(10, 31, 0);
    assertBytes(10);
    hpackWriter.writeInt(10, 31, 0xe0);
    assertBytes(0xe0 | 10);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void writeMultibyteInt() throws IOException {
    hpackWriter.writeInt(1337, 31, 0);
    assertBytes(31, 154, 10);
    hpackWriter.writeInt(1337, 31, 0xe0);
    assertBytes(0xe0 | 31, 154, 10);
  } ##FSTMerge## @Test public void writeMultibyteInt() throws IOException {
    hpackWriter.writeInt(1337, 31, 0);
    assertBytes(31, 154, 10);
    hpackWriter.writeInt(1337, 31, 0xe0);
    assertBytes(0xe0 | 31, 154, 10);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void max31BitValue() throws IOException {
    hpackWriter.writeInt(0x7fffffff, 31, 0);
    assertBytes(31, 224, 255, 255, 255, 7);
    assertEquals(0x7fffffff,
        newReader(byteStream(224, 255, 255, 255, 7)).readInt(31, 31));
  } ##FSTMerge## @Test public void max31BitValue() throws IOException {
    hpackWriter.writeInt(0x7fffffff, 31, 0);
    assertBytes(31, 224, 255, 255, 255, 7);
    assertEquals(0x7fffffff,
        newReader(byteStream(224, 255, 255, 255, 7)).readInt(31, 31));
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void prefixMask() throws IOException {
    hpackWriter.writeInt(31, 31, 0);
    assertBytes(31, 0);
    assertEquals(31, newReader(byteStream(0)).readInt(31, 31));
  } ##FSTMerge## @Test public void prefixMask() throws IOException {
    hpackWriter.writeInt(31, 31, 0);
    assertBytes(31, 0);
    assertEquals(31, newReader(byteStream(0)).readInt(31, 31));
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void prefixMaskMinusOne() throws IOException {
    hpackWriter.writeInt(30, 31, 0);
    assertBytes(30);
    assertEquals(31, newReader(byteStream(0)).readInt(31, 31));
  } ##FSTMerge## @Test public void prefixMaskMinusOne() throws IOException {
    hpackWriter.writeInt(30, 31, 0);
    assertBytes(30);
    assertEquals(31, newReader(byteStream(0)).readInt(31, 31));
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void zero() throws IOException {
    hpackWriter.writeInt(0, 31, 0);
    assertBytes(0);
    assertEquals(0, newReader(byteStream()).readInt(0, 31));
  } ##FSTMerge## @Test public void zero() throws IOException {
    hpackWriter.writeInt(0, 31, 0);
    assertBytes(0);
    assertEquals(0, newReader(byteStream()).readInt(0, 31));
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void lowercaseHeaderNameBeforeEmit() throws IOException {
    hpackWriter.writeHeaders(Arrays.asList(new Header("FoO", "BaR")));
    assertBytes(0, 3, 'f', 'o', 'o', 3, 'B', 'a', 'R');
  } ##FSTMerge## @Test public void lowercaseHeaderNameBeforeEmit() throws IOException {
    hpackWriter.writeHeaders(Arrays.asList(new Header("FoO", "BaR")));
    assertBytes(0, 3, 'f', 'o', 'o', 3, 'B', 'a', 'R');
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void mixedCaseHeaderNameIsMalformed() throws IOException {
    try {
      newReader(byteStream(0, 3, 'F', 'o', 'o', 3, 'B', 'a', 'R')).readHeaders();
      fail();
    } catch (IOException e) {
      assertEquals("PROTOCOL_ERROR response malformed: mixed case name: Foo", e.getMessage());
    }
  } ##FSTMerge## @Test public void mixedCaseHeaderNameIsMalformed() throws IOException {
    try {
      newReader(byteStream(0, 3, 'F', 'o', 'o', 3, 'B', 'a', 'R')).readHeaders();
      fail();
    } catch (IOException e) {
      assertEquals("PROTOCOL_ERROR response malformed: mixed case name: Foo", e.getMessage());
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void emptyHeaderName() throws IOException {
    hpackWriter.writeByteString(ByteString.encodeUtf8(""));
    assertBytes(0);
    assertEquals(ByteString.EMPTY, newReader(byteStream(0)).readByteString());
  } ##FSTMerge## @Test public void emptyHeaderName() throws IOException {
    hpackWriter.writeByteString(ByteString.encodeUtf8(""));
    assertBytes(0);
    assertEquals(ByteString.EMPTY, newReader(byteStream(0)).readByteString());
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private HpackDraft10.Reader newReader(Buffer source) {
    return new HpackDraft10.Reader(4096, source);
  } ##FSTMerge## private HpackDraft10.Reader newReader(Buffer source) {
    return new HpackDraft10.Reader(4096, source);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Buffer byteStream(int... bytes) {
    return new Buffer().write(intArrayToByteArray(bytes));
  } ##FSTMerge## private Buffer byteStream(int... bytes) {
    return new Buffer().write(intArrayToByteArray(bytes));
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void checkEntry(Header entry, String name, String value, int size) {
    assertEquals(name, entry.name.utf8());
    assertEquals(value, entry.value.utf8());
    assertEquals(size, entry.hpackSize);
  } ##FSTMerge## private void checkEntry(Header entry, String name, String value, int size) {
    assertEquals(name, entry.name.utf8());
    assertEquals(value, entry.value.utf8());
    assertEquals(size, entry.hpackSize);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void assertBytes(int... bytes) throws IOException {
    ByteString expected = intArrayToByteArray(bytes);
    ByteString actual = bytesOut.readByteString();
    assertEquals(expected, actual);
  } ##FSTMerge## private void assertBytes(int... bytes) throws IOException {
    ByteString expected = intArrayToByteArray(bytes);
    ByteString actual = bytesOut.readByteString();
    assertEquals(expected, actual);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private ByteString intArrayToByteArray(int[] bytes) {
    byte[] data = new byte[bytes.length];
    for (int i = 0; i < bytes.length; i++) {
      data[i] = (byte) bytes[i];
    }
    return ByteString.of(data);
  } ##FSTMerge## private ByteString intArrayToByteArray(int[] bytes) {
    byte[] data = new byte[bytes.length];
    for (int i = 0; i < bytes.length; i++) {
      data[i] = (byte) bytes[i];
    }
    return ByteString.of(data);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private int headerTableLength() {
    return hpackReader.dynamicTable.length;
  } ##FSTMerge## private int headerTableLength() {
    return hpackReader.dynamicTable.length;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft10Test.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements FrameReader.Handler ##FSTMerge## implements FrameReader.Handler
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/BaseTestHandler.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public void data(boolean inFinished, int streamId, BufferedSource source, int length)
      throws IOException {
    fail();
  } ##FSTMerge## @Override public void data(boolean inFinished, int streamId, BufferedSource source, int length)
      throws IOException {
    fail();
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/BaseTestHandler.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
  public void headers(boolean outFinished, boolean inFinished, int streamId, int associatedStreamId,
      List<Header> headerBlock, HeadersMode headersMode) {
    fail();
  } ##FSTMerge## @Override
  public void headers(boolean outFinished, boolean inFinished, int streamId, int associatedStreamId,
      List<Header> headerBlock, HeadersMode headersMode) {
    fail();
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/BaseTestHandler.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public void rstStream(int streamId, ErrorCode errorCode) {
    fail();
  } ##FSTMerge## @Override public void rstStream(int streamId, ErrorCode errorCode) {
    fail();
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/BaseTestHandler.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public void settings(boolean clearPrevious, Settings settings) {
    fail();
  } ##FSTMerge## @Override public void settings(boolean clearPrevious, Settings settings) {
    fail();
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/BaseTestHandler.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public void ackSettings() {
    fail();
  } ##FSTMerge## @Override public void ackSettings() {
    fail();
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/BaseTestHandler.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public void ping(boolean ack, int payload1, int payload2) {
    fail();
  } ##FSTMerge## @Override public void ping(boolean ack, int payload1, int payload2) {
    fail();
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/BaseTestHandler.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public void goAway(int lastGoodStreamId, ErrorCode errorCode, ByteString debugData) {
    fail();
  } ##FSTMerge## @Override public void goAway(int lastGoodStreamId, ErrorCode errorCode, ByteString debugData) {
    fail();
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/BaseTestHandler.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public void windowUpdate(int streamId, long windowSizeIncrement) {
    fail();
  } ##FSTMerge## @Override public void windowUpdate(int streamId, long windowSizeIncrement) {
    fail();
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/BaseTestHandler.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public void priority(int streamId, int streamDependency, int weight,
      boolean exclusive) {
    fail();
  } ##FSTMerge## @Override public void priority(int streamId, int streamDependency, int weight,
      boolean exclusive) {
    fail();
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/BaseTestHandler.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
  public void pushPromise(int streamId, int associatedStreamId, List<Header> headerBlock) {
    fail();
  } ##FSTMerge## @Override
  public void pushPromise(int streamId, int associatedStreamId, List<Header> headerBlock) {
    fail();
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/BaseTestHandler.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public void alternateService(int streamId, String origin, ByteString protocol,
      String host, int port, long maxAge) {
    fail();
  } ##FSTMerge## @Override public void alternateService(int streamId, String origin, ByteString protocol,
      String host, int port, long maxAge) {
    fail();
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/BaseTestHandler.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public abstract ##FSTMerge## public abstract
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static final SSLContext sslContext = SslContextBuilder.localhost(); ##FSTMerge## private static final SSLContext sslContext = SslContextBuilder.localhost();
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static final HostnameVerifier NULL_HOSTNAME_VERIFIER = new HostnameVerifier() {
    public boolean verify(String hostname, SSLSession session) {
      return true;
    }
  }; ##FSTMerge## private static final HostnameVerifier NULL_HOSTNAME_VERIFIER = new HostnameVerifier() {
    public boolean verify(String hostname, SSLSession session) {
      return true;
    }
  };
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Rule public final TemporaryFolder tempDir = new TemporaryFolder(); ##FSTMerge## @Rule public final TemporaryFolder tempDir = new TemporaryFolder();
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Rule public final MockWebServerRule server = new MockWebServerRule(); ##FSTMerge## @Rule public final MockWebServerRule server = new MockWebServerRule();
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final Protocol protocol; ##FSTMerge## private final Protocol protocol;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## protected String hostHeader = ":host"; ##FSTMerge## protected String hostHeader = ":host";
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## protected final OkUrlFactory client = new OkUrlFactory(new OkHttpClient()); ##FSTMerge## protected final OkUrlFactory client = new OkUrlFactory(new OkHttpClient());
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## protected HttpURLConnection connection; ##FSTMerge## protected HttpURLConnection connection;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## protected Cache cache; ##FSTMerge## protected Cache cache;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## protected HttpOverSpdyTest(Protocol protocol){
    this.protocol = protocol;
  } ##FSTMerge## protected HttpOverSpdyTest(Protocol protocol){
    this.protocol = protocol;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Before public void setUp() throws Exception {
    server.get().useHttps(sslContext.getSocketFactory(), false);
    client.client().setProtocols(Arrays.asList(protocol, Protocol.HTTP_1_1));
    client.client().setSslSocketFactory(sslContext.getSocketFactory());
    client.client().setHostnameVerifier(NULL_HOSTNAME_VERIFIER);
    cache = new Cache(tempDir.getRoot(), Integer.MAX_VALUE);
  } ##FSTMerge## @Before public void setUp() throws Exception {
    server.get().useHttps(sslContext.getSocketFactory(), false);
    client.client().setProtocols(Arrays.asList(protocol, Protocol.HTTP_1_1));
    client.client().setSslSocketFactory(sslContext.getSocketFactory());
    client.client().setHostnameVerifier(NULL_HOSTNAME_VERIFIER);
    cache = new Cache(tempDir.getRoot(), Integer.MAX_VALUE);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @After public void tearDown() throws Exception {
    Authenticator.setDefault(null);
  } ##FSTMerge## @After public void tearDown() throws Exception {
    Authenticator.setDefault(null);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void get() throws Exception {
    MockResponse response = new MockResponse().setBody("ABCDE").setStatus("HTTP/1.1 200 Sweet");
    server.enqueue(response);

    connection = client.open(server.getUrl("/foo"));
    assertContent("ABCDE", connection, Integer.MAX_VALUE);
    assertEquals(200, connection.getResponseCode());
    assertEquals("Sweet", connection.getResponseMessage());

    RecordedRequest request = server.takeRequest();
    assertEquals("GET /foo HTTP/1.1", request.getRequestLine());
    assertEquals("https", request.getHeader(":scheme"));
    assertEquals(server.getHostName() + ":" + server.getPort(), request.getHeader(hostHeader));
  } ##FSTMerge## @Test public void get() throws Exception {
    MockResponse response = new MockResponse().setBody("ABCDE").setStatus("HTTP/1.1 200 Sweet");
    server.enqueue(response);

    connection = client.open(server.getUrl("/foo"));
    assertContent("ABCDE", connection, Integer.MAX_VALUE);
    assertEquals(200, connection.getResponseCode());
    assertEquals("Sweet", connection.getResponseMessage());

    RecordedRequest request = server.takeRequest();
    assertEquals("GET /foo HTTP/1.1", request.getRequestLine());
    assertEquals("https", request.getHeader(":scheme"));
    assertEquals(server.getHostName() + ":" + server.getPort(), request.getHeader(hostHeader));
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void emptyResponse() throws IOException {
    server.enqueue(new MockResponse());

    connection = client.open(server.getUrl("/foo"));
    assertEquals(-1, connection.getInputStream().read());
  } ##FSTMerge## @Test public void emptyResponse() throws IOException {
    server.enqueue(new MockResponse());

    connection = client.open(server.getUrl("/foo"));
    assertEquals(-1, connection.getInputStream().read());
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## byte[] postBytes = "FGHIJ".getBytes(Util.UTF_8); ##FSTMerge## byte[] postBytes = "FGHIJ".getBytes(Util.UTF_8);
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void noDefaultContentLengthOnStreamingPost() throws Exception {
    server.enqueue(new MockResponse().setBody("ABCDE"));

    connection = client.open(server.getUrl("/foo"));
    connection.setDoOutput(true);
    connection.setChunkedStreamingMode(0);
    connection.getOutputStream().write(postBytes);
    assertContent("ABCDE", connection, Integer.MAX_VALUE);

    RecordedRequest request = server.takeRequest();
    assertEquals("POST /foo HTTP/1.1", request.getRequestLine());
    assertArrayEquals(postBytes, request.getBody().readByteArray());
    assertNull(request.getHeader("Content-Length"));
  } ##FSTMerge## @Test public void noDefaultContentLengthOnStreamingPost() throws Exception {
    server.enqueue(new MockResponse().setBody("ABCDE"));

    connection = client.open(server.getUrl("/foo"));
    connection.setDoOutput(true);
    connection.setChunkedStreamingMode(0);
    connection.getOutputStream().write(postBytes);
    assertContent("ABCDE", connection, Integer.MAX_VALUE);

    RecordedRequest request = server.takeRequest();
    assertEquals("POST /foo HTTP/1.1", request.getRequestLine());
    assertArrayEquals(postBytes, request.getBody().readByteArray());
    assertNull(request.getHeader("Content-Length"));
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void userSuppliedContentLengthHeader() throws Exception {
    server.enqueue(new MockResponse().setBody("ABCDE"));

    connection = client.open(server.getUrl("/foo"));
    connection.setRequestProperty("Content-Length", String.valueOf(postBytes.length));
    connection.setDoOutput(true);
    connection.getOutputStream().write(postBytes);
    assertContent("ABCDE", connection, Integer.MAX_VALUE);

    RecordedRequest request = server.takeRequest();
    assertEquals("POST /foo HTTP/1.1", request.getRequestLine());
    assertArrayEquals(postBytes, request.getBody().readByteArray());
    assertEquals(postBytes.length, Integer.parseInt(request.getHeader("Content-Length")));
  } ##FSTMerge## @Test public void userSuppliedContentLengthHeader() throws Exception {
    server.enqueue(new MockResponse().setBody("ABCDE"));

    connection = client.open(server.getUrl("/foo"));
    connection.setRequestProperty("Content-Length", String.valueOf(postBytes.length));
    connection.setDoOutput(true);
    connection.getOutputStream().write(postBytes);
    assertContent("ABCDE", connection, Integer.MAX_VALUE);

    RecordedRequest request = server.takeRequest();
    assertEquals("POST /foo HTTP/1.1", request.getRequestLine());
    assertArrayEquals(postBytes, request.getBody().readByteArray());
    assertEquals(postBytes.length, Integer.parseInt(request.getHeader("Content-Length")));
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void closeAfterFlush() throws Exception {
    server.enqueue(new MockResponse().setBody("ABCDE"));

    connection = client.open(server.getUrl("/foo"));
    connection.setRequestProperty("Content-Length", String.valueOf(postBytes.length));
    connection.setDoOutput(true);
    connection.getOutputStream().write(postBytes); // push bytes into SpdyDataOutputStream.buffer
    connection.getOutputStream().flush(); // SpdyConnection.writeData subject to write window
    connection.getOutputStream().close(); // SpdyConnection.writeData empty frame
    assertContent("ABCDE", connection, Integer.MAX_VALUE);

    RecordedRequest request = server.takeRequest();
    assertEquals("POST /foo HTTP/1.1", request.getRequestLine());
    assertArrayEquals(postBytes, request.getBody().readByteArray());
    assertEquals(postBytes.length, Integer.parseInt(request.getHeader("Content-Length")));
  } ##FSTMerge## @Test public void closeAfterFlush() throws Exception {
    server.enqueue(new MockResponse().setBody("ABCDE"));

    connection = client.open(server.getUrl("/foo"));
    connection.setRequestProperty("Content-Length", String.valueOf(postBytes.length));
    connection.setDoOutput(true);
    connection.getOutputStream().write(postBytes); // push bytes into SpdyDataOutputStream.buffer
    connection.getOutputStream().flush(); // SpdyConnection.writeData subject to write window
    connection.getOutputStream().close(); // SpdyConnection.writeData empty frame
    assertContent("ABCDE", connection, Integer.MAX_VALUE);

    RecordedRequest request = server.takeRequest();
    assertEquals("POST /foo HTTP/1.1", request.getRequestLine());
    assertArrayEquals(postBytes, request.getBody().readByteArray());
    assertEquals(postBytes.length, Integer.parseInt(request.getHeader("Content-Length")));
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void setFixedLengthStreamingModeSetsContentLength() throws Exception {
    server.enqueue(new MockResponse().setBody("ABCDE"));

    connection = client.open(server.getUrl("/foo"));
    connection.setFixedLengthStreamingMode(postBytes.length);
    connection.setDoOutput(true);
    connection.getOutputStream().write(postBytes);
    assertContent("ABCDE", connection, Integer.MAX_VALUE);

    RecordedRequest request = server.takeRequest();
    assertEquals("POST /foo HTTP/1.1", request.getRequestLine());
    assertArrayEquals(postBytes, request.getBody().readByteArray());
    assertEquals(postBytes.length, Integer.parseInt(request.getHeader("Content-Length")));
  } ##FSTMerge## @Test public void setFixedLengthStreamingModeSetsContentLength() throws Exception {
    server.enqueue(new MockResponse().setBody("ABCDE"));

    connection = client.open(server.getUrl("/foo"));
    connection.setFixedLengthStreamingMode(postBytes.length);
    connection.setDoOutput(true);
    connection.getOutputStream().write(postBytes);
    assertContent("ABCDE", connection, Integer.MAX_VALUE);

    RecordedRequest request = server.takeRequest();
    assertEquals("POST /foo HTTP/1.1", request.getRequestLine());
    assertArrayEquals(postBytes, request.getBody().readByteArray());
    assertEquals(postBytes.length, Integer.parseInt(request.getHeader("Content-Length")));
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void spdyConnectionReuse() throws Exception {
    server.enqueue(new MockResponse().setBody("ABCDEF"));
    server.enqueue(new MockResponse().setBody("GHIJKL"));

    HttpURLConnection connection1 = client.open(server.getUrl("/r1"));
    HttpURLConnection connection2 = client.open(server.getUrl("/r2"));
    assertEquals("ABC", readAscii(connection1.getInputStream(), 3));
    assertEquals("GHI", readAscii(connection2.getInputStream(), 3));
    assertEquals("DEF", readAscii(connection1.getInputStream(), 3));
    assertEquals("JKL", readAscii(connection2.getInputStream(), 3));
    assertEquals(0, server.takeRequest().getSequenceNumber());
    assertEquals(1, server.takeRequest().getSequenceNumber());
  } ##FSTMerge## @Test public void spdyConnectionReuse() throws Exception {
    server.enqueue(new MockResponse().setBody("ABCDEF"));
    server.enqueue(new MockResponse().setBody("GHIJKL"));

    HttpURLConnection connection1 = client.open(server.getUrl("/r1"));
    HttpURLConnection connection2 = client.open(server.getUrl("/r2"));
    assertEquals("ABC", readAscii(connection1.getInputStream(), 3));
    assertEquals("GHI", readAscii(connection2.getInputStream(), 3));
    assertEquals("DEF", readAscii(connection1.getInputStream(), 3));
    assertEquals("JKL", readAscii(connection2.getInputStream(), 3));
    assertEquals(0, server.takeRequest().getSequenceNumber());
    assertEquals(1, server.takeRequest().getSequenceNumber());
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test @Ignore public void synchronousSpdyRequest() throws Exception {
    server.enqueue(new MockResponse().setBody("A"));
    server.enqueue(new MockResponse().setBody("A"));

    ExecutorService executor = Executors.newCachedThreadPool();
    CountDownLatch countDownLatch = new CountDownLatch(2);
    executor.execute(new SpdyRequest("/r1", countDownLatch));
    executor.execute(new SpdyRequest("/r2", countDownLatch));
    countDownLatch.await();
    assertEquals(0, server.takeRequest().getSequenceNumber());
    assertEquals(1, server.takeRequest().getSequenceNumber());
  } ##FSTMerge## @Test @Ignore public void synchronousSpdyRequest() throws Exception {
    server.enqueue(new MockResponse().setBody("A"));
    server.enqueue(new MockResponse().setBody("A"));

    ExecutorService executor = Executors.newCachedThreadPool();
    CountDownLatch countDownLatch = new CountDownLatch(2);
    executor.execute(new SpdyRequest("/r1", countDownLatch));
    executor.execute(new SpdyRequest("/r2", countDownLatch));
    countDownLatch.await();
    assertEquals(0, server.takeRequest().getSequenceNumber());
    assertEquals(1, server.takeRequest().getSequenceNumber());
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void gzippedResponseBody() throws Exception {
    server.enqueue(
        new MockResponse().addHeader("Content-Encoding: gzip").setBody(gzip("ABCABCABC")));
    assertContent("ABCABCABC", client.open(server.getUrl("/r1")), Integer.MAX_VALUE);
  } ##FSTMerge## @Test public void gzippedResponseBody() throws Exception {
    server.enqueue(
        new MockResponse().addHeader("Content-Encoding: gzip").setBody(gzip("ABCABCABC")));
    assertContent("ABCABCABC", client.open(server.getUrl("/r1")), Integer.MAX_VALUE);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void authenticate() throws Exception {
    server.enqueue(new MockResponse().setResponseCode(HttpURLConnection.HTTP_UNAUTHORIZED)
        .addHeader("www-authenticate: Basic realm=\"protected area\"")
        .setBody("Please authenticate."));
    server.enqueue(new MockResponse().setBody("Successful auth!"));

    Authenticator.setDefault(new RecordingAuthenticator());
    connection = client.open(server.getUrl("/"));
    assertEquals("Successful auth!", readAscii(connection.getInputStream(), Integer.MAX_VALUE));

    RecordedRequest denied = server.takeRequest();
    assertNull(denied.getHeader("Authorization"));
    RecordedRequest accepted = server.takeRequest();
    assertEquals("GET / HTTP/1.1", accepted.getRequestLine());
    assertEquals("Basic " + RecordingAuthenticator.BASE_64_CREDENTIALS,
        accepted.getHeader("Authorization"));
  } ##FSTMerge## @Test public void authenticate() throws Exception {
    server.enqueue(new MockResponse().setResponseCode(HttpURLConnection.HTTP_UNAUTHORIZED)
        .addHeader("www-authenticate: Basic realm=\"protected area\"")
        .setBody("Please authenticate."));
    server.enqueue(new MockResponse().setBody("Successful auth!"));

    Authenticator.setDefault(new RecordingAuthenticator());
    connection = client.open(server.getUrl("/"));
    assertEquals("Successful auth!", readAscii(connection.getInputStream(), Integer.MAX_VALUE));

    RecordedRequest denied = server.takeRequest();
    assertNull(denied.getHeader("Authorization"));
    RecordedRequest accepted = server.takeRequest();
    assertEquals("GET / HTTP/1.1", accepted.getRequestLine());
    assertEquals("Basic " + RecordingAuthenticator.BASE_64_CREDENTIALS,
        accepted.getHeader("Authorization"));
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void redirect() throws Exception {
    server.enqueue(new MockResponse().setResponseCode(HttpURLConnection.HTTP_MOVED_TEMP)
        .addHeader("Location: /foo")
        .setBody("This page has moved!"));
    server.enqueue(new MockResponse().setBody("This is the new location!"));

    connection = client.open(server.getUrl("/"));
    assertContent("This is the new location!", connection, Integer.MAX_VALUE);

    RecordedRequest request1 = server.takeRequest();
    assertEquals("/", request1.getPath());
    RecordedRequest request2 = server.takeRequest();
    assertEquals("/foo", request2.getPath());
  } ##FSTMerge## @Test public void redirect() throws Exception {
    server.enqueue(new MockResponse().setResponseCode(HttpURLConnection.HTTP_MOVED_TEMP)
        .addHeader("Location: /foo")
        .setBody("This page has moved!"));
    server.enqueue(new MockResponse().setBody("This is the new location!"));

    connection = client.open(server.getUrl("/"));
    assertContent("This is the new location!", connection, Integer.MAX_VALUE);

    RecordedRequest request1 = server.takeRequest();
    assertEquals("/", request1.getPath());
    RecordedRequest request2 = server.takeRequest();
    assertEquals("/foo", request2.getPath());
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void readAfterLastByte() throws Exception {
    server.enqueue(new MockResponse().setBody("ABC"));

    connection = client.open(server.getUrl("/"));
    InputStream in = connection.getInputStream();
    assertEquals("ABC", readAscii(in, 3));
    assertEquals(-1, in.read());
    assertEquals(-1, in.read());
  } ##FSTMerge## @Test public void readAfterLastByte() throws Exception {
    server.enqueue(new MockResponse().setBody("ABC"));

    connection = client.open(server.getUrl("/"));
    InputStream in = connection.getInputStream();
    assertEquals("ABC", readAscii(in, 3));
    assertEquals(-1, in.read());
    assertEquals(-1, in.read());
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Ignore // See https://github.com/square/okhttp/issues/578
  @Test(timeout = 3000) public void readResponseHeaderTimeout() throws Exception {
    server.enqueue(new MockResponse().setSocketPolicy(SocketPolicy.NO_RESPONSE));
    server.enqueue(new MockResponse().setBody("A"));

    connection = client.open(server.getUrl("/"));
    connection.setReadTimeout(1000);
    assertContent("A", connection, Integer.MAX_VALUE);
  } ##FSTMerge## @Ignore // See https://github.com/square/okhttp/issues/578
  @Test(timeout = 3000) public void readResponseHeaderTimeout() throws Exception {
    server.enqueue(new MockResponse().setSocketPolicy(SocketPolicy.NO_RESPONSE));
    server.enqueue(new MockResponse().setBody("A"));

    connection = client.open(server.getUrl("/"));
    connection.setReadTimeout(1000);
    assertContent("A", connection, Integer.MAX_VALUE);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void readTimeoutMoreGranularThanBodySize() throws Exception {
    char[] body = new char[4096]; // 4KiB to read
    Arrays.fill(body, 'y');
    server.enqueue(new MockResponse().setBody(new String(body)).throttleBody(1024, 1, SECONDS)); // slow connection 1KiB/second

    connection = client.open(server.getUrl("/"));
    connection.setReadTimeout(2000); // 2 seconds to read something.
    assertContent(new String(body), connection, Integer.MAX_VALUE);
  } ##FSTMerge## @Test public void readTimeoutMoreGranularThanBodySize() throws Exception {
    char[] body = new char[4096]; // 4KiB to read
    Arrays.fill(body, 'y');
    server.enqueue(new MockResponse().setBody(new String(body)).throttleBody(1024, 1, SECONDS)); // slow connection 1KiB/second

    connection = client.open(server.getUrl("/"));
    connection.setReadTimeout(2000); // 2 seconds to read something.
    assertContent(new String(body), connection, Integer.MAX_VALUE);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void readTimeoutOnSlowConnection() throws Exception {
    char[] body = new char[2048]; // 2KiB to read
    Arrays.fill(body, 'y');
    server.enqueue(new MockResponse()
        .setBody(new String(body))
        .throttleBody(1024, 1, SECONDS)); // slow connection 1KiB/second

    connection = client.open(server.getUrl("/"));
    connection.setReadTimeout(500); // half a second to read something
    connection.connect();
    try {
      readAscii(connection.getInputStream(), Integer.MAX_VALUE);
      fail("Should have timed out!");
    } catch (IOException e){
      assertEquals("timeout", e.getMessage());
    }
  } ##FSTMerge## @Test public void readTimeoutOnSlowConnection() throws Exception {
    char[] body = new char[2048]; // 2KiB to read
    Arrays.fill(body, 'y');
    server.enqueue(new MockResponse()
        .setBody(new String(body))
        .throttleBody(1024, 1, SECONDS)); // slow connection 1KiB/second

    connection = client.open(server.getUrl("/"));
    connection.setReadTimeout(500); // half a second to read something
    connection.connect();
    try {
      readAscii(connection.getInputStream(), Integer.MAX_VALUE);
      fail("Should have timed out!");
    } catch (IOException e){
      assertEquals("timeout", e.getMessage());
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void spdyConnectionTimeout() throws Exception {
    MockResponse response = new MockResponse().setBody("A");
    response.setBodyDelay(1, TimeUnit.SECONDS);
    server.enqueue(response);

    HttpURLConnection connection1 = client.open(server.getUrl("/"));
    connection1.setReadTimeout(2000);
    HttpURLConnection connection2 = client.open(server.getUrl("/"));
    connection2.setReadTimeout(200);
    connection1.connect();
    connection2.connect();
    assertContent("A", connection1, Integer.MAX_VALUE);
  } ##FSTMerge## @Test public void spdyConnectionTimeout() throws Exception {
    MockResponse response = new MockResponse().setBody("A");
    response.setBodyDelay(1, TimeUnit.SECONDS);
    server.enqueue(response);

    HttpURLConnection connection1 = client.open(server.getUrl("/"));
    connection1.setReadTimeout(2000);
    HttpURLConnection connection2 = client.open(server.getUrl("/"));
    connection2.setReadTimeout(200);
    connection1.connect();
    connection2.connect();
    assertContent("A", connection1, Integer.MAX_VALUE);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void responsesAreCached() throws IOException {
    client.client().setCache(cache);

    server.enqueue(new MockResponse().addHeader("cache-control: max-age=60").setBody("A"));

    assertContent("A", client.open(server.getUrl("/")), Integer.MAX_VALUE);
    assertEquals(1, cache.getRequestCount());
    assertEquals(1, cache.getNetworkCount());
    assertEquals(0, cache.getHitCount());
    assertContent("A", client.open(server.getUrl("/")), Integer.MAX_VALUE);
    assertContent("A", client.open(server.getUrl("/")), Integer.MAX_VALUE);
    assertEquals(3, cache.getRequestCount());
    assertEquals(1, cache.getNetworkCount());
    assertEquals(2, cache.getHitCount());
  } ##FSTMerge## @Test public void responsesAreCached() throws IOException {
    client.client().setCache(cache);

    server.enqueue(new MockResponse().addHeader("cache-control: max-age=60").setBody("A"));

    assertContent("A", client.open(server.getUrl("/")), Integer.MAX_VALUE);
    assertEquals(1, cache.getRequestCount());
    assertEquals(1, cache.getNetworkCount());
    assertEquals(0, cache.getHitCount());
    assertContent("A", client.open(server.getUrl("/")), Integer.MAX_VALUE);
    assertContent("A", client.open(server.getUrl("/")), Integer.MAX_VALUE);
    assertEquals(3, cache.getRequestCount());
    assertEquals(1, cache.getNetworkCount());
    assertEquals(2, cache.getHitCount());
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void conditionalCache() throws IOException {
    client.client().setCache(cache);

    server.enqueue(new MockResponse().addHeader("ETag: v1").setBody("A"));
    server.enqueue(new MockResponse().setResponseCode(HttpURLConnection.HTTP_NOT_MODIFIED));

    assertContent("A", client.open(server.getUrl("/")), Integer.MAX_VALUE);
    assertEquals(1, cache.getRequestCount());
    assertEquals(1, cache.getNetworkCount());
    assertEquals(0, cache.getHitCount());
    assertContent("A", client.open(server.getUrl("/")), Integer.MAX_VALUE);
    assertEquals(2, cache.getRequestCount());
    assertEquals(2, cache.getNetworkCount());
    assertEquals(1, cache.getHitCount());
  } ##FSTMerge## @Test public void conditionalCache() throws IOException {
    client.client().setCache(cache);

    server.enqueue(new MockResponse().addHeader("ETag: v1").setBody("A"));
    server.enqueue(new MockResponse().setResponseCode(HttpURLConnection.HTTP_NOT_MODIFIED));

    assertContent("A", client.open(server.getUrl("/")), Integer.MAX_VALUE);
    assertEquals(1, cache.getRequestCount());
    assertEquals(1, cache.getNetworkCount());
    assertEquals(0, cache.getHitCount());
    assertContent("A", client.open(server.getUrl("/")), Integer.MAX_VALUE);
    assertEquals(2, cache.getRequestCount());
    assertEquals(2, cache.getNetworkCount());
    assertEquals(1, cache.getHitCount());
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void responseCachedWithoutConsumingFullBody() throws IOException {
    client.client().setCache(cache);

    server.enqueue(new MockResponse().addHeader("cache-control: max-age=60").setBody("ABCD"));
    server.enqueue(new MockResponse().addHeader("cache-control: max-age=60").setBody("EFGH"));

    HttpURLConnection connection1 = client.open(server.getUrl("/"));
    InputStream in1 = connection1.getInputStream();
    assertEquals("AB", readAscii(in1, 2));
    in1.close();

    HttpURLConnection connection2 = client.open(server.getUrl("/"));
    InputStream in2 = connection2.getInputStream();
    assertEquals("ABCD", readAscii(in2, Integer.MAX_VALUE));
    in2.close();
  } ##FSTMerge## @Test public void responseCachedWithoutConsumingFullBody() throws IOException {
    client.client().setCache(cache);

    server.enqueue(new MockResponse().addHeader("cache-control: max-age=60").setBody("ABCD"));
    server.enqueue(new MockResponse().addHeader("cache-control: max-age=60").setBody("EFGH"));

    HttpURLConnection connection1 = client.open(server.getUrl("/"));
    InputStream in1 = connection1.getInputStream();
    assertEquals("AB", readAscii(in1, 2));
    in1.close();

    HttpURLConnection connection2 = client.open(server.getUrl("/"));
    InputStream in2 = connection2.getInputStream();
    assertEquals("ABCD", readAscii(in2, Integer.MAX_VALUE));
    in2.close();
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void acceptAndTransmitCookies() throws Exception {
    CookieManager cookieManager = new CookieManager();
    client.client().setCookieHandler(cookieManager);

    server.enqueue(new MockResponse()
        .addHeader("set-cookie: c=oreo; domain=" + server.get().getCookieDomain())
        .setBody("A"));
    server.enqueue(new MockResponse()
        .setBody("B"));

    URL url = server.getUrl("/");
    assertContent("A", client.open(url), Integer.MAX_VALUE);
    Map<String, List<String>> requestHeaders = Collections.emptyMap();
    assertEquals(Collections.singletonMap("Cookie", Arrays.asList("c=oreo")),
        cookieManager.get(url.toURI(), requestHeaders));

    assertContent("B", client.open(url), Integer.MAX_VALUE);
    RecordedRequest requestA = server.takeRequest();
    assertNull(requestA.getHeader("Cookie"));
    RecordedRequest requestB = server.takeRequest();
    assertEquals("c=oreo", requestB.getHeader("Cookie"));
  } ##FSTMerge## @Test public void acceptAndTransmitCookies() throws Exception {
    CookieManager cookieManager = new CookieManager();
    client.client().setCookieHandler(cookieManager);

    server.enqueue(new MockResponse()
        .addHeader("set-cookie: c=oreo; domain=" + server.get().getCookieDomain())
        .setBody("A"));
    server.enqueue(new MockResponse()
        .setBody("B"));

    URL url = server.getUrl("/");
    assertContent("A", client.open(url), Integer.MAX_VALUE);
    Map<String, List<String>> requestHeaders = Collections.emptyMap();
    assertEquals(Collections.singletonMap("Cookie", Arrays.asList("c=oreo")),
        cookieManager.get(url.toURI(), requestHeaders));

    assertContent("B", client.open(url), Integer.MAX_VALUE);
    RecordedRequest requestA = server.takeRequest();
    assertNull(requestA.getHeader("Cookie"));
    RecordedRequest requestB = server.takeRequest();
    assertEquals("c=oreo", requestB.getHeader("Cookie"));
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void disconnectWithStreamNotEstablished() throws Exception {
    ConnectionPool connectionPool = new ConnectionPool(5, 5000);
    client.client().setConnectionPool(connectionPool);

    server.enqueue(new MockResponse().setBody("abc"));

    // Disconnect before the stream is created. A connection is still established!
    HttpURLConnection connection1 = client.open(server.getUrl("/"));
    connection1.connect();
    connection1.disconnect();

    // That connection is pooled, and it works.
    assertEquals(1, connectionPool.getSpdyConnectionCount());
    HttpURLConnection connection2 = client.open(server.getUrl("/"));
    assertContent("abc", connection2, 3);
    assertEquals(0, server.takeRequest().getSequenceNumber());
  } ##FSTMerge## @Test public void disconnectWithStreamNotEstablished() throws Exception {
    ConnectionPool connectionPool = new ConnectionPool(5, 5000);
    client.client().setConnectionPool(connectionPool);

    server.enqueue(new MockResponse().setBody("abc"));

    // Disconnect before the stream is created. A connection is still established!
    HttpURLConnection connection1 = client.open(server.getUrl("/"));
    connection1.connect();
    connection1.disconnect();

    // That connection is pooled, and it works.
    assertEquals(1, connectionPool.getSpdyConnectionCount());
    HttpURLConnection connection2 = client.open(server.getUrl("/"));
    assertContent("abc", connection2, 3);
    assertEquals(0, server.takeRequest().getSequenceNumber());
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void assertContent(String expected, HttpURLConnection connection, int limit)
      throws IOException {
    connection.connect();
    assertEquals(expected, readAscii(connection.getInputStream(), limit));
  } ##FSTMerge## void assertContent(String expected, HttpURLConnection connection, int limit)
      throws IOException {
    connection.connect();
    assertEquals(expected, readAscii(connection.getInputStream(), limit));
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private String readAscii(InputStream in, int count) throws IOException {
    StringBuilder result = new StringBuilder();
    for (int i = 0; i < count; i++) {
      int value = in.read();
      if (value == -1) {
        in.close();
        break;
      }
      result.append((char) value);
    }
    return result.toString();
  } ##FSTMerge## private String readAscii(InputStream in, int count) throws IOException {
    StringBuilder result = new StringBuilder();
    for (int i = 0; i < count; i++) {
      int value = in.read();
      if (value == -1) {
        in.close();
        break;
      }
      result.append((char) value);
    }
    return result.toString();
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Buffer gzip(String bytes) throws IOException {
    Buffer bytesOut = new Buffer();
    BufferedSink sink = Okio.buffer(new GzipSink(bytesOut));
    sink.writeUtf8(bytes);
    sink.close();
    return bytesOut;
  } ##FSTMerge## public Buffer gzip(String bytes) throws IOException {
    Buffer bytesOut = new Buffer();
    BufferedSink sink = Okio.buffer(new GzipSink(bytesOut));
    sink.writeUtf8(bytes);
    sink.close();
    return bytesOut;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements Runnable ##FSTMerge## implements Runnable
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## String path; ##FSTMerge## String path;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## CountDownLatch countDownLatch; ##FSTMerge## CountDownLatch countDownLatch;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public SpdyRequest(String path, CountDownLatch countDownLatch) {
      this.path = path;
      this.countDownLatch = countDownLatch;
    } ##FSTMerge## public SpdyRequest(String path, CountDownLatch countDownLatch) {
      this.path = path;
      this.countDownLatch = countDownLatch;
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public void run() {
      try {
        HttpURLConnection conn = client.open(server.getUrl(path));
        assertEquals("A", readAscii(conn.getInputStream(), 1));
        countDownLatch.countDown();
      } catch (Exception e) {
        throw new RuntimeException(e);
      }
    } ##FSTMerge## @Override public void run() {
      try {
        HttpURLConnection conn = client.open(server.getUrl(path));
        assertEquals("A", readAscii(conn.getInputStream(), 1));
        countDownLatch.countDown();
      } catch (Exception e) {
        throw new RuntimeException(e);
      }
    }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdy3Test.java
############## CONFLICT ##############
Conflict type: ExtendsList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## extends HttpOverSpdyTest ##FSTMerge## extends HttpOverSpdyTest
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdy3Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public HttpOverSpdy3Test() {
    super(Protocol.SPDY_3);
  } ##FSTMerge## public HttpOverSpdy3Test() {
    super(Protocol.SPDY_3);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdy3Test.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverHttp20Draft16Test.java
############## CONFLICT ##############
Conflict type: ExtendsList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## extends HttpOverSpdyTest ##FSTMerge## extends HttpOverSpdyTest
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverHttp20Draft16Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public HttpOverHttp20Draft16Test() {
    super(Protocol.HTTP_2);
    this.hostHeader = ":authority";
  } ##FSTMerge## public HttpOverHttp20Draft16Test() {
    super(Protocol.HTTP_2);
    this.hostHeader = ":authority";
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverHttp20Draft16Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void serverSendsPushPromise_GET() throws Exception {
    PushPromise pushPromise = new PushPromise("GET", "/foo/bar", Headers.of("foo", "bar"),
        new MockResponse().setBody("bar").setStatus("HTTP/1.1 200 Sweet"));
    MockResponse response = new MockResponse()
        .setBody("ABCDE")
        .setStatus("HTTP/1.1 200 Sweet")
        .withPush(pushPromise);
    server.enqueue(response);

    connection = client.open(server.getUrl("/foo"));
    assertContent("ABCDE", connection, Integer.MAX_VALUE);
    assertEquals(200, connection.getResponseCode());
    assertEquals("Sweet", connection.getResponseMessage());

    RecordedRequest request = server.takeRequest();
    assertEquals("GET /foo HTTP/1.1", request.getRequestLine());
    assertEquals("https", request.getHeader(":scheme"));
    assertEquals(server.getHostName() + ":" + server.getPort(), request.getHeader(hostHeader));

    RecordedRequest pushedRequest = server.takeRequest();
    assertEquals("GET /foo/bar HTTP/1.1", pushedRequest.getRequestLine());
    assertEquals("bar", pushedRequest.getHeader("foo"));
  } ##FSTMerge## @Test public void serverSendsPushPromise_GET() throws Exception {
    PushPromise pushPromise = new PushPromise("GET", "/foo/bar", Headers.of("foo", "bar"),
        new MockResponse().setBody("bar").setStatus("HTTP/1.1 200 Sweet"));
    MockResponse response = new MockResponse()
        .setBody("ABCDE")
        .setStatus("HTTP/1.1 200 Sweet")
        .withPush(pushPromise);
    server.enqueue(response);

    connection = client.open(server.getUrl("/foo"));
    assertContent("ABCDE", connection, Integer.MAX_VALUE);
    assertEquals(200, connection.getResponseCode());
    assertEquals("Sweet", connection.getResponseMessage());

    RecordedRequest request = server.takeRequest();
    assertEquals("GET /foo HTTP/1.1", request.getRequestLine());
    assertEquals("https", request.getHeader(":scheme"));
    assertEquals(server.getHostName() + ":" + server.getPort(), request.getHeader(hostHeader));

    RecordedRequest pushedRequest = server.takeRequest();
    assertEquals("GET /foo/bar HTTP/1.1", pushedRequest.getRequestLine());
    assertEquals("bar", pushedRequest.getHeader("foo"));
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverHttp20Draft16Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void serverSendsPushPromise_HEAD() throws Exception {
    PushPromise pushPromise = new PushPromise("HEAD", "/foo/bar", Headers.of("foo", "bar"),
        new MockResponse().setStatus("HTTP/1.1 204 Sweet"));
    MockResponse response = new MockResponse()
        .setBody("ABCDE")
        .setStatus("HTTP/1.1 200 Sweet")
        .withPush(pushPromise);
    server.enqueue(response);

    connection = client.open(server.getUrl("/foo"));
    assertContent("ABCDE", connection, Integer.MAX_VALUE);
    assertEquals(200, connection.getResponseCode());
    assertEquals("Sweet", connection.getResponseMessage());

    RecordedRequest request = server.takeRequest();
    assertEquals("GET /foo HTTP/1.1", request.getRequestLine());
    assertEquals("https", request.getHeader(":scheme"));
    assertEquals(server.getHostName() + ":" + server.getPort(), request.getHeader(hostHeader));

    RecordedRequest pushedRequest = server.takeRequest();
    assertEquals("HEAD /foo/bar HTTP/1.1", pushedRequest.getRequestLine());
    assertEquals("bar", pushedRequest.getHeader("foo"));
  } ##FSTMerge## @Test public void serverSendsPushPromise_HEAD() throws Exception {
    PushPromise pushPromise = new PushPromise("HEAD", "/foo/bar", Headers.of("foo", "bar"),
        new MockResponse().setStatus("HTTP/1.1 204 Sweet"));
    MockResponse response = new MockResponse()
        .setBody("ABCDE")
        .setStatus("HTTP/1.1 200 Sweet")
        .withPush(pushPromise);
    server.enqueue(response);

    connection = client.open(server.getUrl("/foo"));
    assertContent("ABCDE", connection, Integer.MAX_VALUE);
    assertEquals(200, connection.getResponseCode());
    assertEquals("Sweet", connection.getResponseMessage());

    RecordedRequest request = server.takeRequest();
    assertEquals("GET /foo HTTP/1.1", request.getRequestLine());
    assertEquals("https", request.getHeader(":scheme"));
    assertEquals(server.getHostName() + ":" + server.getPort(), request.getHeader(hostHeader));

    RecordedRequest pushedRequest = server.takeRequest();
    assertEquals("HEAD /foo/bar HTTP/1.1", pushedRequest.getRequestLine());
    assertEquals("bar", pushedRequest.getHeader("foo"));
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverHttp20Draft16Test.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/mockwebserver/src/test/java/com/squareup/okhttp/mockwebserver/rule/MockWebServerRuleTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private MockWebServerRule server = new MockWebServerRule(); ##FSTMerge## private MockWebServerRule server = new MockWebServerRule();
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/mockwebserver/src/test/java/com/squareup/okhttp/mockwebserver/rule/MockWebServerRuleTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @After public void tearDown() {
    server.after();
  } ##FSTMerge## @After public void tearDown() {
    server.after();
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/mockwebserver/src/test/java/com/squareup/okhttp/mockwebserver/rule/MockWebServerRuleTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void whenRuleCreatedPortIsAvailable() throws IOException {
    assertTrue(server.getPort() > 0);
  } ##FSTMerge## @Test public void whenRuleCreatedPortIsAvailable() throws IOException {
    assertTrue(server.getPort() > 0);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/mockwebserver/src/test/java/com/squareup/okhttp/mockwebserver/rule/MockWebServerRuleTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void differentRulesGetDifferentPorts() throws IOException {
    assertNotEquals(server.getPort(), new MockWebServerRule().getPort());
  } ##FSTMerge## @Test public void differentRulesGetDifferentPorts() throws IOException {
    assertNotEquals(server.getPort(), new MockWebServerRule().getPort());
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/mockwebserver/src/test/java/com/squareup/okhttp/mockwebserver/rule/MockWebServerRuleTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void beforePlaysServer() throws Exception {
    server.before();
    assertEquals(server.getPort(), server.get().getPort());
    server.getUrl("/").openConnection().connect();
  } ##FSTMerge## @Test public void beforePlaysServer() throws Exception {
    server.before();
    assertEquals(server.getPort(), server.get().getPort());
    server.getUrl("/").openConnection().connect();
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/mockwebserver/src/test/java/com/squareup/okhttp/mockwebserver/rule/MockWebServerRuleTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void afterStopsServer() throws Exception {
    server.before();
    server.after();

    try {
      server.getUrl("/").openConnection().connect();
      fail();
    } catch (ConnectException e) {
    }
  } ##FSTMerge## @Test public void afterStopsServer() throws Exception {
    server.before();
    server.after();

    try {
      server.getUrl("/").openConnection().connect();
      fail();
    } catch (ConnectException e) {
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/mockwebserver/src/test/java/com/squareup/okhttp/mockwebserver/rule/MockWebServerRuleTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void typicalUsage() throws Exception {
    server.before(); // Implicitly called when @Rule.

    server.enqueue(new MockResponse().setBody("hello world"));

    URL url = server.getUrl("/aaa");
    HttpURLConnection connection = (HttpURLConnection) url.openConnection();
    InputStream in = connection.getInputStream();
    BufferedReader reader = new BufferedReader(new InputStreamReader(in));
    assertEquals("hello world", reader.readLine());

    assertEquals(1, server.getRequestCount());
    assertEquals("GET /aaa HTTP/1.1", server.takeRequest().getRequestLine());

    server.after(); // Implicitly called when @Rule.
  } ##FSTMerge## @Test public void typicalUsage() throws Exception {
    server.before(); // Implicitly called when @Rule.

    server.enqueue(new MockResponse().setBody("hello world"));

    URL url = server.getUrl("/aaa");
    HttpURLConnection connection = (HttpURLConnection) url.openConnection();
    InputStream in = connection.getInputStream();
    BufferedReader reader = new BufferedReader(new InputStreamReader(in));
    assertEquals("hello world", reader.readLine());

    assertEquals(1, server.getRequestCount());
    assertEquals("GET /aaa HTTP/1.1", server.takeRequest().getRequestLine());

    server.after(); // Implicitly called when @Rule.
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/mockwebserver/src/test/java/com/squareup/okhttp/mockwebserver/rule/MockWebServerRuleTest.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/rule/MockWebServerRule.java
############## CONFLICT ##############
Conflict type: ExtendsList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## extends ExternalResource ##FSTMerge## extends ExternalResource
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/rule/MockWebServerRule.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static final Logger logger = Logger.getLogger(MockWebServerRule.class.getName()); ##FSTMerge## private static final Logger logger = Logger.getLogger(MockWebServerRule.class.getName());
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/rule/MockWebServerRule.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final MockWebServer server = new MockWebServer(); ##FSTMerge## private final MockWebServer server = new MockWebServer();
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/rule/MockWebServerRule.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private boolean started; ##FSTMerge## private boolean started;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/rule/MockWebServerRule.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override protected void before() {
    if (started) return;
    started = true;
    try {
      server.start();
    } catch (IOException e) {
      throw new RuntimeException(e);
    }
  } ##FSTMerge## @Override protected void before() {
    if (started) return;
    started = true;
    try {
      server.start();
    } catch (IOException e) {
      throw new RuntimeException(e);
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/rule/MockWebServerRule.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override protected void after() {
    try {
      server.shutdown();
    } catch (IOException e) {
      logger.log(Level.WARNING, "MockWebServer shutdown failed", e);
    }
  } ##FSTMerge## @Override protected void after() {
    try {
      server.shutdown();
    } catch (IOException e) {
      logger.log(Level.WARNING, "MockWebServer shutdown failed", e);
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/rule/MockWebServerRule.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public String getHostName() {
    if (!started) before();
    return server.getHostName();
  } ##FSTMerge## public String getHostName() {
    if (!started) before();
    return server.getHostName();
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/rule/MockWebServerRule.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int getPort() {
    if (!started) before();
    return server.getPort();
  } ##FSTMerge## public int getPort() {
    if (!started) before();
    return server.getPort();
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/rule/MockWebServerRule.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int getRequestCount() {
    return server.getRequestCount();
  } ##FSTMerge## public int getRequestCount() {
    return server.getRequestCount();
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/rule/MockWebServerRule.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void enqueue(MockResponse response) {
    server.enqueue(response);
  } ##FSTMerge## public void enqueue(MockResponse response) {
    server.enqueue(response);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/rule/MockWebServerRule.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public RecordedRequest takeRequest() throws InterruptedException {
    return server.takeRequest();
  } ##FSTMerge## public RecordedRequest takeRequest() throws InterruptedException {
    return server.takeRequest();
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/rule/MockWebServerRule.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public URL getUrl(String path) {
    return server.getUrl(path);
  } ##FSTMerge## public URL getUrl(String path) {
    return server.getUrl(path);
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/rule/MockWebServerRule.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public MockWebServer get() {
    return server;
  } ##FSTMerge## public MockWebServer get() {
    return server;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/rule/MockWebServerRule.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final ##FSTMerge## public final
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements IncomingStreamHandler ##FSTMerge## implements IncomingStreamHandler
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final List<Protocol> spdyProtocols = Util.immutableList(Protocol.HTTP_2, Protocol.SPDY_3); ##FSTMerge## private final List<Protocol> spdyProtocols = Util.immutableList(Protocol.HTTP_2, Protocol.SPDY_3);
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final File baseDirectory; ##FSTMerge## private final File baseDirectory;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private SSLSocketFactory sslSocketFactory; ##FSTMerge## private SSLSocketFactory sslSocketFactory;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Protocol protocol; ##FSTMerge## private Protocol protocol;
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public SpdyServer(File baseDirectory) {
    this.baseDirectory = baseDirectory;
  } ##FSTMerge## public SpdyServer(File baseDirectory) {
    this.baseDirectory = baseDirectory;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void useHttps(SSLSocketFactory sslSocketFactory) {
    this.sslSocketFactory = sslSocketFactory;
  } ##FSTMerge## public void useHttps(SSLSocketFactory sslSocketFactory) {
    this.sslSocketFactory = sslSocketFactory;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void run() throws Exception {
    ServerSocket serverSocket = new ServerSocket(8888);
    serverSocket.setReuseAddress(true);

    while (true) {
      Socket socket = serverSocket.accept();
      if (sslSocketFactory != null) {
        socket = doSsl(socket);
      }
      new SpdyConnection.Builder(false, socket).protocol(protocol).handler(this).build();
    }
  } ##FSTMerge## private void run() throws Exception {
    ServerSocket serverSocket = new ServerSocket(8888);
    serverSocket.setReuseAddress(true);

    while (true) {
      Socket socket = serverSocket.accept();
      if (sslSocketFactory != null) {
        socket = doSsl(socket);
      }
      new SpdyConnection.Builder(false, socket).protocol(protocol).handler(this).build();
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Socket doSsl(Socket socket) throws IOException {
    SSLSocket sslSocket =
        (SSLSocket) sslSocketFactory.createSocket(socket, socket.getInetAddress().getHostAddress(),
            socket.getPort(), true);
    sslSocket.setUseClientMode(false);
    Platform.get().configureTlsExtensions(sslSocket, null, spdyProtocols);
    sslSocket.startHandshake();
    String protocolString = Platform.get().getSelectedProtocol(sslSocket);
    protocol = protocolString != null ? Protocol.get(protocolString) : null;
    if (protocol == null || !spdyProtocols.contains(protocol)) {
      throw new IllegalStateException("Protocol " + protocol + " unsupported");
    }
    return sslSocket;
  } ##FSTMerge## private Socket doSsl(Socket socket) throws IOException {
    SSLSocket sslSocket =
        (SSLSocket) sslSocketFactory.createSocket(socket, socket.getInetAddress().getHostAddress(),
            socket.getPort(), true);
    sslSocket.setUseClientMode(false);
    Platform.get().configureTlsExtensions(sslSocket, null, spdyProtocols);
    sslSocket.startHandshake();
    String protocolString = Platform.get().getSelectedProtocol(sslSocket);
    protocol = protocolString != null ? Protocol.get(protocolString) : null;
    if (protocol == null || !spdyProtocols.contains(protocol)) {
      throw new IllegalStateException("Protocol " + protocol + " unsupported");
    }
    return sslSocket;
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public void receive(final SpdyStream stream) throws IOException {
    List<Header> requestHeaders = stream.getRequestHeaders();
    String path = null;
    for (int i = 0, size = requestHeaders.size(); i < size; i++) {
      if (requestHeaders.get(i).name.equals(Header.TARGET_PATH)) {
        path = requestHeaders.get(i).value.utf8();
        break;
      }
    }

    if (path == null) {
      // TODO: send bad request error
      throw new AssertionError();
    }

    File file = new File(baseDirectory + path);

    if (file.isDirectory()) {
      serveDirectory(stream, file.list());
    } else if (file.exists()) {
      serveFile(stream, file);
    } else {
      send404(stream, path);
    }
  } ##FSTMerge## @Override public void receive(final SpdyStream stream) throws IOException {
    List<Header> requestHeaders = stream.getRequestHeaders();
    String path = null;
    for (int i = 0, size = requestHeaders.size(); i < size; i++) {
      if (requestHeaders.get(i).name.equals(Header.TARGET_PATH)) {
        path = requestHeaders.get(i).value.utf8();
        break;
      }
    }

    if (path == null) {
      // TODO: send bad request error
      throw new AssertionError();
    }

    File file = new File(baseDirectory + path);

    if (file.isDirectory()) {
      serveDirectory(stream, file.list());
    } else if (file.exists()) {
      serveFile(stream, file);
    } else {
      send404(stream, path);
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void send404(SpdyStream stream, String path) throws IOException {
    List<Header> responseHeaders = Arrays.asList(
        new Header(":status", "404"),
        new Header(":version", "HTTP/1.1"),
        new Header("content-type", "text/plain")
    );
    stream.reply(responseHeaders, true);
    BufferedSink out = Okio.buffer(stream.getSink());
    out.writeUtf8("Not found: " + path);
    out.close();
  } ##FSTMerge## private void send404(SpdyStream stream, String path) throws IOException {
    List<Header> responseHeaders = Arrays.asList(
        new Header(":status", "404"),
        new Header(":version", "HTTP/1.1"),
        new Header("content-type", "text/plain")
    );
    stream.reply(responseHeaders, true);
    BufferedSink out = Okio.buffer(stream.getSink());
    out.writeUtf8("Not found: " + path);
    out.close();
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void serveDirectory(SpdyStream stream, String[] files) throws IOException {
    List<Header> responseHeaders = Arrays.asList(
        new Header(":status", "200"),
        new Header(":version", "HTTP/1.1"),
        new Header("content-type", "text/html; charset=UTF-8")
    );
    stream.reply(responseHeaders, true);
    BufferedSink out = Okio.buffer(stream.getSink());
    for (String file : files) {
      out.writeUtf8("<a href='" + file + "'>" + file + "</a><br>");
    }
    out.close();
  } ##FSTMerge## private void serveDirectory(SpdyStream stream, String[] files) throws IOException {
    List<Header> responseHeaders = Arrays.asList(
        new Header(":status", "200"),
        new Header(":version", "HTTP/1.1"),
        new Header("content-type", "text/html; charset=UTF-8")
    );
    stream.reply(responseHeaders, true);
    BufferedSink out = Okio.buffer(stream.getSink());
    for (String file : files) {
      out.writeUtf8("<a href='" + file + "'>" + file + "</a><br>");
    }
    out.close();
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void serveFile(SpdyStream stream, File file) throws IOException {
    List<Header> responseHeaders = Arrays.asList(
        new Header(":status", "200"),
        new Header(":version", "HTTP/1.1"),
        new Header("content-type", contentType(file))
    );
    stream.reply(responseHeaders, true);
    Source source = Okio.source(file);
    try {
      BufferedSink out = Okio.buffer(stream.getSink());
      out.writeAll(source);
      out.close();
    } finally {
      Util.closeQuietly(source);
    }
  } ##FSTMerge## private void serveFile(SpdyStream stream, File file) throws IOException {
    List<Header> responseHeaders = Arrays.asList(
        new Header(":status", "200"),
        new Header(":version", "HTTP/1.1"),
        new Header("content-type", contentType(file))
    );
    stream.reply(responseHeaders, true);
    Source source = Okio.source(file);
    try {
      BufferedSink out = Okio.buffer(stream.getSink());
      out.writeAll(source);
      out.close();
    } finally {
      Util.closeQuietly(source);
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private String contentType(File file) {
    return file.getName().endsWith(".html") ? "text/html" : "text/plain";
  } ##FSTMerge## private String contentType(File file) {
    return file.getName().endsWith(".html") ? "text/html" : "text/plain";
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b7b793103f375dd04559b2ddfeb34d1140a2b6a
Parent1 SHA-1: d6c21d100a1daa41244550010ccfa223a4545001
Parent2 SHA-1: 432ca1ef31d0fb031ab3aa91438e87fcfbe86a68
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static void main(String... args) throws Exception {
    if (args.length != 1 || args[0].startsWith("-")) {
      System.out.println("Usage: SpdyServer <base directory>");
      return;
    }

    SpdyServer server = new SpdyServer(new File(args[0]));
    server.useHttps(SslContextBuilder.localhost().getSocketFactory());
    server.run();
  } ##FSTMerge## public static void main(String... args) throws Exception {
    if (args.length != 1 || args[0].startsWith("-")) {
      System.out.println("Usage: SpdyServer <base directory>");
      return;
    }

    SpdyServer server = new SpdyServer(new File(args[0]));
    server.useHttps(SslContextBuilder.localhost().getSocketFactory());
    server.run();
  }
File path: /tmp/downloads/okhttp/revisions/rev_d6c21_432ca/rev_d6c21-432ca/mockwebserver/src/main/java/com/squareup/okhttp/internal/spdy/SpdyServer.java

==================================================================================================================
Revision: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068.revisions
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final ##FSTMerge## public final
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements Variant ##FSTMerge## implements Variant
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static final Logger logger = Logger.getLogger(FrameLogger.class.getName()); ##FSTMerge## private static final Logger logger = Logger.getLogger(FrameLogger.class.getName());
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public Protocol getProtocol() {
    return Protocol.HTTP_2;
  } ##FSTMerge## @Override public Protocol getProtocol() {
    return Protocol.HTTP_2;
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static final ByteString CONNECTION_PREFACE
      = ByteString.encodeUtf8("PRI * HTTP/2.0\r\n\r\nSM\r\n\r\n"); ##FSTMerge## private static final ByteString CONNECTION_PREFACE
      = ByteString.encodeUtf8("PRI * HTTP/2.0\r\n\r\nSM\r\n\r\n");
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final int INITIAL_MAX_FRAME_SIZE = 0x4000; ##FSTMerge## static final int INITIAL_MAX_FRAME_SIZE = 0x4000;
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final byte TYPE_DATA = 0x0; ##FSTMerge## static final byte TYPE_DATA = 0x0;
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final byte TYPE_HEADERS = 0x1; ##FSTMerge## static final byte TYPE_HEADERS = 0x1;
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final byte TYPE_PRIORITY = 0x2; ##FSTMerge## static final byte TYPE_PRIORITY = 0x2;
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final byte TYPE_RST_STREAM = 0x3; ##FSTMerge## static final byte TYPE_RST_STREAM = 0x3;
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final byte TYPE_SETTINGS = 0x4; ##FSTMerge## static final byte TYPE_SETTINGS = 0x4;
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final byte TYPE_PUSH_PROMISE = 0x5; ##FSTMerge## static final byte TYPE_PUSH_PROMISE = 0x5;
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final byte TYPE_PING = 0x6; ##FSTMerge## static final byte TYPE_PING = 0x6;
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final byte TYPE_GOAWAY = 0x7; ##FSTMerge## static final byte TYPE_GOAWAY = 0x7;
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final byte TYPE_WINDOW_UPDATE = 0x8; ##FSTMerge## static final byte TYPE_WINDOW_UPDATE = 0x8;
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final byte TYPE_CONTINUATION = 0x9; ##FSTMerge## static final byte TYPE_CONTINUATION = 0x9;
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final byte FLAG_NONE = 0x0; ##FSTMerge## static final byte FLAG_NONE = 0x0;
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final byte FLAG_ACK = 0x1; ##FSTMerge## static final byte FLAG_ACK = 0x1;
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final byte FLAG_END_STREAM = 0x1; ##FSTMerge## static final byte FLAG_END_STREAM = 0x1;
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final byte FLAG_END_HEADERS = 0x4; ##FSTMerge## static final byte FLAG_END_HEADERS = 0x4;
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final byte FLAG_END_PUSH_PROMISE = 0x4; ##FSTMerge## static final byte FLAG_END_PUSH_PROMISE = 0x4;
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final byte FLAG_PADDED = 0x8; ##FSTMerge## static final byte FLAG_PADDED = 0x8;
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final byte FLAG_PRIORITY = 0x20; ##FSTMerge## static final byte FLAG_PRIORITY = 0x20;
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final byte FLAG_COMPRESSED = 0x20; ##FSTMerge## static final byte FLAG_COMPRESSED = 0x20;
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public FrameReader newReader(BufferedSource source, boolean client) {
    return new Reader(source, 4096, client);
  } ##FSTMerge## @Override public FrameReader newReader(BufferedSource source, boolean client) {
    return new Reader(source, 4096, client);
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public FrameWriter newWriter(BufferedSink sink, boolean client) {
    return new Writer(sink, client);
  } ##FSTMerge## @Override public FrameWriter newWriter(BufferedSink sink, boolean client) {
    return new Writer(sink, client);
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final ##FSTMerge## static final
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements FrameReader ##FSTMerge## implements FrameReader
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final BufferedSource source; ##FSTMerge## private final BufferedSource source;
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final ContinuationSource continuation; ##FSTMerge## private final ContinuationSource continuation;
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final boolean client; ##FSTMerge## private final boolean client;
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final HpackDraft09.Reader hpackReader; ##FSTMerge## final HpackDraft09.Reader hpackReader;
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## Reader(BufferedSource source, int headerTableSize, boolean client) {
      this.source = source;
      this.client = client;
      this.continuation = new ContinuationSource(this.source);
      this.hpackReader = new HpackDraft09.Reader(headerTableSize, continuation);
    } ##FSTMerge## Reader(BufferedSource source, int headerTableSize, boolean client) {
      this.source = source;
      this.client = client;
      this.continuation = new ContinuationSource(this.source);
      this.hpackReader = new HpackDraft09.Reader(headerTableSize, continuation);
    }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public void readConnectionPreface() throws IOException {
      if (client) return; // Nothing to read; servers doesn't send a connection preface!
      ByteString connectionPreface = source.readByteString(CONNECTION_PREFACE.size());
      if (logger.isLoggable(FINE)) logger.fine(format("<< CONNECTION %s", connectionPreface.hex()));
      if (!CONNECTION_PREFACE.equals(connectionPreface)) {
        throw ioException("Expected a connection header but was %s", connectionPreface.utf8());
      }
    } ##FSTMerge## @Override public void readConnectionPreface() throws IOException {
      if (client) return; // Nothing to read; servers doesn't send a connection preface!
      ByteString connectionPreface = source.readByteString(CONNECTION_PREFACE.size());
      if (logger.isLoggable(FINE)) logger.fine(format("<< CONNECTION %s", connectionPreface.hex()));
      if (!CONNECTION_PREFACE.equals(connectionPreface)) {
        throw ioException("Expected a connection header but was %s", connectionPreface.utf8());
      }
    }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public boolean nextFrame(Handler handler) throws IOException {
      try {
        source.require(9); // Frame header size
      } catch (IOException e) {
        return false; // This might be a normal socket close.
      }

      /*  0                   1                   2                   3
       *  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
       * +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       * |                 Length (24)                   |
       * +---------------+---------------+---------------+
       * |   Type (8)    |   Flags (8)   |
       * +-+-+-----------+---------------+-------------------------------+
       * |R|                 Stream Identifier (31)                      |
       * +=+=============================================================+
       * |                   Frame Payload (0...)                      ...
       * +---------------------------------------------------------------+
       */
      int length = readMedium(source);
      if (length < 0 || length > INITIAL_MAX_FRAME_SIZE) {
        throw ioException("FRAME_SIZE_ERROR: %s", length);
      }
      byte type = (byte) (source.readByte() & 0xff);
      byte flags = (byte) (source.readByte() & 0xff);
      int streamId = (source.readInt() & 0x7fffffff); // Ignore reserved bit.
      if (logger.isLoggable(FINE)) logger.fine(formatHeader(true, streamId, length, type, flags));

      switch (type) {
        case TYPE_DATA:
          readData(handler, length, flags, streamId);
          break;

        case TYPE_HEADERS:
          readHeaders(handler, length, flags, streamId);
          break;

        case TYPE_PRIORITY:
          readPriority(handler, length, flags, streamId);
          break;

        case TYPE_RST_STREAM:
          readRstStream(handler, length, flags, streamId);
          break;

        case TYPE_SETTINGS:
          readSettings(handler, length, flags, streamId);
          break;

        case TYPE_PUSH_PROMISE:
          readPushPromise(handler, length, flags, streamId);
          break;

        case TYPE_PING:
          readPing(handler, length, flags, streamId);
          break;

        case TYPE_GOAWAY:
          readGoAway(handler, length, flags, streamId);
          break;

        case TYPE_WINDOW_UPDATE:
          readWindowUpdate(handler, length, flags, streamId);
          break;

        default:
          // Implementations MUST discard frames that have unknown or unsupported types.
          source.skip(length);
      }
      return true;
    } ##FSTMerge## @Override public boolean nextFrame(Handler handler) throws IOException {
      try {
        source.require(9); // Frame header size
      } catch (IOException e) {
        return false; // This might be a normal socket close.
      }

      /*  0                   1                   2                   3
       *  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
       * +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       * |                 Length (24)                   |
       * +---------------+---------------+---------------+
       * |   Type (8)    |   Flags (8)   |
       * +-+-+-----------+---------------+-------------------------------+
       * |R|                 Stream Identifier (31)                      |
       * +=+=============================================================+
       * |                   Frame Payload (0...)                      ...
       * +---------------------------------------------------------------+
       */
      int length = readMedium(source);
      if (length < 0 || length > INITIAL_MAX_FRAME_SIZE) {
        throw ioException("FRAME_SIZE_ERROR: %s", length);
      }
      byte type = (byte) (source.readByte() & 0xff);
      byte flags = (byte) (source.readByte() & 0xff);
      int streamId = (source.readInt() & 0x7fffffff); // Ignore reserved bit.
      if (logger.isLoggable(FINE)) logger.fine(formatHeader(true, streamId, length, type, flags));

      switch (type) {
        case TYPE_DATA:
          readData(handler, length, flags, streamId);
          break;

        case TYPE_HEADERS:
          readHeaders(handler, length, flags, streamId);
          break;

        case TYPE_PRIORITY:
          readPriority(handler, length, flags, streamId);
          break;

        case TYPE_RST_STREAM:
          readRstStream(handler, length, flags, streamId);
          break;

        case TYPE_SETTINGS:
          readSettings(handler, length, flags, streamId);
          break;

        case TYPE_PUSH_PROMISE:
          readPushPromise(handler, length, flags, streamId);
          break;

        case TYPE_PING:
          readPing(handler, length, flags, streamId);
          break;

        case TYPE_GOAWAY:
          readGoAway(handler, length, flags, streamId);
          break;

        case TYPE_WINDOW_UPDATE:
          readWindowUpdate(handler, length, flags, streamId);
          break;

        default:
          // Implementations MUST discard frames that have unknown or unsupported types.
          source.skip(length);
      }
      return true;
    }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void readHeaders(Handler handler, int length, byte flags, int streamId)
        throws IOException {
      if (streamId == 0) throw ioException("PROTOCOL_ERROR: TYPE_HEADERS streamId == 0");

      boolean endStream = (flags & FLAG_END_STREAM) != 0;

      short padding = (flags & FLAG_PADDED) != 0 ? (short) (source.readByte() & 0xff) : 0;

      if ((flags & FLAG_PRIORITY) != 0) {
        readPriority(handler, streamId);
        length -= 5; // account for above read.
      }

      length = lengthWithoutPadding(length, flags, padding);

      List<Header> headerBlock = readHeaderBlock(length, padding, flags, streamId);

      handler.headers(false, endStream, streamId, -1, headerBlock, HeadersMode.HTTP_20_HEADERS);
    } ##FSTMerge## private void readHeaders(Handler handler, int length, byte flags, int streamId)
        throws IOException {
      if (streamId == 0) throw ioException("PROTOCOL_ERROR: TYPE_HEADERS streamId == 0");

      boolean endStream = (flags & FLAG_END_STREAM) != 0;

      short padding = (flags & FLAG_PADDED) != 0 ? (short) (source.readByte() & 0xff) : 0;

      if ((flags & FLAG_PRIORITY) != 0) {
        readPriority(handler, streamId);
        length -= 5; // account for above read.
      }

      length = lengthWithoutPadding(length, flags, padding);

      List<Header> headerBlock = readHeaderBlock(length, padding, flags, streamId);

      handler.headers(false, endStream, streamId, -1, headerBlock, HeadersMode.HTTP_20_HEADERS);
    }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private List<Header> readHeaderBlock(int length, short padding, byte flags, int streamId)
        throws IOException {
      continuation.length = continuation.left = length;
      continuation.padding = padding;
      continuation.flags = flags;
      continuation.streamId = streamId;

      // TODO: Concat multi-value headers with 0x0, except COOKIE, which uses 0x3B, 0x20.
      // http://tools.ietf.org/html/draft-ietf-httpbis-http2-15#section-8.1.2.5
      hpackReader.readHeaders();
      return hpackReader.getAndResetHeaderList();
    } ##FSTMerge## private List<Header> readHeaderBlock(int length, short padding, byte flags, int streamId)
        throws IOException {
      continuation.length = continuation.left = length;
      continuation.padding = padding;
      continuation.flags = flags;
      continuation.streamId = streamId;

      // TODO: Concat multi-value headers with 0x0, except COOKIE, which uses 0x3B, 0x20.
      // http://tools.ietf.org/html/draft-ietf-httpbis-http2-15#section-8.1.2.5
      hpackReader.readHeaders();
      return hpackReader.getAndResetHeaderList();
    }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void readData(Handler handler, int length, byte flags, int streamId)
        throws IOException {
      // TODO: checkState open or half-closed (local) or raise STREAM_CLOSED
      boolean inFinished = (flags & FLAG_END_STREAM) != 0;
      boolean gzipped = (flags & FLAG_COMPRESSED) != 0;
      if (gzipped) {
        throw ioException("PROTOCOL_ERROR: FLAG_COMPRESSED without SETTINGS_COMPRESS_DATA");
      }

      short padding = (flags & FLAG_PADDED) != 0 ? (short) (source.readByte() & 0xff) : 0;
      length = lengthWithoutPadding(length, flags, padding);

      handler.data(inFinished, streamId, source, length);
      source.skip(padding);
    } ##FSTMerge## private void readData(Handler handler, int length, byte flags, int streamId)
        throws IOException {
      // TODO: checkState open or half-closed (local) or raise STREAM_CLOSED
      boolean inFinished = (flags & FLAG_END_STREAM) != 0;
      boolean gzipped = (flags & FLAG_COMPRESSED) != 0;
      if (gzipped) {
        throw ioException("PROTOCOL_ERROR: FLAG_COMPRESSED without SETTINGS_COMPRESS_DATA");
      }

      short padding = (flags & FLAG_PADDED) != 0 ? (short) (source.readByte() & 0xff) : 0;
      length = lengthWithoutPadding(length, flags, padding);

      handler.data(inFinished, streamId, source, length);
      source.skip(padding);
    }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void readPriority(Handler handler, int length, byte flags, int streamId)
        throws IOException {
      if (length != 5) throw ioException("TYPE_PRIORITY length: %d != 5", length);
      if (streamId == 0) throw ioException("TYPE_PRIORITY streamId == 0");
      readPriority(handler, streamId);
    } ##FSTMerge## private void readPriority(Handler handler, int length, byte flags, int streamId)
        throws IOException {
      if (length != 5) throw ioException("TYPE_PRIORITY length: %d != 5", length);
      if (streamId == 0) throw ioException("TYPE_PRIORITY streamId == 0");
      readPriority(handler, streamId);
    }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void readPriority(Handler handler, int streamId) throws IOException {
      int w1 = source.readInt();
      boolean exclusive = (w1 & 0x80000000) != 0;
      int streamDependency = (w1 & 0x7fffffff);
      int weight = (source.readByte() & 0xff) + 1;
      handler.priority(streamId, streamDependency, weight, exclusive);
    } ##FSTMerge## private void readPriority(Handler handler, int streamId) throws IOException {
      int w1 = source.readInt();
      boolean exclusive = (w1 & 0x80000000) != 0;
      int streamDependency = (w1 & 0x7fffffff);
      int weight = (source.readByte() & 0xff) + 1;
      handler.priority(streamId, streamDependency, weight, exclusive);
    }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void readRstStream(Handler handler, int length, byte flags, int streamId)
        throws IOException {
      if (length != 4) throw ioException("TYPE_RST_STREAM length: %d != 4", length);
      if (streamId == 0) throw ioException("TYPE_RST_STREAM streamId == 0");
      int errorCodeInt = source.readInt();
      ErrorCode errorCode = ErrorCode.fromHttp2(errorCodeInt);
      if (errorCode == null) {
        throw ioException("TYPE_RST_STREAM unexpected error code: %d", errorCodeInt);
      }
      handler.rstStream(streamId, errorCode);
    } ##FSTMerge## private void readRstStream(Handler handler, int length, byte flags, int streamId)
        throws IOException {
      if (length != 4) throw ioException("TYPE_RST_STREAM length: %d != 4", length);
      if (streamId == 0) throw ioException("TYPE_RST_STREAM streamId == 0");
      int errorCodeInt = source.readInt();
      ErrorCode errorCode = ErrorCode.fromHttp2(errorCodeInt);
      if (errorCode == null) {
        throw ioException("TYPE_RST_STREAM unexpected error code: %d", errorCodeInt);
      }
      handler.rstStream(streamId, errorCode);
    }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void readSettings(Handler handler, int length, byte flags, int streamId)
        throws IOException {
      if (streamId != 0) throw ioException("TYPE_SETTINGS streamId != 0");
      if ((flags & FLAG_ACK) != 0) {
        if (length != 0) throw ioException("FRAME_SIZE_ERROR ack frame should be empty!");
        handler.ackSettings();
        return;
      }

      if (length % 6 != 0) throw ioException("TYPE_SETTINGS length %% 6 != 0: %s", length);
      Settings settings = new Settings();
      for (int i = 0; i < length; i += 6) {
        short id = source.readShort();
        int value = source.readInt();

        switch (id) {
          case 1: // SETTINGS_HEADER_TABLE_SIZE
            break;
          case 2: // SETTINGS_ENABLE_PUSH
            if (value != 0 && value != 1) {
              throw ioException("PROTOCOL_ERROR SETTINGS_ENABLE_PUSH != 0 or 1");
            }
            break;
          case 3: // SETTINGS_MAX_CONCURRENT_STREAMS
            id = 4; // Renumbered in draft 10.
            break;
          case 4: // SETTINGS_INITIAL_WINDOW_SIZE
            id = 7; // Renumbered in draft 10.
            if (value < 0) {
              throw ioException("PROTOCOL_ERROR SETTINGS_INITIAL_WINDOW_SIZE > 2^31 - 1");
            }
            break;
          case 5: // SETTINGS_MAX_FRAME_SIZE
            if (value < INITIAL_MAX_FRAME_SIZE || value > 16777215) {
              throw ioException("PROTOCOL_ERROR SETTINGS_MAX_FRAME_SIZE: %s", value);
            }
            break;
          case 6: // SETTINGS_MAX_HEADER_LIST_SIZE
            break; // Advisory only, so ignored.
          default:
            throw ioException("PROTOCOL_ERROR invalid settings id: %s", id);
        }
        settings.set(id, 0, value);
      }
      handler.settings(false, settings);
      if (settings.getHeaderTableSize() >= 0) {
        hpackReader.maxHeaderTableByteCountSetting(settings.getHeaderTableSize());
      }
    } ##FSTMerge## private void readSettings(Handler handler, int length, byte flags, int streamId)
        throws IOException {
      if (streamId != 0) throw ioException("TYPE_SETTINGS streamId != 0");
      if ((flags & FLAG_ACK) != 0) {
        if (length != 0) throw ioException("FRAME_SIZE_ERROR ack frame should be empty!");
        handler.ackSettings();
        return;
      }

      if (length % 6 != 0) throw ioException("TYPE_SETTINGS length %% 6 != 0: %s", length);
      Settings settings = new Settings();
      for (int i = 0; i < length; i += 6) {
        short id = source.readShort();
        int value = source.readInt();

        switch (id) {
          case 1: // SETTINGS_HEADER_TABLE_SIZE
            break;
          case 2: // SETTINGS_ENABLE_PUSH
            if (value != 0 && value != 1) {
              throw ioException("PROTOCOL_ERROR SETTINGS_ENABLE_PUSH != 0 or 1");
            }
            break;
          case 3: // SETTINGS_MAX_CONCURRENT_STREAMS
            id = 4; // Renumbered in draft 10.
            break;
          case 4: // SETTINGS_INITIAL_WINDOW_SIZE
            id = 7; // Renumbered in draft 10.
            if (value < 0) {
              throw ioException("PROTOCOL_ERROR SETTINGS_INITIAL_WINDOW_SIZE > 2^31 - 1");
            }
            break;
          case 5: // SETTINGS_MAX_FRAME_SIZE
            if (value < INITIAL_MAX_FRAME_SIZE || value > 16777215) {
              throw ioException("PROTOCOL_ERROR SETTINGS_MAX_FRAME_SIZE: %s", value);
            }
            break;
          case 6: // SETTINGS_MAX_HEADER_LIST_SIZE
            break; // Advisory only, so ignored.
          default:
            throw ioException("PROTOCOL_ERROR invalid settings id: %s", id);
        }
        settings.set(id, 0, value);
      }
      handler.settings(false, settings);
      if (settings.getHeaderTableSize() >= 0) {
        hpackReader.maxHeaderTableByteCountSetting(settings.getHeaderTableSize());
      }
    }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void readPushPromise(Handler handler, int length, byte flags, int streamId)
        throws IOException {
      if (streamId == 0) {
        throw ioException("PROTOCOL_ERROR: TYPE_PUSH_PROMISE streamId == 0");
      }
      short padding = (flags & FLAG_PADDED) != 0 ? (short) (source.readByte() & 0xff) : 0;
      int promisedStreamId = source.readInt() & 0x7fffffff;
      length -= 4; // account for above read.
      length = lengthWithoutPadding(length, flags, padding);
      List<Header> headerBlock = readHeaderBlock(length, padding, flags, streamId);
      handler.pushPromise(streamId, promisedStreamId, headerBlock);
    } ##FSTMerge## private void readPushPromise(Handler handler, int length, byte flags, int streamId)
        throws IOException {
      if (streamId == 0) {
        throw ioException("PROTOCOL_ERROR: TYPE_PUSH_PROMISE streamId == 0");
      }
      short padding = (flags & FLAG_PADDED) != 0 ? (short) (source.readByte() & 0xff) : 0;
      int promisedStreamId = source.readInt() & 0x7fffffff;
      length -= 4; // account for above read.
      length = lengthWithoutPadding(length, flags, padding);
      List<Header> headerBlock = readHeaderBlock(length, padding, flags, streamId);
      handler.pushPromise(streamId, promisedStreamId, headerBlock);
    }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void readPing(Handler handler, int length, byte flags, int streamId)
        throws IOException {
      if (length != 8) throw ioException("TYPE_PING length != 8: %s", length);
      if (streamId != 0) throw ioException("TYPE_PING streamId != 0");
      int payload1 = source.readInt();
      int payload2 = source.readInt();
      boolean ack = (flags & FLAG_ACK) != 0;
      handler.ping(ack, payload1, payload2);
    } ##FSTMerge## private void readPing(Handler handler, int length, byte flags, int streamId)
        throws IOException {
      if (length != 8) throw ioException("TYPE_PING length != 8: %s", length);
      if (streamId != 0) throw ioException("TYPE_PING streamId != 0");
      int payload1 = source.readInt();
      int payload2 = source.readInt();
      boolean ack = (flags & FLAG_ACK) != 0;
      handler.ping(ack, payload1, payload2);
    }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void readGoAway(Handler handler, int length, byte flags, int streamId)
        throws IOException {
      if (length < 8) throw ioException("TYPE_GOAWAY length < 8: %s", length);
      if (streamId != 0) throw ioException("TYPE_GOAWAY streamId != 0");
      int lastStreamId = source.readInt();
      int errorCodeInt = source.readInt();
      int opaqueDataLength = length - 8;
      ErrorCode errorCode = ErrorCode.fromHttp2(errorCodeInt);
      if (errorCode == null) {
        throw ioException("TYPE_GOAWAY unexpected error code: %d", errorCodeInt);
      }
      ByteString debugData = EMPTY;
      if (opaqueDataLength > 0) { // Must read debug data in order to not corrupt the connection.
        debugData = source.readByteString(opaqueDataLength);
      }
      handler.goAway(lastStreamId, errorCode, debugData);
    } ##FSTMerge## private void readGoAway(Handler handler, int length, byte flags, int streamId)
        throws IOException {
      if (length < 8) throw ioException("TYPE_GOAWAY length < 8: %s", length);
      if (streamId != 0) throw ioException("TYPE_GOAWAY streamId != 0");
      int lastStreamId = source.readInt();
      int errorCodeInt = source.readInt();
      int opaqueDataLength = length - 8;
      ErrorCode errorCode = ErrorCode.fromHttp2(errorCodeInt);
      if (errorCode == null) {
        throw ioException("TYPE_GOAWAY unexpected error code: %d", errorCodeInt);
      }
      ByteString debugData = EMPTY;
      if (opaqueDataLength > 0) { // Must read debug data in order to not corrupt the connection.
        debugData = source.readByteString(opaqueDataLength);
      }
      handler.goAway(lastStreamId, errorCode, debugData);
    }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void readWindowUpdate(Handler handler, int length, byte flags, int streamId)
        throws IOException {
      if (length != 4) throw ioException("TYPE_WINDOW_UPDATE length !=4: %s", length);
      long increment = (source.readInt() & 0x7fffffffL);
      if (increment == 0) throw ioException("windowSizeIncrement was 0", increment);
      handler.windowUpdate(streamId, increment);
    } ##FSTMerge## private void readWindowUpdate(Handler handler, int length, byte flags, int streamId)
        throws IOException {
      if (length != 4) throw ioException("TYPE_WINDOW_UPDATE length !=4: %s", length);
      long increment = (source.readInt() & 0x7fffffffL);
      if (increment == 0) throw ioException("windowSizeIncrement was 0", increment);
      handler.windowUpdate(streamId, increment);
    }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public void close() throws IOException {
      source.close();
    } ##FSTMerge## @Override public void close() throws IOException {
      source.close();
    }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final ##FSTMerge## static final
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements FrameWriter ##FSTMerge## implements FrameWriter
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final BufferedSink sink; ##FSTMerge## private final BufferedSink sink;
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final boolean client; ##FSTMerge## private final boolean client;
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final Buffer hpackBuffer; ##FSTMerge## private final Buffer hpackBuffer;
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final HpackDraft09.Writer hpackWriter; ##FSTMerge## private final HpackDraft09.Writer hpackWriter;
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private int maxFrameSize; ##FSTMerge## private int maxFrameSize;
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private boolean closed; ##FSTMerge## private boolean closed;
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## Writer(BufferedSink sink, boolean client) {
      this.sink = sink;
      this.client = client;
      this.hpackBuffer = new Buffer();
      this.hpackWriter = new HpackDraft09.Writer(hpackBuffer);
      this.maxFrameSize = INITIAL_MAX_FRAME_SIZE;
    } ##FSTMerge## Writer(BufferedSink sink, boolean client) {
      this.sink = sink;
      this.client = client;
      this.hpackBuffer = new Buffer();
      this.hpackWriter = new HpackDraft09.Writer(hpackBuffer);
      this.maxFrameSize = INITIAL_MAX_FRAME_SIZE;
    }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public synchronized void flush() throws IOException {
      if (closed) throw new IOException("closed");
      sink.flush();
    } ##FSTMerge## @Override public synchronized void flush() throws IOException {
      if (closed) throw new IOException("closed");
      sink.flush();
    }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public synchronized void ackSettings(Settings peerSettings) throws IOException {
      if (closed) throw new IOException("closed");
      this.maxFrameSize = peerSettings.getMaxFrameSize(maxFrameSize);
      int length = 0;
      byte type = TYPE_SETTINGS;
      byte flags = FLAG_ACK;
      int streamId = 0;
      frameHeader(streamId, length, type, flags);
      sink.flush();
    } ##FSTMerge## @Override public synchronized void ackSettings(Settings peerSettings) throws IOException {
      if (closed) throw new IOException("closed");
      this.maxFrameSize = peerSettings.getMaxFrameSize(maxFrameSize);
      int length = 0;
      byte type = TYPE_SETTINGS;
      byte flags = FLAG_ACK;
      int streamId = 0;
      frameHeader(streamId, length, type, flags);
      sink.flush();
    }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public synchronized void connectionPreface() throws IOException {
      if (closed) throw new IOException("closed");
      if (!client) return; // Nothing to write; servers don't send connection headers!
      if (logger.isLoggable(FINE)) {
        logger.fine(format(">> CONNECTION %s", CONNECTION_PREFACE.hex()));
      }
      sink.write(CONNECTION_PREFACE.toByteArray());
      sink.flush();
    } ##FSTMerge## @Override public synchronized void connectionPreface() throws IOException {
      if (closed) throw new IOException("closed");
      if (!client) return; // Nothing to write; servers don't send connection headers!
      if (logger.isLoggable(FINE)) {
        logger.fine(format(">> CONNECTION %s", CONNECTION_PREFACE.hex()));
      }
      sink.write(CONNECTION_PREFACE.toByteArray());
      sink.flush();
    }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public synchronized void synStream(boolean outFinished, boolean inFinished,
        int streamId, int associatedStreamId, List<Header> headerBlock)
        throws IOException {
      if (inFinished) throw new UnsupportedOperationException();
      if (closed) throw new IOException("closed");
      headers(outFinished, streamId, headerBlock);
    } ##FSTMerge## @Override public synchronized void synStream(boolean outFinished, boolean inFinished,
        int streamId, int associatedStreamId, List<Header> headerBlock)
        throws IOException {
      if (inFinished) throw new UnsupportedOperationException();
      if (closed) throw new IOException("closed");
      headers(outFinished, streamId, headerBlock);
    }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public synchronized void synReply(boolean outFinished, int streamId,
        List<Header> headerBlock) throws IOException {
      if (closed) throw new IOException("closed");
      headers(outFinished, streamId, headerBlock);
    } ##FSTMerge## @Override public synchronized void synReply(boolean outFinished, int streamId,
        List<Header> headerBlock) throws IOException {
      if (closed) throw new IOException("closed");
      headers(outFinished, streamId, headerBlock);
    }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public synchronized void headers(int streamId, List<Header> headerBlock)
        throws IOException {
      if (closed) throw new IOException("closed");
      headers(false, streamId, headerBlock);
    } ##FSTMerge## @Override public synchronized void headers(int streamId, List<Header> headerBlock)
        throws IOException {
      if (closed) throw new IOException("closed");
      headers(false, streamId, headerBlock);
    }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public synchronized void pushPromise(int streamId, int promisedStreamId,
        List<Header> requestHeaders) throws IOException {
      if (closed) throw new IOException("closed");
      if (hpackBuffer.size() != 0) throw new IllegalStateException();
      hpackWriter.writeHeaders(requestHeaders);

      long byteCount = hpackBuffer.size();
      int length = (int) Math.min(maxFrameSize - 4, byteCount);
      byte type = TYPE_PUSH_PROMISE;
      byte flags = byteCount == length ? FLAG_END_HEADERS : 0;
      frameHeader(streamId, length + 4, type, flags);
      sink.writeInt(promisedStreamId & 0x7fffffff);
      sink.write(hpackBuffer, length);

      if (byteCount > length) writeContinuationFrames(streamId, byteCount - length);
    } ##FSTMerge## @Override public synchronized void pushPromise(int streamId, int promisedStreamId,
        List<Header> requestHeaders) throws IOException {
      if (closed) throw new IOException("closed");
      if (hpackBuffer.size() != 0) throw new IllegalStateException();
      hpackWriter.writeHeaders(requestHeaders);

      long byteCount = hpackBuffer.size();
      int length = (int) Math.min(maxFrameSize - 4, byteCount);
      byte type = TYPE_PUSH_PROMISE;
      byte flags = byteCount == length ? FLAG_END_HEADERS : 0;
      frameHeader(streamId, length + 4, type, flags);
      sink.writeInt(promisedStreamId & 0x7fffffff);
      sink.write(hpackBuffer, length);

      if (byteCount > length) writeContinuationFrames(streamId, byteCount - length);
    }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void headers(boolean outFinished, int streamId, List<Header> headerBlock) throws IOException {
      if (closed) throw new IOException("closed");
      if (hpackBuffer.size() != 0) throw new IllegalStateException();
      hpackWriter.writeHeaders(headerBlock);

      long byteCount = hpackBuffer.size();
      int length = (int) Math.min(maxFrameSize, byteCount);
      byte type = TYPE_HEADERS;
      byte flags = byteCount == length ? FLAG_END_HEADERS : 0;
      if (outFinished) flags |= FLAG_END_STREAM;
      frameHeader(streamId, length, type, flags);
      sink.write(hpackBuffer, length);

      if (byteCount > length) writeContinuationFrames(streamId, byteCount - length);
    } ##FSTMerge## void headers(boolean outFinished, int streamId, List<Header> headerBlock) throws IOException {
      if (closed) throw new IOException("closed");
      if (hpackBuffer.size() != 0) throw new IllegalStateException();
      hpackWriter.writeHeaders(headerBlock);

      long byteCount = hpackBuffer.size();
      int length = (int) Math.min(maxFrameSize, byteCount);
      byte type = TYPE_HEADERS;
      byte flags = byteCount == length ? FLAG_END_HEADERS : 0;
      if (outFinished) flags |= FLAG_END_STREAM;
      frameHeader(streamId, length, type, flags);
      sink.write(hpackBuffer, length);

      if (byteCount > length) writeContinuationFrames(streamId, byteCount - length);
    }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void writeContinuationFrames(int streamId, long byteCount) throws IOException {
      while (byteCount > 0) {
        int length = (int) Math.min(maxFrameSize, byteCount);
        byteCount -= length;
        frameHeader(streamId, length, TYPE_CONTINUATION, byteCount == 0 ? FLAG_END_HEADERS : 0);
        sink.write(hpackBuffer, length);
      }
    } ##FSTMerge## private void writeContinuationFrames(int streamId, long byteCount) throws IOException {
      while (byteCount > 0) {
        int length = (int) Math.min(maxFrameSize, byteCount);
        byteCount -= length;
        frameHeader(streamId, length, TYPE_CONTINUATION, byteCount == 0 ? FLAG_END_HEADERS : 0);
        sink.write(hpackBuffer, length);
      }
    }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public synchronized void rstStream(int streamId, ErrorCode errorCode)
        throws IOException {
      if (closed) throw new IOException("closed");
      if (errorCode.spdyRstCode == -1) throw new IllegalArgumentException();

      int length = 4;
      byte type = TYPE_RST_STREAM;
      byte flags = FLAG_NONE;
      frameHeader(streamId, length, type, flags);
      sink.writeInt(errorCode.httpCode);
      sink.flush();
    } ##FSTMerge## @Override public synchronized void rstStream(int streamId, ErrorCode errorCode)
        throws IOException {
      if (closed) throw new IOException("closed");
      if (errorCode.spdyRstCode == -1) throw new IllegalArgumentException();

      int length = 4;
      byte type = TYPE_RST_STREAM;
      byte flags = FLAG_NONE;
      frameHeader(streamId, length, type, flags);
      sink.writeInt(errorCode.httpCode);
      sink.flush();
    }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public int maxDataLength() {
      return maxFrameSize;
    } ##FSTMerge## @Override public int maxDataLength() {
      return maxFrameSize;
    }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public synchronized void data(boolean outFinished, int streamId, Buffer source,
        int byteCount) throws IOException {
      if (closed) throw new IOException("closed");
      byte flags = FLAG_NONE;
      if (outFinished) flags |= FLAG_END_STREAM;
      dataFrame(streamId, flags, source, byteCount);
    } ##FSTMerge## @Override public synchronized void data(boolean outFinished, int streamId, Buffer source,
        int byteCount) throws IOException {
      if (closed) throw new IOException("closed");
      byte flags = FLAG_NONE;
      if (outFinished) flags |= FLAG_END_STREAM;
      dataFrame(streamId, flags, source, byteCount);
    }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void dataFrame(int streamId, byte flags, Buffer buffer, int byteCount) throws IOException {
      byte type = TYPE_DATA;
      frameHeader(streamId, byteCount, type, flags);
      if (byteCount > 0) {
        sink.write(buffer, byteCount);
      }
    } ##FSTMerge## void dataFrame(int streamId, byte flags, Buffer buffer, int byteCount) throws IOException {
      byte type = TYPE_DATA;
      frameHeader(streamId, byteCount, type, flags);
      if (byteCount > 0) {
        sink.write(buffer, byteCount);
      }
    }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public synchronized void settings(Settings settings) throws IOException {
      if (closed) throw new IOException("closed");
      int length = settings.size() * 6;
      byte type = TYPE_SETTINGS;
      byte flags = FLAG_NONE;
      int streamId = 0;
      frameHeader(streamId, length, type, flags);
      for (int i = 0; i < Settings.COUNT; i++) {
        if (!settings.isSet(i)) continue;
        int id = i;
        if (id == 4) id = 3; // SETTINGS_MAX_CONCURRENT_STREAMS renumbered.
        else if (id == 7) id = 4; // SETTINGS_INITIAL_WINDOW_SIZE renumbered.
        sink.writeShort(id);
        sink.writeInt(settings.get(i));
      }
      sink.flush();
    } ##FSTMerge## @Override public synchronized void settings(Settings settings) throws IOException {
      if (closed) throw new IOException("closed");
      int length = settings.size() * 6;
      byte type = TYPE_SETTINGS;
      byte flags = FLAG_NONE;
      int streamId = 0;
      frameHeader(streamId, length, type, flags);
      for (int i = 0; i < Settings.COUNT; i++) {
        if (!settings.isSet(i)) continue;
        int id = i;
        if (id == 4) id = 3; // SETTINGS_MAX_CONCURRENT_STREAMS renumbered.
        else if (id == 7) id = 4; // SETTINGS_INITIAL_WINDOW_SIZE renumbered.
        sink.writeShort(id);
        sink.writeInt(settings.get(i));
      }
      sink.flush();
    }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public synchronized void ping(boolean ack, int payload1, int payload2)
        throws IOException {
      if (closed) throw new IOException("closed");
      int length = 8;
      byte type = TYPE_PING;
      byte flags = ack ? FLAG_ACK : FLAG_NONE;
      int streamId = 0;
      frameHeader(streamId, length, type, flags);
      sink.writeInt(payload1);
      sink.writeInt(payload2);
      sink.flush();
    } ##FSTMerge## @Override public synchronized void ping(boolean ack, int payload1, int payload2)
        throws IOException {
      if (closed) throw new IOException("closed");
      int length = 8;
      byte type = TYPE_PING;
      byte flags = ack ? FLAG_ACK : FLAG_NONE;
      int streamId = 0;
      frameHeader(streamId, length, type, flags);
      sink.writeInt(payload1);
      sink.writeInt(payload2);
      sink.flush();
    }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public synchronized void goAway(int lastGoodStreamId, ErrorCode errorCode,
        byte[] debugData) throws IOException {
      if (closed) throw new IOException("closed");
      if (errorCode.httpCode == -1) throw illegalArgument("errorCode.httpCode == -1");
      int length = 8 + debugData.length;
      byte type = TYPE_GOAWAY;
      byte flags = FLAG_NONE;
      int streamId = 0;
      frameHeader(streamId, length, type, flags);
      sink.writeInt(lastGoodStreamId);
      sink.writeInt(errorCode.httpCode);
      if (debugData.length > 0) {
        sink.write(debugData);
      }
      sink.flush();
    } ##FSTMerge## @Override public synchronized void goAway(int lastGoodStreamId, ErrorCode errorCode,
        byte[] debugData) throws IOException {
      if (closed) throw new IOException("closed");
      if (errorCode.httpCode == -1) throw illegalArgument("errorCode.httpCode == -1");
      int length = 8 + debugData.length;
      byte type = TYPE_GOAWAY;
      byte flags = FLAG_NONE;
      int streamId = 0;
      frameHeader(streamId, length, type, flags);
      sink.writeInt(lastGoodStreamId);
      sink.writeInt(errorCode.httpCode);
      if (debugData.length > 0) {
        sink.write(debugData);
      }
      sink.flush();
    }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public synchronized void windowUpdate(int streamId, long windowSizeIncrement)
        throws IOException {
      if (closed) throw new IOException("closed");
      if (windowSizeIncrement == 0 || windowSizeIncrement > 0x7fffffffL) {
        throw illegalArgument("windowSizeIncrement == 0 || windowSizeIncrement > 0x7fffffffL: %s",
            windowSizeIncrement);
      }
      int length = 4;
      byte type = TYPE_WINDOW_UPDATE;
      byte flags = FLAG_NONE;
      frameHeader(streamId, length, type, flags);
      sink.writeInt((int) windowSizeIncrement);
      sink.flush();
    } ##FSTMerge## @Override public synchronized void windowUpdate(int streamId, long windowSizeIncrement)
        throws IOException {
      if (closed) throw new IOException("closed");
      if (windowSizeIncrement == 0 || windowSizeIncrement > 0x7fffffffL) {
        throw illegalArgument("windowSizeIncrement == 0 || windowSizeIncrement > 0x7fffffffL: %s",
            windowSizeIncrement);
      }
      int length = 4;
      byte type = TYPE_WINDOW_UPDATE;
      byte flags = FLAG_NONE;
      frameHeader(streamId, length, type, flags);
      sink.writeInt((int) windowSizeIncrement);
      sink.flush();
    }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public synchronized void close() throws IOException {
      closed = true;
      sink.close();
    } ##FSTMerge## @Override public synchronized void close() throws IOException {
      closed = true;
      sink.close();
    }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## void frameHeader(int streamId, int length, byte type, byte flags) throws IOException {
      if (logger.isLoggable(FINE)) logger.fine(formatHeader(false, streamId, length, type, flags));
      if (length > maxFrameSize) {
        throw illegalArgument("FRAME_SIZE_ERROR length > %d: %d", maxFrameSize, length);
      }
      if ((streamId & 0x80000000) != 0) throw illegalArgument("reserved bit set: %s", streamId);
      writeMedium(sink, length);
      sink.writeByte(type & 0xff);
      sink.writeByte(flags & 0xff);
      sink.writeInt(streamId & 0x7fffffff);
    } ##FSTMerge## void frameHeader(int streamId, int length, byte type, byte flags) throws IOException {
      if (logger.isLoggable(FINE)) logger.fine(formatHeader(false, streamId, length, type, flags));
      if (length > maxFrameSize) {
        throw illegalArgument("FRAME_SIZE_ERROR length > %d: %d", maxFrameSize, length);
      }
      if ((streamId & 0x80000000) != 0) throw illegalArgument("reserved bit set: %s", streamId);
      writeMedium(sink, length);
      sink.writeByte(type & 0xff);
      sink.writeByte(flags & 0xff);
      sink.writeInt(streamId & 0x7fffffff);
    }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static IllegalArgumentException illegalArgument(String message, Object... args) {
    throw new IllegalArgumentException(format(message, args));
  } ##FSTMerge## private static IllegalArgumentException illegalArgument(String message, Object... args) {
    throw new IllegalArgumentException(format(message, args));
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static IOException ioException(String message, Object... args) throws IOException {
    throw new IOException(format(message, args));
  } ##FSTMerge## private static IOException ioException(String message, Object... args) throws IOException {
    throw new IOException(format(message, args));
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final ##FSTMerge## static final
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements Source ##FSTMerge## implements Source
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final BufferedSource source; ##FSTMerge## private final BufferedSource source;
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## int length; ##FSTMerge## int length;
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## byte flags; ##FSTMerge## byte flags;
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## int streamId; ##FSTMerge## int streamId;
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## int left; ##FSTMerge## int left;
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## short padding; ##FSTMerge## short padding;
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ContinuationSource(BufferedSource source) {
      this.source = source;
    } ##FSTMerge## public ContinuationSource(BufferedSource source) {
      this.source = source;
    }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public long read(Buffer sink, long byteCount) throws IOException {
      while (left == 0) {
        source.skip(padding);
        padding = 0;
        if ((flags & FLAG_END_HEADERS) != 0) return -1;
        readContinuationHeader();
        // TODO: test case for empty continuation header?
      }

      long read = source.read(sink, Math.min(byteCount, left));
      if (read == -1) return -1;
      left -= read;
      return read;
    } ##FSTMerge## @Override public long read(Buffer sink, long byteCount) throws IOException {
      while (left == 0) {
        source.skip(padding);
        padding = 0;
        if ((flags & FLAG_END_HEADERS) != 0) return -1;
        readContinuationHeader();
        // TODO: test case for empty continuation header?
      }

      long read = source.read(sink, Math.min(byteCount, left));
      if (read == -1) return -1;
      left -= read;
      return read;
    }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public Timeout timeout() {
      return source.timeout();
    } ##FSTMerge## @Override public Timeout timeout() {
      return source.timeout();
    }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override public void close() throws IOException {
    } ##FSTMerge## @Override public void close() throws IOException {
    }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void readContinuationHeader() throws IOException {
      int previousStreamId = streamId;

      length = left = readMedium(source);
      byte type = (byte) (source.readByte() & 0xff);
      flags = (byte) (source.readByte() & 0xff);
      if (logger.isLoggable(FINE)) logger.fine(formatHeader(true, streamId, length, type, flags));
      streamId = (source.readInt() & 0x7fffffff);
      if (type != TYPE_CONTINUATION) throw ioException("%s != TYPE_CONTINUATION", type);
      if (streamId != previousStreamId) throw ioException("TYPE_CONTINUATION streamId changed");
    } ##FSTMerge## private void readContinuationHeader() throws IOException {
      int previousStreamId = streamId;

      length = left = readMedium(source);
      byte type = (byte) (source.readByte() & 0xff);
      flags = (byte) (source.readByte() & 0xff);
      if (logger.isLoggable(FINE)) logger.fine(formatHeader(true, streamId, length, type, flags));
      streamId = (source.readInt() & 0x7fffffff);
      if (type != TYPE_CONTINUATION) throw ioException("%s != TYPE_CONTINUATION", type);
      if (streamId != previousStreamId) throw ioException("TYPE_CONTINUATION streamId changed");
    }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static int lengthWithoutPadding(int length, byte flags, short padding)
      throws IOException {
    if ((flags & FLAG_PADDED) != 0) length--; // Account for reading the padding length.
    if (padding > length) {
      throw ioException("PROTOCOL_ERROR padding %s > remaining length %s", padding, length);
    }
    return (short) (length - padding);
  } ##FSTMerge## private static int lengthWithoutPadding(int length, byte flags, short padding)
      throws IOException {
    if ((flags & FLAG_PADDED) != 0) length--; // Account for reading the padding length.
    if (padding > length) {
      throw ioException("PROTOCOL_ERROR padding %s > remaining length %s", padding, length);
    }
    return (short) (length - padding);
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final ##FSTMerge## static final
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static String formatHeader(boolean inbound, int streamId, int length, byte type, byte flags) {
      String formattedType = type < TYPES.length ? TYPES[type] : format("0x%02x", type);
      String formattedFlags = formatFlags(type, flags);
      return format("%s 0x%08x %5d %-13s %s", inbound ? "<<" : ">>", streamId, length,
          formattedType, formattedFlags);
    } ##FSTMerge## static String formatHeader(boolean inbound, int streamId, int length, byte type, byte flags) {
      String formattedType = type < TYPES.length ? TYPES[type] : format("0x%02x", type);
      String formattedFlags = formatFlags(type, flags);
      return format("%s 0x%08x %5d %-13s %s", inbound ? "<<" : ">>", streamId, length,
          formattedType, formattedFlags);
    }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static String formatFlags(byte type, byte flags) {
      if (flags == 0) return "";
      switch (type) { // Special case types that have 0 or 1 flag.
        case TYPE_SETTINGS:
        case TYPE_PING:
          return flags == FLAG_ACK ? "ACK" : BINARY[flags];
        case TYPE_PRIORITY:
        case TYPE_RST_STREAM:
        case TYPE_GOAWAY:
        case TYPE_WINDOW_UPDATE:
          return BINARY[flags];
      }
      String result = flags < FLAGS.length ? FLAGS[flags] : BINARY[flags];
      // Special case types that have overlap flag values.
      if (type == TYPE_PUSH_PROMISE && (flags & FLAG_END_PUSH_PROMISE) != 0) {
        return result.replace("HEADERS", "PUSH_PROMISE"); // TODO: Avoid allocation.
      } else if (type == TYPE_DATA && (flags & FLAG_COMPRESSED) != 0) {
        return result.replace("PRIORITY", "COMPRESSED"); // TODO: Avoid allocation.
      }
      return result;
    } ##FSTMerge## static String formatFlags(byte type, byte flags) {
      if (flags == 0) return "";
      switch (type) { // Special case types that have 0 or 1 flag.
        case TYPE_SETTINGS:
        case TYPE_PING:
          return flags == FLAG_ACK ? "ACK" : BINARY[flags];
        case TYPE_PRIORITY:
        case TYPE_RST_STREAM:
        case TYPE_GOAWAY:
        case TYPE_WINDOW_UPDATE:
          return BINARY[flags];
      }
      String result = flags < FLAGS.length ? FLAGS[flags] : BINARY[flags];
      // Special case types that have overlap flag values.
      if (type == TYPE_PUSH_PROMISE && (flags & FLAG_END_PUSH_PROMISE) != 0) {
        return result.replace("HEADERS", "PUSH_PROMISE"); // TODO: Avoid allocation.
      } else if (type == TYPE_DATA && (flags & FLAG_COMPRESSED) != 0) {
        return result.replace("PRIORITY", "COMPRESSED"); // TODO: Avoid allocation.
      }
      return result;
    }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static final String[] TYPES = new String[] {
        "DATA",
        "HEADERS",
        "PRIORITY",
        "RST_STREAM",
        "SETTINGS",
        "PUSH_PROMISE",
        "PING",
        "GOAWAY",
        "WINDOW_UPDATE",
        "CONTINUATION"
    }; ##FSTMerge## private static final String[] TYPES = new String[] {
        "DATA",
        "HEADERS",
        "PRIORITY",
        "RST_STREAM",
        "SETTINGS",
        "PUSH_PROMISE",
        "PING",
        "GOAWAY",
        "WINDOW_UPDATE",
        "CONTINUATION"
    };
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static final String[] FLAGS = new String[0x40]; ##FSTMerge## private static final String[] FLAGS = new String[0x40];
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static final String[] BINARY = new String[256]; ##FSTMerge## private static final String[] BINARY = new String[256];
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static int readMedium(BufferedSource source) throws IOException {
    return (source.readByte() & 0xff) << 16
        |  (source.readByte() & 0xff) <<  8
        |  (source.readByte() & 0xff);
  } ##FSTMerge## private static int readMedium(BufferedSource source) throws IOException {
    return (source.readByte() & 0xff) << 16
        |  (source.readByte() & 0xff) <<  8
        |  (source.readByte() & 0xff);
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static void writeMedium(BufferedSink sink, int i) throws IOException {
    sink.writeByte((i >>> 16) & 0xff);
    sink.writeByte((i >>>  8) & 0xff);
    sink.writeByte(i          & 0xff);
  } ##FSTMerge## private static void writeMedium(BufferedSink sink, int i) throws IOException {
    sink.writeByte((i >>> 16) & 0xff);
    sink.writeByte((i >>>  8) & 0xff);
    sink.writeByte(i          & 0xff);
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft15.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft15Test.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final Buffer frame = new Buffer(); ##FSTMerge## final Buffer frame = new Buffer();
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft15Test.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final FrameReader fr = new Http20Draft15.Reader(frame, 4096, false); ##FSTMerge## final FrameReader fr = new Http20Draft15.Reader(frame, 4096, false);
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft15Test.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final int expectedStreamId = 15; ##FSTMerge## final int expectedStreamId = 15;
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft15Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void unknownFrameTypeSkipped() throws IOException {
    writeMedium(frame, 4); // has a 4-byte field
    frame.writeByte(99); // type 99
    frame.writeByte(Http20Draft15.FLAG_NONE);
    frame.writeInt(expectedStreamId);
    frame.writeInt(111111111); // custom data

    fr.nextFrame(new BaseTestHandler()); // Should not callback.
  } ##FSTMerge## @Test public void unknownFrameTypeSkipped() throws IOException {
    writeMedium(frame, 4); // has a 4-byte field
    frame.writeByte(99); // type 99
    frame.writeByte(Http20Draft15.FLAG_NONE);
    frame.writeInt(expectedStreamId);
    frame.writeInt(111111111); // custom data

    fr.nextFrame(new BaseTestHandler()); // Should not callback.
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft15Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void onlyOneLiteralHeadersFrame() throws IOException {
    final List<Header> sentHeaders = headerEntries("name", "value");

    Buffer headerBytes = literalHeaders(sentHeaders);
    writeMedium(frame, (int) headerBytes.size());
    frame.writeByte(Http20Draft15.TYPE_HEADERS);
    frame.writeByte(FLAG_END_HEADERS | FLAG_END_STREAM);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeAll(headerBytes);

    assertEquals(frame, sendHeaderFrames(true, sentHeaders)); // Check writer sends the same bytes.

    fr.nextFrame(new BaseTestHandler() {
      @Override
      public void headers(boolean outFinished, boolean inFinished, int streamId,
          int associatedStreamId, List<Header> headerBlock, HeadersMode headersMode) {
        assertFalse(outFinished);
        assertTrue(inFinished);
        assertEquals(expectedStreamId, streamId);
        assertEquals(-1, associatedStreamId);
        assertEquals(sentHeaders, headerBlock);
        assertEquals(HeadersMode.HTTP_20_HEADERS, headersMode);
      }
    });
  } ##FSTMerge## @Test public void onlyOneLiteralHeadersFrame() throws IOException {
    final List<Header> sentHeaders = headerEntries("name", "value");

    Buffer headerBytes = literalHeaders(sentHeaders);
    writeMedium(frame, (int) headerBytes.size());
    frame.writeByte(Http20Draft15.TYPE_HEADERS);
    frame.writeByte(FLAG_END_HEADERS | FLAG_END_STREAM);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeAll(headerBytes);

    assertEquals(frame, sendHeaderFrames(true, sentHeaders)); // Check writer sends the same bytes.

    fr.nextFrame(new BaseTestHandler() {
      @Override
      public void headers(boolean outFinished, boolean inFinished, int streamId,
          int associatedStreamId, List<Header> headerBlock, HeadersMode headersMode) {
        assertFalse(outFinished);
        assertTrue(inFinished);
        assertEquals(expectedStreamId, streamId);
        assertEquals(-1, associatedStreamId);
        assertEquals(sentHeaders, headerBlock);
        assertEquals(HeadersMode.HTTP_20_HEADERS, headersMode);
      }
    });
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft15Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void headersWithPriority() throws IOException {
    final List<Header> sentHeaders = headerEntries("name", "value");

    Buffer headerBytes = literalHeaders(sentHeaders);
    writeMedium(frame, (int) (headerBytes.size() + 5));
    frame.writeByte(Http20Draft15.TYPE_HEADERS);
    frame.writeByte(FLAG_END_HEADERS | FLAG_PRIORITY);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeInt(0); // Independent stream.
    frame.writeByte(255); // Heaviest weight, zero-indexed.
    frame.writeAll(headerBytes);

    fr.nextFrame(new BaseTestHandler() {
      @Override public void priority(int streamId, int streamDependency, int weight,
          boolean exclusive) {
        assertEquals(0, streamDependency);
        assertEquals(256, weight);
        assertFalse(exclusive);
      }

      @Override public void headers(boolean outFinished, boolean inFinished, int streamId,
          int associatedStreamId, List<Header> nameValueBlock,
          HeadersMode headersMode) {
        assertFalse(outFinished);
        assertFalse(inFinished);
        assertEquals(expectedStreamId, streamId);
        assertEquals(-1, associatedStreamId);
        assertEquals(sentHeaders, nameValueBlock);
        assertEquals(HeadersMode.HTTP_20_HEADERS, headersMode);
      }
    });
  } ##FSTMerge## @Test public void headersWithPriority() throws IOException {
    final List<Header> sentHeaders = headerEntries("name", "value");

    Buffer headerBytes = literalHeaders(sentHeaders);
    writeMedium(frame, (int) (headerBytes.size() + 5));
    frame.writeByte(Http20Draft15.TYPE_HEADERS);
    frame.writeByte(FLAG_END_HEADERS | FLAG_PRIORITY);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeInt(0); // Independent stream.
    frame.writeByte(255); // Heaviest weight, zero-indexed.
    frame.writeAll(headerBytes);

    fr.nextFrame(new BaseTestHandler() {
      @Override public void priority(int streamId, int streamDependency, int weight,
          boolean exclusive) {
        assertEquals(0, streamDependency);
        assertEquals(256, weight);
        assertFalse(exclusive);
      }

      @Override public void headers(boolean outFinished, boolean inFinished, int streamId,
          int associatedStreamId, List<Header> nameValueBlock,
          HeadersMode headersMode) {
        assertFalse(outFinished);
        assertFalse(inFinished);
        assertEquals(expectedStreamId, streamId);
        assertEquals(-1, associatedStreamId);
        assertEquals(sentHeaders, nameValueBlock);
        assertEquals(HeadersMode.HTTP_20_HEADERS, headersMode);
      }
    });
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft15Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void headersFrameThenContinuation() throws IOException {
    final List<Header> sentHeaders = largeHeaders();

    Buffer headerBlock = literalHeaders(sentHeaders);

    // Write the first headers frame.
    writeMedium(frame, Http20Draft15.INITIAL_MAX_FRAME_SIZE);
    frame.writeByte(Http20Draft15.TYPE_HEADERS);
    frame.writeByte(Http20Draft15.FLAG_NONE);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.write(headerBlock, Http20Draft15.INITIAL_MAX_FRAME_SIZE);

    // Write the continuation frame, specifying no more frames are expected.
    writeMedium(frame, (int) headerBlock.size());
    frame.writeByte(Http20Draft15.TYPE_CONTINUATION);
    frame.writeByte(FLAG_END_HEADERS);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeAll(headerBlock);

    assertEquals(frame, sendHeaderFrames(false, sentHeaders)); // Check writer sends the same bytes.

    // Reading the above frames should result in a concatenated headerBlock.
    fr.nextFrame(new BaseTestHandler() {
      @Override public void headers(boolean outFinished, boolean inFinished, int streamId,
          int associatedStreamId, List<Header> headerBlock, HeadersMode headersMode) {
        assertFalse(outFinished);
        assertFalse(inFinished);
        assertEquals(expectedStreamId, streamId);
        assertEquals(-1, associatedStreamId);
        assertEquals(sentHeaders, headerBlock);
        assertEquals(HeadersMode.HTTP_20_HEADERS, headersMode);
      }
    });
  } ##FSTMerge## @Test public void headersFrameThenContinuation() throws IOException {
    final List<Header> sentHeaders = largeHeaders();

    Buffer headerBlock = literalHeaders(sentHeaders);

    // Write the first headers frame.
    writeMedium(frame, Http20Draft15.INITIAL_MAX_FRAME_SIZE);
    frame.writeByte(Http20Draft15.TYPE_HEADERS);
    frame.writeByte(Http20Draft15.FLAG_NONE);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.write(headerBlock, Http20Draft15.INITIAL_MAX_FRAME_SIZE);

    // Write the continuation frame, specifying no more frames are expected.
    writeMedium(frame, (int) headerBlock.size());
    frame.writeByte(Http20Draft15.TYPE_CONTINUATION);
    frame.writeByte(FLAG_END_HEADERS);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeAll(headerBlock);

    assertEquals(frame, sendHeaderFrames(false, sentHeaders)); // Check writer sends the same bytes.

    // Reading the above frames should result in a concatenated headerBlock.
    fr.nextFrame(new BaseTestHandler() {
      @Override public void headers(boolean outFinished, boolean inFinished, int streamId,
          int associatedStreamId, List<Header> headerBlock, HeadersMode headersMode) {
        assertFalse(outFinished);
        assertFalse(inFinished);
        assertEquals(expectedStreamId, streamId);
        assertEquals(-1, associatedStreamId);
        assertEquals(sentHeaders, headerBlock);
        assertEquals(HeadersMode.HTTP_20_HEADERS, headersMode);
      }
    });
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft15Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void pushPromise() throws IOException {
    final int expectedPromisedStreamId = 11;

    final List<Header> pushPromise = Arrays.asList(
        new Header(Header.TARGET_METHOD, "GET"),
        new Header(Header.TARGET_SCHEME, "https"),
        new Header(Header.TARGET_AUTHORITY, "squareup.com"),
        new Header(Header.TARGET_PATH, "/")
    );

    // Write the push promise frame, specifying the associated stream ID.
    Buffer headerBytes = literalHeaders(pushPromise);
    writeMedium(frame, (int) (headerBytes.size() + 4));
    frame.writeByte(Http20Draft15.TYPE_PUSH_PROMISE);
    frame.writeByte(Http20Draft15.FLAG_END_PUSH_PROMISE);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeInt(expectedPromisedStreamId & 0x7fffffff);
    frame.writeAll(headerBytes);

    assertEquals(frame, sendPushPromiseFrames(expectedPromisedStreamId, pushPromise));

    fr.nextFrame(new BaseTestHandler() {
      @Override
      public void pushPromise(int streamId, int promisedStreamId, List<Header> headerBlock) {
        assertEquals(expectedStreamId, streamId);
        assertEquals(expectedPromisedStreamId, promisedStreamId);
        assertEquals(pushPromise, headerBlock);
      }
    });
  } ##FSTMerge## @Test public void pushPromise() throws IOException {
    final int expectedPromisedStreamId = 11;

    final List<Header> pushPromise = Arrays.asList(
        new Header(Header.TARGET_METHOD, "GET"),
        new Header(Header.TARGET_SCHEME, "https"),
        new Header(Header.TARGET_AUTHORITY, "squareup.com"),
        new Header(Header.TARGET_PATH, "/")
    );

    // Write the push promise frame, specifying the associated stream ID.
    Buffer headerBytes = literalHeaders(pushPromise);
    writeMedium(frame, (int) (headerBytes.size() + 4));
    frame.writeByte(Http20Draft15.TYPE_PUSH_PROMISE);
    frame.writeByte(Http20Draft15.FLAG_END_PUSH_PROMISE);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeInt(expectedPromisedStreamId & 0x7fffffff);
    frame.writeAll(headerBytes);

    assertEquals(frame, sendPushPromiseFrames(expectedPromisedStreamId, pushPromise));

    fr.nextFrame(new BaseTestHandler() {
      @Override
      public void pushPromise(int streamId, int promisedStreamId, List<Header> headerBlock) {
        assertEquals(expectedStreamId, streamId);
        assertEquals(expectedPromisedStreamId, promisedStreamId);
        assertEquals(pushPromise, headerBlock);
      }
    });
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft15Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void pushPromiseThenContinuation() throws IOException {
    final int expectedPromisedStreamId = 11;
    final List<Header> pushPromise = largeHeaders();

    // Decoding the first header will cross frame boundaries.
    Buffer headerBlock = literalHeaders(pushPromise);

    // Write the first headers frame.
    writeMedium(frame, Http20Draft15.INITIAL_MAX_FRAME_SIZE);
    frame.writeByte(Http20Draft15.TYPE_PUSH_PROMISE);
    frame.writeByte(Http20Draft15.FLAG_NONE);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeInt(expectedPromisedStreamId & 0x7fffffff);
    frame.write(headerBlock, Http20Draft15.INITIAL_MAX_FRAME_SIZE - 4);

    // Write the continuation frame, specifying no more frames are expected.
    writeMedium(frame, (int) headerBlock.size());
    frame.writeByte(Http20Draft15.TYPE_CONTINUATION);
    frame.writeByte(FLAG_END_HEADERS);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeAll(headerBlock);

    assertEquals(frame, sendPushPromiseFrames(expectedPromisedStreamId, pushPromise));

    // Reading the above frames should result in a concatenated headerBlock.
    fr.nextFrame(new BaseTestHandler() {
      @Override
      public void pushPromise(int streamId, int promisedStreamId, List<Header> headerBlock) {
        assertEquals(expectedStreamId, streamId);
        assertEquals(expectedPromisedStreamId, promisedStreamId);
        assertEquals(pushPromise, headerBlock);
      }
    });
  } ##FSTMerge## @Test public void pushPromiseThenContinuation() throws IOException {
    final int expectedPromisedStreamId = 11;
    final List<Header> pushPromise = largeHeaders();

    // Decoding the first header will cross frame boundaries.
    Buffer headerBlock = literalHeaders(pushPromise);

    // Write the first headers frame.
    writeMedium(frame, Http20Draft15.INITIAL_MAX_FRAME_SIZE);
    frame.writeByte(Http20Draft15.TYPE_PUSH_PROMISE);
    frame.writeByte(Http20Draft15.FLAG_NONE);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeInt(expectedPromisedStreamId & 0x7fffffff);
    frame.write(headerBlock, Http20Draft15.INITIAL_MAX_FRAME_SIZE - 4);

    // Write the continuation frame, specifying no more frames are expected.
    writeMedium(frame, (int) headerBlock.size());
    frame.writeByte(Http20Draft15.TYPE_CONTINUATION);
    frame.writeByte(FLAG_END_HEADERS);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeAll(headerBlock);

    assertEquals(frame, sendPushPromiseFrames(expectedPromisedStreamId, pushPromise));

    // Reading the above frames should result in a concatenated headerBlock.
    fr.nextFrame(new BaseTestHandler() {
      @Override
      public void pushPromise(int streamId, int promisedStreamId, List<Header> headerBlock) {
        assertEquals(expectedStreamId, streamId);
        assertEquals(expectedPromisedStreamId, promisedStreamId);
        assertEquals(pushPromise, headerBlock);
      }
    });
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft15Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void readRstStreamFrame() throws IOException {
    writeMedium(frame, 4);
    frame.writeByte(Http20Draft15.TYPE_RST_STREAM);
    frame.writeByte(Http20Draft15.FLAG_NONE);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeInt(ErrorCode.COMPRESSION_ERROR.httpCode);

    fr.nextFrame(new BaseTestHandler() {
      @Override public void rstStream(int streamId, ErrorCode errorCode) {
        assertEquals(expectedStreamId, streamId);
        assertEquals(ErrorCode.COMPRESSION_ERROR, errorCode);
      }
    });
  } ##FSTMerge## @Test public void readRstStreamFrame() throws IOException {
    writeMedium(frame, 4);
    frame.writeByte(Http20Draft15.TYPE_RST_STREAM);
    frame.writeByte(Http20Draft15.FLAG_NONE);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeInt(ErrorCode.COMPRESSION_ERROR.httpCode);

    fr.nextFrame(new BaseTestHandler() {
      @Override public void rstStream(int streamId, ErrorCode errorCode) {
        assertEquals(expectedStreamId, streamId);
        assertEquals(ErrorCode.COMPRESSION_ERROR, errorCode);
      }
    });
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft15Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void readSettingsFrame() throws IOException {
    final int reducedTableSizeBytes = 16;

    writeMedium(frame, 12); // 2 settings * 6 bytes (2 for the code and 4 for the value).
    frame.writeByte(Http20Draft15.TYPE_SETTINGS);
    frame.writeByte(Http20Draft15.FLAG_NONE);
    frame.writeInt(0); // Settings are always on the connection stream 0.
    frame.writeShort(1); // SETTINGS_HEADER_TABLE_SIZE
    frame.writeInt(reducedTableSizeBytes);
    frame.writeShort(2); // SETTINGS_ENABLE_PUSH
    frame.writeInt(0);

    fr.nextFrame(new BaseTestHandler() {
      @Override public void settings(boolean clearPrevious, Settings settings) {
        assertFalse(clearPrevious); // No clearPrevious in HTTP/2.
        assertEquals(reducedTableSizeBytes, settings.getHeaderTableSize());
        assertEquals(false, settings.getEnablePush(true));
      }
    });
  } ##FSTMerge## @Test public void readSettingsFrame() throws IOException {
    final int reducedTableSizeBytes = 16;

    writeMedium(frame, 12); // 2 settings * 6 bytes (2 for the code and 4 for the value).
    frame.writeByte(Http20Draft15.TYPE_SETTINGS);
    frame.writeByte(Http20Draft15.FLAG_NONE);
    frame.writeInt(0); // Settings are always on the connection stream 0.
    frame.writeShort(1); // SETTINGS_HEADER_TABLE_SIZE
    frame.writeInt(reducedTableSizeBytes);
    frame.writeShort(2); // SETTINGS_ENABLE_PUSH
    frame.writeInt(0);

    fr.nextFrame(new BaseTestHandler() {
      @Override public void settings(boolean clearPrevious, Settings settings) {
        assertFalse(clearPrevious); // No clearPrevious in HTTP/2.
        assertEquals(reducedTableSizeBytes, settings.getHeaderTableSize());
        assertEquals(false, settings.getEnablePush(true));
      }
    });
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft15Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void readSettingsFrameInvalidPushValue() throws IOException {
    writeMedium(frame, 6); // 2 for the code and 4 for the value
    frame.writeByte(Http20Draft15.TYPE_SETTINGS);
    frame.writeByte(Http20Draft15.FLAG_NONE);
    frame.writeInt(0); // Settings are always on the connection stream 0.
    frame.writeShort(2);
    frame.writeInt(2);

    try {
      fr.nextFrame(new BaseTestHandler());
      fail();
    } catch (IOException e) {
      assertEquals("PROTOCOL_ERROR SETTINGS_ENABLE_PUSH != 0 or 1", e.getMessage());
    }
  } ##FSTMerge## @Test public void readSettingsFrameInvalidPushValue() throws IOException {
    writeMedium(frame, 6); // 2 for the code and 4 for the value
    frame.writeByte(Http20Draft15.TYPE_SETTINGS);
    frame.writeByte(Http20Draft15.FLAG_NONE);
    frame.writeInt(0); // Settings are always on the connection stream 0.
    frame.writeShort(2);
    frame.writeInt(2);

    try {
      fr.nextFrame(new BaseTestHandler());
      fail();
    } catch (IOException e) {
      assertEquals("PROTOCOL_ERROR SETTINGS_ENABLE_PUSH != 0 or 1", e.getMessage());
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft15Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void readSettingsFrameInvalidSettingId() throws IOException {
    writeMedium(frame, 6); // 2 for the code and 4 for the value
    frame.writeByte(Http20Draft15.TYPE_SETTINGS);
    frame.writeByte(Http20Draft15.FLAG_NONE);
    frame.writeInt(0); // Settings are always on the connection stream 0.
    frame.writeShort(7); // old number for SETTINGS_INITIAL_WINDOW_SIZE
    frame.writeInt(1);

    try {
      fr.nextFrame(new BaseTestHandler());
      fail();
    } catch (IOException e) {
      assertEquals("PROTOCOL_ERROR invalid settings id: 7", e.getMessage());
    }
  } ##FSTMerge## @Test public void readSettingsFrameInvalidSettingId() throws IOException {
    writeMedium(frame, 6); // 2 for the code and 4 for the value
    frame.writeByte(Http20Draft15.TYPE_SETTINGS);
    frame.writeByte(Http20Draft15.FLAG_NONE);
    frame.writeInt(0); // Settings are always on the connection stream 0.
    frame.writeShort(7); // old number for SETTINGS_INITIAL_WINDOW_SIZE
    frame.writeInt(1);

    try {
      fr.nextFrame(new BaseTestHandler());
      fail();
    } catch (IOException e) {
      assertEquals("PROTOCOL_ERROR invalid settings id: 7", e.getMessage());
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft15Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void readSettingsFrameNegativeWindowSize() throws IOException {
    writeMedium(frame, 6); // 2 for the code and 4 for the value
    frame.writeByte(Http20Draft15.TYPE_SETTINGS);
    frame.writeByte(Http20Draft15.FLAG_NONE);
    frame.writeInt(0); // Settings are always on the connection stream 0.
    frame.writeShort(4); // SETTINGS_INITIAL_WINDOW_SIZE
    frame.writeInt(Integer.MIN_VALUE);

    try {
      fr.nextFrame(new BaseTestHandler());
      fail();
    } catch (IOException e) {
      assertEquals("PROTOCOL_ERROR SETTINGS_INITIAL_WINDOW_SIZE > 2^31 - 1", e.getMessage());
    }
  } ##FSTMerge## @Test public void readSettingsFrameNegativeWindowSize() throws IOException {
    writeMedium(frame, 6); // 2 for the code and 4 for the value
    frame.writeByte(Http20Draft15.TYPE_SETTINGS);
    frame.writeByte(Http20Draft15.FLAG_NONE);
    frame.writeInt(0); // Settings are always on the connection stream 0.
    frame.writeShort(4); // SETTINGS_INITIAL_WINDOW_SIZE
    frame.writeInt(Integer.MIN_VALUE);

    try {
      fr.nextFrame(new BaseTestHandler());
      fail();
    } catch (IOException e) {
      assertEquals("PROTOCOL_ERROR SETTINGS_INITIAL_WINDOW_SIZE > 2^31 - 1", e.getMessage());
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft15Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void readSettingsFrameNegativeFrameLength() throws IOException {
    writeMedium(frame, 6); // 2 for the code and 4 for the value
    frame.writeByte(Http20Draft15.TYPE_SETTINGS);
    frame.writeByte(Http20Draft15.FLAG_NONE);
    frame.writeInt(0); // Settings are always on the connection stream 0.
    frame.writeShort(5); // SETTINGS_MAX_FRAME_SIZE
    frame.writeInt(Integer.MIN_VALUE);

    try {
      fr.nextFrame(new BaseTestHandler());
      fail();
    } catch (IOException e) {
      assertEquals("PROTOCOL_ERROR SETTINGS_MAX_FRAME_SIZE: -2147483648", e.getMessage());
    }
  } ##FSTMerge## @Test public void readSettingsFrameNegativeFrameLength() throws IOException {
    writeMedium(frame, 6); // 2 for the code and 4 for the value
    frame.writeByte(Http20Draft15.TYPE_SETTINGS);
    frame.writeByte(Http20Draft15.FLAG_NONE);
    frame.writeInt(0); // Settings are always on the connection stream 0.
    frame.writeShort(5); // SETTINGS_MAX_FRAME_SIZE
    frame.writeInt(Integer.MIN_VALUE);

    try {
      fr.nextFrame(new BaseTestHandler());
      fail();
    } catch (IOException e) {
      assertEquals("PROTOCOL_ERROR SETTINGS_MAX_FRAME_SIZE: -2147483648", e.getMessage());
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft15Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void readSettingsFrameTooShortFrameLength() throws IOException {
    writeMedium(frame, 6); // 2 for the code and 4 for the value
    frame.writeByte(Http20Draft15.TYPE_SETTINGS);
    frame.writeByte(Http20Draft15.FLAG_NONE);
    frame.writeInt(0); // Settings are always on the connection stream 0.
    frame.writeShort(5); // SETTINGS_MAX_FRAME_SIZE
    frame.writeInt((int) Math.pow(2, 14) - 1);

    try {
      fr.nextFrame(new BaseTestHandler());
      fail();
    } catch (IOException e) {
      assertEquals("PROTOCOL_ERROR SETTINGS_MAX_FRAME_SIZE: 16383", e.getMessage());
    }
  } ##FSTMerge## @Test public void readSettingsFrameTooShortFrameLength() throws IOException {
    writeMedium(frame, 6); // 2 for the code and 4 for the value
    frame.writeByte(Http20Draft15.TYPE_SETTINGS);
    frame.writeByte(Http20Draft15.FLAG_NONE);
    frame.writeInt(0); // Settings are always on the connection stream 0.
    frame.writeShort(5); // SETTINGS_MAX_FRAME_SIZE
    frame.writeInt((int) Math.pow(2, 14) - 1);

    try {
      fr.nextFrame(new BaseTestHandler());
      fail();
    } catch (IOException e) {
      assertEquals("PROTOCOL_ERROR SETTINGS_MAX_FRAME_SIZE: 16383", e.getMessage());
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft15Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void readSettingsFrameTooLongFrameLength() throws IOException {
    writeMedium(frame, 6); // 2 for the code and 4 for the value
    frame.writeByte(Http20Draft15.TYPE_SETTINGS);
    frame.writeByte(Http20Draft15.FLAG_NONE);
    frame.writeInt(0); // Settings are always on the connection stream 0.
    frame.writeShort(5); // SETTINGS_MAX_FRAME_SIZE
    frame.writeInt((int) Math.pow(2, 24));

    try {
      fr.nextFrame(new BaseTestHandler());
      fail();
    } catch (IOException e) {
      assertEquals("PROTOCOL_ERROR SETTINGS_MAX_FRAME_SIZE: 16777216", e.getMessage());
    }
  } ##FSTMerge## @Test public void readSettingsFrameTooLongFrameLength() throws IOException {
    writeMedium(frame, 6); // 2 for the code and 4 for the value
    frame.writeByte(Http20Draft15.TYPE_SETTINGS);
    frame.writeByte(Http20Draft15.FLAG_NONE);
    frame.writeInt(0); // Settings are always on the connection stream 0.
    frame.writeShort(5); // SETTINGS_MAX_FRAME_SIZE
    frame.writeInt((int) Math.pow(2, 24));

    try {
      fr.nextFrame(new BaseTestHandler());
      fail();
    } catch (IOException e) {
      assertEquals("PROTOCOL_ERROR SETTINGS_MAX_FRAME_SIZE: 16777216", e.getMessage());
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft15Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void pingRoundTrip() throws IOException {
    final int expectedPayload1 = 7;
    final int expectedPayload2 = 8;

    writeMedium(frame, 8); // length
    frame.writeByte(Http20Draft15.TYPE_PING);
    frame.writeByte(Http20Draft15.FLAG_ACK);
    frame.writeInt(0); // connection-level
    frame.writeInt(expectedPayload1);
    frame.writeInt(expectedPayload2);

    // Check writer sends the same bytes.
    assertEquals(frame, sendPingFrame(true, expectedPayload1, expectedPayload2));

    fr.nextFrame(new BaseTestHandler() {
      @Override public void ping(boolean ack, int payload1, int payload2) {
        assertTrue(ack);
        assertEquals(expectedPayload1, payload1);
        assertEquals(expectedPayload2, payload2);
      }
    });
  } ##FSTMerge## @Test public void pingRoundTrip() throws IOException {
    final int expectedPayload1 = 7;
    final int expectedPayload2 = 8;

    writeMedium(frame, 8); // length
    frame.writeByte(Http20Draft15.TYPE_PING);
    frame.writeByte(Http20Draft15.FLAG_ACK);
    frame.writeInt(0); // connection-level
    frame.writeInt(expectedPayload1);
    frame.writeInt(expectedPayload2);

    // Check writer sends the same bytes.
    assertEquals(frame, sendPingFrame(true, expectedPayload1, expectedPayload2));

    fr.nextFrame(new BaseTestHandler() {
      @Override public void ping(boolean ack, int payload1, int payload2) {
        assertTrue(ack);
        assertEquals(expectedPayload1, payload1);
        assertEquals(expectedPayload2, payload2);
      }
    });
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft15Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void maxLengthDataFrame() throws IOException {
    final byte[] expectedData = new byte[Http20Draft15.INITIAL_MAX_FRAME_SIZE];
    Arrays.fill(expectedData, (byte) 2);

    writeMedium(frame, expectedData.length);
    frame.writeByte(Http20Draft15.TYPE_DATA);
    frame.writeByte(Http20Draft15.FLAG_NONE);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.write(expectedData);

    // Check writer sends the same bytes.
    assertEquals(frame, sendDataFrame(new Buffer().write(expectedData)));

    fr.nextFrame(new BaseTestHandler() {
      @Override public void data(boolean inFinished, int streamId, BufferedSource source,
          int length) throws IOException {
        assertFalse(inFinished);
        assertEquals(expectedStreamId, streamId);
        assertEquals(Http20Draft15.INITIAL_MAX_FRAME_SIZE, length);
        ByteString data = source.readByteString(length);
        for (byte b : data.toByteArray()) {
          assertEquals(2, b);
        }
      }
    });
  } ##FSTMerge## @Test public void maxLengthDataFrame() throws IOException {
    final byte[] expectedData = new byte[Http20Draft15.INITIAL_MAX_FRAME_SIZE];
    Arrays.fill(expectedData, (byte) 2);

    writeMedium(frame, expectedData.length);
    frame.writeByte(Http20Draft15.TYPE_DATA);
    frame.writeByte(Http20Draft15.FLAG_NONE);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.write(expectedData);

    // Check writer sends the same bytes.
    assertEquals(frame, sendDataFrame(new Buffer().write(expectedData)));

    fr.nextFrame(new BaseTestHandler() {
      @Override public void data(boolean inFinished, int streamId, BufferedSource source,
          int length) throws IOException {
        assertFalse(inFinished);
        assertEquals(expectedStreamId, streamId);
        assertEquals(Http20Draft15.INITIAL_MAX_FRAME_SIZE, length);
        ByteString data = source.readByteString(length);
        for (byte b : data.toByteArray()) {
          assertEquals(2, b);
        }
      }
    });
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft15Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void compressedDataFrameWhenSettingDisabled() throws IOException {
    byte[] expectedData = new byte[Http20Draft15.INITIAL_MAX_FRAME_SIZE];
    Arrays.fill(expectedData, (byte) 2);
    Buffer zipped = gzip(expectedData);
    int zippedSize = (int) zipped.size();

    writeMedium(frame, zippedSize);
    frame.writeByte(Http20Draft15.TYPE_DATA);
    frame.writeByte(FLAG_COMPRESSED);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    zipped.readAll(frame);

    try {
      fr.nextFrame(new BaseTestHandler());
      fail();
    } catch (IOException e) {
      assertEquals("PROTOCOL_ERROR: FLAG_COMPRESSED without SETTINGS_COMPRESS_DATA",
          e.getMessage());
    }
  } ##FSTMerge## @Test public void compressedDataFrameWhenSettingDisabled() throws IOException {
    byte[] expectedData = new byte[Http20Draft15.INITIAL_MAX_FRAME_SIZE];
    Arrays.fill(expectedData, (byte) 2);
    Buffer zipped = gzip(expectedData);
    int zippedSize = (int) zipped.size();

    writeMedium(frame, zippedSize);
    frame.writeByte(Http20Draft15.TYPE_DATA);
    frame.writeByte(FLAG_COMPRESSED);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    zipped.readAll(frame);

    try {
      fr.nextFrame(new BaseTestHandler());
      fail();
    } catch (IOException e) {
      assertEquals("PROTOCOL_ERROR: FLAG_COMPRESSED without SETTINGS_COMPRESS_DATA",
          e.getMessage());
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft15Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void readPaddedDataFrame() throws IOException {
    int dataLength = 1123;
    byte[] expectedData = new byte[dataLength];
    Arrays.fill(expectedData, (byte) 2);

    int paddingLength = 254;
    byte[] padding = new byte[paddingLength];
    Arrays.fill(padding, (byte) 0);

    writeMedium(frame, dataLength + paddingLength + 1);
    frame.writeByte(Http20Draft15.TYPE_DATA);
    frame.writeByte(FLAG_PADDED);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeByte(paddingLength);
    frame.write(expectedData);
    frame.write(padding);

    fr.nextFrame(assertData());
    assertTrue(frame.exhausted()); // Padding was skipped.
  } ##FSTMerge## @Test public void readPaddedDataFrame() throws IOException {
    int dataLength = 1123;
    byte[] expectedData = new byte[dataLength];
    Arrays.fill(expectedData, (byte) 2);

    int paddingLength = 254;
    byte[] padding = new byte[paddingLength];
    Arrays.fill(padding, (byte) 0);

    writeMedium(frame, dataLength + paddingLength + 1);
    frame.writeByte(Http20Draft15.TYPE_DATA);
    frame.writeByte(FLAG_PADDED);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeByte(paddingLength);
    frame.write(expectedData);
    frame.write(padding);

    fr.nextFrame(assertData());
    assertTrue(frame.exhausted()); // Padding was skipped.
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft15Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void readPaddedDataFrameZeroPadding() throws IOException {
    int dataLength = 1123;
    byte[] expectedData = new byte[dataLength];
    Arrays.fill(expectedData, (byte) 2);

    writeMedium(frame, dataLength + 1);
    frame.writeByte(Http20Draft15.TYPE_DATA);
    frame.writeByte(FLAG_PADDED);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeByte(0);
    frame.write(expectedData);

    fr.nextFrame(assertData());
  } ##FSTMerge## @Test public void readPaddedDataFrameZeroPadding() throws IOException {
    int dataLength = 1123;
    byte[] expectedData = new byte[dataLength];
    Arrays.fill(expectedData, (byte) 2);

    writeMedium(frame, dataLength + 1);
    frame.writeByte(Http20Draft15.TYPE_DATA);
    frame.writeByte(FLAG_PADDED);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeByte(0);
    frame.write(expectedData);

    fr.nextFrame(assertData());
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft15Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void readPaddedHeadersFrame() throws IOException {
    int paddingLength = 254;
    byte[] padding = new byte[paddingLength];
    Arrays.fill(padding, (byte) 0);

    Buffer headerBlock = literalHeaders(headerEntries("foo", "barrr", "baz", "qux"));
    writeMedium(frame, (int) headerBlock.size() + paddingLength + 1);
    frame.writeByte(Http20Draft15.TYPE_HEADERS);
    frame.writeByte(FLAG_END_HEADERS | FLAG_PADDED);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeByte(paddingLength);
    frame.writeAll(headerBlock);
    frame.write(padding);

    fr.nextFrame(assertHeaderBlock());
    assertTrue(frame.exhausted()); // Padding was skipped.
  } ##FSTMerge## @Test public void readPaddedHeadersFrame() throws IOException {
    int paddingLength = 254;
    byte[] padding = new byte[paddingLength];
    Arrays.fill(padding, (byte) 0);

    Buffer headerBlock = literalHeaders(headerEntries("foo", "barrr", "baz", "qux"));
    writeMedium(frame, (int) headerBlock.size() + paddingLength + 1);
    frame.writeByte(Http20Draft15.TYPE_HEADERS);
    frame.writeByte(FLAG_END_HEADERS | FLAG_PADDED);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeByte(paddingLength);
    frame.writeAll(headerBlock);
    frame.write(padding);

    fr.nextFrame(assertHeaderBlock());
    assertTrue(frame.exhausted()); // Padding was skipped.
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft15Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void readPaddedHeadersFrameZeroPadding() throws IOException {
    Buffer headerBlock = literalHeaders(headerEntries("foo", "barrr", "baz", "qux"));
    writeMedium(frame, (int) headerBlock.size() + 1);
    frame.writeByte(Http20Draft15.TYPE_HEADERS);
    frame.writeByte(FLAG_END_HEADERS | FLAG_PADDED);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeByte(0);
    frame.writeAll(headerBlock);

    fr.nextFrame(assertHeaderBlock());
  } ##FSTMerge## @Test public void readPaddedHeadersFrameZeroPadding() throws IOException {
    Buffer headerBlock = literalHeaders(headerEntries("foo", "barrr", "baz", "qux"));
    writeMedium(frame, (int) headerBlock.size() + 1);
    frame.writeByte(Http20Draft15.TYPE_HEADERS);
    frame.writeByte(FLAG_END_HEADERS | FLAG_PADDED);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeByte(0);
    frame.writeAll(headerBlock);

    fr.nextFrame(assertHeaderBlock());
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft15Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void readPaddedHeadersFrameThenContinuation() throws IOException {
    int paddingLength = 254;
    byte[] padding = new byte[paddingLength];
    Arrays.fill(padding, (byte) 0);

    // Decoding the first header will cross frame boundaries.
    Buffer headerBlock = literalHeaders(headerEntries("foo", "barrr", "baz", "qux"));

    // Write the first headers frame.
    writeMedium(frame, (int) (headerBlock.size() / 2) + paddingLength + 1);
    frame.writeByte(Http20Draft15.TYPE_HEADERS);
    frame.writeByte(FLAG_PADDED);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeByte(paddingLength);
    frame.write(headerBlock, headerBlock.size() / 2);
    frame.write(padding);

    // Write the continuation frame, specifying no more frames are expected.
    writeMedium(frame, (int) headerBlock.size());
    frame.writeByte(Http20Draft15.TYPE_CONTINUATION);
    frame.writeByte(FLAG_END_HEADERS);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeAll(headerBlock);

    fr.nextFrame(assertHeaderBlock());
    assertTrue(frame.exhausted());
  } ##FSTMerge## @Test public void readPaddedHeadersFrameThenContinuation() throws IOException {
    int paddingLength = 254;
    byte[] padding = new byte[paddingLength];
    Arrays.fill(padding, (byte) 0);

    // Decoding the first header will cross frame boundaries.
    Buffer headerBlock = literalHeaders(headerEntries("foo", "barrr", "baz", "qux"));

    // Write the first headers frame.
    writeMedium(frame, (int) (headerBlock.size() / 2) + paddingLength + 1);
    frame.writeByte(Http20Draft15.TYPE_HEADERS);
    frame.writeByte(FLAG_PADDED);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeByte(paddingLength);
    frame.write(headerBlock, headerBlock.size() / 2);
    frame.write(padding);

    // Write the continuation frame, specifying no more frames are expected.
    writeMedium(frame, (int) headerBlock.size());
    frame.writeByte(Http20Draft15.TYPE_CONTINUATION);
    frame.writeByte(FLAG_END_HEADERS);
    frame.writeInt(expectedStreamId & 0x7fffffff);
    frame.writeAll(headerBlock);

    fr.nextFrame(assertHeaderBlock());
    assertTrue(frame.exhausted());
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft15Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void tooLargeDataFrame() throws IOException {
    try {
      sendDataFrame(new Buffer().write(new byte[0x1000000]));
      fail();
    } catch (IllegalArgumentException e) {
      assertEquals("FRAME_SIZE_ERROR length > 16384: 16777216", e.getMessage());
    }
  } ##FSTMerge## @Test public void tooLargeDataFrame() throws IOException {
    try {
      sendDataFrame(new Buffer().write(new byte[0x1000000]));
      fail();
    } catch (IllegalArgumentException e) {
      assertEquals("FRAME_SIZE_ERROR length > 16384: 16777216", e.getMessage());
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft15Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void windowUpdateRoundTrip() throws IOException {
    final long expectedWindowSizeIncrement = 0x7fffffff;

    writeMedium(frame, 4); // length
    frame.writeByte(Http20Draft15.TYPE_WINDOW_UPDATE);
    frame.writeByte(Http20Draft15.FLAG_NONE);
    frame.writeInt(expectedStreamId);
    frame.writeInt((int) expectedWindowSizeIncrement);

    // Check writer sends the same bytes.
    assertEquals(frame, windowUpdate(expectedWindowSizeIncrement));

    fr.nextFrame(new BaseTestHandler() {
      @Override public void windowUpdate(int streamId, long windowSizeIncrement) {
        assertEquals(expectedStreamId, streamId);
        assertEquals(expectedWindowSizeIncrement, windowSizeIncrement);
      }
    });
  } ##FSTMerge## @Test public void windowUpdateRoundTrip() throws IOException {
    final long expectedWindowSizeIncrement = 0x7fffffff;

    writeMedium(frame, 4); // length
    frame.writeByte(Http20Draft15.TYPE_WINDOW_UPDATE);
    frame.writeByte(Http20Draft15.FLAG_NONE);
    frame.writeInt(expectedStreamId);
    frame.writeInt((int) expectedWindowSizeIncrement);

    // Check writer sends the same bytes.
    assertEquals(frame, windowUpdate(expectedWindowSizeIncrement));

    fr.nextFrame(new BaseTestHandler() {
      @Override public void windowUpdate(int streamId, long windowSizeIncrement) {
        assertEquals(expectedStreamId, streamId);
        assertEquals(expectedWindowSizeIncrement, windowSizeIncrement);
      }
    });
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft15Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void badWindowSizeIncrement() throws IOException {
    try {
      windowUpdate(0);
      fail();
    } catch (IllegalArgumentException e) {
      assertEquals("windowSizeIncrement == 0 || windowSizeIncrement > 0x7fffffffL: 0",
          e.getMessage());
    }
    try {
      windowUpdate(0x80000000L);
      fail();
    } catch (IllegalArgumentException e) {
      assertEquals("windowSizeIncrement == 0 || windowSizeIncrement > 0x7fffffffL: 2147483648",
          e.getMessage());
    }
  } ##FSTMerge## @Test public void badWindowSizeIncrement() throws IOException {
    try {
      windowUpdate(0);
      fail();
    } catch (IllegalArgumentException e) {
      assertEquals("windowSizeIncrement == 0 || windowSizeIncrement > 0x7fffffffL: 0",
          e.getMessage());
    }
    try {
      windowUpdate(0x80000000L);
      fail();
    } catch (IllegalArgumentException e) {
      assertEquals("windowSizeIncrement == 0 || windowSizeIncrement > 0x7fffffffL: 2147483648",
          e.getMessage());
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft15Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void goAwayWithoutDebugDataRoundTrip() throws IOException {
    final ErrorCode expectedError = ErrorCode.PROTOCOL_ERROR;

    writeMedium(frame, 8); // Without debug data there's only 2 32-bit fields.
    frame.writeByte(Http20Draft15.TYPE_GOAWAY);
    frame.writeByte(Http20Draft15.FLAG_NONE);
    frame.writeInt(0); // connection-scope
    frame.writeInt(expectedStreamId); // last good stream.
    frame.writeInt(expectedError.httpCode);

    // Check writer sends the same bytes.
    assertEquals(frame, sendGoAway(expectedStreamId, expectedError, Util.EMPTY_BYTE_ARRAY));

    fr.nextFrame(new BaseTestHandler() {
      @Override public void goAway(
          int lastGoodStreamId, ErrorCode errorCode, ByteString debugData) {
        assertEquals(expectedStreamId, lastGoodStreamId);
        assertEquals(expectedError, errorCode);
        assertEquals(0, debugData.size());
      }
    });
  } ##FSTMerge## @Test public void goAwayWithoutDebugDataRoundTrip() throws IOException {
    final ErrorCode expectedError = ErrorCode.PROTOCOL_ERROR;

    writeMedium(frame, 8); // Without debug data there's only 2 32-bit fields.
    frame.writeByte(Http20Draft15.TYPE_GOAWAY);
    frame.writeByte(Http20Draft15.FLAG_NONE);
    frame.writeInt(0); // connection-scope
    frame.writeInt(expectedStreamId); // last good stream.
    frame.writeInt(expectedError.httpCode);

    // Check writer sends the same bytes.
    assertEquals(frame, sendGoAway(expectedStreamId, expectedError, Util.EMPTY_BYTE_ARRAY));

    fr.nextFrame(new BaseTestHandler() {
      @Override public void goAway(
          int lastGoodStreamId, ErrorCode errorCode, ByteString debugData) {
        assertEquals(expectedStreamId, lastGoodStreamId);
        assertEquals(expectedError, errorCode);
        assertEquals(0, debugData.size());
      }
    });
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft15Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void goAwayWithDebugDataRoundTrip() throws IOException {
    final ErrorCode expectedError = ErrorCode.PROTOCOL_ERROR;
    final ByteString expectedData = ByteString.encodeUtf8("abcdefgh");

    // Compose the expected GOAWAY frame without debug data.
    writeMedium(frame, 8 + expectedData.size());
    frame.writeByte(Http20Draft15.TYPE_GOAWAY);
    frame.writeByte(Http20Draft15.FLAG_NONE);
    frame.writeInt(0); // connection-scope
    frame.writeInt(0); // never read any stream!
    frame.writeInt(expectedError.httpCode);
    frame.write(expectedData.toByteArray());

    // Check writer sends the same bytes.
    assertEquals(frame, sendGoAway(0, expectedError, expectedData.toByteArray()));

    fr.nextFrame(new BaseTestHandler() {
      @Override public void goAway(
          int lastGoodStreamId, ErrorCode errorCode, ByteString debugData) {
        assertEquals(0, lastGoodStreamId);
        assertEquals(expectedError, errorCode);
        assertEquals(expectedData, debugData);
      }
    });
  } ##FSTMerge## @Test public void goAwayWithDebugDataRoundTrip() throws IOException {
    final ErrorCode expectedError = ErrorCode.PROTOCOL_ERROR;
    final ByteString expectedData = ByteString.encodeUtf8("abcdefgh");

    // Compose the expected GOAWAY frame without debug data.
    writeMedium(frame, 8 + expectedData.size());
    frame.writeByte(Http20Draft15.TYPE_GOAWAY);
    frame.writeByte(Http20Draft15.FLAG_NONE);
    frame.writeInt(0); // connection-scope
    frame.writeInt(0); // never read any stream!
    frame.writeInt(expectedError.httpCode);
    frame.write(expectedData.toByteArray());

    // Check writer sends the same bytes.
    assertEquals(frame, sendGoAway(0, expectedError, expectedData.toByteArray()));

    fr.nextFrame(new BaseTestHandler() {
      @Override public void goAway(
          int lastGoodStreamId, ErrorCode errorCode, ByteString debugData) {
        assertEquals(0, lastGoodStreamId);
        assertEquals(expectedError, errorCode);
        assertEquals(expectedData, debugData);
      }
    });
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft15Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void frameSizeError() throws IOException {
    Http20Draft15.Writer writer = new Http20Draft15.Writer(new Buffer(), true);

    try {
      writer.frameHeader(0, 16777216, Http20Draft15.TYPE_DATA, FLAG_NONE);
      fail();
    } catch (IllegalArgumentException e) {
      // TODO: real max is based on settings between 16384 and 16777215
      assertEquals("FRAME_SIZE_ERROR length > 16384: 16777216", e.getMessage());
    }
  } ##FSTMerge## @Test public void frameSizeError() throws IOException {
    Http20Draft15.Writer writer = new Http20Draft15.Writer(new Buffer(), true);

    try {
      writer.frameHeader(0, 16777216, Http20Draft15.TYPE_DATA, FLAG_NONE);
      fail();
    } catch (IllegalArgumentException e) {
      // TODO: real max is based on settings between 16384 and 16777215
      assertEquals("FRAME_SIZE_ERROR length > 16384: 16777216", e.getMessage());
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft15Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void ackSettingsAppliesMaxFrameSize() throws IOException {
    int newMaxFrameSize = 16777215;

    Http20Draft15.Writer writer = new Http20Draft15.Writer(new Buffer(), true);

    writer.ackSettings(new Settings().set(Settings.MAX_FRAME_SIZE, 0, newMaxFrameSize));

    assertEquals(newMaxFrameSize, writer.maxDataLength());
    writer.frameHeader(0, newMaxFrameSize, Http20Draft15.TYPE_DATA, FLAG_NONE);
  } ##FSTMerge## @Test public void ackSettingsAppliesMaxFrameSize() throws IOException {
    int newMaxFrameSize = 16777215;

    Http20Draft15.Writer writer = new Http20Draft15.Writer(new Buffer(), true);

    writer.ackSettings(new Settings().set(Settings.MAX_FRAME_SIZE, 0, newMaxFrameSize));

    assertEquals(newMaxFrameSize, writer.maxDataLength());
    writer.frameHeader(0, newMaxFrameSize, Http20Draft15.TYPE_DATA, FLAG_NONE);
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft15Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void streamIdHasReservedBit() throws IOException {
    Http20Draft15.Writer writer = new Http20Draft15.Writer(new Buffer(), true);

    try {
      int streamId = 3;
      streamId |= 1L << 31; // set reserved bit
      writer.frameHeader(streamId, Http20Draft15.INITIAL_MAX_FRAME_SIZE, Http20Draft15.TYPE_DATA, FLAG_NONE);
      fail();
    } catch (IllegalArgumentException e) {
      assertEquals("reserved bit set: -2147483645", e.getMessage());
    }
  } ##FSTMerge## @Test public void streamIdHasReservedBit() throws IOException {
    Http20Draft15.Writer writer = new Http20Draft15.Writer(new Buffer(), true);

    try {
      int streamId = 3;
      streamId |= 1L << 31; // set reserved bit
      writer.frameHeader(streamId, Http20Draft15.INITIAL_MAX_FRAME_SIZE, Http20Draft15.TYPE_DATA, FLAG_NONE);
      fail();
    } catch (IllegalArgumentException e) {
      assertEquals("reserved bit set: -2147483645", e.getMessage());
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft15Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Buffer literalHeaders(List<Header> sentHeaders) throws IOException {
    Buffer out = new Buffer();
    new HpackDraft09.Writer(out).writeHeaders(sentHeaders);
    return out;
  } ##FSTMerge## private Buffer literalHeaders(List<Header> sentHeaders) throws IOException {
    Buffer out = new Buffer();
    new HpackDraft09.Writer(out).writeHeaders(sentHeaders);
    return out;
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft15Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Buffer sendHeaderFrames(boolean outFinished, List<Header> headers) throws IOException {
    Buffer out = new Buffer();
    new Http20Draft15.Writer(out, true).headers(outFinished, expectedStreamId, headers);
    return out;
  } ##FSTMerge## private Buffer sendHeaderFrames(boolean outFinished, List<Header> headers) throws IOException {
    Buffer out = new Buffer();
    new Http20Draft15.Writer(out, true).headers(outFinished, expectedStreamId, headers);
    return out;
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft15Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Buffer sendPushPromiseFrames(int streamId, List<Header> headers) throws IOException {
    Buffer out = new Buffer();
    new Http20Draft15.Writer(out, true).pushPromise(expectedStreamId, streamId, headers);
    return out;
  } ##FSTMerge## private Buffer sendPushPromiseFrames(int streamId, List<Header> headers) throws IOException {
    Buffer out = new Buffer();
    new Http20Draft15.Writer(out, true).pushPromise(expectedStreamId, streamId, headers);
    return out;
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft15Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Buffer sendPingFrame(boolean ack, int payload1, int payload2) throws IOException {
    Buffer out = new Buffer();
    new Http20Draft15.Writer(out, true).ping(ack, payload1, payload2);
    return out;
  } ##FSTMerge## private Buffer sendPingFrame(boolean ack, int payload1, int payload2) throws IOException {
    Buffer out = new Buffer();
    new Http20Draft15.Writer(out, true).ping(ack, payload1, payload2);
    return out;
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft15Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Buffer sendGoAway(int lastGoodStreamId, ErrorCode errorCode, byte[] debugData)
      throws IOException {
    Buffer out = new Buffer();
    new Http20Draft15.Writer(out, true).goAway(lastGoodStreamId, errorCode, debugData);
    return out;
  } ##FSTMerge## private Buffer sendGoAway(int lastGoodStreamId, ErrorCode errorCode, byte[] debugData)
      throws IOException {
    Buffer out = new Buffer();
    new Http20Draft15.Writer(out, true).goAway(lastGoodStreamId, errorCode, debugData);
    return out;
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft15Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Buffer sendDataFrame(Buffer data) throws IOException {
    Buffer out = new Buffer();
    new Http20Draft15.Writer(out, true).dataFrame(expectedStreamId, FLAG_NONE, data,
        (int) data.size());
    return out;
  } ##FSTMerge## private Buffer sendDataFrame(Buffer data) throws IOException {
    Buffer out = new Buffer();
    new Http20Draft15.Writer(out, true).dataFrame(expectedStreamId, FLAG_NONE, data,
        (int) data.size());
    return out;
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft15Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Buffer windowUpdate(long windowSizeIncrement) throws IOException {
    Buffer out = new Buffer();
    new Http20Draft15.Writer(out, true).windowUpdate(expectedStreamId, windowSizeIncrement);
    return out;
  } ##FSTMerge## private Buffer windowUpdate(long windowSizeIncrement) throws IOException {
    Buffer out = new Buffer();
    new Http20Draft15.Writer(out, true).windowUpdate(expectedStreamId, windowSizeIncrement);
    return out;
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft15Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private FrameReader.Handler assertHeaderBlock() {
    return new BaseTestHandler() {
      @Override public void headers(boolean outFinished, boolean inFinished, int streamId,
          int associatedStreamId, List<Header> headerBlock, HeadersMode headersMode) {
        assertFalse(outFinished);
        assertFalse(inFinished);
        assertEquals(expectedStreamId, streamId);
        assertEquals(-1, associatedStreamId);
        assertEquals(headerEntries("foo", "barrr", "baz", "qux"), headerBlock);
        assertEquals(HeadersMode.HTTP_20_HEADERS, headersMode);
      }
    };
  } ##FSTMerge## private FrameReader.Handler assertHeaderBlock() {
    return new BaseTestHandler() {
      @Override public void headers(boolean outFinished, boolean inFinished, int streamId,
          int associatedStreamId, List<Header> headerBlock, HeadersMode headersMode) {
        assertFalse(outFinished);
        assertFalse(inFinished);
        assertEquals(expectedStreamId, streamId);
        assertEquals(-1, associatedStreamId);
        assertEquals(headerEntries("foo", "barrr", "baz", "qux"), headerBlock);
        assertEquals(HeadersMode.HTTP_20_HEADERS, headersMode);
      }
    };
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft15Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private FrameReader.Handler assertData() {
    return new BaseTestHandler() {
      @Override public void data(boolean inFinished, int streamId, BufferedSource source,
          int length) throws IOException {
        assertFalse(inFinished);
        assertEquals(expectedStreamId, streamId);
        assertEquals(1123, length);
        ByteString data = source.readByteString(length);
        for (byte b : data.toByteArray()) {
          assertEquals(2, b);
        }
      }
    };
  } ##FSTMerge## private FrameReader.Handler assertData() {
    return new BaseTestHandler() {
      @Override public void data(boolean inFinished, int streamId, BufferedSource source,
          int length) throws IOException {
        assertFalse(inFinished);
        assertEquals(expectedStreamId, streamId);
        assertEquals(1123, length);
        ByteString data = source.readByteString(length);
        for (byte b : data.toByteArray()) {
          assertEquals(2, b);
        }
      }
    };
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft15Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static Buffer gzip(byte[] data) throws IOException {
    Buffer buffer = new Buffer();
    Okio.buffer(new GzipSink(buffer)).write(data).close();
    return buffer;
  } ##FSTMerge## private static Buffer gzip(byte[] data) throws IOException {
    Buffer buffer = new Buffer();
    Okio.buffer(new GzipSink(buffer)).write(data).close();
    return buffer;
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft15Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static List<Header> largeHeaders() {
    String[] nameValues = new String[32];
    char[] chars = new char[512];
    for (int i = 0; i < nameValues.length;) {
      Arrays.fill(chars, (char) i);
      nameValues[i++] = nameValues[i++] = String.valueOf(chars);
    }
    return headerEntries(nameValues);
  } ##FSTMerge## private static List<Header> largeHeaders() {
    String[] nameValues = new String[32];
    char[] chars = new char[512];
    for (int i = 0; i < nameValues.length;) {
      Arrays.fill(chars, (char) i);
      nameValues[i++] = nameValues[i++] = String.valueOf(chars);
    }
    return headerEntries(nameValues);
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft15Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static void writeMedium(BufferedSink sink, int i) throws IOException {
    sink.writeByte((i >>> 16) & 0xff);
    sink.writeByte((i >>>  8) & 0xff);
    sink.writeByte( i         & 0xff);
  } ##FSTMerge## private static void writeMedium(BufferedSink sink, int i) throws IOException {
    sink.writeByte((i >>> 16) & 0xff);
    sink.writeByte((i >>>  8) & 0xff);
    sink.writeByte( i         & 0xff);
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http20Draft15Test.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final Buffer bytesIn = new Buffer(); ##FSTMerge## private final Buffer bytesIn = new Buffer();
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private HpackDraft09.Reader hpackReader; ##FSTMerge## private HpackDraft09.Reader hpackReader;
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Buffer bytesOut = new Buffer(); ##FSTMerge## private Buffer bytesOut = new Buffer();
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private HpackDraft09.Writer hpackWriter; ##FSTMerge## private HpackDraft09.Writer hpackWriter;
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Before public void reset() {
    hpackReader = newReader(bytesIn);
    hpackWriter = new HpackDraft09.Writer(bytesOut);
  } ##FSTMerge## @Before public void reset() {
    hpackReader = newReader(bytesIn);
    hpackWriter = new HpackDraft09.Writer(bytesOut);
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void largeHeaderValue() throws IOException {
    char[] value = new char[4096];
    Arrays.fill(value, '!');
    List<Header> headerBlock = headerEntries("cookie", new String(value));

    hpackWriter.writeHeaders(headerBlock);
    bytesIn.writeAll(bytesOut);
    hpackReader.readHeaders();

    assertEquals(0, hpackReader.headerCount);

    assertEquals(headerBlock, hpackReader.getAndResetHeaderList());
  } ##FSTMerge## @Test public void largeHeaderValue() throws IOException {
    char[] value = new char[4096];
    Arrays.fill(value, '!');
    List<Header> headerBlock = headerEntries("cookie", new String(value));

    hpackWriter.writeHeaders(headerBlock);
    bytesIn.writeAll(bytesOut);
    hpackReader.readHeaders();

    assertEquals(0, hpackReader.headerCount);

    assertEquals(headerBlock, hpackReader.getAndResetHeaderList());
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void tooLargeToHPackIsStillEmitted() throws IOException {
    bytesIn.writeByte(0x00); // Literal indexed
    bytesIn.writeByte(0x0a); // Literal name (len = 10)
    bytesIn.writeUtf8("custom-key");

    bytesIn.writeByte(0x0d); // Literal value (len = 13)
    bytesIn.writeUtf8("custom-header");

    hpackReader.maxHeaderTableByteCountSetting(1);
    hpackReader.readHeaders();

    assertEquals(0, hpackReader.headerCount);

    assertEquals(headerEntries("custom-key", "custom-header"), hpackReader.getAndResetHeaderList());
  } ##FSTMerge## @Test public void tooLargeToHPackIsStillEmitted() throws IOException {
    bytesIn.writeByte(0x00); // Literal indexed
    bytesIn.writeByte(0x0a); // Literal name (len = 10)
    bytesIn.writeUtf8("custom-key");

    bytesIn.writeByte(0x0d); // Literal value (len = 13)
    bytesIn.writeUtf8("custom-header");

    hpackReader.maxHeaderTableByteCountSetting(1);
    hpackReader.readHeaders();

    assertEquals(0, hpackReader.headerCount);

    assertEquals(headerEntries("custom-key", "custom-header"), hpackReader.getAndResetHeaderList());
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void testEviction() throws IOException {
    bytesIn.writeByte(0x40); // Literal indexed
    bytesIn.writeByte(0x0a); // Literal name (len = 10)
    bytesIn.writeUtf8("custom-foo");

    bytesIn.writeByte(0x0d); // Literal value (len = 13)
    bytesIn.writeUtf8("custom-header");

    bytesIn.writeByte(0x40); // Literal indexed
    bytesIn.writeByte(0x0a); // Literal name (len = 10)
    bytesIn.writeUtf8("custom-bar");

    bytesIn.writeByte(0x0d); // Literal value (len = 13)
    bytesIn.writeUtf8("custom-header");

    bytesIn.writeByte(0x40); // Literal indexed
    bytesIn.writeByte(0x0a); // Literal name (len = 10)
    bytesIn.writeUtf8("custom-baz");

    bytesIn.writeByte(0x0d); // Literal value (len = 13)
    bytesIn.writeUtf8("custom-header");

    // Set to only support 110 bytes (enough for 2 headers).
    hpackReader.maxHeaderTableByteCountSetting(110);
    hpackReader.readHeaders();

    assertEquals(2, hpackReader.headerCount);

    Header entry = hpackReader.headerTable[headerTableLength() - 1];
    checkEntry(entry, "custom-bar", "custom-header", 55);

    entry = hpackReader.headerTable[headerTableLength() - 2];
    checkEntry(entry, "custom-baz", "custom-header", 55);

    // Once a header field is decoded and added to the reconstructed header
    // list, it cannot be removed from it. Hence, foo is here.
    assertEquals(
        headerEntries(
            "custom-foo", "custom-header",
            "custom-bar", "custom-header",
            "custom-baz", "custom-header"),
        hpackReader.getAndResetHeaderList());

    // Simulate receiving a small settings frame, that implies eviction.
    hpackReader.maxHeaderTableByteCountSetting(55);
    assertEquals(1, hpackReader.headerCount);
  } ##FSTMerge## @Test public void testEviction() throws IOException {
    bytesIn.writeByte(0x40); // Literal indexed
    bytesIn.writeByte(0x0a); // Literal name (len = 10)
    bytesIn.writeUtf8("custom-foo");

    bytesIn.writeByte(0x0d); // Literal value (len = 13)
    bytesIn.writeUtf8("custom-header");

    bytesIn.writeByte(0x40); // Literal indexed
    bytesIn.writeByte(0x0a); // Literal name (len = 10)
    bytesIn.writeUtf8("custom-bar");

    bytesIn.writeByte(0x0d); // Literal value (len = 13)
    bytesIn.writeUtf8("custom-header");

    bytesIn.writeByte(0x40); // Literal indexed
    bytesIn.writeByte(0x0a); // Literal name (len = 10)
    bytesIn.writeUtf8("custom-baz");

    bytesIn.writeByte(0x0d); // Literal value (len = 13)
    bytesIn.writeUtf8("custom-header");

    // Set to only support 110 bytes (enough for 2 headers).
    hpackReader.maxHeaderTableByteCountSetting(110);
    hpackReader.readHeaders();

    assertEquals(2, hpackReader.headerCount);

    Header entry = hpackReader.headerTable[headerTableLength() - 1];
    checkEntry(entry, "custom-bar", "custom-header", 55);

    entry = hpackReader.headerTable[headerTableLength() - 2];
    checkEntry(entry, "custom-baz", "custom-header", 55);

    // Once a header field is decoded and added to the reconstructed header
    // list, it cannot be removed from it. Hence, foo is here.
    assertEquals(
        headerEntries(
            "custom-foo", "custom-header",
            "custom-bar", "custom-header",
            "custom-baz", "custom-header"),
        hpackReader.getAndResetHeaderList());

    // Simulate receiving a small settings frame, that implies eviction.
    hpackReader.maxHeaderTableByteCountSetting(55);
    assertEquals(1, hpackReader.headerCount);
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void dynamicallyGrowsBeyond64Entries() throws IOException {
    for (int i = 0; i < 256; i++) {
      bytesIn.writeByte(0x40); // Literal indexed
      bytesIn.writeByte(0x0a); // Literal name (len = 10)
      bytesIn.writeUtf8("custom-foo");

      bytesIn.writeByte(0x0d); // Literal value (len = 13)
      bytesIn.writeUtf8("custom-header");
    }

    hpackReader.maxHeaderTableByteCountSetting(16384); // Lots of headers need more room!
    hpackReader.readHeaders();

    assertEquals(256, hpackReader.headerCount);
  } ##FSTMerge## @Test public void dynamicallyGrowsBeyond64Entries() throws IOException {
    for (int i = 0; i < 256; i++) {
      bytesIn.writeByte(0x40); // Literal indexed
      bytesIn.writeByte(0x0a); // Literal name (len = 10)
      bytesIn.writeUtf8("custom-foo");

      bytesIn.writeByte(0x0d); // Literal value (len = 13)
      bytesIn.writeUtf8("custom-header");
    }

    hpackReader.maxHeaderTableByteCountSetting(16384); // Lots of headers need more room!
    hpackReader.readHeaders();

    assertEquals(256, hpackReader.headerCount);
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void huffmanDecodingSupported() throws IOException {
    bytesIn.writeByte(0x44); // == Literal indexed ==
                             // Indexed name (idx = 4) -> :path
    bytesIn.writeByte(0x8c); // Literal value Huffman encoded 12 bytes
                             // decodes to www.example.com which is length 15
    bytesIn.write(decodeHex("f1e3c2e5f23a6ba0ab90f4ff"));

    hpackReader.readHeaders();

    assertEquals(1, hpackReader.headerCount);
    assertEquals(52, hpackReader.headerTableByteCount);

    Header entry = hpackReader.headerTable[headerTableLength() - 1];
    checkEntry(entry, ":path", "www.example.com", 52);
  } ##FSTMerge## @Test public void huffmanDecodingSupported() throws IOException {
    bytesIn.writeByte(0x44); // == Literal indexed ==
                             // Indexed name (idx = 4) -> :path
    bytesIn.writeByte(0x8c); // Literal value Huffman encoded 12 bytes
                             // decodes to www.example.com which is length 15
    bytesIn.write(decodeHex("f1e3c2e5f23a6ba0ab90f4ff"));

    hpackReader.readHeaders();

    assertEquals(1, hpackReader.headerCount);
    assertEquals(52, hpackReader.headerTableByteCount);

    Header entry = hpackReader.headerTable[headerTableLength() - 1];
    checkEntry(entry, ":path", "www.example.com", 52);
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void readLiteralHeaderFieldWithIndexing() throws IOException {
    bytesIn.writeByte(0x40); // Literal indexed
    bytesIn.writeByte(0x0a); // Literal name (len = 10)
    bytesIn.writeUtf8("custom-key");

    bytesIn.writeByte(0x0d); // Literal value (len = 13)
    bytesIn.writeUtf8("custom-header");

    hpackReader.readHeaders();

    assertEquals(1, hpackReader.headerCount);
    assertEquals(55, hpackReader.headerTableByteCount);

    Header entry = hpackReader.headerTable[headerTableLength() - 1];
    checkEntry(entry, "custom-key", "custom-header", 55);

    assertEquals(headerEntries("custom-key", "custom-header"), hpackReader.getAndResetHeaderList());
  } ##FSTMerge## @Test public void readLiteralHeaderFieldWithIndexing() throws IOException {
    bytesIn.writeByte(0x40); // Literal indexed
    bytesIn.writeByte(0x0a); // Literal name (len = 10)
    bytesIn.writeUtf8("custom-key");

    bytesIn.writeByte(0x0d); // Literal value (len = 13)
    bytesIn.writeUtf8("custom-header");

    hpackReader.readHeaders();

    assertEquals(1, hpackReader.headerCount);
    assertEquals(55, hpackReader.headerTableByteCount);

    Header entry = hpackReader.headerTable[headerTableLength() - 1];
    checkEntry(entry, "custom-key", "custom-header", 55);

    assertEquals(headerEntries("custom-key", "custom-header"), hpackReader.getAndResetHeaderList());
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void literalHeaderFieldWithoutIndexingIndexedName() throws IOException {
    List<Header> headerBlock = headerEntries(":path", "/sample/path");

    bytesIn.writeByte(0x04); // == Literal not indexed ==
                             // Indexed name (idx = 4) -> :path
    bytesIn.writeByte(0x0c); // Literal value (len = 12)
    bytesIn.writeUtf8("/sample/path");

    hpackWriter.writeHeaders(headerBlock);
    assertEquals(bytesIn, bytesOut);

    hpackReader.readHeaders();

    assertEquals(0, hpackReader.headerCount);

    assertEquals(headerBlock, hpackReader.getAndResetHeaderList());
  } ##FSTMerge## @Test public void literalHeaderFieldWithoutIndexingIndexedName() throws IOException {
    List<Header> headerBlock = headerEntries(":path", "/sample/path");

    bytesIn.writeByte(0x04); // == Literal not indexed ==
                             // Indexed name (idx = 4) -> :path
    bytesIn.writeByte(0x0c); // Literal value (len = 12)
    bytesIn.writeUtf8("/sample/path");

    hpackWriter.writeHeaders(headerBlock);
    assertEquals(bytesIn, bytesOut);

    hpackReader.readHeaders();

    assertEquals(0, hpackReader.headerCount);

    assertEquals(headerBlock, hpackReader.getAndResetHeaderList());
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void literalHeaderFieldWithoutIndexingNewName() throws IOException {
    List<Header> headerBlock = headerEntries("custom-key", "custom-header");

    bytesIn.writeByte(0x00); // Not indexed
    bytesIn.writeByte(0x0a); // Literal name (len = 10)
    bytesIn.writeUtf8("custom-key");

    bytesIn.writeByte(0x0d); // Literal value (len = 13)
    bytesIn.writeUtf8("custom-header");

    hpackWriter.writeHeaders(headerBlock);
    assertEquals(bytesIn, bytesOut);

    hpackReader.readHeaders();

    assertEquals(0, hpackReader.headerCount);

    assertEquals(headerBlock, hpackReader.getAndResetHeaderList());
  } ##FSTMerge## @Test public void literalHeaderFieldWithoutIndexingNewName() throws IOException {
    List<Header> headerBlock = headerEntries("custom-key", "custom-header");

    bytesIn.writeByte(0x00); // Not indexed
    bytesIn.writeByte(0x0a); // Literal name (len = 10)
    bytesIn.writeUtf8("custom-key");

    bytesIn.writeByte(0x0d); // Literal value (len = 13)
    bytesIn.writeUtf8("custom-header");

    hpackWriter.writeHeaders(headerBlock);
    assertEquals(bytesIn, bytesOut);

    hpackReader.readHeaders();

    assertEquals(0, hpackReader.headerCount);

    assertEquals(headerBlock, hpackReader.getAndResetHeaderList());
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void literalHeaderFieldNeverIndexedIndexedName() throws IOException {
    bytesIn.writeByte(0x14); // == Literal never indexed ==
                             // Indexed name (idx = 4) -> :path
    bytesIn.writeByte(0x0c); // Literal value (len = 12)
    bytesIn.writeUtf8("/sample/path");

    hpackReader.readHeaders();

    assertEquals(0, hpackReader.headerCount);

    assertEquals(headerEntries(":path", "/sample/path"), hpackReader.getAndResetHeaderList());
  } ##FSTMerge## @Test public void literalHeaderFieldNeverIndexedIndexedName() throws IOException {
    bytesIn.writeByte(0x14); // == Literal never indexed ==
                             // Indexed name (idx = 4) -> :path
    bytesIn.writeByte(0x0c); // Literal value (len = 12)
    bytesIn.writeUtf8("/sample/path");

    hpackReader.readHeaders();

    assertEquals(0, hpackReader.headerCount);

    assertEquals(headerEntries(":path", "/sample/path"), hpackReader.getAndResetHeaderList());
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void literalHeaderFieldNeverIndexedNewName() throws IOException {
    bytesIn.writeByte(0x10); // Never indexed
    bytesIn.writeByte(0x0a); // Literal name (len = 10)
    bytesIn.writeUtf8("custom-key");

    bytesIn.writeByte(0x0d); // Literal value (len = 13)
    bytesIn.writeUtf8("custom-header");

    hpackReader.readHeaders();

    assertEquals(0, hpackReader.headerCount);

    assertEquals(headerEntries("custom-key", "custom-header"), hpackReader.getAndResetHeaderList());
  } ##FSTMerge## @Test public void literalHeaderFieldNeverIndexedNewName() throws IOException {
    bytesIn.writeByte(0x10); // Never indexed
    bytesIn.writeByte(0x0a); // Literal name (len = 10)
    bytesIn.writeUtf8("custom-key");

    bytesIn.writeByte(0x0d); // Literal value (len = 13)
    bytesIn.writeUtf8("custom-header");

    hpackReader.readHeaders();

    assertEquals(0, hpackReader.headerCount);

    assertEquals(headerEntries("custom-key", "custom-header"), hpackReader.getAndResetHeaderList());
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void staticHeaderIsNotCopiedIntoTheIndexedTable() throws IOException {
    bytesIn.writeByte(0x82); // == Indexed - Add ==
                             // idx = 2 -> :method: GET

    hpackReader.readHeaders();

    assertEquals(0, hpackReader.headerCount);
    assertEquals(0, hpackReader.headerTableByteCount);

    assertEquals(null, hpackReader.headerTable[headerTableLength() - 1]);

    assertEquals(headerEntries(":method", "GET"), hpackReader.getAndResetHeaderList());
  } ##FSTMerge## @Test public void staticHeaderIsNotCopiedIntoTheIndexedTable() throws IOException {
    bytesIn.writeByte(0x82); // == Indexed - Add ==
                             // idx = 2 -> :method: GET

    hpackReader.readHeaders();

    assertEquals(0, hpackReader.headerCount);
    assertEquals(0, hpackReader.headerTableByteCount);

    assertEquals(null, hpackReader.headerTable[headerTableLength() - 1]);

    assertEquals(headerEntries(":method", "GET"), hpackReader.getAndResetHeaderList());
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void readIndexedHeaderFieldIndex0() throws IOException {
    bytesIn.writeByte(0x80); // == Indexed - Add idx = 0

    try {
      hpackReader.readHeaders();
      fail();
    } catch (IOException e) {
      assertEquals("index == 0", e.getMessage());
    }
  } ##FSTMerge## @Test public void readIndexedHeaderFieldIndex0() throws IOException {
    bytesIn.writeByte(0x80); // == Indexed - Add idx = 0

    try {
      hpackReader.readHeaders();
      fail();
    } catch (IOException e) {
      assertEquals("index == 0", e.getMessage());
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void readIndexedHeaderFieldTooLargeIndex() throws IOException {
    bytesIn.writeShort(0xff00); // == Indexed - Add idx = 127

    try {
      hpackReader.readHeaders();
      fail();
    } catch (IOException e) {
      assertEquals("Header index too large 127", e.getMessage());
    }
  } ##FSTMerge## @Test public void readIndexedHeaderFieldTooLargeIndex() throws IOException {
    bytesIn.writeShort(0xff00); // == Indexed - Add idx = 127

    try {
      hpackReader.readHeaders();
      fail();
    } catch (IOException e) {
      assertEquals("Header index too large 127", e.getMessage());
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void readIndexedHeaderFieldInsidiousIndex() throws IOException {
    bytesIn.writeByte(0xff); // == Indexed - Add ==
    bytesIn.write(decodeHex("8080808008")); // idx = -2147483521

    try {
      hpackReader.readHeaders();
      fail();
    } catch (IOException e) {
      assertEquals("Header index too large -2147483521", e.getMessage());
    }
  } ##FSTMerge## @Test public void readIndexedHeaderFieldInsidiousIndex() throws IOException {
    bytesIn.writeByte(0xff); // == Indexed - Add ==
    bytesIn.write(decodeHex("8080808008")); // idx = -2147483521

    try {
      hpackReader.readHeaders();
      fail();
    } catch (IOException e) {
      assertEquals("Header index too large -2147483521", e.getMessage());
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void minMaxHeaderTableSize() throws IOException {
    bytesIn.writeByte(0x20);
    hpackReader.readHeaders();

    assertEquals(0, hpackReader.maxHeaderTableByteCount());

    bytesIn.writeByte(0x3f); // encode size 4096
    bytesIn.writeByte(0xe1);
    bytesIn.writeByte(0x1f);
    hpackReader.readHeaders();

    assertEquals(4096, hpackReader.maxHeaderTableByteCount());
  } ##FSTMerge## @Test public void minMaxHeaderTableSize() throws IOException {
    bytesIn.writeByte(0x20);
    hpackReader.readHeaders();

    assertEquals(0, hpackReader.maxHeaderTableByteCount());

    bytesIn.writeByte(0x3f); // encode size 4096
    bytesIn.writeByte(0xe1);
    bytesIn.writeByte(0x1f);
    hpackReader.readHeaders();

    assertEquals(4096, hpackReader.maxHeaderTableByteCount());
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void cannotSetTableSizeLargerThanSettingsValue() throws IOException {
    bytesIn.writeByte(0x3f); // encode size 4097
    bytesIn.writeByte(0xe2);
    bytesIn.writeByte(0x1f);

    try {
      hpackReader.readHeaders();
      fail();
    } catch (IOException e) {
      assertEquals("Invalid header table byte count 4097", e.getMessage());
    }
  } ##FSTMerge## @Test public void cannotSetTableSizeLargerThanSettingsValue() throws IOException {
    bytesIn.writeByte(0x3f); // encode size 4097
    bytesIn.writeByte(0xe2);
    bytesIn.writeByte(0x1f);

    try {
      hpackReader.readHeaders();
      fail();
    } catch (IOException e) {
      assertEquals("Invalid header table byte count 4097", e.getMessage());
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void readHeaderTableStateChangeInsidiousMaxHeaderByteCount() throws IOException {
    bytesIn.writeByte(0x3f);
    bytesIn.write(decodeHex("e1ffffff07")); // count = -2147483648

    try {
      hpackReader.readHeaders();
      fail();
    } catch (IOException e) {
      assertEquals("Invalid header table byte count -2147483648", e.getMessage());
    }
  } ##FSTMerge## @Test public void readHeaderTableStateChangeInsidiousMaxHeaderByteCount() throws IOException {
    bytesIn.writeByte(0x3f);
    bytesIn.write(decodeHex("e1ffffff07")); // count = -2147483648

    try {
      hpackReader.readHeaders();
      fail();
    } catch (IOException e) {
      assertEquals("Invalid header table byte count -2147483648", e.getMessage());
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void readIndexedHeaderFieldFromStaticTableWithoutBuffering() throws IOException {
    bytesIn.writeByte(0x82); // == Indexed - Add ==
                             // idx = 2 -> :method: GET

    hpackReader.maxHeaderTableByteCountSetting(0); // SETTINGS_HEADER_TABLE_SIZE == 0
    hpackReader.readHeaders();

    // Not buffered in header table.
    assertEquals(0, hpackReader.headerCount);

    assertEquals(headerEntries(":method", "GET"), hpackReader.getAndResetHeaderList());
  } ##FSTMerge## @Test public void readIndexedHeaderFieldFromStaticTableWithoutBuffering() throws IOException {
    bytesIn.writeByte(0x82); // == Indexed - Add ==
                             // idx = 2 -> :method: GET

    hpackReader.maxHeaderTableByteCountSetting(0); // SETTINGS_HEADER_TABLE_SIZE == 0
    hpackReader.readHeaders();

    // Not buffered in header table.
    assertEquals(0, hpackReader.headerCount);

    assertEquals(headerEntries(":method", "GET"), hpackReader.getAndResetHeaderList());
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void readRequestExamplesWithoutHuffman() throws IOException {
    firstRequestWithoutHuffman();
    hpackReader.readHeaders();
    checkReadFirstRequestWithoutHuffman();

    secondRequestWithoutHuffman();
    hpackReader.readHeaders();
    checkReadSecondRequestWithoutHuffman();

    thirdRequestWithoutHuffman();
    hpackReader.readHeaders();
    checkReadThirdRequestWithoutHuffman();
  } ##FSTMerge## @Test public void readRequestExamplesWithoutHuffman() throws IOException {
    firstRequestWithoutHuffman();
    hpackReader.readHeaders();
    checkReadFirstRequestWithoutHuffman();

    secondRequestWithoutHuffman();
    hpackReader.readHeaders();
    checkReadSecondRequestWithoutHuffman();

    thirdRequestWithoutHuffman();
    hpackReader.readHeaders();
    checkReadThirdRequestWithoutHuffman();
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void firstRequestWithoutHuffman() {
    bytesIn.writeByte(0x82); // == Indexed - Add ==
                             // idx = 2 -> :method: GET
    bytesIn.writeByte(0x86); // == Indexed - Add ==
                             // idx = 7 -> :scheme: http
    bytesIn.writeByte(0x84); // == Indexed - Add ==
                             // idx = 6 -> :path: /
    bytesIn.writeByte(0x41); // == Literal indexed ==
                             // Indexed name (idx = 4) -> :authority
    bytesIn.writeByte(0x0f); // Literal value (len = 15)
    bytesIn.writeUtf8("www.example.com");
  } ##FSTMerge## private void firstRequestWithoutHuffman() {
    bytesIn.writeByte(0x82); // == Indexed - Add ==
                             // idx = 2 -> :method: GET
    bytesIn.writeByte(0x86); // == Indexed - Add ==
                             // idx = 7 -> :scheme: http
    bytesIn.writeByte(0x84); // == Indexed - Add ==
                             // idx = 6 -> :path: /
    bytesIn.writeByte(0x41); // == Literal indexed ==
                             // Indexed name (idx = 4) -> :authority
    bytesIn.writeByte(0x0f); // Literal value (len = 15)
    bytesIn.writeUtf8("www.example.com");
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void checkReadFirstRequestWithoutHuffman() {
    assertEquals(1, hpackReader.headerCount);

    // [  1] (s =  57) :authority: www.example.com
    Header entry = hpackReader.headerTable[headerTableLength() - 1];
    checkEntry(entry, ":authority", "www.example.com", 57);

    // Table size: 57
    assertEquals(57, hpackReader.headerTableByteCount);

    // Decoded header list:
    assertEquals(headerEntries(
        ":method", "GET",
        ":scheme", "http",
        ":path", "/",
        ":authority", "www.example.com"), hpackReader.getAndResetHeaderList());
  } ##FSTMerge## private void checkReadFirstRequestWithoutHuffman() {
    assertEquals(1, hpackReader.headerCount);

    // [  1] (s =  57) :authority: www.example.com
    Header entry = hpackReader.headerTable[headerTableLength() - 1];
    checkEntry(entry, ":authority", "www.example.com", 57);

    // Table size: 57
    assertEquals(57, hpackReader.headerTableByteCount);

    // Decoded header list:
    assertEquals(headerEntries(
        ":method", "GET",
        ":scheme", "http",
        ":path", "/",
        ":authority", "www.example.com"), hpackReader.getAndResetHeaderList());
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void secondRequestWithoutHuffman() {
    bytesIn.writeByte(0x82); // == Indexed - Add ==
                             // idx = 2 -> :method: GET
    bytesIn.writeByte(0x86); // == Indexed - Add ==
                             // idx = 7 -> :scheme: http
    bytesIn.writeByte(0x84); // == Indexed - Add ==
                             // idx = 6 -> :path: /
    bytesIn.writeByte(0xbe); // == Indexed - Add ==
                             // Indexed name (idx = 62) -> :authority: www.example.com
    bytesIn.writeByte(0x58); // == Literal indexed ==
                             // Indexed name (idx = 24) -> cache-control
    bytesIn.writeByte(0x08); // Literal value (len = 8)
    bytesIn.writeUtf8("no-cache");
  } ##FSTMerge## private void secondRequestWithoutHuffman() {
    bytesIn.writeByte(0x82); // == Indexed - Add ==
                             // idx = 2 -> :method: GET
    bytesIn.writeByte(0x86); // == Indexed - Add ==
                             // idx = 7 -> :scheme: http
    bytesIn.writeByte(0x84); // == Indexed - Add ==
                             // idx = 6 -> :path: /
    bytesIn.writeByte(0xbe); // == Indexed - Add ==
                             // Indexed name (idx = 62) -> :authority: www.example.com
    bytesIn.writeByte(0x58); // == Literal indexed ==
                             // Indexed name (idx = 24) -> cache-control
    bytesIn.writeByte(0x08); // Literal value (len = 8)
    bytesIn.writeUtf8("no-cache");
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void checkReadSecondRequestWithoutHuffman() {
    assertEquals(2, hpackReader.headerCount);

    // [  1] (s =  53) cache-control: no-cache
    Header entry = hpackReader.headerTable[headerTableLength() - 2];
    checkEntry(entry, "cache-control", "no-cache", 53);

    // [  2] (s =  57) :authority: www.example.com
    entry = hpackReader.headerTable[headerTableLength() - 1];
    checkEntry(entry, ":authority", "www.example.com", 57);

    // Table size: 110
    assertEquals(110, hpackReader.headerTableByteCount);

    // Decoded header list:
    assertEquals(headerEntries(
        ":method", "GET",
        ":scheme", "http",
        ":path", "/",
        ":authority", "www.example.com",
        "cache-control", "no-cache"), hpackReader.getAndResetHeaderList());
  } ##FSTMerge## private void checkReadSecondRequestWithoutHuffman() {
    assertEquals(2, hpackReader.headerCount);

    // [  1] (s =  53) cache-control: no-cache
    Header entry = hpackReader.headerTable[headerTableLength() - 2];
    checkEntry(entry, "cache-control", "no-cache", 53);

    // [  2] (s =  57) :authority: www.example.com
    entry = hpackReader.headerTable[headerTableLength() - 1];
    checkEntry(entry, ":authority", "www.example.com", 57);

    // Table size: 110
    assertEquals(110, hpackReader.headerTableByteCount);

    // Decoded header list:
    assertEquals(headerEntries(
        ":method", "GET",
        ":scheme", "http",
        ":path", "/",
        ":authority", "www.example.com",
        "cache-control", "no-cache"), hpackReader.getAndResetHeaderList());
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void thirdRequestWithoutHuffman() {
    bytesIn.writeByte(0x82); // == Indexed - Add ==
                             // idx = 2 -> :method: GET
    bytesIn.writeByte(0x87); // == Indexed - Add ==
                             // idx = 7 -> :scheme: http
    bytesIn.writeByte(0x85); // == Indexed - Add ==
                             // idx = 5 -> :path: /index.html
    bytesIn.writeByte(0xbf); // == Indexed - Add ==
                             // Indexed name (idx = 63) -> :authority: www.example.com
    bytesIn.writeByte(0x40); // Literal indexed
    bytesIn.writeByte(0x0a); // Literal name (len = 10)
    bytesIn.writeUtf8("custom-key");
    bytesIn.writeByte(0x0c); // Literal value (len = 12)
    bytesIn.writeUtf8("custom-value");
  } ##FSTMerge## private void thirdRequestWithoutHuffman() {
    bytesIn.writeByte(0x82); // == Indexed - Add ==
                             // idx = 2 -> :method: GET
    bytesIn.writeByte(0x87); // == Indexed - Add ==
                             // idx = 7 -> :scheme: http
    bytesIn.writeByte(0x85); // == Indexed - Add ==
                             // idx = 5 -> :path: /index.html
    bytesIn.writeByte(0xbf); // == Indexed - Add ==
                             // Indexed name (idx = 63) -> :authority: www.example.com
    bytesIn.writeByte(0x40); // Literal indexed
    bytesIn.writeByte(0x0a); // Literal name (len = 10)
    bytesIn.writeUtf8("custom-key");
    bytesIn.writeByte(0x0c); // Literal value (len = 12)
    bytesIn.writeUtf8("custom-value");
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void checkReadThirdRequestWithoutHuffman() {
    assertEquals(3, hpackReader.headerCount);

    // [  1] (s =  54) custom-key: custom-value
    Header entry = hpackReader.headerTable[headerTableLength() - 3];
    checkEntry(entry, "custom-key", "custom-value", 54);

    // [  2] (s =  53) cache-control: no-cache
    entry = hpackReader.headerTable[headerTableLength() - 2];
    checkEntry(entry, "cache-control", "no-cache", 53);

    // [  3] (s =  57) :authority: www.example.com
    entry = hpackReader.headerTable[headerTableLength() - 1];
    checkEntry(entry, ":authority", "www.example.com", 57);

    // Table size: 164
    assertEquals(164, hpackReader.headerTableByteCount);

    // Decoded header list:
    assertEquals(headerEntries(
        ":method", "GET",
        ":scheme", "https",
        ":path", "/index.html",
        ":authority", "www.example.com",
        "custom-key", "custom-value"), hpackReader.getAndResetHeaderList());
  } ##FSTMerge## private void checkReadThirdRequestWithoutHuffman() {
    assertEquals(3, hpackReader.headerCount);

    // [  1] (s =  54) custom-key: custom-value
    Header entry = hpackReader.headerTable[headerTableLength() - 3];
    checkEntry(entry, "custom-key", "custom-value", 54);

    // [  2] (s =  53) cache-control: no-cache
    entry = hpackReader.headerTable[headerTableLength() - 2];
    checkEntry(entry, "cache-control", "no-cache", 53);

    // [  3] (s =  57) :authority: www.example.com
    entry = hpackReader.headerTable[headerTableLength() - 1];
    checkEntry(entry, ":authority", "www.example.com", 57);

    // Table size: 164
    assertEquals(164, hpackReader.headerTableByteCount);

    // Decoded header list:
    assertEquals(headerEntries(
        ":method", "GET",
        ":scheme", "https",
        ":path", "/index.html",
        ":authority", "www.example.com",
        "custom-key", "custom-value"), hpackReader.getAndResetHeaderList());
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void readRequestExamplesWithHuffman() throws IOException {
    firstRequestWithHuffman();
    hpackReader.readHeaders();
    checkReadFirstRequestWithHuffman();

    secondRequestWithHuffman();
    hpackReader.readHeaders();
    checkReadSecondRequestWithHuffman();

    thirdRequestWithHuffman();
    hpackReader.readHeaders();
    checkReadThirdRequestWithHuffman();
  } ##FSTMerge## @Test public void readRequestExamplesWithHuffman() throws IOException {
    firstRequestWithHuffman();
    hpackReader.readHeaders();
    checkReadFirstRequestWithHuffman();

    secondRequestWithHuffman();
    hpackReader.readHeaders();
    checkReadSecondRequestWithHuffman();

    thirdRequestWithHuffman();
    hpackReader.readHeaders();
    checkReadThirdRequestWithHuffman();
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void firstRequestWithHuffman() {
    bytesIn.writeByte(0x82); // == Indexed - Add ==
                             // idx = 2 -> :method: GET
    bytesIn.writeByte(0x86); // == Indexed - Add ==
                             // idx = 6 -> :scheme: http
    bytesIn.writeByte(0x84); // == Indexed - Add ==
                             // idx = 4 -> :path: /
    bytesIn.writeByte(0x41); // == Literal indexed ==
                             // Indexed name (idx = 1) -> :authority
    bytesIn.writeByte(0x8c); // Literal value Huffman encoded 12 bytes
                             // decodes to www.example.com which is length 15
    bytesIn.write(decodeHex("f1e3c2e5f23a6ba0ab90f4ff"));
  } ##FSTMerge## private void firstRequestWithHuffman() {
    bytesIn.writeByte(0x82); // == Indexed - Add ==
                             // idx = 2 -> :method: GET
    bytesIn.writeByte(0x86); // == Indexed - Add ==
                             // idx = 6 -> :scheme: http
    bytesIn.writeByte(0x84); // == Indexed - Add ==
                             // idx = 4 -> :path: /
    bytesIn.writeByte(0x41); // == Literal indexed ==
                             // Indexed name (idx = 1) -> :authority
    bytesIn.writeByte(0x8c); // Literal value Huffman encoded 12 bytes
                             // decodes to www.example.com which is length 15
    bytesIn.write(decodeHex("f1e3c2e5f23a6ba0ab90f4ff"));
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void checkReadFirstRequestWithHuffman() {
    assertEquals(1, hpackReader.headerCount);

    // [  1] (s =  57) :authority: www.example.com
    Header entry = hpackReader.headerTable[headerTableLength() - 1];
    checkEntry(entry, ":authority", "www.example.com", 57);

    // Table size: 57
    assertEquals(57, hpackReader.headerTableByteCount);

    // Decoded header list:
    assertEquals(headerEntries(
        ":method", "GET",
        ":scheme", "http",
        ":path", "/",
        ":authority", "www.example.com"), hpackReader.getAndResetHeaderList());
  } ##FSTMerge## private void checkReadFirstRequestWithHuffman() {
    assertEquals(1, hpackReader.headerCount);

    // [  1] (s =  57) :authority: www.example.com
    Header entry = hpackReader.headerTable[headerTableLength() - 1];
    checkEntry(entry, ":authority", "www.example.com", 57);

    // Table size: 57
    assertEquals(57, hpackReader.headerTableByteCount);

    // Decoded header list:
    assertEquals(headerEntries(
        ":method", "GET",
        ":scheme", "http",
        ":path", "/",
        ":authority", "www.example.com"), hpackReader.getAndResetHeaderList());
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void secondRequestWithHuffman() {
    bytesIn.writeByte(0x82); // == Indexed - Add ==
                             // idx = 2 -> :method: GET
    bytesIn.writeByte(0x86); // == Indexed - Add ==
                             // idx = 6 -> :scheme: http
    bytesIn.writeByte(0x84); // == Indexed - Add ==
                             // idx = 4 -> :path: /
    bytesIn.writeByte(0xbe); // == Indexed - Add ==
                             // idx = 62 -> :authority: www.example.com
    bytesIn.writeByte(0x58); // == Literal indexed ==
                             // Indexed name (idx = 24) -> cache-control
    bytesIn.writeByte(0x86); // Literal value Huffman encoded 6 bytes
                             // decodes to no-cache which is length 8
    bytesIn.write(decodeHex("a8eb10649cbf"));
  } ##FSTMerge## private void secondRequestWithHuffman() {
    bytesIn.writeByte(0x82); // == Indexed - Add ==
                             // idx = 2 -> :method: GET
    bytesIn.writeByte(0x86); // == Indexed - Add ==
                             // idx = 6 -> :scheme: http
    bytesIn.writeByte(0x84); // == Indexed - Add ==
                             // idx = 4 -> :path: /
    bytesIn.writeByte(0xbe); // == Indexed - Add ==
                             // idx = 62 -> :authority: www.example.com
    bytesIn.writeByte(0x58); // == Literal indexed ==
                             // Indexed name (idx = 24) -> cache-control
    bytesIn.writeByte(0x86); // Literal value Huffman encoded 6 bytes
                             // decodes to no-cache which is length 8
    bytesIn.write(decodeHex("a8eb10649cbf"));
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void checkReadSecondRequestWithHuffman() {
    assertEquals(2, hpackReader.headerCount);

    // [  1] (s =  53) cache-control: no-cache
    Header entry = hpackReader.headerTable[headerTableLength() - 2];
    checkEntry(entry, "cache-control", "no-cache", 53);

    // [  2] (s =  57) :authority: www.example.com
    entry = hpackReader.headerTable[headerTableLength() - 1];
    checkEntry(entry, ":authority", "www.example.com", 57);

    // Table size: 110
    assertEquals(110, hpackReader.headerTableByteCount);

    // Decoded header list:
    assertEquals(headerEntries(
        ":method", "GET",
        ":scheme", "http",
        ":path", "/",
        ":authority", "www.example.com",
        "cache-control", "no-cache"), hpackReader.getAndResetHeaderList());
  } ##FSTMerge## private void checkReadSecondRequestWithHuffman() {
    assertEquals(2, hpackReader.headerCount);

    // [  1] (s =  53) cache-control: no-cache
    Header entry = hpackReader.headerTable[headerTableLength() - 2];
    checkEntry(entry, "cache-control", "no-cache", 53);

    // [  2] (s =  57) :authority: www.example.com
    entry = hpackReader.headerTable[headerTableLength() - 1];
    checkEntry(entry, ":authority", "www.example.com", 57);

    // Table size: 110
    assertEquals(110, hpackReader.headerTableByteCount);

    // Decoded header list:
    assertEquals(headerEntries(
        ":method", "GET",
        ":scheme", "http",
        ":path", "/",
        ":authority", "www.example.com",
        "cache-control", "no-cache"), hpackReader.getAndResetHeaderList());
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void thirdRequestWithHuffman() {
    bytesIn.writeByte(0x82); // == Indexed - Add ==
                             // idx = 2 -> :method: GET
    bytesIn.writeByte(0x87); // == Indexed - Add ==
                             // idx = 7 -> :scheme: https
    bytesIn.writeByte(0x85); // == Indexed - Add ==
                             // idx = 5 -> :path: /index.html
    bytesIn.writeByte(0xbf); // == Indexed - Add ==
                             // idx = 63 -> :authority: www.example.com
    bytesIn.writeByte(0x40); // Literal indexed
    bytesIn.writeByte(0x88); // Literal name Huffman encoded 8 bytes
                             // decodes to custom-key which is length 10
    bytesIn.write(decodeHex("25a849e95ba97d7f"));
    bytesIn.writeByte(0x89); // Literal value Huffman encoded 9 bytes
                             // decodes to custom-value which is length 12
    bytesIn.write(decodeHex("25a849e95bb8e8b4bf"));
  } ##FSTMerge## private void thirdRequestWithHuffman() {
    bytesIn.writeByte(0x82); // == Indexed - Add ==
                             // idx = 2 -> :method: GET
    bytesIn.writeByte(0x87); // == Indexed - Add ==
                             // idx = 7 -> :scheme: https
    bytesIn.writeByte(0x85); // == Indexed - Add ==
                             // idx = 5 -> :path: /index.html
    bytesIn.writeByte(0xbf); // == Indexed - Add ==
                             // idx = 63 -> :authority: www.example.com
    bytesIn.writeByte(0x40); // Literal indexed
    bytesIn.writeByte(0x88); // Literal name Huffman encoded 8 bytes
                             // decodes to custom-key which is length 10
    bytesIn.write(decodeHex("25a849e95ba97d7f"));
    bytesIn.writeByte(0x89); // Literal value Huffman encoded 9 bytes
                             // decodes to custom-value which is length 12
    bytesIn.write(decodeHex("25a849e95bb8e8b4bf"));
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void checkReadThirdRequestWithHuffman() {
    assertEquals(3, hpackReader.headerCount);

    // [  1] (s =  54) custom-key: custom-value
    Header entry = hpackReader.headerTable[headerTableLength() - 3];
    checkEntry(entry, "custom-key", "custom-value", 54);

    // [  2] (s =  53) cache-control: no-cache
    entry = hpackReader.headerTable[headerTableLength() - 2];
    checkEntry(entry, "cache-control", "no-cache", 53);

    // [  3] (s =  57) :authority: www.example.com
    entry = hpackReader.headerTable[headerTableLength() - 1];
    checkEntry(entry, ":authority", "www.example.com", 57);

    // Table size: 164
    assertEquals(164, hpackReader.headerTableByteCount);

    // Decoded header list:
    assertEquals(headerEntries(
        ":method", "GET",
        ":scheme", "https",
        ":path", "/index.html",
        ":authority", "www.example.com",
        "custom-key", "custom-value"), hpackReader.getAndResetHeaderList());
  } ##FSTMerge## private void checkReadThirdRequestWithHuffman() {
    assertEquals(3, hpackReader.headerCount);

    // [  1] (s =  54) custom-key: custom-value
    Header entry = hpackReader.headerTable[headerTableLength() - 3];
    checkEntry(entry, "custom-key", "custom-value", 54);

    // [  2] (s =  53) cache-control: no-cache
    entry = hpackReader.headerTable[headerTableLength() - 2];
    checkEntry(entry, "cache-control", "no-cache", 53);

    // [  3] (s =  57) :authority: www.example.com
    entry = hpackReader.headerTable[headerTableLength() - 1];
    checkEntry(entry, ":authority", "www.example.com", 57);

    // Table size: 164
    assertEquals(164, hpackReader.headerTableByteCount);

    // Decoded header list:
    assertEquals(headerEntries(
        ":method", "GET",
        ":scheme", "https",
        ":path", "/index.html",
        ":authority", "www.example.com",
        "custom-key", "custom-value"), hpackReader.getAndResetHeaderList());
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void readSingleByteInt() throws IOException {
    assertEquals(10, newReader(byteStream()).readInt(10, 31));
    assertEquals(10, newReader(byteStream()).readInt(0xe0 | 10, 31));
  } ##FSTMerge## @Test public void readSingleByteInt() throws IOException {
    assertEquals(10, newReader(byteStream()).readInt(10, 31));
    assertEquals(10, newReader(byteStream()).readInt(0xe0 | 10, 31));
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void readMultibyteInt() throws IOException {
    assertEquals(1337, newReader(byteStream(154, 10)).readInt(31, 31));
  } ##FSTMerge## @Test public void readMultibyteInt() throws IOException {
    assertEquals(1337, newReader(byteStream(154, 10)).readInt(31, 31));
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void writeSingleByteInt() throws IOException {
    hpackWriter.writeInt(10, 31, 0);
    assertBytes(10);
    hpackWriter.writeInt(10, 31, 0xe0);
    assertBytes(0xe0 | 10);
  } ##FSTMerge## @Test public void writeSingleByteInt() throws IOException {
    hpackWriter.writeInt(10, 31, 0);
    assertBytes(10);
    hpackWriter.writeInt(10, 31, 0xe0);
    assertBytes(0xe0 | 10);
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void writeMultibyteInt() throws IOException {
    hpackWriter.writeInt(1337, 31, 0);
    assertBytes(31, 154, 10);
    hpackWriter.writeInt(1337, 31, 0xe0);
    assertBytes(0xe0 | 31, 154, 10);
  } ##FSTMerge## @Test public void writeMultibyteInt() throws IOException {
    hpackWriter.writeInt(1337, 31, 0);
    assertBytes(31, 154, 10);
    hpackWriter.writeInt(1337, 31, 0xe0);
    assertBytes(0xe0 | 31, 154, 10);
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void max31BitValue() throws IOException {
    hpackWriter.writeInt(0x7fffffff, 31, 0);
    assertBytes(31, 224, 255, 255, 255, 7);
    assertEquals(0x7fffffff,
        newReader(byteStream(224, 255, 255, 255, 7)).readInt(31, 31));
  } ##FSTMerge## @Test public void max31BitValue() throws IOException {
    hpackWriter.writeInt(0x7fffffff, 31, 0);
    assertBytes(31, 224, 255, 255, 255, 7);
    assertEquals(0x7fffffff,
        newReader(byteStream(224, 255, 255, 255, 7)).readInt(31, 31));
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void prefixMask() throws IOException {
    hpackWriter.writeInt(31, 31, 0);
    assertBytes(31, 0);
    assertEquals(31, newReader(byteStream(0)).readInt(31, 31));
  } ##FSTMerge## @Test public void prefixMask() throws IOException {
    hpackWriter.writeInt(31, 31, 0);
    assertBytes(31, 0);
    assertEquals(31, newReader(byteStream(0)).readInt(31, 31));
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void prefixMaskMinusOne() throws IOException {
    hpackWriter.writeInt(30, 31, 0);
    assertBytes(30);
    assertEquals(31, newReader(byteStream(0)).readInt(31, 31));
  } ##FSTMerge## @Test public void prefixMaskMinusOne() throws IOException {
    hpackWriter.writeInt(30, 31, 0);
    assertBytes(30);
    assertEquals(31, newReader(byteStream(0)).readInt(31, 31));
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void zero() throws IOException {
    hpackWriter.writeInt(0, 31, 0);
    assertBytes(0);
    assertEquals(0, newReader(byteStream()).readInt(0, 31));
  } ##FSTMerge## @Test public void zero() throws IOException {
    hpackWriter.writeInt(0, 31, 0);
    assertBytes(0);
    assertEquals(0, newReader(byteStream()).readInt(0, 31));
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void lowercaseHeaderNameBeforeEmit() throws IOException {
    hpackWriter.writeHeaders(Arrays.asList(new Header("FoO", "BaR")));
    assertBytes(0, 3, 'f', 'o', 'o', 3, 'B', 'a', 'R');
  } ##FSTMerge## @Test public void lowercaseHeaderNameBeforeEmit() throws IOException {
    hpackWriter.writeHeaders(Arrays.asList(new Header("FoO", "BaR")));
    assertBytes(0, 3, 'f', 'o', 'o', 3, 'B', 'a', 'R');
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void mixedCaseHeaderNameIsMalformed() throws IOException {
    try {
      newReader(byteStream(0, 3, 'F', 'o', 'o', 3, 'B', 'a', 'R')).readHeaders();
      fail();
    } catch (IOException e) {
      assertEquals("PROTOCOL_ERROR response malformed: mixed case name: Foo", e.getMessage());
    }
  } ##FSTMerge## @Test public void mixedCaseHeaderNameIsMalformed() throws IOException {
    try {
      newReader(byteStream(0, 3, 'F', 'o', 'o', 3, 'B', 'a', 'R')).readHeaders();
      fail();
    } catch (IOException e) {
      assertEquals("PROTOCOL_ERROR response malformed: mixed case name: Foo", e.getMessage());
    }
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void emptyHeaderName() throws IOException {
    hpackWriter.writeByteString(ByteString.encodeUtf8(""));
    assertBytes(0);
    assertEquals(ByteString.EMPTY, newReader(byteStream(0)).readByteString());
  } ##FSTMerge## @Test public void emptyHeaderName() throws IOException {
    hpackWriter.writeByteString(ByteString.encodeUtf8(""));
    assertBytes(0);
    assertEquals(ByteString.EMPTY, newReader(byteStream(0)).readByteString());
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private HpackDraft09.Reader newReader(Buffer source) {
    return new HpackDraft09.Reader(4096, source);
  } ##FSTMerge## private HpackDraft09.Reader newReader(Buffer source) {
    return new HpackDraft09.Reader(4096, source);
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Buffer byteStream(int... bytes) {
    return new Buffer().write(intArrayToByteArray(bytes));
  } ##FSTMerge## private Buffer byteStream(int... bytes) {
    return new Buffer().write(intArrayToByteArray(bytes));
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void checkEntry(Header entry, String name, String value, int size) {
    assertEquals(name, entry.name.utf8());
    assertEquals(value, entry.value.utf8());
    assertEquals(size, entry.hpackSize);
  } ##FSTMerge## private void checkEntry(Header entry, String name, String value, int size) {
    assertEquals(name, entry.name.utf8());
    assertEquals(value, entry.value.utf8());
    assertEquals(size, entry.hpackSize);
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void assertBytes(int... bytes) throws IOException {
    ByteString expected = intArrayToByteArray(bytes);
    ByteString actual = bytesOut.readByteString();
    assertEquals(expected, actual);
  } ##FSTMerge## private void assertBytes(int... bytes) throws IOException {
    ByteString expected = intArrayToByteArray(bytes);
    ByteString actual = bytesOut.readByteString();
    assertEquals(expected, actual);
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private ByteString intArrayToByteArray(int[] bytes) {
    byte[] data = new byte[bytes.length];
    for (int i = 0; i < bytes.length; i++) {
      data[i] = (byte) bytes[i];
    }
    return ByteString.of(data);
  } ##FSTMerge## private ByteString intArrayToByteArray(int[] bytes) {
    byte[] data = new byte[bytes.length];
    for (int i = 0; i < bytes.length; i++) {
      data[i] = (byte) bytes[i];
    }
    return ByteString.of(data);
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private int headerTableLength() {
    return hpackReader.headerTable.length;
  } ##FSTMerge## private int headerTableLength() {
    return hpackReader.headerTable.length;
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft09Test.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverHttp20Draft15Test.java
############## CONFLICT ##############
Conflict type: ExtendsList
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## extends HttpOverSpdyTest ##FSTMerge## extends HttpOverSpdyTest
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverHttp20Draft15Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public HttpOverHttp20Draft15Test() {
    super(Protocol.HTTP_2);
    this.hostHeader = ":authority";
  } ##FSTMerge## public HttpOverHttp20Draft15Test() {
    super(Protocol.HTTP_2);
    this.hostHeader = ":authority";
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverHttp20Draft15Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void serverSendsPushPromise_GET() throws Exception {
    MockResponse response = new MockResponse().setBody("ABCDE").setStatus("HTTP/1.1 200 Sweet")
        .withPush(new PushPromise("GET", "/foo/bar", Arrays.asList("foo: bar"),
            new MockResponse().setBody("bar").setStatus("HTTP/1.1 200 Sweet")));
    server.enqueue(response);
    server.play();

    connection = client.open(server.getUrl("/foo"));
    assertContent("ABCDE", connection, Integer.MAX_VALUE);
    assertEquals(200, connection.getResponseCode());
    assertEquals("Sweet", connection.getResponseMessage());

    RecordedRequest request = server.takeRequest();
    assertEquals("GET /foo HTTP/1.1", request.getRequestLine());
    assertContains(request.getHeaders(), ":scheme: https");
    assertContains(request.getHeaders(), hostHeader + ": "
        + server.getHostName() + ":" + server.getPort());

    RecordedRequest pushedRequest = server.takeRequest();
    assertEquals("GET /foo/bar HTTP/1.1", pushedRequest.getRequestLine());
    assertEquals(Arrays.asList("foo: bar"), pushedRequest.getHeaders());
  } ##FSTMerge## @Test public void serverSendsPushPromise_GET() throws Exception {
    MockResponse response = new MockResponse().setBody("ABCDE").setStatus("HTTP/1.1 200 Sweet")
        .withPush(new PushPromise("GET", "/foo/bar", Arrays.asList("foo: bar"),
            new MockResponse().setBody("bar").setStatus("HTTP/1.1 200 Sweet")));
    server.enqueue(response);
    server.play();

    connection = client.open(server.getUrl("/foo"));
    assertContent("ABCDE", connection, Integer.MAX_VALUE);
    assertEquals(200, connection.getResponseCode());
    assertEquals("Sweet", connection.getResponseMessage());

    RecordedRequest request = server.takeRequest();
    assertEquals("GET /foo HTTP/1.1", request.getRequestLine());
    assertContains(request.getHeaders(), ":scheme: https");
    assertContains(request.getHeaders(), hostHeader + ": "
        + server.getHostName() + ":" + server.getPort());

    RecordedRequest pushedRequest = server.takeRequest();
    assertEquals("GET /foo/bar HTTP/1.1", pushedRequest.getRequestLine());
    assertEquals(Arrays.asList("foo: bar"), pushedRequest.getHeaders());
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverHttp20Draft15Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 955934836fc466d93d6e41d1ff9391d9e5b3f09a
Parent1 SHA-1: 8cf76d019a9d94383a2dbd13a5dcc0eb1c91f5d9
Parent2 SHA-1: 4d068212aa1d0bcf0afc45b41a272c772a5b955c
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Test public void serverSendsPushPromise_HEAD() throws Exception {
    MockResponse response = new MockResponse().setBody("ABCDE").setStatus("HTTP/1.1 200 Sweet")
        .withPush(new PushPromise("HEAD", "/foo/bar", Arrays.asList("foo: bar"),
            new MockResponse().setStatus("HTTP/1.1 204 Sweet")));
    server.enqueue(response);
    server.play();

    connection = client.open(server.getUrl("/foo"));
    assertContent("ABCDE", connection, Integer.MAX_VALUE);
    assertEquals(200, connection.getResponseCode());
    assertEquals("Sweet", connection.getResponseMessage());

    RecordedRequest request = server.takeRequest();
    assertEquals("GET /foo HTTP/1.1", request.getRequestLine());
    assertContains(request.getHeaders(), ":scheme: https");
    assertContains(request.getHeaders(), hostHeader + ": "
        + server.getHostName() + ":" + server.getPort());

    RecordedRequest pushedRequest = server.takeRequest();
    assertEquals("HEAD /foo/bar HTTP/1.1", pushedRequest.getRequestLine());
    assertEquals(Arrays.asList("foo: bar"), pushedRequest.getHeaders());
  } ##FSTMerge## @Test public void serverSendsPushPromise_HEAD() throws Exception {
    MockResponse response = new MockResponse().setBody("ABCDE").setStatus("HTTP/1.1 200 Sweet")
        .withPush(new PushPromise("HEAD", "/foo/bar", Arrays.asList("foo: bar"),
            new MockResponse().setStatus("HTTP/1.1 204 Sweet")));
    server.enqueue(response);
    server.play();

    connection = client.open(server.getUrl("/foo"));
    assertContent("ABCDE", connection, Integer.MAX_VALUE);
    assertEquals(200, connection.getResponseCode());
    assertEquals("Sweet", connection.getResponseMessage());

    RecordedRequest request = server.takeRequest();
    assertEquals("GET /foo HTTP/1.1", request.getRequestLine());
    assertContains(request.getHeaders(), ":scheme: https");
    assertContains(request.getHeaders(), hostHeader + ": "
        + server.getHostName() + ":" + server.getPort());

    RecordedRequest pushedRequest = server.takeRequest();
    assertEquals("HEAD /foo/bar HTTP/1.1", pushedRequest.getRequestLine());
    assertEquals(Arrays.asList("foo: bar"), pushedRequest.getHeaders());
  }
File path: /tmp/downloads/okhttp/revisions/rev_8cf76_4d068/rev_8cf76-4d068/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverHttp20Draft15Test.java

==================================================================================================================
Revision: /tmp/downloads/okhttp/revisions/rev_9f595_a8327/rev_9f595-a8327.revisions
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0d8704e252b4a4d43caa63d0d14d9e31bc91ce56
Parent1 SHA-1: 9f5951b3112d3f84e84d597af6871081a0b90b43
Parent2 SHA-1: a8327d121b9eeb3b61ae63f06095d423936a5da2
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Test public void poolSingleHttpConnection() throws Exception {
    resetWithPoolSize(1);
    Connection connection = pool.get(httpAddress);
    assertNull(connection);

    connection = new Connection(pool, new Route(httpAddress, Proxy.NO_PROXY, httpSocketAddress,
        ConnectionSpec.CLEARTEXT));
    connection.connect(200, 200, 200, null);
    connection.setOwner(owner);
    assertEquals(0, pool.getConnectionCount());

    pool.recycle(connection);
    assertNull(connection.getOwner());
    assertEquals(1, pool.getConnectionCount());
    assertEquals(1, pool.getHttpConnectionCount());
    assertEquals(0, pool.getMultiplexedConnectionCount());

    Connection recycledConnection = pool.get(httpAddress);
    assertNull(connection.getOwner());
    assertEquals(connection, recycledConnection);
    assertTrue(recycledConnection.isAlive());

    recycledConnection = pool.get(httpAddress);
    assertNull(recycledConnection);
  } ##FSTMerge## @Test public void poolSingleHttpConnection() throws Exception {
    resetWithPoolSize(1);
    Connection connection = pool.get(httpAddress);
    assertNull(connection);

    connection = new Connection(pool, new Route(httpAddress, Proxy.NO_PROXY, httpSocketAddress,
        ConnectionSpec.CLEARTEXT));
    connection.connect(200, 200, 200, null);
    connection.setOwner(owner);
    assertEquals(0, pool.getConnectionCount());

    pool.recycle(connection);
    assertNull(connection.getOwner());
    assertEquals(1, pool.getConnectionCount());
    assertEquals(1, pool.getHttpConnectionCount());
    assertEquals(0, pool.getSpdyConnectionCount());

    Connection recycledConnection = pool.get(httpAddress);
    assertNull(connection.getOwner());
    assertEquals(connection, recycledConnection);
    assertTrue(recycledConnection.isAlive());

    recycledConnection = pool.get(httpAddress);
    assertNull(recycledConnection);
  } ##FSTMerge## @Test public void poolSingleHttpConnection() throws Exception {
    resetWithPoolSize(1);
    Connection connection = pool.get(httpAddress);
    assertNull(connection);

    connection = new Connection(pool, new Route(httpAddress, Proxy.NO_PROXY, httpSocketAddress,
        ConnectionSpec.CLEARTEXT));
    connection.connect(200, 200, 200, null);
    connection.setOwner(owner);
    assertEquals(0, pool.getConnectionCount());

    pool.recycle(connection);
    assertNull(connection.getOwner());
    assertEquals(1, pool.getConnectionCount());
    assertEquals(1, pool.getHttpConnectionCount());
    assertEquals(0, pool.getSpdyConnectionCount());

    Connection recycledConnection = pool.get(httpAddress);
    assertNull(connection.getOwner());
    assertEquals(connection, recycledConnection);
    assertTrue(recycledConnection.isAlive());

    recycledConnection = pool.get(httpAddress);
    assertNull(recycledConnection);
  }
File path: /tmp/downloads/okhttp/revisions/rev_9f595_a8327/rev_9f595-a8327/okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionPoolTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0d8704e252b4a4d43caa63d0d14d9e31bc91ce56
Parent1 SHA-1: 9f5951b3112d3f84e84d597af6871081a0b90b43
Parent2 SHA-1: a8327d121b9eeb3b61ae63f06095d423936a5da2
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Test public void maxConnections() throws IOException, InterruptedException {
    // Pool should be empty.
    assertEquals(0, pool.getConnectionCount());

    // http A should be added to the pool.
    pool.recycle(httpA);
    assertEquals(1, pool.getConnectionCount());
    assertEquals(1, pool.getHttpConnectionCount());
    assertEquals(0, pool.getMultiplexedConnectionCount());

    // http B should be added to the pool.
    pool.recycle(httpB);
    assertEquals(2, pool.getConnectionCount());
    assertEquals(2, pool.getHttpConnectionCount());
    assertEquals(0, pool.getMultiplexedConnectionCount());

    // http C should be added and http A should be removed.
    pool.recycle(httpC);
    Thread.sleep(50);
    assertEquals(2, pool.getConnectionCount());
    assertEquals(2, pool.getHttpConnectionCount());
    assertEquals(0, pool.getMultiplexedConnectionCount());

    // spdy A should be added and http B should be removed.
    pool.share(spdyA);
    Thread.sleep(50);
    assertEquals(2, pool.getConnectionCount());
    assertEquals(1, pool.getHttpConnectionCount());
    assertEquals(1, pool.getMultiplexedConnectionCount());

    // http C should be removed from the pool.
    Connection recycledHttpConnection = pool.get(httpAddress);
    recycledHttpConnection.setOwner(owner);
    assertNotNull(recycledHttpConnection);
    assertTrue(recycledHttpConnection.isAlive());
    assertEquals(1, pool.getConnectionCount());
    assertEquals(0, pool.getHttpConnectionCount());
    assertEquals(1, pool.getMultiplexedConnectionCount());

    // spdy A will be returned and kept in the pool.
    Connection sharedSpdyConnection = pool.get(spdyAddress);
    assertNotNull(sharedSpdyConnection);
    assertEquals(spdyA, sharedSpdyConnection);
    assertEquals(1, pool.getConnectionCount());
    assertEquals(0, pool.getHttpConnectionCount());
    assertEquals(1, pool.getMultiplexedConnectionCount());

    // Nothing should change.
    pool.recycle(httpC);
    Thread.sleep(50);
    assertEquals(2, pool.getConnectionCount());
    assertEquals(1, pool.getHttpConnectionCount());
    assertEquals(1, pool.getMultiplexedConnectionCount());

    // An http connection should be removed from the pool.
    recycledHttpConnection = pool.get(httpAddress);
    assertNotNull(recycledHttpConnection);
    assertTrue(recycledHttpConnection.isAlive());
    assertEquals(1, pool.getConnectionCount());
    assertEquals(0, pool.getHttpConnectionCount());
    assertEquals(1, pool.getMultiplexedConnectionCount());

    // spdy A will be returned and kept in the pool. Pool shouldn't change.
    sharedSpdyConnection = pool.get(spdyAddress);
    assertEquals(spdyA, sharedSpdyConnection);
    assertNotNull(sharedSpdyConnection);
    assertEquals(1, pool.getConnectionCount());
    assertEquals(0, pool.getHttpConnectionCount());
    assertEquals(1, pool.getMultiplexedConnectionCount());

    // http D should be added to the pool.
    pool.recycle(httpD);
    Thread.sleep(50);
    assertEquals(2, pool.getConnectionCount());
    assertEquals(1, pool.getHttpConnectionCount());
    assertEquals(1, pool.getMultiplexedConnectionCount());

    // http E should be added to the pool. spdy A should be removed from the pool.
    pool.recycle(httpE);
    Thread.sleep(50);
    assertEquals(2, pool.getConnectionCount());
    assertEquals(2, pool.getHttpConnectionCount());
    assertEquals(0, pool.getMultiplexedConnectionCount());
  } ##FSTMerge## @Test public void maxConnections() throws IOException, InterruptedException {
    // Pool should be empty.
    assertEquals(0, pool.getConnectionCount());

    // http A should be added to the pool.
    pool.recycle(httpA);
    assertEquals(1, pool.getConnectionCount());
    assertEquals(1, pool.getHttpConnectionCount());
    assertEquals(0, pool.getSpdyConnectionCount());

    // http B should be added to the pool.
    pool.recycle(httpB);
    assertEquals(2, pool.getConnectionCount());
    assertEquals(2, pool.getHttpConnectionCount());
    assertEquals(0, pool.getSpdyConnectionCount());

    // http C should be added and http A should be removed.
    pool.recycle(httpC);
    Thread.sleep(50);
    assertEquals(2, pool.getConnectionCount());
    assertEquals(2, pool.getHttpConnectionCount());
    assertEquals(0, pool.getSpdyConnectionCount());

    // spdy A should be added and http B should be removed.
    pool.share(spdyA);
    Thread.sleep(50);
    assertEquals(2, pool.getConnectionCount());
    assertEquals(1, pool.getHttpConnectionCount());
    assertEquals(1, pool.getSpdyConnectionCount());

    // http C should be removed from the pool.
    Connection recycledHttpConnection = pool.get(httpAddress);
    recycledHttpConnection.setOwner(owner);
    assertNotNull(recycledHttpConnection);
    assertTrue(recycledHttpConnection.isAlive());
    assertEquals(1, pool.getConnectionCount());
    assertEquals(0, pool.getHttpConnectionCount());
    assertEquals(1, pool.getSpdyConnectionCount());

    // spdy A will be returned and kept in the pool.
    Connection sharedSpdyConnection = pool.get(spdyAddress);
    assertNotNull(sharedSpdyConnection);
    assertEquals(spdyA, sharedSpdyConnection);
    assertEquals(1, pool.getConnectionCount());
    assertEquals(0, pool.getHttpConnectionCount());
    assertEquals(1, pool.getSpdyConnectionCount());

    // Nothing should change.
    pool.recycle(httpC);
    Thread.sleep(50);
    assertEquals(2, pool.getConnectionCount());
    assertEquals(1, pool.getHttpConnectionCount());
    assertEquals(1, pool.getSpdyConnectionCount());

    // An http connection should be removed from the pool.
    recycledHttpConnection = pool.get(httpAddress);
    assertNotNull(recycledHttpConnection);
    assertTrue(recycledHttpConnection.isAlive());
    assertEquals(1, pool.getConnectionCount());
    assertEquals(0, pool.getHttpConnectionCount());
    assertEquals(1, pool.getSpdyConnectionCount());

    // spdy A will be returned and kept in the pool. Pool shouldn't change.
    sharedSpdyConnection = pool.get(spdyAddress);
    assertEquals(spdyA, sharedSpdyConnection);
    assertNotNull(sharedSpdyConnection);
    assertEquals(1, pool.getConnectionCount());
    assertEquals(0, pool.getHttpConnectionCount());
    assertEquals(1, pool.getSpdyConnectionCount());

    // http D should be added to the pool.
    pool.recycle(httpD);
    Thread.sleep(50);
    assertEquals(2, pool.getConnectionCount());
    assertEquals(1, pool.getHttpConnectionCount());
    assertEquals(1, pool.getSpdyConnectionCount());

    // http E should be added to the pool. spdy A should be removed from the pool.
    pool.recycle(httpE);
    Thread.sleep(50);
    assertEquals(2, pool.getConnectionCount());
    assertEquals(2, pool.getHttpConnectionCount());
    assertEquals(0, pool.getSpdyConnectionCount());
  } ##FSTMerge## @Test public void maxConnections() throws IOException, InterruptedException {
    // Pool should be empty.
    assertEquals(0, pool.getConnectionCount());

    // http A should be added to the pool.
    pool.recycle(httpA);
    assertEquals(1, pool.getConnectionCount());
    assertEquals(1, pool.getHttpConnectionCount());
    assertEquals(0, pool.getSpdyConnectionCount());

    // http B should be added to the pool.
    pool.recycle(httpB);
    assertEquals(2, pool.getConnectionCount());
    assertEquals(2, pool.getHttpConnectionCount());
    assertEquals(0, pool.getSpdyConnectionCount());

    // http C should be added
    pool.recycle(httpC);
    assertEquals(3, pool.getConnectionCount());
    assertEquals(3, pool.getHttpConnectionCount());
    assertEquals(0, pool.getSpdyConnectionCount());

    pool.performCleanup();

    // http A should be removed by cleanup.
    assertEquals(2, pool.getConnectionCount());
    assertEquals(2, pool.getHttpConnectionCount());
    assertEquals(0, pool.getSpdyConnectionCount());

    // spdy A should be added
    pool.share(spdyA);
    assertEquals(3, pool.getConnectionCount());
    assertEquals(2, pool.getHttpConnectionCount());
    assertEquals(1, pool.getSpdyConnectionCount());

    pool.performCleanup();

    // http B should be removed by cleanup.
    assertEquals(2, pool.getConnectionCount());
    assertEquals(1, pool.getHttpConnectionCount());
    assertEquals(1, pool.getSpdyConnectionCount());

    // http C should be returned.
    Connection recycledHttpConnection = pool.get(httpAddress);
    recycledHttpConnection.setOwner(owner);
    assertNotNull(recycledHttpConnection);
    assertTrue(recycledHttpConnection.isAlive());
    assertEquals(1, pool.getConnectionCount());
    assertEquals(0, pool.getHttpConnectionCount());
    assertEquals(1, pool.getSpdyConnectionCount());

    // spdy A will be returned but also kept in the pool.
    Connection sharedSpdyConnection = pool.get(spdyAddress);
    assertNotNull(sharedSpdyConnection);
    assertEquals(spdyA, sharedSpdyConnection);
    assertEquals(1, pool.getConnectionCount());
    assertEquals(0, pool.getHttpConnectionCount());
    assertEquals(1, pool.getSpdyConnectionCount());

    // http C should be added to the pool
    pool.recycle(httpC);
    assertEquals(2, pool.getConnectionCount());
    assertEquals(1, pool.getHttpConnectionCount());
    assertEquals(1, pool.getSpdyConnectionCount());

    // An http connection should be removed from the pool.
    recycledHttpConnection = pool.get(httpAddress);
    assertNotNull(recycledHttpConnection);
    assertTrue(recycledHttpConnection.isAlive());
    assertEquals(1, pool.getConnectionCount());
    assertEquals(0, pool.getHttpConnectionCount());
    assertEquals(1, pool.getSpdyConnectionCount());

    // spdy A will be returned but also kept in the pool.
    sharedSpdyConnection = pool.get(spdyAddress);
    assertEquals(spdyA, sharedSpdyConnection);
    assertNotNull(sharedSpdyConnection);
    assertEquals(1, pool.getConnectionCount());
    assertEquals(0, pool.getHttpConnectionCount());
    assertEquals(1, pool.getSpdyConnectionCount());

    // http D should be added to the pool.
    pool.recycle(httpD);
    assertEquals(2, pool.getConnectionCount());
    assertEquals(1, pool.getHttpConnectionCount());
    assertEquals(1, pool.getSpdyConnectionCount());

    // http E should be added to the pool.
    pool.recycle(httpE);
    assertEquals(3, pool.getConnectionCount());
    assertEquals(2, pool.getHttpConnectionCount());
    assertEquals(1, pool.getSpdyConnectionCount());

    pool.performCleanup();

    // spdy A should be removed from the pool by cleanup.
    assertEquals(2, pool.getConnectionCount());
    assertEquals(2, pool.getHttpConnectionCount());
    assertEquals(0, pool.getSpdyConnectionCount());
  }
File path: /tmp/downloads/okhttp/revisions/rev_9f595_a8327/rev_9f595-a8327/okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionPoolTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0d8704e252b4a4d43caa63d0d14d9e31bc91ce56
Parent1 SHA-1: 9f5951b3112d3f84e84d597af6871081a0b90b43
Parent2 SHA-1: a8327d121b9eeb3b61ae63f06095d423936a5da2
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Test public void connectionCleanup() throws IOException, InterruptedException {
    ConnectionPool pool = new ConnectionPool(10, KEEP_ALIVE_DURATION_MS);

    // Add 3 connections to the pool.
    pool.recycle(httpA);
    pool.recycle(httpB);
    pool.share(spdyA);
    assertEquals(3, pool.getConnectionCount());
    assertEquals(2, pool.getHttpConnectionCount());
    assertEquals(1, pool.getMultiplexedConnectionCount());

    // Kill http A.
    Util.closeQuietly(httpA.getSocket());

    // Force pool to run a clean up.
    assertNotNull(pool.get(spdyAddress));
    Thread.sleep(50);

    assertEquals(2, pool.getConnectionCount());
    assertEquals(1, pool.getHttpConnectionCount());
    assertEquals(1, pool.getMultiplexedConnectionCount());

    Thread.sleep(KEEP_ALIVE_DURATION_MS);
    // Force pool to run a clean up.
    assertNull(pool.get(httpAddress));
    assertNull(pool.get(spdyAddress));

    Thread.sleep(50);

    assertEquals(0, pool.getConnectionCount());
    assertEquals(0, pool.getHttpConnectionCount());
    assertEquals(0, pool.getMultiplexedConnectionCount());
  } ##FSTMerge## @Test public void connectionCleanup() throws IOException, InterruptedException {
    ConnectionPool pool = new ConnectionPool(10, KEEP_ALIVE_DURATION_MS);

    // Add 3 connections to the pool.
    pool.recycle(httpA);
    pool.recycle(httpB);
    pool.share(spdyA);
    assertEquals(3, pool.getConnectionCount());
    assertEquals(2, pool.getHttpConnectionCount());
    assertEquals(1, pool.getSpdyConnectionCount());

    // Kill http A.
    Util.closeQuietly(httpA.getSocket());

    // Force pool to run a clean up.
    assertNotNull(pool.get(spdyAddress));
    Thread.sleep(50);

    assertEquals(2, pool.getConnectionCount());
    assertEquals(1, pool.getHttpConnectionCount());
    assertEquals(1, pool.getSpdyConnectionCount());

    Thread.sleep(KEEP_ALIVE_DURATION_MS);
    // Force pool to run a clean up.
    assertNull(pool.get(httpAddress));
    assertNull(pool.get(spdyAddress));

    Thread.sleep(50);

    assertEquals(0, pool.getConnectionCount());
    assertEquals(0, pool.getHttpConnectionCount());
    assertEquals(0, pool.getSpdyConnectionCount());
  } ##FSTMerge## @Test public void connectionCleanup() throws Exception {
    ConnectionPool pool = new ConnectionPool(10, KEEP_ALIVE_DURATION_MS);

    // Add 3 connections to the pool.
    pool.recycle(httpA);
    pool.recycle(httpB);
    pool.share(spdyA);

    // Kill http A.
    Util.closeQuietly(httpA.getSocket());

    assertEquals(3, pool.getConnectionCount());
    assertEquals(2, pool.getHttpConnectionCount());
    assertEquals(1, pool.getSpdyConnectionCount());

    // Http A should be removed.
    pool.performCleanup();
    assertPooled(pool, spdyA, httpB);
    assertEquals(2, pool.getConnectionCount());
    assertEquals(1, pool.getHttpConnectionCount());
    assertEquals(1, pool.getSpdyConnectionCount());

    // Now let enough time pass for the connections to expire.
    Thread.sleep(2 * KEEP_ALIVE_DURATION_MS);

    // All remaining connections should be removed.
    pool.performCleanup();
    assertEquals(0, pool.getConnectionCount());
  }
File path: /tmp/downloads/okhttp/revisions/rev_9f595_a8327/rev_9f595-a8327/okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionPoolTest.java

=========================================================