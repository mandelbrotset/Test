=========================================================
Revision: /tmp/downloads/libgdx/revisions/rev_d75e4_9564b/rev_d75e4-9564b.revisions
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 32f39677a3ee49bacb4a94a0d5f793890c492998
Parent1 SHA-1: d75e4e06884a396eb93214d7f95a1fba462cab3d
Parent2 SHA-1: 9564b50deabf422682efab3213cdfaabb682cb49
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	@Deprecated
	public void patch (VertexInfo corner00, VertexInfo corner10, VertexInfo corner11, VertexInfo corner01, int divisionsU,
		int divisionsV) {
		PatchShapeBuilder.build(this, corner00, corner10, corner11, corner01, divisionsU, divisionsV);
	} ##FSTMerge## @Override
	public void patch (VertexInfo corner00, VertexInfo corner10, VertexInfo corner11, VertexInfo corner01, int divisionsU,
		int divisionsV) {
		PatchShapeBuilder.build(this, corner00, corner10, corner11, corner01, divisionsU, divisionsV);
	} ##FSTMerge## @Override
	@Deprecated
	public void patch (VertexInfo corner00, VertexInfo corner10, VertexInfo corner11, VertexInfo corner01, int divisionsU,
		int divisionsV) {
		PatchShapeBuilder.build(this, corner00, corner10, corner11, corner01, divisionsU, divisionsV);
	}
File path: /tmp/downloads/libgdx/revisions/rev_d75e4_9564b/rev_d75e4-9564b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 32f39677a3ee49bacb4a94a0d5f793890c492998
Parent1 SHA-1: d75e4e06884a396eb93214d7f95a1fba462cab3d
Parent2 SHA-1: 9564b50deabf422682efab3213cdfaabb682cb49
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	@Deprecated
	public void patch (Vector3 corner00, Vector3 corner10, Vector3 corner11, Vector3 corner01, Vector3 normal, int divisionsU,
		int divisionsV) {
		PatchShapeBuilder.build(this, corner00, corner10, corner11, corner01, normal, divisionsU, divisionsV);
	} ##FSTMerge## @Override
	public void patch (Vector3 corner00, Vector3 corner10, Vector3 corner11, Vector3 corner01, Vector3 normal, int divisionsU,
		int divisionsV) {
		PatchShapeBuilder.build(this, corner00, corner10, corner11, corner01, normal, divisionsU, divisionsV);
	} ##FSTMerge## @Override
	@Deprecated
	public void patch (Vector3 corner00, Vector3 corner10, Vector3 corner11, Vector3 corner01, Vector3 normal, int divisionsU,
		int divisionsV) {
		PatchShapeBuilder.build(this, corner00, corner10, corner11, corner01, normal, divisionsU, divisionsV);
	}
File path: /tmp/downloads/libgdx/revisions/rev_d75e4_9564b/rev_d75e4-9564b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 32f39677a3ee49bacb4a94a0d5f793890c492998
Parent1 SHA-1: d75e4e06884a396eb93214d7f95a1fba462cab3d
Parent2 SHA-1: 9564b50deabf422682efab3213cdfaabb682cb49
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	@Deprecated
	public void patch (float x00, float y00, float z00, float x10, float y10, float z10, float x11, float y11, float z11,
		float x01, float y01, float z01, float normalX, float normalY, float normalZ, int divisionsU, int divisionsV) {
		PatchShapeBuilder.build(this, x00, y00, z00, x10, y10, z10, x11, y11, z11, x01, y01, z01, normalX, normalY, normalZ, divisionsU, divisionsV);
	} ##FSTMerge## @Override
	public void patch (float x00, float y00, float z00, float x10, float y10, float z10, float x11, float y11, float z11,
		float x01, float y01, float z01, float normalX, float normalY, float normalZ, int divisionsU, int divisionsV) {
		PatchShapeBuilder.build(this, x00, y00, z00, x10, y10, z10, x11, y11, z11, x01, y01, z01, normalX, normalY, normalZ, divisionsU, divisionsV);
	} ##FSTMerge## @Override
	@Deprecated
	public void patch (float x00, float y00, float z00, float x10, float y10, float z10, float x11, float y11, float z11,
		float x01, float y01, float z01, float normalX, float normalY, float normalZ, int divisionsU, int divisionsV) {
		PatchShapeBuilder.build(this, x00, y00, z00, x10, y10, z10, x11, y11, z11, x01, y01, z01, normalX, normalY, normalZ, divisionsU, divisionsV);
	}
File path: /tmp/downloads/libgdx/revisions/rev_d75e4_9564b/rev_d75e4-9564b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 32f39677a3ee49bacb4a94a0d5f793890c492998
Parent1 SHA-1: d75e4e06884a396eb93214d7f95a1fba462cab3d
Parent2 SHA-1: 9564b50deabf422682efab3213cdfaabb682cb49
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	@Deprecated
	public void box (VertexInfo corner000, VertexInfo corner010, VertexInfo corner100, VertexInfo corner110, VertexInfo corner001,
		VertexInfo corner011, VertexInfo corner101, VertexInfo corner111) {
		BoxShapeBuilder.build(this, corner000, corner010, corner100, corner110, corner001, corner011, corner101, corner111);
	} ##FSTMerge## @Override
	public void box (VertexInfo corner000, VertexInfo corner010, VertexInfo corner100, VertexInfo corner110, VertexInfo corner001,
		VertexInfo corner011, VertexInfo corner101, VertexInfo corner111) {
		BoxShapeBuilder.build(this, corner000, corner010, corner100, corner110, corner001, corner011, corner101, corner111);
	} ##FSTMerge## @Override
	@Deprecated
	public void box (VertexInfo corner000, VertexInfo corner010, VertexInfo corner100, VertexInfo corner110, VertexInfo corner001,
		VertexInfo corner011, VertexInfo corner101, VertexInfo corner111) {
		BoxShapeBuilder.build(this, corner000, corner010, corner100, corner110, corner001, corner011, corner101, corner111);
	}
File path: /tmp/downloads/libgdx/revisions/rev_d75e4_9564b/rev_d75e4-9564b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 32f39677a3ee49bacb4a94a0d5f793890c492998
Parent1 SHA-1: d75e4e06884a396eb93214d7f95a1fba462cab3d
Parent2 SHA-1: 9564b50deabf422682efab3213cdfaabb682cb49
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	@Deprecated
	public void box (Vector3 corner000, Vector3 corner010, Vector3 corner100, Vector3 corner110, Vector3 corner001,
		Vector3 corner011, Vector3 corner101, Vector3 corner111) {
		BoxShapeBuilder.build(this, corner000, corner010, corner100, corner110, corner001, corner011, corner101, corner111);
	} ##FSTMerge## @Override
	public void box (Vector3 corner000, Vector3 corner010, Vector3 corner100, Vector3 corner110, Vector3 corner001,
		Vector3 corner011, Vector3 corner101, Vector3 corner111) {
		BoxShapeBuilder.build(this, corner000, corner010, corner100, corner110, corner001, corner011, corner101, corner111);
	} ##FSTMerge## @Override
	@Deprecated
	public void box (Vector3 corner000, Vector3 corner010, Vector3 corner100, Vector3 corner110, Vector3 corner001,
		Vector3 corner011, Vector3 corner101, Vector3 corner111) {
		BoxShapeBuilder.build(this, corner000, corner010, corner100, corner110, corner001, corner011, corner101, corner111);
	}
File path: /tmp/downloads/libgdx/revisions/rev_d75e4_9564b/rev_d75e4-9564b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 32f39677a3ee49bacb4a94a0d5f793890c492998
Parent1 SHA-1: d75e4e06884a396eb93214d7f95a1fba462cab3d
Parent2 SHA-1: 9564b50deabf422682efab3213cdfaabb682cb49
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	@Deprecated
	public void box (Matrix4 transform) {
		BoxShapeBuilder.build(this, transform);
	} ##FSTMerge## @Override
	public void box (Matrix4 transform) {
		BoxShapeBuilder.build(this, transform);
	} ##FSTMerge## @Override
	@Deprecated
	public void box (Matrix4 transform) {
		BoxShapeBuilder.build(this, transform);
	}
File path: /tmp/downloads/libgdx/revisions/rev_d75e4_9564b/rev_d75e4-9564b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 32f39677a3ee49bacb4a94a0d5f793890c492998
Parent1 SHA-1: d75e4e06884a396eb93214d7f95a1fba462cab3d
Parent2 SHA-1: 9564b50deabf422682efab3213cdfaabb682cb49
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	@Deprecated
	public void box (float width, float height, float depth) {
		BoxShapeBuilder.build(this, width, height, depth);
	} ##FSTMerge## @Override
	public void box (float width, float height, float depth) {
		BoxShapeBuilder.build(this, width, height, depth);
	} ##FSTMerge## @Override
	@Deprecated
	public void box (float width, float height, float depth) {
		BoxShapeBuilder.build(this, width, height, depth);
	}
File path: /tmp/downloads/libgdx/revisions/rev_d75e4_9564b/rev_d75e4-9564b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 32f39677a3ee49bacb4a94a0d5f793890c492998
Parent1 SHA-1: d75e4e06884a396eb93214d7f95a1fba462cab3d
Parent2 SHA-1: 9564b50deabf422682efab3213cdfaabb682cb49
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	@Deprecated
	public void box (float x, float y, float z, float width, float height, float depth) {
		BoxShapeBuilder.build(this, x, y, z, width, height, depth);
	} ##FSTMerge## @Override
	public void box (float x, float y, float z, float width, float height, float depth) {
		BoxShapeBuilder.build(this, x, y, z, width, height, depth);
	} ##FSTMerge## @Override
	@Deprecated
	public void box (float x, float y, float z, float width, float height, float depth) {
		BoxShapeBuilder.build(this, x, y, z, width, height, depth);
	}
File path: /tmp/downloads/libgdx/revisions/rev_d75e4_9564b/rev_d75e4-9564b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 32f39677a3ee49bacb4a94a0d5f793890c492998
Parent1 SHA-1: d75e4e06884a396eb93214d7f95a1fba462cab3d
Parent2 SHA-1: 9564b50deabf422682efab3213cdfaabb682cb49
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	@Deprecated
	public void circle (float radius, int divisions, float centerX, float centerY, float centerZ, float normalX, float normalY,
		float normalZ) {
		EllipseShapeBuilder.build(this, radius, divisions, centerX, centerY, centerZ, normalX, normalY, normalZ);
	} ##FSTMerge## @Override
	public void circle (float radius, int divisions, float centerX, float centerY, float centerZ, float normalX, float normalY,
		float normalZ) {
		EllipseShapeBuilder.build(this, radius, divisions, centerX, centerY, centerZ, normalX, normalY, normalZ);
	} ##FSTMerge## @Override
	@Deprecated
	public void circle (float radius, int divisions, float centerX, float centerY, float centerZ, float normalX, float normalY,
		float normalZ) {
		EllipseShapeBuilder.build(this, radius, divisions, centerX, centerY, centerZ, normalX, normalY, normalZ);
	}
File path: /tmp/downloads/libgdx/revisions/rev_d75e4_9564b/rev_d75e4-9564b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 32f39677a3ee49bacb4a94a0d5f793890c492998
Parent1 SHA-1: d75e4e06884a396eb93214d7f95a1fba462cab3d
Parent2 SHA-1: 9564b50deabf422682efab3213cdfaabb682cb49
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	@Deprecated
	public void circle (float radius, int divisions, final Vector3 center, final Vector3 normal) {
		EllipseShapeBuilder.build(this, radius, divisions, center, normal);
	} ##FSTMerge## @Override
	public void circle (float radius, int divisions, final Vector3 center, final Vector3 normal) {
		EllipseShapeBuilder.build(this, radius, divisions, center, normal);
	} ##FSTMerge## @Override
	@Deprecated
	public void circle (float radius, int divisions, final Vector3 center, final Vector3 normal) {
		EllipseShapeBuilder.build(this, radius, divisions, center, normal);
	}
File path: /tmp/downloads/libgdx/revisions/rev_d75e4_9564b/rev_d75e4-9564b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 32f39677a3ee49bacb4a94a0d5f793890c492998
Parent1 SHA-1: d75e4e06884a396eb93214d7f95a1fba462cab3d
Parent2 SHA-1: 9564b50deabf422682efab3213cdfaabb682cb49
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	@Deprecated
	public void circle (float radius, int divisions, final Vector3 center, final Vector3 normal, final Vector3 tangent,
		final Vector3 binormal) {
		EllipseShapeBuilder.build(this, radius, divisions, center, normal, tangent, binormal);
	} ##FSTMerge## @Override
	public void circle (float radius, int divisions, final Vector3 center, final Vector3 normal, final Vector3 tangent,
		final Vector3 binormal) {
		EllipseShapeBuilder.build(this, radius, divisions, center, normal, tangent, binormal);
	} ##FSTMerge## @Override
	@Deprecated
	public void circle (float radius, int divisions, final Vector3 center, final Vector3 normal, final Vector3 tangent,
		final Vector3 binormal) {
		EllipseShapeBuilder.build(this, radius, divisions, center, normal, tangent, binormal);
	}
File path: /tmp/downloads/libgdx/revisions/rev_d75e4_9564b/rev_d75e4-9564b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 32f39677a3ee49bacb4a94a0d5f793890c492998
Parent1 SHA-1: d75e4e06884a396eb93214d7f95a1fba462cab3d
Parent2 SHA-1: 9564b50deabf422682efab3213cdfaabb682cb49
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	@Deprecated
	public void circle (float radius, int divisions, float centerX, float centerY, float centerZ, float normalX, float normalY,
		float normalZ, float tangentX, float tangentY, float tangentZ, float binormalX, float binormalY, float binormalZ) {
		EllipseShapeBuilder.build(this, radius, divisions, centerX, centerY, centerZ, normalX, normalY, normalZ, tangentX,
			tangentY, tangentZ, binormalX, binormalY, binormalZ);
	} ##FSTMerge## @Override
	public void circle (float radius, int divisions, float centerX, float centerY, float centerZ, float normalX, float normalY,
		float normalZ, float tangentX, float tangentY, float tangentZ, float binormalX, float binormalY, float binormalZ) {
		EllipseShapeBuilder.build(this, radius, divisions, centerX, centerY, centerZ, normalX, normalY, normalZ, tangentX,
			tangentY, tangentZ, binormalX, binormalY, binormalZ);
	} ##FSTMerge## @Override
	@Deprecated
	public void circle (float radius, int divisions, float centerX, float centerY, float centerZ, float normalX, float normalY,
		float normalZ, float tangentX, float tangentY, float tangentZ, float binormalX, float binormalY, float binormalZ) {
		EllipseShapeBuilder.build(this, radius, divisions, centerX, centerY, centerZ, normalX, normalY, normalZ, tangentX,
			tangentY, tangentZ, binormalX, binormalY, binormalZ);
	}
File path: /tmp/downloads/libgdx/revisions/rev_d75e4_9564b/rev_d75e4-9564b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 32f39677a3ee49bacb4a94a0d5f793890c492998
Parent1 SHA-1: d75e4e06884a396eb93214d7f95a1fba462cab3d
Parent2 SHA-1: 9564b50deabf422682efab3213cdfaabb682cb49
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	@Deprecated
	public void circle (float radius, int divisions, float centerX, float centerY, float centerZ, float normalX, float normalY,
		float normalZ, float angleFrom, float angleTo) {
		EllipseShapeBuilder
			.build(this, radius, divisions, centerX, centerY, centerZ, normalX, normalY, normalZ, angleFrom, angleTo);
	} ##FSTMerge## @Override
	public void circle (float radius, int divisions, float centerX, float centerY, float centerZ, float normalX, float normalY,
		float normalZ, float angleFrom, float angleTo) {
		EllipseShapeBuilder
			.build(this, radius, divisions, centerX, centerY, centerZ, normalX, normalY, normalZ, angleFrom, angleTo);
	} ##FSTMerge## @Override
	@Deprecated
	public void circle (float radius, int divisions, float centerX, float centerY, float centerZ, float normalX, float normalY,
		float normalZ, float angleFrom, float angleTo) {
		EllipseShapeBuilder
			.build(this, radius, divisions, centerX, centerY, centerZ, normalX, normalY, normalZ, angleFrom, angleTo);
	}
File path: /tmp/downloads/libgdx/revisions/rev_d75e4_9564b/rev_d75e4-9564b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 32f39677a3ee49bacb4a94a0d5f793890c492998
Parent1 SHA-1: d75e4e06884a396eb93214d7f95a1fba462cab3d
Parent2 SHA-1: 9564b50deabf422682efab3213cdfaabb682cb49
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	@Deprecated
	public void circle (float radius, int divisions, final Vector3 center, final Vector3 normal, float angleFrom, float angleTo) {
		EllipseShapeBuilder.build(this, radius, divisions, center, normal, angleFrom, angleTo);
	} ##FSTMerge## @Override
	public void circle (float radius, int divisions, final Vector3 center, final Vector3 normal, float angleFrom, float angleTo) {
		EllipseShapeBuilder.build(this, radius, divisions, center, normal, angleFrom, angleTo);
	} ##FSTMerge## @Override
	@Deprecated
	public void circle (float radius, int divisions, final Vector3 center, final Vector3 normal, float angleFrom, float angleTo) {
		EllipseShapeBuilder.build(this, radius, divisions, center, normal, angleFrom, angleTo);
	}
File path: /tmp/downloads/libgdx/revisions/rev_d75e4_9564b/rev_d75e4-9564b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 32f39677a3ee49bacb4a94a0d5f793890c492998
Parent1 SHA-1: d75e4e06884a396eb93214d7f95a1fba462cab3d
Parent2 SHA-1: 9564b50deabf422682efab3213cdfaabb682cb49
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	@Deprecated
	public void circle (float radius, int divisions, final Vector3 center, final Vector3 normal, final Vector3 tangent,
		final Vector3 binormal, float angleFrom, float angleTo) {
		circle(radius, divisions, center.x, center.y, center.z, normal.x, normal.y, normal.z, tangent.x, tangent.y, tangent.z,
			binormal.x, binormal.y, binormal.z, angleFrom, angleTo);
	} ##FSTMerge## @Override
	public void circle (float radius, int divisions, final Vector3 center, final Vector3 normal, final Vector3 tangent,
		final Vector3 binormal, float angleFrom, float angleTo) {
		circle(radius, divisions, center.x, center.y, center.z, normal.x, normal.y, normal.z, tangent.x, tangent.y, tangent.z,
			binormal.x, binormal.y, binormal.z, angleFrom, angleTo);
	} ##FSTMerge## @Override
	@Deprecated
	public void circle (float radius, int divisions, final Vector3 center, final Vector3 normal, final Vector3 tangent,
		final Vector3 binormal, float angleFrom, float angleTo) {
		circle(radius, divisions, center.x, center.y, center.z, normal.x, normal.y, normal.z, tangent.x, tangent.y, tangent.z,
			binormal.x, binormal.y, binormal.z, angleFrom, angleTo);
	}
File path: /tmp/downloads/libgdx/revisions/rev_d75e4_9564b/rev_d75e4-9564b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 32f39677a3ee49bacb4a94a0d5f793890c492998
Parent1 SHA-1: d75e4e06884a396eb93214d7f95a1fba462cab3d
Parent2 SHA-1: 9564b50deabf422682efab3213cdfaabb682cb49
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	@Deprecated
	public void circle (float radius, int divisions, float centerX, float centerY, float centerZ, float normalX, float normalY,
		float normalZ, float tangentX, float tangentY, float tangentZ, float binormalX, float binormalY, float binormalZ,
		float angleFrom, float angleTo) {
		EllipseShapeBuilder.build(this, radius, divisions, centerX, centerY, centerZ, normalX, normalY, normalZ, tangentX,
			tangentY, tangentZ, binormalX, binormalY, binormalZ, angleFrom, angleTo);
	} ##FSTMerge## @Override
	public void circle (float radius, int divisions, float centerX, float centerY, float centerZ, float normalX, float normalY,
		float normalZ, float tangentX, float tangentY, float tangentZ, float binormalX, float binormalY, float binormalZ,
		float angleFrom, float angleTo) {
		EllipseShapeBuilder.build(this, radius, divisions, centerX, centerY, centerZ, normalX, normalY, normalZ, tangentX,
			tangentY, tangentZ, binormalX, binormalY, binormalZ, angleFrom, angleTo);
	} ##FSTMerge## @Override
	@Deprecated
	public void circle (float radius, int divisions, float centerX, float centerY, float centerZ, float normalX, float normalY,
		float normalZ, float tangentX, float tangentY, float tangentZ, float binormalX, float binormalY, float binormalZ,
		float angleFrom, float angleTo) {
		EllipseShapeBuilder.build(this, radius, divisions, centerX, centerY, centerZ, normalX, normalY, normalZ, tangentX,
			tangentY, tangentZ, binormalX, binormalY, binormalZ, angleFrom, angleTo);
	}
File path: /tmp/downloads/libgdx/revisions/rev_d75e4_9564b/rev_d75e4-9564b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 32f39677a3ee49bacb4a94a0d5f793890c492998
Parent1 SHA-1: d75e4e06884a396eb93214d7f95a1fba462cab3d
Parent2 SHA-1: 9564b50deabf422682efab3213cdfaabb682cb49
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	@Deprecated
	public void ellipse (float width, float height, int divisions, float centerX, float centerY, float centerZ, float normalX,
		float normalY, float normalZ) {
		EllipseShapeBuilder.build(this, width, height, divisions, centerX, centerY, centerZ, normalX, normalY, normalZ);
	} ##FSTMerge## @Override
	public void ellipse (float width, float height, int divisions, float centerX, float centerY, float centerZ, float normalX,
		float normalY, float normalZ) {
		EllipseShapeBuilder.build(this, width, height, divisions, centerX, centerY, centerZ, normalX, normalY, normalZ);
	} ##FSTMerge## @Override
	@Deprecated
	public void ellipse (float width, float height, int divisions, float centerX, float centerY, float centerZ, float normalX,
		float normalY, float normalZ) {
		EllipseShapeBuilder.build(this, width, height, divisions, centerX, centerY, centerZ, normalX, normalY, normalZ);
	}
File path: /tmp/downloads/libgdx/revisions/rev_d75e4_9564b/rev_d75e4-9564b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 32f39677a3ee49bacb4a94a0d5f793890c492998
Parent1 SHA-1: d75e4e06884a396eb93214d7f95a1fba462cab3d
Parent2 SHA-1: 9564b50deabf422682efab3213cdfaabb682cb49
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	@Deprecated
	public void ellipse (float width, float height, int divisions, final Vector3 center, final Vector3 normal) {
		EllipseShapeBuilder.build(this, width, height, divisions, center, normal);
	} ##FSTMerge## @Override
	public void ellipse (float width, float height, int divisions, final Vector3 center, final Vector3 normal) {
		EllipseShapeBuilder.build(this, width, height, divisions, center, normal);
	} ##FSTMerge## @Override
	@Deprecated
	public void ellipse (float width, float height, int divisions, final Vector3 center, final Vector3 normal) {
		EllipseShapeBuilder.build(this, width, height, divisions, center, normal);
	}
File path: /tmp/downloads/libgdx/revisions/rev_d75e4_9564b/rev_d75e4-9564b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 32f39677a3ee49bacb4a94a0d5f793890c492998
Parent1 SHA-1: d75e4e06884a396eb93214d7f95a1fba462cab3d
Parent2 SHA-1: 9564b50deabf422682efab3213cdfaabb682cb49
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	@Deprecated
	public void ellipse (float width, float height, int divisions, final Vector3 center, final Vector3 normal,
		final Vector3 tangent, final Vector3 binormal) {
		EllipseShapeBuilder.build(this, width, height, divisions, center, normal, tangent, binormal);
	} ##FSTMerge## @Override
	public void ellipse (float width, float height, int divisions, final Vector3 center, final Vector3 normal,
		final Vector3 tangent, final Vector3 binormal) {
		EllipseShapeBuilder.build(this, width, height, divisions, center, normal, tangent, binormal);
	} ##FSTMerge## @Override
	@Deprecated
	public void ellipse (float width, float height, int divisions, final Vector3 center, final Vector3 normal,
		final Vector3 tangent, final Vector3 binormal) {
		EllipseShapeBuilder.build(this, width, height, divisions, center, normal, tangent, binormal);
	}
File path: /tmp/downloads/libgdx/revisions/rev_d75e4_9564b/rev_d75e4-9564b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 32f39677a3ee49bacb4a94a0d5f793890c492998
Parent1 SHA-1: d75e4e06884a396eb93214d7f95a1fba462cab3d
Parent2 SHA-1: 9564b50deabf422682efab3213cdfaabb682cb49
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	@Deprecated
	public void ellipse (float width, float height, int divisions, float centerX, float centerY, float centerZ, float normalX,
		float normalY, float normalZ, float tangentX, float tangentY, float tangentZ, float binormalX, float binormalY,
		float binormalZ) {
		EllipseShapeBuilder.build(this, width, height, divisions, centerX, centerY, centerZ, normalX, normalY, normalZ, tangentX,
			tangentY, tangentZ, binormalX, binormalY, binormalZ);
	} ##FSTMerge## @Override
	public void ellipse (float width, float height, int divisions, float centerX, float centerY, float centerZ, float normalX,
		float normalY, float normalZ, float tangentX, float tangentY, float tangentZ, float binormalX, float binormalY,
		float binormalZ) {
		EllipseShapeBuilder.build(this, width, height, divisions, centerX, centerY, centerZ, normalX, normalY, normalZ, tangentX,
			tangentY, tangentZ, binormalX, binormalY, binormalZ);
	} ##FSTMerge## @Override
	@Deprecated
	public void ellipse (float width, float height, int divisions, float centerX, float centerY, float centerZ, float normalX,
		float normalY, float normalZ, float tangentX, float tangentY, float tangentZ, float binormalX, float binormalY,
		float binormalZ) {
		EllipseShapeBuilder.build(this, width, height, divisions, centerX, centerY, centerZ, normalX, normalY, normalZ, tangentX,
			tangentY, tangentZ, binormalX, binormalY, binormalZ);
	}
File path: /tmp/downloads/libgdx/revisions/rev_d75e4_9564b/rev_d75e4-9564b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 32f39677a3ee49bacb4a94a0d5f793890c492998
Parent1 SHA-1: d75e4e06884a396eb93214d7f95a1fba462cab3d
Parent2 SHA-1: 9564b50deabf422682efab3213cdfaabb682cb49
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	@Deprecated
	public void ellipse (float width, float height, int divisions, float centerX, float centerY, float centerZ, float normalX,
		float normalY, float normalZ, float angleFrom, float angleTo) {
		EllipseShapeBuilder.build(this, width, height, divisions, centerX, centerY, centerZ, normalX, normalY, normalZ, angleFrom,
			angleTo);
	} ##FSTMerge## @Override
	public void ellipse (float width, float height, int divisions, float centerX, float centerY, float centerZ, float normalX,
		float normalY, float normalZ, float angleFrom, float angleTo) {
		EllipseShapeBuilder.build(this, width, height, divisions, centerX, centerY, centerZ, normalX, normalY, normalZ, angleFrom,
			angleTo);
	} ##FSTMerge## @Override
	@Deprecated
	public void ellipse (float width, float height, int divisions, float centerX, float centerY, float centerZ, float normalX,
		float normalY, float normalZ, float angleFrom, float angleTo) {
		EllipseShapeBuilder.build(this, width, height, divisions, centerX, centerY, centerZ, normalX, normalY, normalZ, angleFrom,
			angleTo);
	}
File path: /tmp/downloads/libgdx/revisions/rev_d75e4_9564b/rev_d75e4-9564b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 32f39677a3ee49bacb4a94a0d5f793890c492998
Parent1 SHA-1: d75e4e06884a396eb93214d7f95a1fba462cab3d
Parent2 SHA-1: 9564b50deabf422682efab3213cdfaabb682cb49
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	@Deprecated
	public void ellipse (float width, float height, int divisions, final Vector3 center, final Vector3 normal, float angleFrom,
		float angleTo) {
		EllipseShapeBuilder.build(this, width, height, divisions, center, normal, angleFrom, angleTo);
	} ##FSTMerge## @Override
	public void ellipse (float width, float height, int divisions, final Vector3 center, final Vector3 normal, float angleFrom,
		float angleTo) {
		EllipseShapeBuilder.build(this, width, height, divisions, center, normal, angleFrom, angleTo);
	} ##FSTMerge## @Override
	@Deprecated
	public void ellipse (float width, float height, int divisions, final Vector3 center, final Vector3 normal, float angleFrom,
		float angleTo) {
		EllipseShapeBuilder.build(this, width, height, divisions, center, normal, angleFrom, angleTo);
	}
File path: /tmp/downloads/libgdx/revisions/rev_d75e4_9564b/rev_d75e4-9564b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 32f39677a3ee49bacb4a94a0d5f793890c492998
Parent1 SHA-1: d75e4e06884a396eb93214d7f95a1fba462cab3d
Parent2 SHA-1: 9564b50deabf422682efab3213cdfaabb682cb49
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	@Deprecated
	public void ellipse (float width, float height, int divisions, final Vector3 center, final Vector3 normal,
		final Vector3 tangent, final Vector3 binormal, float angleFrom, float angleTo) {
		EllipseShapeBuilder.build(this, width, height, divisions, center, normal, tangent, binormal, angleFrom, angleTo);
	} ##FSTMerge## @Override
	public void ellipse (float width, float height, int divisions, final Vector3 center, final Vector3 normal,
		final Vector3 tangent, final Vector3 binormal, float angleFrom, float angleTo) {
		EllipseShapeBuilder.build(this, width, height, divisions, center, normal, tangent, binormal, angleFrom, angleTo);
	} ##FSTMerge## @Override
	@Deprecated
	public void ellipse (float width, float height, int divisions, final Vector3 center, final Vector3 normal,
		final Vector3 tangent, final Vector3 binormal, float angleFrom, float angleTo) {
		EllipseShapeBuilder.build(this, width, height, divisions, center, normal, tangent, binormal, angleFrom, angleTo);
	}
File path: /tmp/downloads/libgdx/revisions/rev_d75e4_9564b/rev_d75e4-9564b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 32f39677a3ee49bacb4a94a0d5f793890c492998
Parent1 SHA-1: d75e4e06884a396eb93214d7f95a1fba462cab3d
Parent2 SHA-1: 9564b50deabf422682efab3213cdfaabb682cb49
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	@Deprecated
	public void ellipse (float width, float height, int divisions, float centerX, float centerY, float centerZ, float normalX,
		float normalY, float normalZ, float tangentX, float tangentY, float tangentZ, float binormalX, float binormalY,
		float binormalZ, float angleFrom, float angleTo) {
		EllipseShapeBuilder.build(this, width, height, divisions, centerX, centerY, centerZ, normalX, normalY, normalZ, tangentX,
			tangentY, tangentZ, binormalX, binormalY, binormalZ, angleFrom, angleTo);
	} ##FSTMerge## @Override
	public void ellipse (float width, float height, int divisions, float centerX, float centerY, float centerZ, float normalX,
		float normalY, float normalZ, float tangentX, float tangentY, float tangentZ, float binormalX, float binormalY,
		float binormalZ, float angleFrom, float angleTo) {
		EllipseShapeBuilder.build(this, width, height, divisions, centerX, centerY, centerZ, normalX, normalY, normalZ, tangentX,
			tangentY, tangentZ, binormalX, binormalY, binormalZ, angleFrom, angleTo);
	} ##FSTMerge## @Override
	@Deprecated
	public void ellipse (float width, float height, int divisions, float centerX, float centerY, float centerZ, float normalX,
		float normalY, float normalZ, float tangentX, float tangentY, float tangentZ, float binormalX, float binormalY,
		float binormalZ, float angleFrom, float angleTo) {
		EllipseShapeBuilder.build(this, width, height, divisions, centerX, centerY, centerZ, normalX, normalY, normalZ, tangentX,
			tangentY, tangentZ, binormalX, binormalY, binormalZ, angleFrom, angleTo);
	}
File path: /tmp/downloads/libgdx/revisions/rev_d75e4_9564b/rev_d75e4-9564b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 32f39677a3ee49bacb4a94a0d5f793890c492998
Parent1 SHA-1: d75e4e06884a396eb93214d7f95a1fba462cab3d
Parent2 SHA-1: 9564b50deabf422682efab3213cdfaabb682cb49
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	@Deprecated
	public void ellipse (float width, float height, float innerWidth, float innerHeight, int divisions, Vector3 center,
		Vector3 normal) {
		EllipseShapeBuilder.build(this, width, height, innerWidth, innerHeight, divisions, center, normal);
	} ##FSTMerge## @Override
	public void ellipse (float width, float height, float innerWidth, float innerHeight, int divisions, Vector3 center,
		Vector3 normal) {
		EllipseShapeBuilder.build(this, width, height, innerWidth, innerHeight, divisions, center, normal);
	} ##FSTMerge## @Override
	@Deprecated
	public void ellipse (float width, float height, float innerWidth, float innerHeight, int divisions, Vector3 center,
		Vector3 normal) {
		EllipseShapeBuilder.build(this, width, height, innerWidth, innerHeight, divisions, center, normal);
	}
File path: /tmp/downloads/libgdx/revisions/rev_d75e4_9564b/rev_d75e4-9564b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 32f39677a3ee49bacb4a94a0d5f793890c492998
Parent1 SHA-1: d75e4e06884a396eb93214d7f95a1fba462cab3d
Parent2 SHA-1: 9564b50deabf422682efab3213cdfaabb682cb49
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	@Deprecated
	public void ellipse (float width, float height, float innerWidth, float innerHeight, int divisions, float centerX,
		float centerY, float centerZ, float normalX, float normalY, float normalZ) {
		EllipseShapeBuilder.build(this, width, height, innerWidth, innerHeight, divisions, centerX, centerY, centerZ, normalX,
			normalY, normalZ);
	} ##FSTMerge## @Override
	public void ellipse (float width, float height, float innerWidth, float innerHeight, int divisions, float centerX,
		float centerY, float centerZ, float normalX, float normalY, float normalZ) {
		EllipseShapeBuilder.build(this, width, height, innerWidth, innerHeight, divisions, centerX, centerY, centerZ, normalX,
			normalY, normalZ);
	} ##FSTMerge## @Override
	@Deprecated
	public void ellipse (float width, float height, float innerWidth, float innerHeight, int divisions, float centerX,
		float centerY, float centerZ, float normalX, float normalY, float normalZ) {
		EllipseShapeBuilder.build(this, width, height, innerWidth, innerHeight, divisions, centerX, centerY, centerZ, normalX,
			normalY, normalZ);
	}
File path: /tmp/downloads/libgdx/revisions/rev_d75e4_9564b/rev_d75e4-9564b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 32f39677a3ee49bacb4a94a0d5f793890c492998
Parent1 SHA-1: d75e4e06884a396eb93214d7f95a1fba462cab3d
Parent2 SHA-1: 9564b50deabf422682efab3213cdfaabb682cb49
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	@Deprecated
	public void ellipse (float width, float height, float innerWidth, float innerHeight, int divisions, float centerX,
		float centerY, float centerZ, float normalX, float normalY, float normalZ, float angleFrom, float angleTo) {
		EllipseShapeBuilder.build(this, width, height, innerWidth, innerHeight, divisions, centerX, centerY, centerZ, normalX,
			normalY, normalZ, angleFrom, angleTo);
	} ##FSTMerge## @Override
	public void ellipse (float width, float height, float innerWidth, float innerHeight, int divisions, float centerX,
		float centerY, float centerZ, float normalX, float normalY, float normalZ, float angleFrom, float angleTo) {
		EllipseShapeBuilder.build(this, width, height, innerWidth, innerHeight, divisions, centerX, centerY, centerZ, normalX,
			normalY, normalZ, angleFrom, angleTo);
	} ##FSTMerge## @Override
	@Deprecated
	public void ellipse (float width, float height, float innerWidth, float innerHeight, int divisions, float centerX,
		float centerY, float centerZ, float normalX, float normalY, float normalZ, float angleFrom, float angleTo) {
		EllipseShapeBuilder.build(this, width, height, innerWidth, innerHeight, divisions, centerX, centerY, centerZ, normalX,
			normalY, normalZ, angleFrom, angleTo);
	}
File path: /tmp/downloads/libgdx/revisions/rev_d75e4_9564b/rev_d75e4-9564b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 32f39677a3ee49bacb4a94a0d5f793890c492998
Parent1 SHA-1: d75e4e06884a396eb93214d7f95a1fba462cab3d
Parent2 SHA-1: 9564b50deabf422682efab3213cdfaabb682cb49
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	@Deprecated
	public void ellipse (float width, float height, float innerWidth, float innerHeight, int divisions, float centerX,
		float centerY, float centerZ, float normalX, float normalY, float normalZ, float tangentX, float tangentY, float tangentZ,
		float binormalX, float binormalY, float binormalZ, float angleFrom, float angleTo) {
		EllipseShapeBuilder.build(this, width, height, innerWidth, innerHeight, divisions, centerX, centerY, centerZ, normalX,
			normalY, normalZ, tangentX, tangentY, tangentZ, binormalX, binormalY, binormalZ, angleFrom, angleTo);
	} ##FSTMerge## @Override
	public void ellipse (float width, float height, float innerWidth, float innerHeight, int divisions, float centerX,
		float centerY, float centerZ, float normalX, float normalY, float normalZ, float tangentX, float tangentY, float tangentZ,
		float binormalX, float binormalY, float binormalZ, float angleFrom, float angleTo) {
		EllipseShapeBuilder.build(this, width, height, innerWidth, innerHeight, divisions, centerX, centerY, centerZ, normalX,
			normalY, normalZ, tangentX, tangentY, tangentZ, binormalX, binormalY, binormalZ, angleFrom, angleTo);
	} ##FSTMerge## @Override
	@Deprecated
	public void ellipse (float width, float height, float innerWidth, float innerHeight, int divisions, float centerX,
		float centerY, float centerZ, float normalX, float normalY, float normalZ, float tangentX, float tangentY, float tangentZ,
		float binormalX, float binormalY, float binormalZ, float angleFrom, float angleTo) {
		EllipseShapeBuilder.build(this, width, height, innerWidth, innerHeight, divisions, centerX, centerY, centerZ, normalX,
			normalY, normalZ, tangentX, tangentY, tangentZ, binormalX, binormalY, binormalZ, angleFrom, angleTo);
	}
File path: /tmp/downloads/libgdx/revisions/rev_d75e4_9564b/rev_d75e4-9564b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 32f39677a3ee49bacb4a94a0d5f793890c492998
Parent1 SHA-1: d75e4e06884a396eb93214d7f95a1fba462cab3d
Parent2 SHA-1: 9564b50deabf422682efab3213cdfaabb682cb49
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	@Deprecated
	public void cylinder (float width, float height, float depth, int divisions) {
		CylinderShapeBuilder.build(this, width, height, depth, divisions);
	} ##FSTMerge## @Override
	public void cylinder (float width, float height, float depth, int divisions) {
		CylinderShapeBuilder.build(this, width, height, depth, divisions);
	} ##FSTMerge## @Override
	@Deprecated
	public void cylinder (float width, float height, float depth, int divisions) {
		CylinderShapeBuilder.build(this, width, height, depth, divisions);
	}
File path: /tmp/downloads/libgdx/revisions/rev_d75e4_9564b/rev_d75e4-9564b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 32f39677a3ee49bacb4a94a0d5f793890c492998
Parent1 SHA-1: d75e4e06884a396eb93214d7f95a1fba462cab3d
Parent2 SHA-1: 9564b50deabf422682efab3213cdfaabb682cb49
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	@Deprecated
	public void cylinder (float width, float height, float depth, int divisions, float angleFrom, float angleTo) {
		CylinderShapeBuilder.build(this, width, height, depth, divisions, angleFrom, angleTo);
	} ##FSTMerge## @Override
	public void cylinder (float width, float height, float depth, int divisions, float angleFrom, float angleTo) {
		CylinderShapeBuilder.build(this, width, height, depth, divisions, angleFrom, angleTo);
	} ##FSTMerge## @Override
	@Deprecated
	public void cylinder (float width, float height, float depth, int divisions, float angleFrom, float angleTo) {
		CylinderShapeBuilder.build(this, width, height, depth, divisions, angleFrom, angleTo);
	}
File path: /tmp/downloads/libgdx/revisions/rev_d75e4_9564b/rev_d75e4-9564b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 32f39677a3ee49bacb4a94a0d5f793890c492998
Parent1 SHA-1: d75e4e06884a396eb93214d7f95a1fba462cab3d
Parent2 SHA-1: 9564b50deabf422682efab3213cdfaabb682cb49
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	@Deprecated
	public void cylinder (float width, float height, float depth, int divisions, float angleFrom, float angleTo, boolean close) {
		CylinderShapeBuilder.build(this, width, height, depth, divisions, angleFrom, angleTo, close);
	} ##FSTMerge## @Override
	public void cylinder (float width, float height, float depth, int divisions, float angleFrom, float angleTo, boolean close) {
		CylinderShapeBuilder.build(this, width, height, depth, divisions, angleFrom, angleTo, close);
	} ##FSTMerge## @Override
	@Deprecated
	public void cylinder (float width, float height, float depth, int divisions, float angleFrom, float angleTo, boolean close) {
		CylinderShapeBuilder.build(this, width, height, depth, divisions, angleFrom, angleTo, close);
	}
File path: /tmp/downloads/libgdx/revisions/rev_d75e4_9564b/rev_d75e4-9564b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 32f39677a3ee49bacb4a94a0d5f793890c492998
Parent1 SHA-1: d75e4e06884a396eb93214d7f95a1fba462cab3d
Parent2 SHA-1: 9564b50deabf422682efab3213cdfaabb682cb49
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	@Deprecated
	public void cone (float width, float height, float depth, int divisions) {
		cone(width, height, depth, divisions, 0, 360);
	} ##FSTMerge## @Override
	public void cone (float width, float height, float depth, int divisions) {
		cone(width, height, depth, divisions, 0, 360);
	} ##FSTMerge## @Override
	@Deprecated
	public void cone (float width, float height, float depth, int divisions) {
		cone(width, height, depth, divisions, 0, 360);
	}
File path: /tmp/downloads/libgdx/revisions/rev_d75e4_9564b/rev_d75e4-9564b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 32f39677a3ee49bacb4a94a0d5f793890c492998
Parent1 SHA-1: d75e4e06884a396eb93214d7f95a1fba462cab3d
Parent2 SHA-1: 9564b50deabf422682efab3213cdfaabb682cb49
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	@Deprecated
	public void cone (float width, float height, float depth, int divisions, float angleFrom, float angleTo) {
		ConeShapeBuilder.build(this, width, height, depth, divisions, angleFrom, angleTo);
	} ##FSTMerge## @Override
	public void cone (float width, float height, float depth, int divisions, float angleFrom, float angleTo) {
		ConeShapeBuilder.build(this, width, height, depth, divisions, angleFrom, angleTo);
	} ##FSTMerge## @Override
	@Deprecated
	public void cone (float width, float height, float depth, int divisions, float angleFrom, float angleTo) {
		ConeShapeBuilder.build(this, width, height, depth, divisions, angleFrom, angleTo);
	}
File path: /tmp/downloads/libgdx/revisions/rev_d75e4_9564b/rev_d75e4-9564b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 32f39677a3ee49bacb4a94a0d5f793890c492998
Parent1 SHA-1: d75e4e06884a396eb93214d7f95a1fba462cab3d
Parent2 SHA-1: 9564b50deabf422682efab3213cdfaabb682cb49
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	@Deprecated
	public void sphere (float width, float height, float depth, int divisionsU, int divisionsV) {
		SphereShapeBuilder.build(this, width, height, depth, divisionsU, divisionsV);
	} ##FSTMerge## @Override
	public void sphere (float width, float height, float depth, int divisionsU, int divisionsV) {
		SphereShapeBuilder.build(this, width, height, depth, divisionsU, divisionsV);
	} ##FSTMerge## @Override
	@Deprecated
	public void sphere (float width, float height, float depth, int divisionsU, int divisionsV) {
		SphereShapeBuilder.build(this, width, height, depth, divisionsU, divisionsV);
	}
File path: /tmp/downloads/libgdx/revisions/rev_d75e4_9564b/rev_d75e4-9564b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 32f39677a3ee49bacb4a94a0d5f793890c492998
Parent1 SHA-1: d75e4e06884a396eb93214d7f95a1fba462cab3d
Parent2 SHA-1: 9564b50deabf422682efab3213cdfaabb682cb49
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	@Deprecated
	public void sphere (final Matrix4 transform, float width, float height, float depth, int divisionsU, int divisionsV) {
		SphereShapeBuilder.build(this, transform, width, height, depth, divisionsU, divisionsV);
	} ##FSTMerge## @Override
	public void sphere (final Matrix4 transform, float width, float height, float depth, int divisionsU, int divisionsV) {
		SphereShapeBuilder.build(this, transform, width, height, depth, divisionsU, divisionsV);
	} ##FSTMerge## @Override
	@Deprecated
	public void sphere (final Matrix4 transform, float width, float height, float depth, int divisionsU, int divisionsV) {
		SphereShapeBuilder.build(this, transform, width, height, depth, divisionsU, divisionsV);
	}
File path: /tmp/downloads/libgdx/revisions/rev_d75e4_9564b/rev_d75e4-9564b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 32f39677a3ee49bacb4a94a0d5f793890c492998
Parent1 SHA-1: d75e4e06884a396eb93214d7f95a1fba462cab3d
Parent2 SHA-1: 9564b50deabf422682efab3213cdfaabb682cb49
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	@Deprecated
	public void sphere (float width, float height, float depth, int divisionsU, int divisionsV, float angleUFrom, float angleUTo,
		float angleVFrom, float angleVTo) {
		SphereShapeBuilder.build(this, width, height, depth, divisionsU, divisionsV, angleUFrom, angleUTo, angleVFrom, angleVTo);
	} ##FSTMerge## @Override
	public void sphere (float width, float height, float depth, int divisionsU, int divisionsV, float angleUFrom, float angleUTo,
		float angleVFrom, float angleVTo) {
		SphereShapeBuilder.build(this, width, height, depth, divisionsU, divisionsV, angleUFrom, angleUTo, angleVFrom, angleVTo);
	} ##FSTMerge## @Override
	@Deprecated
	public void sphere (float width, float height, float depth, int divisionsU, int divisionsV, float angleUFrom, float angleUTo,
		float angleVFrom, float angleVTo) {
		SphereShapeBuilder.build(this, width, height, depth, divisionsU, divisionsV, angleUFrom, angleUTo, angleVFrom, angleVTo);
	}
File path: /tmp/downloads/libgdx/revisions/rev_d75e4_9564b/rev_d75e4-9564b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 32f39677a3ee49bacb4a94a0d5f793890c492998
Parent1 SHA-1: d75e4e06884a396eb93214d7f95a1fba462cab3d
Parent2 SHA-1: 9564b50deabf422682efab3213cdfaabb682cb49
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	@Deprecated
	public void sphere (final Matrix4 transform, float width, float height, float depth, int divisionsU, int divisionsV,
		float angleUFrom, float angleUTo, float angleVFrom, float angleVTo) {
		SphereShapeBuilder.build(this, transform, width, height, depth, divisionsU, divisionsV, angleUFrom, angleUTo, angleVFrom,
			angleVTo);
	} ##FSTMerge## @Override
	public void sphere (final Matrix4 transform, float width, float height, float depth, int divisionsU, int divisionsV,
		float angleUFrom, float angleUTo, float angleVFrom, float angleVTo) {
		SphereShapeBuilder.build(this, transform, width, height, depth, divisionsU, divisionsV, angleUFrom, angleUTo, angleVFrom,
			angleVTo);
	} ##FSTMerge## @Override
	@Deprecated
	public void sphere (final Matrix4 transform, float width, float height, float depth, int divisionsU, int divisionsV,
		float angleUFrom, float angleUTo, float angleVFrom, float angleVTo) {
		SphereShapeBuilder.build(this, transform, width, height, depth, divisionsU, divisionsV, angleUFrom, angleUTo, angleVFrom,
			angleVTo);
	}
File path: /tmp/downloads/libgdx/revisions/rev_d75e4_9564b/rev_d75e4-9564b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 32f39677a3ee49bacb4a94a0d5f793890c492998
Parent1 SHA-1: d75e4e06884a396eb93214d7f95a1fba462cab3d
Parent2 SHA-1: 9564b50deabf422682efab3213cdfaabb682cb49
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	@Deprecated
	public void capsule (float radius, float height, int divisions) {
		CapsuleShapeBuilder.build(this, radius, height, divisions);
	} ##FSTMerge## @Override
	public void capsule (float radius, float height, int divisions) {
		CapsuleShapeBuilder.build(this, radius, height, divisions);
	} ##FSTMerge## @Override
	@Deprecated
	public void capsule (float radius, float height, int divisions) {
		CapsuleShapeBuilder.build(this, radius, height, divisions);
	}
File path: /tmp/downloads/libgdx/revisions/rev_d75e4_9564b/rev_d75e4-9564b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 32f39677a3ee49bacb4a94a0d5f793890c492998
Parent1 SHA-1: d75e4e06884a396eb93214d7f95a1fba462cab3d
Parent2 SHA-1: 9564b50deabf422682efab3213cdfaabb682cb49
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	@Deprecated
	public void arrow (float x1, float y1, float z1, float x2, float y2, float z2, float capLength, float stemThickness,
		int divisions) {
		ArrowShapeBuilder.build(this, x1, y1, z1, x2, y2, z2, capLength, stemThickness, divisions);
	} ##FSTMerge## @Override
	public void arrow (float x1, float y1, float z1, float x2, float y2, float z2, float capLength, float stemThickness,
		int divisions) {
		ArrowShapeBuilder.build(this, x1, y1, z1, x2, y2, z2, capLength, stemThickness, divisions);
	} ##FSTMerge## @Override
	@Deprecated
	public void arrow (float x1, float y1, float z1, float x2, float y2, float z2, float capLength, float stemThickness,
		int divisions) {
		ArrowShapeBuilder.build(this, x1, y1, z1, x2, y2, z2, capLength, stemThickness, divisions);
	}
File path: /tmp/downloads/libgdx/revisions/rev_d75e4_9564b/rev_d75e4-9564b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java

==================================================================================================================
Revision: /tmp/downloads/libgdx/revisions/rev_916d5_9f9d9/rev_916d5-9f9d9.revisions
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 282dee2366838906d8da5c167c40abc7a99523ec
Parent1 SHA-1: 916d56536854f79e4b4f84fcd6927b55d784f243
Parent2 SHA-1: 9f9d9fc6656fd3f596308d0f2166632136692fa7
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ Lwjgl3Window(long windowHandle, ApplicationListener listener,
			Lwjgl3ApplicationConfiguration config) {
		this.windowHandle = windowHandle;
		this.listener = listener;
		this.windowListener = config.windowListener;
		this.config = config;
		this.input = new Lwjgl3Input(this);
		this.graphics = new Lwjgl3Graphics(this);
		this.tmpBuffer = BufferUtils.createIntBuffer(1);
		this.tmpBuffer2 = BufferUtils.createIntBuffer(1);
		
		GLFW.glfwSetWindowFocusCallback(windowHandle, focusCallback);
		GLFW.glfwSetWindowIconifyCallback(windowHandle, iconifyCallback);
		GLFW.glfwSetWindowCloseCallback(windowHandle, closeCallback);
		GLFW.glfwSetDropCallback(windowHandle, dropCallback);
	} ##FSTMerge## Lwjgl3Window(long windowHandle, ApplicationListener listener,
			Lwjgl3ApplicationConfiguration config) {
		this.windowHandle = windowHandle;
		this.listener = listener;
		this.windowListener = config.windowListener;
		this.config = config;
		this.input = new Lwjgl3Input(this);
		this.graphics = new Lwjgl3Graphics(this);
		this.tmpBuffer = BufferUtils.createIntBuffer(1);
		this.tmpBuffer2 = BufferUtils.createIntBuffer(1);
		
		GLFW.glfwSetWindowFocusCallback(windowHandle, focusCallback);
		GLFW.glfwSetWindowIconifyCallback(windowHandle, iconifyCallback);
		GLFW.glfwSetWindowCloseCallback(windowHandle, closeCallback);
	} ##FSTMerge## Lwjgl3Window(long windowHandle, ApplicationListener listener,
			Lwjgl3ApplicationConfiguration config) {
		this.windowHandle = windowHandle;
		this.listener = listener;
		this.windowListener = config.windowListener;
		this.config = config;
		this.input = new Lwjgl3Input(this);
		this.graphics = new Lwjgl3Graphics(this);
		this.tmpBuffer = BufferUtils.createIntBuffer(1);
		this.tmpBuffer2 = BufferUtils.createIntBuffer(1);
		
		GLFW.glfwSetWindowFocusCallback(windowHandle, focusCallback);
		GLFW.glfwSetWindowIconifyCallback(windowHandle, iconifyCallback);
		GLFW.glfwSetWindowCloseCallback(windowHandle, closeCallback);
	}
File path: /tmp/downloads/libgdx/revisions/rev_916d5_9f9d9/rev_916d5-9f9d9/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/Lwjgl3Window.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 282dee2366838906d8da5c167c40abc7a99523ec
Parent1 SHA-1: 916d56536854f79e4b4f84fcd6927b55d784f243
Parent2 SHA-1: 9f9d9fc6656fd3f596308d0f2166632136692fa7
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public void dispose() {
		listener.pause();
		listener.dispose();		
		graphics.dispose();
		input.dispose();
		GLFW.glfwSetWindowFocusCallback(windowHandle, null);
		GLFW.glfwSetWindowIconifyCallback(windowHandle, null);
		GLFW.glfwSetWindowCloseCallback(windowHandle, null);
		GLFW.glfwSetDropCallback(windowHandle, null);
		GLFW.glfwDestroyWindow(windowHandle);
		
		focusCallback.release();
		iconifyCallback.release();
		closeCallback.release();
		dropCallback.release();
	} ##FSTMerge## @Override
	public void dispose() {
		listener.pause();
		listener.dispose();		
		graphics.dispose();
		input.dispose();
		GLFW.glfwSetWindowFocusCallback(windowHandle, null);
		GLFW.glfwSetWindowIconifyCallback(windowHandle, null);
		GLFW.glfwSetWindowCloseCallback(windowHandle, null);
		GLFW.glfwDestroyWindow(windowHandle);
		
		focusCallback.release();
		iconifyCallback.release();
		closeCallback.release();
	} ##FSTMerge## @Override
	public void dispose() {
		listener.pause();
		listener.dispose();		
		graphics.dispose();
		input.dispose();
		GLFW.glfwSetWindowFocusCallback(windowHandle, null);
		GLFW.glfwSetWindowIconifyCallback(windowHandle, null);
		GLFW.glfwSetWindowCloseCallback(windowHandle, null);
		GLFW.glfwDestroyWindow(windowHandle);
		
		focusCallback.release();
		iconifyCallback.release();
		closeCallback.release();
	}
File path: /tmp/downloads/libgdx/revisions/rev_916d5_9f9d9/rev_916d5-9f9d9/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/Lwjgl3Window.java

==================================================================================================================
Revision: /tmp/downloads/libgdx/revisions/rev_d34a8_ad4a3/rev_d34a8-ad4a3.revisions
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 999e001254322e76aba52bc49c1d06b71f686e41
Parent1 SHA-1: d34a8cede2cd33fdac4111995815d3347f839d45
Parent2 SHA-1: ad4a313e54810bdade5a879a41d5f2576ccdc947
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ void create () {
		try {
			setGlobals();
			graphics.setupDisplay();
			graphics.initiateGLInstances();
			listener.create();
			lastWidth = Math.max(1, graphics.getWidth());
			lastHeight = Math.max(1, graphics.getHeight());
			listener.resize(lastWidth, lastHeight);
			start();
		} catch (Exception ex) {
			stopped();
			throw new GdxRuntimeException(ex);
		}
	} ##FSTMerge## void create () {
		try {
			setGlobals();
			graphics.initiateGLInstances();
			listener.create();
			lastWidth = Math.max(1, graphics.getWidth());
			lastHeight = Math.max(1, graphics.getHeight());
			listener.resize(lastWidth, lastHeight);
			start();
		} catch (Exception ex) {
			stopped();
			throw new GdxRuntimeException(ex);
		}
	} ##FSTMerge## void create () {
		try {
			setGlobals();
			graphics.initiateGL();
			listener.create();
			lastWidth = Math.max(1, graphics.getWidth());
			lastHeight = Math.max(1, graphics.getHeight());
			listener.resize(lastWidth, lastHeight);
			start();
		} catch (Exception ex) {
			stopped();
			throw new GdxRuntimeException(ex);
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_d34a8_ad4a3/rev_d34a8-ad4a3/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglAWTCanvas.java

==================================================================================================================
Revision: /tmp/downloads/libgdx/revisions/rev_3609d_55a47/rev_3609d-55a47.revisions
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: c1d3af963786d9509e5ee4eb1db710788e49a3d8
Parent1 SHA-1: 3609d2f95a96506ec9c7f5c49339da9936100707
Parent2 SHA-1: 55a47f14c05b3723a68ecc8ad37fdd0f55122ef4
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public static final List<Class<? extends GdxTest>> tests = new ArrayList<Class<? extends GdxTest>>(Arrays.asList(
		// @off
		IssueTest.class,
		AccelerometerTest.class,
		ActionSequenceTest.class,
		ActionTest.class,
		Affine2Test.class,
		AlphaTest.class,
		Animation3DTest.class,
		AnimationTest.class,
		AnnotationTest.class,
		AssetManagerTest.class,
		AtlasIssueTest.class,
		AudioDeviceTest.class,
		AudioRecorderTest.class,
		Basic3DSceneTest.class,
		Basic3DTest.class,
		Benchmark3DTest.class,
		BitmapFontAlignmentTest.class,
		BitmapFontDistanceFieldTest.class,
		BitmapFontFlipTest.class,
		BitmapFontMetricsTest.class,
		BitmapFontTest.class,
		BitmapFontAtlasRegionTest.class,
		BlitTest.class,
		Box2DTest.class,
		Box2DTestCollection.class,
		Bresenham2Test.class,
		BufferUtilsTest.class,
		BulletTestCollection.class,
		CpuSpriteBatchTest.class,
		ContainerTest.class,
		CullTest.class,
		DelaunayTriangulatorTest.class,
		DeltaTimeTest.class,
		DirtyRenderingTest.class,
		DragAndDropTest.class,
		ETC1Test.class,
//		EarClippingTriangulatorTest.class,
		EdgeDetectionTest.class,
		ExitTest.class,
		ExternalMusicTest.class,
		FilesTest.class,
		FilterPerformanceTest.class,
		FloatTextureTest.class,
		FogTest.class,
		FrameBufferTest.class,
		FramebufferToTextureTest.class,
		FullscreenTest.class,
		ControllersTest.class,
		Gdx2DTest.class,
		GestureDetectorTest.class,
		GroupCullingTest.class,
		GroupFadeTest.class,
		GroupTest.class,
		HelloTriangle.class,
		HexagonalTiledMapTest.class,
		I18NMessageTest.class,
		I18NSimpleMessageTest.class,
		ImageScaleTest.class,
		ImageTest.class,
		ImmediateModeRendererTest.class,
		IndexBufferObjectShaderTest.class,
		InputTest.class,
		IntegerBitmapFontTest.class,
		InterpolationTest.class,
		InverseKinematicsTest.class,
		IsometricTileTest.class,
		KinematicBodyTest.class,
		KTXTest.class,
		LabelScaleTest.class,
		LabelTest.class,
		LifeCycleTest.class,
		LightsTest.class,
		MaterialTest.class,
		MatrixJNITest.class,
		MeshBuilderTest.class,
		MeshShaderTest.class,
		MipMapTest.class,
		ModelTest.class,
		MoveSpriteExample.class,
		MultitouchTest.class,
		MusicTest.class,
		NetAPITest.class,
		NinePatchTest.class,
		OnscreenKeyboardTest.class,
		PathTest.class,
		ParallaxTest.class,
		ParticleControllerTest.class,
		ParticleEmitterTest.class,
		ParticleEmittersTest.class,
		PixelsPerInchTest.class,
		PixmapBlendingTest.class,
		PixmapPackerTest.class,
		PixmapTest.class,
		PolygonRegionTest.class,
		PolygonSpriteTest.class,
		PreferencesTest.class,
		ProjectTest.class,
		ProjectiveTextureTest.class,
		ReflectionTest.class,
		RotationTest.class,
		RunnablePostTest.class,
		StageDebugTest.class,
		Scene2dTest.class,
		ScrollPane2Test.class,
		ScrollPaneScrollBarsTest.class,
		ScrollPaneTest.class,
		SelectTest.class,
		ShaderCollectionTest.class,
		ShaderMultitextureTest.class,
		ShaderTest.class,
		ShadowMappingTest.class,
		ShapeRendererTest.class,
		SimpleAnimationTest.class,
		SimpleDecalTest.class,
		SimpleStageCullingTest.class,
		SimpleVertexShader.class,
		SkeletonTest.class,
		SoftKeyboardTest.class,
		SortedSpriteTest.class,
		SoundTest.class,
		SpriteBatchRotationTest.class,
		SpriteBatchShaderTest.class,
		SpriteBatchTest.class,
		SpriteCacheOffsetTest.class,
		SpriteCacheTest.class,
		StagePerformanceTest.class,
		StageTest.class,
		SuperKoalio.class,
		TableLayoutTest.class,
		TableTest.class,
		TextAreaTest.class,
		TextButtonTest.class,
		TextInputDialogTest.class,
		TextureAtlasTest.class,
		TextureDataTest.class,
		TextureDownloadTest.class,
		TextureFormatTest.class,
		TextureRegion3DTest.class,
		TideMapAssetManagerTest.class,
		TideMapDirectLoaderTest.class,
		TileTest.class,
		TiledMapAssetManagerTest.class,
		TiledMapAtlasAssetManagerTest.class,
		TiledMapDirectLoaderTest.class,
		TiledMapModifiedExternalTilesetTest.class,
		TiledMapObjectLoadingTest.class,
		TiledMapBench.class,
		TimerTest.class,
		TimeUtilsTest.class,
		TouchpadTest.class,
		TreeTest.class,
		UISimpleTest.class,
		UITest.class,
		Vector2dTest.class,
		VertexBufferObjectShaderTest.class,
		VibratorTest.class,
		ViewportTest1.class,
		ViewportTest2.class,
		ViewportTest3.class,
		YDownTest.class,
		FreeTypeFontLoaderTest.class,
		FreeTypeDisposeTest.class,
		FreeTypeIncrementalTest.class,
		FreeTypePackTest.class,
		FreeTypeTest.class,
		InternationalFontsTest.class,
		PngTest.class,
		JsonTest.class
		// @on

		// SoundTouchTest.class, Mpg123Test.class, WavTest.class, FreeTypeTest.class,
		// VorbisTest.class
		)); ##FSTMerge## public static final List<Class<? extends GdxTest>> tests = new ArrayList<Class<? extends GdxTest>>(Arrays.asList(
		// @off
		IssueTest.class,
		AccelerometerTest.class,
		ActionSequenceTest.class,
		ActionTest.class,
		Affine2Test.class,
		AlphaTest.class,
		Animation3DTest.class,
		AnimationTest.class,
		AnnotationTest.class,
		AssetManagerTest.class,
		AtlasIssueTest.class,
		AudioDeviceTest.class,
		AudioRecorderTest.class,
		Basic3DSceneTest.class,
		Basic3DTest.class,
		Benchmark3DTest.class,
		BitmapFontAlignmentTest.class,
		BitmapFontDistanceFieldTest.class,
		BitmapFontFlipTest.class,
		BitmapFontMetricsTest.class,
		BitmapFontTest.class,
		BitmapFontAtlasRegionTest.class,
		BlitTest.class,
		Box2DTest.class,
		Box2DTestCollection.class,
		Bresenham2Test.class,
		BufferUtilsTest.class,
		BulletTestCollection.class,
		CpuSpriteBatchTest.class,
		ContainerTest.class,
		CullTest.class,
		DelaunayTriangulatorTest.class,
		DeltaTimeTest.class,
		DirtyRenderingTest.class,
		DragAndDropTest.class,
		ETC1Test.class,
//		EarClippingTriangulatorTest.class,
		EdgeDetectionTest.class,
		ExitTest.class,
		ExternalMusicTest.class,
		FilesTest.class,
		FilterPerformanceTest.class,
		FloatTextureTest.class,
		FogTest.class,
		FrameBufferTest.class,
		FramebufferToTextureTest.class,
		FullscreenTest.class,
		ControllersTest.class,
		Gdx2DTest.class,
		GestureDetectorTest.class,
		GroupCullingTest.class,
		GroupFadeTest.class,
		GroupTest.class,
		HelloTriangle.class,
		HexagonalTiledMapTest.class,
		I18NMessageTest.class,
		I18NSimpleMessageTest.class,
		ImageScaleTest.class,
		ImageTest.class,
		ImmediateModeRendererTest.class,
		IndexBufferObjectShaderTest.class,
		InputTest.class,
		IntegerBitmapFontTest.class,
		InterpolationTest.class,
		InverseKinematicsTest.class,
		IsometricTileTest.class,
		KinematicBodyTest.class,
		KTXTest.class,
		LabelScaleTest.class,
		LabelTest.class,
		LifeCycleTest.class,
		LightsTest.class,
		MaterialTest.class,
		MatrixJNITest.class,
		MeshBuilderTest.class,
		MeshShaderTest.class,
		MipMapTest.class,
		ModelTest.class,
		MoveSpriteExample.class,
		MultitouchTest.class,
		MusicTest.class,
		NetAPITest.class,
		NinePatchTest.class,
		OnscreenKeyboardTest.class,
		PathTest.class,
		ParallaxTest.class,
		ParticleControllerTest.class,
		ParticleEmitterTest.class,
		ParticleEmittersTest.class,
		PixelsPerInchTest.class,
		PixmapBlendingTest.class,
		PixmapPackerTest.class,
		PixmapTest.class,
		PolygonRegionTest.class,
		PolygonSpriteTest.class,
		PreferencesTest.class,
		ProjectTest.class,
		ProjectiveTextureTest.class,
		ReflectionTest.class,
		RotationTest.class,
		RunnablePostTest.class,
		StageDebugTest.class,
		Scene2dTest.class,
		ScrollPane2Test.class,
		ScrollPaneScrollBarsTest.class,
		ScrollPaneTest.class,
		SelectTest.class,
		ShaderCollectionTest.class,
		ShaderMultitextureTest.class,
		ShaderTest.class,
		ShadowMappingTest.class,
		ShapeRendererTest.class,
		SimpleAnimationTest.class,
		SimpleDecalTest.class,
		SimpleStageCullingTest.class,
		SimpleVertexShader.class,
		SkeletonTest.class,
		SoftKeyboardTest.class,
		SortedSpriteTest.class,
		SoundTest.class,
		SpriteBatchRotationTest.class,
		SpriteBatchShaderTest.class,
		SpriteBatchTest.class,
		SpriteCacheOffsetTest.class,
		SpriteCacheTest.class,
		StagePerformanceTest.class,
		StageTest.class,
		SuperKoalio.class,
		TableLayoutTest.class,
		TableTest.class,
		TextAreaTest.class,
		TextButtonTest.class,
		TextInputDialogTest.class,
		TextureAtlasTest.class,
		TextureDataTest.class,
		TextureDownloadTest.class,
		TextureFormatTest.class,
		TextureRegion3DTest.class,
		TideMapAssetManagerTest.class,
		TideMapDirectLoaderTest.class,
		TileTest.class,
		TiledMapAssetManagerTest.class,
		TiledMapAtlasAssetManagerTest.class,
		TiledMapDirectLoaderTest.class,
		TiledMapModifiedExternalTilesetTest.class,
		TiledMapObjectLoadingTest.class,
		TiledMapBench.class,
		TimerTest.class,
		TimeUtilsTest.class,
		TouchpadTest.class,
		TreeTest.class,
		UISimpleTest.class,
		UITest.class,
		Vector2dTest.class,
		VertexBufferObjectShaderTest.class,
		VibratorTest.class,
		ViewportTest1.class,
		ViewportTest2.class,
		ViewportTest3.class,
		YDownTest.class,
		FreeTypeFontLoaderTest.class,
		PngTest.class,
		JsonTest.class
		// @on

		// SoundTouchTest.class, Mpg123Test.class, WavTest.class, FreeTypeTest.class,
		// InternationalFontsTest.class, VorbisTest.class
		)); ##FSTMerge## public static final List<Class<? extends GdxTest>> tests = new ArrayList<Class<? extends GdxTest>>(Arrays.asList(
		// @off
		IssueTest.class,
		AccelerometerTest.class,
		ActionSequenceTest.class,
		ActionTest.class,
		Affine2Test.class,
		AlphaTest.class,
		Animation3DTest.class,
		AnimationTest.class,
		AnnotationTest.class,
		AssetManagerTest.class,
		AtlasIssueTest.class,
		AudioDeviceTest.class,
		AudioRecorderTest.class,
		Basic3DSceneTest.class,
		Basic3DTest.class,
		Benchmark3DTest.class,
		BitmapFontAlignmentTest.class,
		BitmapFontDistanceFieldTest.class,
		BitmapFontFlipTest.class,
		BitmapFontMetricsTest.class,
		BitmapFontTest.class,
		BitmapFontAtlasRegionTest.class,
		BlitTest.class,
		Box2DTest.class,
		Box2DTestCollection.class,
		Bresenham2Test.class,
		BufferUtilsTest.class,
		BulletTestCollection.class,
		CpuSpriteBatchTest.class,
		ContainerTest.class,
		CullTest.class,
		DelaunayTriangulatorTest.class,
		DeltaTimeTest.class,
		DirtyRenderingTest.class,
		DragAndDropTest.class,
		ETC1Test.class,
//		EarClippingTriangulatorTest.class,
		EdgeDetectionTest.class,
		ExitTest.class,
		ExternalMusicTest.class,
		FilesTest.class,
		FilterPerformanceTest.class,
		FloatTextureTest.class,
		FogTest.class,
		FrameBufferCubemapTest.class,
		FrameBufferTest.class,
		FramebufferToTextureTest.class,
		FullscreenTest.class,
		ControllersTest.class,
		Gdx2DTest.class,
		GestureDetectorTest.class,
		GroupCullingTest.class,
		GroupFadeTest.class,
		GroupTest.class,
		HelloTriangle.class,
		HexagonalTiledMapTest.class,
		I18NMessageTest.class,
		I18NSimpleMessageTest.class,
		ImageScaleTest.class,
		ImageTest.class,
		ImmediateModeRendererTest.class,
		IndexBufferObjectShaderTest.class,
		InputTest.class,
		IntegerBitmapFontTest.class,
		InterpolationTest.class,
		InverseKinematicsTest.class,
		IsometricTileTest.class,
		KinematicBodyTest.class,
		KTXTest.class,
		LabelScaleTest.class,
		LabelTest.class,
		LifeCycleTest.class,
		LightsTest.class,
		MaterialTest.class,
		MatrixJNITest.class,
		MeshBuilderTest.class,
		MeshShaderTest.class,
		MipMapTest.class,
		ModelTest.class,
		MoveSpriteExample.class,
		MultitouchTest.class,
		MusicTest.class,
		NetAPITest.class,
		NinePatchTest.class,
		OnscreenKeyboardTest.class,
		PathTest.class,
		ParallaxTest.class,
		ParticleControllerTest.class,
		ParticleEmitterTest.class,
		ParticleEmittersTest.class,
		PixelsPerInchTest.class,
		PixmapBlendingTest.class,
		PixmapPackerTest.class,
		PixmapTest.class,
		PolygonRegionTest.class,
		PolygonSpriteTest.class,
		PreferencesTest.class,
		ProjectTest.class,
		ProjectiveTextureTest.class,
		ReflectionTest.class,
		RotationTest.class,
		RunnablePostTest.class,
		StageDebugTest.class,
		Scene2dTest.class,
		ScrollPane2Test.class,
		ScrollPaneScrollBarsTest.class,
		ScrollPaneTest.class,
		SelectTest.class,
		ShaderCollectionTest.class,
		ShaderMultitextureTest.class,
		ShaderTest.class,
		ShadowMappingTest.class,
		ShapeRendererTest.class,
		SimpleAnimationTest.class,
		SimpleDecalTest.class,
		SimpleStageCullingTest.class,
		SimpleVertexShader.class,
		SkeletonTest.class,
		SoftKeyboardTest.class,
		SortedSpriteTest.class,
		SoundTest.class,
		SpriteBatchRotationTest.class,
		SpriteBatchShaderTest.class,
		SpriteBatchTest.class,
		SpriteCacheOffsetTest.class,
		SpriteCacheTest.class,
		StagePerformanceTest.class,
		StageTest.class,
		SuperKoalio.class,
		TableLayoutTest.class,
		TableTest.class,
		TextAreaTest.class,
		TextButtonTest.class,
		TextInputDialogTest.class,
		TextureAtlasTest.class,
		TextureDataTest.class,
		TextureDownloadTest.class,
		TextureFormatTest.class,
		TextureRegion3DTest.class,
		TideMapAssetManagerTest.class,
		TideMapDirectLoaderTest.class,
		TileTest.class,
		TiledMapAssetManagerTest.class,
		TiledMapAtlasAssetManagerTest.class,
		TiledMapDirectLoaderTest.class,
		TiledMapModifiedExternalTilesetTest.class,
		TiledMapObjectLoadingTest.class,
		TiledMapBench.class,
		TimerTest.class,
		TimeUtilsTest.class,
		TouchpadTest.class,
		TreeTest.class,
		UISimpleTest.class,
		UITest.class,
		Vector2dTest.class,
		VertexBufferObjectShaderTest.class,
		VibratorTest.class,
		ViewportTest1.class,
		ViewportTest2.class,
		ViewportTest3.class,
		YDownTest.class,
		FreeTypeFontLoaderTest.class,
		PngTest.class,
		JsonTest.class
		// @on

		// SoundTouchTest.class, Mpg123Test.class, WavTest.class, FreeTypeTest.class,
		// InternationalFontsTest.class, VorbisTest.class
		));
File path: /tmp/downloads/libgdx/revisions/rev_3609d_55a47/rev_3609d-55a47/tests/gdx-tests/src/com/badlogic/gdx/tests/utils/GdxTests.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: c1d3af963786d9509e5ee4eb1db710788e49a3d8
Parent1 SHA-1: 3609d2f95a96506ec9c7f5c49339da9936100707
Parent2 SHA-1: 55a47f14c05b3723a68ecc8ad37fdd0f55122ef4
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public Cubemap (FileHandle positiveX, FileHandle negativeX, FileHandle positiveY, FileHandle negativeY, FileHandle positiveZ,
		FileHandle negativeZ, boolean useMipMaps) {
		this(TextureData.Factory.loadFromFile(positiveX, useMipMaps), TextureData.Factory.loadFromFile(negativeX, useMipMaps),
			TextureData.Factory.loadFromFile(positiveY, useMipMaps), TextureData.Factory.loadFromFile(negativeY, useMipMaps),
			TextureData.Factory.loadFromFile(positiveZ, useMipMaps), TextureData.Factory.loadFromFile(negativeZ, useMipMaps));
	} ##FSTMerge## public Cubemap (FileHandle positiveX, FileHandle negativeX, FileHandle positiveY, FileHandle negativeY, FileHandle positiveZ,
		FileHandle negativeZ, boolean useMipMaps) {
		this(createTextureData(positiveX, useMipMaps), createTextureData(negativeX, useMipMaps), createTextureData(positiveY,
			useMipMaps), createTextureData(negativeY, useMipMaps), createTextureData(positiveZ, useMipMaps), createTextureData(
			negativeZ, useMipMaps));
	} ##FSTMerge## public Cubemap (FileHandle positiveX, FileHandle negativeX, FileHandle positiveY, FileHandle negativeY, FileHandle positiveZ,
		FileHandle negativeZ, boolean useMipMaps) {
		this(createTextureData(positiveX, useMipMaps), createTextureData(negativeX, useMipMaps), createTextureData(positiveY,
			useMipMaps), createTextureData(negativeY, useMipMaps), createTextureData(positiveZ, useMipMaps), createTextureData(
				negativeZ, useMipMaps));
	}
File path: /tmp/downloads/libgdx/revisions/rev_3609d_55a47/rev_3609d-55a47/gdx/src/com/badlogic/gdx/graphics/Cubemap.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: c1d3af963786d9509e5ee4eb1db710788e49a3d8
Parent1 SHA-1: 3609d2f95a96506ec9c7f5c49339da9936100707
Parent2 SHA-1: 55a47f14c05b3723a68ecc8ad37fdd0f55122ef4
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	protected void reload () {
		if (!isManaged()) throw new GdxRuntimeException("Tried to reload an unmanaged Cubemap");
		glHandle = Gdx.gl.glGenTexture();
		load(data);
	} ##FSTMerge## @Override
	protected void reload () {
		if (!isManaged()) throw new GdxRuntimeException("Tried to reload an unmanaged Cubemap");
		glHandle = createGLHandle();
		load(data);
	} ##FSTMerge## @Override
	protected void reload () {
		if (!isManaged()) throw new GdxRuntimeException("Tried to reload an unmanaged Cubemap");
		glHandle = createGLHandle();
		load(data);
	}
File path: /tmp/downloads/libgdx/revisions/rev_3609d_55a47/rev_3609d-55a47/gdx/src/com/badlogic/gdx/graphics/Cubemap.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: c1d3af963786d9509e5ee4eb1db710788e49a3d8
Parent1 SHA-1: 3609d2f95a96506ec9c7f5c49339da9936100707
Parent2 SHA-1: 55a47f14c05b3723a68ecc8ad37fdd0f55122ef4
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public static void invalidateAllCubemaps (Application app) {
		Array<Cubemap> managedCubemapArray = managedCubemaps.get(app);
		if (managedCubemapArray == null) return;

		if (assetManager == null) {
			for (int i = 0; i < managedCubemapArray.size; i++) {
				Cubemap cubemap = managedCubemapArray.get(i);
				cubemap.reload();
			}
		} else {
			// first we have to make sure the AssetManager isn't loading anything anymore,
			// otherwise the ref counting trick below wouldn't work (when a cubemap is
			// currently on the task stack of the manager.)
			assetManager.finishLoading();

			// next we go through each cubemap and reload either directly or via the
			// asset manager.
			Array<Cubemap> cubemaps = new Array<Cubemap>(managedCubemapArray);
			for (Cubemap cubemap : cubemaps) {
				String fileName = assetManager.getAssetFileName(cubemap);
				if (fileName == null) {
					cubemap.reload();
				} else {
					// get the ref count of the cubemap, then set it to 0 so we
					// can actually remove it from the assetmanager. Also set the
					// handle to zero, otherwise we might accidentially dispose
					// already reloaded cubemaps.
					final int refCount = assetManager.getReferenceCount(fileName);
					assetManager.setReferenceCount(fileName, 0);
					cubemap.glHandle = 0;

					// create the parameters, passing the reference to the cubemap as
					// well as a callback that sets the ref count.
					CubemapParameter params = new CubemapParameter();
					params.cubemapData = cubemap.getCubemapData();
					params.minFilter = cubemap.getMinFilter();
					params.magFilter = cubemap.getMagFilter();
					params.wrapU = cubemap.getUWrap();
					params.wrapV = cubemap.getVWrap();
					params.cubemap = cubemap; // special parameter which will ensure that the references stay the same.
					params.loadedCallback = new LoadedCallback() {
						@Override
						public void finishedLoading (AssetManager assetManager, String fileName, Class type) {
							assetManager.setReferenceCount(fileName, refCount);
						}
					};

					// unload the c, create a new gl handle then reload it.
					assetManager.unload(fileName);
					cubemap.glHandle = Gdx.gl.glGenTexture();
					assetManager.load(fileName, Cubemap.class, params);
				}
			}
			managedCubemapArray.clear();
			managedCubemapArray.addAll(cubemaps);
		}
	} ##FSTMerge## public static void invalidateAllCubemaps (Application app) {
		Array<Cubemap> managedCubemapArray = managedCubemaps.get(app);
		if (managedCubemapArray == null) return;

		if (assetManager == null) {
			for (int i = 0; i < managedCubemapArray.size; i++) {
				Cubemap cubemap = managedCubemapArray.get(i);
				cubemap.reload();
			}
		} else {
			// first we have to make sure the AssetManager isn't loading anything anymore,
			// otherwise the ref counting trick below wouldn't work (when a cubemap is
			// currently on the task stack of the manager.)
			assetManager.finishLoading();

			// next we go through each cubemap and reload either directly or via the
			// asset manager.
			Array<Cubemap> cubemaps = new Array<Cubemap>(managedCubemapArray);
			for (Cubemap cubemap : cubemaps) {
				String fileName = assetManager.getAssetFileName(cubemap);
				if (fileName == null) {
					cubemap.reload();
				} else {
					// get the ref count of the cubemap, then set it to 0 so we
					// can actually remove it from the assetmanager. Also set the
					// handle to zero, otherwise we might accidentially dispose
					// already reloaded cubemaps.
					final int refCount = assetManager.getReferenceCount(fileName);
					assetManager.setReferenceCount(fileName, 0);
					cubemap.glHandle = 0;

					// create the parameters, passing the reference to the cubemap as
					// well as a callback that sets the ref count.
					CubemapParameter params = new CubemapParameter();
					params.cubemapData = cubemap.getCubemapData();
					params.minFilter = cubemap.getMinFilter();
					params.magFilter = cubemap.getMagFilter();
					params.wrapU = cubemap.getUWrap();
					params.wrapV = cubemap.getVWrap();
					params.cubemap = cubemap; // special parameter which will ensure that the references stay the same.
					params.loadedCallback = new LoadedCallback() {
						@Override
						public void finishedLoading (AssetManager assetManager, String fileName, Class type) {
							assetManager.setReferenceCount(fileName, refCount);
						}
					};

					// unload the c, create a new gl handle then reload it.
					assetManager.unload(fileName);
					cubemap.glHandle = GLTexture.createGLHandle();
					assetManager.load(fileName, Cubemap.class, params);
				}
			}
			managedCubemapArray.clear();
			managedCubemapArray.addAll(cubemaps);
		}
	} ##FSTMerge## public static void invalidateAllCubemaps (Application app) {
		Array<Cubemap> managedCubemapArray = managedCubemaps.get(app);
		if (managedCubemapArray == null) return;

		if (assetManager == null) {
			for (int i = 0; i < managedCubemapArray.size; i++) {
				Cubemap cubemap = managedCubemapArray.get(i);
				cubemap.reload();
			}
		} else {
			// first we have to make sure the AssetManager isn't loading anything anymore,
			// otherwise the ref counting trick below wouldn't work (when a cubemap is
			// currently on the task stack of the manager.)
			assetManager.finishLoading();

			// next we go through each cubemap and reload either directly or via the
			// asset manager.
			Array<Cubemap> cubemaps = new Array<Cubemap>(managedCubemapArray);
			for (Cubemap cubemap : cubemaps) {
				String fileName = assetManager.getAssetFileName(cubemap);
				if (fileName == null) {
					cubemap.reload();
				} else {
					// get the ref count of the cubemap, then set it to 0 so we
					// can actually remove it from the assetmanager. Also set the
					// handle to zero, otherwise we might accidentially dispose
					// already reloaded cubemaps.
					final int refCount = assetManager.getReferenceCount(fileName);
					assetManager.setReferenceCount(fileName, 0);
					cubemap.glHandle = 0;

					// create the parameters, passing the reference to the cubemap as
					// well as a callback that sets the ref count.
					CubemapParameter params = new CubemapParameter();
					params.cubemapData = cubemap.getCubemapData();
					params.minFilter = cubemap.getMinFilter();
					params.magFilter = cubemap.getMagFilter();
					params.wrapU = cubemap.getUWrap();
					params.wrapV = cubemap.getVWrap();
					params.cubemap = cubemap; // special parameter which will ensure that the references stay the same.
					params.loadedCallback = new LoadedCallback() {
						@Override
						public void finishedLoading (AssetManager assetManager, String fileName, Class type) {
							assetManager.setReferenceCount(fileName, refCount);
						}
					};

					// unload the c, create a new gl handle then reload it.
					assetManager.unload(fileName);
					cubemap.glHandle = GLTexture.createGLHandle();
					assetManager.load(fileName, Cubemap.class, params);
				}
			}
			managedCubemapArray.clear();
			managedCubemapArray.addAll(cubemaps);
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_3609d_55a47/rev_3609d-55a47/gdx/src/com/badlogic/gdx/graphics/Cubemap.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: c1d3af963786d9509e5ee4eb1db710788e49a3d8
Parent1 SHA-1: 3609d2f95a96506ec9c7f5c49339da9936100707
Parent2 SHA-1: 55a47f14c05b3723a68ecc8ad37fdd0f55122ef4
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_3609d_55a47/rev_3609d-55a47/tests/gdx-tests/src/com/badlogic/gdx/tests/FreeTypeFontLoaderTest.java
############## CONFLICT ##############
Conflict type: ExtendsList
Merge Commit SHA-1: c1d3af963786d9509e5ee4eb1db710788e49a3d8
Parent1 SHA-1: 3609d2f95a96506ec9c7f5c49339da9936100707
Parent2 SHA-1: 55a47f14c05b3723a68ecc8ad37fdd0f55122ef4
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## extends GdxTest ##FSTMerge## extends GdxTest
File path: /tmp/downloads/libgdx/revisions/rev_3609d_55a47/rev_3609d-55a47/tests/gdx-tests/src/com/badlogic/gdx/tests/FreeTypeFontLoaderTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: c1d3af963786d9509e5ee4eb1db710788e49a3d8
Parent1 SHA-1: 3609d2f95a96506ec9c7f5c49339da9936100707
Parent2 SHA-1: 55a47f14c05b3723a68ecc8ad37fdd0f55122ef4
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## AssetManager manager; ##FSTMerge## AssetManager manager;
File path: /tmp/downloads/libgdx/revisions/rev_3609d_55a47/rev_3609d-55a47/tests/gdx-tests/src/com/badlogic/gdx/tests/FreeTypeFontLoaderTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: c1d3af963786d9509e5ee4eb1db710788e49a3d8
Parent1 SHA-1: 3609d2f95a96506ec9c7f5c49339da9936100707
Parent2 SHA-1: 55a47f14c05b3723a68ecc8ad37fdd0f55122ef4
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## SpriteBatch batch; ##FSTMerge## SpriteBatch batch;
File path: /tmp/downloads/libgdx/revisions/rev_3609d_55a47/rev_3609d-55a47/tests/gdx-tests/src/com/badlogic/gdx/tests/FreeTypeFontLoaderTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: c1d3af963786d9509e5ee4eb1db710788e49a3d8
Parent1 SHA-1: 3609d2f95a96506ec9c7f5c49339da9936100707
Parent2 SHA-1: 55a47f14c05b3723a68ecc8ad37fdd0f55122ef4
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void create () {
		manager = new AssetManager();
		
		// set the loaders for the generator and the fonts themselves
		FileHandleResolver resolver = new InternalFileHandleResolver();
		manager.setLoader(FreeTypeFontGenerator.class, new FreeTypeFontGeneratorLoader(resolver));
		manager.setLoader(BitmapFont.class, ".ttf", new FreetypeFontLoader(resolver));
		
		// load to fonts via the generator (implicitely done by the FreetypeFontLoader).
		// Note: you MUST specify a FreetypeFontGenerator defining the ttf font file name and the size
		// of the font to be generated. The names of the fonts are arbitrary and are not pointing
		// to a file on disk!
		FreeTypeFontLoaderParameter size1Params = new FreeTypeFontLoaderParameter();
		size1Params.fontFileName = "data/arial.ttf";
		size1Params.fontParameters.size = 10;
		manager.load("size10.ttf", BitmapFont.class, size1Params);
		
		FreeTypeFontLoaderParameter size2Params = new FreeTypeFontLoaderParameter();
		size2Params.fontFileName = "data/arial.ttf";
		size2Params.fontParameters.size = 20;
		manager.load("size20.ttf", BitmapFont.class, size2Params);
		
		// we also load a "normal" font generated via Hiero
		manager.load("data/default.fnt", BitmapFont.class);
		
		batch = new SpriteBatch();
	} ##FSTMerge## @Override
	public void create () {
		manager = new AssetManager();
		
		// set the loaders for the generator and the fonts themselves
		FileHandleResolver resolver = new InternalFileHandleResolver();
		manager.setLoader(FreeTypeFontGenerator.class, new FreeTypeFontGeneratorLoader(resolver));
		manager.setLoader(BitmapFont.class, ".ttf", new FreetypeFontLoader(resolver));
		
		// load to fonts via the generator (implicitely done by the FreetypeFontLoader).
		// Note: you MUST specify a FreetypeFontGenerator defining the ttf font file name and the size
		// of the font to be generated. The names of the fonts are arbitrary and are not pointing
		// to a file on disk!
		FreeTypeFontLoaderParameter size1Params = new FreeTypeFontLoaderParameter();
		size1Params.fontFileName = "data/arial.ttf";
		size1Params.fontParameters.size = 10;
		manager.load("size10.ttf", BitmapFont.class, size1Params);
		
		FreeTypeFontLoaderParameter size2Params = new FreeTypeFontLoaderParameter();
		size2Params.fontFileName = "data/arial.ttf";
		size2Params.fontParameters.size = 20;
		manager.load("size20.ttf", BitmapFont.class, size2Params);
		
		// we also load a "normal" font generated via Hiero
		manager.load("data/default.fnt", BitmapFont.class);
		
		batch = new SpriteBatch();
	}
File path: /tmp/downloads/libgdx/revisions/rev_3609d_55a47/rev_3609d-55a47/tests/gdx-tests/src/com/badlogic/gdx/tests/FreeTypeFontLoaderTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: c1d3af963786d9509e5ee4eb1db710788e49a3d8
Parent1 SHA-1: 3609d2f95a96506ec9c7f5c49339da9936100707
Parent2 SHA-1: 55a47f14c05b3723a68ecc8ad37fdd0f55122ef4
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void render () {
		Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);
		if(manager.update() && manager.isLoaded("size10.ttf")) {
			batch.begin();
			manager.get("size10.ttf", BitmapFont.class).draw(batch, "First font!", 20, 20);
			manager.get("size20.ttf", BitmapFont.class).draw(batch, "Second font!", 20, 50);
			manager.get("data/default.fnt", BitmapFont.class).draw(batch, "Default font!", 20, 100);
			batch.end();
		}
		
		if(Gdx.input.justTouched() && manager.isLoaded("size10.ttf")) {
			// unload all the things and check if they really get disposed properly
			manager.unload("size10.ttf");
			manager.finishLoading();
			if(!manager.isLoaded("size20.ttf")) throw new RuntimeException("broken");
			if(!manager.isLoaded("data/arial.ttf")) throw new RuntimeException("broken");
			
			manager.unload("size20.ttf");
			manager.finishLoading();
			if(manager.isLoaded("size20.ttf")) throw new RuntimeException("broken");
			if(manager.isLoaded("data/arial.ttf")) throw new RuntimeException("broken");
		}
	} ##FSTMerge## @Override
	public void render () {
		Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);
		if(manager.update() && manager.isLoaded("size10.ttf")) {
			batch.begin();
			manager.get("size10.ttf", BitmapFont.class).draw(batch, "First font!", 20, 20);
			manager.get("size20.ttf", BitmapFont.class).draw(batch, "Second font!", 20, 50);
			manager.get("data/default.fnt", BitmapFont.class).draw(batch, "Default font!", 20, 100);
			batch.end();
		}
		
		if(Gdx.input.justTouched() && manager.isLoaded("size10.ttf")) {
			// unload all the things and check if they really get disposed properly
			manager.unload("size10.ttf");
			manager.finishLoading();
			if(!manager.isLoaded("size20.ttf")) throw new RuntimeException("broken");
			if(!manager.isLoaded("data/arial.ttf")) throw new RuntimeException("broken");
			
			manager.unload("size20.ttf");
			manager.finishLoading();
			if(manager.isLoaded("size20.ttf")) throw new RuntimeException("broken");
			if(manager.isLoaded("data/arial.ttf")) throw new RuntimeException("broken");
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_3609d_55a47/rev_3609d-55a47/tests/gdx-tests/src/com/badlogic/gdx/tests/FreeTypeFontLoaderTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: c1d3af963786d9509e5ee4eb1db710788e49a3d8
Parent1 SHA-1: 3609d2f95a96506ec9c7f5c49339da9936100707
Parent2 SHA-1: 55a47f14c05b3723a68ecc8ad37fdd0f55122ef4
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void dispose () {
		manager.dispose();
		batch.dispose();
	} ##FSTMerge## @Override
	public void dispose () {
		manager.dispose();
		batch.dispose();
	}
File path: /tmp/downloads/libgdx/revisions/rev_3609d_55a47/rev_3609d-55a47/tests/gdx-tests/src/com/badlogic/gdx/tests/FreeTypeFontLoaderTest.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: c1d3af963786d9509e5ee4eb1db710788e49a3d8
Parent1 SHA-1: 3609d2f95a96506ec9c7f5c49339da9936100707
Parent2 SHA-1: 55a47f14c05b3723a68ecc8ad37fdd0f55122ef4
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_3609d_55a47/rev_3609d-55a47/tests/gdx-tests/src/com/badlogic/gdx/tests/FreeTypeDisposeTest.java
############## CONFLICT ##############
Conflict type: ExtendsList
Merge Commit SHA-1: c1d3af963786d9509e5ee4eb1db710788e49a3d8
Parent1 SHA-1: 3609d2f95a96506ec9c7f5c49339da9936100707
Parent2 SHA-1: 55a47f14c05b3723a68ecc8ad37fdd0f55122ef4
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## extends GdxTest ##FSTMerge## extends GdxTest
File path: /tmp/downloads/libgdx/revisions/rev_3609d_55a47/rev_3609d-55a47/tests/gdx-tests/src/com/badlogic/gdx/tests/FreeTypeDisposeTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: c1d3af963786d9509e5ee4eb1db710788e49a3d8
Parent1 SHA-1: 3609d2f95a96506ec9c7f5c49339da9936100707
Parent2 SHA-1: 55a47f14c05b3723a68ecc8ad37fdd0f55122ef4
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## BitmapFont font; ##FSTMerge## BitmapFont font;
File path: /tmp/downloads/libgdx/revisions/rev_3609d_55a47/rev_3609d-55a47/tests/gdx-tests/src/com/badlogic/gdx/tests/FreeTypeDisposeTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: c1d3af963786d9509e5ee4eb1db710788e49a3d8
Parent1 SHA-1: 3609d2f95a96506ec9c7f5c49339da9936100707
Parent2 SHA-1: 55a47f14c05b3723a68ecc8ad37fdd0f55122ef4
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void create () {
		super.create();
	} ##FSTMerge## @Override
	public void create () {
		super.create();
	}
File path: /tmp/downloads/libgdx/revisions/rev_3609d_55a47/rev_3609d-55a47/tests/gdx-tests/src/com/badlogic/gdx/tests/FreeTypeDisposeTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: c1d3af963786d9509e5ee4eb1db710788e49a3d8
Parent1 SHA-1: 3609d2f95a96506ec9c7f5c49339da9936100707
Parent2 SHA-1: 55a47f14c05b3723a68ecc8ad37fdd0f55122ef4
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void render () {
		if (Gdx.input.justTouched()) {
			for (int i = 0; i < 10; i++) {
				if (font != null) {
					font.dispose();
				}
				FileHandle fontFile = Gdx.files.internal("data/arial.ttf");
				FreeTypeFontGenerator generator = new FreeTypeFontGenerator(fontFile);

				FreeTypeFontParameter parameter = new FreeTypeFontParameter();
				parameter.size = 15;

				font = generator.generateFont(parameter);
				generator.dispose();
			}
			for (int i = 0; i < 10; i++)
				System.gc();
			Gdx.app.log("FreeTypeDisposeTest", "generated 10 fonts");
			Gdx.app.log("FreeTypeDisposeTest", Gdx.app.getJavaHeap() + ", " + Gdx.app.getNativeHeap());
		}
	} ##FSTMerge## public void render () {
		if (Gdx.input.justTouched()) {
			for (int i = 0; i < 10; i++) {
				if (font != null) {
					font.dispose();
				}
				FileHandle fontFile = Gdx.files.internal("data/arial.ttf");
				FreeTypeFontGenerator generator = new FreeTypeFontGenerator(fontFile);

				FreeTypeFontParameter parameter = new FreeTypeFontParameter();
				parameter.size = 15;

				font = generator.generateFont(parameter);
				generator.dispose();
			}
			for (int i = 0; i < 10; i++)
				System.gc();
			Gdx.app.log("FreeTypeDisposeTest", "generated 10 fonts");
			Gdx.app.log("FreeTypeDisposeTest", Gdx.app.getJavaHeap() + ", " + Gdx.app.getNativeHeap());
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_3609d_55a47/rev_3609d-55a47/tests/gdx-tests/src/com/badlogic/gdx/tests/FreeTypeDisposeTest.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: c1d3af963786d9509e5ee4eb1db710788e49a3d8
Parent1 SHA-1: 3609d2f95a96506ec9c7f5c49339da9936100707
Parent2 SHA-1: 55a47f14c05b3723a68ecc8ad37fdd0f55122ef4
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_3609d_55a47/rev_3609d-55a47/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/Align.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: c1d3af963786d9509e5ee4eb1db710788e49a3d8
Parent1 SHA-1: 3609d2f95a96506ec9c7f5c49339da9936100707
Parent2 SHA-1: 55a47f14c05b3723a68ecc8ad37fdd0f55122ef4
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static public final int center = 1 << 0; ##FSTMerge## static public final int center = 1 << 0;
File path: /tmp/downloads/libgdx/revisions/rev_3609d_55a47/rev_3609d-55a47/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/Align.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: c1d3af963786d9509e5ee4eb1db710788e49a3d8
Parent1 SHA-1: 3609d2f95a96506ec9c7f5c49339da9936100707
Parent2 SHA-1: 55a47f14c05b3723a68ecc8ad37fdd0f55122ef4
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static public final int top = 1 << 1; ##FSTMerge## static public final int top = 1 << 1;
File path: /tmp/downloads/libgdx/revisions/rev_3609d_55a47/rev_3609d-55a47/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/Align.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: c1d3af963786d9509e5ee4eb1db710788e49a3d8
Parent1 SHA-1: 3609d2f95a96506ec9c7f5c49339da9936100707
Parent2 SHA-1: 55a47f14c05b3723a68ecc8ad37fdd0f55122ef4
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static public final int bottom = 1 << 2; ##FSTMerge## static public final int bottom = 1 << 2;
File path: /tmp/downloads/libgdx/revisions/rev_3609d_55a47/rev_3609d-55a47/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/Align.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: c1d3af963786d9509e5ee4eb1db710788e49a3d8
Parent1 SHA-1: 3609d2f95a96506ec9c7f5c49339da9936100707
Parent2 SHA-1: 55a47f14c05b3723a68ecc8ad37fdd0f55122ef4
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static public final int left = 1 << 3; ##FSTMerge## static public final int left = 1 << 3;
File path: /tmp/downloads/libgdx/revisions/rev_3609d_55a47/rev_3609d-55a47/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/Align.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: c1d3af963786d9509e5ee4eb1db710788e49a3d8
Parent1 SHA-1: 3609d2f95a96506ec9c7f5c49339da9936100707
Parent2 SHA-1: 55a47f14c05b3723a68ecc8ad37fdd0f55122ef4
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static public final int right = 1 << 4; ##FSTMerge## static public final int right = 1 << 4;
File path: /tmp/downloads/libgdx/revisions/rev_3609d_55a47/rev_3609d-55a47/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/Align.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: c1d3af963786d9509e5ee4eb1db710788e49a3d8
Parent1 SHA-1: 3609d2f95a96506ec9c7f5c49339da9936100707
Parent2 SHA-1: 55a47f14c05b3723a68ecc8ad37fdd0f55122ef4
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static public final int topLeft = top | left; ##FSTMerge## static public final int topLeft = top | left;
File path: /tmp/downloads/libgdx/revisions/rev_3609d_55a47/rev_3609d-55a47/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/Align.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: c1d3af963786d9509e5ee4eb1db710788e49a3d8
Parent1 SHA-1: 3609d2f95a96506ec9c7f5c49339da9936100707
Parent2 SHA-1: 55a47f14c05b3723a68ecc8ad37fdd0f55122ef4
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static public final int topRight = top | right; ##FSTMerge## static public final int topRight = top | right;
File path: /tmp/downloads/libgdx/revisions/rev_3609d_55a47/rev_3609d-55a47/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/Align.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: c1d3af963786d9509e5ee4eb1db710788e49a3d8
Parent1 SHA-1: 3609d2f95a96506ec9c7f5c49339da9936100707
Parent2 SHA-1: 55a47f14c05b3723a68ecc8ad37fdd0f55122ef4
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static public final int bottomLeft = bottom | left; ##FSTMerge## static public final int bottomLeft = bottom | left;
File path: /tmp/downloads/libgdx/revisions/rev_3609d_55a47/rev_3609d-55a47/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/Align.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: c1d3af963786d9509e5ee4eb1db710788e49a3d8
Parent1 SHA-1: 3609d2f95a96506ec9c7f5c49339da9936100707
Parent2 SHA-1: 55a47f14c05b3723a68ecc8ad37fdd0f55122ef4
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static public final int bottomRight = bottom | right; ##FSTMerge## static public final int bottomRight = bottom | right;
File path: /tmp/downloads/libgdx/revisions/rev_3609d_55a47/rev_3609d-55a47/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/Align.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: c1d3af963786d9509e5ee4eb1db710788e49a3d8
Parent1 SHA-1: 3609d2f95a96506ec9c7f5c49339da9936100707
Parent2 SHA-1: 55a47f14c05b3723a68ecc8ad37fdd0f55122ef4
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static final Color tempColor = new Color(); ##FSTMerge## private static final Color tempColor = new Color();
File path: /tmp/downloads/libgdx/revisions/rev_3609d_55a47/rev_3609d-55a47/gdx/src/com/badlogic/gdx/graphics/g2d/TextMarkup.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: c1d3af963786d9509e5ee4eb1db710788e49a3d8
Parent1 SHA-1: 3609d2f95a96506ec9c7f5c49339da9936100707
Parent2 SHA-1: 55a47f14c05b3723a68ecc8ad37fdd0f55122ef4
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static final StringBuilder tempColorBuffer = new StringBuilder(); ##FSTMerge## private static final StringBuilder tempColorBuffer = new StringBuilder();
File path: /tmp/downloads/libgdx/revisions/rev_3609d_55a47/rev_3609d-55a47/gdx/src/com/badlogic/gdx/graphics/g2d/TextMarkup.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: c1d3af963786d9509e5ee4eb1db710788e49a3d8
Parent1 SHA-1: 3609d2f95a96506ec9c7f5c49339da9936100707
Parent2 SHA-1: 55a47f14c05b3723a68ecc8ad37fdd0f55122ef4
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int parseColorTag (CharSequence str, int nomarkupStart, int start, int end) {
		if (start < end) {
			final Color hexColor = tempColor;
			if (str.charAt(start) == '#') {
				// Parse hex color RRGGBBAA where AA is optional and defaults to 0xFF if less than 6 chars are used
				int colorInt = 0;
				for (int i = start + 1; i < end; i++) {
					char ch = str.charAt(i);
					if (ch == ']') {
						if (i < start + 2 || i > start + 9) return -1; // Illegal number of hex digits
						if (i <= start + 7) { // RRGGBB
							Color.rgb888ToColor(hexColor, colorInt);
							hexColor.a = 1f;
						} else { // RRGGBBAA
							Color.rgba8888ToColor(hexColor, colorInt);
						}
						if (nomarkupStart >= 0) beginChunk(hexColor, nomarkupStart);
						return i - start;
					}
					if (ch >= '0' && ch <= '9')
						colorInt = colorInt * 16 + (ch - '0');
					else if (ch >= 'a' && ch <= 'f')
						colorInt = colorInt * 16 + (ch - ('a' - 10));
					else if (ch >= 'A' && ch <= 'F')
						colorInt = colorInt * 16 + (ch - ('A' - 10));
					else
						return -1; // Unexpected character in hex color
				}
			} else {
				// Parse named color
				tempColorBuffer.setLength(0);
				for (int i = start; i < end; i++) {
					char ch = str.charAt(i);
					if (ch == ']') {
						if (i == start) { // end tag []
							if (nomarkupStart >= 0) endChunk(nomarkupStart);
						} else {
							String colorString = tempColorBuffer.toString();
							Color newColor = Colors.get(colorString);
							if (newColor == null) return -1; // Unknown color
							if (nomarkupStart >= 0) beginChunk(newColor, nomarkupStart);
						}
						return i - start;
					} else {
						tempColorBuffer.append(ch);
					}
				}
			}
		}
		return -1; // Unclosed color tag
	} ##FSTMerge## public int parseColorTag (CharSequence str, int nomarkupStart, int start, int end) {
		if (start < end) {
			final Color hexColor = tempColor;
			if (str.charAt(start) == '#') {
				// Parse hex color RRGGBBAA where AA is optional and defaults to 0xFF if less than 6 chars are used
				int colorInt = 0;
				for (int i = start + 1; i < end; i++) {
					char ch = str.charAt(i);
					if (ch == ']') {
						if (i < start + 2 || i > start + 9) return -1; // Illegal number of hex digits
						if (i <= start + 7) { // RRGGBB
							Color.rgb888ToColor(hexColor, colorInt);
							hexColor.a = 1f;
						} else { // RRGGBBAA
							Color.rgba8888ToColor(hexColor, colorInt);
						}
						if (nomarkupStart >= 0) beginChunk(hexColor, nomarkupStart);
						return i - start;
					}
					if (ch >= '0' && ch <= '9')
						colorInt = colorInt * 16 + (ch - '0');
					else if (ch >= 'a' && ch <= 'f')
						colorInt = colorInt * 16 + (ch - ('a' - 10));
					else if (ch >= 'A' && ch <= 'F')
						colorInt = colorInt * 16 + (ch - ('A' - 10));
					else
						return -1; // Unexpected character in hex color
				}
			} else {
				// Parse named color
				tempColorBuffer.setLength(0);
				for (int i = start; i < end; i++) {
					char ch = str.charAt(i);
					if (ch == ']') {
						if (i == start) { // end tag []
							if (nomarkupStart >= 0) endChunk(nomarkupStart);
						} else {
							String colorString = tempColorBuffer.toString();
							Color newColor = Colors.get(colorString);
							if (newColor == null) return -1; // Unknown color
							if (nomarkupStart >= 0) beginChunk(newColor, nomarkupStart);
						}
						return i - start;
					} else {
						tempColorBuffer.append(ch);
					}
				}
			}
		}
		return -1; // Unclosed color tag
	}
File path: /tmp/downloads/libgdx/revisions/rev_3609d_55a47/rev_3609d-55a47/gdx/src/com/badlogic/gdx/graphics/g2d/TextMarkup.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: c1d3af963786d9509e5ee4eb1db710788e49a3d8
Parent1 SHA-1: 3609d2f95a96506ec9c7f5c49339da9936100707
Parent2 SHA-1: 55a47f14c05b3723a68ecc8ad37fdd0f55122ef4
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static Pool<ColorChunk> colorChunkPool; ##FSTMerge## private static Pool<ColorChunk> colorChunkPool;
File path: /tmp/downloads/libgdx/revisions/rev_3609d_55a47/rev_3609d-55a47/gdx/src/com/badlogic/gdx/graphics/g2d/TextMarkup.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: c1d3af963786d9509e5ee4eb1db710788e49a3d8
Parent1 SHA-1: 3609d2f95a96506ec9c7f5c49339da9936100707
Parent2 SHA-1: 55a47f14c05b3723a68ecc8ad37fdd0f55122ef4
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static Application app = null; ##FSTMerge## private static Application app = null;
File path: /tmp/downloads/libgdx/revisions/rev_3609d_55a47/rev_3609d-55a47/gdx/src/com/badlogic/gdx/graphics/g2d/TextMarkup.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: c1d3af963786d9509e5ee4eb1db710788e49a3d8
Parent1 SHA-1: 3609d2f95a96506ec9c7f5c49339da9936100707
Parent2 SHA-1: 55a47f14c05b3723a68ecc8ad37fdd0f55122ef4
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Array<ColorChunk> colorChunks = new Array<ColorChunk>(); ##FSTMerge## private Array<ColorChunk> colorChunks = new Array<ColorChunk>();
File path: /tmp/downloads/libgdx/revisions/rev_3609d_55a47/rev_3609d-55a47/gdx/src/com/badlogic/gdx/graphics/g2d/TextMarkup.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: c1d3af963786d9509e5ee4eb1db710788e49a3d8
Parent1 SHA-1: 3609d2f95a96506ec9c7f5c49339da9936100707
Parent2 SHA-1: 55a47f14c05b3723a68ecc8ad37fdd0f55122ef4
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Array<Color> currentColorStack = new Array<Color>(); ##FSTMerge## private Array<Color> currentColorStack = new Array<Color>();
File path: /tmp/downloads/libgdx/revisions/rev_3609d_55a47/rev_3609d-55a47/gdx/src/com/badlogic/gdx/graphics/g2d/TextMarkup.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: c1d3af963786d9509e5ee4eb1db710788e49a3d8
Parent1 SHA-1: 3609d2f95a96506ec9c7f5c49339da9936100707
Parent2 SHA-1: 55a47f14c05b3723a68ecc8ad37fdd0f55122ef4
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Color lastColor = Color.WHITE; ##FSTMerge## private Color lastColor = Color.WHITE;
File path: /tmp/downloads/libgdx/revisions/rev_3609d_55a47/rev_3609d-55a47/gdx/src/com/badlogic/gdx/graphics/g2d/TextMarkup.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: c1d3af963786d9509e5ee4eb1db710788e49a3d8
Parent1 SHA-1: 3609d2f95a96506ec9c7f5c49339da9936100707
Parent2 SHA-1: 55a47f14c05b3723a68ecc8ad37fdd0f55122ef4
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Color defaultColor = Color.WHITE; ##FSTMerge## private Color defaultColor = Color.WHITE;
File path: /tmp/downloads/libgdx/revisions/rev_3609d_55a47/rev_3609d-55a47/gdx/src/com/badlogic/gdx/graphics/g2d/TextMarkup.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: c1d3af963786d9509e5ee4eb1db710788e49a3d8
Parent1 SHA-1: 3609d2f95a96506ec9c7f5c49339da9936100707
Parent2 SHA-1: 55a47f14c05b3723a68ecc8ad37fdd0f55122ef4
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public TextMarkup () {
		if (Gdx.app != app) {
			colorChunkPool = new Pool<ColorChunk>(32) {
				protected ColorChunk newObject () {
					return new ColorChunk();
				}
			};
			app = Gdx.app;
		}
	} ##FSTMerge## public TextMarkup () {
		if (Gdx.app != app) {
			colorChunkPool = new Pool<ColorChunk>(32) {
				protected ColorChunk newObject () {
					return new ColorChunk();
				}
			};
			app = Gdx.app;
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_3609d_55a47/rev_3609d-55a47/gdx/src/com/badlogic/gdx/graphics/g2d/TextMarkup.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: c1d3af963786d9509e5ee4eb1db710788e49a3d8
Parent1 SHA-1: 3609d2f95a96506ec9c7f5c49339da9936100707
Parent2 SHA-1: 55a47f14c05b3723a68ecc8ad37fdd0f55122ef4
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void beginChunk (Color color, int start) {
		ColorChunk newChunk = colorChunkPool.obtain();
		newChunk.color.set(color);
		newChunk.start = start;
		colorChunks.add(newChunk);
		currentColorStack.add(lastColor);
		lastColor = newChunk.color;
	} ##FSTMerge## public void beginChunk (Color color, int start) {
		ColorChunk newChunk = colorChunkPool.obtain();
		newChunk.color.set(color);
		newChunk.start = start;
		colorChunks.add(newChunk);
		currentColorStack.add(lastColor);
		lastColor = newChunk.color;
	}
File path: /tmp/downloads/libgdx/revisions/rev_3609d_55a47/rev_3609d-55a47/gdx/src/com/badlogic/gdx/graphics/g2d/TextMarkup.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: c1d3af963786d9509e5ee4eb1db710788e49a3d8
Parent1 SHA-1: 3609d2f95a96506ec9c7f5c49339da9936100707
Parent2 SHA-1: 55a47f14c05b3723a68ecc8ad37fdd0f55122ef4
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void endChunk (int start) {
		if (currentColorStack.size > 0) {
			lastColor = currentColorStack.pop();
			ColorChunk newChunk = colorChunkPool.obtain();
			newChunk.color.set(lastColor);
			newChunk.start = start;
			colorChunks.add(newChunk);
		}
	} ##FSTMerge## public void endChunk (int start) {
		if (currentColorStack.size > 0) {
			lastColor = currentColorStack.pop();
			ColorChunk newChunk = colorChunkPool.obtain();
			newChunk.color.set(lastColor);
			newChunk.start = start;
			colorChunks.add(newChunk);
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_3609d_55a47/rev_3609d-55a47/gdx/src/com/badlogic/gdx/graphics/g2d/TextMarkup.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: c1d3af963786d9509e5ee4eb1db710788e49a3d8
Parent1 SHA-1: 3609d2f95a96506ec9c7f5c49339da9936100707
Parent2 SHA-1: 55a47f14c05b3723a68ecc8ad37fdd0f55122ef4
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void tint (BitmapFontCache cache, Color tint) {
		int current = 0;
		float floatColor = tempColor.set(defaultColor).mul(tint).toFloatBits();
		for (ColorChunk chunk : colorChunks) {
			int next = chunk.start;
			if (current < next) {
				cache.setColors(floatColor, current, next);
				current = next;
			}
			floatColor = tempColor.set(chunk.color).mul(tint).toFloatBits();
		}
		int charsCount = cache.getCharsCount();
		if (current < charsCount) {
			cache.setColors(floatColor, current, charsCount);
		}
	} ##FSTMerge## public void tint (BitmapFontCache cache, Color tint) {
		int current = 0;
		float floatColor = tempColor.set(defaultColor).mul(tint).toFloatBits();
		for (ColorChunk chunk : colorChunks) {
			int next = chunk.start;
			if (current < next) {
				cache.setColors(floatColor, current, next);
				current = next;
			}
			floatColor = tempColor.set(chunk.color).mul(tint).toFloatBits();
		}
		int charsCount = cache.getCharsCount();
		if (current < charsCount) {
			cache.setColors(floatColor, current, charsCount);
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_3609d_55a47/rev_3609d-55a47/gdx/src/com/badlogic/gdx/graphics/g2d/TextMarkup.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: c1d3af963786d9509e5ee4eb1db710788e49a3d8
Parent1 SHA-1: 3609d2f95a96506ec9c7f5c49339da9936100707
Parent2 SHA-1: 55a47f14c05b3723a68ecc8ad37fdd0f55122ef4
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void clear () {
		final int size = colorChunks.size;
		for (int i = 0; i < size; i++) {
			colorChunkPool.free(colorChunks.get(i));
			colorChunks.set(i, null);
		}
		colorChunks.size = 0;
		currentColorStack.clear();
		setDefaultChunk(defaultColor, 0);
	} ##FSTMerge## public void clear () {
		final int size = colorChunks.size;
		for (int i = 0; i < size; i++) {
			colorChunkPool.free(colorChunks.get(i));
			colorChunks.set(i, null);
		}
		colorChunks.size = 0;
		currentColorStack.clear();
		setDefaultChunk(defaultColor, 0);
	}
File path: /tmp/downloads/libgdx/revisions/rev_3609d_55a47/rev_3609d-55a47/gdx/src/com/badlogic/gdx/graphics/g2d/TextMarkup.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: c1d3af963786d9509e5ee4eb1db710788e49a3d8
Parent1 SHA-1: 3609d2f95a96506ec9c7f5c49339da9936100707
Parent2 SHA-1: 55a47f14c05b3723a68ecc8ad37fdd0f55122ef4
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Color getLastColor () {
		return lastColor;
	} ##FSTMerge## public Color getLastColor () {
		return lastColor;
	}
File path: /tmp/downloads/libgdx/revisions/rev_3609d_55a47/rev_3609d-55a47/gdx/src/com/badlogic/gdx/graphics/g2d/TextMarkup.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: c1d3af963786d9509e5ee4eb1db710788e49a3d8
Parent1 SHA-1: 3609d2f95a96506ec9c7f5c49339da9936100707
Parent2 SHA-1: 55a47f14c05b3723a68ecc8ad37fdd0f55122ef4
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void setDefaultColor (Color defaultColor) {
		if (currentColorStack.size == 0) {
			this.defaultColor = defaultColor;
			this.lastColor = defaultColor;
		}
	} ##FSTMerge## private void setDefaultColor (Color defaultColor) {
		if (currentColorStack.size == 0) {
			this.defaultColor = defaultColor;
			this.lastColor = defaultColor;
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_3609d_55a47/rev_3609d-55a47/gdx/src/com/badlogic/gdx/graphics/g2d/TextMarkup.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: c1d3af963786d9509e5ee4eb1db710788e49a3d8
Parent1 SHA-1: 3609d2f95a96506ec9c7f5c49339da9936100707
Parent2 SHA-1: 55a47f14c05b3723a68ecc8ad37fdd0f55122ef4
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void setDefaultChunk (float color, int start) {
		int abgr = NumberUtils.floatToIntColor(color);
		setDefaultChunk(abgr, start);
	} ##FSTMerge## public void setDefaultChunk (float color, int start) {
		int abgr = NumberUtils.floatToIntColor(color);
		setDefaultChunk(abgr, start);
	}
File path: /tmp/downloads/libgdx/revisions/rev_3609d_55a47/rev_3609d-55a47/gdx/src/com/badlogic/gdx/graphics/g2d/TextMarkup.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: c1d3af963786d9509e5ee4eb1db710788e49a3d8
Parent1 SHA-1: 3609d2f95a96506ec9c7f5c49339da9936100707
Parent2 SHA-1: 55a47f14c05b3723a68ecc8ad37fdd0f55122ef4
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void setDefaultChunk (int abgr, int start) {
		ColorChunk newChunk = colorChunkPool.obtain();
		Color color = newChunk.color;
		color.r = (abgr & 0xff) / 255f;
		color.g = ((abgr >>> 8) & 0xff) / 255f;
		color.b = ((abgr >>> 16) & 0xff) / 255f;
		color.a = ((abgr >>> 24) & 0xff) / 255f;
		newChunk.start = start;
		colorChunks.add(newChunk);
		setDefaultColor(newChunk.color);
	} ##FSTMerge## public void setDefaultChunk (int abgr, int start) {
		ColorChunk newChunk = colorChunkPool.obtain();
		Color color = newChunk.color;
		color.r = (abgr & 0xff) / 255f;
		color.g = ((abgr >>> 8) & 0xff) / 255f;
		color.b = ((abgr >>> 16) & 0xff) / 255f;
		color.a = ((abgr >>> 24) & 0xff) / 255f;
		newChunk.start = start;
		colorChunks.add(newChunk);
		setDefaultColor(newChunk.color);
	}
File path: /tmp/downloads/libgdx/revisions/rev_3609d_55a47/rev_3609d-55a47/gdx/src/com/badlogic/gdx/graphics/g2d/TextMarkup.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: c1d3af963786d9509e5ee4eb1db710788e49a3d8
Parent1 SHA-1: 3609d2f95a96506ec9c7f5c49339da9936100707
Parent2 SHA-1: 55a47f14c05b3723a68ecc8ad37fdd0f55122ef4
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void setDefaultChunk (Color color, int start) {
		ColorChunk newChunk = colorChunkPool.obtain();
		newChunk.color.set(color);
		newChunk.start = start;
		colorChunks.add(newChunk);
		setDefaultColor(newChunk.color);
	} ##FSTMerge## public void setDefaultChunk (Color color, int start) {
		ColorChunk newChunk = colorChunkPool.obtain();
		newChunk.color.set(color);
		newChunk.start = start;
		colorChunks.add(newChunk);
		setDefaultColor(newChunk.color);
	}
File path: /tmp/downloads/libgdx/revisions/rev_3609d_55a47/rev_3609d-55a47/gdx/src/com/badlogic/gdx/graphics/g2d/TextMarkup.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: c1d3af963786d9509e5ee4eb1db710788e49a3d8
Parent1 SHA-1: 3609d2f95a96506ec9c7f5c49339da9936100707
Parent2 SHA-1: 55a47f14c05b3723a68ecc8ad37fdd0f55122ef4
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static ##FSTMerge## public static
File path: /tmp/downloads/libgdx/revisions/rev_3609d_55a47/rev_3609d-55a47/gdx/src/com/badlogic/gdx/graphics/g2d/TextMarkup.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: c1d3af963786d9509e5ee4eb1db710788e49a3d8
Parent1 SHA-1: 3609d2f95a96506ec9c7f5c49339da9936100707
Parent2 SHA-1: 55a47f14c05b3723a68ecc8ad37fdd0f55122ef4
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int start; ##FSTMerge## public int start;
File path: /tmp/downloads/libgdx/revisions/rev_3609d_55a47/rev_3609d-55a47/gdx/src/com/badlogic/gdx/graphics/g2d/TextMarkup.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: c1d3af963786d9509e5ee4eb1db710788e49a3d8
Parent1 SHA-1: 3609d2f95a96506ec9c7f5c49339da9936100707
Parent2 SHA-1: 55a47f14c05b3723a68ecc8ad37fdd0f55122ef4
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final Color color = new Color(); ##FSTMerge## public final Color color = new Color();
File path: /tmp/downloads/libgdx/revisions/rev_3609d_55a47/rev_3609d-55a47/gdx/src/com/badlogic/gdx/graphics/g2d/TextMarkup.java

==================================================================================================================
Revision: /tmp/downloads/libgdx/revisions/rev_18d9d_21ee9/rev_18d9d-21ee9.revisions
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 89038f5540616821842fdef22878a2952e6779a1
Parent1 SHA-1: 18d9d432d5c41944fb336aba407159cac1240f4d
Parent2 SHA-1: 21ee9e629f2fefa6a8483865d9b43687aada66f3
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public IndexBufferObject (boolean isStatic, int maxIndices) {

		empty = maxIndices == 0;
		if (empty) {
			maxIndices = 1; // avoid allocating a zero-sized buffer because of bug in Android's ART
		}

		byteBuffer = BufferUtils.newUnsafeByteBuffer(maxIndices * 2);
		isDirect = true;

		buffer = byteBuffer.asShortBuffer();
		buffer.flip();
		byteBuffer.flip();
		bufferHandle = createBufferObject();
		usage = isStatic ? GL20.GL_STATIC_DRAW : GL20.GL_DYNAMIC_DRAW;
	} ##FSTMerge## public IndexBufferObject (boolean isStatic, int maxIndices) {
		byteBuffer = BufferUtils.newUnsafeByteBuffer(maxIndices * 2);
		isDirect = true;

		buffer = byteBuffer.asShortBuffer();
		buffer.flip();
		byteBuffer.flip();
		bufferHandle = createBufferObject();
		usage = isStatic ? GL20.GL_STATIC_DRAW : GL20.GL_DYNAMIC_DRAW;
	} ##FSTMerge## public IndexBufferObject (boolean isStatic, int maxIndices) {
		byteBuffer = BufferUtils.newUnsafeByteBuffer(maxIndices * 2);
		isDirect = true;

		buffer = byteBuffer.asShortBuffer();
		buffer.flip();
		byteBuffer.flip();
		bufferHandle = Gdx.gl20.glGenBuffer();
		usage = isStatic ? GL20.GL_STATIC_DRAW : GL20.GL_DYNAMIC_DRAW;
	}
File path: /tmp/downloads/libgdx/revisions/rev_18d9d_21ee9/rev_18d9d-21ee9/gdx/src/com/badlogic/gdx/graphics/glutils/IndexBufferObject.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 89038f5540616821842fdef22878a2952e6779a1
Parent1 SHA-1: 18d9d432d5c41944fb336aba407159cac1240f4d
Parent2 SHA-1: 21ee9e629f2fefa6a8483865d9b43687aada66f3
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public IndexBufferObject (int maxIndices) {
		this(true, maxIndices);
	} ##FSTMerge## public IndexBufferObject (int maxIndices) {
		byteBuffer = BufferUtils.newUnsafeByteBuffer(maxIndices * 2);
		this.isDirect = true;

		buffer = byteBuffer.asShortBuffer();
		buffer.flip();
		byteBuffer.flip();
		bufferHandle = createBufferObject();
		usage = GL20.GL_STATIC_DRAW;
	} ##FSTMerge## public IndexBufferObject (int maxIndices) {
		byteBuffer = BufferUtils.newUnsafeByteBuffer(maxIndices * 2);
		this.isDirect = true;

		buffer = byteBuffer.asShortBuffer();
		buffer.flip();
		byteBuffer.flip();
		bufferHandle = Gdx.gl20.glGenBuffer();
		usage = GL20.GL_STATIC_DRAW;
	}
File path: /tmp/downloads/libgdx/revisions/rev_18d9d_21ee9/rev_18d9d-21ee9/gdx/src/com/badlogic/gdx/graphics/glutils/IndexBufferObject.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 89038f5540616821842fdef22878a2952e6779a1
Parent1 SHA-1: 18d9d432d5c41944fb336aba407159cac1240f4d
Parent2 SHA-1: 21ee9e629f2fefa6a8483865d9b43687aada66f3
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public int getNumIndices () {
		return empty ? 0 : buffer.limit();
	} ##FSTMerge## public int getNumIndices () {
		return buffer.limit();
	} ##FSTMerge## public int getNumIndices () {
		return buffer.limit();
	}
File path: /tmp/downloads/libgdx/revisions/rev_18d9d_21ee9/rev_18d9d-21ee9/gdx/src/com/badlogic/gdx/graphics/glutils/IndexBufferObject.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 89038f5540616821842fdef22878a2952e6779a1
Parent1 SHA-1: 18d9d432d5c41944fb336aba407159cac1240f4d
Parent2 SHA-1: 21ee9e629f2fefa6a8483865d9b43687aada66f3
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public int getNumMaxIndices () {
		return empty ? 0 : buffer.capacity();
	} ##FSTMerge## public int getNumMaxIndices () {
		return buffer.capacity();
	} ##FSTMerge## public int getNumMaxIndices () {
		return buffer.capacity();
	}
File path: /tmp/downloads/libgdx/revisions/rev_18d9d_21ee9/rev_18d9d-21ee9/gdx/src/com/badlogic/gdx/graphics/glutils/IndexBufferObject.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 89038f5540616821842fdef22878a2952e6779a1
Parent1 SHA-1: 18d9d432d5c41944fb336aba407159cac1240f4d
Parent2 SHA-1: 21ee9e629f2fefa6a8483865d9b43687aada66f3
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public void bind () {
		if (bufferHandle == 0) {
			throw new GdxRuntimeException("No buffer allocated!");
		}

		Gdx.gl20.glBindBuffer(GL20.GL_ELEMENT_ARRAY_BUFFER, bufferHandle);
		if (isDirty) {
			byteBuffer.limit(buffer.limit() * 2);
			Gdx.gl20.glBufferData(GL20.GL_ELEMENT_ARRAY_BUFFER, byteBuffer.limit(), byteBuffer, usage);
			isDirty = false;
		}
		isBound = true;
	} ##FSTMerge## public void bind () {
		if (bufferHandle == 0) throw new GdxRuntimeException("No buffer allocated!");

		Gdx.gl20.glBindBuffer(GL20.GL_ELEMENT_ARRAY_BUFFER, bufferHandle);
		if (isDirty) {
			byteBuffer.limit(buffer.limit() * 2);
			Gdx.gl20.glBufferData(GL20.GL_ELEMENT_ARRAY_BUFFER, byteBuffer.limit(), byteBuffer, usage);
			isDirty = false;
		}
		isBound = true;
	} ##FSTMerge## public void bind () {
		if (bufferHandle == 0) throw new GdxRuntimeException("No buffer allocated!");

		Gdx.gl20.glBindBuffer(GL20.GL_ELEMENT_ARRAY_BUFFER, bufferHandle);
		if (isDirty) {
			byteBuffer.limit(buffer.limit() * 2);
			Gdx.gl20.glBufferData(GL20.GL_ELEMENT_ARRAY_BUFFER, byteBuffer.limit(), byteBuffer, usage);
			isDirty = false;
		}
		isBound = true;
	}
File path: /tmp/downloads/libgdx/revisions/rev_18d9d_21ee9/rev_18d9d-21ee9/gdx/src/com/badlogic/gdx/graphics/glutils/IndexBufferObject.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 89038f5540616821842fdef22878a2952e6779a1
Parent1 SHA-1: 18d9d432d5c41944fb336aba407159cac1240f4d
Parent2 SHA-1: 21ee9e629f2fefa6a8483865d9b43687aada66f3
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public IndexArray (int maxIndices) {

		empty = maxIndices == 0;
		if (empty) {
			maxIndices = 1; // avoid allocating a zero-sized buffer because of bug in Android's ART
		}

		byteBuffer = BufferUtils.newUnsafeByteBuffer(maxIndices * 2);
		buffer = byteBuffer.asShortBuffer();
		buffer.flip();
		byteBuffer.flip();
	} ##FSTMerge## public IndexArray (int maxIndices) {
		byteBuffer = BufferUtils.newUnsafeByteBuffer(maxIndices * 2);
		buffer = byteBuffer.asShortBuffer();
		buffer.flip();
		byteBuffer.flip();
	} ##FSTMerge## public IndexArray (int maxIndices) {
		byteBuffer = BufferUtils.newUnsafeByteBuffer(maxIndices * 2);
		buffer = byteBuffer.asShortBuffer();
		buffer.flip();
		byteBuffer.flip();
	}
File path: /tmp/downloads/libgdx/revisions/rev_18d9d_21ee9/rev_18d9d-21ee9/gdx/src/com/badlogic/gdx/graphics/glutils/IndexArray.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 89038f5540616821842fdef22878a2952e6779a1
Parent1 SHA-1: 18d9d432d5c41944fb336aba407159cac1240f4d
Parent2 SHA-1: 21ee9e629f2fefa6a8483865d9b43687aada66f3
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public int getNumIndices () {
		return empty ? 0 : buffer.limit();
	} ##FSTMerge## public int getNumIndices () {
		return buffer.limit();
	} ##FSTMerge## public int getNumIndices () {
		return buffer.limit();
	}
File path: /tmp/downloads/libgdx/revisions/rev_18d9d_21ee9/rev_18d9d-21ee9/gdx/src/com/badlogic/gdx/graphics/glutils/IndexArray.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 89038f5540616821842fdef22878a2952e6779a1
Parent1 SHA-1: 18d9d432d5c41944fb336aba407159cac1240f4d
Parent2 SHA-1: 21ee9e629f2fefa6a8483865d9b43687aada66f3
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public int getNumMaxIndices () {
		return empty ? 0 : buffer.capacity();
	} ##FSTMerge## public int getNumMaxIndices () {
		return buffer.capacity();
	} ##FSTMerge## public int getNumMaxIndices () {
		return buffer.capacity();
	}
File path: /tmp/downloads/libgdx/revisions/rev_18d9d_21ee9/rev_18d9d-21ee9/gdx/src/com/badlogic/gdx/graphics/glutils/IndexArray.java

==================================================================================================================
Revision: /tmp/downloads/libgdx/revisions/rev_2ad6b_2c5e1/rev_2ad6b-2c5e1.revisions
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: c34d5766a849ce52c225d7a037a6a9bd3edf04bb
Parent1 SHA-1: 2ad6b93e7b74213449516625f7aa0420bf772abd
Parent2 SHA-1: 2c5e142ee535a1df21fc5928b93c703666030c95
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ static int major, minor, release; ##FSTMerge## static int major, minor; ##FSTMerge## static int major, minor;
File path: /tmp/downloads/libgdx/revisions/rev_2ad6b_2c5e1/rev_2ad6b-2c5e1/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGraphics.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: c34d5766a849ce52c225d7a037a6a9bd3edf04bb
Parent1 SHA-1: 2ad6b93e7b74213449516625f7aa0420bf772abd
Parent2 SHA-1: 2c5e142ee535a1df21fc5928b93c703666030c95
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ static Array<String> extensions; ##FSTMerge## String extensions; ##FSTMerge## String extensions;
File path: /tmp/downloads/libgdx/revisions/rev_2ad6b_2c5e1/rev_2ad6b-2c5e1/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGraphics.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: c34d5766a849ce52c225d7a037a6a9bd3edf04bb
Parent1 SHA-1: 2ad6b93e7b74213449516625f7aa0420bf772abd
Parent2 SHA-1: 2c5e142ee535a1df21fc5928b93c703666030c95
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ void setupDisplay () throws LWJGLException {
		if (config.useHDPI) {
			System.setProperty("org.lwjgl.opengl.Display.enableHighDPI", "true");
		}

		if (canvas != null) {
			Display.setParent(canvas);
		} else {
			boolean displayCreated = setDisplayMode(config.width, config.height, config.fullscreen);
			if (!displayCreated) {
				if (config.setDisplayModeCallback != null) {
					config = config.setDisplayModeCallback.onFailure(config);
					if (config != null) {
						displayCreated = setDisplayMode(config.width, config.height, config.fullscreen);
					}
				}
				if (!displayCreated) {
					throw new GdxRuntimeException("Couldn't set display mode " + config.width + "x" + config.height + ", fullscreen: "
						+ config.fullscreen);
				}
			}
			if (config.iconPaths.size > 0) {
				ByteBuffer[] icons = new ByteBuffer[config.iconPaths.size];
				for (int i = 0, n = config.iconPaths.size; i < n; i++) {
					Pixmap pixmap = new Pixmap(Gdx.files.getFileHandle(config.iconPaths.get(i), config.iconFileTypes.get(i)));
					if (pixmap.getFormat() != Format.RGBA8888) {
						Pixmap rgba = new Pixmap(pixmap.getWidth(), pixmap.getHeight(), Format.RGBA8888);
						rgba.drawPixmap(pixmap, 0, 0);
						pixmap = rgba;
					}
					icons[i] = ByteBuffer.allocateDirect(pixmap.getPixels().limit());
					icons[i].put(pixmap.getPixels()).flip();
					pixmap.dispose();
				}
				Display.setIcon(icons);
			}
		}
		Display.setTitle(config.title);
		Display.setResizable(config.resizable);
		Display.setInitialBackground(config.initialBackgroundColor.r, config.initialBackgroundColor.g,
			config.initialBackgroundColor.b);

		Display.setLocation(config.x, config.y);
		createDisplayPixelFormat(config.useGL30);
		extractVersion();
		extractExtensions();
		initiateGLInstances();
	} ##FSTMerge## void setupDisplay () throws LWJGLException {
		if(config.useHDPI) {
			System.setProperty("org.lwjgl.opengl.Display.enableHighDPI", "true");
		}
		
		if (canvas != null) {
			Display.setParent(canvas);
		} else {
			boolean displayCreated = setDisplayMode(config.width, config.height, config.fullscreen);			
			if (!displayCreated) {
				if (config.setDisplayModeCallback != null) {
					config = config.setDisplayModeCallback.onFailure(config);
					if (config != null) {
						displayCreated = setDisplayMode(config.width, config.height, config.fullscreen);
					}
				}
				if (!displayCreated) {
					throw new GdxRuntimeException("Couldn't set display mode " + config.width + "x" + config.height + ", fullscreen: "
						+ config.fullscreen);
				}
			}
			if (config.iconPaths.size > 0) {
				ByteBuffer[] icons = new ByteBuffer[config.iconPaths.size];
				for (int i = 0, n = config.iconPaths.size; i < n; i++) {
					Pixmap pixmap = new Pixmap(Gdx.files.getFileHandle(config.iconPaths.get(i), config.iconFileTypes.get(i)));
					if (pixmap.getFormat() != Format.RGBA8888) {
						Pixmap rgba = new Pixmap(pixmap.getWidth(), pixmap.getHeight(), Format.RGBA8888);
						rgba.drawPixmap(pixmap, 0, 0);
						pixmap = rgba;
					}
					icons[i] = ByteBuffer.allocateDirect(pixmap.getPixels().limit());
					icons[i].put(pixmap.getPixels()).flip();
					pixmap.dispose();
				}
				Display.setIcon(icons);
			}
		}
		Display.setTitle(config.title);
		Display.setResizable(config.resizable);
		Display.setInitialBackground(config.initialBackgroundColor.r, config.initialBackgroundColor.g,
			config.initialBackgroundColor.b);

		Display.setLocation(config.x, config.y);
		createDisplayPixelFormat();
		initiateGLInstances();
	} ##FSTMerge## void setupDisplay () throws LWJGLException {
		if(config.useHDPI) {
			System.setProperty("org.lwjgl.opengl.Display.enableHighDPI", "true");
		}
		
		if (canvas != null) {
			Display.setParent(canvas);
		} else {
			boolean displayCreated = setDisplayMode(config.width, config.height, config.fullscreen);			
			if (!displayCreated) {
				if (config.setDisplayModeCallback != null) {
					config = config.setDisplayModeCallback.onFailure(config);
					if (config != null) {
						displayCreated = setDisplayMode(config.width, config.height, config.fullscreen);
					}
				}
				if (!displayCreated) {
					throw new GdxRuntimeException("Couldn't set display mode " + config.width + "x" + config.height + ", fullscreen: "
						+ config.fullscreen);
				}
			}
			if (config.iconPaths.size > 0) {
				ByteBuffer[] icons = new ByteBuffer[config.iconPaths.size];
				for (int i = 0, n = config.iconPaths.size; i < n; i++) {
					Pixmap pixmap = new Pixmap(Gdx.files.getFileHandle(config.iconPaths.get(i), config.iconFileTypes.get(i)));
					if (pixmap.getFormat() != Format.RGBA8888) {
						Pixmap rgba = new Pixmap(pixmap.getWidth(), pixmap.getHeight(), Format.RGBA8888);
						rgba.drawPixmap(pixmap, 0, 0);
						pixmap = rgba;
					}
					icons[i] = ByteBuffer.allocateDirect(pixmap.getPixels().limit());
					icons[i].put(pixmap.getPixels()).flip();
					pixmap.dispose();
				}
				Display.setIcon(icons);
			}
		}
		Display.setTitle(config.title);
		Display.setResizable(config.resizable);
		Display.setInitialBackground(config.initialBackgroundColor.r, config.initialBackgroundColor.g,
			config.initialBackgroundColor.b);

		Display.setLocation(config.x, config.y);
		createDisplayPixelFormat();
		initiateGLInstances();
	}
File path: /tmp/downloads/libgdx/revisions/rev_2ad6b_2c5e1/rev_2ad6b-2c5e1/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGraphics.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: c34d5766a849ce52c225d7a037a6a9bd3edf04bb
Parent1 SHA-1: 2ad6b93e7b74213449516625f7aa0420bf772abd
Parent2 SHA-1: 2c5e142ee535a1df21fc5928b93c703666030c95
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void createDisplayPixelFormat () {
		try {
			if (config.useGL30) {
				ContextAttribs context = new ContextAttribs(3, 2).withForwardCompatible(false).withProfileCore(true);
				try {
					Display.create(new PixelFormat(config.r + config.g + config.b, config.a, config.depth, config.stencil,
						config.samples), context);
				} catch (Exception e) {
					System.out.println("LwjglGraphics: couldn't create OpenGL 3.2+ core profile context");
					throw e;
				}
				System.out.println("LwjglGraphics: created OpenGL 3.2+ core profile context. This is experimental!");
			} else {
				Display
					.create(new PixelFormat(config.r + config.g + config.b, config.a, config.depth, config.stencil, config.samples));
			}
			bufferFormat = new BufferFormat(config.r, config.g, config.b, config.a, config.depth, config.stencil, config.samples,
				false);
		} catch (Exception ex) {
			Display.destroy();
			try {
				Thread.sleep(200);
			} catch (InterruptedException ignored) {
			}
			try {
				Display.create(new PixelFormat(0, 16, 8));
				if (getDesktopDisplayMode().bitsPerPixel == 16) {
					bufferFormat = new BufferFormat(5, 6, 5, 0, 16, 8, 0, false);
				}
				if (getDesktopDisplayMode().bitsPerPixel == 24) {
					bufferFormat = new BufferFormat(8, 8, 8, 0, 16, 8, 0, false);
				}
				if (getDesktopDisplayMode().bitsPerPixel == 32) {
					bufferFormat = new BufferFormat(8, 8, 8, 8, 16, 8, 0, false);
				}
			} catch (Exception ex2) {
				Display.destroy();
				try {
					Thread.sleep(200);
				} catch (InterruptedException ignored) {
				}
				try {
					Display.create(new PixelFormat());
				} catch (Exception ex3) {
					if (!softwareMode && config.allowSoftwareMode) {
						softwareMode = true;
						System.setProperty("org.lwjgl.opengl.Display.allowSoftwareOpenGL", "true");
						createDisplayPixelFormat();
						return;
					}
					String glInfo = glInfo();
					throw new GdxRuntimeException("OpenGL is not supported by the video driver"
						+ (glInfo.isEmpty() ? "." : (":" + glInfo())), ex3);
				}
				if (getDesktopDisplayMode().bitsPerPixel == 16) {
					bufferFormat = new BufferFormat(5, 6, 5, 0, 8, 0, 0, false);
				}
				if (getDesktopDisplayMode().bitsPerPixel == 24) {
					bufferFormat = new BufferFormat(8, 8, 8, 0, 8, 0, 0, false);
				}
				if (getDesktopDisplayMode().bitsPerPixel == 32) {
					bufferFormat = new BufferFormat(8, 8, 8, 8, 8, 0, 0, false);
				}
			}
		}
	} ##FSTMerge## private void createDisplayPixelFormat () {
		try {
			if (config.useGL30) {
				ContextAttribs context = new ContextAttribs(3, 2).withForwardCompatible(false).withProfileCore(true);
				try {
					Display.create(new PixelFormat(config.r + config.g + config.b, config.a, config.depth, config.stencil,
						config.samples), context);
				} catch (Exception e) {
					System.out.println("LwjglGraphics: couldn't create OpenGL 3.2+ core profile context");
					throw e;
				}
				System.out.println("LwjglGraphics: created OpenGL 3.2+ core profile context. This is experimental!");
			} else {
				Display
					.create(new PixelFormat(config.r + config.g + config.b, config.a, config.depth, config.stencil, config.samples));
			}
			bufferFormat = new BufferFormat(config.r, config.g, config.b, config.a, config.depth, config.stencil, config.samples,
				false);
		} catch (Exception ex) {
			Display.destroy();
			try {
				Thread.sleep(200);
			} catch (InterruptedException ignored) {
			}
			try {
				Display.create(new PixelFormat(0, 16, 8));
				if (getDesktopDisplayMode().bitsPerPixel == 16) {
					bufferFormat = new BufferFormat(5, 6, 5, 0, 16, 8, 0, false);
				}
				if (getDesktopDisplayMode().bitsPerPixel == 24) {
					bufferFormat = new BufferFormat(8, 8, 8, 0, 16, 8, 0, false);
				}
				if (getDesktopDisplayMode().bitsPerPixel == 32) {
					bufferFormat = new BufferFormat(8, 8, 8, 8, 16, 8, 0, false);
				}
			} catch (Exception ex2) {
				Display.destroy();
				try {
					Thread.sleep(200);
				} catch (InterruptedException ignored) {
				}
				try {
					Display.create(new PixelFormat());
				} catch (Exception ex3) {
					if (!softwareMode && config.allowSoftwareMode) {
						softwareMode = true;
						System.setProperty("org.lwjgl.opengl.Display.allowSoftwareOpenGL", "true");
						createDisplayPixelFormat();
						return;
					}
					String glInfo = glInfo();
					throw new GdxRuntimeException("OpenGL is not supported by the video driver"
						+ (glInfo.isEmpty() ? "." : (":" + glInfo())), ex3);
				}
				if (getDesktopDisplayMode().bitsPerPixel == 16) {
					bufferFormat = new BufferFormat(5, 6, 5, 0, 8, 0, 0, false);
				}
				if (getDesktopDisplayMode().bitsPerPixel == 24) {
					bufferFormat = new BufferFormat(8, 8, 8, 0, 8, 0, 0, false);
				}
				if (getDesktopDisplayMode().bitsPerPixel == 32) {
					bufferFormat = new BufferFormat(8, 8, 8, 8, 8, 0, 0, false);
				}
			}
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_2ad6b_2c5e1/rev_2ad6b-2c5e1/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGraphics.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: c34d5766a849ce52c225d7a037a6a9bd3edf04bb
Parent1 SHA-1: 2ad6b93e7b74213449516625f7aa0420bf772abd
Parent2 SHA-1: 2c5e142ee535a1df21fc5928b93c703666030c95
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public void initiateGLInstances () {
		if (config.useGL30 && compatibleWithGLES3()) {
			gl30 = new LwjglGL30();
			gl20 = gl30;
		} else {
			gl20 = new LwjglGL20();
		}

		if (!isOpenGLOrHigher(2, 0))
			throw new GdxRuntimeException("OpenGL 2.0 or higher with the FBO extension is required. OpenGL version: "
				+ GL11.glGetString(GL11.GL_VERSION) + "\n" + glInfo());

		if (!supportsFBO()) {
			throw new GdxRuntimeException("OpenGL 2.0 or higher with the FBO extension is required. OpenGL version: "
				+ GL11.glGetString(GL11.GL_VERSION) + ", FBO extension: false\n" + glInfo());
		}

		Gdx.gl = gl20;
		Gdx.gl20 = gl20;
		Gdx.gl30 = gl30;
	} ##FSTMerge## public void initiateGLInstances () {
		String version = org.lwjgl.opengl.GL11.glGetString(GL11.GL_VERSION);
		major = Integer.parseInt("" + version.charAt(0));
		minor = Integer.parseInt("" + version.charAt(2));

		if (major >= 3) {
			gl30 = new LwjglGL30();
			gl20 = gl30;
		} else {
			gl20 = new LwjglGL20();
		}

		if (major <= 1)
			throw new GdxRuntimeException("OpenGL 2.0 or higher with the FBO extension is required. OpenGL version: " + version);
		if (major == 2 || version.contains("2.1")) {
			if (!supportsExtension("GL_EXT_framebuffer_object") && !supportsExtension("GL_ARB_framebuffer_object")) {
				String glInfo = glInfo();
				throw new GdxRuntimeException("OpenGL 2.0 or higher with the FBO extension is required. OpenGL version: " + version
					+ ", FBO extension: false" + (glInfo.isEmpty() ? "" : ("\n" + glInfo())));
			}
		}

		Gdx.gl = gl20;
		Gdx.gl20 = gl20;
		Gdx.gl30 = gl30;
	} ##FSTMerge## public void initiateGLInstances () {
		String version = org.lwjgl.opengl.GL11.glGetString(GL11.GL_VERSION);
		major = Integer.parseInt("" + version.charAt(0));
		minor = Integer.parseInt("" + version.charAt(2));

		if (config.useGL30 && major >= 3) {
			gl30 = new LwjglGL30();
			gl20 = gl30;
		} else {
			gl20 = new LwjglGL20();
		}

		if (major <= 1)
			throw new GdxRuntimeException("OpenGL 2.0 or higher with the FBO extension is required. OpenGL version: " + version);
		if (major == 2 || version.contains("2.1")) {
			if (!supportsExtension("GL_EXT_framebuffer_object") && !supportsExtension("GL_ARB_framebuffer_object")) {
				String glInfo = glInfo();
				throw new GdxRuntimeException("OpenGL 2.0 or higher with the FBO extension is required. OpenGL version: " + version
					+ ", FBO extension: false" + (glInfo.isEmpty() ? "" : ("\n" + glInfo())));
			}
		}

		Gdx.gl = gl20;
		Gdx.gl20 = gl20;
		Gdx.gl30 = gl30;
	}
File path: /tmp/downloads/libgdx/revisions/rev_2ad6b_2c5e1/rev_2ad6b-2c5e1/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGraphics.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: c34d5766a849ce52c225d7a037a6a9bd3edf04bb
Parent1 SHA-1: 2ad6b93e7b74213449516625f7aa0420bf772abd
Parent2 SHA-1: 2c5e142ee535a1df21fc5928b93c703666030c95
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public boolean setDisplayMode (DisplayMode displayMode) {
		org.lwjgl.opengl.DisplayMode mode = ((LwjglDisplayMode)displayMode).mode;
		try {
			if (!mode.isFullscreenCapable()) {
				Display.setDisplayMode(mode);
			} else {
				Display.setDisplayModeAndFullscreen(mode);
			}
			float scaleFactor = Display.getPixelScaleFactor();
			config.width = (int)(mode.getWidth() * scaleFactor);
			config.height = (int)(mode.getHeight() * scaleFactor);
			if (Gdx.gl != null) Gdx.gl.glViewport(0, 0, config.width, config.height);
			resize = true;
			return true;
		} catch (LWJGLException e) {
			return false;
		}
	} ##FSTMerge## @Override
	public boolean setDisplayMode (DisplayMode displayMode) {
		org.lwjgl.opengl.DisplayMode mode = ((LwjglDisplayMode)displayMode).mode;		
		try {
			if (!mode.isFullscreenCapable()) {
				Display.setDisplayMode(mode);
			} else {
				Display.setDisplayModeAndFullscreen(mode);
			}			
			float scaleFactor = Display.getPixelScaleFactor();
			config.width = (int)(mode.getWidth() * scaleFactor);
			config.height = (int)(mode.getHeight() * scaleFactor);
			if (Gdx.gl != null) Gdx.gl.glViewport(0, 0, config.width, config.height);
			resize = true;
			return true;
		} catch (LWJGLException e) {
			return false;
		}
	} ##FSTMerge## @Override
	public boolean setDisplayMode (DisplayMode displayMode) {
		org.lwjgl.opengl.DisplayMode mode = ((LwjglDisplayMode)displayMode).mode;		
		try {
			if (!mode.isFullscreenCapable()) {
				Display.setDisplayMode(mode);
			} else {
				Display.setDisplayModeAndFullscreen(mode);
			}			
			float scaleFactor = Display.getPixelScaleFactor();
			config.width = (int)(mode.getWidth() * scaleFactor);
			config.height = (int)(mode.getHeight() * scaleFactor);
			if (Gdx.gl != null) Gdx.gl.glViewport(0, 0, config.width, config.height);
			resize = true;
			return true;
		} catch (LWJGLException e) {
			return false;
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_2ad6b_2c5e1/rev_2ad6b-2c5e1/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGraphics.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: c34d5766a849ce52c225d7a037a6a9bd3edf04bb
Parent1 SHA-1: 2ad6b93e7b74213449516625f7aa0420bf772abd
Parent2 SHA-1: 2c5e142ee535a1df21fc5928b93c703666030c95
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public boolean setDisplayMode (int width, int height, boolean fullscreen) {
		if (getWidth() == width && getHeight() == height && Display.isFullscreen() == fullscreen) {
			return true;
		}

		try {
			org.lwjgl.opengl.DisplayMode targetDisplayMode = null;

			if (fullscreen) {
				org.lwjgl.opengl.DisplayMode[] modes = Display.getAvailableDisplayModes();
				int freq = 0;

				for (int i = 0; i < modes.length; i++) {
					org.lwjgl.opengl.DisplayMode current = modes[i];

					if ((current.getWidth() == width) && (current.getHeight() == height)) {
						if ((targetDisplayMode == null) || (current.getFrequency() >= freq)) {
							if ((targetDisplayMode == null) || (current.getBitsPerPixel() > targetDisplayMode.getBitsPerPixel())) {
								targetDisplayMode = current;
								freq = targetDisplayMode.getFrequency();
							}
						}

						// if we've found a match for bpp and frequence against the
						// original display mode then it's probably best to go for this one
						// since it's most likely compatible with the monitor
						if ((current.getBitsPerPixel() == Display.getDesktopDisplayMode().getBitsPerPixel())
							&& (current.getFrequency() == Display.getDesktopDisplayMode().getFrequency())) {
							targetDisplayMode = current;
							break;
						}
					}
				}
			} else {
				targetDisplayMode = new org.lwjgl.opengl.DisplayMode(width, height);
			}

			if (targetDisplayMode == null) {
				return false;
			}

			boolean resizable = !fullscreen && config.resizable;

			Display.setDisplayMode(targetDisplayMode);
			Display.setFullscreen(fullscreen);
			// Workaround for bug in LWJGL whereby resizable state is lost on DisplayMode change
			if (resizable == Display.isResizable()) {
				Display.setResizable(!resizable);
			}
			Display.setResizable(resizable);

			float scaleFactor = Display.getPixelScaleFactor();
			config.width = (int)(targetDisplayMode.getWidth() * scaleFactor);
			config.height = (int)(targetDisplayMode.getHeight() * scaleFactor);
			if (Gdx.gl != null) Gdx.gl.glViewport(0, 0, config.width, config.height);
			resize = true;
			return true;
		} catch (LWJGLException e) {
			return false;
		}
	} ##FSTMerge## @Override
	public boolean setDisplayMode (int width, int height, boolean fullscreen) {
		if (getWidth() == width && getHeight() == height && Display.isFullscreen() == fullscreen) {
			return true;
		}

		try {
			org.lwjgl.opengl.DisplayMode targetDisplayMode = null;

			if (fullscreen) {
				org.lwjgl.opengl.DisplayMode[] modes = Display.getAvailableDisplayModes();
				int freq = 0;

				for (int i = 0; i < modes.length; i++) {
					org.lwjgl.opengl.DisplayMode current = modes[i];

					if ((current.getWidth() == width) && (current.getHeight() == height)) {
						if ((targetDisplayMode == null) || (current.getFrequency() >= freq)) {
							if ((targetDisplayMode == null) || (current.getBitsPerPixel() > targetDisplayMode.getBitsPerPixel())) {
								targetDisplayMode = current;
								freq = targetDisplayMode.getFrequency();
							}
						}

						// if we've found a match for bpp and frequence against the
						// original display mode then it's probably best to go for this one
						// since it's most likely compatible with the monitor
						if ((current.getBitsPerPixel() == Display.getDesktopDisplayMode().getBitsPerPixel())
							&& (current.getFrequency() == Display.getDesktopDisplayMode().getFrequency())) {
							targetDisplayMode = current;
							break;
						}
					}
				}
			} else {
				targetDisplayMode = new org.lwjgl.opengl.DisplayMode(width, height);
			}

			if (targetDisplayMode == null) {
				return false;
			}

			boolean resizable = !fullscreen && config.resizable;
			
			Display.setDisplayMode(targetDisplayMode);
			Display.setFullscreen(fullscreen);
			// Workaround for bug in LWJGL whereby resizable state is lost on DisplayMode change
			if (resizable == Display.isResizable()) {
				Display.setResizable(!resizable);
			}
			Display.setResizable(resizable);
			
			float scaleFactor = Display.getPixelScaleFactor();
			config.width = (int)(targetDisplayMode.getWidth() * scaleFactor);
			config.height = (int)(targetDisplayMode.getHeight() * scaleFactor);
			if (Gdx.gl != null) Gdx.gl.glViewport(0, 0, config.width, config.height);
			resize = true;
			return true;
		} catch (LWJGLException e) {
			return false;
		}
	} ##FSTMerge## @Override
	public boolean setDisplayMode (int width, int height, boolean fullscreen) {
		if (getWidth() == width && getHeight() == height && Display.isFullscreen() == fullscreen) {
			return true;
		}

		try {
			org.lwjgl.opengl.DisplayMode targetDisplayMode = null;

			if (fullscreen) {
				org.lwjgl.opengl.DisplayMode[] modes = Display.getAvailableDisplayModes();
				int freq = 0;

				for (int i = 0; i < modes.length; i++) {
					org.lwjgl.opengl.DisplayMode current = modes[i];

					if ((current.getWidth() == width) && (current.getHeight() == height)) {
						if ((targetDisplayMode == null) || (current.getFrequency() >= freq)) {
							if ((targetDisplayMode == null) || (current.getBitsPerPixel() > targetDisplayMode.getBitsPerPixel())) {
								targetDisplayMode = current;
								freq = targetDisplayMode.getFrequency();
							}
						}

						// if we've found a match for bpp and frequence against the
						// original display mode then it's probably best to go for this one
						// since it's most likely compatible with the monitor
						if ((current.getBitsPerPixel() == Display.getDesktopDisplayMode().getBitsPerPixel())
							&& (current.getFrequency() == Display.getDesktopDisplayMode().getFrequency())) {
							targetDisplayMode = current;
							break;
						}
					}
				}
			} else {
				targetDisplayMode = new org.lwjgl.opengl.DisplayMode(width, height);
			}

			if (targetDisplayMode == null) {
				return false;
			}

			boolean resizable = !fullscreen && config.resizable;
			
			Display.setDisplayMode(targetDisplayMode);
			Display.setFullscreen(fullscreen);
			// Workaround for bug in LWJGL whereby resizable state is lost on DisplayMode change
			if (resizable == Display.isResizable()) {
				Display.setResizable(!resizable);
			}
			Display.setResizable(resizable);
			
			float scaleFactor = Display.getPixelScaleFactor();
			config.width = (int)(targetDisplayMode.getWidth() * scaleFactor);
			config.height = (int)(targetDisplayMode.getHeight() * scaleFactor);
			if (Gdx.gl != null) Gdx.gl.glViewport(0, 0, config.width, config.height);
			resize = true;
			return true;
		} catch (LWJGLException e) {
			return false;
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_2ad6b_2c5e1/rev_2ad6b-2c5e1/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGraphics.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: c34d5766a849ce52c225d7a037a6a9bd3edf04bb
Parent1 SHA-1: 2ad6b93e7b74213449516625f7aa0420bf772abd
Parent2 SHA-1: 2c5e142ee535a1df21fc5928b93c703666030c95
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public boolean supportsExtension (String extension) {
		return extensions.contains(extension, false);
	} ##FSTMerge## @Override
	public boolean supportsExtension(String extension) {
		if (extensions == null) {
			if(gl30 != null) {
				//old style glGetString(GL_EXTENSIONS) is not valid in 3.2 core:
				StringBuilder extensionsBuilder = new StringBuilder();

				int numExtensions = GL11.glGetInteger(GL30.GL_NUM_EXTENSIONS);
				for (int i = 0; i < numExtensions; ++i) {
					extensionsBuilder.append(gl30.glGetStringi(GL20.GL_EXTENSIONS, i));
					extensionsBuilder.append(" ");
				}
				extensions = extensionsBuilder.toString();
			} else {
				extensions = gl20.glGetString(GL20.GL_EXTENSIONS);
			}
		}

		return extensions.contains(extension);
	} ##FSTMerge## @Override
	public boolean supportsExtension(String extension) {
		if (extensions == null) {
			if(gl30 != null) {
				//old style glGetString(GL_EXTENSIONS) is not valid in 3.2 core:
				StringBuilder extensionsBuilder = new StringBuilder();

				int numExtensions = GL11.glGetInteger(GL30.GL_NUM_EXTENSIONS);
				for (int i = 0; i < numExtensions; ++i) {
					extensionsBuilder.append(gl30.glGetStringi(GL20.GL_EXTENSIONS, i));
					extensionsBuilder.append(" ");
				}
				extensions = extensionsBuilder.toString();
			} else {
				extensions = gl20.glGetString(GL20.GL_EXTENSIONS);
			}
		}

		return extensions.contains(extension);
	}
File path: /tmp/downloads/libgdx/revisions/rev_2ad6b_2c5e1/rev_2ad6b-2c5e1/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGraphics.java

==================================================================================================================
Revision: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28.revisions
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ static public ShaderProgram createDefaultShader () {
		String vertexShader = "attribute vec4 " + ShaderProgram.POSITION_ATTRIBUTE + ";\n" //
			+ "attribute vec4 " + ShaderProgram.COLOR_ATTRIBUTE + ";\n" //
			+ "attribute vec2 " + ShaderProgram.TEXCOORD_ATTRIBUTE + "0;\n" //
			+ "uniform mat4 u_projTrans;\n" //
			+ "varying vec4 v_color;\n" //
			+ "varying vec2 v_texCoords;\n" //
			+ "\n" //
			+ "void main()\n" //
			+ "{\n" //
			+ "   v_color = " + ShaderProgram.COLOR_ATTRIBUTE + ";\n" //
			+ "   v_color.a = v_color.a * (255.0/254.0);\n" //
			+ "   v_texCoords = " + ShaderProgram.TEXCOORD_ATTRIBUTE + "0;\n" //
			+ "   gl_Position =  u_projTrans * " + ShaderProgram.POSITION_ATTRIBUTE + ";\n" //
			+ "}\n";
		String fragmentShader = "#ifdef GL_ES\n" //
			+ "#define LOWP lowp\n" //
			+ "precision mediump float;\n" //
			+ "#else\n" //
			+ "#define LOWP \n" //
			+ "#endif\n" //
			+ "varying LOWP vec4 v_color;\n" //
			+ "varying vec2 v_texCoords;\n" //
			+ "uniform sampler2D u_texture;\n" //
			+ "void main()\n"//
			+ "{\n" //
			+ "  gl_FragColor = v_color * texture2D(u_texture, v_texCoords);\n" //
			+ "}";

		ShaderProgram shader = new ShaderProgram(vertexShader, fragmentShader);
		if (shader.isCompiled() == false) throw new IllegalArgumentException("Error compiling shader: " + shader.getLog());
		return shader;
	} ##FSTMerge## static public ShaderProgram createDefaultShader () {
		String vertexShader = "attribute vec4 " + ShaderProgram.POSITION_ATTRIBUTE + ";\n" //
			+ "attribute vec4 " + ShaderProgram.COLOR_ATTRIBUTE + ";\n" //
			+ "attribute vec2 " + ShaderProgram.TEXCOORD_ATTRIBUTE + "0;\n" //
			+ "uniform mat4 u_projTrans;\n" //
			+ "varying vec4 v_color;\n" //
			+ "varying vec2 v_texCoords;\n" //
			+ "\n" //
			+ "void main()\n" //
			+ "{\n" //
			+ "   v_color = " + ShaderProgram.COLOR_ATTRIBUTE + ";\n" //
			+ "   v_color.a = v_color.a * (256.0/255.0);\n" //
			+ "   v_texCoords = " + ShaderProgram.TEXCOORD_ATTRIBUTE + "0;\n" //
			+ "   gl_Position =  u_projTrans * " + ShaderProgram.POSITION_ATTRIBUTE + ";\n" //
			+ "}\n";
		String fragmentShader = "#ifdef GL_ES\n" //
			+ "#define LOWP lowp\n" //
			+ "precision mediump float;\n" //
			+ "#else\n" //
			+ "#define LOWP \n" //
			+ "#endif\n" //
			+ "varying LOWP vec4 v_color;\n" //
			+ "varying vec2 v_texCoords;\n" //
			+ "uniform sampler2D u_texture;\n" //
			+ "void main()\n"//
			+ "{\n" //
			+ "  gl_FragColor = v_color * texture2D(u_texture, v_texCoords);\n" //
			+ "}";

		ShaderProgram shader = new ShaderProgram(vertexShader, fragmentShader);
		if (shader.isCompiled() == false) throw new IllegalArgumentException("Error compiling shader: " + shader.getLog());
		return shader;
	} ##FSTMerge## static public ShaderProgram createDefaultShader () {
		String vertexShader = "attribute vec4 " + ShaderProgram.POSITION_ATTRIBUTE + ";\n" //
			+ "attribute vec4 " + ShaderProgram.COLOR_ATTRIBUTE + ";\n" //
			+ "attribute vec2 " + ShaderProgram.TEXCOORD_ATTRIBUTE + "0;\n" //
			+ "uniform mat4 u_projTrans;\n" //
			+ "varying vec4 v_color;\n" //
			+ "varying vec2 v_texCoords;\n" //
			+ "\n" //
			+ "void main()\n" //
			+ "{\n" //
			+ "   v_color = " + ShaderProgram.COLOR_ATTRIBUTE + ";\n" //
			+ "   v_color.a = v_color.a * (256.0/255.0);\n" //
			+ "   v_texCoords = " + ShaderProgram.TEXCOORD_ATTRIBUTE + "0;\n" //
			+ "   gl_Position =  u_projTrans * " + ShaderProgram.POSITION_ATTRIBUTE + ";\n" //
			+ "}\n";
		String fragmentShader = "#ifdef GL_ES\n" //
			+ "#define LOWP lowp\n" //
			+ "precision mediump float;\n" //
			+ "#else\n" //
			+ "#define LOWP \n" //
			+ "#endif\n" //
			+ "varying LOWP vec4 v_color;\n" //
			+ "varying vec2 v_texCoords;\n" //
			+ "uniform sampler2D u_texture;\n" //
			+ "void main()\n"//
			+ "{\n" //
			+ "  gl_FragColor = v_color * texture2D(u_texture, v_texCoords);\n" //
			+ "}";

		ShaderProgram shader = new ShaderProgram(vertexShader, fragmentShader);
		if (shader.isCompiled() == false) throw new IllegalArgumentException("Error compiling shader: " + shader.getLog());
		return shader;
	}
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/gdx/src/com/badlogic/gdx/graphics/g2d/SpriteBatch.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public static Mesh create (boolean isStatic, final Mesh[] meshes, final Matrix4[] transformations) {
		if (transformations != null && transformations.length < meshes.length)
			throw new IllegalArgumentException("Not enough transformations specified");
		final VertexAttributes attributes = meshes[0].getVertexAttributes();
		int vertCount = meshes[0].getNumVertices();
		int idxCount = meshes[0].getNumIndices();
		for (int i = 1; i < meshes.length; i++) {
			if (!meshes[i].getVertexAttributes().equals(attributes))
				throw new IllegalArgumentException("Inconsistent VertexAttributes");
			vertCount += meshes[i].getNumVertices();
			idxCount += meshes[i].getNumIndices();
		}
		final VertexAttribute posAttr = meshes[0].getVertexAttribute(Usage.Position);
		final int offset = posAttr.offset / 4;
		final int numComponents = posAttr.numComponents;
		final int vertexSize = attributes.vertexSize / 4;

		final float vertices[] = new float[vertCount * vertexSize];
		final short indices[] = new short[idxCount];

		meshes[0].getVertices(vertices);
		meshes[0].getIndices(indices);
		int vcount = meshes[0].getNumVertices();
		if (transformations != null) transform(transformations[0], vertices, vertexSize, offset, numComponents, 0, vcount);
		int voffset = vcount;
		int ioffset = meshes[0].getNumIndices();
		for (int i = 1; i < meshes.length; i++) {
			final Mesh mesh = meshes[i];
			vcount = mesh.getNumVertices();
			final int isize = mesh.getNumIndices();
			mesh.getVertices(0, vcount * vertexSize, vertices, voffset * vertexSize);
			if (transformations != null)
				transform(transformations[i], vertices, vertexSize, offset, numComponents, voffset, vcount);
			mesh.getIndices(indices, ioffset);
			for (int j = 0; j < isize; j++)
				indices[ioffset + j] = (short)(indices[ioffset + j] + voffset);
			ioffset += isize;
			voffset += vcount;
		}

		final Mesh result = new Mesh(isStatic, vertices.length / vertexSize, indices.length, attributes);
		result.setVertices(vertices);
		result.setIndices(indices);
		return result;
	} ##FSTMerge## public static Mesh create (boolean isStatic, final Mesh[] meshes, final Matrix4[] transformations) {
		if (transformations != null && transformations.length < meshes.length)
			throw new IllegalArgumentException("Not enough transformations specified");
		final VertexAttributes attributes = meshes[0].getVertexAttributes();
		int vertCount = meshes[0].getNumVertices();
		int idxCount = meshes[0].getNumIndices();
		for (int i = 1; i < meshes.length; i++) {
			if (!meshes[i].getVertexAttributes().equals(attributes))
				throw new IllegalArgumentException("Inconsistent VertexAttributes");
			vertCount += meshes[i].getNumVertices();
			idxCount += meshes[i].getNumIndices();
		}
		final VertexAttribute posAttr = meshes[0].getVertexAttribute(Usage.Position);
		final int offset = posAttr.offset / 4;
		final int numComponents = posAttr.numComponents;
		final int vertexSize = attributes.vertexSize / 4;

		final float vertices[] = new float[vertCount * vertexSize];
		final short indices[] = new short[idxCount];

		meshes[0].getVertices(vertices);
		meshes[0].getIndices(indices);
		int vcount = meshes[0].getNumVertices();
		if (transformations != null)
			transform(transformations[0], vertices, vertexSize, offset, numComponents, 0, vcount);
		int voffset = vcount;
		int ioffset = meshes[0].getNumIndices();
		for (int i = 1; i < meshes.length; i++) {
			final Mesh mesh = meshes[i];
			vcount = mesh.getNumVertices();
			final int isize = mesh.getNumIndices();
			mesh.getVertices(0, vcount * vertexSize, vertices, voffset * vertexSize);
			if (transformations != null)
				transform(transformations[i], vertices, vertexSize, offset, numComponents, voffset, vcount);
			mesh.getIndices(indices, ioffset);
			for (int j = 0; j < isize; j++)
				indices[ioffset + j] = (short)(indices[ioffset + j] + voffset);
			ioffset += isize;
			voffset += vcount;
		}

		final Mesh result = new Mesh(isStatic, vertices.length / vertexSize, indices.length, attributes);
		result.setVertices(vertices);
		result.setIndices(indices);
		return result;
	} ##FSTMerge## public static Mesh create (boolean isStatic, final Mesh[] meshes, final Matrix4[] transformations) {
		if (transformations != null && transformations.length < meshes.length)
			throw new IllegalArgumentException("Not enough transformations specified");
		final VertexAttributes attributes = meshes[0].getVertexAttributes();
		int vertCount = meshes[0].getNumVertices();
		int idxCount = meshes[0].getNumIndices();
		for (int i = 1; i < meshes.length; i++) {
			if (!meshes[i].getVertexAttributes().equals(attributes))
				throw new IllegalArgumentException("Inconsistent VertexAttributes");
			vertCount += meshes[i].getNumVertices();
			idxCount += meshes[i].getNumIndices();
		}
		final VertexAttribute posAttr = meshes[0].getVertexAttribute(Usage.Position);
		final int offset = posAttr.offset / 4;
		final int numComponents = posAttr.numComponents;
		final int vertexSize = attributes.vertexSize / 4;

		final float vertices[] = new float[vertCount * vertexSize];
		final short indices[] = new short[idxCount];

		meshes[0].getVertices(vertices);
		meshes[0].getIndices(indices);
		int vcount = meshes[0].getNumVertices();
		if (transformations != null)
			transform(transformations[0], vertices, vertexSize, offset, numComponents, 0, vcount);
		int voffset = vcount;
		int ioffset = meshes[0].getNumIndices();
		for (int i = 1; i < meshes.length; i++) {
			final Mesh mesh = meshes[i];
			vcount = mesh.getNumVertices();
			final int isize = mesh.getNumIndices();
			mesh.getVertices(0, vcount * vertexSize, vertices, voffset * vertexSize);
			if (transformations != null)
				transform(transformations[i], vertices, vertexSize, offset, numComponents, voffset, vcount);
			mesh.getIndices(indices, ioffset);
			for (int j = 0; j < isize; j++)
				indices[ioffset + j] = (short)(indices[ioffset + j] + voffset);
			ioffset += isize;
			voffset += vcount;
		}

		final Mesh result = new Mesh(isStatic, vertices.length / vertexSize, indices.length, attributes);
		result.setVertices(vertices);
		result.setIndices(indices);
		return result;
	}
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/gdx/src/com/badlogic/gdx/graphics/Mesh.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public void getIndices (short[] indices, int destOffset) {
		getIndices(0, indices, destOffset);
	} ##FSTMerge## public void getIndices (short[] indices, int destOffset) {
		if ((indices.length - destOffset) < getNumIndices())
			throw new IllegalArgumentException("not enough room in indices array, has " + indices.length + " floats, needs "
				+ getNumIndices());
		int pos = getIndicesBuffer().position();
		getIndicesBuffer().position(0);
		getIndicesBuffer().get(indices, destOffset, getNumIndices());
		getIndicesBuffer().position(pos);
	} ##FSTMerge## public void getIndices (short[] indices, int destOffset) {
		if ((indices.length - destOffset) < getNumIndices())
			throw new IllegalArgumentException("not enough room in indices array, has " + indices.length + " floats, needs "
				+ getNumIndices());
		int pos = getIndicesBuffer().position();
		getIndicesBuffer().position(0);
		getIndicesBuffer().get(indices, destOffset, getNumIndices());
		getIndicesBuffer().position(pos);
	}
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/gdx/src/com/badlogic/gdx/graphics/Mesh.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public BoundingBox extendBoundingBox (final BoundingBox out, int offset, int count, final Matrix4 transform) {
		int numIndices = getNumIndices();
		if (offset < 0 || count < 1 || offset + count > numIndices)
			throw new GdxRuntimeException("Not enough indices ( offset=" + offset + ", count=" + count + ", max=" + numIndices
				+ " )");

		final FloatBuffer verts = vertices.getBuffer();
		final ShortBuffer index = indices.getBuffer();
		final VertexAttribute posAttrib = getVertexAttribute(Usage.Position);
		final int posoff = posAttrib.offset / 4;
		final int vertexSize = vertices.getAttributes().vertexSize / 4;
		final int end = offset + count;

		switch (posAttrib.numComponents) {
		case 1:
			for (int i = offset; i < end; i++) {
				final int idx = index.get(i) * vertexSize + posoff;
				tmpV.set(verts.get(idx), 0, 0);
				if (transform != null) tmpV.mul(transform);
				out.ext(tmpV);
			}
			break;
		case 2:
			for (int i = offset; i < end; i++) {
				final int idx = index.get(i) * vertexSize + posoff;
				tmpV.set(verts.get(idx), verts.get(idx + 1), 0);
				if (transform != null) tmpV.mul(transform);
				out.ext(tmpV);
			}
			break;
		case 3:
			for (int i = offset; i < end; i++) {
				final int idx = index.get(i) * vertexSize + posoff;
				tmpV.set(verts.get(idx), verts.get(idx + 1), verts.get(idx + 2));
				if (transform != null) tmpV.mul(transform);
				out.ext(tmpV);
			}
			break;
		}
		return out;
	} ##FSTMerge## public BoundingBox extendBoundingBox (final BoundingBox out, int offset, int count, final Matrix4 transform) {
		int numIndices = getNumIndices();
		if (offset < 0 || count < 1 || offset + count > numIndices) throw new GdxRuntimeException("Not enough indices ( offset="+offset+", count="+count+", max="+numIndices+" )");

		final FloatBuffer verts = vertices.getBuffer();
		final ShortBuffer index = indices.getBuffer();
		final VertexAttribute posAttrib = getVertexAttribute(Usage.Position);
		final int posoff = posAttrib.offset / 4;
		final int vertexSize = vertices.getAttributes().vertexSize / 4;
		final int end = offset + count;

		switch (posAttrib.numComponents) {
		case 1:
			for (int i = offset; i < end; i++) {
				final int idx = index.get(i) * vertexSize + posoff;
				tmpV.set(verts.get(idx), 0, 0);
				if (transform != null) tmpV.mul(transform);
				out.ext(tmpV);
			}
			break;
		case 2:
			for (int i = offset; i < end; i++) {
				final int idx = index.get(i) * vertexSize + posoff;
				tmpV.set(verts.get(idx), verts.get(idx + 1), 0);
				if (transform != null) tmpV.mul(transform);
				out.ext(tmpV);
			}
			break;
		case 3:
			for (int i = offset; i < end; i++) {
				final int idx = index.get(i) * vertexSize + posoff;
				tmpV.set(verts.get(idx), verts.get(idx + 1), verts.get(idx + 2));
				if (transform != null) tmpV.mul(transform);
				out.ext(tmpV);
			}
			break;
		}
		return out;
	} ##FSTMerge## public BoundingBox extendBoundingBox (final BoundingBox out, int offset, int count, final Matrix4 transform) {
		int numIndices = getNumIndices();
		if (offset < 0 || count < 1 || offset + count > numIndices) throw new GdxRuntimeException("Not enough indices ( offset="+offset+", count="+count+", max="+numIndices+" )");

		final FloatBuffer verts = vertices.getBuffer();
		final ShortBuffer index = indices.getBuffer();
		final VertexAttribute posAttrib = getVertexAttribute(Usage.Position);
		final int posoff = posAttrib.offset / 4;
		final int vertexSize = vertices.getAttributes().vertexSize / 4;
		final int end = offset + count;

		switch (posAttrib.numComponents) {
		case 1:
			for (int i = offset; i < end; i++) {
				final int idx = index.get(i) * vertexSize + posoff;
				tmpV.set(verts.get(idx), 0, 0);
				if (transform != null) tmpV.mul(transform);
				out.ext(tmpV);
			}
			break;
		case 2:
			for (int i = offset; i < end; i++) {
				final int idx = index.get(i) * vertexSize + posoff;
				tmpV.set(verts.get(idx), verts.get(idx + 1), 0);
				if (transform != null) tmpV.mul(transform);
				out.ext(tmpV);
			}
			break;
		case 3:
			for (int i = offset; i < end; i++) {
				final int idx = index.get(i) * vertexSize + posoff;
				tmpV.set(verts.get(idx), verts.get(idx + 1), verts.get(idx + 2));
				if (transform != null) tmpV.mul(transform);
				out.ext(tmpV);
			}
			break;
		}
		return out;
	}
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/gdx/src/com/badlogic/gdx/graphics/Mesh.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public static void invalidateAllMeshes (Application app) {
		Array<Mesh> meshesArray = meshes.get(app);
		if (meshesArray == null) return;
		for (int i = 0; i < meshesArray.size; i++) {
			meshesArray.get(i).vertices.invalidate();
			meshesArray.get(i).indices.invalidate();
		}
	} ##FSTMerge## public static void invalidateAllMeshes (Application app) {
		Array<Mesh> meshesArray = meshes.get(app);
		if (meshesArray == null) return;
		for (int i = 0; i < meshesArray.size; i++) {
			if (meshesArray.get(i).vertices instanceof VertexBufferObject) {
				((VertexBufferObject)meshesArray.get(i).vertices).invalidate();
			}
			meshesArray.get(i).indices.invalidate();
		}
	} ##FSTMerge## public static void invalidateAllMeshes (Application app) {
		Array<Mesh> meshesArray = meshes.get(app);
		if (meshesArray == null) return;
		for (int i = 0; i < meshesArray.size; i++) {
			if (meshesArray.get(i).vertices instanceof VertexBufferObject) {
				((VertexBufferObject)meshesArray.get(i).vertices).invalidate();
			} else if(meshesArray.get(i).vertices instanceof VertexBufferObjectWithVAO) {
				((VertexBufferObjectWithVAO) meshesArray.get(i).vertices).invalidate();
			}
			meshesArray.get(i).indices.invalidate();
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/gdx/src/com/badlogic/gdx/graphics/Mesh.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public int getHeight () {
		if (canvas != null)
			return Math.max(1, canvas.getHeight());
		else
			return (int)(Display.getHeight() * Display.getPixelScaleFactor());
	} ##FSTMerge## public int getHeight () {
		if (canvas != null)
			return Math.max(1, canvas.getHeight());
		else
			return Display.getHeight();
	} ##FSTMerge## public int getHeight () {
		if (canvas != null)
			return Math.max(1, canvas.getHeight());
		else
			return Display.getHeight();
	}
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGraphics.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public int getWidth () {
		if (canvas != null)
			return Math.max(1, canvas.getWidth());
		else
			return (int)(Display.getWidth() * Display.getPixelScaleFactor());
	} ##FSTMerge## public int getWidth () {
		if (canvas != null)
			return Math.max(1, canvas.getWidth());
		else
			return Display.getWidth();
	} ##FSTMerge## public int getWidth () {
		if (canvas != null)
			return Math.max(1, canvas.getWidth());
		else
			return Display.getWidth();
	}
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGraphics.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ void setupDisplay () throws LWJGLException {
		if(config.useHDPI) {
			System.setProperty("org.lwjgl.opengl.Display.enableHighDPI", "true");
		}
		
		if (canvas != null) {
			Display.setParent(canvas);
		} else {
			boolean displayCreated = setDisplayMode(config.width, config.height, config.fullscreen);			
			if (!displayCreated) {
				if (config.setDisplayModeCallback != null) {
					config = config.setDisplayModeCallback.onFailure(config);
					if (config != null) {
						displayCreated = setDisplayMode(config.width, config.height, config.fullscreen);
					}
				}
				if (!displayCreated) {
					throw new GdxRuntimeException("Couldn't set display mode " + config.width + "x" + config.height + ", fullscreen: "
						+ config.fullscreen);
				}
			}
			if (config.iconPaths.size > 0) {
				ByteBuffer[] icons = new ByteBuffer[config.iconPaths.size];
				for (int i = 0, n = config.iconPaths.size; i < n; i++) {
					Pixmap pixmap = new Pixmap(Gdx.files.getFileHandle(config.iconPaths.get(i), config.iconFileTypes.get(i)));
					if (pixmap.getFormat() != Format.RGBA8888) {
						Pixmap rgba = new Pixmap(pixmap.getWidth(), pixmap.getHeight(), Format.RGBA8888);
						rgba.drawPixmap(pixmap, 0, 0);
						pixmap = rgba;
					}
					icons[i] = ByteBuffer.allocateDirect(pixmap.getPixels().limit());
					icons[i].put(pixmap.getPixels()).flip();
					pixmap.dispose();
				}
				Display.setIcon(icons);
			}
		}
		Display.setTitle(config.title);
		Display.setResizable(config.resizable);
		Display.setInitialBackground(config.initialBackgroundColor.r, config.initialBackgroundColor.g,
			config.initialBackgroundColor.b);

		Display.setLocation(config.x, config.y);
		createDisplayPixelFormat();
		initiateGLInstances();
	} ##FSTMerge## void setupDisplay () throws LWJGLException {
		if (canvas != null) {
			Display.setParent(canvas);
		} else {
			boolean displayCreated = setDisplayMode(config.width, config.height, config.fullscreen);
			if (!displayCreated) {
				if (config.setDisplayModeCallback != null) {
					config = config.setDisplayModeCallback.onFailure(config);
					if (config != null) {
						displayCreated = setDisplayMode(config.width, config.height, config.fullscreen);
					}
				}
				if (!displayCreated) {
					throw new GdxRuntimeException("Couldn't set display mode " + config.width + "x" + config.height + ", fullscreen: "
						+ config.fullscreen);
				}
			}
			if (config.iconPaths.size > 0) {
				ByteBuffer[] icons = new ByteBuffer[config.iconPaths.size];
				for (int i = 0, n = config.iconPaths.size; i < n; i++) {
					Pixmap pixmap = new Pixmap(Gdx.files.getFileHandle(config.iconPaths.get(i), config.iconFileTypes.get(i)));
					if (pixmap.getFormat() != Format.RGBA8888) {
						Pixmap rgba = new Pixmap(pixmap.getWidth(), pixmap.getHeight(), Format.RGBA8888);
						rgba.drawPixmap(pixmap, 0, 0);
						pixmap = rgba;
					}
					icons[i] = ByteBuffer.allocateDirect(pixmap.getPixels().limit());
					icons[i].put(pixmap.getPixels()).flip();
					pixmap.dispose();
				}
				Display.setIcon(icons);
			}
		}
		Display.setTitle(config.title);
		Display.setResizable(config.resizable);
		Display.setInitialBackground(config.initialBackgroundColor.r, config.initialBackgroundColor.g,
			config.initialBackgroundColor.b);

		Display.setLocation(config.x, config.y);
		createDisplayPixelFormat();
		initiateGLInstances();
	} ##FSTMerge## void setupDisplay () throws LWJGLException {
		if (canvas != null) {
			Display.setParent(canvas);
		} else {
			boolean displayCreated = setDisplayMode(config.width, config.height, config.fullscreen);
			if (!displayCreated) {
				if (config.setDisplayModeCallback != null) {
					config = config.setDisplayModeCallback.onFailure(config);
					if (config != null) {
						displayCreated = setDisplayMode(config.width, config.height, config.fullscreen);
					}
				}
				if (!displayCreated) {
					throw new GdxRuntimeException("Couldn't set display mode " + config.width + "x" + config.height + ", fullscreen: "
						+ config.fullscreen);
				}
			}
			if (config.iconPaths.size > 0) {
				ByteBuffer[] icons = new ByteBuffer[config.iconPaths.size];
				for (int i = 0, n = config.iconPaths.size; i < n; i++) {
					Pixmap pixmap = new Pixmap(Gdx.files.getFileHandle(config.iconPaths.get(i), config.iconFileTypes.get(i)));
					if (pixmap.getFormat() != Format.RGBA8888) {
						Pixmap rgba = new Pixmap(pixmap.getWidth(), pixmap.getHeight(), Format.RGBA8888);
						rgba.drawPixmap(pixmap, 0, 0);
						pixmap = rgba;
					}
					icons[i] = ByteBuffer.allocateDirect(pixmap.getPixels().limit());
					icons[i].put(pixmap.getPixels()).flip();
					pixmap.dispose();
				}
				Display.setIcon(icons);
			}
		}
		Display.setTitle(config.title);
		Display.setResizable(config.resizable);
		Display.setInitialBackground(config.initialBackgroundColor.r, config.initialBackgroundColor.g,
			config.initialBackgroundColor.b);

		Display.setLocation(config.x, config.y);
		createDisplayPixelFormat();
		initiateGLInstances();
	}
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGraphics.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ private void createDisplayPixelFormat () {
		try {
			if (config.useGL30) {
				ContextAttribs context = new ContextAttribs(3, 2).withForwardCompatible(false).withProfileCore(true);
				try {
					Display.create(new PixelFormat(config.r + config.g + config.b, config.a, config.depth, config.stencil,
						config.samples), context);
				} catch (Exception e) {
					System.out.println("LwjglGraphics: couldn't create OpenGL 3.2+ core profile context");
					throw e;
				}
				System.out.println("LwjglGraphics: created OpenGL 3.2+ core profile context. This is experimental!");
			} else {
				Display
					.create(new PixelFormat(config.r + config.g + config.b, config.a, config.depth, config.stencil, config.samples));
			}
			bufferFormat = new BufferFormat(config.r, config.g, config.b, config.a, config.depth, config.stencil, config.samples,
				false);
		} catch (Exception ex) {
			Display.destroy();
			try {
				Thread.sleep(200);
			} catch (InterruptedException ignored) {
			}
			try {
				Display.create(new PixelFormat(0, 16, 8));
				if (getDesktopDisplayMode().bitsPerPixel == 16) {
					bufferFormat = new BufferFormat(5, 6, 5, 0, 16, 8, 0, false);
				}
				if (getDesktopDisplayMode().bitsPerPixel == 24) {
					bufferFormat = new BufferFormat(8, 8, 8, 0, 16, 8, 0, false);
				}
				if (getDesktopDisplayMode().bitsPerPixel == 32) {
					bufferFormat = new BufferFormat(8, 8, 8, 8, 16, 8, 0, false);
				}
			} catch (Exception ex2) {
				Display.destroy();
				try {
					Thread.sleep(200);
				} catch (InterruptedException ignored) {
				}
				try {
					Display.create(new PixelFormat());
				} catch (Exception ex3) {
					if (!softwareMode && config.allowSoftwareMode) {
						softwareMode = true;
						System.setProperty("org.lwjgl.opengl.Display.allowSoftwareOpenGL", "true");
						createDisplayPixelFormat();
						return;
					}
					String glInfo = glInfo();
					throw new GdxRuntimeException("OpenGL is not supported by the video driver"
						+ (glInfo.isEmpty() ? "." : (":" + glInfo())), ex3);
				}
				if (getDesktopDisplayMode().bitsPerPixel == 16) {
					bufferFormat = new BufferFormat(5, 6, 5, 0, 8, 0, 0, false);
				}
				if (getDesktopDisplayMode().bitsPerPixel == 24) {
					bufferFormat = new BufferFormat(8, 8, 8, 0, 8, 0, 0, false);
				}
				if (getDesktopDisplayMode().bitsPerPixel == 32) {
					bufferFormat = new BufferFormat(8, 8, 8, 8, 8, 0, 0, false);
				}
			}
		}
	} ##FSTMerge## private void createDisplayPixelFormat () {
		try {
			if (config.useGL30) {
				ContextAttribs context = new ContextAttribs(3, 2).withForwardCompatible(false).withProfileCore(true);
				try {
					Display.create(new PixelFormat(config.r + config.g + config.b, config.a, config.depth, config.stencil,
						config.samples), context);
				} catch (Exception e) {
					Display.create(new PixelFormat(config.r + config.g + config.b, config.a, config.depth, config.stencil,
						config.samples), context);
					System.out.println("LwjglGraphics: couldn't create OpenGL 3.2+ core profile context");
				}
				System.out.println("LwjglGraphics: created OpenGL 3.2+ core profile context. This is experimental!");
			} else {
				Display
					.create(new PixelFormat(config.r + config.g + config.b, config.a, config.depth, config.stencil, config.samples));
			}
			bufferFormat = new BufferFormat(config.r, config.g, config.b, config.a, config.depth, config.stencil, config.samples,
				false);
		} catch (Exception ex) {
			Display.destroy();
			try {
				Thread.sleep(200);
			} catch (InterruptedException ignored) {
			}
			try {
				Display.create(new PixelFormat(0, 16, 8));
				if (getDesktopDisplayMode().bitsPerPixel == 16) {
					bufferFormat = new BufferFormat(5, 6, 5, 0, 16, 8, 0, false);
				}
				if (getDesktopDisplayMode().bitsPerPixel == 24) {
					bufferFormat = new BufferFormat(8, 8, 8, 0, 16, 8, 0, false);
				}
				if (getDesktopDisplayMode().bitsPerPixel == 32) {
					bufferFormat = new BufferFormat(8, 8, 8, 8, 16, 8, 0, false);
				}
			} catch (Exception ex2) {
				Display.destroy();
				try {
					Thread.sleep(200);
				} catch (InterruptedException ignored) {
				}
				try {
					Display.create(new PixelFormat());
				} catch (Exception ex3) {
					if (!softwareMode && config.allowSoftwareMode) {
						softwareMode = true;
						System.setProperty("org.lwjgl.opengl.Display.allowSoftwareOpenGL", "true");
						createDisplayPixelFormat();
						return;
					}
					String glInfo = glInfo();
					throw new GdxRuntimeException("OpenGL is not supported by the video driver"
						+ (glInfo.isEmpty() ? "." : (":" + glInfo())), ex3);
				}
				if (getDesktopDisplayMode().bitsPerPixel == 16) {
					bufferFormat = new BufferFormat(5, 6, 5, 0, 8, 0, 0, false);
				}
				if (getDesktopDisplayMode().bitsPerPixel == 24) {
					bufferFormat = new BufferFormat(8, 8, 8, 0, 8, 0, 0, false);
				}
				if (getDesktopDisplayMode().bitsPerPixel == 32) {
					bufferFormat = new BufferFormat(8, 8, 8, 8, 8, 0, 0, false);
				}
			}
		}
	} ##FSTMerge## private void createDisplayPixelFormat () {
		try {
			if (config.useGL30) {
				ContextAttribs context = new ContextAttribs(3, 2).withForwardCompatible(false).withProfileCore(true);
				try {
					Display.create(new PixelFormat(config.r + config.g + config.b, config.a, config.depth, config.stencil,
						config.samples), context);
				} catch (Exception e) {
					Display.create(new PixelFormat(config.r + config.g + config.b, config.a, config.depth, config.stencil,
						config.samples), context);
					System.out.println("LwjglGraphics: couldn't create OpenGL 3.2+ core profile context");
				}
				System.out.println("LwjglGraphics: created OpenGL 3.2+ core profile context. This is experimental!");
			} else {
				Display
					.create(new PixelFormat(config.r + config.g + config.b, config.a, config.depth, config.stencil, config.samples));
			}
			bufferFormat = new BufferFormat(config.r, config.g, config.b, config.a, config.depth, config.stencil, config.samples,
				false);
		} catch (Exception ex) {
			Display.destroy();
			try {
				Thread.sleep(200);
			} catch (InterruptedException ignored) {
			}
			try {
				Display.create(new PixelFormat(0, 16, 8));
				if (getDesktopDisplayMode().bitsPerPixel == 16) {
					bufferFormat = new BufferFormat(5, 6, 5, 0, 16, 8, 0, false);
				}
				if (getDesktopDisplayMode().bitsPerPixel == 24) {
					bufferFormat = new BufferFormat(8, 8, 8, 0, 16, 8, 0, false);
				}
				if (getDesktopDisplayMode().bitsPerPixel == 32) {
					bufferFormat = new BufferFormat(8, 8, 8, 8, 16, 8, 0, false);
				}
			} catch (Exception ex2) {
				Display.destroy();
				try {
					Thread.sleep(200);
				} catch (InterruptedException ignored) {
				}
				try {
					Display.create(new PixelFormat());
				} catch (Exception ex3) {
					if (!softwareMode && config.allowSoftwareMode) {
						softwareMode = true;
						System.setProperty("org.lwjgl.opengl.Display.allowSoftwareOpenGL", "true");
						createDisplayPixelFormat();
						return;
					}
					String glInfo = glInfo();
					throw new GdxRuntimeException("OpenGL is not supported by the video driver"
						+ (glInfo.isEmpty() ? "." : (":" + glInfo())), ex3);
				}
				if (getDesktopDisplayMode().bitsPerPixel == 16) {
					bufferFormat = new BufferFormat(5, 6, 5, 0, 8, 0, 0, false);
				}
				if (getDesktopDisplayMode().bitsPerPixel == 24) {
					bufferFormat = new BufferFormat(8, 8, 8, 0, 8, 0, 0, false);
				}
				if (getDesktopDisplayMode().bitsPerPixel == 32) {
					bufferFormat = new BufferFormat(8, 8, 8, 8, 8, 0, 0, false);
				}
			}
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGraphics.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public boolean setDisplayMode (DisplayMode displayMode) {
		org.lwjgl.opengl.DisplayMode mode = ((LwjglDisplayMode)displayMode).mode;		
		try {
			if (!mode.isFullscreenCapable()) {
				Display.setDisplayMode(mode);
			} else {
				Display.setDisplayModeAndFullscreen(mode);
			}			
			float scaleFactor = Display.getPixelScaleFactor();
			config.width = (int)(mode.getWidth() * scaleFactor);
			config.height = (int)(mode.getHeight() * scaleFactor);
			if (Gdx.gl != null) Gdx.gl.glViewport(0, 0, config.width, config.height);
			resize = true;
			return true;
		} catch (LWJGLException e) {
			return false;
		}
	} ##FSTMerge## @Override
	public boolean setDisplayMode (DisplayMode displayMode) {
		org.lwjgl.opengl.DisplayMode mode = ((LwjglDisplayMode)displayMode).mode;
		try {
			if (!mode.isFullscreenCapable()) {
				Display.setDisplayMode(mode);
			} else {
				Display.setDisplayModeAndFullscreen(mode);
			}
			if (Gdx.gl != null) Gdx.gl.glViewport(0, 0, displayMode.width, displayMode.height);
			config.width = displayMode.width;
			config.height = displayMode.height;
			resize = true;
			return true;
		} catch (LWJGLException e) {
			return false;
		}
	} ##FSTMerge## @Override
	public boolean setDisplayMode (DisplayMode displayMode) {
		org.lwjgl.opengl.DisplayMode mode = ((LwjglDisplayMode)displayMode).mode;
		try {
			if (!mode.isFullscreenCapable()) {
				Display.setDisplayMode(mode);
			} else {
				Display.setDisplayModeAndFullscreen(mode);
			}
			if (Gdx.gl != null) Gdx.gl.glViewport(0, 0, displayMode.width, displayMode.height);
			config.width = displayMode.width;
			config.height = displayMode.height;
			resize = true;
			return true;
		} catch (LWJGLException e) {
			return false;
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGraphics.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public boolean setDisplayMode (int width, int height, boolean fullscreen) {
		if (getWidth() == width && getHeight() == height && Display.isFullscreen() == fullscreen) {
			return true;
		}

		try {
			org.lwjgl.opengl.DisplayMode targetDisplayMode = null;

			if (fullscreen) {
				org.lwjgl.opengl.DisplayMode[] modes = Display.getAvailableDisplayModes();
				int freq = 0;

				for (int i = 0; i < modes.length; i++) {
					org.lwjgl.opengl.DisplayMode current = modes[i];

					if ((current.getWidth() == width) && (current.getHeight() == height)) {
						if ((targetDisplayMode == null) || (current.getFrequency() >= freq)) {
							if ((targetDisplayMode == null) || (current.getBitsPerPixel() > targetDisplayMode.getBitsPerPixel())) {
								targetDisplayMode = current;
								freq = targetDisplayMode.getFrequency();
							}
						}

						// if we've found a match for bpp and frequence against the
						// original display mode then it's probably best to go for this one
						// since it's most likely compatible with the monitor
						if ((current.getBitsPerPixel() == Display.getDesktopDisplayMode().getBitsPerPixel())
							&& (current.getFrequency() == Display.getDesktopDisplayMode().getFrequency())) {
							targetDisplayMode = current;
							break;
						}
					}
				}
			} else {
				targetDisplayMode = new org.lwjgl.opengl.DisplayMode(width, height);
			}

			if (targetDisplayMode == null) {
				return false;
			}

			boolean resizable = !fullscreen && config.resizable;
			
			Display.setDisplayMode(targetDisplayMode);
			Display.setFullscreen(fullscreen);
			// Workaround for bug in LWJGL whereby resizable state is lost on DisplayMode change
			if (resizable == Display.isResizable()) {
				Display.setResizable(!resizable);
			}
			Display.setResizable(resizable);
			
			float scaleFactor = Display.getPixelScaleFactor();
			config.width = (int)(targetDisplayMode.getWidth() * scaleFactor);
			config.height = (int)(targetDisplayMode.getHeight() * scaleFactor);
			if (Gdx.gl != null) Gdx.gl.glViewport(0, 0, config.width, config.height);
			resize = true;
			return true;
		} catch (LWJGLException e) {
			return false;
		}
	} ##FSTMerge## @Override
	public boolean setDisplayMode (int width, int height, boolean fullscreen) {
		if (getWidth() == width && getHeight() == height && Display.isFullscreen() == fullscreen) {
			return true;
		}

		try {
			org.lwjgl.opengl.DisplayMode targetDisplayMode = null;

			if (fullscreen) {
				org.lwjgl.opengl.DisplayMode[] modes = Display.getAvailableDisplayModes();
				int freq = 0;

				for (int i = 0; i < modes.length; i++) {
					org.lwjgl.opengl.DisplayMode current = modes[i];

					if ((current.getWidth() == width) && (current.getHeight() == height)) {
						if ((targetDisplayMode == null) || (current.getFrequency() >= freq)) {
							if ((targetDisplayMode == null) || (current.getBitsPerPixel() > targetDisplayMode.getBitsPerPixel())) {
								targetDisplayMode = current;
								freq = targetDisplayMode.getFrequency();
							}
						}

						// if we've found a match for bpp and frequence against the
						// original display mode then it's probably best to go for this one
						// since it's most likely compatible with the monitor
						if ((current.getBitsPerPixel() == Display.getDesktopDisplayMode().getBitsPerPixel())
							&& (current.getFrequency() == Display.getDesktopDisplayMode().getFrequency())) {
							targetDisplayMode = current;
							break;
						}
					}
				}
			} else {
				targetDisplayMode = new org.lwjgl.opengl.DisplayMode(width, height);
			}

			if (targetDisplayMode == null) {
				return false;
			}

			Display.setDisplayMode(targetDisplayMode);
			Display.setFullscreen(fullscreen);
			if (Gdx.gl != null) Gdx.gl.glViewport(0, 0, targetDisplayMode.getWidth(), targetDisplayMode.getHeight());
			config.width = targetDisplayMode.getWidth();
			config.height = targetDisplayMode.getHeight();
			resize = true;
			return true;
		} catch (LWJGLException e) {
			return false;
		}
	} ##FSTMerge## @Override
	public boolean setDisplayMode (int width, int height, boolean fullscreen) {
		if (getWidth() == width && getHeight() == height && Display.isFullscreen() == fullscreen) {
			return true;
		}

		try {
			org.lwjgl.opengl.DisplayMode targetDisplayMode = null;

			if (fullscreen) {
				org.lwjgl.opengl.DisplayMode[] modes = Display.getAvailableDisplayModes();
				int freq = 0;

				for (int i = 0; i < modes.length; i++) {
					org.lwjgl.opengl.DisplayMode current = modes[i];

					if ((current.getWidth() == width) && (current.getHeight() == height)) {
						if ((targetDisplayMode == null) || (current.getFrequency() >= freq)) {
							if ((targetDisplayMode == null) || (current.getBitsPerPixel() > targetDisplayMode.getBitsPerPixel())) {
								targetDisplayMode = current;
								freq = targetDisplayMode.getFrequency();
							}
						}

						// if we've found a match for bpp and frequence against the
						// original display mode then it's probably best to go for this one
						// since it's most likely compatible with the monitor
						if ((current.getBitsPerPixel() == Display.getDesktopDisplayMode().getBitsPerPixel())
							&& (current.getFrequency() == Display.getDesktopDisplayMode().getFrequency())) {
							targetDisplayMode = current;
							break;
						}
					}
				}
			} else {
				targetDisplayMode = new org.lwjgl.opengl.DisplayMode(width, height);
			}

			if (targetDisplayMode == null) {
				return false;
			}

			Display.setDisplayMode(targetDisplayMode);
			Display.setFullscreen(fullscreen);
			if (Gdx.gl != null) Gdx.gl.glViewport(0, 0, targetDisplayMode.getWidth(), targetDisplayMode.getHeight());
			config.width = targetDisplayMode.getWidth();
			config.height = targetDisplayMode.getHeight();
			resize = true;
			return true;
		} catch (LWJGLException e) {
			return false;
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGraphics.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final ##FSTMerge## public final
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/gdx/src/com/badlogic/gdx/maps/tiled/TmxMapHelper.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final int FLAG_FLIP_HORIZONTALLY = 0x80000000; ##FSTMerge## static final int FLAG_FLIP_HORIZONTALLY = 0x80000000;
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/gdx/src/com/badlogic/gdx/maps/tiled/TmxMapHelper.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final int FLAG_FLIP_VERTICALLY = 0x40000000; ##FSTMerge## static final int FLAG_FLIP_VERTICALLY = 0x40000000;
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/gdx/src/com/badlogic/gdx/maps/tiled/TmxMapHelper.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final int FLAG_FLIP_DIAGONALLY = 0x20000000; ##FSTMerge## static final int FLAG_FLIP_DIAGONALLY = 0x20000000;
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/gdx/src/com/badlogic/gdx/maps/tiled/TmxMapHelper.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final int MASK_CLEAR = 0xE0000000; ##FSTMerge## static final int MASK_CLEAR = 0xE0000000;
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/gdx/src/com/badlogic/gdx/maps/tiled/TmxMapHelper.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private TmxMapHelper () {

	} ##FSTMerge## private TmxMapHelper () {

	}
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/gdx/src/com/badlogic/gdx/maps/tiled/TmxMapHelper.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static public int[] getTileIds (Element element, int width, int height) {
		Element data = element.getChildByName("data");
		String encoding = data.getAttribute("encoding", null);
		if (encoding == null) { // no 'encoding' attribute means that the encoding is XML
			throw new GdxRuntimeException("Unsupported encoding (XML) for TMX Layer Data");
		}
		int[] ids = new int[width * height];
		if (encoding.equals("csv")) {
			String[] array = data.getText().split(",");
			for (int i = 0; i < array.length; i++)
				ids[i] = (int)Long.parseLong(array[i].trim());
		} else {
			if (true)
				if (encoding.equals("base64")) {
					InputStream is = null;
					try {
						String compression = data.getAttribute("compression", null);
						byte[] bytes = Base64Coder.decode(data.getText());
						if (compression == null)
							is = new ByteArrayInputStream(bytes);
						else if (compression.equals("gzip"))
							is = new GZIPInputStream(new ByteArrayInputStream(bytes), bytes.length);
						else if (compression.equals("zlib"))
							is = new InflaterInputStream(new ByteArrayInputStream(bytes));
						else
							throw new GdxRuntimeException("Unrecognised compression (" + compression + ") for TMX Layer Data");

						byte[] temp = new byte[4];
						for (int y = 0; y < height; y++) {
							for (int x = 0; x < width; x++) {
								int read = is.read(temp);
								while (read < temp.length) {
									int curr = is.read(temp, read, temp.length - read);
									if (curr == -1) break;
									read += curr;
								}
								if (read != temp.length)
									throw new GdxRuntimeException("Error Reading TMX Layer Data: Premature end of tile data");
								ids[y * width + x] = unsignedByteToInt(temp[0]) | unsignedByteToInt(temp[1]) << 8
									| unsignedByteToInt(temp[2]) << 16 | unsignedByteToInt(temp[3]) << 24;
							}
						}
					} catch (IOException e) {
						throw new GdxRuntimeException("Error Reading TMX Layer Data - IOException: " + e.getMessage());
					} finally {
						StreamUtils.closeQuietly(is);
					}
				} else {
					// any other value of 'encoding' is one we're not aware of, probably a feature of a future version of Tiled
					// or another editor
					throw new GdxRuntimeException("Unrecognised encoding (" + encoding + ") for TMX Layer Data");
				}
		}
		return ids;
	} ##FSTMerge## static public int[] getTileIds (Element element, int width, int height) {
		Element data = element.getChildByName("data");
		String encoding = data.getAttribute("encoding", null);
		if (encoding == null) { // no 'encoding' attribute means that the encoding is XML
			throw new GdxRuntimeException("Unsupported encoding (XML) for TMX Layer Data");
		}
		int[] ids = new int[width * height];
		if (encoding.equals("csv")) {
			String[] array = data.getText().split(",");
			for (int i = 0; i < array.length; i++)
				ids[i] = (int)Long.parseLong(array[i].trim());
		} else {
			if (true)
				if (encoding.equals("base64")) {
					InputStream is = null;
					try {
						String compression = data.getAttribute("compression", null);
						byte[] bytes = Base64Coder.decode(data.getText());
						if (compression == null)
							is = new ByteArrayInputStream(bytes);
						else if (compression.equals("gzip"))
							is = new GZIPInputStream(new ByteArrayInputStream(bytes), bytes.length);
						else if (compression.equals("zlib"))
							is = new InflaterInputStream(new ByteArrayInputStream(bytes));
						else
							throw new GdxRuntimeException("Unrecognised compression (" + compression + ") for TMX Layer Data");

						byte[] temp = new byte[4];
						for (int y = 0; y < height; y++) {
							for (int x = 0; x < width; x++) {
								int read = is.read(temp);
								while (read < temp.length) {
									int curr = is.read(temp, read, temp.length - read);
									if (curr == -1) break;
									read += curr;
								}
								if (read != temp.length)
									throw new GdxRuntimeException("Error Reading TMX Layer Data: Premature end of tile data");
								ids[y * width + x] = unsignedByteToInt(temp[0]) | unsignedByteToInt(temp[1]) << 8
									| unsignedByteToInt(temp[2]) << 16 | unsignedByteToInt(temp[3]) << 24;
							}
						}
					} catch (IOException e) {
						throw new GdxRuntimeException("Error Reading TMX Layer Data - IOException: " + e.getMessage());
					} finally {
						StreamUtils.closeQuietly(is);
					}
				} else {
					// any other value of 'encoding' is one we're not aware of, probably a feature of a future version of Tiled
					// or another editor
					throw new GdxRuntimeException("Unrecognised encoding (" + encoding + ") for TMX Layer Data");
				}
		}
		return ids;
	}
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/gdx/src/com/badlogic/gdx/maps/tiled/TmxMapHelper.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static public int unsignedByteToInt (byte b) {
		return (int)b & 0xFF;
	} ##FSTMerge## static public int unsignedByteToInt (byte b) {
		return (int)b & 0xFF;
	}
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/gdx/src/com/badlogic/gdx/maps/tiled/TmxMapHelper.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/extensions/gdx-bullet/jni/swig-src/extras/com/badlogic/gdx/physics/bullet/extras/SWIGTYPE_p_btGImpactMeshShape.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private long swigCPtr; ##FSTMerge## private long swigCPtr;
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/extensions/gdx-bullet/jni/swig-src/extras/com/badlogic/gdx/physics/bullet/extras/SWIGTYPE_p_btGImpactMeshShape.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## protected SWIGTYPE_p_btGImpactMeshShape(long cPtr, boolean futureUse) {
    swigCPtr = cPtr;
  } ##FSTMerge## protected SWIGTYPE_p_btGImpactMeshShape(long cPtr, boolean futureUse) {
    swigCPtr = cPtr;
  }
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/extensions/gdx-bullet/jni/swig-src/extras/com/badlogic/gdx/physics/bullet/extras/SWIGTYPE_p_btGImpactMeshShape.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## protected SWIGTYPE_p_btGImpactMeshShape() {
    swigCPtr = 0;
  } ##FSTMerge## protected SWIGTYPE_p_btGImpactMeshShape() {
    swigCPtr = 0;
  }
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/extensions/gdx-bullet/jni/swig-src/extras/com/badlogic/gdx/physics/bullet/extras/SWIGTYPE_p_btGImpactMeshShape.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## protected static long getCPtr(SWIGTYPE_p_btGImpactMeshShape obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  } ##FSTMerge## protected static long getCPtr(SWIGTYPE_p_btGImpactMeshShape obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/extensions/gdx-bullet/jni/swig-src/extras/com/badlogic/gdx/physics/bullet/extras/SWIGTYPE_p_btGImpactMeshShape.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Library("UIKit") @NativeClass/*</annotations>*/
/*<visibility>*/public ##FSTMerge## @Library("UIKit") @NativeClass/*</annotations>*/
/*<visibility>*/public
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/UIScreen.java
############## CONFLICT ##############
Conflict type: ExtendsList
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## extends /*<extends>*/NSObject ##FSTMerge## extends /*<extends>*/NSObject
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/UIScreen.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static ##FSTMerge## public static
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/UIScreen.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static NSObject observeDidConnect(final VoidBlock1<UIScreen> block) {
            return NSNotificationCenter.getDefaultCenter().addObserver(DidConnectNotification(), null, NSOperationQueue.getMainQueue(), new VoidBlock1<NSNotification>() {
                @Override
                public void invoke(NSNotification a) {
                    block.invoke((UIScreen) a.getObject());
                }
            });
        } ##FSTMerge## public static NSObject observeDidConnect(final VoidBlock1<UIScreen> block) {
            return NSNotificationCenter.getDefaultCenter().addObserver(DidConnectNotification(), null, NSOperationQueue.getMainQueue(), new VoidBlock1<NSNotification>() {
                @Override
                public void invoke(NSNotification a) {
                    block.invoke((UIScreen) a.getObject());
                }
            });
        }
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/UIScreen.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static NSObject observeDidDisconnect(final VoidBlock1<UIScreen> block) {
            return NSNotificationCenter.getDefaultCenter().addObserver(DidDisconnectNotification(), null, NSOperationQueue.getMainQueue(), new VoidBlock1<NSNotification>() {
                @Override
                public void invoke(NSNotification a) {
                    block.invoke((UIScreen) a.getObject());
                }
            });
        } ##FSTMerge## public static NSObject observeDidDisconnect(final VoidBlock1<UIScreen> block) {
            return NSNotificationCenter.getDefaultCenter().addObserver(DidDisconnectNotification(), null, NSOperationQueue.getMainQueue(), new VoidBlock1<NSNotification>() {
                @Override
                public void invoke(NSNotification a) {
                    block.invoke((UIScreen) a.getObject());
                }
            });
        }
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/UIScreen.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static NSObject observeModeDidChange(final VoidBlock1<UIScreen> block) {
            return NSNotificationCenter.getDefaultCenter().addObserver(ModeDidChangeNotification(), null, NSOperationQueue.getMainQueue(), new VoidBlock1<NSNotification>() {
                @Override
                public void invoke(NSNotification a) {
                    block.invoke((UIScreen) a.getObject());
                }
            });
        } ##FSTMerge## public static NSObject observeModeDidChange(final VoidBlock1<UIScreen> block) {
            return NSNotificationCenter.getDefaultCenter().addObserver(ModeDidChangeNotification(), null, NSOperationQueue.getMainQueue(), new VoidBlock1<NSNotification>() {
                @Override
                public void invoke(NSNotification a) {
                    block.invoke((UIScreen) a.getObject());
                }
            });
        }
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/UIScreen.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static NSObject observeBrightnessDidChange(final VoidBlock1<UIScreen> block) {
            return NSNotificationCenter.getDefaultCenter().addObserver(BrightnessDidChangeNotification(), null, NSOperationQueue.getMainQueue(), new VoidBlock1<NSNotification>() {
                @Override
                public void invoke(NSNotification a) {
                    block.invoke((UIScreen) a.getObject());
                }
            });
        } ##FSTMerge## public static NSObject observeBrightnessDidChange(final VoidBlock1<UIScreen> block) {
            return NSNotificationCenter.getDefaultCenter().addObserver(BrightnessDidChangeNotification(), null, NSOperationQueue.getMainQueue(), new VoidBlock1<NSNotification>() {
                @Override
                public void invoke(NSNotification a) {
                    block.invoke((UIScreen) a.getObject());
                }
            });
        }
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/UIScreen.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static ##FSTMerge## public static
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/UIScreen.java
############## CONFLICT ##############
Conflict type: ExtendsList
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## extends Ptr<UIScreen, UIScreenPtr> ##FSTMerge## extends Ptr<UIScreen, UIScreenPtr>
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/UIScreen.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public UIScreen() {} ##FSTMerge## public UIScreen() {}
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/UIScreen.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## protected UIScreen(SkipInit skipInit) { super(skipInit); } ##FSTMerge## protected UIScreen(SkipInit skipInit) { super(skipInit); }
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/UIScreen.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Property(selector = "bounds")
    public native @ByVal CGRect getBounds(); ##FSTMerge## @Property(selector = "bounds")
    public native @ByVal CGRect getBounds();
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/UIScreen.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Property(selector = "applicationFrame")
    public native @ByVal CGRect getApplicationFrame(); ##FSTMerge## @Property(selector = "applicationFrame")
    public native @ByVal CGRect getApplicationFrame();
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/UIScreen.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Property(selector = "scale")
    public native @MachineSizedFloat double getScale(); ##FSTMerge## @Property(selector = "scale")
    public native @MachineSizedFloat double getScale();
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/UIScreen.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Property(selector = "nativeScale")
    public native @MachineSizedFloat double getNativeScale(); ##FSTMerge## @Property(selector = "nativeScale")
    public native @MachineSizedFloat double getNativeScale();
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/UIScreen.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Property(selector = "availableModes")
    public native NSArray<UIScreenMode> getAvailableModes(); ##FSTMerge## @Property(selector = "availableModes")
    public native NSArray<UIScreenMode> getAvailableModes();
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/UIScreen.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Property(selector = "preferredMode")
    public native UIScreenMode getPreferredMode(); ##FSTMerge## @Property(selector = "preferredMode")
    public native UIScreenMode getPreferredMode();
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/UIScreen.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Property(selector = "currentMode")
    public native UIScreenMode getCurrentMode(); ##FSTMerge## @Property(selector = "currentMode")
    public native UIScreenMode getCurrentMode();
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/UIScreen.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Property(selector = "setCurrentMode:")
    public native void setCurrentMode(UIScreenMode v); ##FSTMerge## @Property(selector = "setCurrentMode:")
    public native void setCurrentMode(UIScreenMode v);
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/UIScreen.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Property(selector = "overscanCompensation")
    public native UIScreenOverscanCompensation getOverscanCompensation(); ##FSTMerge## @Property(selector = "overscanCompensation")
    public native UIScreenOverscanCompensation getOverscanCompensation();
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/UIScreen.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Property(selector = "setOverscanCompensation:")
    public native void setOverscanCompensation(UIScreenOverscanCompensation v); ##FSTMerge## @Property(selector = "setOverscanCompensation:")
    public native void setOverscanCompensation(UIScreenOverscanCompensation v);
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/UIScreen.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Property(selector = "mirroredScreen")
    public native UIScreen getMirroredScreen(); ##FSTMerge## @Property(selector = "mirroredScreen")
    public native UIScreen getMirroredScreen();
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/UIScreen.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Property(selector = "brightness")
    public native @MachineSizedFloat double getBrightness(); ##FSTMerge## @Property(selector = "brightness")
    public native @MachineSizedFloat double getBrightness();
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/UIScreen.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Property(selector = "setBrightness:")
    public native void setBrightness(@MachineSizedFloat double v); ##FSTMerge## @Property(selector = "setBrightness:")
    public native void setBrightness(@MachineSizedFloat double v);
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/UIScreen.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Property(selector = "wantsSoftwareDimming")
    public native boolean isWantsSoftwareDimming(); ##FSTMerge## @Property(selector = "wantsSoftwareDimming")
    public native boolean isWantsSoftwareDimming();
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/UIScreen.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Property(selector = "setWantsSoftwareDimming:")
    public native void setWantsSoftwareDimming(boolean v); ##FSTMerge## @Property(selector = "setWantsSoftwareDimming:")
    public native void setWantsSoftwareDimming(boolean v);
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/UIScreen.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @GlobalValue(symbol="UIScreenDidConnectNotification", optional=true)
    public static native NSString DidConnectNotification(); ##FSTMerge## @GlobalValue(symbol="UIScreenDidConnectNotification", optional=true)
    public static native NSString DidConnectNotification();
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/UIScreen.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @GlobalValue(symbol="UIScreenDidDisconnectNotification", optional=true)
    public static native NSString DidDisconnectNotification(); ##FSTMerge## @GlobalValue(symbol="UIScreenDidDisconnectNotification", optional=true)
    public static native NSString DidDisconnectNotification();
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/UIScreen.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @GlobalValue(symbol="UIScreenModeDidChangeNotification", optional=true)
    public static native NSString ModeDidChangeNotification(); ##FSTMerge## @GlobalValue(symbol="UIScreenModeDidChangeNotification", optional=true)
    public static native NSString ModeDidChangeNotification();
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/UIScreen.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @GlobalValue(symbol="UIScreenBrightnessDidChangeNotification", optional=true)
    public static native NSString BrightnessDidChangeNotification(); ##FSTMerge## @GlobalValue(symbol="UIScreenBrightnessDidChangeNotification", optional=true)
    public static native NSString BrightnessDidChangeNotification();
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/UIScreen.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Method(selector = "displayLinkWithTarget:selector:")
    public native CADisplayLink createDisplayLink(NSObject target, Selector sel); ##FSTMerge## @Method(selector = "displayLinkWithTarget:selector:")
    public native CADisplayLink createDisplayLink(NSObject target, Selector sel);
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/UIScreen.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Method(selector = "screens")
    public static native NSArray<UIScreen> getScreens(); ##FSTMerge## @Method(selector = "screens")
    public static native NSArray<UIScreen> getScreens();
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/UIScreen.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Method(selector = "mainScreen")
    public static native UIScreen getMainScreen(); ##FSTMerge## @Method(selector = "mainScreen")
    public static native UIScreen getMainScreen();
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/UIScreen.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: a1b41309523cfe2e44124a47b01bd90fd733ad40
Parent1 SHA-1: ebabd30cbcf617e194704fdfdcbc2ed615f37e67
Parent2 SHA-1: e4f285b4a85ce8a1a1da9fb38106da6924d6879b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Method(selector = "snapshotViewAfterScreenUpdates:")
    public native UIView snapshotView(boolean afterUpdates); ##FSTMerge## @Method(selector = "snapshotViewAfterScreenUpdates:")
    public native UIView snapshotView(boolean afterUpdates);
File path: /tmp/downloads/libgdx/revisions/rev_ebabd_e4f28/rev_ebabd-e4f28/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/UIScreen.java

==================================================================================================================
Revision: /tmp/downloads/libgdx/revisions/rev_1a410_f5dd8/rev_1a410-f5dd8.revisions
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: b0db238827df0629fa6f6c7d1ec05fbe42a835f3
Parent1 SHA-1: 1a410939753c29556c8d975fbb6916cd8a9a13e0
Parent2 SHA-1: f5dd8f41f615dcdefaf914af5df54de0dfc15457
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_1a410_f5dd8/rev_1a410-f5dd8/tests/gdx-tests/src/com/badlogic/gdx/tests/JsonReaderTest.java
############## CONFLICT ##############
Conflict type: ExtendsList
Merge Commit SHA-1: b0db238827df0629fa6f6c7d1ec05fbe42a835f3
Parent1 SHA-1: 1a410939753c29556c8d975fbb6916cd8a9a13e0
Parent2 SHA-1: f5dd8f41f615dcdefaf914af5df54de0dfc15457
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## extends GdxTest ##FSTMerge## extends GdxTest
File path: /tmp/downloads/libgdx/revisions/rev_1a410_f5dd8/rev_1a410-f5dd8/tests/gdx-tests/src/com/badlogic/gdx/tests/JsonReaderTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: b0db238827df0629fa6f6c7d1ec05fbe42a835f3
Parent1 SHA-1: 1a410939753c29556c8d975fbb6916cd8a9a13e0
Parent2 SHA-1: f5dd8f41f615dcdefaf914af5df54de0dfc15457
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## Json json; ##FSTMerge## Json json;
File path: /tmp/downloads/libgdx/revisions/rev_1a410_f5dd8/rev_1a410-f5dd8/tests/gdx-tests/src/com/badlogic/gdx/tests/JsonReaderTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: b0db238827df0629fa6f6c7d1ec05fbe42a835f3
Parent1 SHA-1: 1a410939753c29556c8d975fbb6916cd8a9a13e0
Parent2 SHA-1: f5dd8f41f615dcdefaf914af5df54de0dfc15457
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void create () {
		json = new Json();

// json.fromJson(Test1.class, //
// "{byteArrayField:[-1\n,-2]}"
// );
// if (true) return;

		Test1 test = new Test1();
		test.booleanField = true;
		test.byteField = 123;
		test.charField = 'Z';
		test.shortField = 12345;
		test.intField = 123456;
		test.longField = 123456789;
		test.floatField = 123.456f;
		test.doubleField = 1.23456d;
		test.BooleanField = true;
		test.ByteField = -12;
		test.CharacterField = 'X';
		test.ShortField = -12345;
		test.IntegerField = -123456;
		test.LongField = -123456789l;
		test.FloatField = -123.3f;
		test.DoubleField = -0.121231d;
		test.stringField = "stringvalue";
		test.byteArrayField = new byte[] {2, 1, 0, -1, -2};
		test.map = new ObjectMap();
		test.map.put("one", 1);
		test.map.put("two", 2);
		test.map.put("nine", 9);
		test.array = new Array();
		test.array.add("meow");
		test.array.add("moo");
		roundTrip(test);

		test = new Test1();
		roundTrip(test);

		test.array = new Array();
		roundTrip(test);

		test.array.add("meow");
		roundTrip(test);

		test.array.add("moo");
		roundTrip(test);

		test = new Test1();
		test.map = new ObjectMap();
		roundTrip(test);

		test.map.put("one", 1);
		roundTrip(test);

		test.map.put("two", 2);
		test.map.put("nine", 9);
		roundTrip(test);

		System.out.println();
		System.out.println("Success!");
	} ##FSTMerge## public void create () {
		json = new Json();

// json.fromJson(Test1.class, //
// "{byteArrayField:[-1\n,-2]}"
// );
// if (true) return;

		Test1 test = new Test1();
		test.booleanField = true;
		test.byteField = 123;
		test.charField = 'Z';
		test.shortField = 12345;
		test.intField = 123456;
		test.longField = 123456789;
		test.floatField = 123.456f;
		test.doubleField = 1.23456d;
		test.BooleanField = true;
		test.ByteField = -12;
		test.CharacterField = 'X';
		test.ShortField = -12345;
		test.IntegerField = -123456;
		test.LongField = -123456789l;
		test.FloatField = -123.3f;
		test.DoubleField = -0.121231d;
		test.stringField = "stringvalue";
		test.byteArrayField = new byte[] {2, 1, 0, -1, -2};
		test.map = new ObjectMap();
		test.map.put("one", 1);
		test.map.put("two", 2);
		test.map.put("nine", 9);
		test.array = new Array();
		test.array.add("meow");
		test.array.add("moo");
		roundTrip(test);

		test = new Test1();
		roundTrip(test);

		test.array = new Array();
		roundTrip(test);

		test.array.add("meow");
		roundTrip(test);

		test.array.add("moo");
		roundTrip(test);

		test = new Test1();
		test.map = new ObjectMap();
		roundTrip(test);

		test.map.put("one", 1);
		roundTrip(test);

		test.map.put("two", 2);
		test.map.put("nine", 9);
		roundTrip(test);

		System.out.println();
		System.out.println("Success!");
	}
File path: /tmp/downloads/libgdx/revisions/rev_1a410_f5dd8/rev_1a410-f5dd8/tests/gdx-tests/src/com/badlogic/gdx/tests/JsonReaderTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: b0db238827df0629fa6f6c7d1ec05fbe42a835f3
Parent1 SHA-1: 1a410939753c29556c8d975fbb6916cd8a9a13e0
Parent2 SHA-1: f5dd8f41f615dcdefaf914af5df54de0dfc15457
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void roundTrip (Object object) {
		String text = json.toJson(object);
		System.out.println(text);
		test(text, object);

		text = json.prettyPrint(object, 130);
		test(text, object);
	} ##FSTMerge## private void roundTrip (Object object) {
		String text = json.toJson(object);
		System.out.println(text);
		test(text, object);

		text = json.prettyPrint(object, 130);
		test(text, object);
	}
File path: /tmp/downloads/libgdx/revisions/rev_1a410_f5dd8/rev_1a410-f5dd8/tests/gdx-tests/src/com/badlogic/gdx/tests/JsonReaderTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: b0db238827df0629fa6f6c7d1ec05fbe42a835f3
Parent1 SHA-1: 1a410939753c29556c8d975fbb6916cd8a9a13e0
Parent2 SHA-1: f5dd8f41f615dcdefaf914af5df54de0dfc15457
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void test (String text, Object object) {
		check(text, object);

		text = text.replace("{", "/*moo*/{/*moo*/");
		check(text, object);

		text = text.replace("}", "/*moo*/}/*moo*/");
		text = text.replace("[", "/*moo*/[/*moo*/");
		text = text.replace("]", "/*moo*/]/*moo*/");
		text = text.replace(":", "/*moo*/:/*moo*/");
		text = text.replace(",", "/*moo*/,/*moo*/");
		check(text, object);

		text = text.replace("/*moo*/", " /*moo*/ ");
		check(text, object);

		text = text.replace("/*moo*/", "// moo\n");
		check(text, object);

		text = text.replace("\n", "\r\n");
		check(text, object);

		text = text.replace(",", "\n");
		check(text, object);

		text = text.replace("\n", "\r\n");
		check(text, object);

		text = text.replace("\r\n", "\r\n\r\n");
		check(text, object);
	} ##FSTMerge## private void test (String text, Object object) {
		check(text, object);

		text = text.replace("{", "/*moo*/{/*moo*/");
		check(text, object);

		text = text.replace("}", "/*moo*/}/*moo*/");
		text = text.replace("[", "/*moo*/[/*moo*/");
		text = text.replace("]", "/*moo*/]/*moo*/");
		text = text.replace(":", "/*moo*/:/*moo*/");
		text = text.replace(",", "/*moo*/,/*moo*/");
		check(text, object);

		text = text.replace("/*moo*/", " /*moo*/ ");
		check(text, object);

		text = text.replace("/*moo*/", "// moo\n");
		check(text, object);

		text = text.replace("\n", "\r\n");
		check(text, object);

		text = text.replace(",", "\n");
		check(text, object);

		text = text.replace("\n", "\r\n");
		check(text, object);

		text = text.replace("\r\n", "\r\n\r\n");
		check(text, object);
	}
File path: /tmp/downloads/libgdx/revisions/rev_1a410_f5dd8/rev_1a410-f5dd8/tests/gdx-tests/src/com/badlogic/gdx/tests/JsonReaderTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: b0db238827df0629fa6f6c7d1ec05fbe42a835f3
Parent1 SHA-1: 1a410939753c29556c8d975fbb6916cd8a9a13e0
Parent2 SHA-1: f5dd8f41f615dcdefaf914af5df54de0dfc15457
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void check (String text, Object object) {
		Object object2 = json.fromJson(object.getClass(), text);
		if (!object.equals(object2)) throw new RuntimeException("Fail!");
	} ##FSTMerge## private void check (String text, Object object) {
		Object object2 = json.fromJson(object.getClass(), text);
		if (!object.equals(object2)) throw new RuntimeException("Fail!");
	}
File path: /tmp/downloads/libgdx/revisions/rev_1a410_f5dd8/rev_1a410-f5dd8/tests/gdx-tests/src/com/badlogic/gdx/tests/JsonReaderTest.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: b0db238827df0629fa6f6c7d1ec05fbe42a835f3
Parent1 SHA-1: 1a410939753c29556c8d975fbb6916cd8a9a13e0
Parent2 SHA-1: f5dd8f41f615dcdefaf914af5df54de0dfc15457
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static public ##FSTMerge## static public
File path: /tmp/downloads/libgdx/revisions/rev_1a410_f5dd8/rev_1a410-f5dd8/tests/gdx-tests/src/com/badlogic/gdx/tests/JsonReaderTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: b0db238827df0629fa6f6c7d1ec05fbe42a835f3
Parent1 SHA-1: 1a410939753c29556c8d975fbb6916cd8a9a13e0
Parent2 SHA-1: f5dd8f41f615dcdefaf914af5df54de0dfc15457
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public boolean booleanField; ##FSTMerge## public boolean booleanField;
File path: /tmp/downloads/libgdx/revisions/rev_1a410_f5dd8/rev_1a410-f5dd8/tests/gdx-tests/src/com/badlogic/gdx/tests/JsonReaderTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: b0db238827df0629fa6f6c7d1ec05fbe42a835f3
Parent1 SHA-1: 1a410939753c29556c8d975fbb6916cd8a9a13e0
Parent2 SHA-1: f5dd8f41f615dcdefaf914af5df54de0dfc15457
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public byte byteField; ##FSTMerge## public byte byteField;
File path: /tmp/downloads/libgdx/revisions/rev_1a410_f5dd8/rev_1a410-f5dd8/tests/gdx-tests/src/com/badlogic/gdx/tests/JsonReaderTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: b0db238827df0629fa6f6c7d1ec05fbe42a835f3
Parent1 SHA-1: 1a410939753c29556c8d975fbb6916cd8a9a13e0
Parent2 SHA-1: f5dd8f41f615dcdefaf914af5df54de0dfc15457
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public char charField; ##FSTMerge## public char charField;
File path: /tmp/downloads/libgdx/revisions/rev_1a410_f5dd8/rev_1a410-f5dd8/tests/gdx-tests/src/com/badlogic/gdx/tests/JsonReaderTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: b0db238827df0629fa6f6c7d1ec05fbe42a835f3
Parent1 SHA-1: 1a410939753c29556c8d975fbb6916cd8a9a13e0
Parent2 SHA-1: f5dd8f41f615dcdefaf914af5df54de0dfc15457
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public short shortField; ##FSTMerge## public short shortField;
File path: /tmp/downloads/libgdx/revisions/rev_1a410_f5dd8/rev_1a410-f5dd8/tests/gdx-tests/src/com/badlogic/gdx/tests/JsonReaderTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: b0db238827df0629fa6f6c7d1ec05fbe42a835f3
Parent1 SHA-1: 1a410939753c29556c8d975fbb6916cd8a9a13e0
Parent2 SHA-1: f5dd8f41f615dcdefaf914af5df54de0dfc15457
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int intField; ##FSTMerge## public int intField;
File path: /tmp/downloads/libgdx/revisions/rev_1a410_f5dd8/rev_1a410-f5dd8/tests/gdx-tests/src/com/badlogic/gdx/tests/JsonReaderTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: b0db238827df0629fa6f6c7d1ec05fbe42a835f3
Parent1 SHA-1: 1a410939753c29556c8d975fbb6916cd8a9a13e0
Parent2 SHA-1: f5dd8f41f615dcdefaf914af5df54de0dfc15457
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public long longField; ##FSTMerge## public long longField;
File path: /tmp/downloads/libgdx/revisions/rev_1a410_f5dd8/rev_1a410-f5dd8/tests/gdx-tests/src/com/badlogic/gdx/tests/JsonReaderTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: b0db238827df0629fa6f6c7d1ec05fbe42a835f3
Parent1 SHA-1: 1a410939753c29556c8d975fbb6916cd8a9a13e0
Parent2 SHA-1: f5dd8f41f615dcdefaf914af5df54de0dfc15457
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public float floatField; ##FSTMerge## public float floatField;
File path: /tmp/downloads/libgdx/revisions/rev_1a410_f5dd8/rev_1a410-f5dd8/tests/gdx-tests/src/com/badlogic/gdx/tests/JsonReaderTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: b0db238827df0629fa6f6c7d1ec05fbe42a835f3
Parent1 SHA-1: 1a410939753c29556c8d975fbb6916cd8a9a13e0
Parent2 SHA-1: f5dd8f41f615dcdefaf914af5df54de0dfc15457
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public double doubleField; ##FSTMerge## public double doubleField;
File path: /tmp/downloads/libgdx/revisions/rev_1a410_f5dd8/rev_1a410-f5dd8/tests/gdx-tests/src/com/badlogic/gdx/tests/JsonReaderTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: b0db238827df0629fa6f6c7d1ec05fbe42a835f3
Parent1 SHA-1: 1a410939753c29556c8d975fbb6916cd8a9a13e0
Parent2 SHA-1: f5dd8f41f615dcdefaf914af5df54de0dfc15457
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Boolean BooleanField; ##FSTMerge## public Boolean BooleanField;
File path: /tmp/downloads/libgdx/revisions/rev_1a410_f5dd8/rev_1a410-f5dd8/tests/gdx-tests/src/com/badlogic/gdx/tests/JsonReaderTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: b0db238827df0629fa6f6c7d1ec05fbe42a835f3
Parent1 SHA-1: 1a410939753c29556c8d975fbb6916cd8a9a13e0
Parent2 SHA-1: f5dd8f41f615dcdefaf914af5df54de0dfc15457
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Byte ByteField; ##FSTMerge## public Byte ByteField;
File path: /tmp/downloads/libgdx/revisions/rev_1a410_f5dd8/rev_1a410-f5dd8/tests/gdx-tests/src/com/badlogic/gdx/tests/JsonReaderTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: b0db238827df0629fa6f6c7d1ec05fbe42a835f3
Parent1 SHA-1: 1a410939753c29556c8d975fbb6916cd8a9a13e0
Parent2 SHA-1: f5dd8f41f615dcdefaf914af5df54de0dfc15457
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Character CharacterField; ##FSTMerge## public Character CharacterField;
File path: /tmp/downloads/libgdx/revisions/rev_1a410_f5dd8/rev_1a410-f5dd8/tests/gdx-tests/src/com/badlogic/gdx/tests/JsonReaderTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: b0db238827df0629fa6f6c7d1ec05fbe42a835f3
Parent1 SHA-1: 1a410939753c29556c8d975fbb6916cd8a9a13e0
Parent2 SHA-1: f5dd8f41f615dcdefaf914af5df54de0dfc15457
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Short ShortField; ##FSTMerge## public Short ShortField;
File path: /tmp/downloads/libgdx/revisions/rev_1a410_f5dd8/rev_1a410-f5dd8/tests/gdx-tests/src/com/badlogic/gdx/tests/JsonReaderTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: b0db238827df0629fa6f6c7d1ec05fbe42a835f3
Parent1 SHA-1: 1a410939753c29556c8d975fbb6916cd8a9a13e0
Parent2 SHA-1: f5dd8f41f615dcdefaf914af5df54de0dfc15457
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Integer IntegerField; ##FSTMerge## public Integer IntegerField;
File path: /tmp/downloads/libgdx/revisions/rev_1a410_f5dd8/rev_1a410-f5dd8/tests/gdx-tests/src/com/badlogic/gdx/tests/JsonReaderTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: b0db238827df0629fa6f6c7d1ec05fbe42a835f3
Parent1 SHA-1: 1a410939753c29556c8d975fbb6916cd8a9a13e0
Parent2 SHA-1: f5dd8f41f615dcdefaf914af5df54de0dfc15457
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Long LongField; ##FSTMerge## public Long LongField;
File path: /tmp/downloads/libgdx/revisions/rev_1a410_f5dd8/rev_1a410-f5dd8/tests/gdx-tests/src/com/badlogic/gdx/tests/JsonReaderTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: b0db238827df0629fa6f6c7d1ec05fbe42a835f3
Parent1 SHA-1: 1a410939753c29556c8d975fbb6916cd8a9a13e0
Parent2 SHA-1: f5dd8f41f615dcdefaf914af5df54de0dfc15457
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Float FloatField; ##FSTMerge## public Float FloatField;
File path: /tmp/downloads/libgdx/revisions/rev_1a410_f5dd8/rev_1a410-f5dd8/tests/gdx-tests/src/com/badlogic/gdx/tests/JsonReaderTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: b0db238827df0629fa6f6c7d1ec05fbe42a835f3
Parent1 SHA-1: 1a410939753c29556c8d975fbb6916cd8a9a13e0
Parent2 SHA-1: f5dd8f41f615dcdefaf914af5df54de0dfc15457
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Double DoubleField; ##FSTMerge## public Double DoubleField;
File path: /tmp/downloads/libgdx/revisions/rev_1a410_f5dd8/rev_1a410-f5dd8/tests/gdx-tests/src/com/badlogic/gdx/tests/JsonReaderTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: b0db238827df0629fa6f6c7d1ec05fbe42a835f3
Parent1 SHA-1: 1a410939753c29556c8d975fbb6916cd8a9a13e0
Parent2 SHA-1: f5dd8f41f615dcdefaf914af5df54de0dfc15457
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public String stringField; ##FSTMerge## public String stringField;
File path: /tmp/downloads/libgdx/revisions/rev_1a410_f5dd8/rev_1a410-f5dd8/tests/gdx-tests/src/com/badlogic/gdx/tests/JsonReaderTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: b0db238827df0629fa6f6c7d1ec05fbe42a835f3
Parent1 SHA-1: 1a410939753c29556c8d975fbb6916cd8a9a13e0
Parent2 SHA-1: f5dd8f41f615dcdefaf914af5df54de0dfc15457
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public byte[] byteArrayField; ##FSTMerge## public byte[] byteArrayField;
File path: /tmp/downloads/libgdx/revisions/rev_1a410_f5dd8/rev_1a410-f5dd8/tests/gdx-tests/src/com/badlogic/gdx/tests/JsonReaderTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: b0db238827df0629fa6f6c7d1ec05fbe42a835f3
Parent1 SHA-1: 1a410939753c29556c8d975fbb6916cd8a9a13e0
Parent2 SHA-1: f5dd8f41f615dcdefaf914af5df54de0dfc15457
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Object object; ##FSTMerge## public Object object;
File path: /tmp/downloads/libgdx/revisions/rev_1a410_f5dd8/rev_1a410-f5dd8/tests/gdx-tests/src/com/badlogic/gdx/tests/JsonReaderTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: b0db238827df0629fa6f6c7d1ec05fbe42a835f3
Parent1 SHA-1: 1a410939753c29556c8d975fbb6916cd8a9a13e0
Parent2 SHA-1: f5dd8f41f615dcdefaf914af5df54de0dfc15457
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ObjectMap<String, Integer> map; ##FSTMerge## public ObjectMap<String, Integer> map;
File path: /tmp/downloads/libgdx/revisions/rev_1a410_f5dd8/rev_1a410-f5dd8/tests/gdx-tests/src/com/badlogic/gdx/tests/JsonReaderTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: b0db238827df0629fa6f6c7d1ec05fbe42a835f3
Parent1 SHA-1: 1a410939753c29556c8d975fbb6916cd8a9a13e0
Parent2 SHA-1: f5dd8f41f615dcdefaf914af5df54de0dfc15457
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Array<String> array; ##FSTMerge## public Array<String> array;
File path: /tmp/downloads/libgdx/revisions/rev_1a410_f5dd8/rev_1a410-f5dd8/tests/gdx-tests/src/com/badlogic/gdx/tests/JsonReaderTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: b0db238827df0629fa6f6c7d1ec05fbe42a835f3
Parent1 SHA-1: 1a410939753c29556c8d975fbb6916cd8a9a13e0
Parent2 SHA-1: f5dd8f41f615dcdefaf914af5df54de0dfc15457
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public boolean equals (Object obj) {
			if (this == obj) return true;
			if (obj == null) return false;
			if (getClass() != obj.getClass()) return false;
			Test1 other = (Test1)obj;
			if (BooleanField == null) {
				if (other.BooleanField != null) return false;
			} else if (!BooleanField.equals(other.BooleanField)) return false;
			if (ByteField == null) {
				if (other.ByteField != null) return false;
			} else if (!ByteField.equals(other.ByteField)) return false;
			if (CharacterField == null) {
				if (other.CharacterField != null) return false;
			} else if (!CharacterField.equals(other.CharacterField)) return false;
			if (DoubleField == null) {
				if (other.DoubleField != null) return false;
			} else if (!DoubleField.equals(other.DoubleField)) return false;
			if (FloatField == null) {
				if (other.FloatField != null) return false;
			} else if (!FloatField.equals(other.FloatField)) return false;
			if (IntegerField == null) {
				if (other.IntegerField != null) return false;
			} else if (!IntegerField.equals(other.IntegerField)) return false;
			if (LongField == null) {
				if (other.LongField != null) return false;
			} else if (!LongField.equals(other.LongField)) return false;
			if (ShortField == null) {
				if (other.ShortField != null) return false;
			} else if (!ShortField.equals(other.ShortField)) return false;
			if (stringField == null) {
				if (other.stringField != null) return false;
			} else if (!stringField.equals(other.stringField)) return false;
			if (booleanField != other.booleanField) return false;

			Object list1 = arrayToList(byteArrayField);
			Object list2 = arrayToList(other.byteArrayField);
			if (list1 != list2) {
				if (list1 == null || list2 == null) return false;
				if (!list1.equals(list2)) return false;
			}

			if (object != other.object) {
				if (object == null || other.object == null) return false;
				if (object != this && !object.equals(other.object)) return false;
			}

			if (map != other.map) {
				if (map == null || other.map == null) return false;
				if (!map.keys().toArray().equals(other.map.keys().toArray())) return false;
				if (!map.values().toArray().equals(other.map.values().toArray())) return false;
			}

			if (array != other.array) {
				if (array == null || other.array == null) return false;
				if (!array.equals(other.array)) return false;
			}

			if (byteField != other.byteField) return false;
			if (charField != other.charField) return false;
			if (Double.doubleToLongBits(doubleField) != Double.doubleToLongBits(other.doubleField)) return false;
			if (Float.floatToIntBits(floatField) != Float.floatToIntBits(other.floatField)) return false;
			if (intField != other.intField) return false;
			if (longField != other.longField) return false;
			if (shortField != other.shortField) return false;
			return true;
		} ##FSTMerge## public boolean equals (Object obj) {
			if (this == obj) return true;
			if (obj == null) return false;
			if (getClass() != obj.getClass()) return false;
			Test1 other = (Test1)obj;
			if (BooleanField == null) {
				if (other.BooleanField != null) return false;
			} else if (!BooleanField.equals(other.BooleanField)) return false;
			if (ByteField == null) {
				if (other.ByteField != null) return false;
			} else if (!ByteField.equals(other.ByteField)) return false;
			if (CharacterField == null) {
				if (other.CharacterField != null) return false;
			} else if (!CharacterField.equals(other.CharacterField)) return false;
			if (DoubleField == null) {
				if (other.DoubleField != null) return false;
			} else if (!DoubleField.equals(other.DoubleField)) return false;
			if (FloatField == null) {
				if (other.FloatField != null) return false;
			} else if (!FloatField.equals(other.FloatField)) return false;
			if (IntegerField == null) {
				if (other.IntegerField != null) return false;
			} else if (!IntegerField.equals(other.IntegerField)) return false;
			if (LongField == null) {
				if (other.LongField != null) return false;
			} else if (!LongField.equals(other.LongField)) return false;
			if (ShortField == null) {
				if (other.ShortField != null) return false;
			} else if (!ShortField.equals(other.ShortField)) return false;
			if (stringField == null) {
				if (other.stringField != null) return false;
			} else if (!stringField.equals(other.stringField)) return false;
			if (booleanField != other.booleanField) return false;

			Object list1 = arrayToList(byteArrayField);
			Object list2 = arrayToList(other.byteArrayField);
			if (list1 != list2) {
				if (list1 == null || list2 == null) return false;
				if (!list1.equals(list2)) return false;
			}

			if (object != other.object) {
				if (object == null || other.object == null) return false;
				if (object != this && !object.equals(other.object)) return false;
			}

			if (map != other.map) {
				if (map == null || other.map == null) return false;
				if (!map.keys().toArray().equals(other.map.keys().toArray())) return false;
				if (!map.values().toArray().equals(other.map.values().toArray())) return false;
			}

			if (array != other.array) {
				if (array == null || other.array == null) return false;
				if (!array.equals(other.array)) return false;
			}

			if (byteField != other.byteField) return false;
			if (charField != other.charField) return false;
			if (Double.doubleToLongBits(doubleField) != Double.doubleToLongBits(other.doubleField)) return false;
			if (Float.floatToIntBits(floatField) != Float.floatToIntBits(other.floatField)) return false;
			if (intField != other.intField) return false;
			if (longField != other.longField) return false;
			if (shortField != other.shortField) return false;
			return true;
		}
File path: /tmp/downloads/libgdx/revisions/rev_1a410_f5dd8/rev_1a410-f5dd8/tests/gdx-tests/src/com/badlogic/gdx/tests/JsonReaderTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: b0db238827df0629fa6f6c7d1ec05fbe42a835f3
Parent1 SHA-1: 1a410939753c29556c8d975fbb6916cd8a9a13e0
Parent2 SHA-1: f5dd8f41f615dcdefaf914af5df54de0dfc15457
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static Object arrayToList (Object array) {
		if (array == null || !array.getClass().isArray()) return array;
		ArrayList list = new ArrayList(java.lang.reflect.Array.getLength(array));
		for (int i = 0, n = java.lang.reflect.Array.getLength(array); i < n; i++)
			list.add(arrayToList(java.lang.reflect.Array.get(array, i)));
		return list;
	} ##FSTMerge## static Object arrayToList (Object array) {
		if (array == null || !array.getClass().isArray()) return array;
		ArrayList list = new ArrayList(java.lang.reflect.Array.getLength(array));
		for (int i = 0, n = java.lang.reflect.Array.getLength(array); i < n; i++)
			list.add(arrayToList(java.lang.reflect.Array.get(array, i)));
		return list;
	}
File path: /tmp/downloads/libgdx/revisions/rev_1a410_f5dd8/rev_1a410-f5dd8/tests/gdx-tests/src/com/badlogic/gdx/tests/JsonReaderTest.java

==================================================================================================================
Revision: /tmp/downloads/libgdx/revisions/rev_5d13a_97c91/rev_5d13a-97c91.revisions
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: d98bcc64826076b89a982f0fd5f43f04f1837dd2
Parent1 SHA-1: 5d13a81cfde85e86b12ece5a8e8dcbdb13d6fe73
Parent2 SHA-1: 97c9179b56fffb1b17ee08bdce4aa8c6aba70c49
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Deprecated
	protected static TextureData createTextureData (FileHandle file, Format format, boolean useMipMaps) {
		return TextureData.Factory.loadFromFile(file, format, useMipMaps);
	} ##FSTMerge## protected static TextureData createTextureData (FileHandle file, Format format, boolean useMipMaps) {
		if (file == null) return null;
		if (file.name().endsWith(".etc1")) return new ETC1TextureData(file, useMipMaps);
		return new FileTextureData(file, null, format, useMipMaps);
	} ##FSTMerge## protected static TextureData createTextureData (FileHandle file, Format format, boolean useMipMaps) {
		if (file == null) return null;
		if (file.name().endsWith(".etc1")) return new ETC1TextureData(file, useMipMaps);
		return new FileTextureData(file, null, format, useMipMaps);
	}
File path: /tmp/downloads/libgdx/revisions/rev_5d13a_97c91/rev_5d13a-97c91/gdx/src/com/badlogic/gdx/graphics/GLTexture.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: d98bcc64826076b89a982f0fd5f43f04f1837dd2
Parent1 SHA-1: 5d13a81cfde85e86b12ece5a8e8dcbdb13d6fe73
Parent2 SHA-1: 97c9179b56fffb1b17ee08bdce4aa8c6aba70c49
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Deprecated
	protected static TextureData createTextureData (FileHandle file, boolean useMipMaps) {
		return createTextureData(file, null, useMipMaps);
	} ##FSTMerge## protected static TextureData createTextureData (FileHandle file, boolean useMipMaps) {
		return createTextureData(file, null, useMipMaps);
	} ##FSTMerge## protected static TextureData createTextureData (FileHandle file, boolean useMipMaps) {
		return createTextureData(file, null, useMipMaps);
	}
File path: /tmp/downloads/libgdx/revisions/rev_5d13a_97c91/rev_5d13a-97c91/gdx/src/com/badlogic/gdx/graphics/GLTexture.java

==================================================================================================================
Revision: /tmp/downloads/libgdx/revisions/rev_b54db_8a84e/rev_b54db-8a84e.revisions
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 84d4079ed9b8c11f4793c05362844b43d8eb2fec
Parent1 SHA-1: b54dbf7917668ca2664ddb61fddcefbcd674a1e9
Parent2 SHA-1: 8a84ebf7df044e0e88c8aaab395dfed236f8aa53
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final int BACKSPACE = 67; ##FSTMerge## public static final int BACKSPACE = 67;
File path: /tmp/downloads/libgdx/revisions/rev_b54db_8a84e/rev_b54db-8a84e/gdx/src/com/badlogic/gdx/Input.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 84d4079ed9b8c11f4793c05362844b43d8eb2fec
Parent1 SHA-1: b54dbf7917668ca2664ddb61fddcefbcd674a1e9
Parent2 SHA-1: 8a84ebf7df044e0e88c8aaab395dfed236f8aa53
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public static String toString (int keycode) {
			if (keycode < 0) {
				throw new IllegalArgumentException("keycode cannot be negative, keycode: " + keycode);
			}
			if (keycode > 255) {
				throw new IllegalArgumentException("keycode cannot be greater than 255, keycode: " + keycode);
			}
			switch (keycode) {
			// META* variables should not be used with this method.
			case UNKNOWN:
				return "Unknown";
			case SOFT_LEFT:
				return "Soft Left";
			case SOFT_RIGHT:
				return "Soft Right";
			case HOME:
				return "Home";
			case BACK:
				return "Back";
			case CALL:
				return "Call";
			case ENDCALL:
				return "End Call";
			case NUM_0:
				return "0";
			case NUM_1:
				return "1";
			case NUM_2:
				return "2";
			case NUM_3:
				return "3";
			case NUM_4:
				return "4";
			case NUM_5:
				return "5";
			case NUM_6:
				return "6";
			case NUM_7:
				return "7";
			case NUM_8:
				return "8";
			case NUM_9:
				return "9";
			case STAR:
				return "*";
			case POUND:
				return "#";
			case UP:
				return "Up";
			case DOWN:
				return "Down";
			case LEFT:
				return "Left";
			case RIGHT:
				return "Right";
			case CENTER:
				return "Center";
			case VOLUME_UP:
				return "Volume Up";
			case VOLUME_DOWN:
				return "Volume Down";
			case POWER:
				return "Power";
			case CAMERA:
				return "Camera";
			case CLEAR:
				return "Clear";
			case A:
				return "A";
			case B:
				return "B";
			case C:
				return "C";
			case D:
				return "D";
			case E:
				return "E";
			case F:
				return "F";
			case G:
				return "G";
			case H:
				return "H";
			case I:
				return "I";
			case J:
				return "J";
			case K:
				return "K";
			case L:
				return "L";
			case M:
				return "M";
			case N:
				return "N";
			case O:
				return "O";
			case P:
				return "P";
			case Q:
				return "Q";
			case R:
				return "R";
			case S:
				return "S";
			case T:
				return "T";
			case U:
				return "U";
			case V:
				return "V";
			case W:
				return "W";
			case X:
				return "X";
			case Y:
				return "Y";
			case Z:
				return "Z";
			case COMMA:
				return ",";
			case PERIOD:
				return ".";
			case ALT_LEFT:
				return "L-Alt";
			case ALT_RIGHT:
				return "R-Alt";
			case SHIFT_LEFT:
				return "L-Shift";
			case SHIFT_RIGHT:
				return "R-Shift";
			case TAB:
				return "Tab";
			case SPACE:
				return "Space";
			case SYM:
				return "SYM";
			case EXPLORER:
				return "Explorer";
			case ENVELOPE:
				return "Envelope";
			case ENTER:
				return "Enter";
			case DEL:
				return "Backspace"; // as per doc, it's the *backward* delete, so *not* "the" delete key
			case GRAVE:
				return "`";
			case MINUS:
				return "-";
			case EQUALS:
				return "=";
			case LEFT_BRACKET:
				return "[";
			case RIGHT_BRACKET:
				return "]";
			case BACKSLASH:
				return "\\";
			case SEMICOLON:
				return ";";
			case APOSTROPHE:
				return "'";
			case SLASH:
				return "/";
			case AT:
				return "@";
			case NUM:
				return "Num";
			case HEADSETHOOK:
				return "Headset Hook";
			case FOCUS:
				return "Focus";
			case PLUS:
				return "Plus";
			case MENU:
				return "Menu";
			case NOTIFICATION:
				return "Notification";
			case SEARCH:
				return "Search";
			case MEDIA_PLAY_PAUSE:
				return "Play/Pause";
			case MEDIA_STOP:
				return "Stop Media";
			case MEDIA_NEXT:
				return "Next Media";
			case MEDIA_PREVIOUS:
				return "Prev Media";
			case MEDIA_REWIND:
				return "Rewind";
			case MEDIA_FAST_FORWARD:
				return "Fast Forward";
			case MUTE:
				return "Mute";
			case PAGE_UP:
				return "Page Up";
			case PAGE_DOWN:
				return "Page Down";
			case PICTSYMBOLS:
				return "PICTSYMBOLS";
			case SWITCH_CHARSET:
				return "SWITCH_CHARSET";
			case BUTTON_A:
				return "A Button";
			case BUTTON_B:
				return "B Button";
			case BUTTON_C:
				return "C Button";
			case BUTTON_X:
				return "X Button";
			case BUTTON_Y:
				return "Y Button";
			case BUTTON_Z:
				return "Z Button";
			case BUTTON_L1:
				return "L1 Button";
			case BUTTON_R1:
				return "R1 Button";
			case BUTTON_L2:
				return "L2 Button";
			case BUTTON_R2:
				return "R2 Button";
			case BUTTON_THUMBL:
				return "Left Thumb";
			case BUTTON_THUMBR:
				return "Right Thumb";
			case BUTTON_START:
				return "Start";
			case BUTTON_SELECT:
				return "Select";
			case BUTTON_MODE:
				return "Button Mode";
			case FORWARD_DEL:
				return "Delete";
			case CONTROL_LEFT:
				return "L-Ctrl";
			case CONTROL_RIGHT:
				return "R-Ctrl";
			case ESCAPE:
				return "Escape";
			case END:
				return "End";
			case INSERT:
				return "Insert";
			case NUM_LOCK:
				return "NumLock";
			case SYSRQ:
				return "SysRq";
			case SCROLL_LOCK:
				return "ScrolLock";
			case BREAK:
				return "Pause/Break";
			case NUMPAD_0:
				return "Numpad 0";
			case NUMPAD_1:
				return "Numpad 1";
			case NUMPAD_2:
				return "Numpad 2";
			case NUMPAD_3:
				return "Numpad 3";
			case NUMPAD_4:
				return "Numpad 4";
			case NUMPAD_5:
				return "Numpad 5";
			case NUMPAD_6:
				return "Numpad 6";
			case NUMPAD_7:
				return "Numpad 7";
			case NUMPAD_8:
				return "Numpad 8";
			case NUMPAD_9:
				return "Numpad 9";
			case NUMPAD_ADD:
				return "Numpad +";
			case NUMPAD_SUBTRACT:
				return "Numpad -";
			case NUMPAD_MULTIPLY:
				return "Numpad *";
			case NUMPAD_DIVIDE:
				return "Numpad /";
			case NUMPAD_DOT:
				return "Numpad .";
			case CAPS_LOCK:
				return "CapsLock";
			case COLON:
				return ":";
			case F1:
				return "F1";
			case F2:
				return "F2";
			case F3:
				return "F3";
			case F4:
				return "F4";
			case F5:
				return "F5";
			case F6:
				return "F6";
			case F7:
				return "F7";
			case F8:
				return "F8";
			case F9:
				return "F9";
			case F10:
				return "F10";
			case F11:
				return "F11";
			case F12:
				return "F12";
				// BUTTON_CIRCLE unhandled, as it conflicts with the more likely to be pressed F12
			default:
				// key name not found
				return null;
			}
		} ##FSTMerge## public static String toString (int keycode) {
			if (keycode < 0) throw new IllegalArgumentException("keycode cannot be negative, keycode: " + keycode);
			if (keycode > 255) throw new IllegalArgumentException("keycode cannot be greater than 255, keycode: " + keycode);
			switch (keycode) {
			// META* variables should not be used with this method.
			case UNKNOWN:
				return "Unknown";
			case SOFT_LEFT:
				return "Soft Left";
			case SOFT_RIGHT:
				return "Soft Right";
			case HOME:
				return "Home";
			case BACK:
				return "Back";
			case CALL:
				return "Call";
			case ENDCALL:
				return "End Call";
			case NUM_0:
				return "0";
			case NUM_1:
				return "1";
			case NUM_2:
				return "2";
			case NUM_3:
				return "3";
			case NUM_4:
				return "4";
			case NUM_5:
				return "5";
			case NUM_6:
				return "6";
			case NUM_7:
				return "7";
			case NUM_8:
				return "8";
			case NUM_9:
				return "9";
			case STAR:
				return "*";
			case POUND:
				return "#";
			case UP:
				return "Up";
			case DOWN:
				return "Down";
			case LEFT:
				return "Left";
			case RIGHT:
				return "Right";
			case CENTER:
				return "Center";
			case VOLUME_UP:
				return "Volume Up";
			case VOLUME_DOWN:
				return "Volume Down";
			case POWER:
				return "Power";
			case CAMERA:
				return "Camera";
			case CLEAR:
				return "Clear";
			case A:
				return "A";
			case B:
				return "B";
			case C:
				return "C";
			case D:
				return "D";
			case E:
				return "E";
			case F:
				return "F";
			case G:
				return "G";
			case H:
				return "H";
			case I:
				return "I";
			case J:
				return "J";
			case K:
				return "K";
			case L:
				return "L";
			case M:
				return "M";
			case N:
				return "N";
			case O:
				return "O";
			case P:
				return "P";
			case Q:
				return "Q";
			case R:
				return "R";
			case S:
				return "S";
			case T:
				return "T";
			case U:
				return "U";
			case V:
				return "V";
			case W:
				return "W";
			case X:
				return "X";
			case Y:
				return "Y";
			case Z:
				return "Z";
			case COMMA:
				return ",";
			case PERIOD:
				return ".";
			case ALT_LEFT:
				return "L-Alt";
			case ALT_RIGHT:
				return "R-Alt";
			case SHIFT_LEFT:
				return "L-Shift";
			case SHIFT_RIGHT:
				return "R-Shift";
			case TAB:
				return "Tab";
			case SPACE:
				return "Space";
			case SYM:
				return "SYM";
			case EXPLORER:
				return "Explorer";
			case ENVELOPE:
				return "Envelope";
			case ENTER:
				return "Enter";
			case DEL:
				return "Delete"; // also BACKSPACE
			case GRAVE:
				return "`";
			case MINUS:
				return "-";
			case EQUALS:
				return "=";
			case LEFT_BRACKET:
				return "[";
			case RIGHT_BRACKET:
				return "]";
			case BACKSLASH:
				return "\\";
			case SEMICOLON:
				return ";";
			case APOSTROPHE:
				return "'";
			case SLASH:
				return "/";
			case AT:
				return "@";
			case NUM:
				return "Num";
			case HEADSETHOOK:
				return "Headset Hook";
			case FOCUS:
				return "Focus";
			case PLUS:
				return "Plus";
			case MENU:
				return "Menu";
			case NOTIFICATION:
				return "Notification";
			case SEARCH:
				return "Search";
			case MEDIA_PLAY_PAUSE:
				return "Play/Pause";
			case MEDIA_STOP:
				return "Stop Media";
			case MEDIA_NEXT:
				return "Next Media";
			case MEDIA_PREVIOUS:
				return "Prev Media";
			case MEDIA_REWIND:
				return "Rewind";
			case MEDIA_FAST_FORWARD:
				return "Fast Forward";
			case MUTE:
				return "Mute";
			case PAGE_UP:
				return "Page Up";
			case PAGE_DOWN:
				return "Page Down";
			case PICTSYMBOLS:
				return "PICTSYMBOLS";
			case SWITCH_CHARSET:
				return "SWITCH_CHARSET";
			case BUTTON_A:
				return "A Button";
			case BUTTON_B:
				return "B Button";
			case BUTTON_C:
				return "C Button";
			case BUTTON_X:
				return "X Button";
			case BUTTON_Y:
				return "Y Button";
			case BUTTON_Z:
				return "Z Button";
			case BUTTON_L1:
				return "L1 Button";
			case BUTTON_R1:
				return "R1 Button";
			case BUTTON_L2:
				return "L2 Button";
			case BUTTON_R2:
				return "R2 Button";
			case BUTTON_THUMBL:
				return "Left Thumb";
			case BUTTON_THUMBR:
				return "Right Thumb";
			case BUTTON_START:
				return "Start";
			case BUTTON_SELECT:
				return "Select";
			case BUTTON_MODE:
				return "Button Mode";
			case FORWARD_DEL:
				return "Forward Delete";
			case CONTROL_LEFT:
				return "L-Ctrl";
			case CONTROL_RIGHT:
				return "R-Ctrl";
			case ESCAPE:
				return "Escape";
			case END:
				return "End";
			case INSERT:
				return "Insert";
			case NUMPAD_0:
				return "Numpad 0";
			case NUMPAD_1:
				return "Numpad 1";
			case NUMPAD_2:
				return "Numpad 2";
			case NUMPAD_3:
				return "Numpad 3";
			case NUMPAD_4:
				return "Numpad 4";
			case NUMPAD_5:
				return "Numpad 5";
			case NUMPAD_6:
				return "Numpad 6";
			case NUMPAD_7:
				return "Numpad 7";
			case NUMPAD_8:
				return "Numpad 8";
			case NUMPAD_9:
				return "Numpad 9";
			case COLON:
				return ":";
			case F1:
				return "F1";
			case F2:
				return "F2";
			case F3:
				return "F3";
			case F4:
				return "F4";
			case F5:
				return "F5";
			case F6:
				return "F6";
			case F7:
				return "F7";
			case F8:
				return "F8";
			case F9:
				return "F9";
			case F10:
				return "F10";
			case F11:
				return "F11";
			case F12:
				return "F12";
				// BUTTON_CIRCLE unhandled, as it conflicts with the more likely to be pressed F12
			default:
				// key name not found
				return null;
			}
		} ##FSTMerge## public static String toString (int keycode) {
			if (keycode < 0) throw new IllegalArgumentException("keycode cannot be negative, keycode: " + keycode);
			if (keycode > 255) throw new IllegalArgumentException("keycode cannot be greater than 255, keycode: " + keycode);
			switch (keycode) {
			// META* variables should not be used with this method.
			case UNKNOWN:
				return "Unknown";
			case SOFT_LEFT:
				return "Soft Left";
			case SOFT_RIGHT:
				return "Soft Right";
			case HOME:
				return "Home";
			case BACK:
				return "Back";
			case CALL:
				return "Call";
			case ENDCALL:
				return "End Call";
			case NUM_0:
				return "0";
			case NUM_1:
				return "1";
			case NUM_2:
				return "2";
			case NUM_3:
				return "3";
			case NUM_4:
				return "4";
			case NUM_5:
				return "5";
			case NUM_6:
				return "6";
			case NUM_7:
				return "7";
			case NUM_8:
				return "8";
			case NUM_9:
				return "9";
			case STAR:
				return "*";
			case POUND:
				return "#";
			case UP:
				return "Up";
			case DOWN:
				return "Down";
			case LEFT:
				return "Left";
			case RIGHT:
				return "Right";
			case CENTER:
				return "Center";
			case VOLUME_UP:
				return "Volume Up";
			case VOLUME_DOWN:
				return "Volume Down";
			case POWER:
				return "Power";
			case CAMERA:
				return "Camera";
			case CLEAR:
				return "Clear";
			case A:
				return "A";
			case B:
				return "B";
			case C:
				return "C";
			case D:
				return "D";
			case E:
				return "E";
			case F:
				return "F";
			case G:
				return "G";
			case H:
				return "H";
			case I:
				return "I";
			case J:
				return "J";
			case K:
				return "K";
			case L:
				return "L";
			case M:
				return "M";
			case N:
				return "N";
			case O:
				return "O";
			case P:
				return "P";
			case Q:
				return "Q";
			case R:
				return "R";
			case S:
				return "S";
			case T:
				return "T";
			case U:
				return "U";
			case V:
				return "V";
			case W:
				return "W";
			case X:
				return "X";
			case Y:
				return "Y";
			case Z:
				return "Z";
			case COMMA:
				return ",";
			case PERIOD:
				return ".";
			case ALT_LEFT:
				return "L-Alt";
			case ALT_RIGHT:
				return "R-Alt";
			case SHIFT_LEFT:
				return "L-Shift";
			case SHIFT_RIGHT:
				return "R-Shift";
			case TAB:
				return "Tab";
			case SPACE:
				return "Space";
			case SYM:
				return "SYM";
			case EXPLORER:
				return "Explorer";
			case ENVELOPE:
				return "Envelope";
			case ENTER:
				return "Enter";
			case DEL:
				return "Delete"; // also BACKSPACE
			case GRAVE:
				return "`";
			case MINUS:
				return "-";
			case EQUALS:
				return "=";
			case LEFT_BRACKET:
				return "[";
			case RIGHT_BRACKET:
				return "]";
			case BACKSLASH:
				return "\\";
			case SEMICOLON:
				return ";";
			case APOSTROPHE:
				return "'";
			case SLASH:
				return "/";
			case AT:
				return "@";
			case NUM:
				return "Num";
			case HEADSETHOOK:
				return "Headset Hook";
			case FOCUS:
				return "Focus";
			case PLUS:
				return "Plus";
			case MENU:
				return "Menu";
			case NOTIFICATION:
				return "Notification";
			case SEARCH:
				return "Search";
			case MEDIA_PLAY_PAUSE:
				return "Play/Pause";
			case MEDIA_STOP:
				return "Stop Media";
			case MEDIA_NEXT:
				return "Next Media";
			case MEDIA_PREVIOUS:
				return "Prev Media";
			case MEDIA_REWIND:
				return "Rewind";
			case MEDIA_FAST_FORWARD:
				return "Fast Forward";
			case MUTE:
				return "Mute";
			case PAGE_UP:
				return "Page Up";
			case PAGE_DOWN:
				return "Page Down";
			case PICTSYMBOLS:
				return "PICTSYMBOLS";
			case SWITCH_CHARSET:
				return "SWITCH_CHARSET";
			case BUTTON_A:
				return "A Button";
			case BUTTON_B:
				return "B Button";
			case BUTTON_C:
				return "C Button";
			case BUTTON_X:
				return "X Button";
			case BUTTON_Y:
				return "Y Button";
			case BUTTON_Z:
				return "Z Button";
			case BUTTON_L1:
				return "L1 Button";
			case BUTTON_R1:
				return "R1 Button";
			case BUTTON_L2:
				return "L2 Button";
			case BUTTON_R2:
				return "R2 Button";
			case BUTTON_THUMBL:
				return "Left Thumb";
			case BUTTON_THUMBR:
				return "Right Thumb";
			case BUTTON_START:
				return "Start";
			case BUTTON_SELECT:
				return "Select";
			case BUTTON_MODE:
				return "Button Mode";
			case FORWARD_DEL:
				return "Forward Delete";
			case CONTROL_LEFT:
				return "L-Ctrl";
			case CONTROL_RIGHT:
				return "R-Ctrl";
			case ESCAPE:
				return "Escape";
			case END:
				return "End";
			case INSERT:
				return "Insert";
			case NUMPAD_0:
				return "Numpad 0";
			case NUMPAD_1:
				return "Numpad 1";
			case NUMPAD_2:
				return "Numpad 2";
			case NUMPAD_3:
				return "Numpad 3";
			case NUMPAD_4:
				return "Numpad 4";
			case NUMPAD_5:
				return "Numpad 5";
			case NUMPAD_6:
				return "Numpad 6";
			case NUMPAD_7:
				return "Numpad 7";
			case NUMPAD_8:
				return "Numpad 8";
			case NUMPAD_9:
				return "Numpad 9";
			case COLON:
				return ":";
			case F1:
				return "F1";
			case F2:
				return "F2";
			case F3:
				return "F3";
			case F4:
				return "F4";
			case F5:
				return "F5";
			case F6:
				return "F6";
			case F7:
				return "F7";
			case F8:
				return "F8";
			case F9:
				return "F9";
			case F10:
				return "F10";
			case F11:
				return "F11";
			case F12:
				return "F12";
				// BUTTON_CIRCLE unhandled, as it conflicts with the more likely to be pressed F12
			default:
				// key name not found
				return null;
			}
		}
File path: /tmp/downloads/libgdx/revisions/rev_b54db_8a84e/rev_b54db-8a84e/gdx/src/com/badlogic/gdx/Input.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 84d4079ed9b8c11f4793c05362844b43d8eb2fec
Parent1 SHA-1: b54dbf7917668ca2664ddb61fddcefbcd674a1e9
Parent2 SHA-1: 8a84ebf7df044e0e88c8aaab395dfed236f8aa53
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public static int valueOf (String keyname) {
			if (keyNames == null) {
				initializeKeyNames();
			}
			return keyNames.get(keyname, -1);
		} ##FSTMerge## public static int valueOf (String keyname) {
			if (keyNames == null) initializeKeyNames();
			return keyNames.get(keyname, -1);
		} ##FSTMerge## public static int valueOf (String keyname) {
			if (keyNames == null) initializeKeyNames();
			return keyNames.get(keyname, -1);
		}
File path: /tmp/downloads/libgdx/revisions/rev_b54db_8a84e/rev_b54db-8a84e/gdx/src/com/badlogic/gdx/Input.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 84d4079ed9b8c11f4793c05362844b43d8eb2fec
Parent1 SHA-1: b54dbf7917668ca2664ddb61fddcefbcd674a1e9
Parent2 SHA-1: 8a84ebf7df044e0e88c8aaab395dfed236f8aa53
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ private static void initializeKeyNames () {
			keyNames = new ObjectIntMap<String>();
			for (int i = 0; i < 256; i++) {
				String name = toString(i);
				if (name != null) {
					keyNames.put(name, i);
				}
			}
		} ##FSTMerge## private static void initializeKeyNames () {
			keyNames = new ObjectIntMap<String>();
			for (int i = 0; i < 256; i++) {
				String name = toString(i);
				if (name != null) keyNames.put(name, i);
			}
		} ##FSTMerge## private static void initializeKeyNames () {
			keyNames = new ObjectIntMap<String>();
			for (int i = 0; i < 256; i++) {
				String name = toString(i);
				if (name != null) keyNames.put(name, i);
			}
		}
File path: /tmp/downloads/libgdx/revisions/rev_b54db_8a84e/rev_b54db-8a84e/gdx/src/com/badlogic/gdx/Input.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 84d4079ed9b8c11f4793c05362844b43d8eb2fec
Parent1 SHA-1: b54dbf7917668ca2664ddb61fddcefbcd674a1e9
Parent2 SHA-1: 8a84ebf7df044e0e88c8aaab395dfed236f8aa53
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: smallMethod
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public void getTextInput (TextInputListener listener, String title, String text, String hint); ##FSTMerge## ##FSTMerge## public void getTextInput (TextInputListener listener, String title, String text, String hint);
File path: /tmp/downloads/libgdx/revisions/rev_b54db_8a84e/rev_b54db-8a84e/gdx/src/com/badlogic/gdx/Input.java

==================================================================================================================
Revision: /tmp/downloads/libgdx/revisions/rev_0bf49_db6a1/rev_0bf49-db6a1.revisions
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 3c6c1aa63937dc2a79d1b394b85a65764e5539c7
Parent1 SHA-1: 0bf494aa4e926eeeb2123ff13ffcc1fd6430f320
Parent2 SHA-1: db6a15910d651bf40e5198625d0e6a34f3e2949b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public static final List<Class<? extends GdxTest>> tests = new ArrayList<Class<? extends GdxTest>>(Arrays.asList(
		// @off
		IssueTest.class,
		AccelerometerTest.class,
		ActionSequenceTest.class,
		ActionTest.class,
		AlphaTest.class,
		Animation3DTest.class,
		AnimationTest.class,
		AssetManagerTest.class,
		AtlasIssueTest.class,
		AudioDeviceTest.class,
		AudioRecorderTest.class,
		Basic3DSceneTest.class,
		Basic3DTest.class,
		Benchmark3DTest.class,
		BitmapFontAlignmentTest.class,
		BitmapFontDistanceFieldTest.class,
		BitmapFontFlipTest.class,
		BitmapFontMetricsTest.class,
		BitmapFontTest.class,
		BlitTest.class,
		Box2DTest.class,
		Box2DTestCollection.class,
		Bresenham2Test.class,
		BufferUtilsTest.class,
		BulletTestCollection.class,
		ContainerTest.class,
		CullTest.class,
		DelaunayTriangulatorTest.class,
		DeltaTimeTest.class,
		DirtyRenderingTest.class,
		DragAndDropTest.class,
		ETC1Test.class,
//		EarClippingTriangulatorTest.class,
		EdgeDetectionTest.class,
		ExitTest.class,
		ExternalMusicTest.class,
		FilesTest.class,
		FilterPerformanceTest.class,
		FloatTextureTest.class,
		FogTest.class,
		FrameBufferTest.class,
		FramebufferToTextureTest.class,
		FullscreenTest.class,
		GamepadTest.class,
		Gdx2DTest.class,
		GestureDetectorTest.class,
		GroupCullingTest.class,
		GroupFadeTest.class,
		GroupTest.class,
		HelloTriangle.class,
		HexagonalTiledMapTest.class,
		I18NMessageTest.class,
		I18NSimpleMessageTest.class,
		ImageScaleTest.class,
		ImageTest.class,
		ImmediateModeRendererTest.class,
		IndexBufferObjectShaderTest.class,
		InputTest.class,
		IntegerBitmapFontTest.class,
		InterpolationTest.class,
		InverseKinematicsTest.class,
		IsometricTileTest.class,
		KinematicBodyTest.class,
		LabelScaleTest.class,
		LabelTest.class,
		LifeCycleTest.class,
		LightsTest.class,
		MaterialTest.class,
		MatrixJNITest.class,
		MeshShaderTest.class,
		MipMapTest.class,
		ModelTest.class,
		MoveSpriteExample.class,
		MultitouchTest.class,
		MusicTest.class,
		NetAPITest.class,
		NinePatchTest.class,
		OnscreenKeyboardTest.class,
		PathTest.class,
		ParallaxTest.class,
		ParticleControllerTest.class,
		ParticleEmitterTest.class,
		PixelsPerInchTest.class,
		PixmapBlendingTest.class,
		PixmapPackerTest.class,
		PixmapTest.class,
		PolygonRegionTest.class,
		PolygonSpriteTest.class,
		PreferencesTest.class,
		ProjectTest.class,
		ProjectiveTextureTest.class,
		ReflectionTest.class,
		RotationTest.class,
		RunnablePostTest.class,
		Scene2DDebugRendererTest.class,
		Scene2dTest.class,
		ScrollPane2Test.class,
		ScrollPaneScrollBarsTest.class,
		ScrollPaneTest.class,
		SelectTest.class,
		ShaderCollectionTest.class,
		ShaderMultitextureTest.class,
		ShaderTest.class,
		ShadowMappingTest.class,
		ShapeRendererTest.class,
		SimpleAnimationTest.class,
		SimpleDecalTest.class,
		SimpleStageCullingTest.class,
		SimpleVertexShader.class,
		SkeletonTest.class,
		SoftKeyboardTest.class,
		SortedSpriteTest.class,
		SoundTest.class,
		SpriteBatchRotationTest.class,
		SpriteBatchShaderTest.class,
		SpriteBatchTest.class,
		SpriteCacheOffsetTest.class,
		SpriteCacheTest.class,
		StagePerformanceTest.class,
		StageTest.class,
		StateMachineTest.class,
		SuperKoalio.class,
		TableLayoutTest.class,
		TableTest.class,
		TextAreaTest.class,
		TextButtonTest.class,
		TextInputDialogTest.class,
		TextureAtlasTest.class,
		TextureDataTest.class,
		TextureDownloadTest.class,
		TextureFormatTest.class,
		TideMapAssetManagerTest.class,
		TideMapDirectLoaderTest.class,
		TileTest.class,
		TiledMapAssetManagerTest.class,
		TiledMapAtlasAssetManagerTest.class,
		TiledMapBench.class,
		TimerTest.class,
		TimeUtilsTest.class,
		TouchpadTest.class,
		TreeTest.class,
		UISimpleTest.class,
		UITest.class,
		Vector2dTest.class,
		VertexBufferObjectShaderTest.class,
		VibratorTest.class,
		ViewportTest1.class,
		ViewportTest2.class,
		ViewportTest3.class,
		YDownTest.class
		// @on

		// SoundTouchTest.class, Mpg123Test.class, WavTest.class, FreeTypeTest.class,
		// InternationalFontsTest.class, VorbisTest.class
		)); ##FSTMerge## public static final List<Class<? extends GdxTest>> tests = new ArrayList<Class<? extends GdxTest>>(Arrays.asList(
		// @off
		IssueTest.class,
		AccelerometerTest.class,
		ActionSequenceTest.class,
		ActionTest.class,
		AlphaTest.class,
		Animation3DTest.class,
		AnimationTest.class,
		AssetManagerTest.class,
		AtlasIssueTest.class,
		AudioDeviceTest.class,
		AudioRecorderTest.class,
		Basic3DSceneTest.class,
		Basic3DTest.class,
		Benchmark3DTest.class,
		BitmapFontAlignmentTest.class,
		BitmapFontDistanceFieldTest.class,
		BitmapFontFlipTest.class,
		BitmapFontMetricsTest.class,
		BitmapFontTest.class,
		BlitTest.class,
		Box2DTest.class,
		Box2DTestCollection.class,
		Bresenham2Test.class,
		BufferUtilsTest.class,
		BulletTestCollection.class,
		ContainerTest.class,
		CullTest.class,
		DelaunayTriangulatorTest.class,
		DeltaTimeTest.class,
		DirtyRenderingTest.class,
		DragAndDropTest.class,
		ETC1Test.class,
//		EarClippingTriangulatorTest.class,
		EdgeDetectionTest.class,
		ExitTest.class,
		ExternalMusicTest.class,
		FilesTest.class,
		FilterPerformanceTest.class,
		FloatTextureTest.class,
		FogTest.class,
		FrameBufferTest.class,
		FramebufferToTextureTest.class,
		FullscreenTest.class,
		GamepadTest.class,
		Gdx2DTest.class,
		GestureDetectorTest.class,
		GroupCullingTest.class,
		GroupFadeTest.class,
		GroupTest.class,
		HelloTriangle.class,
		HexagonalTiledMapTest.class,
		I18NMessageTest.class,
		I18NSimpleMessageTest.class,
		ImageScaleTest.class,
		ImageTest.class,
		ImmediateModeRendererTest.class,
		IndexBufferObjectShaderTest.class,
		InputTest.class,
		IntegerBitmapFontTest.class,
		InterpolationTest.class,
		InverseKinematicsTest.class,
		IsometricTileTest.class,
		KinematicBodyTest.class,
		LabelScaleTest.class,
		LabelTest.class,
		LifeCycleTest.class,
		LightsTest.class,
		MaterialTest.class,
		MatrixJNITest.class,
		MeshShaderTest.class,
		MipMapTest.class,
		ModelTest.class,
		MoveSpriteExample.class,
		MultitouchTest.class,
		MusicTest.class,
		NetAPITest.class,
		NinePatchTest.class,
		OnscreenKeyboardTest.class,
		PathTest.class,
		ParallaxTest.class,
		ParticleControllerTest.class,
		ParticleEmitterTest.class,
		PixelsPerInchTest.class,
		PixmapBlendingTest.class,
		PixmapPackerTest.class,
		PixmapTest.class,
		PolygonRegionTest.class,
		PolygonSpriteTest.class,
		PreferencesTest.class,
		ProjectTest.class,
		ProjectiveTextureTest.class,
		ReflectionTest.class,
		RotationTest.class,
		RunnablePostTest.class,
		Scene2dTest.class,
		ScrollPane2Test.class,
		ScrollPaneScrollBarsTest.class,
		ScrollPaneTest.class,
		SelectTest.class,
		ShaderCollectionTest.class,
		ShaderMultitextureTest.class,
		ShaderTest.class,
		ShadowMappingTest.class,
		ShapeRendererTest.class,
		SimpleAnimationTest.class,
		SimpleDecalTest.class,
		SimpleStageCullingTest.class,
		SimpleVertexShader.class,
		SkeletonTest.class,
		SoftKeyboardTest.class,
		SortedSpriteTest.class,
		SoundTest.class,
		SpriteBatchRotationTest.class,
		SpriteBatchShaderTest.class,
		SpriteBatchTest.class,
		SpriteCacheOffsetTest.class,
		SpriteCacheTest.class,
		StagePerformanceTest.class,
		StageTest.class,
		StateMachineTest.class,
		SuperKoalio.class,
		TableLayoutTest.class,
		TableTest.class,
		TextAreaTest.class,
		TextButtonTest.class,
		TextInputDialogTest.class,
		TextureAtlasTest.class,
		TextureDataTest.class,
		TextureDownloadTest.class,
		TextureFormatTest.class,
		TideMapAssetManagerTest.class,
		TideMapDirectLoaderTest.class,
		TileTest.class,
		TiledMapAssetManagerTest.class,
		TiledMapAtlasAssetManagerTest.class,
		TiledMapBench.class,
		TimerTest.class,
		TimeUtilsTest.class,
		TouchpadTest.class,
		TreeTest.class,
		UISimpleTest.class,
		UITest.class,
		Vector2dTest.class,
		VertexBufferObjectShaderTest.class,
		VibratorTest.class,
		ViewportTest1.class,
		ViewportTest2.class,
		ViewportTest3.class,
		YDownTest.class
		// @on

		// SoundTouchTest.class, Mpg123Test.class, WavTest.class, FreeTypeTest.class,
		// InternationalFontsTest.class, VorbisTest.class
		)); ##FSTMerge## public static final List<Class<? extends GdxTest>> tests = new ArrayList<Class<? extends GdxTest>>(Arrays.asList(
		// @off
		IssueTest.class,
		AccelerometerTest.class,
		ActionSequenceTest.class,
		ActionTest.class,
		AlphaTest.class,
		Animation3DTest.class,
		AnimationTest.class,
		AssetManagerTest.class,
		AtlasIssueTest.class,
		AudioDeviceTest.class,
		AudioRecorderTest.class,
		Basic3DSceneTest.class,
		Basic3DTest.class,
		Benchmark3DTest.class,
		BitmapFontAlignmentTest.class,
		BitmapFontDistanceFieldTest.class,
		BitmapFontFlipTest.class,
		BitmapFontMetricsTest.class,
		BitmapFontTest.class,
		BlitTest.class,
		Box2DTest.class,
		Box2DTestCollection.class,
		Bresenham2Test.class,
		BufferUtilsTest.class,
		BulletTestCollection.class,
		ContainerTest.class,
		CullTest.class,
		DelaunayTriangulatorTest.class,
		DeltaTimeTest.class,
		DirtyRenderingTest.class,
		DragAndDropTest.class,
		ETC1Test.class,
//		EarClippingTriangulatorTest.class,
		EdgeDetectionTest.class,
		ExitTest.class,
		ExternalMusicTest.class,
		FilesTest.class,
		FilterPerformanceTest.class,
		FloatTextureTest.class,
		FogTest.class,
		FrameBufferTest.class,
		FramebufferToTextureTest.class,
		FullscreenTest.class,
		GamepadTest.class,
		Gdx2DTest.class,
		GestureDetectorTest.class,
		GroupCullingTest.class,
		GroupFadeTest.class,
		GroupTest.class,
		HelloTriangle.class,
		HexagonalTiledMapTest.class,
		I18NMessageTest.class,
		I18NSimpleMessageTest.class,
		ImageScaleTest.class,
		ImageTest.class,
		ImmediateModeRendererTest.class,
		IndexBufferObjectShaderTest.class,
		InputTest.class,
		IntegerBitmapFontTest.class,
		InterpolationTest.class,
		InverseKinematicsTest.class,
		IsometricTileTest.class,
		KinematicBodyTest.class,
		LabelScaleTest.class,
		LabelTest.class,
		LifeCycleTest.class,
		LightsTest.class,
		MaterialTest.class,
		MatrixJNITest.class,
		MeshShaderTest.class,
		MipMapTest.class,
		ModelTest.class,
		MoveSpriteExample.class,
		MultitouchTest.class,
		MusicTest.class,
		NetAPITest.class,
		NinePatchTest.class,
		OnscreenKeyboardTest.class,
		PathTest.class,
		ParallaxTest.class,
		ParticleControllerTest.class,
		ParticleEmitterTest.class,
		PixelsPerInchTest.class,
		PixmapBlendingTest.class,
		PixmapPackerTest.class,
		PixmapTest.class,
		PolygonRegionTest.class,
		PolygonSpriteTest.class,
		PreferencesTest.class,
		ProjectTest.class,
		ProjectiveTextureTest.class,
		ReflectionTest.class,
		RotationTest.class,
		RunnablePostTest.class,
		Scene2dTest.class,
		ScrollPane2Test.class,
		ScrollPaneScrollBarsTest.class,
		ScrollPaneTest.class,
		SelectTest.class,
		ShaderCollectionTest.class,
		ShaderMultitextureTest.class,
		ShaderTest.class,
		ShadowMappingTest.class,
		ShapeRendererTest.class,
		SimpleAnimationTest.class,
		SimpleDecalTest.class,
		SimpleStageCullingTest.class,
		SimpleVertexShader.class,
		SkeletonTest.class,
		SoftKeyboardTest.class,
		SortedSpriteTest.class,
		SoundTest.class,
		SpriteBatchRotationTest.class,
		SpriteBatchShaderTest.class,
		SpriteBatchTest.class,
		SpriteCacheOffsetTest.class,
		SpriteCacheTest.class,
		StagePerformanceTest.class,
		StageTest.class,
		StateMachineTest.class,
		SuperKoalio.class,
		TableLayoutTest.class,
		TableTest.class,
		TextAreaTest.class,
		TextButtonTest.class,
		TextInputDialogTest.class,
		TextureAtlasTest.class,
		TextureDataTest.class,
		TextureDownloadTest.class,
		TextureFormatTest.class,
		TideMapAssetManagerTest.class,
		TideMapDirectLoaderTest.class,
		TileTest.class,
		TiledMapAssetManagerTest.class,
		TiledMapAtlasAssetManagerTest.class,
		TiledMapBench.class,
		TimerTest.class,
		TimeUtilsTest.class,
		TouchpadTest.class,
		TreeTest.class,
		UISimpleTest.class,
		UITest.class,
		Vector2dTest.class,
		VertexBufferObjectShaderTest.class,
		VibratorTest.class,
		ViewportTest1.class,
		ViewportTest2.class,
		ViewportTest3.class,
		YDownTest.class,
		FreeTypeFontLoaderTest.class
		// @on

		// SoundTouchTest.class, Mpg123Test.class, WavTest.class, FreeTypeTest.class,
		// InternationalFontsTest.class, VorbisTest.class
		));
File path: /tmp/downloads/libgdx/revisions/rev_0bf49_db6a1/rev_0bf49-db6a1/tests/gdx-tests/src/com/badlogic/gdx/tests/utils/GdxTests.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 3c6c1aa63937dc2a79d1b394b85a65764e5539c7
Parent1 SHA-1: 0bf494aa4e926eeeb2123ff13ffcc1fd6430f320
Parent2 SHA-1: db6a15910d651bf40e5198625d0e6a34f3e2949b
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ Array<DebugRect> debugRects = new Array<DebugRect>(); ##FSTMerge## Array<DebugRect> debugRects; ##FSTMerge## Array<DebugRect> debugRects;
File path: /tmp/downloads/libgdx/revisions/rev_0bf49_db6a1/rev_0bf49-db6a1/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 3c6c1aa63937dc2a79d1b394b85a65764e5539c7
Parent1 SHA-1: 0bf494aa4e926eeeb2123ff13ffcc1fd6430f320
Parent2 SHA-1: db6a15910d651bf40e5198625d0e6a34f3e2949b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public Cell add () {
		return add((Actor)null);
	} ##FSTMerge## public Cell add () {
		return add((Actor) null);
	} ##FSTMerge## public Cell add () {
		return add((Actor) null);
	}
File path: /tmp/downloads/libgdx/revisions/rev_0bf49_db6a1/rev_0bf49-db6a1/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 3c6c1aa63937dc2a79d1b394b85a65764e5539c7
Parent1 SHA-1: 0bf494aa4e926eeeb2123ff13ffcc1fd6430f320
Parent2 SHA-1: db6a15910d651bf40e5198625d0e6a34f3e2949b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public void reset () {
		clear();
		padTop = Value.zero;
		padLeft = Value.zero;
		padBottom = Value.zero;
		padRight = Value.zero;
		align = Align.center;
		if (debug != Debug.none) {
			Scene2DDebugRenderer.debugRectPool.freeAll(debugRects);
			debugRects.clear();
		}
		debug = Debug.none;
		cellDefaults.defaults();
		for (int i = 0, n = columnDefaults.size; i < n; i++) {
			Cell columnCell = columnDefaults.get(i);
			if (columnCell != null) cellPool.free(columnCell);
		}
		columnDefaults.clear();
	} ##FSTMerge## public void reset () {
		clear();
		padTop = Value.zero;
		padLeft = Value.zero;
		padBottom = Value.zero;
		padRight = Value.zero;
		align = Align.center;
		if (debug != Debug.none) debugRects.clear();
		debug = Debug.none;
		cellDefaults.defaults();
		for (int i = 0, n = columnDefaults.size; i < n; i++) {
			Cell columnCell = columnDefaults.get(i);
			if (columnCell != null) cellPool.free(columnCell);
		}
		columnDefaults.clear();
	} ##FSTMerge## public void reset () {
		clear();
		padTop = Value.zero;
		padLeft = Value.zero;
		padBottom = Value.zero;
		padRight = Value.zero;
		align = Align.center;
		if (debug != Debug.none) debugRects.clear();
		debug = Debug.none;
		cellDefaults.defaults();
		for (int i = 0, n = columnDefaults.size; i < n; i++) {
			Cell columnCell = columnDefaults.get(i);
			if (columnCell != null) cellPool.free(columnCell);
		}
		columnDefaults.clear();
	}
File path: /tmp/downloads/libgdx/revisions/rev_0bf49_db6a1/rev_0bf49-db6a1/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 3c6c1aa63937dc2a79d1b394b85a65764e5539c7
Parent1 SHA-1: 0bf494aa4e926eeeb2123ff13ffcc1fd6430f320
Parent2 SHA-1: db6a15910d651bf40e5198625d0e6a34f3e2949b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public Table debug (Debug debug) {
		this.debug = debug;
		if (debug == Debug.none) {
			if (debugRects != null) {
				Scene2DDebugRenderer.debugRectPool.freeAll(debugRects);
				debugRects.clear();
			}
		} else
			invalidate();
		return this;
	} ##FSTMerge## public Table debug (Debug debug) {
		this.debug = debug;
		if (debug == Debug.none) {
			if (debugRects != null) debugRects.clear();
		} else
			invalidate();
		return this;
	} ##FSTMerge## public Table debug (Debug debug) {
		this.debug = debug;
		if (debug == Debug.none) {
			if (debugRects != null) debugRects.clear();
		} else
			invalidate();
		return this;
	}
File path: /tmp/downloads/libgdx/revisions/rev_0bf49_db6a1/rev_0bf49-db6a1/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 3c6c1aa63937dc2a79d1b394b85a65764e5539c7
Parent1 SHA-1: 0bf494aa4e926eeeb2123ff13ffcc1fd6430f320
Parent2 SHA-1: db6a15910d651bf40e5198625d0e6a34f3e2949b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ private void layout (float layoutX, float layoutY, float layoutWidth, float layoutHeight) {
		Array<Cell> cells = this.cells;
		int cellCount = cells.size;

		if (sizeInvalid) computeSize();

		float padLeft = this.padLeft.get(this);
		float hpadding = padLeft + padRight.get(this);
		float padTop = this.padTop.get(this);
		float vpadding = padTop + padBottom.get(this);

		int columns = this.columns, rows = this.rows;
		float[] expandWidth = this.expandWidth, expandHeight = this.expandHeight;
		float[] columnWidth = this.columnWidth, rowHeight = this.rowHeight;

		float totalExpandWidth = 0, totalExpandHeight = 0;
		for (int i = 0; i < columns; i++)
			totalExpandWidth += expandWidth[i];
		for (int i = 0; i < rows; i++)
			totalExpandHeight += expandHeight[i];

		// Size columns and rows between min and pref size using (preferred - min) size to weight distribution of extra space.
		float[] columnWeightedWidth;
		float totalGrowWidth = tablePrefWidth - tableMinWidth;
		if (totalGrowWidth == 0)
			columnWeightedWidth = columnMinWidth;
		else {
			float extraWidth = Math.min(totalGrowWidth, Math.max(0, layoutWidth - tableMinWidth));
			columnWeightedWidth = Table.columnWeightedWidth = ensureSize(Table.columnWeightedWidth, columns);
			float[] columnMinWidth = this.columnMinWidth, columnPrefWidth = this.columnPrefWidth;
			for (int i = 0; i < columns; i++) {
				float growWidth = columnPrefWidth[i] - columnMinWidth[i];
				float growRatio = growWidth / totalGrowWidth;
				columnWeightedWidth[i] = columnMinWidth[i] + extraWidth * growRatio;
			}
		}

		float[] rowWeightedHeight;
		float totalGrowHeight = tablePrefHeight - tableMinHeight;
		if (totalGrowHeight == 0)
			rowWeightedHeight = rowMinHeight;
		else {
			rowWeightedHeight = Table.rowWeightedHeight = ensureSize(Table.rowWeightedHeight, rows);
			float extraHeight = Math.min(totalGrowHeight, Math.max(0, layoutHeight - tableMinHeight));
			float[] rowMinHeight = this.rowMinHeight, rowPrefHeight = this.rowPrefHeight;
			for (int i = 0; i < rows; i++) {
				float growHeight = rowPrefHeight[i] - rowMinHeight[i];
				float growRatio = growHeight / totalGrowHeight;
				rowWeightedHeight[i] = rowMinHeight[i] + extraHeight * growRatio;
			}
		}

		// Determine actor and cell sizes (before expand or fill).
		for (int i = 0; i < cellCount; i++) {
			Cell c = cells.get(i);
			int column = c.column, row = c.row;
			Actor a = c.actor;

			float spannedWeightedWidth = 0;
			for (int ii = column, nn = ii + c.colspan; ii < nn; ii++)
				spannedWeightedWidth += columnWeightedWidth[ii];
			float weightedHeight = rowWeightedHeight[row];

			float prefWidth = c.prefWidth.get(a);
			float prefHeight = c.prefHeight.get(a);
			float minWidth = c.minWidth.get(a);
			float minHeight = c.minHeight.get(a);
			float maxWidth = c.maxWidth.get(a);
			float maxHeight = c.maxHeight.get(a);
			if (prefWidth < minWidth) prefWidth = minWidth;
			if (prefHeight < minHeight) prefHeight = minHeight;
			if (maxWidth > 0 && prefWidth > maxWidth) prefWidth = maxWidth;
			if (maxHeight > 0 && prefHeight > maxHeight) prefHeight = maxHeight;

			c.actorWidth = Math.min(spannedWeightedWidth - c.computedPadLeft - c.computedPadRight, prefWidth);
			c.actorHeight = Math.min(weightedHeight - c.computedPadTop - c.computedPadBottom, prefHeight);

			if (c.colspan == 1) columnWidth[column] = Math.max(columnWidth[column], spannedWeightedWidth);
			rowHeight[row] = Math.max(rowHeight[row], weightedHeight);
		}

		// Distribute remaining space to any expanding columns/rows.
		if (totalExpandWidth > 0) {
			float extra = layoutWidth - hpadding;
			for (int i = 0; i < columns; i++)
				extra -= columnWidth[i];
			float used = 0;
			int lastIndex = 0;
			for (int i = 0; i < columns; i++) {
				if (expandWidth[i] == 0) continue;
				float amount = extra * expandWidth[i] / totalExpandWidth;
				columnWidth[i] += amount;
				used += amount;
				lastIndex = i;
			}
			columnWidth[lastIndex] += extra - used;
		}
		if (totalExpandHeight > 0) {
			float extra = layoutHeight - vpadding;
			for (int i = 0; i < rows; i++)
				extra -= rowHeight[i];
			float used = 0;
			int lastIndex = 0;
			for (int i = 0; i < rows; i++) {
				if (expandHeight[i] == 0) continue;
				float amount = extra * expandHeight[i] / totalExpandHeight;
				rowHeight[i] += amount;
				used += amount;
				lastIndex = i;
			}
			rowHeight[lastIndex] += extra - used;
		}

		// Distribute any additional width added by colspanned cells to the columns spanned.
		for (int i = 0; i < cellCount; i++) {
			Cell c = cells.get(i);
			int colspan = c.colspan;
			if (colspan == 1) continue;

			float extraWidth = 0;
			for (int column = c.column, nn = column + colspan; column < nn; column++)
				extraWidth += columnWeightedWidth[column] - columnWidth[column];
			extraWidth -= Math.max(0, c.computedPadLeft + c.computedPadRight);

			extraWidth /= colspan;
			if (extraWidth > 0) {
				for (int column = c.column, nn = column + colspan; column < nn; column++)
					columnWidth[column] += extraWidth;
			}
		}

		// Determine table size.
		float tableWidth = hpadding, tableHeight = vpadding;
		for (int i = 0; i < columns; i++)
			tableWidth += columnWidth[i];
		for (int i = 0; i < rows; i++)
			tableHeight += rowHeight[i];

		// Position table within the container.
		int align = this.align;
		float x = layoutX + padLeft;
		if ((align & Align.right) != 0)
			x += layoutWidth - tableWidth;
		else if ((align & Align.left) == 0) // Center
			x += (layoutWidth - tableWidth) / 2;

		float y = layoutY + padTop;
		if ((align & Align.bottom) != 0)
			y += layoutHeight - tableHeight;
		else if ((align & Align.top) == 0) // Center
			y += (layoutHeight - tableHeight) / 2;

		// Position actors within cells.
		float currentX = x, currentY = y;
		for (int i = 0; i < cellCount; i++) {
			Cell c = cells.get(i);

			float spannedCellWidth = 0;
			for (int column = c.column, nn = column + c.colspan; column < nn; column++)
				spannedCellWidth += columnWidth[column];
			spannedCellWidth -= c.computedPadLeft + c.computedPadRight;

			currentX += c.computedPadLeft;

			if (c.fillX > 0) {
				c.actorWidth = spannedCellWidth * c.fillX;
				float maxWidth = c.maxWidth.get(c.actor);
				if (maxWidth > 0) c.actorWidth = Math.min(c.actorWidth, maxWidth);
			}
			if (c.fillY > 0) {
				c.actorHeight = rowHeight[c.row] * c.fillY - c.computedPadTop - c.computedPadBottom;
				float maxHeight = c.maxHeight.get(c.actor);
				if (maxHeight > 0) c.actorHeight = Math.min(c.actorHeight, maxHeight);
			}

			if ((c.align & Align.left) != 0)
				c.actorX = currentX;
			else if ((c.align & Align.right) != 0)
				c.actorX = currentX + spannedCellWidth - c.actorWidth;
			else
				c.actorX = currentX + (spannedCellWidth - c.actorWidth) / 2;

			if ((c.align & Align.top) != 0)
				c.actorY = currentY + c.computedPadTop;
			else if ((c.align & Align.bottom) != 0)
				c.actorY = currentY + rowHeight[c.row] - c.actorHeight - c.computedPadBottom;
			else
				c.actorY = currentY + (rowHeight[c.row] - c.actorHeight + c.computedPadTop - c.computedPadBottom) / 2;

			if (c.endRow) {
				currentX = x;
				currentY += rowHeight[c.row];
			} else
				currentX += spannedCellWidth + c.computedPadRight;
		}

		// Store debug rectangles.
		if (debug == Debug.none) return;
		if (debugRects != null) {
			Scene2DDebugRenderer.debugRectPool.freeAll(debugRects);
			debugRects.clear();
		}
		currentX = x;
		currentY = y;
		if (debug == Debug.table || debug == Debug.all) {
			addDebugRect(layoutX, layoutY, layoutWidth, layoutHeight, debugColor);
			addDebugRect(x, y, tableWidth - hpadding, tableHeight - vpadding, debugColor);
		}
		for (int i = 0; i < cellCount; i++) {
			Cell c = cells.get(i);

			// Actor bounds.
			if (debug == Debug.actor || debug == Debug.all)
				addDebugRect(c.actorX, c.actorY, c.actorWidth, c.actorHeight, Actor.debugColor);

			// Cell bounds.
			float spannedCellWidth = 0;
			for (int column = c.column, nn = column + c.colspan; column < nn; column++)
				spannedCellWidth += columnWidth[column];
			spannedCellWidth -= c.computedPadLeft + c.computedPadRight;
			currentX += c.computedPadLeft;
			if (debug == Debug.cell || debug == Debug.all) {
				addDebugRect(currentX, currentY + c.computedPadTop, spannedCellWidth, rowHeight[c.row] - c.computedPadTop
					- c.computedPadBottom, debugCellColor);
			}

			if (c.endRow) {
				currentX = x;
				currentY += rowHeight[c.row];
			} else
				currentX += spannedCellWidth + c.computedPadRight;
		}
	} ##FSTMerge## private void layout (float layoutX, float layoutY, float layoutWidth, float layoutHeight) {
		Array<Cell> cells = this.cells;
		int cellCount = cells.size;

		if (sizeInvalid) computeSize();

		float padLeft = this.padLeft.get(this);
		float hpadding = padLeft + padRight.get(this);
		float padTop = this.padTop.get(this);
		float vpadding = padTop + padBottom.get(this);

		int columns = this.columns, rows = this.rows;
		float[] expandWidth = this.expandWidth, expandHeight = this.expandHeight;
		float[] columnWidth = this.columnWidth, rowHeight = this.rowHeight;

		float totalExpandWidth = 0, totalExpandHeight = 0;
		for (int i = 0; i < columns; i++)
			totalExpandWidth += expandWidth[i];
		for (int i = 0; i < rows; i++)
			totalExpandHeight += expandHeight[i];

		// Size columns and rows between min and pref size using (preferred - min) size to weight distribution of extra space.
		float[] columnWeightedWidth;
		float totalGrowWidth = tablePrefWidth - tableMinWidth;
		if (totalGrowWidth == 0)
			columnWeightedWidth = columnMinWidth;
		else {
			float extraWidth = Math.min(totalGrowWidth, Math.max(0, layoutWidth - tableMinWidth));
			columnWeightedWidth = Table.columnWeightedWidth = ensureSize(Table.columnWeightedWidth, columns);
			float[] columnMinWidth = this.columnMinWidth, columnPrefWidth = this.columnPrefWidth;
			for (int i = 0; i < columns; i++) {
				float growWidth = columnPrefWidth[i] - columnMinWidth[i];
				float growRatio = growWidth / totalGrowWidth;
				columnWeightedWidth[i] = columnMinWidth[i] + extraWidth * growRatio;
			}
		}

		float[] rowWeightedHeight;
		float totalGrowHeight = tablePrefHeight - tableMinHeight;
		if (totalGrowHeight == 0)
			rowWeightedHeight = rowMinHeight;
		else {
			rowWeightedHeight = Table.rowWeightedHeight = ensureSize(Table.rowWeightedHeight, rows);
			float extraHeight = Math.min(totalGrowHeight, Math.max(0, layoutHeight - tableMinHeight));
			float[] rowMinHeight = this.rowMinHeight, rowPrefHeight = this.rowPrefHeight;
			for (int i = 0; i < rows; i++) {
				float growHeight = rowPrefHeight[i] - rowMinHeight[i];
				float growRatio = growHeight / totalGrowHeight;
				rowWeightedHeight[i] = rowMinHeight[i] + extraHeight * growRatio;
			}
		}

		// Determine actor and cell sizes (before expand or fill).
		for (int i = 0; i < cellCount; i++) {
			Cell c = cells.get(i);
			int column = c.column, row = c.row;
			Actor a = c.actor;

			float spannedWeightedWidth = 0;
			for (int ii = column, nn = ii + c.colspan; ii < nn; ii++)
				spannedWeightedWidth += columnWeightedWidth[ii];
			float weightedHeight = rowWeightedHeight[row];

			float prefWidth = c.prefWidth.get(a);
			float prefHeight = c.prefHeight.get(a);
			float minWidth = c.minWidth.get(a);
			float minHeight = c.minHeight.get(a);
			float maxWidth = c.maxWidth.get(a);
			float maxHeight = c.maxHeight.get(a);
			if (prefWidth < minWidth) prefWidth = minWidth;
			if (prefHeight < minHeight) prefHeight = minHeight;
			if (maxWidth > 0 && prefWidth > maxWidth) prefWidth = maxWidth;
			if (maxHeight > 0 && prefHeight > maxHeight) prefHeight = maxHeight;

			c.actorWidth = Math.min(spannedWeightedWidth - c.computedPadLeft - c.computedPadRight, prefWidth);
			c.actorHeight = Math.min(weightedHeight - c.computedPadTop - c.computedPadBottom, prefHeight);

			if (c.colspan == 1) columnWidth[column] = Math.max(columnWidth[column], spannedWeightedWidth);
			rowHeight[row] = Math.max(rowHeight[row], weightedHeight);
		}

		// Distribute remaining space to any expanding columns/rows.
		if (totalExpandWidth > 0) {
			float extra = layoutWidth - hpadding;
			for (int i = 0; i < columns; i++)
				extra -= columnWidth[i];
			float used = 0;
			int lastIndex = 0;
			for (int i = 0; i < columns; i++) {
				if (expandWidth[i] == 0) continue;
				float amount = extra * expandWidth[i] / totalExpandWidth;
				columnWidth[i] += amount;
				used += amount;
				lastIndex = i;
			}
			columnWidth[lastIndex] += extra - used;
		}
		if (totalExpandHeight > 0) {
			float extra = layoutHeight - vpadding;
			for (int i = 0; i < rows; i++)
				extra -= rowHeight[i];
			float used = 0;
			int lastIndex = 0;
			for (int i = 0; i < rows; i++) {
				if (expandHeight[i] == 0) continue;
				float amount = extra * expandHeight[i] / totalExpandHeight;
				rowHeight[i] += amount;
				used += amount;
				lastIndex = i;
			}
			rowHeight[lastIndex] += extra - used;
		}

		// Distribute any additional width added by colspanned cells to the columns spanned.
		for (int i = 0; i < cellCount; i++) {
			Cell c = cells.get(i);
			int colspan = c.colspan;
			if (colspan == 1) continue;

			float extraWidth = 0;
			for (int column = c.column, nn = column + colspan; column < nn; column++)
				extraWidth += columnWeightedWidth[column] - columnWidth[column];
			extraWidth -= Math.max(0, c.computedPadLeft + c.computedPadRight);

			extraWidth /= colspan;
			if (extraWidth > 0) {
				for (int column = c.column, nn = column + colspan; column < nn; column++)
					columnWidth[column] += extraWidth;
			}
		}

		// Determine table size.
		float tableWidth = hpadding, tableHeight = vpadding;
		for (int i = 0; i < columns; i++)
			tableWidth += columnWidth[i];
		for (int i = 0; i < rows; i++)
			tableHeight += rowHeight[i];

		// Position table within the container.
		int align = this.align;
		float x = layoutX + padLeft;
		if ((align & Align.right) != 0)
			x += layoutWidth - tableWidth;
		else if ((align & Align.left) == 0) // Center
			x += (layoutWidth - tableWidth) / 2;

		float y = layoutY + padTop;
		if ((align & Align.bottom) != 0)
			y += layoutHeight - tableHeight;
		else if ((align & Align.top) == 0) // Center
			y += (layoutHeight - tableHeight) / 2;

		// Position actors within cells.
		float currentX = x, currentY = y;
		for (int i = 0; i < cellCount; i++) {
			Cell c = cells.get(i);

			float spannedCellWidth = 0;
			for (int column = c.column, nn = column + c.colspan; column < nn; column++)
				spannedCellWidth += columnWidth[column];
			spannedCellWidth -= c.computedPadLeft + c.computedPadRight;

			currentX += c.computedPadLeft;

			if (c.fillX > 0) {
				c.actorWidth = spannedCellWidth * c.fillX;
				float maxWidth = c.maxWidth.get(c.actor);
				if (maxWidth > 0) c.actorWidth = Math.min(c.actorWidth, maxWidth);
			}
			if (c.fillY > 0) {
				c.actorHeight = rowHeight[c.row] * c.fillY - c.computedPadTop - c.computedPadBottom;
				float maxHeight = c.maxHeight.get(c.actor);
				if (maxHeight > 0) c.actorHeight = Math.min(c.actorHeight, maxHeight);
			}

			if ((c.align & Align.left) != 0)
				c.actorX = currentX;
			else if ((c.align & Align.right) != 0)
				c.actorX = currentX + spannedCellWidth - c.actorWidth;
			else
				c.actorX = currentX + (spannedCellWidth - c.actorWidth) / 2;

			if ((c.align & Align.top) != 0)
				c.actorY = currentY + c.computedPadTop;
			else if ((c.align & Align.bottom) != 0)
				c.actorY = currentY + rowHeight[c.row] - c.actorHeight - c.computedPadBottom;
			else
				c.actorY = currentY + (rowHeight[c.row] - c.actorHeight + c.computedPadTop - c.computedPadBottom) / 2;

			if (c.endRow) {
				currentX = x;
				currentY += rowHeight[c.row];
			} else
				currentX += spannedCellWidth + c.computedPadRight;
		}

		// Store debug rectangles.
		if (debug == Debug.none) return;
		if (debugRects != null) debugRects.clear();
		currentX = x;
		currentY = y;
		if (debug == Debug.table || debug == Debug.all) {
			TableDebug.addRectangle(this, Debug.table, layoutX, layoutY, layoutWidth, layoutHeight);
			TableDebug.addRectangle(this, Debug.table, x, y, tableWidth - hpadding, tableHeight - vpadding);
		}
		for (int i = 0; i < cellCount; i++) {
			Cell c = cells.get(i);

			// Actor bounds.
			if (debug == Debug.actor || debug == Debug.all)
				TableDebug.addRectangle(this, Debug.actor, c.actorX, c.actorY, c.actorWidth, c.actorHeight);

			// Cell bounds.
			float spannedCellWidth = 0;
			for (int column = c.column, nn = column + c.colspan; column < nn; column++)
				spannedCellWidth += columnWidth[column];
			spannedCellWidth -= c.computedPadLeft + c.computedPadRight;
			currentX += c.computedPadLeft;
			if (debug == Debug.cell || debug == Debug.all) {
				TableDebug.addRectangle(this, Debug.cell, currentX, currentY + c.computedPadTop, spannedCellWidth, rowHeight[c.row]
					- c.computedPadTop - c.computedPadBottom);
			}

			if (c.endRow) {
				currentX = x;
				currentY += rowHeight[c.row];
			} else
				currentX += spannedCellWidth + c.computedPadRight;
		}
	} ##FSTMerge## private void layout (float layoutX, float layoutY, float layoutWidth, float layoutHeight) {
		Array<Cell> cells = this.cells;
		int cellCount = cells.size;

		if (sizeInvalid) computeSize();

		float padLeft = this.padLeft.get(this);
		float hpadding = padLeft + padRight.get(this);
		float padTop = this.padTop.get(this);
		float vpadding = padTop + padBottom.get(this);

		int columns = this.columns, rows = this.rows;
		float[] expandWidth = this.expandWidth, expandHeight = this.expandHeight;
		float[] columnWidth = this.columnWidth, rowHeight = this.rowHeight;

		float totalExpandWidth = 0, totalExpandHeight = 0;
		for (int i = 0; i < columns; i++)
			totalExpandWidth += expandWidth[i];
		for (int i = 0; i < rows; i++)
			totalExpandHeight += expandHeight[i];

		// Size columns and rows between min and pref size using (preferred - min) size to weight distribution of extra space.
		float[] columnWeightedWidth;
		float totalGrowWidth = tablePrefWidth - tableMinWidth;
		if (totalGrowWidth == 0)
			columnWeightedWidth = columnMinWidth;
		else {
			float extraWidth = Math.min(totalGrowWidth, Math.max(0, layoutWidth - tableMinWidth));
			columnWeightedWidth = Table.columnWeightedWidth = ensureSize(Table.columnWeightedWidth, columns);
			float[] columnMinWidth = this.columnMinWidth, columnPrefWidth = this.columnPrefWidth;
			for (int i = 0; i < columns; i++) {
				float growWidth = columnPrefWidth[i] - columnMinWidth[i];
				float growRatio = growWidth / totalGrowWidth;
				columnWeightedWidth[i] = columnMinWidth[i] + extraWidth * growRatio;
			}
		}

		float[] rowWeightedHeight;
		float totalGrowHeight = tablePrefHeight - tableMinHeight;
		if (totalGrowHeight == 0)
			rowWeightedHeight = rowMinHeight;
		else {
			rowWeightedHeight = Table.rowWeightedHeight = ensureSize(Table.rowWeightedHeight, rows);
			float extraHeight = Math.min(totalGrowHeight, Math.max(0, layoutHeight - tableMinHeight));
			float[] rowMinHeight = this.rowMinHeight, rowPrefHeight = this.rowPrefHeight;
			for (int i = 0; i < rows; i++) {
				float growHeight = rowPrefHeight[i] - rowMinHeight[i];
				float growRatio = growHeight / totalGrowHeight;
				rowWeightedHeight[i] = rowMinHeight[i] + extraHeight * growRatio;
			}
		}

		// Determine actor and cell sizes (before expand or fill).
		for (int i = 0; i < cellCount; i++) {
			Cell c = cells.get(i);
			int column = c.column, row = c.row;
			Actor a = c.actor;

			float spannedWeightedWidth = 0;
			for (int ii = column, nn = ii + c.colspan; ii < nn; ii++)
				spannedWeightedWidth += columnWeightedWidth[ii];
			float weightedHeight = rowWeightedHeight[row];

			float prefWidth = c.prefWidth.get(a);
			float prefHeight = c.prefHeight.get(a);
			float minWidth = c.minWidth.get(a);
			float minHeight = c.minHeight.get(a);
			float maxWidth = c.maxWidth.get(a);
			float maxHeight = c.maxHeight.get(a);
			if (prefWidth < minWidth) prefWidth = minWidth;
			if (prefHeight < minHeight) prefHeight = minHeight;
			if (maxWidth > 0 && prefWidth > maxWidth) prefWidth = maxWidth;
			if (maxHeight > 0 && prefHeight > maxHeight) prefHeight = maxHeight;

			c.actorWidth = Math.min(spannedWeightedWidth - c.computedPadLeft - c.computedPadRight, prefWidth);
			c.actorHeight = Math.min(weightedHeight - c.computedPadTop - c.computedPadBottom, prefHeight);

			if (c.colspan == 1) columnWidth[column] = Math.max(columnWidth[column], spannedWeightedWidth);
			rowHeight[row] = Math.max(rowHeight[row], weightedHeight);
		}

		// Distribute remaining space to any expanding columns/rows.
		if (totalExpandWidth > 0) {
			float extra = layoutWidth - hpadding;
			for (int i = 0; i < columns; i++)
				extra -= columnWidth[i];
			float used = 0;
			int lastIndex = 0;
			for (int i = 0; i < columns; i++) {
				if (expandWidth[i] == 0) continue;
				float amount = extra * expandWidth[i] / totalExpandWidth;
				columnWidth[i] += amount;
				used += amount;
				lastIndex = i;
			}
			columnWidth[lastIndex] += extra - used;
		}
		if (totalExpandHeight > 0) {
			float extra = layoutHeight - vpadding;
			for (int i = 0; i < rows; i++)
				extra -= rowHeight[i];
			float used = 0;
			int lastIndex = 0;
			for (int i = 0; i < rows; i++) {
				if (expandHeight[i] == 0) continue;
				float amount = extra * expandHeight[i] / totalExpandHeight;
				rowHeight[i] += amount;
				used += amount;
				lastIndex = i;
			}
			rowHeight[lastIndex] += extra - used;
		}

		// Distribute any additional width added by colspanned cells to the columns spanned.
		for (int i = 0; i < cellCount; i++) {
			Cell c = cells.get(i);
			int colspan = c.colspan;
			if (colspan == 1) continue;

			float extraWidth = 0;
			for (int column = c.column, nn = column + colspan; column < nn; column++)
				extraWidth += columnWeightedWidth[column] - columnWidth[column];
			extraWidth -= Math.max(0, c.computedPadLeft + c.computedPadRight);

			extraWidth /= colspan;
			if (extraWidth > 0) {
				for (int column = c.column, nn = column + colspan; column < nn; column++)
					columnWidth[column] += extraWidth;
			}
		}

		// Determine table size.
		float tableWidth = hpadding, tableHeight = vpadding;
		for (int i = 0; i < columns; i++)
			tableWidth += columnWidth[i];
		for (int i = 0; i < rows; i++)
			tableHeight += rowHeight[i];

		// Position table within the container.
		int align = this.align;
		float x = layoutX + padLeft;
		if ((align & Align.right) != 0)
			x += layoutWidth - tableWidth;
		else if ((align & Align.left) == 0) // Center
			x += (layoutWidth - tableWidth) / 2;

		float y = layoutY + padTop;
		if ((align & Align.bottom) != 0)
			y += layoutHeight - tableHeight;
		else if ((align & Align.top) == 0) // Center
			y += (layoutHeight - tableHeight) / 2;

		// Position actors within cells.
		float currentX = x, currentY = y;
		for (int i = 0; i < cellCount; i++) {
			Cell c = cells.get(i);

			float spannedCellWidth = 0;
			for (int column = c.column, nn = column + c.colspan; column < nn; column++)
				spannedCellWidth += columnWidth[column];
			spannedCellWidth -= c.computedPadLeft + c.computedPadRight;

			currentX += c.computedPadLeft;

			if (c.fillX > 0) {
				c.actorWidth = spannedCellWidth * c.fillX;
				float maxWidth = c.maxWidth.get(c.actor);
				if (maxWidth > 0) c.actorWidth = Math.min(c.actorWidth, maxWidth);
			}
			if (c.fillY > 0) {
				c.actorHeight = rowHeight[c.row] * c.fillY - c.computedPadTop - c.computedPadBottom;
				float maxHeight = c.maxHeight.get(c.actor);
				if (maxHeight > 0) c.actorHeight = Math.min(c.actorHeight, maxHeight);
			}

			if ((c.align & Align.left) != 0)
				c.actorX = currentX;
			else if ((c.align & Align.right) != 0)
				c.actorX = currentX + spannedCellWidth - c.actorWidth;
			else
				c.actorX = currentX + (spannedCellWidth - c.actorWidth) / 2;

			if ((c.align & Align.top) != 0)
				c.actorY = currentY + c.computedPadTop;
			else if ((c.align & Align.bottom) != 0)
				c.actorY = currentY + rowHeight[c.row] - c.actorHeight - c.computedPadBottom;
			else
				c.actorY = currentY + (rowHeight[c.row] - c.actorHeight + c.computedPadTop - c.computedPadBottom) / 2;

			if (c.endRow) {
				currentX = x;
				currentY += rowHeight[c.row];
			} else
				currentX += spannedCellWidth + c.computedPadRight;
		}

		// Store debug rectangles.
		if (debug == Debug.none) return;
		if (debugRects != null) debugRects.clear();
		currentX = x;
		currentY = y;
		if (debug == Debug.table || debug == Debug.all) {
			TableDebug.addRectangle(this, Debug.table, layoutX, layoutY, layoutWidth, layoutHeight);
			TableDebug.addRectangle(this, Debug.table, x, y, tableWidth - hpadding, tableHeight - vpadding);
		}
		for (int i = 0; i < cellCount; i++) {
			Cell c = cells.get(i);

			// Actor bounds.
			if (debug == Debug.actor || debug == Debug.all)
				TableDebug.addRectangle(this, Debug.actor, c.actorX, c.actorY, c.actorWidth, c.actorHeight);

			// Cell bounds.
			float spannedCellWidth = 0;
			for (int column = c.column, nn = column + c.colspan; column < nn; column++)
				spannedCellWidth += columnWidth[column];
			spannedCellWidth -= c.computedPadLeft + c.computedPadRight;
			currentX += c.computedPadLeft;
			if (debug == Debug.cell || debug == Debug.all) {
				TableDebug.addRectangle(this, Debug.cell, currentX, currentY + c.computedPadTop, spannedCellWidth, rowHeight[c.row]
					- c.computedPadTop - c.computedPadBottom);
			}

			if (c.endRow) {
				currentX = x;
				currentY += rowHeight[c.row];
			} else
				currentX += spannedCellWidth + c.computedPadRight;
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_0bf49_db6a1/rev_0bf49-db6a1/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 3c6c1aa63937dc2a79d1b394b85a65764e5539c7
Parent1 SHA-1: 0bf494aa4e926eeeb2123ff13ffcc1fd6430f320
Parent2 SHA-1: db6a15910d651bf40e5198625d0e6a34f3e2949b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static public void drawDebug (Stage stage) {
		if (TableDebug.draw) TableDebug.draw(stage);
	} ##FSTMerge## static public void drawDebug (Stage stage) {
		if (TableDebug.draw) TableDebug.draw(stage);
	}
File path: /tmp/downloads/libgdx/revisions/rev_0bf49_db6a1/rev_0bf49-db6a1/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 3c6c1aa63937dc2a79d1b394b85a65764e5539c7
Parent1 SHA-1: 0bf494aa4e926eeeb2123ff13ffcc1fd6430f320
Parent2 SHA-1: db6a15910d651bf40e5198625d0e6a34f3e2949b
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static ##FSTMerge## static
File path: /tmp/downloads/libgdx/revisions/rev_0bf49_db6a1/rev_0bf49-db6a1/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java
############## CONFLICT ##############
Conflict type: ExtendsList
Merge Commit SHA-1: 3c6c1aa63937dc2a79d1b394b85a65764e5539c7
Parent1 SHA-1: 0bf494aa4e926eeeb2123ff13ffcc1fd6430f320
Parent2 SHA-1: db6a15910d651bf40e5198625d0e6a34f3e2949b
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## extends Rectangle ##FSTMerge## extends Rectangle
File path: /tmp/downloads/libgdx/revisions/rev_0bf49_db6a1/rev_0bf49-db6a1/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 3c6c1aa63937dc2a79d1b394b85a65764e5539c7
Parent1 SHA-1: 0bf494aa4e926eeeb2123ff13ffcc1fd6430f320
Parent2 SHA-1: db6a15910d651bf40e5198625d0e6a34f3e2949b
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final Debug type; ##FSTMerge## final Debug type;
File path: /tmp/downloads/libgdx/revisions/rev_0bf49_db6a1/rev_0bf49-db6a1/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 3c6c1aa63937dc2a79d1b394b85a65764e5539c7
Parent1 SHA-1: 0bf494aa4e926eeeb2123ff13ffcc1fd6430f320
Parent2 SHA-1: db6a15910d651bf40e5198625d0e6a34f3e2949b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public DebugRect (Debug type, float x, float y, float width, float height) {
			super(x, y, width, height);
			this.type = type;
		} ##FSTMerge## public DebugRect (Debug type, float x, float y, float width, float height) {
			super(x, y, width, height);
			this.type = type;
		}
File path: /tmp/downloads/libgdx/revisions/rev_0bf49_db6a1/rev_0bf49-db6a1/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 3c6c1aa63937dc2a79d1b394b85a65764e5539c7
Parent1 SHA-1: 0bf494aa4e926eeeb2123ff13ffcc1fd6430f320
Parent2 SHA-1: db6a15910d651bf40e5198625d0e6a34f3e2949b
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static ##FSTMerge## static
File path: /tmp/downloads/libgdx/revisions/rev_0bf49_db6a1/rev_0bf49-db6a1/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 3c6c1aa63937dc2a79d1b394b85a65764e5539c7
Parent1 SHA-1: 0bf494aa4e926eeeb2123ff13ffcc1fd6430f320
Parent2 SHA-1: db6a15910d651bf40e5198625d0e6a34f3e2949b
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static boolean draw; ##FSTMerge## static boolean draw;
File path: /tmp/downloads/libgdx/revisions/rev_0bf49_db6a1/rev_0bf49-db6a1/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 3c6c1aa63937dc2a79d1b394b85a65764e5539c7
Parent1 SHA-1: 0bf494aa4e926eeeb2123ff13ffcc1fd6430f320
Parent2 SHA-1: db6a15910d651bf40e5198625d0e6a34f3e2949b
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static private Application app; ##FSTMerge## static private Application app;
File path: /tmp/downloads/libgdx/revisions/rev_0bf49_db6a1/rev_0bf49-db6a1/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 3c6c1aa63937dc2a79d1b394b85a65764e5539c7
Parent1 SHA-1: 0bf494aa4e926eeeb2123ff13ffcc1fd6430f320
Parent2 SHA-1: db6a15910d651bf40e5198625d0e6a34f3e2949b
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static private ImmediateModeRenderer debugRenderer; ##FSTMerge## static private ImmediateModeRenderer debugRenderer;
File path: /tmp/downloads/libgdx/revisions/rev_0bf49_db6a1/rev_0bf49-db6a1/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 3c6c1aa63937dc2a79d1b394b85a65764e5539c7
Parent1 SHA-1: 0bf494aa4e926eeeb2123ff13ffcc1fd6430f320
Parent2 SHA-1: db6a15910d651bf40e5198625d0e6a34f3e2949b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static public void addRectangle (Table table, Debug type, float x, float y, float w, float h) {
			draw = true;
			if (table.debugRects == null) table.debugRects = new Array();
			table.debugRects.add(new DebugRect(type, x, table.getHeight() - y, w, h));
		} ##FSTMerge## static public void addRectangle (Table table, Debug type, float x, float y, float w, float h) {
			draw = true;
			if (table.debugRects == null) table.debugRects = new Array();
			table.debugRects.add(new DebugRect(type, x, table.getHeight() - y, w, h));
		}
File path: /tmp/downloads/libgdx/revisions/rev_0bf49_db6a1/rev_0bf49-db6a1/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 3c6c1aa63937dc2a79d1b394b85a65764e5539c7
Parent1 SHA-1: 0bf494aa4e926eeeb2123ff13ffcc1fd6430f320
Parent2 SHA-1: db6a15910d651bf40e5198625d0e6a34f3e2949b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static void draw (Stage stage) {
			if (app != Gdx.app) debugRenderer = new ImmediateModeRenderer20(128, false, true, 0);

			debugRenderer.begin(stage.getBatch().getProjectionMatrix(), GL20.GL_LINES);
			draw(stage.getActors());
			debugRenderer.end();
		} ##FSTMerge## static void draw (Stage stage) {
			// Handle cases where Android holds on to static objects
			if (app != Gdx.app || debugRenderer == null) {
				debugRenderer = new ImmediateModeRenderer20(128, false, true, 0);
				app = Gdx.app;
			}

			debugRenderer.begin(stage.getBatch().getProjectionMatrix(), GL20.GL_LINES);
			draw(stage.getActors());
			debugRenderer.end();
		}
File path: /tmp/downloads/libgdx/revisions/rev_0bf49_db6a1/rev_0bf49-db6a1/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 3c6c1aa63937dc2a79d1b394b85a65764e5539c7
Parent1 SHA-1: 0bf494aa4e926eeeb2123ff13ffcc1fd6430f320
Parent2 SHA-1: db6a15910d651bf40e5198625d0e6a34f3e2949b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static void draw (Array<Actor> actors) {
			for (int i = 0, n = actors.size; i < n; i++) {
				Actor actor = actors.get(i);
				if (!actor.isVisible()) continue;
				if (actor instanceof Table) draw((Table)actor);
				if (actor instanceof Group) draw(((Group)actor).getChildren());
			}
		} ##FSTMerge## static void draw (Array<Actor> actors) {
			for (int i = 0, n = actors.size; i < n; i++) {
				Actor actor = actors.get(i);
				if (!actor.isVisible()) continue;
				if (actor instanceof Table) draw((Table)actor);
				if (actor instanceof Group) draw(((Group)actor).getChildren());
			}
		}
File path: /tmp/downloads/libgdx/revisions/rev_0bf49_db6a1/rev_0bf49-db6a1/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 3c6c1aa63937dc2a79d1b394b85a65764e5539c7
Parent1 SHA-1: 0bf494aa4e926eeeb2123ff13ffcc1fd6430f320
Parent2 SHA-1: db6a15910d651bf40e5198625d0e6a34f3e2949b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static public void draw (Table table) {
			if (table.debug == Debug.none) return;
			Array<DebugRect> debugRects = table.debugRects;
			if (debugRects == null) return;

			float x = 0, y = 0;
			Actor parent = table;
			while (parent != null) {
				if (parent instanceof Group) {
					x += parent.getX();
					y += parent.getY();
				}
				parent = parent.getParent();
			}

			for (int i = 0, n = debugRects.size; i < n; i++) {
				DebugRect rect = debugRects.get(i);
				float x1 = x + rect.x;
				float y1 = y + rect.y - rect.height;
				float x2 = x1 + rect.width;
				float y2 = y1 + rect.height;
				float r = rect.type == Debug.cell ? 1 : 0;
				float g = rect.type == Debug.actor ? 1 : 0;
				float b = rect.type == Debug.table ? 1 : 0;

				debugRenderer.color(r, g, b, 1);
				debugRenderer.vertex(x1, y1, 0);
				debugRenderer.color(r, g, b, 1);
				debugRenderer.vertex(x1, y2, 0);

				debugRenderer.color(r, g, b, 1);
				debugRenderer.vertex(x1, y2, 0);
				debugRenderer.color(r, g, b, 1);
				debugRenderer.vertex(x2, y2, 0);

				debugRenderer.color(r, g, b, 1);
				debugRenderer.vertex(x2, y2, 0);
				debugRenderer.color(r, g, b, 1);
				debugRenderer.vertex(x2, y1, 0);

				debugRenderer.color(r, g, b, 1);
				debugRenderer.vertex(x2, y1, 0);
				debugRenderer.color(r, g, b, 1);
				debugRenderer.vertex(x1, y1, 0);

				if (debugRenderer.getNumVertices() == 128) debugRenderer.flush();
			}
		} ##FSTMerge## static public void draw (Table table) {
			if (table.debug == Debug.none) return;
			Array<DebugRect> debugRects = table.debugRects;
			if (debugRects == null) return;

			float x = 0, y = 0;
			Actor parent = table;
			while (parent != null) {
				if (parent instanceof Group) {
					x += parent.getX();
					y += parent.getY();
				}
				parent = parent.getParent();
			}

			for (int i = 0, n = debugRects.size; i < n; i++) {
				DebugRect rect = debugRects.get(i);
				float x1 = x + rect.x;
				float y1 = y + rect.y - rect.height;
				float x2 = x1 + rect.width;
				float y2 = y1 + rect.height;
				float r = rect.type == Debug.cell ? 1 : 0;
				float g = rect.type == Debug.actor ? 1 : 0;
				float b = rect.type == Debug.table ? 1 : 0;

				debugRenderer.color(r, g, b, 1);
				debugRenderer.vertex(x1, y1, 0);
				debugRenderer.color(r, g, b, 1);
				debugRenderer.vertex(x1, y2, 0);

				debugRenderer.color(r, g, b, 1);
				debugRenderer.vertex(x1, y2, 0);
				debugRenderer.color(r, g, b, 1);
				debugRenderer.vertex(x2, y2, 0);

				debugRenderer.color(r, g, b, 1);
				debugRenderer.vertex(x2, y2, 0);
				debugRenderer.color(r, g, b, 1);
				debugRenderer.vertex(x2, y1, 0);

				debugRenderer.color(r, g, b, 1);
				debugRenderer.vertex(x2, y1, 0);
				debugRenderer.color(r, g, b, 1);
				debugRenderer.vertex(x1, y1, 0);

				if (debugRenderer.getNumVertices() == 128) debugRenderer.flush();
			}
		}
File path: /tmp/downloads/libgdx/revisions/rev_0bf49_db6a1/rev_0bf49-db6a1/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 3c6c1aa63937dc2a79d1b394b85a65764e5539c7
Parent1 SHA-1: 0bf494aa4e926eeeb2123ff13ffcc1fd6430f320
Parent2 SHA-1: db6a15910d651bf40e5198625d0e6a34f3e2949b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public void setCenterPosition (float x, float y) {
		this.x = x - width / 2;
		this.y = y - height / 2;
	} ##FSTMerge## public void setCenterPosition(float x, float y) {
		this.x = x - width / 2;
		this.y = y - height / 2;
	} ##FSTMerge## public void setCenterPosition(float x, float y) {
		this.x = x - width / 2;
		this.y = y - height / 2;
	}
File path: /tmp/downloads/libgdx/revisions/rev_0bf49_db6a1/rev_0bf49-db6a1/gdx/src/com/badlogic/gdx/scenes/scene2d/Actor.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 3c6c1aa63937dc2a79d1b394b85a65764e5539c7
Parent1 SHA-1: 0bf494aa4e926eeeb2123ff13ffcc1fd6430f320
Parent2 SHA-1: db6a15910d651bf40e5198625d0e6a34f3e2949b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public float getCenterX () {
		return this.x + width / 2;
	} ##FSTMerge## public float getCenterX() {
		return this.x + width / 2;
	} ##FSTMerge## public float getCenterX() {
		return this.x + width / 2;
	}
File path: /tmp/downloads/libgdx/revisions/rev_0bf49_db6a1/rev_0bf49-db6a1/gdx/src/com/badlogic/gdx/scenes/scene2d/Actor.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 3c6c1aa63937dc2a79d1b394b85a65764e5539c7
Parent1 SHA-1: 0bf494aa4e926eeeb2123ff13ffcc1fd6430f320
Parent2 SHA-1: db6a15910d651bf40e5198625d0e6a34f3e2949b
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public float getCenterY () {
		return this.y + height / 2;
	} ##FSTMerge## public float getCenterY() {
		return this.y + height / 2;
	} ##FSTMerge## public float getCenterY() {
		return this.y + height / 2;
	}
File path: /tmp/downloads/libgdx/revisions/rev_0bf49_db6a1/rev_0bf49-db6a1/gdx/src/com/badlogic/gdx/scenes/scene2d/Actor.java

==================================================================================================================
Revision: /tmp/downloads/libgdx/revisions/rev_0cffe_fcb18/rev_0cffe-fcb18.revisions
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 27657c17a26a847a936a1485308aade2afb31d5c
Parent1 SHA-1: 0cffe3c321f2f63612b5c428c40a166eea37adbc
Parent2 SHA-1: fcb18ff6ae441da1003ef87e566e4aaf05782488
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public static final List<Class<? extends GdxTest>> tests = new ArrayList<Class<? extends GdxTest>>(Arrays.asList(
		// @off
		IssueTest.class,
		AccelerometerTest.class,
		ActionSequenceTest.class,
		ActionTest.class,
		AlphaTest.class,
		Animation3DTest.class,
		AnimationTest.class,
		AssetManagerTest.class,
		AtlasIssueTest.class,
		AudioDeviceTest.class,
		AudioRecorderTest.class,
		Basic3DSceneTest.class,
		Basic3DTest.class,
		Benchmark3DTest.class,
		BitmapFontAlignmentTest.class,
		BitmapFontDistanceFieldTest.class,
		BitmapFontFlipTest.class,
		BitmapFontMetricsTest.class,
		BitmapFontTest.class,
		BlitTest.class,
		Box2DTest.class,
		Box2DTestCollection.class,
		Bresenham2Test.class,
		BufferUtilsTest.class,
		BulletTestCollection.class,
		ContainerTest.class,
		CullTest.class,
		DelaunayTriangulatorTest.class,
		DeltaTimeTest.class,
		DirtyRenderingTest.class,
		DragAndDropTest.class,
		ETC1Test.class,
//		EarClippingTriangulatorTest.class,
		EdgeDetectionTest.class,
		ExitTest.class,
		ExternalMusicTest.class,
		FilesTest.class,
		FilterPerformanceTest.class,
		FloatTextureTest.class,
		FogTest.class,
		FrameBufferTest.class,
		FramebufferToTextureTest.class,
		FullscreenTest.class,
		GamepadTest.class,
		Gdx2DTest.class,
		GestureDetectorTest.class,
		GroupCullingTest.class,
		GroupFadeTest.class,
		GroupTest.class,
		HelloTriangle.class,
		HexagonalTiledMapTest.class,
		I18NMessageTest.class,
		I18NSimpleMessageTest.class,
		ImageScaleTest.class,
		ImageTest.class,
		ImmediateModeRendererTest.class,
		IndexBufferObjectShaderTest.class,
		InputTest.class,
		IntegerBitmapFontTest.class,
		InterpolationTest.class,
		InverseKinematicsTest.class,
		IsometricTileTest.class,
		KinematicBodyTest.class,
		LabelScaleTest.class,
		LabelTest.class,
		LifeCycleTest.class,
		LightsTest.class,
		MaterialTest.class,
		MatrixJNITest.class,
		MeshShaderTest.class,
		MipMapTest.class,
		ModelTest.class,
		MoveSpriteExample.class,
		MultitouchTest.class,
		MusicTest.class,
		NetAPITest.class,
		NinePatchTest.class,
		OnscreenKeyboardTest.class,
		PathTest.class,
		ParallaxTest.class,
		ParticleEmitterTest.class,
		PixelsPerInchTest.class,
		PixmapBlendingTest.class,
		PixmapPackerTest.class,
		PixmapTest.class,
		PolygonRegionTest.class,
		PolygonSpriteTest.class,
		PreferencesTest.class,
		ProjectTest.class,
		ProjectiveTextureTest.class,
		ReflectionTest.class,
		RotationTest.class,
		RunnablePostTest.class,
		Scene2DDebugRendererTest.class,
		Scene2dTest.class,
		ScrollPane2Test.class,
		ScrollPaneScrollBarsTest.class,
		ScrollPaneTest.class,
		SelectTest.class,
		ShaderCollectionTest.class,
		ShaderMultitextureTest.class,
		ShaderTest.class,
		ShadowMappingTest.class,
		ShapeRendererTest.class,
		SimpleAnimationTest.class,
		SimpleDecalTest.class,
		SimpleStageCullingTest.class,
		SimpleVertexShader.class,
		SkeletonTest.class,
		SoftKeyboardTest.class,
		SortedSpriteTest.class,
		SoundTest.class,
		SpriteBatchRotationTest.class,
		SpriteBatchShaderTest.class,
		SpriteBatchTest.class,
		SpriteCacheOffsetTest.class,
		SpriteCacheTest.class,
		StagePerformanceTest.class,
		StageTest.class,
		StateMachineTest.class,
		SuperKoalio.class,
		TableLayoutTest.class,
		TableTest.class,
		TextAreaTest.class,
		TextButtonTest.class,
		TextInputDialogTest.class,
		TextureAtlasTest.class,
		TextureDataTest.class,
		TextureDownloadTest.class,
		TextureFormatTest.class,
		TideMapAssetManagerTest.class,
		TideMapDirectLoaderTest.class,
		TileTest.class,
		TiledMapAssetManagerTest.class,
		TiledMapAtlasAssetManagerTest.class,
		TiledMapBench.class,
		TimerTest.class,
		TimeUtilsTest.class,
		TouchpadTest.class,
		TreeTest.class,
		UISimpleTest.class,
		UITest.class,
		Vector2dTest.class,
		VertexBufferObjectShaderTest.class,
		VibratorTest.class,
		ViewportTest1.class,
		ViewportTest2.class,
		ViewportTest3.class,
		YDownTest.class
		// @on

		// SoundTouchTest.class, Mpg123Test.class, WavTest.class, FreeTypeTest.class,
		// InternationalFontsTest.class, VorbisTest.class
		)); ##FSTMerge## public static final List<Class<? extends GdxTest>> tests = new ArrayList<Class<? extends GdxTest>>(Arrays.asList(
		// @off
		IssueTest.class,
		AccelerometerTest.class,
		ActionSequenceTest.class,
		ActionTest.class,
		AlphaTest.class,
		Animation3DTest.class,
		AnimationTest.class,
		AssetManagerTest.class,
		AtlasIssueTest.class,
		AudioDeviceTest.class,
		AudioRecorderTest.class,
		Basic3DSceneTest.class,
		Basic3DTest.class,
		Benchmark3DTest.class,
		BitmapFontAlignmentTest.class,
		BitmapFontDistanceFieldTest.class,
		BitmapFontFlipTest.class,
		BitmapFontMetricsTest.class,
		BitmapFontTest.class,
		BlitTest.class,
		Box2DTest.class,
		Box2DTestCollection.class,
		Bresenham2Test.class,
		BufferUtilsTest.class,
		BulletTestCollection.class,
		ContainerTest.class,
		CullTest.class,
		DelaunayTriangulatorTest.class,
		DeltaTimeTest.class,
		DirtyRenderingTest.class,
		DragAndDropTest.class,
		ETC1Test.class,
//		EarClippingTriangulatorTest.class,
		EdgeDetectionTest.class,
		ExitTest.class,
		ExternalMusicTest.class,
		FilesTest.class,
		FilterPerformanceTest.class,
		FloatTextureTest.class,
		FogTest.class,
		FrameBufferTest.class,
		FramebufferToTextureTest.class,
		FullscreenTest.class,
		GamepadTest.class,
		Gdx2DTest.class,
		GestureDetectorTest.class,
		GroupCullingTest.class,
		GroupFadeTest.class,
		GroupTest.class,
		HelloTriangle.class,
		HexagonalTiledMapTest.class,
		I18NMessageTest.class,
		I18NSimpleMessageTest.class,
		ImageScaleTest.class,
		ImageTest.class,
		ImmediateModeRendererTest.class,
		IndexBufferObjectShaderTest.class,
		InputTest.class,
		IntegerBitmapFontTest.class,
		InterpolationTest.class,
		InverseKinematicsTest.class,
		IsometricTileTest.class,
		KinematicBodyTest.class,
		LabelScaleTest.class,
		LabelTest.class,
		LifeCycleTest.class,
		LightsTest.class,
		MaterialTest.class,
		MatrixJNITest.class,
		MeshShaderTest.class,
		MipMapTest.class,
		ModelTest.class,
		MoveSpriteExample.class,
		MultitouchTest.class,
		MusicTest.class,
		NetAPITest.class,
		NinePatchTest.class,
		OnscreenKeyboardTest.class,
		PathTest.class,
		ParallaxTest.class,
		ParticleEmitterTest.class,
		PixelsPerInchTest.class,
		PixmapBlendingTest.class,
		PixmapPackerTest.class,
		PixmapTest.class,
		PolygonRegionTest.class,
		PolygonSpriteTest.class,
		PreferencesTest.class,
		ProjectTest.class,
		ProjectiveTextureTest.class,
		ReflectionTest.class,
		RotationTest.class,
		RunnablePostTest.class,
		Scene2dTest.class,
		ScrollPane2Test.class,
		ScrollPaneScrollBarsTest.class,
		ScrollPaneTest.class,
		SelectTest.class,
		ShaderCollectionTest.class,
		ShaderMultitextureTest.class,
		ShaderTest.class,
		ShadowMappingTest.class,
		ShapeRendererTest.class,
		SimpleAnimationTest.class,
		SimpleDecalTest.class,
		SimpleStageCullingTest.class,
		SimpleVertexShader.class,
		SkeletonTest.class,
		SoftKeyboardTest.class,
		SortedSpriteTest.class,
		SoundTest.class,
		SpriteBatchRotationTest.class,
		SpriteBatchShaderTest.class,
		SpriteBatchTest.class,
		SpriteCacheOffsetTest.class,
		SpriteCacheTest.class,
		StagePerformanceTest.class,
		StageTest.class,
		StateMachineTest.class,
		SuperKoalio.class,
		TableLayoutTest.class,
		TableTest.class,
		TextAreaTest.class,
		TextButtonTest.class,
		TextInputDialogTest.class,
		TextureAtlasTest.class,
		TextureDataTest.class,
		TextureDownloadTest.class,
		TextureFormatTest.class,
		TideMapAssetManagerTest.class,
		TideMapDirectLoaderTest.class,
		TileTest.class,
		TiledMapAssetManagerTest.class,
		TiledMapAtlasAssetManagerTest.class,
		TiledMapBench.class,
		TimerTest.class,
		TimeUtilsTest.class,
		TouchpadTest.class,
		TreeTest.class,
		UISimpleTest.class,
		UITest.class,
		Vector2dTest.class,
		VertexBufferObjectShaderTest.class,
		VibratorTest.class,
		ViewportTest1.class,
		ViewportTest2.class,
		ViewportTest3.class,
		YDownTest.class
		// @on

		// SoundTouchTest.class, Mpg123Test.class, WavTest.class, FreeTypeTest.class,
		// InternationalFontsTest.class, VorbisTest.class
		)); ##FSTMerge## public static final List<Class<? extends GdxTest>> tests = new ArrayList<Class<? extends GdxTest>>(Arrays.asList(
		// @off
		IssueTest.class,
		AccelerometerTest.class,
		ActionSequenceTest.class,
		ActionTest.class,
		AlphaTest.class,
		Animation3DTest.class,
		AnimationTest.class,
		AssetManagerTest.class,
		AtlasIssueTest.class,
		AudioDeviceTest.class,
		AudioRecorderTest.class,
		Basic3DSceneTest.class,
		Basic3DTest.class,
		Benchmark3DTest.class,
		BitmapFontAlignmentTest.class,
		BitmapFontDistanceFieldTest.class,
		BitmapFontFlipTest.class,
		BitmapFontMetricsTest.class,
		BitmapFontTest.class,
		BlitTest.class,
		Box2DTest.class,
		Box2DTestCollection.class,
		Bresenham2Test.class,
		BufferUtilsTest.class,
		BulletTestCollection.class,
		ContainerTest.class,
		CullTest.class,
		DelaunayTriangulatorTest.class,
		DeltaTimeTest.class,
		DirtyRenderingTest.class,
		DragAndDropTest.class,
		ETC1Test.class,
//		EarClippingTriangulatorTest.class,
		EdgeDetectionTest.class,
		ExitTest.class,
		ExternalMusicTest.class,
		FilesTest.class,
		FilterPerformanceTest.class,
		FloatTextureTest.class,
		FogTest.class,
		FrameBufferTest.class,
		FramebufferToTextureTest.class,
		FullscreenTest.class,
		GamepadTest.class,
		Gdx2DTest.class,
		GestureDetectorTest.class,
		GroupCullingTest.class,
		GroupFadeTest.class,
		GroupTest.class,
		HelloTriangle.class,
		HexagonalTiledMapTest.class,
		I18NMessageTest.class,
		I18NSimpleMessageTest.class,
		ImageScaleTest.class,
		ImageTest.class,
		ImmediateModeRendererTest.class,
		IndexBufferObjectShaderTest.class,
		InputTest.class,
		IntegerBitmapFontTest.class,
		InterpolationTest.class,
		InverseKinematicsTest.class,
		IsometricTileTest.class,
		KinematicBodyTest.class,
		LabelScaleTest.class,
		LabelTest.class,
		LifeCycleTest.class,
		LightsTest.class,
		MaterialTest.class,
		MatrixJNITest.class,
		MeshShaderTest.class,
		MipMapTest.class,
		ModelTest.class,
		MoveSpriteExample.class,
		MultitouchTest.class,
		MusicTest.class,
		NetAPITest.class,
		NinePatchTest.class,
		OnscreenKeyboardTest.class,
		PathTest.class,
		ParallaxTest.class,
		ParticleControllerTest.class,
		ParticleEmitterTest.class,
		PixelsPerInchTest.class,
		PixmapBlendingTest.class,
		PixmapPackerTest.class,
		PixmapTest.class,
		PolygonRegionTest.class,
		PolygonSpriteTest.class,
		PreferencesTest.class,
		ProjectTest.class,
		ProjectiveTextureTest.class,
		ReflectionTest.class,
		RotationTest.class,
		RunnablePostTest.class,
		Scene2dTest.class,
		ScrollPane2Test.class,
		ScrollPaneScrollBarsTest.class,
		ScrollPaneTest.class,
		SelectTest.class,
		ShaderCollectionTest.class,
		ShaderMultitextureTest.class,
		ShaderTest.class,
		ShadowMappingTest.class,
		ShapeRendererTest.class,
		SimpleAnimationTest.class,
		SimpleDecalTest.class,
		SimpleStageCullingTest.class,
		SimpleVertexShader.class,
		SkeletonTest.class,
		SoftKeyboardTest.class,
		SortedSpriteTest.class,
		SoundTest.class,
		SpriteBatchRotationTest.class,
		SpriteBatchShaderTest.class,
		SpriteBatchTest.class,
		SpriteCacheOffsetTest.class,
		SpriteCacheTest.class,
		StagePerformanceTest.class,
		StageTest.class,
		StateMachineTest.class,
		SuperKoalio.class,
		TableLayoutTest.class,
		TableTest.class,
		TextAreaTest.class,
		TextButtonTest.class,
		TextInputDialogTest.class,
		TextureAtlasTest.class,
		TextureDataTest.class,
		TextureDownloadTest.class,
		TextureFormatTest.class,
		TideMapAssetManagerTest.class,
		TideMapDirectLoaderTest.class,
		TileTest.class,
		TiledMapAssetManagerTest.class,
		TiledMapAtlasAssetManagerTest.class,
		TiledMapBench.class,
		TimerTest.class,
		TimeUtilsTest.class,
		TouchpadTest.class,
		TreeTest.class,
		UISimpleTest.class,
		UITest.class,
		Vector2dTest.class,
		VertexBufferObjectShaderTest.class,
		VibratorTest.class,
		ViewportTest1.class,
		ViewportTest2.class,
		ViewportTest3.class,
		YDownTest.class
		// @on

		// SoundTouchTest.class, Mpg123Test.class, WavTest.class, FreeTypeTest.class,
		// InternationalFontsTest.class, VorbisTest.class
		));
File path: /tmp/downloads/libgdx/revisions/rev_0cffe_fcb18/rev_0cffe-fcb18/tests/gdx-tests/src/com/badlogic/gdx/tests/utils/GdxTests.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 27657c17a26a847a936a1485308aade2afb31d5c
Parent1 SHA-1: 0cffe3c321f2f63612b5c428c40a166eea37adbc
Parent2 SHA-1: fcb18ff6ae441da1003ef87e566e4aaf05782488
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ Array<DebugRect> debugRects = new Array<DebugRect>(); ##FSTMerge## Array<DebugRect> debugRects; ##FSTMerge## Array<DebugRect> debugRects;
File path: /tmp/downloads/libgdx/revisions/rev_0cffe_fcb18/rev_0cffe-fcb18/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 27657c17a26a847a936a1485308aade2afb31d5c
Parent1 SHA-1: 0cffe3c321f2f63612b5c428c40a166eea37adbc
Parent2 SHA-1: fcb18ff6ae441da1003ef87e566e4aaf05782488
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public void reset () {
		clear();
		padTop = Value.zero;
		padLeft = Value.zero;
		padBottom = Value.zero;
		padRight = Value.zero;
		align = Align.center;
		if (debug != Debug.none) {
			Scene2DDebugRenderer.debugRectPool.freeAll(debugRects);
			debugRects.clear();
		}
		debug = Debug.none;
		cellDefaults.defaults();
		for (int i = 0, n = columnDefaults.size; i < n; i++) {
			Cell columnCell = columnDefaults.get(i);
			if (columnCell != null) cellPool.free(columnCell);
		}
		columnDefaults.clear();
	} ##FSTMerge## public void reset () {
		clear();
		padTop = Value.zero;
		padLeft = Value.zero;
		padBottom = Value.zero;
		padRight = Value.zero;
		align = Align.center;
		if (debug != Debug.none) debugRects.clear();
		debug = Debug.none;
		cellDefaults.defaults();
		for (int i = 0, n = columnDefaults.size; i < n; i++) {
			Cell columnCell = columnDefaults.get(i);
			if (columnCell != null) cellPool.free(columnCell);
		}
		columnDefaults.clear();
	} ##FSTMerge## public void reset () {
		clear();
		padTop = Value.zero;
		padLeft = Value.zero;
		padBottom = Value.zero;
		padRight = Value.zero;
		align = Align.center;
		if (debug != Debug.none) debugRects.clear();
		debug = Debug.none;
		cellDefaults.defaults();
		for (int i = 0, n = columnDefaults.size; i < n; i++) {
			Cell columnCell = columnDefaults.get(i);
			if (columnCell != null) cellPool.free(columnCell);
		}
		columnDefaults.clear();
	}
File path: /tmp/downloads/libgdx/revisions/rev_0cffe_fcb18/rev_0cffe-fcb18/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 27657c17a26a847a936a1485308aade2afb31d5c
Parent1 SHA-1: 0cffe3c321f2f63612b5c428c40a166eea37adbc
Parent2 SHA-1: fcb18ff6ae441da1003ef87e566e4aaf05782488
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public Table debug (Debug debug) {
		this.debug = debug;
		if (debug == Debug.none) {
			if (debugRects != null) {
				Scene2DDebugRenderer.debugRectPool.freeAll(debugRects);
				debugRects.clear();
			}
		} else
			invalidate();
		return this;
	} ##FSTMerge## public Table debug (Debug debug) {
		this.debug = debug;
		if (debug == Debug.none) {
			if (debugRects != null) debugRects.clear();
		} else
			invalidate();
		return this;
	} ##FSTMerge## public Table debug (Debug debug) {
		this.debug = debug;
		if (debug == Debug.none) {
			if (debugRects != null) debugRects.clear();
		} else
			invalidate();
		return this;
	}
File path: /tmp/downloads/libgdx/revisions/rev_0cffe_fcb18/rev_0cffe-fcb18/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 27657c17a26a847a936a1485308aade2afb31d5c
Parent1 SHA-1: 0cffe3c321f2f63612b5c428c40a166eea37adbc
Parent2 SHA-1: fcb18ff6ae441da1003ef87e566e4aaf05782488
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ private void layout (float layoutX, float layoutY, float layoutWidth, float layoutHeight) {
		Array<Cell> cells = this.cells;
		int cellCount = cells.size;

		if (sizeInvalid) computeSize();

		float padLeft = this.padLeft.get(this);
		float hpadding = padLeft + padRight.get(this);
		float padTop = this.padTop.get(this);
		float vpadding = padTop + padBottom.get(this);

		int columns = this.columns, rows = this.rows;
		float[] expandWidth = this.expandWidth, expandHeight = this.expandHeight;
		float[] columnWidth = this.columnWidth, rowHeight = this.rowHeight;

		float totalExpandWidth = 0, totalExpandHeight = 0;
		for (int i = 0; i < columns; i++)
			totalExpandWidth += expandWidth[i];
		for (int i = 0; i < rows; i++)
			totalExpandHeight += expandHeight[i];

		// Size columns and rows between min and pref size using (preferred - min) size to weight distribution of extra space.
		float[] columnWeightedWidth;
		float totalGrowWidth = tablePrefWidth - tableMinWidth;
		if (totalGrowWidth == 0)
			columnWeightedWidth = columnMinWidth;
		else {
			float extraWidth = Math.min(totalGrowWidth, Math.max(0, layoutWidth - tableMinWidth));
			columnWeightedWidth = Table.columnWeightedWidth = ensureSize(Table.columnWeightedWidth, columns);
			float[] columnMinWidth = this.columnMinWidth, columnPrefWidth = this.columnPrefWidth;
			for (int i = 0; i < columns; i++) {
				float growWidth = columnPrefWidth[i] - columnMinWidth[i];
				float growRatio = growWidth / totalGrowWidth;
				columnWeightedWidth[i] = columnMinWidth[i] + extraWidth * growRatio;
			}
		}

		float[] rowWeightedHeight;
		float totalGrowHeight = tablePrefHeight - tableMinHeight;
		if (totalGrowHeight == 0)
			rowWeightedHeight = rowMinHeight;
		else {
			rowWeightedHeight = Table.rowWeightedHeight = ensureSize(Table.rowWeightedHeight, rows);
			float extraHeight = Math.min(totalGrowHeight, Math.max(0, layoutHeight - tableMinHeight));
			float[] rowMinHeight = this.rowMinHeight, rowPrefHeight = this.rowPrefHeight;
			for (int i = 0; i < rows; i++) {
				float growHeight = rowPrefHeight[i] - rowMinHeight[i];
				float growRatio = growHeight / totalGrowHeight;
				rowWeightedHeight[i] = rowMinHeight[i] + extraHeight * growRatio;
			}
		}

		// Determine actor and cell sizes (before expand or fill).
		for (int i = 0; i < cellCount; i++) {
			Cell c = cells.get(i);
			int column = c.column, row = c.row;
			Actor a = c.actor;

			float spannedWeightedWidth = 0;
			for (int ii = column, nn = ii + c.colspan; ii < nn; ii++)
				spannedWeightedWidth += columnWeightedWidth[ii];
			float weightedHeight = rowWeightedHeight[row];

			float prefWidth = c.prefWidth.get(a);
			float prefHeight = c.prefHeight.get(a);
			float minWidth = c.minWidth.get(a);
			float minHeight = c.minHeight.get(a);
			float maxWidth = c.maxWidth.get(a);
			float maxHeight = c.maxHeight.get(a);
			if (prefWidth < minWidth) prefWidth = minWidth;
			if (prefHeight < minHeight) prefHeight = minHeight;
			if (maxWidth > 0 && prefWidth > maxWidth) prefWidth = maxWidth;
			if (maxHeight > 0 && prefHeight > maxHeight) prefHeight = maxHeight;

			c.actorWidth = Math.min(spannedWeightedWidth - c.computedPadLeft - c.computedPadRight, prefWidth);
			c.actorHeight = Math.min(weightedHeight - c.computedPadTop - c.computedPadBottom, prefHeight);

			if (c.colspan == 1) columnWidth[column] = Math.max(columnWidth[column], spannedWeightedWidth);
			rowHeight[row] = Math.max(rowHeight[row], weightedHeight);
		}

		// Distribute remaining space to any expanding columns/rows.
		if (totalExpandWidth > 0) {
			float extra = layoutWidth - hpadding;
			for (int i = 0; i < columns; i++)
				extra -= columnWidth[i];
			float used = 0;
			int lastIndex = 0;
			for (int i = 0; i < columns; i++) {
				if (expandWidth[i] == 0) continue;
				float amount = extra * expandWidth[i] / totalExpandWidth;
				columnWidth[i] += amount;
				used += amount;
				lastIndex = i;
			}
			columnWidth[lastIndex] += extra - used;
		}
		if (totalExpandHeight > 0) {
			float extra = layoutHeight - vpadding;
			for (int i = 0; i < rows; i++)
				extra -= rowHeight[i];
			float used = 0;
			int lastIndex = 0;
			for (int i = 0; i < rows; i++) {
				if (expandHeight[i] == 0) continue;
				float amount = extra * expandHeight[i] / totalExpandHeight;
				rowHeight[i] += amount;
				used += amount;
				lastIndex = i;
			}
			rowHeight[lastIndex] += extra - used;
		}

		// Distribute any additional width added by colspanned cells to the columns spanned.
		for (int i = 0; i < cellCount; i++) {
			Cell c = cells.get(i);
			int colspan = c.colspan;
			if (colspan == 1) continue;

			float extraWidth = 0;
			for (int column = c.column, nn = column + colspan; column < nn; column++)
				extraWidth += columnWeightedWidth[column] - columnWidth[column];
			extraWidth -= Math.max(0, c.computedPadLeft + c.computedPadRight);

			extraWidth /= colspan;
			if (extraWidth > 0) {
				for (int column = c.column, nn = column + colspan; column < nn; column++)
					columnWidth[column] += extraWidth;
			}
		}

		// Determine table size.
		float tableWidth = hpadding, tableHeight = vpadding;
		for (int i = 0; i < columns; i++)
			tableWidth += columnWidth[i];
		for (int i = 0; i < rows; i++)
			tableHeight += rowHeight[i];

		// Position table within the container.
		int align = this.align;
		float x = layoutX + padLeft;
		if ((align & Align.right) != 0)
			x += layoutWidth - tableWidth;
		else if ((align & Align.left) == 0) // Center
			x += (layoutWidth - tableWidth) / 2;

		float y = layoutY + padTop;
		if ((align & Align.bottom) != 0)
			y += layoutHeight - tableHeight;
		else if ((align & Align.top) == 0) // Center
			y += (layoutHeight - tableHeight) / 2;

		// Position actors within cells.
		float currentX = x, currentY = y;
		for (int i = 0; i < cellCount; i++) {
			Cell c = cells.get(i);

			float spannedCellWidth = 0;
			for (int column = c.column, nn = column + c.colspan; column < nn; column++)
				spannedCellWidth += columnWidth[column];
			spannedCellWidth -= c.computedPadLeft + c.computedPadRight;

			currentX += c.computedPadLeft;

			if (c.fillX > 0) {
				c.actorWidth = spannedCellWidth * c.fillX;
				float maxWidth = c.maxWidth.get(c.actor);
				if (maxWidth > 0) c.actorWidth = Math.min(c.actorWidth, maxWidth);
			}
			if (c.fillY > 0) {
				c.actorHeight = rowHeight[c.row] * c.fillY - c.computedPadTop - c.computedPadBottom;
				float maxHeight = c.maxHeight.get(c.actor);
				if (maxHeight > 0) c.actorHeight = Math.min(c.actorHeight, maxHeight);
			}

			if ((c.align & Align.left) != 0)
				c.actorX = currentX;
			else if ((c.align & Align.right) != 0)
				c.actorX = currentX + spannedCellWidth - c.actorWidth;
			else
				c.actorX = currentX + (spannedCellWidth - c.actorWidth) / 2;

			if ((c.align & Align.top) != 0)
				c.actorY = currentY + c.computedPadTop;
			else if ((c.align & Align.bottom) != 0)
				c.actorY = currentY + rowHeight[c.row] - c.actorHeight - c.computedPadBottom;
			else
				c.actorY = currentY + (rowHeight[c.row] - c.actorHeight + c.computedPadTop - c.computedPadBottom) / 2;

			if (c.endRow) {
				currentX = x;
				currentY += rowHeight[c.row];
			} else
				currentX += spannedCellWidth + c.computedPadRight;
		}

		// Store debug rectangles.
		if (debug == Debug.none) return;
		if (debugRects != null) {
			Scene2DDebugRenderer.debugRectPool.freeAll(debugRects);
			debugRects.clear();
		}
		currentX = x;
		currentY = y;
		if (debug == Debug.table || debug == Debug.all) {
			addDebugRect(layoutX, layoutY, layoutWidth, layoutHeight, tableColor);
			addDebugRect(x, y, tableWidth - hpadding, tableHeight - vpadding, tableColor);
		}
		for (int i = 0; i < cellCount; i++) {
			Cell c = cells.get(i);

			// Actor bounds.
			if (debug == Debug.actor || debug == Debug.all)
				addDebugRect(c.actorX, c.actorY, c.actorWidth, c.actorHeight, Actor.debugColor);

			// Cell bounds.
			float spannedCellWidth = 0;
			for (int column = c.column, nn = column + c.colspan; column < nn; column++)
				spannedCellWidth += columnWidth[column];
			spannedCellWidth -= c.computedPadLeft + c.computedPadRight;
			currentX += c.computedPadLeft;
			if (debug == Debug.cell || debug == Debug.all) {
				addDebugRect(currentX, currentY + c.computedPadTop, spannedCellWidth, rowHeight[c.row] - c.computedPadTop
					- c.computedPadBottom, cellColor);
			}

			if (c.endRow) {
				currentX = x;
				currentY += rowHeight[c.row];
			} else
				currentX += spannedCellWidth + c.computedPadRight;
		}
	} ##FSTMerge## private void layout (float layoutX, float layoutY, float layoutWidth, float layoutHeight) {
		Array<Cell> cells = this.cells;
		int cellCount = cells.size;

		if (sizeInvalid) computeSize();

		float padLeft = this.padLeft.get(this);
		float hpadding = padLeft + padRight.get(this);
		float padTop = this.padTop.get(this);
		float vpadding = padTop + padBottom.get(this);

		int columns = this.columns, rows = this.rows;
		float[] expandWidth = this.expandWidth, expandHeight = this.expandHeight;
		float[] columnWidth = this.columnWidth, rowHeight = this.rowHeight;

		float totalExpandWidth = 0, totalExpandHeight = 0;
		for (int i = 0; i < columns; i++)
			totalExpandWidth += expandWidth[i];
		for (int i = 0; i < rows; i++)
			totalExpandHeight += expandHeight[i];

		// Size columns and rows between min and pref size using (preferred - min) size to weight distribution of extra space.
		float[] columnWeightedWidth;
		float totalGrowWidth = tablePrefWidth - tableMinWidth;
		if (totalGrowWidth == 0)
			columnWeightedWidth = columnMinWidth;
		else {
			float extraWidth = Math.min(totalGrowWidth, Math.max(0, layoutWidth - tableMinWidth));
			columnWeightedWidth = Table.columnWeightedWidth = ensureSize(Table.columnWeightedWidth, columns);
			float[] columnMinWidth = this.columnMinWidth, columnPrefWidth = this.columnPrefWidth;
			for (int i = 0; i < columns; i++) {
				float growWidth = columnPrefWidth[i] - columnMinWidth[i];
				float growRatio = growWidth / totalGrowWidth;
				columnWeightedWidth[i] = columnMinWidth[i] + extraWidth * growRatio;
			}
		}

		float[] rowWeightedHeight;
		float totalGrowHeight = tablePrefHeight - tableMinHeight;
		if (totalGrowHeight == 0)
			rowWeightedHeight = rowMinHeight;
		else {
			rowWeightedHeight = Table.rowWeightedHeight = ensureSize(Table.rowWeightedHeight, rows);
			float extraHeight = Math.min(totalGrowHeight, Math.max(0, layoutHeight - tableMinHeight));
			float[] rowMinHeight = this.rowMinHeight, rowPrefHeight = this.rowPrefHeight;
			for (int i = 0; i < rows; i++) {
				float growHeight = rowPrefHeight[i] - rowMinHeight[i];
				float growRatio = growHeight / totalGrowHeight;
				rowWeightedHeight[i] = rowMinHeight[i] + extraHeight * growRatio;
			}
		}

		// Determine actor and cell sizes (before expand or fill).
		for (int i = 0; i < cellCount; i++) {
			Cell c = cells.get(i);
			int column = c.column, row = c.row;
			Actor a = c.actor;

			float spannedWeightedWidth = 0;
			for (int ii = column, nn = ii + c.colspan; ii < nn; ii++)
				spannedWeightedWidth += columnWeightedWidth[ii];
			float weightedHeight = rowWeightedHeight[row];

			float prefWidth = c.prefWidth.get(a);
			float prefHeight = c.prefHeight.get(a);
			float minWidth = c.minWidth.get(a);
			float minHeight = c.minHeight.get(a);
			float maxWidth = c.maxWidth.get(a);
			float maxHeight = c.maxHeight.get(a);
			if (prefWidth < minWidth) prefWidth = minWidth;
			if (prefHeight < minHeight) prefHeight = minHeight;
			if (maxWidth > 0 && prefWidth > maxWidth) prefWidth = maxWidth;
			if (maxHeight > 0 && prefHeight > maxHeight) prefHeight = maxHeight;

			c.actorWidth = Math.min(spannedWeightedWidth - c.computedPadLeft - c.computedPadRight, prefWidth);
			c.actorHeight = Math.min(weightedHeight - c.computedPadTop - c.computedPadBottom, prefHeight);

			if (c.colspan == 1) columnWidth[column] = Math.max(columnWidth[column], spannedWeightedWidth);
			rowHeight[row] = Math.max(rowHeight[row], weightedHeight);
		}

		// Distribute remaining space to any expanding columns/rows.
		if (totalExpandWidth > 0) {
			float extra = layoutWidth - hpadding;
			for (int i = 0; i < columns; i++)
				extra -= columnWidth[i];
			float used = 0;
			int lastIndex = 0;
			for (int i = 0; i < columns; i++) {
				if (expandWidth[i] == 0) continue;
				float amount = extra * expandWidth[i] / totalExpandWidth;
				columnWidth[i] += amount;
				used += amount;
				lastIndex = i;
			}
			columnWidth[lastIndex] += extra - used;
		}
		if (totalExpandHeight > 0) {
			float extra = layoutHeight - vpadding;
			for (int i = 0; i < rows; i++)
				extra -= rowHeight[i];
			float used = 0;
			int lastIndex = 0;
			for (int i = 0; i < rows; i++) {
				if (expandHeight[i] == 0) continue;
				float amount = extra * expandHeight[i] / totalExpandHeight;
				rowHeight[i] += amount;
				used += amount;
				lastIndex = i;
			}
			rowHeight[lastIndex] += extra - used;
		}

		// Distribute any additional width added by colspanned cells to the columns spanned.
		for (int i = 0; i < cellCount; i++) {
			Cell c = cells.get(i);
			int colspan = c.colspan;
			if (colspan == 1) continue;

			float extraWidth = 0;
			for (int column = c.column, nn = column + colspan; column < nn; column++)
				extraWidth += columnWeightedWidth[column] - columnWidth[column];
			extraWidth -= Math.max(0, c.computedPadLeft + c.computedPadRight);

			extraWidth /= colspan;
			if (extraWidth > 0) {
				for (int column = c.column, nn = column + colspan; column < nn; column++)
					columnWidth[column] += extraWidth;
			}
		}

		// Determine table size.
		float tableWidth = hpadding, tableHeight = vpadding;
		for (int i = 0; i < columns; i++)
			tableWidth += columnWidth[i];
		for (int i = 0; i < rows; i++)
			tableHeight += rowHeight[i];

		// Position table within the container.
		int align = this.align;
		float x = layoutX + padLeft;
		if ((align & Align.right) != 0)
			x += layoutWidth - tableWidth;
		else if ((align & Align.left) == 0) // Center
			x += (layoutWidth - tableWidth) / 2;

		float y = layoutY + padTop;
		if ((align & Align.bottom) != 0)
			y += layoutHeight - tableHeight;
		else if ((align & Align.top) == 0) // Center
			y += (layoutHeight - tableHeight) / 2;

		// Position actors within cells.
		float currentX = x, currentY = y;
		for (int i = 0; i < cellCount; i++) {
			Cell c = cells.get(i);

			float spannedCellWidth = 0;
			for (int column = c.column, nn = column + c.colspan; column < nn; column++)
				spannedCellWidth += columnWidth[column];
			spannedCellWidth -= c.computedPadLeft + c.computedPadRight;

			currentX += c.computedPadLeft;

			if (c.fillX > 0) {
				c.actorWidth = spannedCellWidth * c.fillX;
				float maxWidth = c.maxWidth.get(c.actor);
				if (maxWidth > 0) c.actorWidth = Math.min(c.actorWidth, maxWidth);
			}
			if (c.fillY > 0) {
				c.actorHeight = rowHeight[c.row] * c.fillY - c.computedPadTop - c.computedPadBottom;
				float maxHeight = c.maxHeight.get(c.actor);
				if (maxHeight > 0) c.actorHeight = Math.min(c.actorHeight, maxHeight);
			}

			if ((c.align & Align.left) != 0)
				c.actorX = currentX;
			else if ((c.align & Align.right) != 0)
				c.actorX = currentX + spannedCellWidth - c.actorWidth;
			else
				c.actorX = currentX + (spannedCellWidth - c.actorWidth) / 2;

			if ((c.align & Align.top) != 0)
				c.actorY = currentY + c.computedPadTop;
			else if ((c.align & Align.bottom) != 0)
				c.actorY = currentY + rowHeight[c.row] - c.actorHeight - c.computedPadBottom;
			else
				c.actorY = currentY + (rowHeight[c.row] - c.actorHeight + c.computedPadTop - c.computedPadBottom) / 2;

			if (c.endRow) {
				currentX = x;
				currentY += rowHeight[c.row];
			} else
				currentX += spannedCellWidth + c.computedPadRight;
		}

		// Store debug rectangles.
		if (debug == Debug.none) return;
		if (debugRects != null) debugRects.clear();
		currentX = x;
		currentY = y;
		if (debug == Debug.table || debug == Debug.all) {
			TableDebug.addRectangle(this, Debug.table, layoutX, layoutY, layoutWidth, layoutHeight);
			TableDebug.addRectangle(this, Debug.table, x, y, tableWidth - hpadding, tableHeight - vpadding);
		}
		for (int i = 0; i < cellCount; i++) {
			Cell c = cells.get(i);

			// Actor bounds.
			if (debug == Debug.actor || debug == Debug.all)
				TableDebug.addRectangle(this, Debug.actor, c.actorX, c.actorY, c.actorWidth, c.actorHeight);

			// Cell bounds.
			float spannedCellWidth = 0;
			for (int column = c.column, nn = column + c.colspan; column < nn; column++)
				spannedCellWidth += columnWidth[column];
			spannedCellWidth -= c.computedPadLeft + c.computedPadRight;
			currentX += c.computedPadLeft;
			if (debug == Debug.cell || debug == Debug.all) {
				TableDebug.addRectangle(this, Debug.cell, currentX, currentY + c.computedPadTop, spannedCellWidth, rowHeight[c.row]
					- c.computedPadTop - c.computedPadBottom);
			}

			if (c.endRow) {
				currentX = x;
				currentY += rowHeight[c.row];
			} else
				currentX += spannedCellWidth + c.computedPadRight;
		}
	} ##FSTMerge## private void layout (float layoutX, float layoutY, float layoutWidth, float layoutHeight) {
		Array<Cell> cells = this.cells;
		int cellCount = cells.size;

		if (sizeInvalid) computeSize();

		float padLeft = this.padLeft.get(this);
		float hpadding = padLeft + padRight.get(this);
		float padTop = this.padTop.get(this);
		float vpadding = padTop + padBottom.get(this);

		int columns = this.columns, rows = this.rows;
		float[] expandWidth = this.expandWidth, expandHeight = this.expandHeight;
		float[] columnWidth = this.columnWidth, rowHeight = this.rowHeight;

		float totalExpandWidth = 0, totalExpandHeight = 0;
		for (int i = 0; i < columns; i++)
			totalExpandWidth += expandWidth[i];
		for (int i = 0; i < rows; i++)
			totalExpandHeight += expandHeight[i];

		// Size columns and rows between min and pref size using (preferred - min) size to weight distribution of extra space.
		float[] columnWeightedWidth;
		float totalGrowWidth = tablePrefWidth - tableMinWidth;
		if (totalGrowWidth == 0)
			columnWeightedWidth = columnMinWidth;
		else {
			float extraWidth = Math.min(totalGrowWidth, Math.max(0, layoutWidth - tableMinWidth));
			columnWeightedWidth = Table.columnWeightedWidth = ensureSize(Table.columnWeightedWidth, columns);
			float[] columnMinWidth = this.columnMinWidth, columnPrefWidth = this.columnPrefWidth;
			for (int i = 0; i < columns; i++) {
				float growWidth = columnPrefWidth[i] - columnMinWidth[i];
				float growRatio = growWidth / totalGrowWidth;
				columnWeightedWidth[i] = columnMinWidth[i] + extraWidth * growRatio;
			}
		}

		float[] rowWeightedHeight;
		float totalGrowHeight = tablePrefHeight - tableMinHeight;
		if (totalGrowHeight == 0)
			rowWeightedHeight = rowMinHeight;
		else {
			rowWeightedHeight = Table.rowWeightedHeight = ensureSize(Table.rowWeightedHeight, rows);
			float extraHeight = Math.min(totalGrowHeight, Math.max(0, layoutHeight - tableMinHeight));
			float[] rowMinHeight = this.rowMinHeight, rowPrefHeight = this.rowPrefHeight;
			for (int i = 0; i < rows; i++) {
				float growHeight = rowPrefHeight[i] - rowMinHeight[i];
				float growRatio = growHeight / totalGrowHeight;
				rowWeightedHeight[i] = rowMinHeight[i] + extraHeight * growRatio;
			}
		}

		// Determine actor and cell sizes (before expand or fill).
		for (int i = 0; i < cellCount; i++) {
			Cell c = cells.get(i);
			int column = c.column, row = c.row;
			Actor a = c.actor;

			float spannedWeightedWidth = 0;
			for (int ii = column, nn = ii + c.colspan; ii < nn; ii++)
				spannedWeightedWidth += columnWeightedWidth[ii];
			float weightedHeight = rowWeightedHeight[row];

			float prefWidth = c.prefWidth.get(a);
			float prefHeight = c.prefHeight.get(a);
			float minWidth = c.minWidth.get(a);
			float minHeight = c.minHeight.get(a);
			float maxWidth = c.maxWidth.get(a);
			float maxHeight = c.maxHeight.get(a);
			if (prefWidth < minWidth) prefWidth = minWidth;
			if (prefHeight < minHeight) prefHeight = minHeight;
			if (maxWidth > 0 && prefWidth > maxWidth) prefWidth = maxWidth;
			if (maxHeight > 0 && prefHeight > maxHeight) prefHeight = maxHeight;

			c.actorWidth = Math.min(spannedWeightedWidth - c.computedPadLeft - c.computedPadRight, prefWidth);
			c.actorHeight = Math.min(weightedHeight - c.computedPadTop - c.computedPadBottom, prefHeight);

			if (c.colspan == 1) columnWidth[column] = Math.max(columnWidth[column], spannedWeightedWidth);
			rowHeight[row] = Math.max(rowHeight[row], weightedHeight);
		}

		// Distribute remaining space to any expanding columns/rows.
		if (totalExpandWidth > 0) {
			float extra = layoutWidth - hpadding;
			for (int i = 0; i < columns; i++)
				extra -= columnWidth[i];
			float used = 0;
			int lastIndex = 0;
			for (int i = 0; i < columns; i++) {
				if (expandWidth[i] == 0) continue;
				float amount = extra * expandWidth[i] / totalExpandWidth;
				columnWidth[i] += amount;
				used += amount;
				lastIndex = i;
			}
			columnWidth[lastIndex] += extra - used;
		}
		if (totalExpandHeight > 0) {
			float extra = layoutHeight - vpadding;
			for (int i = 0; i < rows; i++)
				extra -= rowHeight[i];
			float used = 0;
			int lastIndex = 0;
			for (int i = 0; i < rows; i++) {
				if (expandHeight[i] == 0) continue;
				float amount = extra * expandHeight[i] / totalExpandHeight;
				rowHeight[i] += amount;
				used += amount;
				lastIndex = i;
			}
			rowHeight[lastIndex] += extra - used;
		}

		// Distribute any additional width added by colspanned cells to the columns spanned.
		for (int i = 0; i < cellCount; i++) {
			Cell c = cells.get(i);
			int colspan = c.colspan;
			if (colspan == 1) continue;

			float extraWidth = 0;
			for (int column = c.column, nn = column + colspan; column < nn; column++)
				extraWidth += columnWeightedWidth[column] - columnWidth[column];
			extraWidth -= Math.max(0, c.computedPadLeft + c.computedPadRight);

			extraWidth /= colspan;
			if (extraWidth > 0) {
				for (int column = c.column, nn = column + colspan; column < nn; column++)
					columnWidth[column] += extraWidth;
			}
		}

		// Determine table size.
		float tableWidth = hpadding, tableHeight = vpadding;
		for (int i = 0; i < columns; i++)
			tableWidth += columnWidth[i];
		for (int i = 0; i < rows; i++)
			tableHeight += rowHeight[i];

		// Position table within the container.
		int align = this.align;
		float x = layoutX + padLeft;
		if ((align & Align.right) != 0)
			x += layoutWidth - tableWidth;
		else if ((align & Align.left) == 0) // Center
			x += (layoutWidth - tableWidth) / 2;

		float y = layoutY + padTop;
		if ((align & Align.bottom) != 0)
			y += layoutHeight - tableHeight;
		else if ((align & Align.top) == 0) // Center
			y += (layoutHeight - tableHeight) / 2;

		// Position actors within cells.
		float currentX = x, currentY = y;
		for (int i = 0; i < cellCount; i++) {
			Cell c = cells.get(i);

			float spannedCellWidth = 0;
			for (int column = c.column, nn = column + c.colspan; column < nn; column++)
				spannedCellWidth += columnWidth[column];
			spannedCellWidth -= c.computedPadLeft + c.computedPadRight;

			currentX += c.computedPadLeft;

			if (c.fillX > 0) {
				c.actorWidth = spannedCellWidth * c.fillX;
				float maxWidth = c.maxWidth.get(c.actor);
				if (maxWidth > 0) c.actorWidth = Math.min(c.actorWidth, maxWidth);
			}
			if (c.fillY > 0) {
				c.actorHeight = rowHeight[c.row] * c.fillY - c.computedPadTop - c.computedPadBottom;
				float maxHeight = c.maxHeight.get(c.actor);
				if (maxHeight > 0) c.actorHeight = Math.min(c.actorHeight, maxHeight);
			}

			if ((c.align & Align.left) != 0)
				c.actorX = currentX;
			else if ((c.align & Align.right) != 0)
				c.actorX = currentX + spannedCellWidth - c.actorWidth;
			else
				c.actorX = currentX + (spannedCellWidth - c.actorWidth) / 2;

			if ((c.align & Align.top) != 0)
				c.actorY = currentY + c.computedPadTop;
			else if ((c.align & Align.bottom) != 0)
				c.actorY = currentY + rowHeight[c.row] - c.actorHeight - c.computedPadBottom;
			else
				c.actorY = currentY + (rowHeight[c.row] - c.actorHeight + c.computedPadTop - c.computedPadBottom) / 2;

			if (c.endRow) {
				currentX = x;
				currentY += rowHeight[c.row];
			} else
				currentX += spannedCellWidth + c.computedPadRight;
		}

		// Store debug rectangles.
		if (debug == Debug.none) return;
		if (debugRects != null) debugRects.clear();
		currentX = x;
		currentY = y;
		if (debug == Debug.table || debug == Debug.all) {
			TableDebug.addRectangle(this, Debug.table, layoutX, layoutY, layoutWidth, layoutHeight);
			TableDebug.addRectangle(this, Debug.table, x, y, tableWidth - hpadding, tableHeight - vpadding);
		}
		for (int i = 0; i < cellCount; i++) {
			Cell c = cells.get(i);

			// Actor bounds.
			if (debug == Debug.actor || debug == Debug.all)
				TableDebug.addRectangle(this, Debug.actor, c.actorX, c.actorY, c.actorWidth, c.actorHeight);

			// Cell bounds.
			float spannedCellWidth = 0;
			for (int column = c.column, nn = column + c.colspan; column < nn; column++)
				spannedCellWidth += columnWidth[column];
			spannedCellWidth -= c.computedPadLeft + c.computedPadRight;
			currentX += c.computedPadLeft;
			if (debug == Debug.cell || debug == Debug.all) {
				TableDebug.addRectangle(this, Debug.cell, currentX, currentY + c.computedPadTop, spannedCellWidth, rowHeight[c.row]
					- c.computedPadTop - c.computedPadBottom);
			}

			if (c.endRow) {
				currentX = x;
				currentY += rowHeight[c.row];
			} else
				currentX += spannedCellWidth + c.computedPadRight;
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_0cffe_fcb18/rev_0cffe-fcb18/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 27657c17a26a847a936a1485308aade2afb31d5c
Parent1 SHA-1: 0cffe3c321f2f63612b5c428c40a166eea37adbc
Parent2 SHA-1: fcb18ff6ae441da1003ef87e566e4aaf05782488
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static public void drawDebug (Stage stage) {
		if (TableDebug.draw) TableDebug.draw(stage);
	} ##FSTMerge## static public void drawDebug (Stage stage) {
		if (TableDebug.draw) TableDebug.draw(stage);
	}
File path: /tmp/downloads/libgdx/revisions/rev_0cffe_fcb18/rev_0cffe-fcb18/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 27657c17a26a847a936a1485308aade2afb31d5c
Parent1 SHA-1: 0cffe3c321f2f63612b5c428c40a166eea37adbc
Parent2 SHA-1: fcb18ff6ae441da1003ef87e566e4aaf05782488
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static ##FSTMerge## static
File path: /tmp/downloads/libgdx/revisions/rev_0cffe_fcb18/rev_0cffe-fcb18/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java
############## CONFLICT ##############
Conflict type: ExtendsList
Merge Commit SHA-1: 27657c17a26a847a936a1485308aade2afb31d5c
Parent1 SHA-1: 0cffe3c321f2f63612b5c428c40a166eea37adbc
Parent2 SHA-1: fcb18ff6ae441da1003ef87e566e4aaf05782488
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## extends Rectangle ##FSTMerge## extends Rectangle
File path: /tmp/downloads/libgdx/revisions/rev_0cffe_fcb18/rev_0cffe-fcb18/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 27657c17a26a847a936a1485308aade2afb31d5c
Parent1 SHA-1: 0cffe3c321f2f63612b5c428c40a166eea37adbc
Parent2 SHA-1: fcb18ff6ae441da1003ef87e566e4aaf05782488
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final Debug type; ##FSTMerge## final Debug type;
File path: /tmp/downloads/libgdx/revisions/rev_0cffe_fcb18/rev_0cffe-fcb18/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 27657c17a26a847a936a1485308aade2afb31d5c
Parent1 SHA-1: 0cffe3c321f2f63612b5c428c40a166eea37adbc
Parent2 SHA-1: fcb18ff6ae441da1003ef87e566e4aaf05782488
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public DebugRect (Debug type, float x, float y, float width, float height) {
			super(x, y, width, height);
			this.type = type;
		} ##FSTMerge## public DebugRect (Debug type, float x, float y, float width, float height) {
			super(x, y, width, height);
			this.type = type;
		}
File path: /tmp/downloads/libgdx/revisions/rev_0cffe_fcb18/rev_0cffe-fcb18/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 27657c17a26a847a936a1485308aade2afb31d5c
Parent1 SHA-1: 0cffe3c321f2f63612b5c428c40a166eea37adbc
Parent2 SHA-1: fcb18ff6ae441da1003ef87e566e4aaf05782488
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static ##FSTMerge## static
File path: /tmp/downloads/libgdx/revisions/rev_0cffe_fcb18/rev_0cffe-fcb18/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 27657c17a26a847a936a1485308aade2afb31d5c
Parent1 SHA-1: 0cffe3c321f2f63612b5c428c40a166eea37adbc
Parent2 SHA-1: fcb18ff6ae441da1003ef87e566e4aaf05782488
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static boolean draw; ##FSTMerge## static boolean draw;
File path: /tmp/downloads/libgdx/revisions/rev_0cffe_fcb18/rev_0cffe-fcb18/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 27657c17a26a847a936a1485308aade2afb31d5c
Parent1 SHA-1: 0cffe3c321f2f63612b5c428c40a166eea37adbc
Parent2 SHA-1: fcb18ff6ae441da1003ef87e566e4aaf05782488
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static private Application app; ##FSTMerge## static private Application app;
File path: /tmp/downloads/libgdx/revisions/rev_0cffe_fcb18/rev_0cffe-fcb18/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 27657c17a26a847a936a1485308aade2afb31d5c
Parent1 SHA-1: 0cffe3c321f2f63612b5c428c40a166eea37adbc
Parent2 SHA-1: fcb18ff6ae441da1003ef87e566e4aaf05782488
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static private ImmediateModeRenderer debugRenderer; ##FSTMerge## static private ImmediateModeRenderer debugRenderer;
File path: /tmp/downloads/libgdx/revisions/rev_0cffe_fcb18/rev_0cffe-fcb18/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 27657c17a26a847a936a1485308aade2afb31d5c
Parent1 SHA-1: 0cffe3c321f2f63612b5c428c40a166eea37adbc
Parent2 SHA-1: fcb18ff6ae441da1003ef87e566e4aaf05782488
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static public void addRectangle (Table table, Debug type, float x, float y, float w, float h) {
			draw = true;
			if (table.debugRects == null) table.debugRects = new Array();
			table.debugRects.add(new DebugRect(type, x, table.getHeight() - y, w, h));
		} ##FSTMerge## static public void addRectangle (Table table, Debug type, float x, float y, float w, float h) {
			draw = true;
			if (table.debugRects == null) table.debugRects = new Array();
			table.debugRects.add(new DebugRect(type, x, table.getHeight() - y, w, h));
		}
File path: /tmp/downloads/libgdx/revisions/rev_0cffe_fcb18/rev_0cffe-fcb18/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 27657c17a26a847a936a1485308aade2afb31d5c
Parent1 SHA-1: 0cffe3c321f2f63612b5c428c40a166eea37adbc
Parent2 SHA-1: fcb18ff6ae441da1003ef87e566e4aaf05782488
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static void draw (Stage stage) {
			if (app != Gdx.app) debugRenderer = new ImmediateModeRenderer20(128, false, true, 0);

			debugRenderer.begin(stage.getBatch().getProjectionMatrix(), GL20.GL_LINES);
			draw(stage.getActors());
			debugRenderer.end();
		} ##FSTMerge## static void draw (Stage stage) {
			if (app != Gdx.app) debugRenderer = new ImmediateModeRenderer20(128, false, true, 0);

			debugRenderer.begin(stage.getBatch().getProjectionMatrix(), GL20.GL_LINES);
			draw(stage.getActors());
			debugRenderer.end();
		}
File path: /tmp/downloads/libgdx/revisions/rev_0cffe_fcb18/rev_0cffe-fcb18/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 27657c17a26a847a936a1485308aade2afb31d5c
Parent1 SHA-1: 0cffe3c321f2f63612b5c428c40a166eea37adbc
Parent2 SHA-1: fcb18ff6ae441da1003ef87e566e4aaf05782488
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static void draw (Array<Actor> actors) {
			for (int i = 0, n = actors.size; i < n; i++) {
				Actor actor = actors.get(i);
				if (!actor.isVisible()) continue;
				if (actor instanceof Table) draw((Table)actor);
				if (actor instanceof Group) draw(((Group)actor).getChildren());
			}
		} ##FSTMerge## static void draw (Array<Actor> actors) {
			for (int i = 0, n = actors.size; i < n; i++) {
				Actor actor = actors.get(i);
				if (!actor.isVisible()) continue;
				if (actor instanceof Table) draw((Table)actor);
				if (actor instanceof Group) draw(((Group)actor).getChildren());
			}
		}
File path: /tmp/downloads/libgdx/revisions/rev_0cffe_fcb18/rev_0cffe-fcb18/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 27657c17a26a847a936a1485308aade2afb31d5c
Parent1 SHA-1: 0cffe3c321f2f63612b5c428c40a166eea37adbc
Parent2 SHA-1: fcb18ff6ae441da1003ef87e566e4aaf05782488
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static public void draw (Table table) {
			if (table.debug == Debug.none) return;
			Array<DebugRect> debugRects = table.debugRects;
			if (debugRects == null) return;

			float x = 0, y = 0;
			Actor parent = table;
			while (parent != null) {
				if (parent instanceof Group) {
					x += parent.getX();
					y += parent.getY();
				}
				parent = parent.getParent();
			}

			for (int i = 0, n = debugRects.size; i < n; i++) {
				DebugRect rect = debugRects.get(i);
				float x1 = x + rect.x;
				float y1 = y + rect.y - rect.height;
				float x2 = x1 + rect.width;
				float y2 = y1 + rect.height;
				float r = rect.type == Debug.cell ? 1 : 0;
				float g = rect.type == Debug.actor ? 1 : 0;
				float b = rect.type == Debug.table ? 1 : 0;

				debugRenderer.color(r, g, b, 1);
				debugRenderer.vertex(x1, y1, 0);
				debugRenderer.color(r, g, b, 1);
				debugRenderer.vertex(x1, y2, 0);

				debugRenderer.color(r, g, b, 1);
				debugRenderer.vertex(x1, y2, 0);
				debugRenderer.color(r, g, b, 1);
				debugRenderer.vertex(x2, y2, 0);

				debugRenderer.color(r, g, b, 1);
				debugRenderer.vertex(x2, y2, 0);
				debugRenderer.color(r, g, b, 1);
				debugRenderer.vertex(x2, y1, 0);

				debugRenderer.color(r, g, b, 1);
				debugRenderer.vertex(x2, y1, 0);
				debugRenderer.color(r, g, b, 1);
				debugRenderer.vertex(x1, y1, 0);

				if (debugRenderer.getNumVertices() == 128) debugRenderer.flush();
			}
		} ##FSTMerge## static public void draw (Table table) {
			if (table.debug == Debug.none) return;
			Array<DebugRect> debugRects = table.debugRects;
			if (debugRects == null) return;

			float x = 0, y = 0;
			Actor parent = table;
			while (parent != null) {
				if (parent instanceof Group) {
					x += parent.getX();
					y += parent.getY();
				}
				parent = parent.getParent();
			}

			for (int i = 0, n = debugRects.size; i < n; i++) {
				DebugRect rect = debugRects.get(i);
				float x1 = x + rect.x;
				float y1 = y + rect.y - rect.height;
				float x2 = x1 + rect.width;
				float y2 = y1 + rect.height;
				float r = rect.type == Debug.cell ? 1 : 0;
				float g = rect.type == Debug.actor ? 1 : 0;
				float b = rect.type == Debug.table ? 1 : 0;

				debugRenderer.color(r, g, b, 1);
				debugRenderer.vertex(x1, y1, 0);
				debugRenderer.color(r, g, b, 1);
				debugRenderer.vertex(x1, y2, 0);

				debugRenderer.color(r, g, b, 1);
				debugRenderer.vertex(x1, y2, 0);
				debugRenderer.color(r, g, b, 1);
				debugRenderer.vertex(x2, y2, 0);

				debugRenderer.color(r, g, b, 1);
				debugRenderer.vertex(x2, y2, 0);
				debugRenderer.color(r, g, b, 1);
				debugRenderer.vertex(x2, y1, 0);

				debugRenderer.color(r, g, b, 1);
				debugRenderer.vertex(x2, y1, 0);
				debugRenderer.color(r, g, b, 1);
				debugRenderer.vertex(x1, y1, 0);

				if (debugRenderer.getNumVertices() == 128) debugRenderer.flush();
			}
		}
File path: /tmp/downloads/libgdx/revisions/rev_0cffe_fcb18/rev_0cffe-fcb18/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java

==================================================================================================================
Revision: /tmp/downloads/libgdx/revisions/rev_edc04_2873a/rev_edc04-2873a.revisions
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 4f10ed45b11dc0f8ca28fe0aa20ad7696e56bd6b
Parent1 SHA-1: edc04da5ed2dca5b063accbe8f1c17fed350a3d3
Parent2 SHA-1: 2873aa92c80eb36338416dd5780c0d22eef269a3
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void arrow (float x1, float y1, float z1, float x2, float y2, float z2, float capLength, float stemThickness,
		int divisions) {
		Vector3 begin = tmp(x1, y1, z1), end = tmp(x2, y2, z2);
		float length = begin.dst(end);
		float coneHeight = length * capLength;
		float coneDiameter = 2 * (float)(coneHeight * Math.sqrt(1f / 3));
		float stemLength = length - coneHeight;
		float stemDiameter = coneDiameter * stemThickness;

		Vector3 up = tmp(end).sub(begin).nor();
		Vector3 forward = tmp(up).crs(Vector3.Z);
		if (forward.isZero()) forward.set(Vector3.X);
		forward.crs(up).nor();
		Vector3 left = tmp(forward).crs(up).nor();
		Vector3 direction = tmp(end).sub(begin).nor();

		// Matrices
		Matrix4 userTransform = getVertexTransform(tmp());
		Matrix4 transform = tmp().set(left, up, forward, tmp(direction).scl(stemLength / 2));
		Matrix4 temp = tmp();

		// Stem
		setVertexTransform(temp.set(transform).mul(userTransform));
		cylinder(stemDiameter, stemLength, stemDiameter, divisions);

		// Cap
		transform.setTranslation(tmp(direction).scl(stemLength));
		setVertexTransform(temp.set(transform).mul(userTransform));
		cone(coneDiameter, coneHeight, coneDiameter, divisions);

		setVertexTransform(userTransform);
		cleanup();
	} ##FSTMerge## @Override
	public void arrow (float x1, float y1, float z1, float x2, float y2, float z2, float capLength, float stemThickness, int divisions) {
		Vector3 begin = tmp(x1, y1, z1), end = tmp(x2, y2, z2);
		float length = begin.dst(end);
		float coneHeight = length * capLength;
		float coneDiameter = 2 * (float)(coneHeight * Math.sqrt(1f / 3));
		float stemLength = length - coneHeight;
		float stemDiameter = coneDiameter * stemThickness;

		Vector3 up = tmp(end).sub(begin).nor();
		Vector3 forward = tmp(up).crs(Vector3.Z);
		if (forward.isZero()) forward.set(Vector3.X);
		forward.crs(up).nor();
		Vector3 left = tmp(up).crs(forward).nor();
		Vector3 direction = tmp(end).sub(begin).nor();

		// Matrices
		Matrix4 userTransform = getVertexTransform(tmp());
		Matrix4 transform = tmp();
		float[]val = transform.val;
		val[Matrix4.M00] = left.x; val[Matrix4.M01] = up.x; val[Matrix4.M02] = forward.x;
		val[Matrix4.M10] = left.y; val[Matrix4.M11] = up.y; val[Matrix4.M12] = forward.y;
		val[Matrix4.M20] = left.z; val[Matrix4.M21] = up.z; val[Matrix4.M22] = forward.z;
		Matrix4 temp = tmp();

		// Stem
		transform.setTranslation(tmp(direction).scl(stemLength / 2));
		setVertexTransform(temp.set(transform).mul(userTransform));
		cylinder(stemDiameter, stemLength, stemDiameter, divisions);

		// Cap
		transform.setTranslation(tmp(direction).scl(stemLength));
		setVertexTransform(temp.set(transform).mul(userTransform));
		cone(coneDiameter, coneHeight, coneDiameter, divisions);

		setVertexTransform(userTransform);
		cleanup();
	}
File path: /tmp/downloads/libgdx/revisions/rev_edc04_2873a/rev_edc04-2873a/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java

==================================================================================================================
Revision: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c.revisions
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ Pool<TouchEvent> touchEventPool = new Pool<TouchEvent>() {
		@Override
		protected TouchEvent newObject () {
			return new TouchEvent();
		}
	}; ##FSTMerge## Pool<TouchEvent> touchEventPool = new Pool<TouchEvent>() {
		@Override
		protected TouchEvent newObject() {
			return new TouchEvent();
		}
	}; ##FSTMerge## Pool<TouchEvent> touchEventPool = new Pool<TouchEvent>() {
		@Override
		protected TouchEvent newObject() {
			return new TouchEvent();
		}
	};
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public IOSInput (IOSApplication app) {
		this.app = app;
		this.config = app.config;
	} ##FSTMerge## public IOSInput(IOSApplication app) {
		this.app = app;
		this.config = app.config;
	} ##FSTMerge## public IOSInput(IOSApplication app) {
		this.app = app;
		this.config = app.config;
	}
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ void setupPeripherals () {
		setupAccelerometer();
		setupCompass();
	} ##FSTMerge## void setupPeripherals() {
		setupAccelerometer();
		setupCompass();
	} ##FSTMerge## void setupPeripherals() {
		setupAccelerometer();
		setupCompass();
	}
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ private void setupCompass () {
		if (config.useCompass) {
			// FIXME implement compass
		}
	} ##FSTMerge## private void setupCompass () {
		if(config.useCompass) {
			// FIXME implement compass
		}
	} ##FSTMerge## private void setupCompass () {
		if(config.useCompass) {
			// FIXME implement compass
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ private void setupAccelerometer () {
		if (config.useAccelerometer) {
			accelerometerDelegate = new UIAccelerometerDelegateAdapter() {

				@Override
				public void didAccelerate (UIAccelerometer accelerometer, UIAcceleration values) {
					float x = (float)values.getX() * 10;
					float y = (float)values.getY() * 10;
					float z = (float)values.getZ() * 10;

					UIInterfaceOrientation orientation = app.graphics.viewController != null ? app.graphics.viewController
						.getInterfaceOrientation() : UIApplication.getSharedApplication().getStatusBarOrientation();

					acceleration[0] = -x;
					acceleration[1] = -y;
					acceleration[2] = -z;
				}
			};
			UIAccelerometer.getSharedAccelerometer().setDelegate(accelerometerDelegate);
			UIAccelerometer.getSharedAccelerometer().setUpdateInterval(config.accelerometerUpdate);
		}
	} ##FSTMerge## private void setupAccelerometer() {
		if(config.useAccelerometer) {
			accelerometerDelegate = new UIAccelerometerDelegateAdapter() {

				@Override
				public void didAccelerate(UIAccelerometer accelerometer, UIAcceleration values) {
					float x = (float)values.getX() * 10;
					float y = (float)values.getY() * 10;
					float z = (float)values.getZ() * 10;

					UIInterfaceOrientation orientation = app.graphics.viewController != null 
																		? app.graphics.viewController.getInterfaceOrientation() 
																		: UIApplication.getSharedApplication().getStatusBarOrientation();
										
					acceleration[0] = -x;
					acceleration[1] = -y;
					acceleration[2] = -z;
				}
			};
			UIAccelerometer.getSharedAccelerometer().setDelegate(accelerometerDelegate);
			UIAccelerometer.getSharedAccelerometer().setUpdateInterval(config.accelerometerUpdate);
		}
	} ##FSTMerge## private void setupAccelerometer() {
		if(config.useAccelerometer) {
			accelerometerDelegate = new UIAccelerometerDelegateAdapter() {

				@Method(selector = "accelerometer:didAccelerate:")
				public void didAccelerate (UIAccelerometer accelerometer, @Pointer long valuesPtr) {
					UIAcceleration values = UI_ACCELERATION_WRAPPER.wrap(valuesPtr);
					float x = (float)values.getX() * 10;
					float y = (float)values.getY() * 10;
					float z = (float)values.getZ() * 10;

					acceleration[0] = -x;
					acceleration[1] = -y;
					acceleration[2] = -z;
				}
			};
			UIAccelerometer.getSharedAccelerometer().setDelegate(accelerometerDelegate);
			UIAccelerometer.getSharedAccelerometer().setUpdateInterval(config.accelerometerUpdate);
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public float getAccelerometerX () {
		return acceleration[0];
	} ##FSTMerge## @Override
	public float getAccelerometerX() {
		return acceleration[0];
	} ##FSTMerge## @Override
	public float getAccelerometerX() {
		return acceleration[0];
	}
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public float getAccelerometerY () {
		return acceleration[1];
	} ##FSTMerge## @Override
	public float getAccelerometerY() {
		return acceleration[1];
	} ##FSTMerge## @Override
	public float getAccelerometerY() {
		return acceleration[1];
	}
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public float getAccelerometerZ () {
		return acceleration[2];
	} ##FSTMerge## @Override
	public float getAccelerometerZ() {
		return acceleration[2];
	} ##FSTMerge## @Override
	public float getAccelerometerZ() {
		return acceleration[2];
	}
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public float getAzimuth () {
		// FIXME implement this
		return 0;
	} ##FSTMerge## @Override
	public float getAzimuth() {
		// FIXME implement this
		return 0;
	} ##FSTMerge## @Override
	public float getAzimuth() {
		// FIXME implement this
		return 0;
	}
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public float getPitch () {
		// FIXME implement this
		return 0;
	} ##FSTMerge## @Override
	public float getPitch() {
		// FIXME implement this
		return 0;
	} ##FSTMerge## @Override
	public float getPitch() {
		// FIXME implement this
		return 0;
	}
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public float getRoll () {
		// FIXME implement this
		return 0;
	} ##FSTMerge## @Override
	public float getRoll() {
		// FIXME implement this
		return 0;
	} ##FSTMerge## @Override
	public float getRoll() {
		// FIXME implement this
		return 0;
	}
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public void getRotationMatrix (float[] matrix) {
		// FIXME implement this
	} ##FSTMerge## @Override
	public void getRotationMatrix(float[] matrix) {
		// FIXME implement this
	} ##FSTMerge## @Override
	public void getRotationMatrix(float[] matrix) {
		// FIXME implement this
	}
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public int getX () {
		return touchX[0];
	} ##FSTMerge## @Override
	public int getX() {
		return touchX[0];
	} ##FSTMerge## @Override
	public int getX() {
		return touchX[0];
	}
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public int getX (int pointer) {
		return touchX[pointer];
	} ##FSTMerge## @Override
	public int getX(int pointer) {
		return touchX[pointer];
	} ##FSTMerge## @Override
	public int getX(int pointer) {
		return touchX[pointer];
	}
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public int getDeltaX () {
		return deltaX[0];
	} ##FSTMerge## @Override
	public int getDeltaX() {
		return deltaX[0];
	} ##FSTMerge## @Override
	public int getDeltaX() {
		return deltaX[0];
	}
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public int getDeltaX (int pointer) {
		return deltaX[pointer];
	} ##FSTMerge## @Override
	public int getDeltaX(int pointer) {
		return deltaX[pointer];
	} ##FSTMerge## @Override
	public int getDeltaX(int pointer) {
		return deltaX[pointer];
	}
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public int getY () {
		return touchY[0];
	} ##FSTMerge## @Override
	public int getY() {
		return touchY[0];
	} ##FSTMerge## @Override
	public int getY() {
		return touchY[0];
	}
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public int getY (int pointer) {
		return touchY[pointer];
	} ##FSTMerge## @Override
	public int getY(int pointer) {
		return touchY[pointer];
	} ##FSTMerge## @Override
	public int getY(int pointer) {
		return touchY[pointer];
	}
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public int getDeltaY () {
		return deltaY[0];
	} ##FSTMerge## @Override
	public int getDeltaY() {
		return deltaY[0];
	} ##FSTMerge## @Override
	public int getDeltaY() {
		return deltaY[0];
	}
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public int getDeltaY (int pointer) {
		return deltaY[pointer];
	} ##FSTMerge## @Override
	public int getDeltaY(int pointer) {
		return deltaY[pointer];
	} ##FSTMerge## @Override
	public int getDeltaY(int pointer) {
		return deltaY[pointer];
	}
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public boolean isTouched () {
		return touchDown[0] != 0;
	} ##FSTMerge## @Override
	public boolean isTouched() {
		return touchDown[0] != 0;
	} ##FSTMerge## @Override
	public boolean isTouched() {
		return touchDown[0] != 0;
	}
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public boolean justTouched () {
		return justTouched;
	} ##FSTMerge## @Override
	public boolean justTouched() {
		return justTouched;
	} ##FSTMerge## @Override
	public boolean justTouched() {
		return justTouched;
	}
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public boolean isTouched (int pointer) {
		return touchDown[pointer] != 0;
	} ##FSTMerge## @Override
	public boolean isTouched(int pointer) {
		return touchDown[pointer] != 0;
	} ##FSTMerge## @Override
	public boolean isTouched(int pointer) {
		return touchDown[pointer] != 0;
	}
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public boolean isButtonPressed (int button) {
		return button == Buttons.LEFT && numTouched > 0;
	} ##FSTMerge## @Override
	public boolean isButtonPressed(int button) {
		return button == Buttons.LEFT && numTouched > 0;
	} ##FSTMerge## @Override
	public boolean isButtonPressed(int button) {
		return button == Buttons.LEFT && numTouched > 0;
	}
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public boolean isKeyPressed (int key) {
		return false;
	} ##FSTMerge## @Override
	public boolean isKeyPressed(int key) {
		return false;
	} ##FSTMerge## @Override
	public boolean isKeyPressed(int key) {
		return false;
	}
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public void getTextInput (TextInputListener listener, String title, String text) {
		final UIAlertView uiAlertView = buildUIAlertView(listener, title, text, null);
		uiAlertView.show();
	} ##FSTMerge## @Override
	public void getTextInput(TextInputListener listener, String title, String text) {
		final UIAlertView uiAlertView = buildUIAlertView(listener, title, text, null);
		uiAlertView.show();
	} ##FSTMerge## @Override
	public void getTextInput(TextInputListener listener, String title, String text) {
		final UIAlertView uiAlertView = buildUIAlertView(listener, title, text, null);
		uiAlertView.show();
	}
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public HiddenTextField (CGRect frame) {
			super(frame);

			setKeyboardType(UIKeyboardType.Default);
			setReturnKeyType(UIReturnKeyType.Done);
			setAutocapitalizationType(UITextAutocapitalizationType.None);
			setAutocorrectionType(UITextAutocorrectionType.No);
			setSpellCheckingType(UITextSpellCheckingType.No);
			setHidden(true);
		} ##FSTMerge## public HiddenTextField(CGRect frame) {
			super(frame);

			setKeyboardType(UIKeyboardType.Default);
			setReturnKeyType(UIReturnKeyType.Done);
			setAutocapitalizationType(UITextAutocapitalizationType.None);
			setAutocorrectionType(UITextAutocorrectionType.No);
			setSpellCheckingType(UITextSpellCheckingType.No);
			setHidden(true);
		} ##FSTMerge## public HiddenTextField(CGRect frame) {
			super(frame);

			setKeyboardType(UIKeyboardType.Default);
			setReturnKeyType(UIReturnKeyType.Done);
			setAutocapitalizationType(UITextAutocapitalizationType.None);
			setAutocorrectionType(UITextAutocorrectionType.No);
			setSpellCheckingType(UITextSpellCheckingType.No);
			setHidden(true);
		}
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
		public void deleteBackward () {
			app.input.inputProcessor.keyTyped((char)8);
			super.deleteBackward();
		} ##FSTMerge## @Override
		public void deleteBackward() {
			app.input.inputProcessor.keyTyped((char)8);
			super.deleteBackward();
		} ##FSTMerge## @Override
		public void deleteBackward() {
			app.input.inputProcessor.keyTyped((char)8);
			super.deleteBackward();
		}
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ private final UITextFieldDelegate textDelegate = new UITextFieldDelegateAdapter() {
		@Override
		public boolean shouldChangeCharacters (UITextField textField, NSRange range, String string) {
			for (int i = 0; i < range.length(); i++) {
				app.input.inputProcessor.keyTyped((char)8);
			}

			if (string.isEmpty()) {
				return false;
			}

			char[] chars = new char[string.length()];
			string.getChars(0, string.length(), chars, 0);

			for (int i = 0; i < chars.length; i++) {
				app.input.inputProcessor.keyTyped(chars[i]);
			}

			return true;
		}

		@Override
		public boolean shouldEndEditing (UITextField textField) {
			// Text field needs to have at least one symbol - so we can use backspace
			textField.setText("x");

			return true;
		}

		@Override
		public boolean shouldReturn (UITextField textField) {
			textField.resignFirstResponder();
			return false;
		}
	}; ##FSTMerge## private UITextFieldDelegate textDelegate = new UITextFieldDelegateAdapter() {
		@Override
		public boolean shouldChangeCharacters(UITextField textField, NSRange range, String string) {
			for (int i = 0; i < range.length(); i++) {
				app.input.inputProcessor.keyTyped((char) 8);
			}

			if (string.isEmpty()) {
				return false;
			}

			char[] chars = new char[string.length()];
			string.getChars(0, string.length(), chars, 0);

			for (int i = 0; i < chars.length; i++) {
				app.input.inputProcessor.keyTyped(chars[i]);
			}

			return true;
		}

		@Override
		public boolean shouldEndEditing(UITextField textField) {
			//Text field needs to have at least one symbol - so we can use backspace
			textField.setText("x");

			return true;
		}

		@Override
		public boolean shouldReturn(UITextField textField) {
			textField.resignFirstResponder();
			return false;
		}
	}; ##FSTMerge## private UITextFieldDelegate textDelegate = new UITextFieldDelegateAdapter() {
		@Override
		public boolean shouldChangeCharacters(UITextField textField, NSRange range, String string) {
			for (int i = 0; i < range.length(); i++) {
				app.input.inputProcessor.keyTyped((char) 8);
			}

			if (string.isEmpty()) {
				return false;
			}

			char[] chars = new char[string.length()];
			string.getChars(0, string.length(), chars, 0);

			for (int i = 0; i < chars.length; i++) {
				app.input.inputProcessor.keyTyped(chars[i]);
			}

			return true;
		}

		@Override
		public boolean shouldEndEditing(UITextField textField) {
			//Text field needs to have at least one symbol - so we can use backspace
			textField.setText("x");

			return true;
		}

		@Override
		public boolean shouldReturn(UITextField textField) {
			textField.resignFirstResponder();
			return false;
		}
	};
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public void setOnscreenKeyboardVisible (boolean visible) {
		if (textfield == null) {
			// Making simple textField
			textfield = new UITextField(new CGRect(10, 10, 100, 50));
			// Setting parameters
			textfield.setKeyboardType(UIKeyboardType.Default);
			textfield.setReturnKeyType(UIReturnKeyType.Done);
			textfield.setAutocapitalizationType(UITextAutocapitalizationType.None);
			textfield.setAutocorrectionType(UITextAutocorrectionType.No);
			textfield.setSpellCheckingType(UITextSpellCheckingType.No);
			textfield.setHidden(true);
			// Text field needs to have at least one symbol - so we can use backspace
			textfield.setText("x");
			app.getUIViewController().getView().addSubview(textfield);
		}
		if (visible) {
			textfield.becomeFirstResponder();
			textfield.setDelegate(textDelegate);
		} else {
			textfield.resignFirstResponder();
		}
	} ##FSTMerge## @Override
	public void setOnscreenKeyboardVisible(boolean visible) {
		if (textfield == null) {
			//Making simple textField
			textfield = new UITextField(new CGRect(10, 10, 100, 50));
			//Setting parameters
			textfield.setKeyboardType(UIKeyboardType.Default);
			textfield.setReturnKeyType(UIReturnKeyType.Done);
			textfield.setAutocapitalizationType(UITextAutocapitalizationType.None);
			textfield.setAutocorrectionType(UITextAutocorrectionType.No);
			textfield.setSpellCheckingType(UITextSpellCheckingType.No);
			textfield.setHidden(true);
			//Text field needs to have at least one symbol - so we can use backspace
			textfield.setText("x");
			app.getUIViewController().getView().addSubview(textfield);
		}
		if (visible) {
			textfield.becomeFirstResponder();
			textfield.setDelegate(textDelegate);
		} else {
			textfield.resignFirstResponder();
		}
	} ##FSTMerge## @Override
	public void setOnscreenKeyboardVisible(boolean visible) {
		if (textfield == null) {
			//Making simple textField
			textfield = new UITextField(new CGRect(10, 10, 100, 50));
			//Setting parameters
			textfield.setKeyboardType(UIKeyboardType.Default);
			textfield.setReturnKeyType(UIReturnKeyType.Done);
			textfield.setAutocapitalizationType(UITextAutocapitalizationType.None);
			textfield.setAutocorrectionType(UITextAutocorrectionType.No);
			textfield.setSpellCheckingType(UITextSpellCheckingType.No);
			textfield.setHidden(true);
			//Text field needs to have at least one symbol - so we can use backspace
			textfield.setText("x");
			app.getUIViewController().getView().addSubview(textfield);
		}
		if (visible) {
			textfield.becomeFirstResponder();
			textfield.setDelegate(textDelegate);
		} else {
			textfield.resignFirstResponder();
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public void getPlaceholderTextInput (TextInputListener listener, String title, String placeholder) {
		final UIAlertView uiAlertView = buildUIAlertView(listener, title, null, placeholder);
		uiAlertView.show();
	} ##FSTMerge## @Override
	public void getPlaceholderTextInput(TextInputListener listener, String title, String placeholder) {
		final UIAlertView uiAlertView = buildUIAlertView(listener, title, null, placeholder);
		uiAlertView.show();
	} ##FSTMerge## @Override
	public void getPlaceholderTextInput(TextInputListener listener, String title, String placeholder) {
		final UIAlertView uiAlertView = buildUIAlertView(listener, title, null, placeholder);
		uiAlertView.show();
	}
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public void vibrate (int milliseconds) {
		// FIXME implement this
	} ##FSTMerge## @Override
	public void vibrate(int milliseconds) {
		// FIXME implement this
	} ##FSTMerge## @Override
	public void vibrate(int milliseconds) {
		// FIXME implement this
	}
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public void vibrate (long[] pattern, int repeat) {
		// FIXME implement this
	} ##FSTMerge## @Override
	public void vibrate(long[] pattern, int repeat) {
		// FIXME implement this
	} ##FSTMerge## @Override
	public void vibrate(long[] pattern, int repeat) {
		// FIXME implement this
	}
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public void cancelVibrate () {
		// FIXME implement this
	} ##FSTMerge## @Override
	public void cancelVibrate() {
		// FIXME implement this
	} ##FSTMerge## @Override
	public void cancelVibrate() {
		// FIXME implement this
	}
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public long getCurrentEventTime () {
		return currentEvent.timestamp;
	} ##FSTMerge## @Override
	public long getCurrentEventTime() {
		return currentEvent.timestamp;
	} ##FSTMerge## @Override
	public long getCurrentEventTime() {
		return currentEvent.timestamp;
	}
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public void setCatchBackKey (boolean catchBack) {
	} ##FSTMerge## @Override
	public void setCatchBackKey(boolean catchBack) {
	} ##FSTMerge## @Override
	public void setCatchBackKey(boolean catchBack) {
	}
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public void setCatchMenuKey (boolean catchMenu) {
	} ##FSTMerge## @Override
	public void setCatchMenuKey(boolean catchMenu) {
	} ##FSTMerge## @Override
	public void setCatchMenuKey(boolean catchMenu) {
	}
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public void setInputProcessor (InputProcessor processor) {
		this.inputProcessor = processor;
	} ##FSTMerge## @Override
	public void setInputProcessor(InputProcessor processor) {
		this.inputProcessor = processor;
	} ##FSTMerge## @Override
	public void setInputProcessor(InputProcessor processor) {
		this.inputProcessor = processor;
	}
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public InputProcessor getInputProcessor () {
		return inputProcessor;
	} ##FSTMerge## @Override
	public InputProcessor getInputProcessor() {
		return inputProcessor;
	} ##FSTMerge## @Override
	public InputProcessor getInputProcessor() {
		return inputProcessor;
	}
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public boolean isPeripheralAvailable (Peripheral peripheral) {
		if (peripheral == Peripheral.Accelerometer && config.useAccelerometer) return true;
		if (peripheral == Peripheral.MultitouchScreen) return true;
		if (peripheral == Peripheral.OnscreenKeyboard) return true;
		// FIXME implement this
// if(peripheral == Peripheral.Compass) return true;

		return false;
	} ##FSTMerge## @Override
	public boolean isPeripheralAvailable(Peripheral peripheral) {
		if(peripheral == Peripheral.Accelerometer && config.useAccelerometer) return true;
		if(peripheral == Peripheral.MultitouchScreen) return true;
		// FIXME implement this (not sure if possible)
//		if(peripheral == Peripheral.OnscreenKeyboard) return true;
		// FIXME implement this
//		if(peripheral == Peripheral.Compass) return true;
		
		return false;
	} ##FSTMerge## @Override
	public boolean isPeripheralAvailable(Peripheral peripheral) {
		if(peripheral == Peripheral.Accelerometer && config.useAccelerometer) return true;
		if(peripheral == Peripheral.MultitouchScreen) return true;
		// FIXME implement this (not sure if possible)
//		if(peripheral == Peripheral.OnscreenKeyboard) return true;
		// FIXME implement this
//		if(peripheral == Peripheral.Compass) return true;
		
		return false;
	}
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public int getRotation () {
		UIInterfaceOrientation orientation = app.graphics.viewController != null ? app.graphics.viewController
			.getInterfaceOrientation() : UIApplication.getSharedApplication().getStatusBarOrientation();
		// we measure orientation counter clockwise, just like on Android
		if (orientation == UIInterfaceOrientation.Portrait) return 0;
		if (orientation == UIInterfaceOrientation.LandscapeLeft) return 270;
		if (orientation == UIInterfaceOrientation.PortraitUpsideDown) return 180;
		if (orientation == UIInterfaceOrientation.LandscapeRight) return 90;
		return 0;
	} ##FSTMerge## @Override
	public int getRotation() {
		UIInterfaceOrientation orientation = app.graphics.viewController != null 
					? app.graphics.viewController.getInterfaceOrientation() 
					: UIApplication.getSharedApplication().getStatusBarOrientation();
		// we measure orientation counter clockwise, just like on Android
		if(orientation == UIInterfaceOrientation.Portrait) return 0;
		if(orientation == UIInterfaceOrientation.LandscapeLeft) return 270;
		if(orientation == UIInterfaceOrientation.PortraitUpsideDown) return 180;
		if(orientation == UIInterfaceOrientation.LandscapeRight) return 90;
		return 0;
	} ##FSTMerge## @Override
	public int getRotation() {
		UIInterfaceOrientation orientation = app.graphics.viewController != null 
					? app.graphics.viewController.getInterfaceOrientation() 
					: UIApplication.getSharedApplication().getStatusBarOrientation();
		// we measure orientation counter clockwise, just like on Android
		if(orientation == UIInterfaceOrientation.Portrait) return 0;
		if(orientation == UIInterfaceOrientation.LandscapeLeft) return 270;
		if(orientation == UIInterfaceOrientation.PortraitUpsideDown) return 180;
		if(orientation == UIInterfaceOrientation.LandscapeRight) return 90;
		return 0;
	}
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public Orientation getNativeOrientation () {
		return Orientation.Portrait;
	} ##FSTMerge## @Override
	public Orientation getNativeOrientation() {
		return Orientation.Portrait;
	} ##FSTMerge## @Override
	public Orientation getNativeOrientation() {
		return Orientation.Portrait;
	}
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public void setCursorCatched (boolean catched) {
	} ##FSTMerge## @Override
	public void setCursorCatched(boolean catched) {
	} ##FSTMerge## @Override
	public void setCursorCatched(boolean catched) {
	}
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public boolean isCursorCatched () {
		return false;
	} ##FSTMerge## @Override
	public boolean isCursorCatched() {
		return false;
	} ##FSTMerge## @Override
	public boolean isCursorCatched() {
		return false;
	}
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public void setCursorPosition (int x, int y) {
	} ##FSTMerge## @Override
	public void setCursorPosition(int x, int y) {
	} ##FSTMerge## @Override
	public void setCursorPosition(int x, int y) {
	}
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public void setCursorImage (Pixmap pixmap, int xHotspot, int yHotspot) {
	} ##FSTMerge## @Override
  public void setCursorImage(Pixmap pixmap, int xHotspot, int yHotspot) {
  } ##FSTMerge## @Override
  public void setCursorImage(Pixmap pixmap, int xHotspot, int yHotspot) {
  }
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ void processEvents () {
		synchronized (touchEvents) {
			justTouched = false;
			for (TouchEvent event : touchEvents) {
				currentEvent = event;
				switch (event.phase) {
				case Began:
					if (inputProcessor != null) inputProcessor.touchDown(event.x, event.y, event.pointer, Buttons.LEFT);
					if (numTouched == 1) justTouched = true;
					break;
				case Cancelled:
				case Ended:
					if (inputProcessor != null) inputProcessor.touchUp(event.x, event.y, event.pointer, Buttons.LEFT);
					break;
				case Moved:
				case Stationary:
					if (inputProcessor != null) inputProcessor.touchDragged(event.x, event.y, event.pointer);
					break;
				}
			}
			touchEventPool.freeAll(touchEvents);
			touchEvents.clear();
		}
	} ##FSTMerge## void processEvents() {
		synchronized(touchEvents) {
			justTouched = false;
			for(TouchEvent event: touchEvents) {
				currentEvent = event;
				switch(event.phase) {
				case Began:
					if(inputProcessor != null) inputProcessor.touchDown(event.x, event.y, event.pointer, Buttons.LEFT);
					if(numTouched == 1)
						justTouched = true;
					break;
				case Cancelled:
				case Ended:
					if(inputProcessor != null) inputProcessor.touchUp(event.x, event.y, event.pointer, Buttons.LEFT);
					break;
				case Moved:
				case Stationary:
					if(inputProcessor != null) inputProcessor.touchDragged(event.x, event.y, event.pointer);
					break;
				}
			}
			touchEventPool.freeAll(touchEvents);
			touchEvents.clear();
		}
	} ##FSTMerge## void processEvents() {
		synchronized(touchEvents) {
			justTouched = false;
			for(TouchEvent event: touchEvents) {
				currentEvent = event;
				switch(event.phase) {
				case Began:
					if(inputProcessor != null) inputProcessor.touchDown(event.x, event.y, event.pointer, Buttons.LEFT);
					if(numTouched == 1)
						justTouched = true;
					break;
				case Cancelled:
				case Ended:
					if(inputProcessor != null) inputProcessor.touchUp(event.x, event.y, event.pointer, Buttons.LEFT);
					break;
				case Moved:
				case Stationary:
					if(inputProcessor != null) inputProcessor.touchDragged(event.x, event.y, event.pointer);
					break;
				}
			}
			touchEventPool.freeAll(touchEvents);
			touchEvents.clear();
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ private int getFreePointer () {
		for (int i = 0; i < touchDown.length; i++) {
			if (touchDown[i] == 0) return i;
		}
		throw new GdxRuntimeException("Couldn't find free pointer id!");
	} ##FSTMerge## private int getFreePointer() {
		for(int i = 0; i < touchDown.length; i++) {
			if(touchDown[i] == 0) return i;
		}
		throw new GdxRuntimeException("Couldn't find free pointer id!");
	} ##FSTMerge## private int getFreePointer() {
		for(int i = 0; i < touchDown.length; i++) {
			if(touchDown[i] == 0) return i;
		}
		throw new GdxRuntimeException("Couldn't find free pointer id!");
	}
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ private int findPointer (UITouch touch) {
		long ptr = touch.getHandle();
		for (int i = 0; i < touchDown.length; i++) {
			if (touchDown[i] == ptr) return i;
		}
		throw new GdxRuntimeException("Couldn't find pointer id for touch event!");
	} ##FSTMerge## private int findPointer(UITouch touch) {
		long ptr = touch.getHandle();
		for(int i = 0; i < touchDown.length; i++) {
			if(touchDown[i] == ptr) return i;
		}
		throw new GdxRuntimeException("Couldn't find pointer id for touch event!");
	} ##FSTMerge## private int findPointer(UITouch touch) {
		long ptr = touch.getHandle();
		for(int i = 0; i < touchDown.length; i++) {
			if(touchDown[i] == ptr) return i;
		}
		throw new GdxRuntimeException("Couldn't find pointer id for touch event!");
	}
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public void touchDown (NSSet<UITouch> touches, UIEvent event) {
		toTouchEvents(touches, event);
	} ##FSTMerge## public void touchDown(NSSet<UITouch> touches, UIEvent event) {
		toTouchEvents(touches, event);
	} ##FSTMerge##
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public void touchUp (NSSet<UITouch> touches, UIEvent event) {
		toTouchEvents(touches, event);
	} ##FSTMerge## public void touchUp(NSSet<UITouch> touches, UIEvent event) {
		toTouchEvents(touches, event);
	} ##FSTMerge##
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public void touchMoved (NSSet<UITouch> touches, UIEvent event) {
		toTouchEvents(touches, event);
	} ##FSTMerge## public void touchMoved(NSSet<UITouch> touches, UIEvent event) {
		toTouchEvents(touches, event);
	} ##FSTMerge##
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ private void toTouchEvents (NSSet<UITouch> touches, UIEvent uiEvent) {
		for (UITouch touch : touches) {
			CGPoint loc = touch.getLocation(touch.getView());
			synchronized (touchEvents) {
				TouchEvent event = touchEventPool.obtain();
				event.x = (int)(loc.x() * app.displayScaleFactor);
				event.y = (int)(loc.y() * app.displayScaleFactor);
				event.phase = touch.getPhase();
				event.timestamp = (long)(touch.getTimestamp() * 1000000000);
				touchEvents.add(event);

				if (touch.getPhase() == UITouchPhase.Began) {
					event.pointer = getFreePointer();
					touchDown[event.pointer] = (int)touch.getHandle();
					touchX[event.pointer] = event.x;
					touchY[event.pointer] = event.y;
					deltaX[event.pointer] = 0;
					deltaY[event.pointer] = 0;
					numTouched++;
				}

				if (touch.getPhase() == UITouchPhase.Moved || touch.getPhase() == UITouchPhase.Stationary) {
					event.pointer = findPointer(touch);
					deltaX[event.pointer] = event.x - touchX[event.pointer];
					deltaY[event.pointer] = event.y - touchY[event.pointer];
					touchX[event.pointer] = event.x;
					touchY[event.pointer] = event.y;
				}

				if (touch.getPhase() == UITouchPhase.Cancelled || touch.getPhase() == UITouchPhase.Ended) {
					event.pointer = findPointer(touch);
					touchDown[event.pointer] = 0;
					touchX[event.pointer] = event.x;
					touchY[event.pointer] = event.y;
					deltaX[event.pointer] = 0;
					deltaY[event.pointer] = 0;
					numTouched--;
				}
			}
		}
	} ##FSTMerge## private void toTouchEvents (NSSet<UITouch> touches, UIEvent uiEvent) {
		for (UITouch touch : touches) {
			CGPoint loc = touch.getLocation(touch.getView());
			synchronized(touchEvents) {
				TouchEvent event = touchEventPool.obtain();
				event.x = (int)(loc.x() * app.displayScaleFactor);
				event.y = (int)(loc.y() * app.displayScaleFactor);
				event.phase = touch.getPhase();
				event.timestamp = (long)(touch.getTimestamp() * 1000000000);
				touchEvents.add(event);
				
				if(touch.getPhase() == UITouchPhase.Began) {					
					event.pointer = getFreePointer();
					touchDown[event.pointer] = (int) touch.getHandle();
					touchX[event.pointer] = event.x;
					touchY[event.pointer] = event.y;
					deltaX[event.pointer] = 0;
					deltaY[event.pointer] = 0; 
					numTouched++;
				}
				
				if(touch.getPhase() == UITouchPhase.Moved ||
					touch.getPhase() == UITouchPhase.Stationary) {
					event.pointer = findPointer(touch);
					deltaX[event.pointer] = event.x - touchX[event.pointer];
					deltaY[event.pointer] = event.y - touchY[event.pointer]; 
					touchX[event.pointer] = event.x;
					touchY[event.pointer] = event.y;
				}
				
				if(touch.getPhase() == UITouchPhase.Cancelled ||
					touch.getPhase() == UITouchPhase.Ended) {					
					event.pointer = findPointer(touch);
					touchDown[event.pointer] = 0; 
					touchX[event.pointer] = event.x;
					touchY[event.pointer] = event.y;
					deltaX[event.pointer] = 0;
					deltaY[event.pointer] = 0;
					numTouched--;
				}
			}
		}
	} ##FSTMerge##
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public IOSGraphics (CGSize bounds, IOSApplication app, IOSApplicationConfiguration config, IOSInput input, GL20 gl20) {
		this.config = config;
		// setup view and OpenGL
		width = (int)bounds.width();
		height = (int)bounds.height();
		app.debug(tag, bounds.width() + "x" + bounds.height() + ", " + UIScreen.getMainScreen().getScale());
		this.gl20 = gl20;

		context = new EAGLContext(EAGLRenderingAPI.OpenGLES2);

		view = new GLKView(new CGRect(new CGPoint(0, 0), bounds), context) {
			@Override
			public void touchesBegan (NSSet<UITouch> touches, UIEvent event) {
				super.touchesBegan(touches, event);
				IOSGraphics.this.input.touchDown(touches, event);
			}

			@Override
			public void touchesCancelled (NSSet<UITouch> touches, UIEvent event) {
				super.touchesCancelled(touches, event);
				IOSGraphics.this.input.touchUp(touches, event);
			}

			@Override
			public void touchesEnded (NSSet<UITouch> touches, UIEvent event) {
				super.touchesEnded(touches, event);
				IOSGraphics.this.input.touchUp(touches, event);
			}

			@Override
			public void touchesMoved (NSSet<UITouch> touches, UIEvent event) {
				super.touchesMoved(touches, event);
				IOSGraphics.this.input.touchMoved(touches, event);
			}

			@Override
			public void draw (CGRect rect) {
				IOSGraphics.this.draw(this, rect);
			}

		};
		view.setDelegate(this);
		view.setDrawableColorFormat(config.colorFormat);
		view.setDrawableDepthFormat(config.depthFormat);
		view.setDrawableStencilFormat(config.stencilFormat);
		view.setDrawableMultisample(config.multisample);
		view.setMultipleTouchEnabled(true);

		viewController = new IOSUIViewController(app, this);
		viewController.setView(view);
		viewController.setDelegate(this);
		viewController.setPreferredFramesPerSecond(config.preferredFramesPerSecond);

		this.app = app;
		this.input = input;

		int r = 0, g = 0, b = 0, a = 0, depth = 0, stencil = 0, samples = 0;
		if (config.colorFormat == GLKViewDrawableColorFormat.RGB565) {
			r = 5;
			g = 6;
			b = 5;
			a = 0;
		} else {
			r = g = b = a = 8;
		}
		if (config.depthFormat == GLKViewDrawableDepthFormat._16) {
			depth = 16;
		} else if (config.depthFormat == GLKViewDrawableDepthFormat._24) {
			depth = 24;
		} else {
			depth = 0;
		}
		if (config.stencilFormat == GLKViewDrawableStencilFormat._8) {
			stencil = 8;
		}
		if (config.multisample == GLKViewDrawableMultisample._4X) {
			samples = 4;
		}
		bufferFormat = new BufferFormat(r, g, b, a, depth, stencil, samples, false);
		this.gl20 = gl20;

		// determine display density and PPI (PPI values via Wikipedia!)
		density = 1f;

		// if ((UIScreen.getMainScreen().respondsToSelector(new
		// Selector("scale")))) {
		double scale = UIScreen.getMainScreen().getScale();
		app.debug(tag, "Calculating density, UIScreen.mainScreen.scale: " + scale);
		if (scale == 2) density = 2f;

		int ppi;
		if (UIDevice.getCurrentDevice().getUserInterfaceIdiom() == UIUserInterfaceIdiom.Pad) {
			// iPad
			ppi = Math.round(density * 132);
		} else {
			// iPhone or iPodTouch
			ppi = Math.round(density * 163);
		}
		ppiX = ppi;
		ppiY = ppi;
		ppcX = ppiX / 2.54f;
		ppcY = ppiY / 2.54f;
		app.debug(tag, "Display: ppi=" + ppi + ", density=" + density);

		// time + FPS
		lastFrameTime = System.nanoTime();
		framesStart = lastFrameTime;

		paused = false;
	} ##FSTMerge## public IOSGraphics (CGSize bounds, IOSApplication app, IOSApplicationConfiguration config, IOSInput input, GL20 gl20) {
		this.config = config;
		// setup view and OpenGL
		width = (int)bounds.width();
		height = (int)bounds.height();
		app.debug(tag, bounds.width() + "x" + bounds.height() + ", " + UIScreen.getMainScreen().getScale());
		this.gl20 = gl20;

		context = new EAGLContext(EAGLRenderingAPI.OpenGLES2);

		view = new GLKView(new CGRect(new CGPoint(0, 0), bounds), context) {
			@Override
			public void touchesBegan (NSSet<UITouch> touches, UIEvent event) {
				super.touchesBegan(touches, event);
				IOSGraphics.this.input.touchDown(touches, event);
			}

			@Override
			public void touchesCancelled (NSSet<UITouch> touches, UIEvent event) {
				super.touchesCancelled(touches, event);
				IOSGraphics.this.input.touchUp(touches, event);
			}

			@Override
			public void touchesEnded (NSSet<UITouch> touches, UIEvent event) {
				super.touchesEnded(touches, event);
				IOSGraphics.this.input.touchUp(touches, event);
			}

			@Override
			public void touchesMoved (NSSet<UITouch> touches, UIEvent event) {
				super.touchesMoved(touches, event);
				IOSGraphics.this.input.touchMoved(touches, event);
			}

			@Override
			public void draw (CGRect rect) {
				IOSGraphics.this.draw(this, rect);
			}

		};
		view.setDelegate(this);
		view.setDrawableColorFormat(config.colorFormat);
		view.setDrawableDepthFormat(config.depthFormat);
		view.setDrawableStencilFormat(config.stencilFormat);
		view.setDrawableMultisample(config.multisample);
		view.setMultipleTouchEnabled(true);

		viewController = new IOSUIViewController(app, this);
		viewController.setView(view);
		viewController.setDelegate(this);
		viewController.setPreferredFramesPerSecond(config.preferredFramesPerSecond);

		this.app = app;
		this.input = input;

		// FIXME fix this if we add rgba/depth/stencil flags to
		// IOSApplicationConfiguration
		int r = 0, g = 0, b = 0, a = 0, depth = 0, stencil = 0, samples = 0;
		if (config.colorFormat == GLKViewDrawableColorFormat.RGB565) {
			r = 5;
			g = 6;
			b = 5;
			a = 0;
		} else {
			r = g = b = a = 8;
		}
		if (config.depthFormat == GLKViewDrawableDepthFormat._16) {
			depth = 16;
		} else if (config.depthFormat == GLKViewDrawableDepthFormat._24) {
			depth = 24;
		} else {
			depth = 0;
		}
		if (config.stencilFormat == GLKViewDrawableStencilFormat._8) {
			stencil = 8;
		}
		if (config.multisample == GLKViewDrawableMultisample._4X) {
			samples = 4;
		}
		bufferFormat = new BufferFormat(r, g, b, a, depth, stencil, samples, false);
		this.gl20 = gl20;

		// determine display density and PPI (PPI values via Wikipedia!)
		density = 1f;

		// if ((UIScreen.getMainScreen().respondsToSelector(new
		// Selector("scale")))) {
		double scale = UIScreen.getMainScreen().getScale();
		app.debug(tag, "Calculating density, UIScreen.mainScreen.scale: " + scale);
		if (scale == 2) density = 2f;

		int ppi;
		if (UIDevice.getCurrentDevice().getUserInterfaceIdiom() == UIUserInterfaceIdiom.Pad) {
			// iPad
			ppi = Math.round(density * 132);
		} else {
			// iPhone or iPodTouch
			ppi = Math.round(density * 163);
		}
		ppiX = ppi;
		ppiY = ppi;
		ppcX = ppiX / 2.54f;
		ppcY = ppiY / 2.54f;
		app.debug(tag, "Display: ppi=" + ppi + ", density=" + density);

		// time + FPS
		lastFrameTime = System.nanoTime();
		framesStart = lastFrameTime;

		paused = false;
	} ##FSTMerge## public IOSGraphics (CGSize bounds, IOSApplication app, IOSApplicationConfiguration config, IOSInput input, GL20 gl20) {
		this.config = config;
		// setup view and OpenGL
		width = (int)bounds.width();
		height = (int)bounds.height();
		app.debug(tag, bounds.width() + "x" + bounds.height() + ", " + UIScreen.getMainScreen().getScale());
		this.gl20 = gl20;

		context = new EAGLContext(EAGLRenderingAPI.OpenGLES2);

		view = new GLKView(new CGRect(new CGPoint(0, 0), bounds), context) {
			@Method(selector = "touchesBegan:withEvent:")
			public void touchesBegan (@Pointer long touches, UIEvent event) {
				IOSGraphics.this.input.touchDown(touches, event);
			}

			@Method(selector = "touchesCancelled:withEvent:")
			public void touchesCancelled (@Pointer long touches, UIEvent event) {
				IOSGraphics.this.input.touchUp(touches, event);
			}

			@Method(selector = "touchesEnded:withEvent:")
			public void touchesEnded (@Pointer long touches, UIEvent event) {
				IOSGraphics.this.input.touchUp(touches, event);
			}

			@Method(selector = "touchesMoved:withEvent:")
			public void touchesMoved (@Pointer long touches, UIEvent event) {
				IOSGraphics.this.input.touchMoved(touches, event);
			}

			@Override
			public void draw (CGRect rect) {
				IOSGraphics.this.draw(this, rect);
			}

		};
		view.setDelegate(this);
		view.setDrawableColorFormat(config.colorFormat);
		view.setDrawableDepthFormat(config.depthFormat);
		view.setDrawableStencilFormat(config.stencilFormat);
		view.setDrawableMultisample(config.multisample);
		view.setMultipleTouchEnabled(true);

		viewController = new IOSUIViewController(app, this);
		viewController.setView(view);
		viewController.setDelegate(this);
		viewController.setPreferredFramesPerSecond(config.preferredFramesPerSecond);

		this.app = app;
		this.input = input;

		// FIXME fix this if we add rgba/depth/stencil flags to
		// IOSApplicationConfiguration
		int r = 0, g = 0, b = 0, a = 0, depth = 0, stencil = 0, samples = 0;
		if (config.colorFormat == GLKViewDrawableColorFormat.RGB565) {
			r = 5;
			g = 6;
			b = 5;
			a = 0;
		} else {
			r = g = b = a = 8;
		}
		if (config.depthFormat == GLKViewDrawableDepthFormat._16) {
			depth = 16;
		} else if (config.depthFormat == GLKViewDrawableDepthFormat._24) {
			depth = 24;
		} else {
			depth = 0;
		}
		if (config.stencilFormat == GLKViewDrawableStencilFormat._8) {
			stencil = 8;
		}
		if (config.multisample == GLKViewDrawableMultisample._4X) {
			samples = 4;
		}
		bufferFormat = new BufferFormat(r, g, b, a, depth, stencil, samples, false);
		this.gl20 = gl20;

		// determine display density and PPI (PPI values via Wikipedia!)
		density = 1f;

		// if ((UIScreen.getMainScreen().respondsToSelector(new
		// Selector("scale")))) {
		double scale = UIScreen.getMainScreen().getScale();
		app.debug(tag, "Calculating density, UIScreen.mainScreen.scale: " + scale);
		if (scale == 2) density = 2f;

		int ppi;
		if (UIDevice.getCurrentDevice().getUserInterfaceIdiom() == UIUserInterfaceIdiom.Pad) {
			// iPad
			ppi = Math.round(density * 132);
		} else {
			// iPhone or iPodTouch
			ppi = Math.round(density * 163);
		}
		ppiX = ppi;
		ppiY = ppi;
		ppcX = ppiX / 2.54f;
		ppcY = ppiY / 2.54f;
		app.debug(tag, "Display: ppi=" + ppi + ", density=" + density);

		// time + FPS
		lastFrameTime = System.nanoTime();
		framesStart = lastFrameTime;

		paused = false;
	}
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSGraphics.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public void pause () {
		if (paused) return;
		paused = true;

		Array<LifecycleListener> listeners = app.lifecycleListeners;
		synchronized (listeners) {
			for (LifecycleListener listener : listeners) {
				listener.pause();
			}
		}
		app.listener.pause();
	} ##FSTMerge## public void pause () {
		if (paused) return;
		paused = true;
		
		Array<LifecycleListener> listeners = app.lifecycleListeners;
		synchronized (listeners) {
			for (LifecycleListener listener : listeners) {
				listener.pause();
			}
		}
		app.listener.pause();
	} ##FSTMerge## public void pause () {
		if (paused) return;
		paused = true;
		
		Array<LifecycleListener> listeners = app.lifecycleListeners;
		synchronized (listeners) {
			for (LifecycleListener listener : listeners) {
				listener.pause();
			}
		}
		app.listener.pause();
	}
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSGraphics.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 7dcfcd87f003223730bf11c7c295225cd9062e77
Parent1 SHA-1: 7496ed6bed638fce1d39a16dc446d6c364c6de41
Parent2 SHA-1: fcb9c3d11356a5db852fe0244783504a3477be0a
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public void draw (GLKView view, CGRect rect) {
		makeCurrent();
		// massive hack, GLKView resets the viewport on each draw call, so IOSGLES20
		// stores the last known viewport and we reset it here...
		gl20.glViewport(IOSGLES20.x, IOSGLES20.y, IOSGLES20.width, IOSGLES20.height);

		if (!created) {
			gl20.glViewport(0, 0, width, height);
			app.listener.create();
			app.listener.resize(width, height);
			created = true;
		}
		if (paused) {
			return;
		}

		long time = System.nanoTime();
		deltaTime = (time - lastFrameTime) / 1000000000.0f;
		lastFrameTime = time;

		frames++;
		if (time - framesStart >= 1000000000l) {
			framesStart = time;
			fps = frames;
			frames = 0;
		}

		input.processEvents();
		app.listener.render();
	} ##FSTMerge## @Override
	public void draw (GLKView view, CGRect rect) {
		makeCurrent();
		// massive hack, GLKView resets the viewport on each draw call, so IOSGLES20
		// stores the last known viewport and we reset it here...
		gl20.glViewport(IOSGLES20.x, IOSGLES20.y, IOSGLES20.width, IOSGLES20.height);
		
		if (!created) {
			gl20.glViewport(0, 0, width, height);
			app.listener.create();
			app.listener.resize(width, height);
			created = true;
		}
		if (paused) {
			return;
		}

		long time = System.nanoTime();
		deltaTime = (time - lastFrameTime) / 1000000000.0f;
		lastFrameTime = time;

		frames++;
		if (time - framesStart >= 1000000000l) {
			framesStart = time;
			fps = frames;
			frames = 0;
		}

		input.processEvents();
		app.listener.render();
	} ##FSTMerge## @Override
	public void draw (GLKView view, CGRect rect) {
		makeCurrent();
		// massive hack, GLKView resets the viewport on each draw call, so IOSGLES20
		// stores the last known viewport and we reset it here...
		gl20.glViewport(IOSGLES20.x, IOSGLES20.y, IOSGLES20.width, IOSGLES20.height);
		
		if (!created) {
			gl20.glViewport(0, 0, width, height);
			app.listener.create();
			app.listener.resize(width, height);
			created = true;
		}
		if (paused) {
			return;
		}

		long time = System.nanoTime();
		deltaTime = (time - lastFrameTime) / 1000000000.0f;
		lastFrameTime = time;

		frames++;
		if (time - framesStart >= 1000000000l) {
			framesStart = time;
			fps = frames;
			frames = 0;
		}

		input.processEvents();
		app.listener.render();
	}
File path: /tmp/downloads/libgdx/revisions/rev_7496e_fcb9c/rev_7496e-fcb9c/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSGraphics.java

==================================================================================================================
Revision: /tmp/downloads/libgdx/revisions/rev_cec09_b39ed/rev_cec09-b39ed.revisions
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 2fc85dfa19ba74e3b283f3ad6e993d370d1420e8
Parent1 SHA-1: cec0960315ca4653b20f79c7ba0415d4ad4fa288
Parent2 SHA-1: b39edb196453f489755c2b5c04d53b535a8b1fce
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public void update (int screenWidth, int screenHeight, boolean centerCamera) {
		float screenAspectRatio = (float)screenWidth / (float)screenHeight;

		if (snap) {
			if (Math.abs(screenAspectRatio - minAspectRatio) < Math.abs(screenAspectRatio - maxAspectRatio)) {
				setScaling(Scaling.fit);
				this.setWorldSize(minWorldWidth, minWorldHeight);
			} else {
				this.setWorldSize(maxWorldWidth, maxWorldHeight);
			}
		} else {
			if (screenAspectRatio < minAspectRatio) {
				setScaling(Scaling.fit);
				setWorldSize(minWorldWidth, minWorldHeight);
			} else if (screenAspectRatio > maxAspectRatio) {
				setScaling(Scaling.fit);
				setWorldSize(maxWorldWidth, maxWorldHeight);
			} else {
				if (screenWidth > maxWorldWidth || screenHeight > maxWorldHeight) {
					setScaling(Scaling.fit);
					setWorldSize(maxWorldWidth, maxWorldWidth / screenAspectRatio);
				} else if (screenWidth < minWorldWidth || screenHeight < minWorldHeight) {
					setScaling(Scaling.fit);
					setWorldSize(minWorldWidth, minWorldWidth / screenAspectRatio);
				} else {
					setScaling(Scaling.fill);
					setWorldSize(screenWidth, screenHeight);
				}
			}
		}

		super.update(screenWidth, screenHeight, centerCamera);
	} ##FSTMerge## @Override
	public void update (int screenWidth, int screenHeight, boolean centerCamera) {
		float screenAspectRatio = (float)screenWidth / (float)screenHeight;

		if (snap) {
			if (Math.abs(screenAspectRatio - minAspectRatio) < Math.abs(screenAspectRatio - maxAspectRatio)) {
				this.setWorldSize(minWorldWidth, minWorldHeight);
			} else {
				this.setWorldSize(maxWorldWidth, maxWorldHeight);
			}
		} else {
			if (screenAspectRatio < minAspectRatio) {
				setWorldSize(minWorldWidth, minWorldHeight);
			} else if (screenAspectRatio > maxAspectRatio) {
				setWorldSize(maxWorldWidth, maxWorldHeight);
			} else {
				if (Math.abs(screenAspectRatio - minAspectRatio) < Math.abs(screenAspectRatio - maxAspectRatio)) {
					setWorldSize(minWorldWidth, minWorldWidth / screenAspectRatio);
				} else {
					setWorldSize(maxWorldWidth, maxWorldWidth / screenAspectRatio);
				}
			}
		}

		super.update(screenWidth, screenHeight, centerCamera);
	} ##FSTMerge## @Override
	public void update (int screenWidth, int screenHeight, boolean centerCamera) {
		float screenAspectRatio = (float)screenWidth / (float)screenHeight;

		if (snap) {
			if (Math.abs(screenAspectRatio - minAspectRatio) < Math.abs(screenAspectRatio - maxAspectRatio)) {
				setWorldSize(minWorldWidth, minWorldHeight);
			} else {
				setWorldSize(maxWorldWidth, maxWorldHeight);
			}
		} else {
			if (screenAspectRatio < minAspectRatio) {
				setWorldSize(minWorldWidth, minWorldHeight);
			} else if (screenAspectRatio > maxAspectRatio) {
				setWorldSize(maxWorldWidth, maxWorldHeight);
			} else if (Math.abs(screenAspectRatio - minAspectRatio) < Math.abs(screenAspectRatio - maxAspectRatio)) {
				setWorldSize(minWorldWidth, minWorldWidth / screenAspectRatio);
			} else {
				setWorldSize(maxWorldWidth, maxWorldWidth / screenAspectRatio);
			}
		}

		super.update(screenWidth, screenHeight, centerCamera);
	}
File path: /tmp/downloads/libgdx/revisions/rev_cec09_b39ed/rev_cec09-b39ed/gdx/src/com/badlogic/gdx/utils/viewport/MinMaxViewport.java

==================================================================================================================
Revision: /tmp/downloads/libgdx/revisions/rev_ef0d7_2787a/rev_ef0d7-2787a.revisions
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 5de1113a095799c04cdbbe7ac690348d6bd63dd9
Parent1 SHA-1: ef0d77846024922e371ddcf1dc806c5863b7afcf
Parent2 SHA-1: 2787aa5b1ed12b54eae4e9c608ed3c71c4aefaab
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public void resize (int width, int height) {
		System.out.println(viewport.getClass().getSimpleName());
		viewport.update(width, height);
	} ##FSTMerge## public void resize (int width, int height) {
		System.out.println(viewport);
		viewport.update(width, height);
	} ##FSTMerge## public void resize (int width, int height) {
		System.out.println(viewport);
		viewport.update(width, height);
	}
File path: /tmp/downloads/libgdx/revisions/rev_ef0d7_2787a/rev_ef0d7-2787a/tests/gdx-tests/src/com/badlogic/gdx/tests/ViewportTest3.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 5de1113a095799c04cdbbe7ac690348d6bd63dd9
Parent1 SHA-1: ef0d77846024922e371ddcf1dc806c5863b7afcf
Parent2 SHA-1: 2787aa5b1ed12b54eae4e9c608ed3c71c4aefaab
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public void render () {
		batch.setProjectionMatrix(camera.projection);
		batch.setTransformMatrix(camera.view);

		Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);
		batch.begin();
		// draw a white background so we are able to see the black bars
		batch.setColor(1, 1, 1, 1);
		batch.draw(texture, -4096, -4096, 4096, 4096, 8192, 8192, 1, 1, 0, 0, 0, 16, 16, false, false);

		batch.setColor(1, 0, 0, 1);
		batch.draw(texture, 150, 100, 16, 16, 32, 32, 1, 1, 45, 0, 0, 16, 16, false, false);

		font.draw(batch, viewport.getClass().getSimpleName(), 150, 100);
		batch.end();

		if (viewport instanceof ScalingViewport) {
			// This shows how to set the viewport to the whole screen and draw within the black bars.
			ScalingViewport scalingViewport = (ScalingViewport)viewport;
			int screenWidth = Gdx.graphics.getWidth();
			int screenHeight = Gdx.graphics.getHeight();
			Gdx.gl.glViewport(0, 0, screenWidth, screenHeight);
			batch.getProjectionMatrix().idt().setToOrtho2D(0, 0, screenWidth, screenHeight);
			batch.getTransformMatrix().idt();
			batch.begin();
			float leftGutterWidth = scalingViewport.getLeftGutterWidth();
			if (leftGutterWidth > 0) {
				batch.draw(texture, 0, 0, leftGutterWidth, screenHeight);
				batch.draw(texture, scalingViewport.getRightGutterX(), 0, scalingViewport.getRightGutterWidth(), screenHeight);
			}
			float bottomGutterHeight = scalingViewport.getBottomGutterHeight();
			if (bottomGutterHeight > 0) {
				batch.draw(texture, 0, 0, screenWidth, bottomGutterHeight);
				batch.draw(texture, 0, scalingViewport.getTopGutterY(), screenWidth, scalingViewport.getTopGutterHeight());
			}
			batch.end();
			viewport.update(screenWidth, screenHeight, true); // Restore viewport.
		}
	} ##FSTMerge## public void render () {
		batch.setProjectionMatrix(camera.projection);
		batch.setTransformMatrix(camera.view);

		Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);
		batch.begin();
		// draw a white background so we are able to see the black bars
		batch.setColor(1, 1, 1, 1);
		batch.draw(texture, -4096, -4096, 4096, 4096, 8192, 8192, 1, 1, 0, 0, 0, 16, 16, false, false);

		batch.setColor(1, 0, 0, 1);
		batch.draw(texture, 150, 100, 16, 16, 32, 32, 1, 1, 45, 0, 0, 16, 16, false, false);

		font.draw(batch, viewport.toString(), 150, 100);
		batch.end();

		if (viewport instanceof ScalingViewport) {
			// This shows how to set the viewport to the whole screen and draw within the black bars.
			ScalingViewport scalingViewport = (ScalingViewport)viewport;
			int screenWidth = Gdx.graphics.getWidth();
			int screenHeight = Gdx.graphics.getHeight();
			Gdx.gl.glViewport(0, 0, screenWidth, screenHeight);
			batch.getProjectionMatrix().idt().setToOrtho2D(0, 0, screenWidth, screenHeight);
			batch.getTransformMatrix().idt();
			batch.begin();
			float leftGutterWidth = scalingViewport.getLeftGutterWidth();
			if (leftGutterWidth > 0) {
				batch.draw(texture, 0, 0, leftGutterWidth, screenHeight);
				batch.draw(texture, scalingViewport.getRightGutterX(), 0, scalingViewport.getRightGutterWidth(), screenHeight);
			}
			float bottomGutterHeight = scalingViewport.getBottomGutterHeight();
			if (bottomGutterHeight > 0) {
				batch.draw(texture, 0, 0, screenWidth, bottomGutterHeight);
				batch.draw(texture, 0, scalingViewport.getTopGutterY(), screenWidth, scalingViewport.getTopGutterHeight());
			}
			batch.end();
			viewport.update(screenWidth, screenHeight, true); // Restore viewport.
		}
	} ##FSTMerge## public void render () {
		batch.setProjectionMatrix(camera.projection);
		batch.setTransformMatrix(camera.view);

		Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);
		batch.begin();
		// draw a white background so we are able to see the black bars
		batch.setColor(1, 1, 1, 1);
		batch.draw(texture, -4096, -4096, 4096, 4096, 8192, 8192, 1, 1, 0, 0, 0, 16, 16, false, false);

		batch.setColor(1, 0, 0, 1);
		batch.draw(texture, 150, 100, 16, 16, 32, 32, 1, 1, 45, 0, 0, 16, 16, false, false);

		font.draw(batch, viewport.toString(), 150, 100);
		batch.end();

		if (viewport instanceof ScalingViewport) {
			// This shows how to set the viewport to the whole screen and draw within the black bars.
			ScalingViewport scalingViewport = (ScalingViewport)viewport;
			int screenWidth = Gdx.graphics.getWidth();
			int screenHeight = Gdx.graphics.getHeight();
			Gdx.gl.glViewport(0, 0, screenWidth, screenHeight);
			batch.getProjectionMatrix().idt().setToOrtho2D(0, 0, screenWidth, screenHeight);
			batch.getTransformMatrix().idt();
			batch.begin();
			float leftGutterWidth = scalingViewport.getLeftGutterWidth();
			if (leftGutterWidth > 0) {
				batch.draw(texture, 0, 0, leftGutterWidth, screenHeight);
				batch.draw(texture, scalingViewport.getRightGutterX(), 0, scalingViewport.getRightGutterWidth(), screenHeight);
			}
			float bottomGutterHeight = scalingViewport.getBottomGutterHeight();
			if (bottomGutterHeight > 0) {
				batch.draw(texture, 0, 0, screenWidth, bottomGutterHeight);
				batch.draw(texture, 0, scalingViewport.getTopGutterY(), screenWidth, scalingViewport.getTopGutterHeight());
			}
			batch.end();
			viewport.update(screenWidth, screenHeight, true); // Restore viewport.
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_ef0d7_2787a/rev_ef0d7-2787a/tests/gdx-tests/src/com/badlogic/gdx/tests/ViewportTest2.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 5de1113a095799c04cdbbe7ac690348d6bd63dd9
Parent1 SHA-1: ef0d77846024922e371ddcf1dc806c5863b7afcf
Parent2 SHA-1: 2787aa5b1ed12b54eae4e9c608ed3c71c4aefaab
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public void resize (int width, int height) {
		System.out.println(viewport.getClass().getSimpleName());
		viewport.update(width, height);
	} ##FSTMerge## public void resize (int width, int height) {
		System.out.println(viewport);
		viewport.update(width, height);
	} ##FSTMerge## public void resize (int width, int height) {
		System.out.println(viewport);
		viewport.update(width, height);
	}
File path: /tmp/downloads/libgdx/revisions/rev_ef0d7_2787a/rev_ef0d7-2787a/tests/gdx-tests/src/com/badlogic/gdx/tests/ViewportTest2.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 5de1113a095799c04cdbbe7ac690348d6bd63dd9
Parent1 SHA-1: ef0d77846024922e371ddcf1dc806c5863b7afcf
Parent2 SHA-1: 2787aa5b1ed12b54eae4e9c608ed3c71c4aefaab
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public void create () {
		stage = new Stage();
		Skin skin = new Skin(Gdx.files.internal("data/uiskin.json"));

		label = new Label("", skin);

		Table root = new Table(skin);
		root.setFillParent(true);
		root.setBackground(skin.getDrawable("default-pane"));
		root.debug().defaults().space(6);
		root.add(new TextButton("Button 1", skin));
		root.add(new TextButton("Button 2", skin)).row();
		root.add("Press spacebar to change the viewport:").colspan(2).row();
		root.add(label).colspan(2);
		stage.addActor(root);

		int minWorldWidth = 300;
		int minWorldHeight = 225;
		int maxWorldWidth = 300;
		int maxWorldHeight = 168;

		Camera camera = stage.getCamera();
		viewports.add(new StretchViewport(minWorldWidth, minWorldHeight, camera));
		viewports.add(new FillViewport(minWorldWidth, minWorldHeight, camera));
		viewports.add(new FitViewport(minWorldWidth, minWorldHeight, camera));
		viewports.add(new ExtendViewport(minWorldWidth, minWorldHeight, camera));
		viewports.add(new ScreenViewport(camera));
		viewports.add(new ScalingViewport(Scaling.none, minWorldWidth, minWorldHeight, camera));
		viewports.add(new DoubleRatioViewport(minWorldWidth, minWorldHeight, maxWorldWidth, maxWorldHeight, camera));
		viewports.add(new MinMaxViewport(minWorldWidth, minWorldHeight, maxWorldWidth, maxWorldHeight, camera));
		stage.setViewport(viewports.first());

		Gdx.input.setInputProcessor(new InputMultiplexer(new InputAdapter() {
			public boolean keyDown (int keycode) {
				if (keycode == Input.Keys.SPACE) {
					Viewport viewport = viewports.get((viewports.indexOf(stage.getViewport(), true) + 1) % viewports.size);
					stage.setViewport(viewport);
					resize(Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
				}
				return false;
			}
		}, stage));
	} ##FSTMerge## public void create () {
		stage = new Stage();
		Skin skin = new Skin(Gdx.files.internal("data/uiskin.json"));

		label = new Label("", skin);

		Table root = new Table(skin);
		root.setFillParent(true);
		root.setBackground(skin.getDrawable("default-pane"));
		root.debug().defaults().space(6);
		root.add(new TextButton("Button 1", skin));
		root.add(new TextButton("Button 2", skin)).row();
		root.add("Press spacebar to change the viewport:").colspan(2).row();
		root.add(label).colspan(2);
		stage.addActor(root);

		int minWorldWidth = 300;
		int minWorldHeight = 225;
		int maxWorldWidth = 300;
		int maxWorldHeight = 168;

		Camera camera = stage.getCamera();
		viewports.add(new ScalingViewport(Scaling.stretch, minWorldWidth, minWorldHeight, camera));
		viewports.add(new ScalingViewport(Scaling.fill, minWorldWidth, minWorldHeight, camera));
		viewports.add(new ScalingViewport(Scaling.fit, minWorldWidth, minWorldHeight, camera));
		viewports.add(new ExtendViewport(minWorldWidth, minWorldHeight, camera));
		viewports.add(new ScreenViewport(camera));
		viewports.add(new ScalingViewport(Scaling.none, minWorldWidth, minWorldHeight, camera));
		viewports.add(new DoubleRatioViewport(minWorldWidth, minWorldHeight, maxWorldWidth, maxWorldHeight, camera));
		viewports.add(new MinMaxViewport(minWorldWidth, minWorldHeight, maxWorldWidth, maxWorldHeight, camera));
		stage.setViewport(viewports.first());

		Gdx.input.setInputProcessor(new InputMultiplexer(new InputAdapter() {
			public boolean keyDown (int keycode) {
				if (keycode == Input.Keys.SPACE) {
					Viewport viewport = viewports.get((viewports.indexOf(stage.getViewport(), true) + 1) % viewports.size);
					stage.setViewport(viewport);
					resize(Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
				}
				return false;
			}
		}, stage));
	} ##FSTMerge## public void create () {
		stage = new Stage();
		Skin skin = new Skin(Gdx.files.internal("data/uiskin.json"));

		label = new Label("", skin);

		Table root = new Table(skin);
		root.setFillParent(true);
		root.setBackground(skin.getDrawable("default-pane"));
		root.debug().defaults().space(6);
		root.add(new TextButton("Button 1", skin));
		root.add(new TextButton("Button 2", skin)).row();
		root.add("Press spacebar to change the viewport:").colspan(2).row();
		root.add(label).colspan(2);
		stage.addActor(root);

		int minWorldWidth = 300;
		int minWorldHeight = 225;
		int maxWorldWidth = 300;
		int maxWorldHeight = 168;

		Camera camera = stage.getCamera();
		viewports.add(new ScalingViewport(Scaling.stretch, minWorldWidth, minWorldHeight, camera));
		viewports.add(new ScalingViewport(Scaling.fill, minWorldWidth, minWorldHeight, camera));
		viewports.add(new ScalingViewport(Scaling.fit, minWorldWidth, minWorldHeight, camera));
		viewports.add(new ExtendViewport(minWorldWidth, minWorldHeight, camera));
		viewports.add(new ScreenViewport(camera));
		viewports.add(new ScalingViewport(Scaling.none, minWorldWidth, minWorldHeight, camera));
		viewports.add(new MinMaxViewport(minWorldWidth, minWorldHeight, maxWorldWidth, maxWorldHeight, true, camera));
		viewports.add(new MinMaxViewport(minWorldWidth, minWorldHeight, maxWorldWidth, maxWorldHeight, false, camera));
		stage.setViewport(viewports.first());

		Gdx.input.setInputProcessor(new InputMultiplexer(new InputAdapter() {
			public boolean keyDown (int keycode) {
				if (keycode == Input.Keys.SPACE) {
					Viewport viewport = viewports.get((viewports.indexOf(stage.getViewport(), true) + 1) % viewports.size);
					stage.setViewport(viewport);
					resize(Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
				}
				return false;
			}
		}, stage));
	}
File path: /tmp/downloads/libgdx/revisions/rev_ef0d7_2787a/rev_ef0d7-2787a/tests/gdx-tests/src/com/badlogic/gdx/tests/ViewportTest1.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 5de1113a095799c04cdbbe7ac690348d6bd63dd9
Parent1 SHA-1: ef0d77846024922e371ddcf1dc806c5863b7afcf
Parent2 SHA-1: 2787aa5b1ed12b54eae4e9c608ed3c71c4aefaab
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public void render () {
		label.setText(stage.getViewport().getClass().getSimpleName());
		stage.act();

		Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);
		stage.draw();
		Table.drawDebug(stage);
	} ##FSTMerge## public void render () {
		label.setText(stage.getViewport().toString());
		stage.act();

		Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);
		stage.draw();
		Table.drawDebug(stage);
	} ##FSTMerge## public void render () {
		label.setText(stage.getViewport().toString());
		stage.act();

		Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);
		stage.draw();
		Table.drawDebug(stage);
	}
File path: /tmp/downloads/libgdx/revisions/rev_ef0d7_2787a/rev_ef0d7-2787a/tests/gdx-tests/src/com/badlogic/gdx/tests/ViewportTest1.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 5de1113a095799c04cdbbe7ac690348d6bd63dd9
Parent1 SHA-1: ef0d77846024922e371ddcf1dc806c5863b7afcf
Parent2 SHA-1: 2787aa5b1ed12b54eae4e9c608ed3c71c4aefaab
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public String toString () {
		return getClass().getSimpleName();
	} ##FSTMerge## @Override
	public String toString () {
		return getClass().getSimpleName() + (snap ? " (snapped)" : " (non snapped)");
	}
File path: /tmp/downloads/libgdx/revisions/rev_ef0d7_2787a/rev_ef0d7-2787a/gdx/src/com/badlogic/gdx/utils/viewport/MinMaxViewport.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 5de1113a095799c04cdbbe7ac690348d6bd63dd9
Parent1 SHA-1: ef0d77846024922e371ddcf1dc806c5863b7afcf
Parent2 SHA-1: 2787aa5b1ed12b54eae4e9c608ed3c71c4aefaab
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ protected final float minWorldWidth, minWorldHeight; ##FSTMerge## protected final float minWorldWidth; ##FSTMerge##
File path: /tmp/downloads/libgdx/revisions/rev_ef0d7_2787a/rev_ef0d7-2787a/gdx/src/com/badlogic/gdx/utils/viewport/MinMaxViewportBase.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 5de1113a095799c04cdbbe7ac690348d6bd63dd9
Parent1 SHA-1: ef0d77846024922e371ddcf1dc806c5863b7afcf
Parent2 SHA-1: 2787aa5b1ed12b54eae4e9c608ed3c71c4aefaab
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ protected final float maxWorldWidth, maxWorldHeight; ##FSTMerge## protected final float maxWorldWidth; ##FSTMerge##
File path: /tmp/downloads/libgdx/revisions/rev_ef0d7_2787a/rev_ef0d7-2787a/gdx/src/com/badlogic/gdx/utils/viewport/MinMaxViewportBase.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 5de1113a095799c04cdbbe7ac690348d6bd63dd9
Parent1 SHA-1: ef0d77846024922e371ddcf1dc806c5863b7afcf
Parent2 SHA-1: 2787aa5b1ed12b54eae4e9c608ed3c71c4aefaab
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ protected final float minAspectRatio, maxAspectRatio; ##FSTMerge## protected final float minAspectRatio; ##FSTMerge##
File path: /tmp/downloads/libgdx/revisions/rev_ef0d7_2787a/rev_ef0d7-2787a/gdx/src/com/badlogic/gdx/utils/viewport/MinMaxViewportBase.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 5de1113a095799c04cdbbe7ac690348d6bd63dd9
Parent1 SHA-1: ef0d77846024922e371ddcf1dc806c5863b7afcf
Parent2 SHA-1: 2787aa5b1ed12b54eae4e9c608ed3c71c4aefaab
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public MinMaxViewportBase (float minWorldWidth, float minWorldHeight, float maxWorldWidth, float maxWorldHeight, Camera camera) {
		super(Scaling.fit, minWorldWidth, minWorldHeight, camera);

		this.minWorldWidth = minWorldWidth;
		this.minWorldHeight = minWorldHeight;
		this.maxWorldWidth = maxWorldWidth;
		this.maxWorldHeight = maxWorldHeight;
		minAspectRatio = minWorldWidth / minWorldHeight;
		maxAspectRatio = maxWorldWidth / maxWorldHeight;

		if (minAspectRatio > maxAspectRatio) {
			throw new IllegalArgumentException("Minimum aspect ratio has to be smaller than Maximum aspect ratio");
		}
	} ##FSTMerge## public MinMaxViewportBase (float minWorldWidth, float minWorldHeight, float maxWorldWidth, float maxWorldHeight, Camera camera) {
		super(Scaling.fit, minWorldWidth, minWorldHeight, camera);

		this.minWorldWidth = minWorldWidth;
		this.minWorldHeight = minWorldHeight;
		this.maxWorldWidth = maxWorldWidth;
		this.maxWorldHeight = maxWorldHeight;
		this.minAspectRatio = minWorldWidth / minWorldHeight;
		this.maxAspectRatio = maxWorldWidth / maxWorldHeight;

		if (this.minAspectRatio > this.maxAspectRatio) {
			throw new IllegalArgumentException("Minimum aspect ratio has to be smaller than Maximum aspect ratio");
		}
	} ##FSTMerge##
File path: /tmp/downloads/libgdx/revisions/rev_ef0d7_2787a/rev_ef0d7-2787a/gdx/src/com/badlogic/gdx/utils/viewport/MinMaxViewportBase.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 5de1113a095799c04cdbbe7ac690348d6bd63dd9
Parent1 SHA-1: ef0d77846024922e371ddcf1dc806c5863b7afcf
Parent2 SHA-1: 2787aa5b1ed12b54eae4e9c608ed3c71c4aefaab
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public void update (int screenWidth, int screenHeight, boolean centerCamera) {
		update((float)screenWidth / (float)screenHeight);
		super.update(screenWidth, screenHeight, centerCamera);
	} ##FSTMerge## @Override
	public void update (int screenWidth, int screenHeight, boolean centerCamera) {
		calculateWorldSize((float)screenWidth / (float)screenHeight);
		super.update(screenWidth, screenHeight, centerCamera);
	} ##FSTMerge##
File path: /tmp/downloads/libgdx/revisions/rev_ef0d7_2787a/rev_ef0d7-2787a/gdx/src/com/badlogic/gdx/utils/viewport/MinMaxViewportBase.java

==================================================================================================================
Revision: /tmp/downloads/libgdx/revisions/rev_28206_a50af/rev_28206-a50af.revisions
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: fb8a152afdd3b3cf5db54f33e5e0fcbeb3226a80
Parent1 SHA-1: 28206d8105979d924f7a733e846f48d9f064b9ab
Parent2 SHA-1: a50afa290c624ca4b37efbce80369c70b2656a22
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	protected void renderWorld () {
		if (world.performanceCounter != null)
			world.performanceCounter.start();
		if (USE_BULLET_FRUSTUM_CULLING)
			getEntitiesCollidingWithObject(world, frustumObject, visibleEntities, tempManifoldArr);
		else {
			visibleEntities.clear();
			for (int i = 0; i < world.entities.size; i++) {
				final BulletEntity e = world.entities.get(i);
				if (e == frustumEntity)
					continue;
				e.modelInstance.transform.getTranslation(tmpV);
				if (frustumCam.frustum.sphereInFrustum(tmpV, 1))
					visibleEntities.add(e);
			}
		}
		if (world.performanceCounter != null)
			world.performanceCounter.stop();
		
		for (int i = 0; i < visibleEntities.size; i++)
			visibleEntities.get(i).setColor(Color.RED);

		modelBatch.begin(camera);
		if ((state & CULL_FRUSTUM) == CULL_FRUSTUM) {
			world.render(modelBatch, environment, visibleEntities);
			world.render(modelBatch, environment, frustumEntity);
		} else
			world.render(modelBatch, environment);
		modelBatch.end();
		
		for (int i = 0; i < visibleEntities.size; i++)
			visibleEntities.get(i).setColor(Color.GRAY);
	} ##FSTMerge## @Override
	protected void renderWorld () {
		if (world.performanceCounter != null)
			world.performanceCounter.start();
		if (USE_BULLET_FRUSTUM_CULLING)
			getEntitiesCollidingWithObject(world, frustumObject, visibleEntities, tempManifoldArr);
		else {
			visibleEntities.clear();
			for (int i = 0; i < world.entities.size; i++) {
				final BulletEntity e = world.entities.get(i);
				if (e == frustumEntity)
					continue;
				e.modelInstance.transform.getTranslation(tmpV);
				if (frustumCam.frustum.sphereInFrustum(tmpV, 1))
					visibleEntities.add(e);
			}
		}
		if (world.performanceCounter != null)
			world.performanceCounter.stop();
		
		for (int i = 0; i < visibleEntities.size; i++)
			visibleEntities.get(i).setColor(Color.RED);

		modelBatch.begin(camera);
		if ((state & CULL_FRUSTUM) == CULL_FRUSTUM) {
			world.render(modelBatch, lights, visibleEntities);
			world.render(modelBatch, lights, frustumEntity);
		} else
			world.render(modelBatch, lights);
		modelBatch.end();
		
		for (int i = 0; i < visibleEntities.size; i++)
			visibleEntities.get(i).setColor(Color.GRAY);
	} ##FSTMerge## @Override
	protected void renderWorld () {
		if (world.performanceCounter != null) world.performanceCounter.start();
		if (USE_BULLET_FRUSTUM_CULLING)
			getEntitiesCollidingWithObject(world, frustumObject, visibleEntities, tempManifoldArr);
		else {
			visibleEntities.clear();
			for (int i = 0; i < world.entities.size; i++) {
				final BulletEntity e = world.entities.get(i);
				if (e == frustumEntity) continue;
				e.modelInstance.transform.getTranslation(tmpV);
				if (frustumCam.frustum.sphereInFrustum(tmpV, 1)) visibleEntities.add(e);
			}
		}
		if (world.performanceCounter != null) world.performanceCounter.stop();

		for (int i = 0; i < visibleEntities.size; i++)
			visibleEntities.get(i).setColor(Color.RED);

		modelBatch.begin(camera);
		if ((state & CULL_FRUSTUM) == CULL_FRUSTUM) {
			world.render(modelBatch, lights, visibleEntities);
			world.render(modelBatch, lights, frustumEntity);
		} else
			world.render(modelBatch, lights);
		modelBatch.end();

		for (int i = 0; i < visibleEntities.size; i++)
			visibleEntities.get(i).setColor(Color.GRAY);
	}
File path: /tmp/downloads/libgdx/revisions/rev_28206_a50af/rev_28206-a50af/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/FrustumCullingTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: fb8a152afdd3b3cf5db54f33e5e0fcbeb3226a80
Parent1 SHA-1: 28206d8105979d924f7a733e846f48d9f064b9ab
Parent2 SHA-1: a50afa290c624ca4b37efbce80369c70b2656a22
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Environment lights; ##FSTMerge## public Environment lights;
File path: /tmp/downloads/libgdx/revisions/rev_28206_a50af/rev_28206-a50af/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BaseBulletTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: fb8a152afdd3b3cf5db54f33e5e0fcbeb3226a80
Parent1 SHA-1: 28206d8105979d924f7a733e846f48d9f064b9ab
Parent2 SHA-1: a50afa290c624ca4b37efbce80369c70b2656a22
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public DirectionalLight shadowLight; ##FSTMerge## public DirectionalLight shadowLight;
File path: /tmp/downloads/libgdx/revisions/rev_28206_a50af/rev_28206-a50af/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BaseBulletTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: fb8a152afdd3b3cf5db54f33e5e0fcbeb3226a80
Parent1 SHA-1: 28206d8105979d924f7a733e846f48d9f064b9ab
Parent2 SHA-1: a50afa290c624ca4b37efbce80369c70b2656a22
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public void create () {
		init();
		environment = new Environment();
		environment.set(new ColorAttribute(ColorAttribute.AmbientLight, 0.3f, 0.3f, 0.3f, 1.f));
		light = shadows ? new DirectionalShadowLight(1024, 1024, 20f, 20f, 1f, 300f) : new DirectionalLight();
		light.set(0.8f, 0.8f, 0.8f, -0.5f, -1f, 0.7f);
		environment.add(light);
		if (shadows)
			environment.shadowMap = (DirectionalShadowLight)light;
		shadowBatch = new ModelBatch(new DepthShaderProvider());
		
		modelBatch = new ModelBatch();
		
		world = createWorld();
		world.performanceCounter = performanceCounter;

		final float width = Gdx.graphics.getWidth();
		final float height = Gdx.graphics.getHeight();
		if (width > height)
			camera = new PerspectiveCamera(67f, 3f * width / height, 3f);
		else
			camera = new PerspectiveCamera(67f, 3f, 3f * height / width);
		camera.position.set(10f, 10f, 10f);
		camera.lookAt(0, 0, 0);
		camera.update();
		
		// Create some simple models
		final Model groundModel = modelBuilder.createRect(20f, 0f, -20f, -20f, 0f, -20f, -20f, 0f, 20f, 20f, 0f, 20f, 0, 1, 0, 
			new Material(ColorAttribute.createDiffuse(Color.WHITE), ColorAttribute.createSpecular(Color.WHITE), FloatAttribute.createShininess(16f)),
			Usage.Position | Usage.Normal);
		disposables.add(groundModel);
		final Model boxModel = modelBuilder.createBox(1f, 1f, 1f,
			new Material(ColorAttribute.createDiffuse(Color.WHITE), ColorAttribute.createSpecular(Color.WHITE), FloatAttribute.createShininess(64f)), 
			Usage.Position | Usage.Normal);
		disposables.add(boxModel);

		// Add the constructors
		world.addConstructor("ground", new BulletConstructor(groundModel, 0f)); // mass = 0: static body
		world.addConstructor("box", new BulletConstructor(boxModel, 1f)); // mass = 1kg: dynamic body
		world.addConstructor("staticbox", new BulletConstructor(boxModel, 0f)); // mass = 0: static body
	} ##FSTMerge## @Override
	public void create () {
		init();
		lights = new Environment();
		lights.set(new ColorAttribute(ColorAttribute.AmbientLight, 0.3f, 0.3f, 0.3f, 1.f));
		lights.add(
			(shadowLight = new DirectionalLight()).set(0.8f, 0.8f, 0.8f, -0.5f, -1f, 0.7f)
		);
//		lights.shadowMap = shadowLight;
		shadowBatch = new ModelBatch(new DepthShaderProvider());
		
		modelBatch = new ModelBatch();
		
		world = createWorld();
		world.performanceCounter = performanceCounter;

		final float width = Gdx.graphics.getWidth();
		final float height = Gdx.graphics.getHeight();
		if (width > height)
			camera = new PerspectiveCamera(67f, 3f * width / height, 3f);
		else
			camera = new PerspectiveCamera(67f, 3f, 3f * height / width);
		camera.position.set(10f, 10f, 10f);
		camera.lookAt(0, 0, 0);
		camera.update();
		
		// Create some simple models
		final Model groundModel = modelBuilder.createRect(20f, 0f, -20f, -20f, 0f, -20f, -20f, 0f, 20f, 20f, 0f, 20f, 0, 1, 0, 
			new Material(ColorAttribute.createDiffuse(Color.WHITE), ColorAttribute.createSpecular(Color.WHITE), FloatAttribute.createShininess(16f)),
			Usage.Position | Usage.Normal);
		disposables.add(groundModel);
		final Model boxModel = modelBuilder.createBox(1f, 1f, 1f,
			new Material(ColorAttribute.createDiffuse(Color.WHITE), ColorAttribute.createSpecular(Color.WHITE), FloatAttribute.createShininess(64f)), 
			Usage.Position | Usage.Normal);
		disposables.add(boxModel);

		// Add the constructors
		world.addConstructor("ground", new BulletConstructor(groundModel, 0f)); // mass = 0: static body
		world.addConstructor("box", new BulletConstructor(boxModel, 1f)); // mass = 1kg: dynamic body
		world.addConstructor("staticbox", new BulletConstructor(boxModel, 0f)); // mass = 0: static body
	} ##FSTMerge## @Override
	public void create () {
		init();
		lights = new Environment();
		lights.set(new ColorAttribute(ColorAttribute.AmbientLight, 0.3f, 0.3f, 0.3f, 1.f));
		lights.add((shadowLight = new DirectionalLight()).set(0.8f, 0.8f, 0.8f, -0.5f, -1f, 0.7f));
// lights.shadowMap = shadowLight;
		shadowBatch = new ModelBatch(new DepthShaderProvider());

		modelBatch = new ModelBatch();

		world = createWorld();
		world.performanceCounter = performanceCounter;

		final float width = Gdx.graphics.getWidth();
		final float height = Gdx.graphics.getHeight();
		if (width > height)
			camera = new PerspectiveCamera(67f, 3f * width / height, 3f);
		else
			camera = new PerspectiveCamera(67f, 3f, 3f * height / width);
		camera.position.set(10f, 10f, 10f);
		camera.lookAt(0, 0, 0);
		camera.update();

		// Create some simple models
		final Model groundModel = modelBuilder.createRect(
			20f,
			0f,
			-20f,
			-20f,
			0f,
			-20f,
			-20f,
			0f,
			20f,
			20f,
			0f,
			20f,
			0,
			1,
			0,
			new Material(ColorAttribute.createDiffuse(Color.WHITE), ColorAttribute.createSpecular(Color.WHITE), FloatAttribute
				.createShininess(16f)), Usage.Position | Usage.Normal);
		disposables.add(groundModel);
		final Model boxModel = modelBuilder.createBox(1f, 1f, 1f, new Material(ColorAttribute.createDiffuse(Color.WHITE),
			ColorAttribute.createSpecular(Color.WHITE), FloatAttribute.createShininess(64f)), Usage.Position | Usage.Normal);
		disposables.add(boxModel);

		// Add the constructors
		world.addConstructor("ground", new BulletConstructor(groundModel, 0f)); // mass = 0: static body
		world.addConstructor("box", new BulletConstructor(boxModel, 1f)); // mass = 1kg: dynamic body
		world.addConstructor("staticbox", new BulletConstructor(boxModel, 0f)); // mass = 0: static body
	}
File path: /tmp/downloads/libgdx/revisions/rev_28206_a50af/rev_28206-a50af/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BaseBulletTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: fb8a152afdd3b3cf5db54f33e5e0fcbeb3226a80
Parent1 SHA-1: 28206d8105979d924f7a733e846f48d9f064b9ab
Parent2 SHA-1: a50afa290c624ca4b37efbce80369c70b2656a22
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public void dispose () {
		world.dispose();
		world = null;
		
		for (Disposable disposable : disposables)
			disposable.dispose();
		disposables.clear();
		
		modelBatch.dispose();
		modelBatch = null;
		
		shadowBatch.dispose();
		shadowBatch = null;
		
		if (shadows)
			((DirectionalShadowLight)light).dispose();
		light = null;
		
		super.dispose();
	} ##FSTMerge## @Override
	public void dispose () {
		world.dispose();
		world = null;
		
		for (Disposable disposable : disposables)
			disposable.dispose();
		disposables.clear();
		
		modelBatch.dispose();
		modelBatch = null;
		
		shadowBatch.dispose();
		shadowBatch = null;
		
//		shadowLight.dispose();
		shadowLight = null;
		
		super.dispose();
	} ##FSTMerge## @Override
	public void dispose () {
		world.dispose();
		world = null;

		for (Disposable disposable : disposables)
			disposable.dispose();
		disposables.clear();

		modelBatch.dispose();
		modelBatch = null;

		shadowBatch.dispose();
		shadowBatch = null;

// shadowLight.dispose();
		shadowLight = null;

		super.dispose();
	}
File path: /tmp/downloads/libgdx/revisions/rev_28206_a50af/rev_28206-a50af/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BaseBulletTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: fb8a152afdd3b3cf5db54f33e5e0fcbeb3226a80
Parent1 SHA-1: 28206d8105979d924f7a733e846f48d9f064b9ab
Parent2 SHA-1: a50afa290c624ca4b37efbce80369c70b2656a22
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ protected void renderWorld() {
		if (shadows) {
			((DirectionalShadowLight)light).begin(Vector3.Zero, camera.direction);
			shadowBatch.begin(((DirectionalShadowLight)light).getCamera());
			world.render(shadowBatch, null);
			shadowBatch.end();
			((DirectionalShadowLight)light).end();
		}
		
		modelBatch.begin(camera);
		world.render(modelBatch, environment);
		modelBatch.end();
	} ##FSTMerge## protected void renderWorld() {
//		shadowLight.begin(Vector3.Zero, camera.direction);
//		shadowBatch.begin(shadowLight.getCamera());
//		world.render(shadowBatch, null);
//		shadowBatch.end();
//		shadowLight.end();
		
		modelBatch.begin(camera);
		world.render(modelBatch, lights);
		modelBatch.end();
	} ##FSTMerge## protected void renderWorld () {
// shadowLight.begin(Vector3.Zero, camera.direction);
// shadowBatch.begin(shadowLight.getCamera());
// world.render(shadowBatch, null);
// shadowBatch.end();
// shadowLight.end();

		modelBatch.begin(camera);
		world.render(modelBatch, lights);
		modelBatch.end();
	}
File path: /tmp/downloads/libgdx/revisions/rev_28206_a50af/rev_28206-a50af/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BaseBulletTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: fb8a152afdd3b3cf5db54f33e5e0fcbeb3226a80
Parent1 SHA-1: 28206d8105979d924f7a733e846f48d9f064b9ab
Parent2 SHA-1: a50afa290c624ca4b37efbce80369c70b2656a22
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ protected final BulletTest[] tests = {new BasicBulletTest(), new ShootTest(), new BasicShapesTest(), new KinematicTest(),
		new ConstraintsTest(), new MeshShapeTest(), new ConvexHullTest(), new ConvexHullDistanceTest(), new RayCastTest(), new RayPickRagdollTest(),
		new InternalTickTest(), new CollisionWorldTest(), new CollisionTest(), new FrustumCullingTest(), new ContactCallbackTest(),
		new ContactCallbackTest2(), new ContactCacheTest(), new SoftBodyTest(), new SoftMeshTest(), new VehicleTest(),
		new CharacterTest(), new ImportTest()}; ##FSTMerge## protected final BulletTest[] tests = {new BasicBulletTest(), new ShootTest(), new BasicShapesTest(), new KinematicTest(),
		new ConstraintsTest(), new MeshShapeTest(), new ConvexHullTest(), new ConvexHullDistanceTest(), new RayCastTest(), new RayPickRagdollTest(),
		new InternalTickTest(), new CollisionWorldTest(), new CollisionTest(), new FrustumCullingTest(), new ContactCallbackTest(),
		new ContactCallbackTest2(), new ContactCacheTest(), new SoftBodyTest(), new SoftMeshTest(), new VehicleTest(),
		new ImportTest()}; ##FSTMerge## protected final BulletTest[] tests = {new BasicBulletTest(), new ShootTest(), new BasicShapesTest(), new KinematicTest(),
		new ConstraintsTest(), new MeshShapeTest(), new ConvexHullTest(), new ConvexHullDistanceTest(), new RayCastTest(),
		new RayPickRagdollTest(), new InternalTickTest(), new CollisionWorldTest(), new CollisionTest(), new FrustumCullingTest(),
		new ContactCallbackTest(), new ContactCallbackTest2(), new ContactCacheTest(), new SoftBodyTest(), new SoftMeshTest(),
		new VehicleTest(), new ImportTest()};
File path: /tmp/downloads/libgdx/revisions/rev_28206_a50af/rev_28206-a50af/tests/gdx-tests/src/com/badlogic/gdx/tests/BulletTestCollection.java

==================================================================================================================
Revision: /tmp/downloads/libgdx/revisions/rev_df29b_0abd6/rev_df29b-0abd6.revisions
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 90f888dc50c7c0c4506cdcdd95b83a312e64f466
Parent1 SHA-1: df29b6b8c8f76fd97d8aa5fa71777c8187f82efc
Parent2 SHA-1: 0abd6da2932cca92d7574614f624b1c6d4e0fd14
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ private void setPreserveContext (View view) {
		int sdkVersion = android.os.Build.VERSION.SDK_INT;
		if (sdkVersion >= 11 && view instanceof GLSurfaceView20) {
			try {
				Method method = null;
				for (Method m : view.getClass().getMethods()) {
					if (m.getName().equals("setPreserveEGLContextOnPause")) {
						method = m;
						break;
					}
				}
				if (method != null) {
					method.invoke((GLSurfaceView20)view, true);
				}
			} catch (Exception e) {
			}
		}
	} ##FSTMerge## private void setPreserveContext (View view) {
		int sdkVersion = Integer.parseInt(android.os.Build.VERSION.SDK);
		if (sdkVersion >= 11 && view instanceof GLSurfaceView20) {
			try {
				Method method = null;
				for (Method m : view.getClass().getMethods()) {
					if (m.getName().equals("setPreserveEGLContextOnPause")) {
						method = m;
						break;
					}
				}
				if (method != null) {
					method.invoke((GLSurfaceView20)view, true);
				}
			} catch (Exception e) {
			}
		}
	} ##FSTMerge## private void setPreserveContext (View view) {
		int sdkVersion = Integer.parseInt(android.os.Build.VERSION.SDK);
		if (sdkVersion >= 11 && view instanceof GLSurfaceView20) {
			try {
				Method method = null;
				for (Method m : view.getClass().getMethods()) {
					if (m.getName().equals("setPreserveEGLContextOnPause")) {
						method = m;
						break;
					}
				}
				if (method != null) {
					method.invoke((GLSurfaceView20)view, true);
				}
			} catch (Exception e) {
			}
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_df29b_0abd6/rev_df29b-0abd6/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidGraphics.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 90f888dc50c7c0c4506cdcdd95b83a312e64f466
Parent1 SHA-1: df29b6b8c8f76fd97d8aa5fa71777c8187f82efc
Parent2 SHA-1: 0abd6da2932cca92d7574614f624b1c6d4e0fd14
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ void pause () {
		synchronized (synch) {
			if (!running) return;
			running = false;
			pause = true;
			while (pause) {
				try {
					// TODO: fix deadlock race condition with quick resume/pause.
					// Temporary workaround:
					// Android ANR time is 5 seconds, so wait up to 4 seconds before assuming
					// deadlock and killing process. This can easily be triggered by openning the
					// Recent Apps list and then double-tapping the Recent Apps button with
					// ~500ms between taps.
					synch.wait(4000);
					if (pause) {
						Gdx.app.error("AndroidGraphics", "waiting for pause synchronization took too "
							+ "long; assuming deadlock and killing");
						android.os.Process.killProcess(android.os.Process.myPid());
					}
				} catch (InterruptedException ignored) {
					Gdx.app.log("AndroidGraphics", "waiting for pause synchronization failed!");
				}
			}
		}
	} ##FSTMerge## void pause () {
		synchronized (synch) {
			if (!running) return;
			running = false;
			pause = true;
			while (pause) {
				try {
					// TODO: fix deadlock race condition with quick resume/pause.
					// Temporary workaround:
					// Android ANR time is 5 seconds, so wait up to 4 seconds before assuming
					// deadlock and killing process. This can easily be triggered by openning the
					// Recent Apps list and then double-tapping the Recent Apps button with
					// ~500ms between taps.
					synch.wait(4000);
					if (pause) {
						Gdx.app.error("AndroidGraphics", "waiting for pause synchronization took too "
						                                 + "long; assuming deadlock and killing");
						android.os.Process.killProcess(android.os.Process.myPid());
					}
				} catch (InterruptedException ignored) {
					Gdx.app.log("AndroidGraphics", "waiting for pause synchronization failed!");
				}
			}
		}
	} ##FSTMerge## void pause () {
		synchronized (synch) {
			if (!running) return;
			running = false;
			pause = true;
			while (pause) {
				try {
					// TODO: fix deadlock race condition with quick resume/pause.
					// Temporary workaround:
					// Android ANR time is 5 seconds, so wait up to 4 seconds before assuming
					// deadlock and killing process. This can easily be triggered by openning the
					// Recent Apps list and then double-tapping the Recent Apps button with
					// ~500ms between taps.
					synch.wait(4000);
					if (pause) {
						Gdx.app.error("AndroidGraphics", "waiting for pause synchronization took too "
						                                 + "long; assuming deadlock and killing");
						android.os.Process.killProcess(android.os.Process.myPid());
					}
				} catch (InterruptedException ignored) {
					Gdx.app.log("AndroidGraphics", "waiting for pause synchronization failed!");
				}
			}
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_df29b_0abd6/rev_df29b-0abd6/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidGraphics.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 90f888dc50c7c0c4506cdcdd95b83a312e64f466
Parent1 SHA-1: df29b6b8c8f76fd97d8aa5fa71777c8187f82efc
Parent2 SHA-1: 0abd6da2932cca92d7574614f624b1c6d4e0fd14
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public void onDrawFrame (javax.microedition.khronos.opengles.GL10 gl) {
		long time = System.nanoTime();
		deltaTime = (time - lastFrameTime) / 1000000000.0f;
		lastFrameTime = time;
		if(!resume) {
			mean.addValue(deltaTime);
		} else {
			deltaTime = 0;
		}

		boolean lrunning = false;
		boolean lpause = false;
		boolean ldestroy = false;
		boolean lresume = false;

		synchronized (synch) {
			lrunning = running;
			lpause = pause;
			ldestroy = destroy;
			lresume = resume;

			if (resume) {
				resume = false;
			}

			if (pause) {
				pause = false;
				synch.notifyAll();
			}

			if (destroy) {
				destroy = false;
				synch.notifyAll();
			}
		}

		if (lresume) {
			Array<LifecycleListener> listeners = ((AndroidApplication)app).lifecycleListeners;
			synchronized (listeners) {
				for (LifecycleListener listener : listeners) {
					listener.resume();
				}
			}
			app.listener.resume();
			Gdx.app.log("AndroidGraphics", "resumed");
		}

		if (lrunning) {
			synchronized (app.runnables) {
				app.executedRunnables.clear();
				app.executedRunnables.addAll(app.runnables);
				app.runnables.clear();
			}

			for (int i = 0; i < app.executedRunnables.size; i++) {
				try {
					app.executedRunnables.get(i).run();
				} catch (Throwable t) {
					t.printStackTrace();
				}
			}
			app.input.processEvents();
			app.listener.render();
		}

		if (lpause) {
			Array<LifecycleListener> listeners = ((AndroidApplication)app).lifecycleListeners;
			synchronized (listeners) {
				for (LifecycleListener listener : listeners) {
					listener.pause();
				}
			}
			app.listener.pause();
			((AndroidApplication)app).audio.pause();
			Gdx.app.log("AndroidGraphics", "paused");
		}

		if (ldestroy) {
			Array<LifecycleListener> listeners = ((AndroidApplication)app).lifecycleListeners;
			synchronized (listeners) {
				for (LifecycleListener listener : listeners) {
					listener.dispose();
				}
			}
			app.listener.dispose();
			((AndroidApplication)app).audio.dispose();
			((AndroidApplication)app).audio = null;
			Gdx.app.log("AndroidGraphics", "destroyed");
		}

		if (time - frameStart > 1000000000) {
			fps = frames;
			frames = 0;
			frameStart = time;
		}
		frames++;
	} ##FSTMerge## @Override
	public void onDrawFrame (javax.microedition.khronos.opengles.GL10 gl) {
		long time = System.nanoTime();
		deltaTime = (time - lastFrameTime) / 1000000000.0f;
		lastFrameTime = time;
		mean.addValue(deltaTime);

		boolean lrunning = false;
		boolean lpause = false;
		boolean ldestroy = false;
		boolean lresume = false;

		synchronized (synch) {
			lrunning = running;
			lpause = pause;
			ldestroy = destroy;
			lresume = resume;

			if (resume) {
				resume = false;
			}

			if (pause) {
				pause = false;
				synch.notifyAll();
			}

			if (destroy) {
				destroy = false;
				synch.notifyAll();
			}
		}

		if (lresume) {
			((AndroidApplication)app).audio.resume();
			Array<LifecycleListener> listeners = ((AndroidApplication)app).lifecycleListeners;
			synchronized(listeners) {
				for(LifecycleListener listener: listeners) {
					listener.resume();
				}
			}
			app.listener.resume();
			Gdx.app.log("AndroidGraphics", "resumed");
		}

		if (lrunning) {
			synchronized (app.runnables) {
				app.executedRunnables.clear();
				app.executedRunnables.addAll(app.runnables);
				app.runnables.clear();
			}

			for (int i = 0; i < app.executedRunnables.size; i++) {
				try {
					app.executedRunnables.get(i).run();
				} catch (Throwable t) {
					t.printStackTrace();
				}
			}
			app.input.processEvents();
			app.listener.render();
		}

		if (lpause) {
			Array<LifecycleListener> listeners = ((AndroidApplication)app).lifecycleListeners;
			synchronized(listeners) {
				for(LifecycleListener listener: listeners) {
					listener.pause();
				}
			}
			app.listener.pause();
			((AndroidApplication)app).audio.pause();
			Gdx.app.log("AndroidGraphics", "paused");
		}

		if (ldestroy) {
			Array<LifecycleListener> listeners = ((AndroidApplication)app).lifecycleListeners;
			synchronized(listeners) {
				for(LifecycleListener listener: listeners) {
					listener.dispose();
				}
			}
			app.listener.dispose();
			((AndroidApplication)app).audio.dispose();
			((AndroidApplication)app).audio = null;
			Gdx.app.log("AndroidGraphics", "destroyed");
		}

		if (time - frameStart > 1000000000) {
			fps = frames;
			frames = 0;
			frameStart = time;
		}
		frames++;
	} ##FSTMerge## @Override
	public void onDrawFrame (javax.microedition.khronos.opengles.GL10 gl) {
		long time = System.nanoTime();
		deltaTime = (time - lastFrameTime) / 1000000000.0f;
		lastFrameTime = time;
		mean.addValue(deltaTime);

		boolean lrunning = false;
		boolean lpause = false;
		boolean ldestroy = false;
		boolean lresume = false;

		synchronized (synch) {
			lrunning = running;
			lpause = pause;
			ldestroy = destroy;
			lresume = resume;

			if (resume) {
				resume = false;
			}

			if (pause) {
				pause = false;
				synch.notifyAll();
			}

			if (destroy) {
				destroy = false;
				synch.notifyAll();
			}
		}

		if (lresume) {
			((AndroidAudio)((AndroidApplicationBase)app).getAudio()).resume();
			Array<LifecycleListener> listeners = ((AndroidApplicationBase)app).getLifecycleListeners();
			synchronized(listeners) {
				for(LifecycleListener listener: listeners) {
					listener.resume();
				}
			}
			app.getApplicationListener().resume();
			Gdx.app.log("AndroidGraphics", "resumed");
		}

		if (lrunning) {
			synchronized (app.getRunnables()) {
				app.getExecutedRunnables().clear();
				app.getExecutedRunnables().addAll(app.getRunnables());
				app.getRunnables().clear();
			}

			for (int i = 0; i < app.getExecutedRunnables().size; i++) {
				try {
					app.getExecutedRunnables().get(i).run();
				} catch (Throwable t) {
					t.printStackTrace();
				}
			}
			((AndroidInput)app.getInput()).processEvents();
			app.getApplicationListener().render();
		}

		if (lpause) {
			Array<LifecycleListener> listeners = ((AndroidApplicationBase)app).getLifecycleListeners();
			synchronized(listeners) {
				for(LifecycleListener listener: listeners) {
					listener.pause();
				}
			}
			app.getApplicationListener().pause();
			((AndroidAudio)((AndroidApplicationBase)app).getAudio()).pause();
			Gdx.app.log("AndroidGraphics", "paused");
		}

		if (ldestroy) {
			Array<LifecycleListener> listeners = ((AndroidApplication)app).lifecycleListeners;
			synchronized(listeners) {
				for(LifecycleListener listener: listeners) {
					listener.dispose();
				}
			}
			app.getApplicationListener().dispose();
			((AndroidApplication)app).audio.dispose();
			((AndroidApplication)app).audio = null;
			Gdx.app.log("AndroidGraphics", "destroyed");
		}

		if (time - frameStart > 1000000000) {
			fps = frames;
			frames = 0;
			frameStart = time;
		}
		frames++;
	}
File path: /tmp/downloads/libgdx/revisions/rev_df29b_0abd6/rev_df29b-0abd6/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidGraphics.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 90f888dc50c7c0c4506cdcdd95b83a312e64f466
Parent1 SHA-1: df29b6b8c8f76fd97d8aa5fa71777c8187f82efc
Parent2 SHA-1: 0abd6da2932cca92d7574614f624b1c6d4e0fd14
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ private View createGLSurfaceView (Activity activity, boolean useGL2, final ResolutionStrategy resolutionStrategy) {
		EGLConfigChooser configChooser = getEglConfigChooser();

		if (useGL2 && checkGL20()) {
			GLSurfaceView20 view = new GLSurfaceView20(activity, resolutionStrategy);
			if (configChooser != null)
				view.setEGLConfigChooser(configChooser);
			else
				view.setEGLConfigChooser(config.r, config.g, config.b, config.a, config.depth, config.stencil);
			view.setRenderer(this);
			return view;
		} else {
			config.useGL20 = false;
			configChooser = getEglConfigChooser();
			int sdkVersion = android.os.Build.VERSION.SDK_INT;

			if (sdkVersion >= 11) {
				GLSurfaceView view = new GLSurfaceView(activity) {
					@Override
					protected void onMeasure (int widthMeasureSpec, int heightMeasureSpec) {
						ResolutionStrategy.MeasuredDimension measures = resolutionStrategy.calcMeasures(widthMeasureSpec,
							heightMeasureSpec);
						setMeasuredDimension(measures.width, measures.height);
					}

					@Override
					public InputConnection onCreateInputConnection (EditorInfo outAttrs) {
						BaseInputConnection connection = new BaseInputConnection(this, false) {
							@Override
							public boolean deleteSurroundingText (int beforeLength, int afterLength) {
								int sdkVersion = android.os.Build.VERSION.SDK_INT;
								if (sdkVersion >= 16) {
									/*
									 * In Jelly Bean, they don't send key events for delete. Instead, they send beforeLength = 1,
									 * afterLength = 0. So, we'll just simulate what it used to do.
									 */
									if (beforeLength == 1 && afterLength == 0) {
										sendDownUpKeyEventForBackwardCompatibility(KeyEvent.KEYCODE_DEL);
										return true;
									}
								}
								return super.deleteSurroundingText(beforeLength, afterLength);
							}

							private void sendDownUpKeyEventForBackwardCompatibility (final int code) {
								final long eventTime = SystemClock.uptimeMillis();
								super.sendKeyEvent(new KeyEvent(eventTime, eventTime, KeyEvent.ACTION_DOWN, code, 0, 0,
									KeyCharacterMap.VIRTUAL_KEYBOARD, 0, KeyEvent.FLAG_SOFT_KEYBOARD | KeyEvent.FLAG_KEEP_TOUCH_MODE));
								super.sendKeyEvent(new KeyEvent(SystemClock.uptimeMillis(), eventTime, KeyEvent.ACTION_UP, code, 0, 0,
									KeyCharacterMap.VIRTUAL_KEYBOARD, 0, KeyEvent.FLAG_SOFT_KEYBOARD | KeyEvent.FLAG_KEEP_TOUCH_MODE));
							}
						};
						return connection;
					}

				};
				if (configChooser != null)
					view.setEGLConfigChooser(configChooser);
				else
					view.setEGLConfigChooser(config.r, config.g, config.b, config.a, config.depth, config.stencil);
				view.setRenderer(this);
				return view;
			} else {
				if (config.useGLSurfaceViewAPI18) {
					GLSurfaceViewAPI18 view = new GLSurfaceViewAPI18(activity, resolutionStrategy);
					if (configChooser != null)
						view.setEGLConfigChooser(configChooser);
					else
						view.setEGLConfigChooser(config.r, config.g, config.b, config.a, config.depth, config.stencil);
					view.setRenderer(this);
					return view;
				} else {
					GLSurfaceViewCupcake view = new GLSurfaceViewCupcake(activity, resolutionStrategy);
					if (configChooser != null)
						view.setEGLConfigChooser(configChooser);
					else
						view.setEGLConfigChooser(config.r, config.g, config.b, config.a, config.depth, config.stencil);
					view.setRenderer(this);
					return view;
				}
			}
		}
	} ##FSTMerge## private View createGLSurfaceView (Activity activity, boolean useGL2, final ResolutionStrategy resolutionStrategy) {
		EGLConfigChooser configChooser = getEglConfigChooser();

		if (useGL2 && checkGL20()) {
			GLSurfaceView20 view = new GLSurfaceView20(activity, resolutionStrategy);
			if (configChooser != null)
				view.setEGLConfigChooser(configChooser);
			else
				view.setEGLConfigChooser(config.r, config.g, config.b, config.a, config.depth, config.stencil);
			view.setRenderer(this);
			return view;
		} else {
			config.useGL20 = false;
			configChooser = getEglConfigChooser();
			int sdkVersion = Integer.parseInt(android.os.Build.VERSION.SDK);

			if (sdkVersion >= 11) {
				GLSurfaceView view = new GLSurfaceView(activity) {
					@Override
					protected void onMeasure (int widthMeasureSpec, int heightMeasureSpec) {
						ResolutionStrategy.MeasuredDimension measures = resolutionStrategy.calcMeasures(widthMeasureSpec,
							heightMeasureSpec);
						setMeasuredDimension(measures.width, measures.height);
					}

					@Override
					public InputConnection onCreateInputConnection (EditorInfo outAttrs) {
						BaseInputConnection connection = new BaseInputConnection(this, false) {
							@Override
							public boolean deleteSurroundingText (int beforeLength, int afterLength) {
								int sdkVersion = Integer.parseInt(android.os.Build.VERSION.SDK);
								if (sdkVersion >= 16) {
									/* In Jelly Bean, they don't send key events for delete.
									 *  Instead, they send beforeLength = 1, afterLength = 0.
									 *  So, we'll just simulate what it used to do. */
									if (beforeLength == 1 && afterLength == 0) {
										sendDownUpKeyEventForBackwardCompatibility(KeyEvent.KEYCODE_DEL);
										return true;
									}
								}
								return super.deleteSurroundingText(beforeLength, afterLength);
							}
							private void sendDownUpKeyEventForBackwardCompatibility (final int code) {
								final long eventTime = SystemClock.uptimeMillis();
								super.sendKeyEvent(new KeyEvent(eventTime, eventTime, KeyEvent.ACTION_DOWN, code, 0, 0,
									KeyCharacterMap.VIRTUAL_KEYBOARD, 0, KeyEvent.FLAG_SOFT_KEYBOARD | KeyEvent.FLAG_KEEP_TOUCH_MODE));
								super.sendKeyEvent(new KeyEvent(SystemClock.uptimeMillis(), eventTime, KeyEvent.ACTION_UP, code, 0, 0,
									KeyCharacterMap.VIRTUAL_KEYBOARD, 0, KeyEvent.FLAG_SOFT_KEYBOARD | KeyEvent.FLAG_KEEP_TOUCH_MODE));
							}
						};
						return connection;
					}

				};
				if (configChooser != null)
					view.setEGLConfigChooser(configChooser);
				else
					view.setEGLConfigChooser(config.r, config.g, config.b, config.a, config.depth, config.stencil);
				view.setRenderer(this);
				return view;
			} else {
				if (config.useGLSurfaceViewAPI18) {
					GLSurfaceViewAPI18 view = new GLSurfaceViewAPI18(activity, resolutionStrategy);
					if (configChooser != null)
						view.setEGLConfigChooser(configChooser);
					else
						view.setEGLConfigChooser(config.r, config.g, config.b, config.a, config.depth, config.stencil);
					view.setRenderer(this);
					return view;
				}
				else {
					GLSurfaceViewCupcake view = new GLSurfaceViewCupcake(activity, resolutionStrategy);
					if (configChooser != null)
						view.setEGLConfigChooser(configChooser);
					else
						view.setEGLConfigChooser(config.r, config.g, config.b, config.a, config.depth, config.stencil);
					view.setRenderer(this);
					return view;
				}
			}
		}
	} ##FSTMerge##
File path: /tmp/downloads/libgdx/revisions/rev_df29b_0abd6/rev_df29b-0abd6/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidGraphics.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 90f888dc50c7c0c4506cdcdd95b83a312e64f466
Parent1 SHA-1: df29b6b8c8f76fd97d8aa5fa71777c8187f82efc
Parent2 SHA-1: 0abd6da2932cca92d7574614f624b1c6d4e0fd14
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ protected FrameLayout.LayoutParams createLayoutParams () {
		FrameLayout.LayoutParams layoutParams = new FrameLayout.LayoutParams(android.view.ViewGroup.LayoutParams.MATCH_PARENT,
			android.view.ViewGroup.LayoutParams.MATCH_PARENT);
		layoutParams.gravity = Gravity.CENTER;
		return layoutParams;
	} ##FSTMerge## protected FrameLayout.LayoutParams createLayoutParams () {
		FrameLayout.LayoutParams layoutParams = new FrameLayout.LayoutParams(android.view.ViewGroup.LayoutParams.FILL_PARENT,
			android.view.ViewGroup.LayoutParams.FILL_PARENT);
		layoutParams.gravity = Gravity.CENTER;
		return layoutParams;
	} ##FSTMerge## protected FrameLayout.LayoutParams createLayoutParams () {
		FrameLayout.LayoutParams layoutParams = new FrameLayout.LayoutParams(android.view.ViewGroup.LayoutParams.FILL_PARENT,
			android.view.ViewGroup.LayoutParams.FILL_PARENT);
		layoutParams.gravity = Gravity.CENTER;
		return layoutParams;
	}
File path: /tmp/downloads/libgdx/revisions/rev_df29b_0abd6/rev_df29b-0abd6/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidApplication.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 90f888dc50c7c0c4506cdcdd95b83a312e64f466
Parent1 SHA-1: df29b6b8c8f76fd97d8aa5fa71777c8187f82efc
Parent2 SHA-1: 0abd6da2932cca92d7574614f624b1c6d4e0fd14
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public void onWindowFocusChanged (boolean hasFocus) {
		super.onWindowFocusChanged(hasFocus);
		useImmersiveMode(this.useImmersiveMode);
		hideStatusBar(this.hideStatusBar);
		if (hasFocus) {
			this.wasFocusChanged = 1;
			if (this.isWaitingForAudio) {
				this.audio.resume();
				this.isWaitingForAudio = false;
			}
		} else {
			this.wasFocusChanged = 0;
		}
	} ##FSTMerge## @Override
	public void onWindowFocusChanged (boolean hasFocus) {
		super.onWindowFocusChanged(hasFocus);
		useImmersiveMode(this.useImmersiveMode);
		hideStatusBar(this.hideStatusBar);
	} ##FSTMerge## @Override
	public void onWindowFocusChanged (boolean hasFocus) {
		super.onWindowFocusChanged(hasFocus);
		useImmersiveMode(this.useImmersiveMode);
		hideStatusBar(this.hideStatusBar);
	}
File path: /tmp/downloads/libgdx/revisions/rev_df29b_0abd6/rev_df29b-0abd6/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidApplication.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 90f888dc50c7c0c4506cdcdd95b83a312e64f466
Parent1 SHA-1: df29b6b8c8f76fd97d8aa5fa71777c8187f82efc
Parent2 SHA-1: 0abd6da2932cca92d7574614f624b1c6d4e0fd14
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	protected void onResume () {
		Gdx.app = this;
		Gdx.input = this.getInput();
		Gdx.audio = this.getAudio();
		Gdx.files = this.getFiles();
		Gdx.graphics = this.getGraphics();
		Gdx.net = this.getNet();

		((AndroidInput)getInput()).registerSensorListeners();

		if (graphics != null && graphics.view != null) {
			if (graphics.view instanceof GLSurfaceViewCupcake) ((GLSurfaceViewCupcake)graphics.view).onResume();
			if (graphics.view instanceof GLSurfaceViewAPI18) ((GLSurfaceViewAPI18)graphics.view).onResume();
			if (graphics.view instanceof android.opengl.GLSurfaceView) ((android.opengl.GLSurfaceView)graphics.view).onResume();
		}

		if (!firstResume) {
			graphics.resume();
		} else
			firstResume = false;

		this.isWaitingForAudio = true;
		if (this.wasFocusChanged == 1 || this.wasFocusChanged == -1) {
			this.audio.resume();
			this.isWaitingForAudio = false;
		}
		super.onResume();
	} ##FSTMerge## @Override
	protected void onResume () {
		Gdx.app = this;
		Gdx.input = this.getInput();
		Gdx.audio = this.getAudio();
		Gdx.files = this.getFiles();
		Gdx.graphics = this.getGraphics();
		Gdx.net = this.getNet();

		((AndroidInput)getInput()).registerSensorListeners();

		if (graphics != null && graphics.view != null) {
			if (graphics.view instanceof GLSurfaceViewCupcake) ((GLSurfaceViewCupcake)graphics.view).onResume();
			if (graphics.view instanceof GLSurfaceViewAPI18) ((GLSurfaceViewAPI18)graphics.view).onResume();
			if (graphics.view instanceof android.opengl.GLSurfaceView) ((android.opengl.GLSurfaceView)graphics.view).onResume();
		}

		if (!firstResume) {
			graphics.resume();
		} else
			firstResume = false;
		super.onResume();
	} ##FSTMerge## @Override
	protected void onResume () {
		Gdx.app = this;
		Gdx.input = this.getInput();
		Gdx.audio = this.getAudio();
		Gdx.files = this.getFiles();
		Gdx.graphics = this.getGraphics();
		Gdx.net = this.getNet();

		((AndroidInput)getInput()).registerSensorListeners();

		if (graphics != null && graphics.view != null) {
			if (graphics.view instanceof GLSurfaceViewCupcake) ((GLSurfaceViewCupcake)graphics.view).onResume();
			if (graphics.view instanceof GLSurfaceViewAPI18) ((GLSurfaceViewAPI18)graphics.view).onResume();
			if (graphics.view instanceof android.opengl.GLSurfaceView) ((android.opengl.GLSurfaceView)graphics.view).onResume();
		}

		if (!firstResume) {
			graphics.resume();
		} else
			firstResume = false;
		super.onResume();
	}
File path: /tmp/downloads/libgdx/revisions/rev_df29b_0abd6/rev_df29b-0abd6/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidApplication.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 90f888dc50c7c0c4506cdcdd95b83a312e64f466
Parent1 SHA-1: df29b6b8c8f76fd97d8aa5fa71777c8187f82efc
Parent2 SHA-1: 0abd6da2932cca92d7574614f624b1c6d4e0fd14
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public int getVersion () {
		return android.os.Build.VERSION.SDK_INT;
	} ##FSTMerge## @Override
	public int getVersion () {
		return Integer.parseInt(android.os.Build.VERSION.SDK);
	} ##FSTMerge## @Override
	public int getVersion () {
		return Integer.parseInt(android.os.Build.VERSION.SDK);
	}
File path: /tmp/downloads/libgdx/revisions/rev_df29b_0abd6/rev_df29b-0abd6/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidApplication.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 90f888dc50c7c0c4506cdcdd95b83a312e64f466
Parent1 SHA-1: df29b6b8c8f76fd97d8aa5fa71777c8187f82efc
Parent2 SHA-1: 0abd6da2932cca92d7574614f624b1c6d4e0fd14
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_df29b_0abd6/rev_df29b-0abd6/backends/gdx-backends-gwt/src/com/badlogic/gwtref/client/Test.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 90f888dc50c7c0c4506cdcdd95b83a312e64f466
Parent1 SHA-1: df29b6b8c8f76fd97d8aa5fa71777c8187f82efc
Parent2 SHA-1: 0abd6da2932cca92d7574614f624b1c6d4e0fd14
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements EntryPoint ##FSTMerge## implements EntryPoint
File path: /tmp/downloads/libgdx/revisions/rev_df29b_0abd6/rev_df29b-0abd6/backends/gdx-backends-gwt/src/com/badlogic/gwtref/client/Test.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 90f888dc50c7c0c4506cdcdd95b83a312e64f466
Parent1 SHA-1: df29b6b8c8f76fd97d8aa5fa71777c8187f82efc
Parent2 SHA-1: 0abd6da2932cca92d7574614f624b1c6d4e0fd14
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static ##FSTMerge## public static
File path: /tmp/downloads/libgdx/revisions/rev_df29b_0abd6/rev_df29b-0abd6/backends/gdx-backends-gwt/src/com/badlogic/gwtref/client/Test.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 90f888dc50c7c0c4506cdcdd95b83a312e64f466
Parent1 SHA-1: df29b6b8c8f76fd97d8aa5fa71777c8187f82efc
Parent2 SHA-1: 0abd6da2932cca92d7574614f624b1c6d4e0fd14
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static ##FSTMerge## public static
File path: /tmp/downloads/libgdx/revisions/rev_df29b_0abd6/rev_df29b-0abd6/backends/gdx-backends-gwt/src/com/badlogic/gwtref/client/Test.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 90f888dc50c7c0c4506cdcdd95b83a312e64f466
Parent1 SHA-1: df29b6b8c8f76fd97d8aa5fa71777c8187f82efc
Parent2 SHA-1: 0abd6da2932cca92d7574614f624b1c6d4e0fd14
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## String text; ##FSTMerge## String text;
File path: /tmp/downloads/libgdx/revisions/rev_df29b_0abd6/rev_df29b-0abd6/backends/gdx-backends-gwt/src/com/badlogic/gwtref/client/Test.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 90f888dc50c7c0c4506cdcdd95b83a312e64f466
Parent1 SHA-1: df29b6b8c8f76fd97d8aa5fa71777c8187f82efc
Parent2 SHA-1: 0abd6da2932cca92d7574614f624b1c6d4e0fd14
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## float numberf; ##FSTMerge## float numberf;
File path: /tmp/downloads/libgdx/revisions/rev_df29b_0abd6/rev_df29b-0abd6/backends/gdx-backends-gwt/src/com/badlogic/gwtref/client/Test.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 90f888dc50c7c0c4506cdcdd95b83a312e64f466
Parent1 SHA-1: df29b6b8c8f76fd97d8aa5fa71777c8187f82efc
Parent2 SHA-1: 0abd6da2932cca92d7574614f624b1c6d4e0fd14
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## int numberi; ##FSTMerge## int numberi;
File path: /tmp/downloads/libgdx/revisions/rev_df29b_0abd6/rev_df29b-0abd6/backends/gdx-backends-gwt/src/com/badlogic/gwtref/client/Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 90f888dc50c7c0c4506cdcdd95b83a312e64f466
Parent1 SHA-1: df29b6b8c8f76fd97d8aa5fa71777c8187f82efc
Parent2 SHA-1: 0abd6da2932cca92d7574614f624b1c6d4e0fd14
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public String getText () {
			return text;
		} ##FSTMerge## public String getText () {
			return text;
		}
File path: /tmp/downloads/libgdx/revisions/rev_df29b_0abd6/rev_df29b-0abd6/backends/gdx-backends-gwt/src/com/badlogic/gwtref/client/Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 90f888dc50c7c0c4506cdcdd95b83a312e64f466
Parent1 SHA-1: df29b6b8c8f76fd97d8aa5fa71777c8187f82efc
Parent2 SHA-1: 0abd6da2932cca92d7574614f624b1c6d4e0fd14
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void setText (String text) {
			this.text = text;
		} ##FSTMerge## public void setText (String text) {
			this.text = text;
		}
File path: /tmp/downloads/libgdx/revisions/rev_df29b_0abd6/rev_df29b-0abd6/backends/gdx-backends-gwt/src/com/badlogic/gwtref/client/Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 90f888dc50c7c0c4506cdcdd95b83a312e64f466
Parent1 SHA-1: df29b6b8c8f76fd97d8aa5fa71777c8187f82efc
Parent2 SHA-1: 0abd6da2932cca92d7574614f624b1c6d4e0fd14
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public float getNumberf () {
			return numberf;
		} ##FSTMerge## public float getNumberf () {
			return numberf;
		}
File path: /tmp/downloads/libgdx/revisions/rev_df29b_0abd6/rev_df29b-0abd6/backends/gdx-backends-gwt/src/com/badlogic/gwtref/client/Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 90f888dc50c7c0c4506cdcdd95b83a312e64f466
Parent1 SHA-1: df29b6b8c8f76fd97d8aa5fa71777c8187f82efc
Parent2 SHA-1: 0abd6da2932cca92d7574614f624b1c6d4e0fd14
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void setNumberf (float numberf) {
			this.numberf = numberf;
		} ##FSTMerge## public void setNumberf (float numberf) {
			this.numberf = numberf;
		}
File path: /tmp/downloads/libgdx/revisions/rev_df29b_0abd6/rev_df29b-0abd6/backends/gdx-backends-gwt/src/com/badlogic/gwtref/client/Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 90f888dc50c7c0c4506cdcdd95b83a312e64f466
Parent1 SHA-1: df29b6b8c8f76fd97d8aa5fa71777c8187f82efc
Parent2 SHA-1: 0abd6da2932cca92d7574614f624b1c6d4e0fd14
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int getNumberi () {
			return numberi;
		} ##FSTMerge## public int getNumberi () {
			return numberi;
		}
File path: /tmp/downloads/libgdx/revisions/rev_df29b_0abd6/rev_df29b-0abd6/backends/gdx-backends-gwt/src/com/badlogic/gwtref/client/Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 90f888dc50c7c0c4506cdcdd95b83a312e64f466
Parent1 SHA-1: df29b6b8c8f76fd97d8aa5fa71777c8187f82efc
Parent2 SHA-1: 0abd6da2932cca92d7574614f624b1c6d4e0fd14
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void setNumberi (int numberi) {
			this.numberi = numberi;
		} ##FSTMerge## public void setNumberi (int numberi) {
			this.numberi = numberi;
		}
File path: /tmp/downloads/libgdx/revisions/rev_df29b_0abd6/rev_df29b-0abd6/backends/gdx-backends-gwt/src/com/badlogic/gwtref/client/Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 90f888dc50c7c0c4506cdcdd95b83a312e64f466
Parent1 SHA-1: df29b6b8c8f76fd97d8aa5fa71777c8187f82efc
Parent2 SHA-1: 0abd6da2932cca92d7574614f624b1c6d4e0fd14
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public float getSum (float a, float b) {
			return a + b;
		} ##FSTMerge## public float getSum (float a, float b) {
			return a + b;
		}
File path: /tmp/downloads/libgdx/revisions/rev_df29b_0abd6/rev_df29b-0abd6/backends/gdx-backends-gwt/src/com/badlogic/gwtref/client/Test.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 90f888dc50c7c0c4506cdcdd95b83a312e64f466
Parent1 SHA-1: df29b6b8c8f76fd97d8aa5fa71777c8187f82efc
Parent2 SHA-1: 0abd6da2932cca92d7574614f624b1c6d4e0fd14
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static ##FSTMerge## public static
File path: /tmp/downloads/libgdx/revisions/rev_df29b_0abd6/rev_df29b-0abd6/backends/gdx-backends-gwt/src/com/badlogic/gwtref/client/Test.java
############## CONFLICT ##############
Conflict type: ExtendsList
Merge Commit SHA-1: 90f888dc50c7c0c4506cdcdd95b83a312e64f466
Parent1 SHA-1: df29b6b8c8f76fd97d8aa5fa71777c8187f82efc
Parent2 SHA-1: 0abd6da2932cca92d7574614f624b1c6d4e0fd14
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## extends A ##FSTMerge## extends A
File path: /tmp/downloads/libgdx/revisions/rev_df29b_0abd6/rev_df29b-0abd6/backends/gdx-backends-gwt/src/com/badlogic/gwtref/client/Test.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 90f888dc50c7c0c4506cdcdd95b83a312e64f466
Parent1 SHA-1: df29b6b8c8f76fd97d8aa5fa71777c8187f82efc
Parent2 SHA-1: 0abd6da2932cca92d7574614f624b1c6d4e0fd14
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## String text = "This is a string"; ##FSTMerge## String text = "This is a string";
File path: /tmp/downloads/libgdx/revisions/rev_df29b_0abd6/rev_df29b-0abd6/backends/gdx-backends-gwt/src/com/badlogic/gwtref/client/Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 90f888dc50c7c0c4506cdcdd95b83a312e64f466
Parent1 SHA-1: df29b6b8c8f76fd97d8aa5fa71777c8187f82efc
Parent2 SHA-1: 0abd6da2932cca92d7574614f624b1c6d4e0fd14
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void testWithPackagePrivate (C c, int a) {
		} ##FSTMerge## public void testWithPackagePrivate (C c, int a) {
		}
File path: /tmp/downloads/libgdx/revisions/rev_df29b_0abd6/rev_df29b-0abd6/backends/gdx-backends-gwt/src/com/badlogic/gwtref/client/Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 90f888dc50c7c0c4506cdcdd95b83a312e64f466
Parent1 SHA-1: df29b6b8c8f76fd97d8aa5fa71777c8187f82efc
Parent2 SHA-1: 0abd6da2932cca92d7574614f624b1c6d4e0fd14
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void testWidthPrivate (A c) {
		} ##FSTMerge## public void testWidthPrivate (A c) {
		}
File path: /tmp/downloads/libgdx/revisions/rev_df29b_0abd6/rev_df29b-0abd6/backends/gdx-backends-gwt/src/com/badlogic/gwtref/client/Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 90f888dc50c7c0c4506cdcdd95b83a312e64f466
Parent1 SHA-1: df29b6b8c8f76fd97d8aa5fa71777c8187f82efc
Parent2 SHA-1: 0abd6da2932cca92d7574614f624b1c6d4e0fd14
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void testVoid () {
		} ##FSTMerge## public void testVoid () {
		}
File path: /tmp/downloads/libgdx/revisions/rev_df29b_0abd6/rev_df29b-0abd6/backends/gdx-backends-gwt/src/com/badlogic/gwtref/client/Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 90f888dc50c7c0c4506cdcdd95b83a312e64f466
Parent1 SHA-1: df29b6b8c8f76fd97d8aa5fa71777c8187f82efc
Parent2 SHA-1: 0abd6da2932cca92d7574614f624b1c6d4e0fd14
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public native void test (A c) /*-{
												//			this.@com.badlogic.gwtref.client.Test.B::testWidthPrivate(LC;)(c);
												}-*/; ##FSTMerge## public native void test (A c) /*-{
												//			this.@com.badlogic.gwtref.client.Test.B::testWidthPrivate(LC;)(c);
												}-*/;
File path: /tmp/downloads/libgdx/revisions/rev_df29b_0abd6/rev_df29b-0abd6/backends/gdx-backends-gwt/src/com/badlogic/gwtref/client/Test.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 90f888dc50c7c0c4506cdcdd95b83a312e64f466
Parent1 SHA-1: df29b6b8c8f76fd97d8aa5fa71777c8187f82efc
Parent2 SHA-1: 0abd6da2932cca92d7574614f624b1c6d4e0fd14
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static ##FSTMerge## public static
File path: /tmp/downloads/libgdx/revisions/rev_df29b_0abd6/rev_df29b-0abd6/backends/gdx-backends-gwt/src/com/badlogic/gwtref/client/Test.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 90f888dc50c7c0c4506cdcdd95b83a312e64f466
Parent1 SHA-1: df29b6b8c8f76fd97d8aa5fa71777c8187f82efc
Parent2 SHA-1: 0abd6da2932cca92d7574614f624b1c6d4e0fd14
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void onModuleLoad () {
		try {
			Type ta = ReflectionCache.getType(A.class);
			Type tb = ReflectionCache.getType(B.class);
			B b = (B)tb.newInstance();
			for (Field f : tb.getFields())
				System.out.println(f);
			for (Method m : tb.getMethods())
				System.out.println(m);

			tb.getDeclaredFields()[0].set(b, "Field of B");
			ta.getDeclaredFields()[0].set(b, "Field of A");
			System.out.println(ta.getMethod("getText").invoke(b));
			System.out.println(ta.getMethod("getSum", float.class, float.class).invoke(b, 1, 2));
		} catch (Exception e) {
			e.printStackTrace();
		}
	} ##FSTMerge## @Override
	public void onModuleLoad () {
		try {
			Type ta = ReflectionCache.getType(A.class);
			Type tb = ReflectionCache.getType(B.class);
			B b = (B)tb.newInstance();
			for (Field f : tb.getFields())
				System.out.println(f);
			for (Method m : tb.getMethods())
				System.out.println(m);

			tb.getDeclaredFields()[0].set(b, "Field of B");
			ta.getDeclaredFields()[0].set(b, "Field of A");
			System.out.println(ta.getMethod("getText").invoke(b));
			System.out.println(ta.getMethod("getSum", float.class, float.class).invoke(b, 1, 2));
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_df29b_0abd6/rev_df29b-0abd6/backends/gdx-backends-gwt/src/com/badlogic/gwtref/client/Test.java

==================================================================================================================
Revision: /tmp/downloads/libgdx/revisions/rev_f810c_cfbb5/rev_f810c-cfbb5.revisions
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 20545d665f280db81adbe07810fd91281f0118aa
Parent1 SHA-1: f810cc3bae74a11bc8478284807fc9dd32e15da2
Parent2 SHA-1: cfbb5b161d1ff2403e7c967852f342f70480d551
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public static final List<Class<? extends GdxTest>> tests = new ArrayList<Class<? extends GdxTest>>(Arrays.asList(
		// @off
		AccelerometerTest.class,
		ActionSequenceTest.class,
		ActionTest.class,
		AlphaTest.class,
		Animation3DTest.class,
		AnimationTest.class,
		AssetManagerTest.class,
		AtlasIssueTest.class,
		AudioDeviceTest.class,
		AudioRecorderTest.class,
		Basic3DSceneTest.class,
		Basic3DTest.class,
		BitmapFontAlignmentTest.class,
		BitmapFontDistanceFieldTest.class,
		BitmapFontFlipTest.class,
		BitmapFontMetricsTest.class,
		BitmapFontTest.class,
		BlitTest.class,
		BobTest.class,
		Box2DTest.class,
		Box2DTestCollection.class,
		Bresenham2Test.class,
		BufferUtilsTest.class,
		BulletTestCollection.class,
		CompassTest.class,
		ComplexActionTest.class,
		CullTest.class,
		DelaunayTriangulatorTest.class,
		DeltaTimeTest.class,
		DirtyRenderingTest.class,
		DragAndDropTest.class,
		ETC1Test.class,
		EarClippingTriangulatorTest.class,
		EdgeDetectionTest.class,
		ExitTest.class,
		ExternalMusicTest.class,
		FilesTest.class,
		FilterPerformanceTest.class,
		FloatTest.class,
		FloatTextureTest.class,
		FogTest.class,
		FrameBufferTest.class,
		FramebufferToTextureTest.class,
		FrustumTest.class,
		FullscreenTest.class,
		GamepadTest.class,
		Gdx2DTest.class,
		GestureDetectorTest.class,
		GroupCullingTest.class,
		GroupFadeTest.class,
		GroupTest.class,
		HelloTriangle.class,
		HexagonalTiledMapTest.class,
		ImageScaleTest.class,
		ImageTest.class,
		ImmediateModeRendererAlphaTest.class,
		ImmediateModeRendererTest.class,
		IndexBufferObjectClassTest.class,
		IndexBufferObjectShaderTest.class,
		InputTest.class,
		IntegerBitmapFontTest.class,
		InterpolationTest.class,
		InverseKinematicsTest.class,
		IsometricTileTest.class,
		KinematicBodyTest.class,
		LabelScaleTest.class,
		LabelTest.class,
		LetterBoxTest1.class,
		LetterBoxTest2.class,
		LetterBoxTest3.class,
		LifeCycleTest.class,
		LightsTest.class,
		LineDrawingTest.class,
		ManagedTest.class,
		ManualBindTest.class,
		MaterialTest.class,
		MatrixJNITest.class,
		MeshMultitextureTest.class,
		MeshShaderTest.class,
		MeshTest.class,
		MipMapTest.class,
		ModelTest.class,
		MoveSpriteExample.class,
		MultitouchTest.class,
		MusicTest.class,
		MyFirstTriangle.class,
		NetAPITest.class,
		NinePatchTest.class,
		ObjTest.class,
		OnscreenKeyboardTest.class,
		OrthoCamBorderTest.class,
		ParallaxTest.class,
		ParticleEmitterTest.class,
		PathTest.class,
		PickingTest.class,
		PixelsPerInchTest.class,
		PixmapBlendingTest.class,
		PixmapPackerTest.class,
		PixmapTest.class,
		PolygonRegionTest.class,
		PolygonSpriteTest.class,
		Pong.class,
		PreferencesTest.class,
		ProjectTest.class,
		ProjectiveTextureTest.class,
		ReflectionTest.class,
		RemoteTest.class,
		RotationTest.class,
		RunnablePostTest.class,
		Scene2dTest.class,
		ScreenCaptureTest.class,
		ScrollPane2Test.class,
		ScrollPaneScrollBarsTest.class,
		ScrollPaneTest.class,
		SelectTest.class,
		ShaderCollectionTest.class,
		ShaderMultitextureTest.class,
		ShaderTest.class,
		ShadowMappingTest.class,
		ShapeRendererTest.class,
		SimpleAnimationTest.class,
		SimpleDecalTest.class,
		SimpleStageCullingTest.class,
		SimpleVertexShader.class,
		SkeletonTest.class,
		SoftKeyboardTest.class,
		SortedSpriteTest.class,
		SoundTest.class,
		SpriteBatchRotationTest.class,
		SpriteBatchShaderTest.class,
		SpriteBatchTest.class,
		SpriteCacheOffsetTest.class,
		SpriteCacheTest.class,
		SpritePerformanceTest.class,
		SpritePerformanceTest2.class,
		StagePerformanceTest.class,
		StageTest.class,
		SuperKoalio.class,
		TableLayoutTest.class,
		TableTest.class,
		TerrainTest.class,
		TextButtonTest.class,
		TextButtonTestGL2.class,
		TextInputDialogTest.class,
		TextureAtlasTest.class,
		TextureBindTest.class,
		TextureDataTest.class,
		TextureDownloadTest.class,
		TextureFormatTest.class,
		TextureRenderTest.class,
		TideMapAssetManagerTest.class,
		TideMapDirectLoaderTest.class,
		TileTest.class,
		TiledMapAssetManagerTest.class,
		TiledMapAtlasAssetManagerTest.class,
		TiledMapBench.class,
		TimerTest.class,
		TouchpadTest.class,
		TreeTest.class,
		UISimpleTest.class,
		UITest.class,
		VBOVATest.class,
		Vector2dTest.class,
		VertexArrayClassTest.class,
		VertexArrayTest.class,
		VertexBufferObjectClassTest.class,
		VertexBufferObjectShaderTest.class,
		VertexBufferObjectTest.class,
		VibratorTest.class,
		WaterRipples.class,
		YDownTest.class
		// @on

		// SoundTouchTest.class, Mpg123Test.class, WavTest.class, FreeTypeTest.class,
		// InternationalFontsTest.class, VorbisTest.class
		)); ##FSTMerge## public static final List<Class<? extends GdxTest>> tests = new ArrayList<Class<? extends GdxTest>>(Arrays.asList(
		// @off
		AccelerometerTest.class,
		ActionSequenceTest.class,
		ActionTest.class,
		AlphaTest.class,
		Animation3DTest.class,
		AnimationTest.class,
		AssetManagerTest.class,
		AtlasIssueTest.class,
		AudioDeviceTest.class,
		AudioRecorderTest.class,
		Basic3DSceneTest.class,
		Basic3DTest.class,
		BitmapFontAlignmentTest.class,
		BitmapFontDistanceFieldTest.class,
		BitmapFontFlipTest.class,
		BitmapFontMetricsTest.class,
		BitmapFontTest.class,
		BlitTest.class,
		BobTest.class,
		Box2DTest.class,
		Box2DTestCollection.class,
		Bresenham2Test.class,
		BufferUtilsTest.class,
		BulletTestCollection.class,
		CompassTest.class,
		ComplexActionTest.class,
		CullTest.class,
		DelaunayTriangulatorTest.class,
		DeltaTimeTest.class,
		DirtyRenderingTest.class,
		DragAndDropTest.class,
		ETC1Test.class,
		EarClippingTriangulatorTest.class,
		EdgeDetectionTest.class,
		ExitTest.class,
		ExternalMusicTest.class,
		FilesTest.class,
		FilterPerformanceTest.class,
		FloatTest.class,
		FloatTextureTest.class,
		FogTest.class,
		FrameBufferTest.class,
		FramebufferToTextureTest.class,
		FrustumTest.class,
		FullscreenTest.class,
		GamepadTest.class,
		Gdx2DTest.class,
		GestureDetectorTest.class,
		GroupCullingTest.class,
		GroupFadeTest.class,
		GroupTest.class,
		HelloTriangle.class,
		HexagonalTiledMapTest.class,
		ImageScaleTest.class,
		ImageTest.class,
		ImmediateModeRendererAlphaTest.class,
		ImmediateModeRendererTest.class,
		IndexBufferObjectClassTest.class,
		IndexBufferObjectShaderTest.class,
		InputTest.class,
		IntegerBitmapFontTest.class,
		InterpolationTest.class,
		InverseKinematicsTest.class,
		IsometricTileTest.class,
		KinematicBodyTest.class,
		LabelScaleTest.class,
		LabelTest.class,
		LetterBoxTest1.class,
		LetterBoxTest2.class,
		LetterBoxTest3.class,
		LifeCycleTest.class,
		LightsTest.class,
		LineDrawingTest.class,
		ManagedTest.class,
		ManualBindTest.class,
		MaterialTest.class,
		MatrixJNITest.class,
		MeshMultitextureTest.class,
		MeshShaderTest.class,
		MeshTest.class,
		MipMapTest.class,
		ModelTest.class,
		MoveSpriteExample.class,
		MultitouchTest.class,
		MusicTest.class,
		MyFirstTriangle.class,
		NetAPITest.class,
		NinePatchTest.class,
		ObjTest.class,
		OnscreenKeyboardTest.class,
		OrthoCamBorderTest.class,
		ParallaxTest.class,
		ParticleEmitterTest.class,
		PathTest.class,
		PickingTest.class,
		PixelsPerInchTest.class,
		PixmapBlendingTest.class,
		PixmapPackerTest.class,
		PixmapTest.class,
		PolygonRegionTest.class,
		PolygonSpriteTest.class,
		Pong.class,
		PreferencesTest.class,
		ProjectTest.class,
		ProjectiveTextureTest.class,
		RemoteTest.class,
		RotationTest.class,
		RunnablePostTest.class,
		Scene2dTest.class,
		ScreenCaptureTest.class,
		ScrollPane2Test.class,
		ScrollPaneScrollBarsTest.class,
		ScrollPaneTest.class,
		SelectTest.class,
		ShaderCollectionTest.class,
		ShaderMultitextureTest.class,
		ShaderTest.class,
		ShadowMappingTest.class,
		ShapeRendererTest.class,
		SimpleAnimationTest.class,
		SimpleDecalTest.class,
		SimpleStageCullingTest.class,
		SimpleVertexShader.class,
		SkeletonTest.class,
		SoftKeyboardTest.class,
		SortedSpriteTest.class,
		SoundTest.class,
		SpriteBatchRotationTest.class,
		SpriteBatchShaderTest.class,
		SpriteBatchTest.class,
		SpriteCacheOffsetTest.class,
		SpriteCacheTest.class,
		SpritePerformanceTest.class,
		SpritePerformanceTest2.class,
		StagePerformanceTest.class,
		StageTest.class,
		SuperKoalio.class,
		TableLayoutTest.class,
		TableTest.class,
		TerrainTest.class,
		TextButtonTest.class,
		TextButtonTestGL2.class,
		TextInputDialogTest.class,
		TextureAtlasTest.class,
		TextureBindTest.class,
		TextureDataTest.class,
		TextureDownloadTest.class,
		TextureFormatTest.class,
		TextureRenderTest.class,
		TideMapAssetManagerTest.class,
		TideMapDirectLoaderTest.class,
		TileTest.class,
		TiledMapAssetManagerTest.class,
		TiledMapBench.class,
		TimerTest.class,
		TouchpadTest.class,
		TreeTest.class,
		UISimpleTest.class,
		UITest.class,
		VBOVATest.class,
		Vector2dTest.class,
		VertexArrayClassTest.class,
		VertexArrayTest.class,
		VertexBufferObjectClassTest.class,
		VertexBufferObjectShaderTest.class,
		VertexBufferObjectTest.class,
		VibratorTest.class,
		WaterRipples.class,
		YDownTest.class
		// @on

		// SoundTouchTest.class, Mpg123Test.class, WavTest.class, FreeTypeTest.class,
		// InternationalFontsTest.class, VorbisTest.class
		)); ##FSTMerge## public static final List<Class<? extends GdxTest>> tests = new ArrayList<Class<? extends GdxTest>>(Arrays.asList(
		// @off
		AccelerometerTest.class,
		ActionSequenceTest.class,
		ActionTest.class,
		AlphaTest.class,
		Animation3DTest.class,
		AnimationTest.class,
		AssetManagerTest.class,
		AtlasIssueTest.class,
		AudioDeviceTest.class,
		AudioRecorderTest.class,
		Basic3DSceneTest.class,
		Basic3DTest.class,
		BitmapFontAlignmentTest.class,
		BitmapFontDistanceFieldTest.class,
		BitmapFontFlipTest.class,
		BitmapFontMetricsTest.class,
		BitmapFontTest.class,
		BlitTest.class,
		BobTest.class,
		Box2DTest.class,
		Box2DTestCollection.class,
		Bresenham2Test.class,
		BufferUtilsTest.class,
		BulletTestCollection.class,
		CompassTest.class,
		ComplexActionTest.class,
		CullTest.class,
		DelaunayTriangulatorTest.class,
		DeltaTimeTest.class,
		DirtyRenderingTest.class,
		DragAndDropTest.class,
		ETC1Test.class,
		EarClippingTriangulatorTest.class,
		EdgeDetectionTest.class,
		ExitTest.class,
		ExternalMusicTest.class,
		FilesTest.class,
		FilterPerformanceTest.class,
		FloatTest.class,
		FloatTextureTest.class,
		FogTest.class,
		FrameBufferTest.class,
		FramebufferToTextureTest.class,
		FrustumTest.class,
		FullscreenTest.class,
		GamepadTest.class,
		Gdx2DTest.class,
		GestureDetectorTest.class,
		GroupCullingTest.class,
		GroupFadeTest.class,
		GroupTest.class,
		HelloTriangle.class,
		HexagonalTiledMapTest.class,
		ImageScaleTest.class,
		ImageTest.class,
		ImmediateModeRendererAlphaTest.class,
		ImmediateModeRendererTest.class,
		IndexBufferObjectClassTest.class,
		IndexBufferObjectShaderTest.class,
		InputTest.class,
		IntegerBitmapFontTest.class,
		InterpolationTest.class,
		InverseKinematicsTest.class,
		IsometricTileTest.class,
		KinematicBodyTest.class,
		LabelScaleTest.class,
		LabelTest.class,
		LetterBoxTest1.class,
		LetterBoxTest2.class,
		LetterBoxTest3.class,
		LifeCycleTest.class,
		LightsTest.class,
		LineDrawingTest.class,
		ManagedTest.class,
		ManualBindTest.class,
		MaterialTest.class,
		MatrixJNITest.class,
		MeshMultitextureTest.class,
		MeshShaderTest.class,
		MeshTest.class,
		MipMapTest.class,
		ModelTest.class,
		MoveSpriteExample.class,
		MultitouchTest.class,
		MusicTest.class,
		MyFirstTriangle.class,
		NetAPITest.class,
		NinePatchTest.class,
		ObjTest.class,
		OnscreenKeyboardTest.class,
		OrthoCamBorderTest.class,
		ParallaxTest.class,
		ParticleEmitterTest.class,
		PathTest.class,
		PickingTest.class,
		PixelsPerInchTest.class,
		PixmapBlendingTest.class,
		PixmapPackerTest.class,
		PixmapTest.class,
		PolygonRegionTest.class,
		PolygonSpriteTest.class,
		Pong.class,
		PreferencesTest.class,
		ProjectTest.class,
		ProjectiveTextureTest.class,
		RemoteTest.class,
		RotationTest.class,
		RunnablePostTest.class,
		Scene2dTest.class,
		ScreenCaptureTest.class,
		ScrollPane2Test.class,
		ScrollPaneScrollBarsTest.class,
		ScrollPaneTest.class,
		SelectTest.class,
		ShaderCollectionTest.class,
		ShaderMultitextureTest.class,
		ShaderTest.class,
		ShadowMappingTest.class,
		ShapeRendererTest.class,
		SimpleAnimationTest.class,
		SimpleDecalTest.class,
		SimpleStageCullingTest.class,
		SimpleVertexShader.class,
		SkeletonTest.class,
		SoftKeyboardTest.class,
		SortedSpriteTest.class,
		SoundTest.class,
		SpriteBatchRotationTest.class,
		SpriteBatchShaderTest.class,
		SpriteBatchTest.class,
		SpriteCacheOffsetTest.class,
		SpriteCacheTest.class,
		SpritePerformanceTest.class,
		SpritePerformanceTest2.class,
		StagePerformanceTest.class,
		StageTest.class,
		SuperKoalio.class,
		TableLayoutTest.class,
		TableTest.class,
		TerrainTest.class,
		TextButtonTest.class,
		TextButtonTestGL2.class,
		TextInputDialogTest.class,
		TextureAtlasTest.class,
		TextureBindTest.class,
		TextureDataTest.class,
		TextureDownloadTest.class,
		TextureFormatTest.class,
		TextureRenderTest.class,
		TideMapAssetManagerTest.class,
		TideMapDirectLoaderTest.class,
		TileTest.class,
		TiledMapAssetManagerTest.class,
		TiledMapAtlasAssetManagerTest.class,
		TiledMapBench.class,
		TimerTest.class,
		TouchpadTest.class,
		TreeTest.class,
		UISimpleTest.class,
		UITest.class,
		VBOVATest.class,
		Vector2dTest.class,
		VertexArrayClassTest.class,
		VertexArrayTest.class,
		VertexBufferObjectClassTest.class,
		VertexBufferObjectShaderTest.class,
		VertexBufferObjectTest.class,
		VibratorTest.class,
		WaterRipples.class,
		YDownTest.class
		// @on

		// SoundTouchTest.class, Mpg123Test.class, WavTest.class, FreeTypeTest.class,
		// InternationalFontsTest.class, VorbisTest.class
		));
File path: /tmp/downloads/libgdx/revisions/rev_f810c_cfbb5/rev_f810c-cfbb5/tests/gdx-tests/src/com/badlogic/gdx/tests/utils/GdxTests.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 20545d665f280db81adbe07810fd91281f0118aa
Parent1 SHA-1: f810cc3bae74a11bc8478284807fc9dd32e15da2
Parent2 SHA-1: cfbb5b161d1ff2403e7c967852f342f70480d551
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public void create () {
		Gdx.app.setLogLevel(Application.LOG_DEBUG);
		Gdx.app.log("GdxTestGwt", "Setting up for " + tests.length + " tests.");

		ui = new Stage(Gdx.graphics.getWidth(), Gdx.graphics.getHeight(), true);
		skin = new Skin(Gdx.files.internal("data/uiskin.json"));
		font = new BitmapFont(Gdx.files.internal("data/arial-15.fnt"), false);
		container = new Table();
		ui.addActor(container);
		container.debug();
		Table table = new Table();
		ScrollPane scroll = new ScrollPane(table);
		container.add(scroll).expand().fill();
		table.pad(10).defaults().expandX().space(4);
		for (final Instancer instancer : tests) {
			table.row();
			TextButton button = new TextButton(instancer.instance().getClass().getName(), skin);
			button.addListener(new ClickListener() {
				@Override
				public void clicked (InputEvent event, float x, float y) {
					((InputWrapper)Gdx.input).multiplexer.removeProcessor(ui);
					test = instancer.instance();
					Gdx.app.log("GdxTestGwt", "Clicked on " + test.getClass().getName());
					test.create();
					test.resize(Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
				}
			});
			table.add(button).expandX().fillX();
		}
		container.row();
		container.add(new Label("Click on a test to start it, press ESC to close it.", new LabelStyle(font, Color.WHITE))).pad(5,
			5, 5, 5);

		Gdx.input = new InputWrapper(Gdx.input) {
			@Override
			public boolean keyUp (int keycode) {
				if (keycode == Keys.ESCAPE) {
					if (test != null) {
						Gdx.app.log("GdxTestGwt", "Exiting current test.");
						dispose = true;
					}
				}
				return false;
			}

			@Override
			public boolean touchDown (int screenX, int screenY, int pointer, int button) {
				if (screenX < Gdx.graphics.getWidth() / 10.0 && screenY < Gdx.graphics.getHeight() / 10.0) {
					if (test != null) {
						dispose = true;
					}
				}
				return false;
			}
		};
		((InputWrapper)Gdx.input).multiplexer.addProcessor(ui);

		Gdx.app.log("GdxTestGwt", "Test picker UI setup complete.");
	} ##FSTMerge## @Override
	public void create () {
		Gdx.app.setLogLevel(Application.LOG_DEBUG);
		Gdx.app.log("GdxTestGwt", "Setting up for " +tests.length+ " tests.");
		
		ui = new Stage(Gdx.graphics.getWidth(), Gdx.graphics.getHeight(), true);
		skin = new Skin(Gdx.files.internal("data/uiskin.json"));
		font = new BitmapFont(Gdx.files.internal("data/arial-15.fnt"), false);
		container = new Table();
		ui.addActor(container);
		container.debug();
		Table table = new Table();
		ScrollPane scroll = new ScrollPane(table);
		container.add(scroll).expand().fill();
		table.pad(10).defaults().expandX().space(4);
		for (final Instancer instancer : tests) {
			table.row();
			TextButton button = new TextButton(instancer.instance().getClass().getName(), skin);
			button.addListener(new ClickListener() {
				@Override
				public void clicked (InputEvent event, float x, float y) {
					((InputWrapper)Gdx.input).multiplexer.removeProcessor(ui);
					test = instancer.instance();
					Gdx.app.log("GdxTestGwt", "Clicked on " + test.getClass().getName());
					test.create();
					test.resize(Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
				}
			});
			table.add(button).expandX().fillX();
		}
		container.row();
		container.add(new Label("Click on a test to start it, press ESC to close it.", new LabelStyle(font, Color.WHITE))).pad(5,
			5, 5, 5);

		Gdx.input = new InputWrapper(Gdx.input) {
			@Override
			public boolean keyUp (int keycode) {
				if (keycode == Keys.ESCAPE) {
					if (test != null) {
						Gdx.app.log("GdxTestGwt", "Exiting current test.");
						dispose = true;
					}
				}
				return false;
			}

			@Override
			public boolean touchDown (int screenX, int screenY, int pointer, int button) {
				if(screenX < Gdx.graphics.getWidth() / 10.0 &&
					screenY < Gdx.graphics.getHeight() / 10.0) {
					if(test != null) {
						dispose = true;
					}
				}
				return false;
			}
		};
		((InputWrapper)Gdx.input).multiplexer.addProcessor(ui);
		
		Gdx.app.log("GdxTestGwt", "Test picker UI setup complete.");
	} ##FSTMerge## @Override
	public void create () {
		Gdx.app.setLogLevel(Application.LOG_DEBUG);
		Gdx.app.log("GdxTestGwt", "Setting up for " +tests.length+ " tests.");
		
		ui = new Stage(Gdx.graphics.getWidth(), Gdx.graphics.getHeight(), true);
		skin = new Skin(Gdx.files.internal("data/uiskin.json"));
		font = new BitmapFont(Gdx.files.internal("data/arial-15.fnt"), false);
		container = new Table();
		ui.addActor(container);
		container.debug();
		Table table = new Table();
		ScrollPane scroll = new ScrollPane(table);
		container.add(scroll).expand().fill();
		table.pad(10).defaults().expandX().space(4);
		for (final Instancer instancer : tests) {
			table.row();
			TextButton button = new TextButton(instancer.instance().getClass().getName(), skin);
			button.addListener(new ClickListener() {
				@Override
				public void clicked (InputEvent event, float x, float y) {
					((InputWrapper)Gdx.input).multiplexer.removeProcessor(ui);
					test = instancer.instance();
					Gdx.app.log("GdxTestGwt", "Clicked on " + test.getClass().getName());
					test.create();
					test.resize(Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
				}
			});
			table.add(button).expandX().fillX();
		}
		container.row();
		container.add(new Label("Click on a test to start it, press ESC to close it.", new LabelStyle(font, Color.WHITE))).pad(5,
			5, 5, 5);

		Gdx.input = new InputWrapper(Gdx.input) {
			@Override
			public boolean keyUp (int keycode) {
				if (keycode == Keys.ESCAPE) {
					if (test != null) {
						Gdx.app.log("GdxTestGwt", "Exiting current test.");
						dispose = true;
					}
				}
				return false;
			}

			@Override
			public boolean touchDown (int screenX, int screenY, int pointer, int button) {
				if(screenX < Gdx.graphics.getWidth() / 10.0 &&
					screenY < Gdx.graphics.getHeight() / 10.0) {
					if(test != null) {
						dispose = true;
					}
				}
				return false;
			}
		};
		((InputWrapper)Gdx.input).multiplexer.addProcessor(ui);
		
		Gdx.app.log("GdxTestGwt", "Test picker UI setup complete.");
	}
File path: /tmp/downloads/libgdx/revisions/rev_f810c_cfbb5/rev_f810c-cfbb5/tests/gdx-tests/src/com/badlogic/gdx/tests/gwt/GwtTestWrapper.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 20545d665f280db81adbe07810fd91281f0118aa
Parent1 SHA-1: f810cc3bae74a11bc8478284807fc9dd32e15da2
Parent2 SHA-1: cfbb5b161d1ff2403e7c967852f342f70480d551
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ Instancer[] tests = {new Instancer() {
		public GdxTest instance () {
			return new AccelerometerTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new ActionTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new ActionSequenceTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new AlphaTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new AnimationTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new AssetManagerTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new AtlasIssueTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new BitmapFontAlignmentTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new BitmapFontFlipTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new BitmapFontTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new BitmapFontMetricsTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new BlitTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new Box2DCharacterControllerTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new Box2DTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new Box2DTestCollection();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new ComplexActionTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new CustomShaderSpriteBatchTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new DecalTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new LabelScaleTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new EdgeDetectionTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new FilterPerformanceTest();
		}
	},
// new Instancer() {public GdxTest instance(){return new FlickScrollPaneTest();}}, // FIXME this messes up stuff, why?
		new Instancer() {
			public GdxTest instance () {
				return new FrameBufferTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new GestureDetectorTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new GroupCullingTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new GroupFadeTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new ImageScaleTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new ImageTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new IndexBufferObjectShaderTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new IntegerBitmapFontTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new InverseKinematicsTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new IsometricTileTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new KinematicBodyTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new LifeCycleTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new LabelTest();
			}
		},
// new Instancer() {public GdxTest instance(){return new MatrixJNITest();}}, // No purpose
		new Instancer() {
			public GdxTest instance () {
				return new MeshShaderTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new MipMapTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new MultitouchTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new MusicTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new ParallaxTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new ParticleEmitterTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new PixelsPerInchTest();
			}
		},
// new Instancer() {public GdxTest instance(){return new PixmapBlendingTest();}}, // FIXME no idea why this doesn't work
		new Instancer() {
			public GdxTest instance () {
				return new ProjectiveTextureTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new RotationTest();
			}
		},
// new Instancer() {public GdxTest instance(){return new RunnablePostTest();}}, // Goes into infinite loop
// new Instancer() {public GdxTest instance(){return new ScrollPaneTest();}}, // FIXME this messes up stuff, why?
// new Instancer() {public GdxTest instance(){return new ShaderMultitextureTest();}}, // FIXME fucks up stuff
		new Instancer() {
			public GdxTest instance () {
				return new ShadowMappingTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new ShapeRendererTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new SimpleAnimationTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new SimpleDecalTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new SimpleStageCullingTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new SortedSpriteTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new SpriteBatchShaderTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new SpriteCacheOffsetTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new SpriteCacheTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new SoundTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new StageTest();
			}
		},
// new Instancer() {public GdxTest instance(){return new StagePerformanceTest();}}, // FIXME borks out
		new Instancer() {
			public GdxTest instance () {
				return new TableTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new TextButtonTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new TextButtonTestGL2();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new TextureAtlasTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new UITest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new VertexBufferObjectShaderTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new YDownTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new SuperKoalio();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new ReflectionTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new TiledMapAtlasAssetManagerTest();
			}
		}}; ##FSTMerge## Instancer[] tests = {new Instancer() {
		public GdxTest instance () {
			return new AccelerometerTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new ActionTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new ActionSequenceTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new AlphaTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new AnimationTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new AssetManagerTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new AtlasIssueTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new BitmapFontAlignmentTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new BitmapFontFlipTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new BitmapFontTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new BitmapFontMetricsTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new BlitTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new Box2DCharacterControllerTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new Box2DTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new Box2DTestCollection();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new ComplexActionTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new CustomShaderSpriteBatchTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new DecalTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new LabelScaleTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new EdgeDetectionTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new FilterPerformanceTest();
		}
	},
// new Instancer() {public GdxTest instance(){return new FlickScrollPaneTest();}}, // FIXME this messes up stuff, why?
		new Instancer() {
			public GdxTest instance () {
				return new FrameBufferTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new GestureDetectorTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new GroupCullingTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new GroupFadeTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new ImageScaleTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new ImageTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new IndexBufferObjectShaderTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new IntegerBitmapFontTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new InverseKinematicsTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new IsometricTileTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new KinematicBodyTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new LifeCycleTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new LabelTest();
			}
		},
// new Instancer() {public GdxTest instance(){return new MatrixJNITest();}}, // No purpose
		new Instancer() {
			public GdxTest instance () {
				return new MeshShaderTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new MipMapTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new MultitouchTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new MusicTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new ParallaxTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new ParticleEmitterTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new PixelsPerInchTest();
			}
		},
// new Instancer() {public GdxTest instance(){return new PixmapBlendingTest();}}, // FIXME no idea why this doesn't work
		new Instancer() {
			public GdxTest instance () {
				return new ProjectiveTextureTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new RotationTest();
			}
		}, 
// new Instancer() {public GdxTest instance(){return new RunnablePostTest();}}, // Goes into infinite loop
// new Instancer() {public GdxTest instance(){return new ScrollPaneTest();}}, // FIXME this messes up stuff, why?
// new Instancer() {public GdxTest instance(){return new ShaderMultitextureTest();}}, // FIXME fucks up stuff
		new Instancer() {
			public GdxTest instance () {
				return new ShadowMappingTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new ShapeRendererTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new SimpleAnimationTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new SimpleDecalTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new SimpleStageCullingTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new SortedSpriteTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new SpriteBatchShaderTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new SpriteCacheOffsetTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new SpriteCacheTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new SoundTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new StageTest();
			}
		},
// new Instancer() {public GdxTest instance(){return new StagePerformanceTest();}}, // FIXME borks out
		new Instancer() {
			public GdxTest instance () {
				return new TableTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new TextButtonTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new TextButtonTestGL2();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new TextureAtlasTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new UITest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new VertexBufferObjectShaderTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new YDownTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new SuperKoalio();
			}
		}}; ##FSTMerge## Instancer[] tests = {new Instancer() {
		public GdxTest instance () {
			return new AccelerometerTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new ActionTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new ActionSequenceTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new AlphaTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new AnimationTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new AssetManagerTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new AtlasIssueTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new BitmapFontAlignmentTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new BitmapFontFlipTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new BitmapFontTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new BitmapFontMetricsTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new BlitTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new Box2DCharacterControllerTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new Box2DTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new Box2DTestCollection();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new ComplexActionTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new CustomShaderSpriteBatchTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new DecalTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new LabelScaleTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new EdgeDetectionTest();
		}
	}, new Instancer() {
		public GdxTest instance () {
			return new FilterPerformanceTest();
		}
	},
// new Instancer() {public GdxTest instance(){return new FlickScrollPaneTest();}}, // FIXME this messes up stuff, why?
		new Instancer() {
			public GdxTest instance () {
				return new FrameBufferTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new GestureDetectorTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new GroupCullingTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new GroupFadeTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new ImageScaleTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new ImageTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new IndexBufferObjectShaderTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new IntegerBitmapFontTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new InverseKinematicsTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new IsometricTileTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new KinematicBodyTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new LifeCycleTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new LabelTest();
			}
		},
// new Instancer() {public GdxTest instance(){return new MatrixJNITest();}}, // No purpose
		new Instancer() {
			public GdxTest instance () {
				return new MeshShaderTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new MipMapTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new MultitouchTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new MusicTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new ParallaxTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new ParticleEmitterTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new PixelsPerInchTest();
			}
		},
// new Instancer() {public GdxTest instance(){return new PixmapBlendingTest();}}, // FIXME no idea why this doesn't work
		new Instancer() {
			public GdxTest instance () {
				return new ProjectiveTextureTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new RotationTest();
			}
		}, 
// new Instancer() {public GdxTest instance(){return new RunnablePostTest();}}, // Goes into infinite loop
// new Instancer() {public GdxTest instance(){return new ScrollPaneTest();}}, // FIXME this messes up stuff, why?
// new Instancer() {public GdxTest instance(){return new ShaderMultitextureTest();}}, // FIXME fucks up stuff
		new Instancer() {
			public GdxTest instance () {
				return new ShadowMappingTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new ShapeRendererTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new SimpleAnimationTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new SimpleDecalTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new SimpleStageCullingTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new SortedSpriteTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new SpriteBatchShaderTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new SpriteCacheOffsetTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new SpriteCacheTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new SoundTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new StageTest();
			}
		},
// new Instancer() {public GdxTest instance(){return new StagePerformanceTest();}}, // FIXME borks out
		new Instancer() {
			public GdxTest instance () {
				return new TableTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new TextButtonTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new TextButtonTestGL2();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new TextureAtlasTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new UITest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new VertexBufferObjectShaderTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new YDownTest();
			}
		}, new Instancer() {
			public GdxTest instance () {
				return new SuperKoalio();
			}
		}, new Instancer() {
		public GdxTest instance () {
			return new TiledMapAtlasAssetManagerTest();
		}
	}};
File path: /tmp/downloads/libgdx/revisions/rev_f810c_cfbb5/rev_f810c-cfbb5/tests/gdx-tests/src/com/badlogic/gdx/tests/gwt/GwtTestWrapper.java
############## CONFLICT ##############
Conflict type: AddSameFd
Merge Commit SHA-1: 20545d665f280db81adbe07810fd91281f0118aa
Parent1 SHA-1: f810cc3bae74a11bc8478284807fc9dd32e15da2
Parent2 SHA-1: cfbb5b161d1ff2403e7c967852f342f70480d551
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ private String errorMessage; ##FSTMerge## ##FSTMerge## private String errorMessage;
File path: /tmp/downloads/libgdx/revisions/rev_f810c_cfbb5/rev_f810c-cfbb5/tests/gdx-tests/src/com/badlogic/gdx/tests/TiledMapAtlasAssetManagerTest.java
############## CONFLICT ##############
Conflict type: AddSameFd
Merge Commit SHA-1: 20545d665f280db81adbe07810fd91281f0118aa
Parent1 SHA-1: f810cc3bae74a11bc8478284807fc9dd32e15da2
Parent2 SHA-1: cfbb5b161d1ff2403e7c967852f342f70480d551
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ private String fileName = "data/maps/tiled-atlas-processed/test.tmx"; ##FSTMerge## ##FSTMerge## private String fileName = "data/maps/tiled-atlas-processed/test.tmx";
File path: /tmp/downloads/libgdx/revisions/rev_f810c_cfbb5/rev_f810c-cfbb5/tests/gdx-tests/src/com/badlogic/gdx/tests/TiledMapAtlasAssetManagerTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 20545d665f280db81adbe07810fd91281f0118aa
Parent1 SHA-1: f810cc3bae74a11bc8478284807fc9dd32e15da2
Parent2 SHA-1: cfbb5b161d1ff2403e7c967852f342f70480d551
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public void create () {
		float w = Gdx.graphics.getWidth();
		float h = Gdx.graphics.getHeight();

		camera = new OrthographicCamera();
		camera.setToOrtho(false, (w / h) * 10, 10);
		camera.zoom = 2;
		camera.update();

		cameraController = new OrthoCamController(camera);
		Gdx.input.setInputProcessor(cameraController);

		font = new BitmapFont();
		batch = new SpriteBatch();

		AtlasTiledMapLoaderParameters params = new AtlasTiledMapLoaderParameters();
		params.forceTextureFilters = true;
		params.textureMinFilter = TextureFilter.Linear;
		params.textureMagFilter = TextureFilter.Linear;

		assetManager = new AssetManager();
		assetManager.setErrorListener(new AssetErrorListener() {
			@Override
			public void error (AssetDescriptor asset, Throwable throwable) {
				errorMessage = throwable.getMessage();
			}
		});

		assetManager.setLoader(TiledMap.class, new AtlasTmxMapLoader(new InternalFileHandleResolver()));
		assetManager.load(fileName, TiledMap.class);
	} ##FSTMerge## @Override
	public void create () {
		float w = Gdx.graphics.getWidth();
		float h = Gdx.graphics.getHeight();

		camera = new OrthographicCamera();
		camera.setToOrtho(false, (w / h) * 10, 10);
		camera.zoom = 2;
		camera.update();

		cameraController = new OrthoCamController(camera);
		Gdx.input.setInputProcessor(cameraController);

		font = new BitmapFont();
		batch = new SpriteBatch();

		AtlasTiledMapLoaderParameters params = new AtlasTiledMapLoaderParameters();
		params.forceTextureFilters = true;
		params.textureMinFilter = TextureFilter.Linear;
		params.textureMagFilter = TextureFilter.Linear;

		assetManager = new AssetManager();
		assetManager.setLoader(TiledMap.class, new AtlasTmxMapLoader(new InternalFileHandleResolver()));
//		assetManager.load("data/maps/tiled-atlas-processed/test.tmx", TiledMap.class, params);
		assetManager.load("data/maps/tiled-atlas-processed/test.tmx", TiledMap.class);
		assetManager.finishLoading();
		map = assetManager.get("data/maps/tiled-atlas-processed/test.tmx");
		renderer = new OrthogonalTiledMapRenderer(map, 1f / 32f);
	} ##FSTMerge## @Override
	public void create () {
		float w = Gdx.graphics.getWidth();
		float h = Gdx.graphics.getHeight();

		camera = new OrthographicCamera();
		camera.setToOrtho(false, (w / h) * 10, 10);
		camera.zoom = 2;
		camera.update();

		cameraController = new OrthoCamController(camera);
		Gdx.input.setInputProcessor(cameraController);

		font = new BitmapFont();
		batch = new SpriteBatch();

		AtlasTiledMapLoaderParameters params = new AtlasTiledMapLoaderParameters();
		params.forceTextureFilters = true;
		params.textureMinFilter = TextureFilter.Linear;
		params.textureMagFilter = TextureFilter.Linear;

		assetManager = new AssetManager();
		assetManager.setErrorListener(new AssetErrorListener() {
			@Override
			public void error (AssetDescriptor asset, Throwable throwable) {
				errorMessage = throwable.getMessage();
			}
		});

		assetManager.setLoader(TiledMap.class, new AtlasTmxMapLoader(new InternalFileHandleResolver()));
		assetManager.load(fileName, TiledMap.class);
	}
File path: /tmp/downloads/libgdx/revisions/rev_f810c_cfbb5/rev_f810c-cfbb5/tests/gdx-tests/src/com/badlogic/gdx/tests/TiledMapAtlasAssetManagerTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 20545d665f280db81adbe07810fd91281f0118aa
Parent1 SHA-1: f810cc3bae74a11bc8478284807fc9dd32e15da2
Parent2 SHA-1: cfbb5b161d1ff2403e7c967852f342f70480d551
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public void render () {
		Gdx.gl.glClearColor(100f / 255f, 100f / 255f, 250f / 255f, 1f);
		Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
		camera.update();
		assetManager.update();
		if (renderer == null && assetManager.isLoaded(fileName)) {
			map = assetManager.get(fileName);
			renderer = new OrthogonalTiledMapRenderer(map, 1f / 32f);
		} else if (renderer != null) {
			renderer.setView(camera);
			renderer.render();
		}
		batch.begin();
		if (errorMessage != null) font.draw(batch, "ERROR (OK if running in GWT): " + errorMessage, 10, 50);
		font.draw(batch, "FPS: " + Gdx.graphics.getFramesPerSecond(), 10, 20);
		batch.end();
	} ##FSTMerge## @Override
	public void render () {
		Gdx.gl.glClearColor(100f / 255f, 100f / 255f, 250f / 255f, 1f);
		Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
		camera.update();
		renderer.setView(camera);
		renderer.render();
		batch.begin();
		font.draw(batch, "FPS: " + Gdx.graphics.getFramesPerSecond(), 10, 20);
		batch.end();
	} ##FSTMerge## @Override
	public void render () {
		Gdx.gl.glClearColor(100f / 255f, 100f / 255f, 250f / 255f, 1f);
		Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
		camera.update();
		assetManager.update();
		if (renderer == null && assetManager.isLoaded(fileName)) {
			map = assetManager.get(fileName);
			renderer = new OrthogonalTiledMapRenderer(map, 1f / 32f);
		} else if (renderer != null) {
			renderer.setView(camera);
			renderer.render();
		}
		batch.begin();
		if (errorMessage != null) font.draw(batch, "ERROR (OK if running in GWT): " + errorMessage, 10, 50);
		font.draw(batch, "FPS: " + Gdx.graphics.getFramesPerSecond(), 10, 20);
		batch.end();
	}
File path: /tmp/downloads/libgdx/revisions/rev_f810c_cfbb5/rev_f810c-cfbb5/tests/gdx-tests/src/com/badlogic/gdx/tests/TiledMapAtlasAssetManagerTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 20545d665f280db81adbe07810fd91281f0118aa
Parent1 SHA-1: f810cc3bae74a11bc8478284807fc9dd32e15da2
Parent2 SHA-1: cfbb5b161d1ff2403e7c967852f342f70480d551
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public boolean needsGL20 () {
		return true;
	} ##FSTMerge## @Override
	public boolean needsGL20 () {
		return true;
	} ##FSTMerge## @Override
	public boolean needsGL20 () {
		return true;
	}
File path: /tmp/downloads/libgdx/revisions/rev_f810c_cfbb5/rev_f810c-cfbb5/tests/gdx-tests/src/com/badlogic/gdx/tests/TiledMapAtlasAssetManagerTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 20545d665f280db81adbe07810fd91281f0118aa
Parent1 SHA-1: f810cc3bae74a11bc8478284807fc9dd32e15da2
Parent2 SHA-1: cfbb5b161d1ff2403e7c967852f342f70480d551
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ protected void loadTileLayer (TiledMap map, Element element) {
		if (element.getName().equals("layer")) {
			String name = element.getAttribute("name", null);
			int width = element.getIntAttribute("width", 0);
			int height = element.getIntAttribute("height", 0);
			int tileWidth = element.getParent().getIntAttribute("tilewidth", 0);
			int tileHeight = element.getParent().getIntAttribute("tileheight", 0);
			boolean visible = element.getIntAttribute("visible", 1) == 1;
			float opacity = element.getFloatAttribute("opacity", 1.0f);
			TiledMapTileLayer layer = new TiledMapTileLayer(width, height, tileWidth, tileHeight);
			layer.setVisible(visible);
			layer.setOpacity(opacity);
			layer.setName(name);

			int[] ids = TmxMapHelper.getTileIds(element, width, height);
			TiledMapTileSets tilesets = map.getTileSets();
			for (int y = 0; y < height; y++) {
				for (int x = 0; x < width; x++) {
					int id = ids[y * width + x];
					boolean flipHorizontally = ((id & FLAG_FLIP_HORIZONTALLY) != 0);
					boolean flipVertically = ((id & FLAG_FLIP_VERTICALLY) != 0);
					boolean flipDiagonally = ((id & FLAG_FLIP_DIAGONALLY) != 0);

					TiledMapTile tile = tilesets.getTile(id & ~MASK_CLEAR);
					if (tile != null) {
						Cell cell = createTileLayerCell(flipHorizontally, flipVertically, flipDiagonally);
						cell.setTile(tile);
						layer.setCell(x, yUp ? height - 1 - y : y, cell);
					}
				}
			}

			Element properties = element.getChildByName("properties");
			if (properties != null) {
				loadProperties(layer.getProperties(), properties);
			}
			map.getLayers().add(layer);
		}
	} ##FSTMerge## protected void loadTileLayer (TiledMap map, Element element) {
		if (element.getName().equals("layer")) {
			String name = element.getAttribute("name", null);
			int width = element.getIntAttribute("width", 0);
			int height = element.getIntAttribute("height", 0);
			int tileWidth = element.getParent().getIntAttribute("tilewidth", 0);
			int tileHeight = element.getParent().getIntAttribute("tileheight", 0);
			boolean visible = element.getIntAttribute("visible", 1) == 1;
			float opacity = element.getFloatAttribute("opacity", 1.0f);
			TiledMapTileLayer layer = new TiledMapTileLayer(width, height, tileWidth, tileHeight);
			layer.setVisible(visible);
			layer.setOpacity(opacity);
			layer.setName(name);

			TiledMapTileSets tilesets = map.getTileSets();

			Element data = element.getChildByName("data");
			String encoding = data.getAttribute("encoding", null);
			String compression = data.getAttribute("compression", null);
			if (encoding == null) { // no 'encoding' attribute means that the encoding is XML
				throw new GdxRuntimeException("Unsupported encoding (XML) for TMX Layer Data");
			}
			if (encoding.equals("csv")) {
				String[] array = data.getText().split(",");
				for (int y = 0; y < height; y++) {
					for (int x = 0; x < width; x++) {
						int id = (int)Long.parseLong(array[y * width + x].trim());

						final boolean flipHorizontally = ((id & FLAG_FLIP_HORIZONTALLY) != 0);
						final boolean flipVertically = ((id & FLAG_FLIP_VERTICALLY) != 0);
						final boolean flipDiagonally = ((id & FLAG_FLIP_DIAGONALLY) != 0);

						id = id & ~MASK_CLEAR;

						tilesets.getTile(id);
						TiledMapTile tile = tilesets.getTile(id);
						if (tile != null) {
							Cell cell = createTileLayerCell(flipHorizontally, flipVertically, flipDiagonally);
							cell.setTile(tile);
							layer.setCell(x, yUp ? height - 1 - y : y, cell);
						}
					}
				}
			} else {
				if (encoding.equals("base64")) {
					byte[] bytes = Base64Coder.decode(data.getText());
					if (compression == null) {
						int read = 0;
						for (int y = 0; y < height; y++) {
							for (int x = 0; x < width; x++) {

								int id = unsignedByteToInt(bytes[read++]) | unsignedByteToInt(bytes[read++]) << 8
									| unsignedByteToInt(bytes[read++]) << 16 | unsignedByteToInt(bytes[read++]) << 24;

								final boolean flipHorizontally = ((id & FLAG_FLIP_HORIZONTALLY) != 0);
								final boolean flipVertically = ((id & FLAG_FLIP_VERTICALLY) != 0);
								final boolean flipDiagonally = ((id & FLAG_FLIP_DIAGONALLY) != 0);

								id = id & ~MASK_CLEAR;

								tilesets.getTile(id);
								TiledMapTile tile = tilesets.getTile(id);
								if (tile != null) {
									Cell cell = createTileLayerCell(flipHorizontally, flipVertically, flipDiagonally);
									cell.setTile(tile);
									layer.setCell(x, yUp ? height - 1 - y : y, cell);
								}
							}
						}
					} else if (compression.equals("gzip")) {
						GZIPInputStream GZIS = null;
						try {
							GZIS = new GZIPInputStream(new ByteArrayInputStream(bytes), bytes.length);
						} catch (IOException e) {
							throw new GdxRuntimeException("Error Reading TMX Layer Data - IOException: " + e.getMessage());
						}

						byte[] temp = new byte[4];
						for (int y = 0; y < height; y++) {
							for (int x = 0; x < width; x++) {
								try {
									GZIS.read(temp, 0, 4);
									int id = unsignedByteToInt(temp[0]) | unsignedByteToInt(temp[1]) << 8
										| unsignedByteToInt(temp[2]) << 16 | unsignedByteToInt(temp[3]) << 24;

									final boolean flipHorizontally = ((id & FLAG_FLIP_HORIZONTALLY) != 0);
									final boolean flipVertically = ((id & FLAG_FLIP_VERTICALLY) != 0);
									final boolean flipDiagonally = ((id & FLAG_FLIP_DIAGONALLY) != 0);

									id = id & ~MASK_CLEAR;

									tilesets.getTile(id);
									TiledMapTile tile = tilesets.getTile(id);
									if (tile != null) {
										Cell cell = createTileLayerCell(flipHorizontally, flipVertically, flipDiagonally);
										cell.setTile(tile);
										layer.setCell(x, yUp ? height - 1 - y : y, cell);
									}
								} catch (IOException e) {
									throw new GdxRuntimeException("Error Reading TMX Layer Data.", e);
								}
							}
						}
					} else if (compression.equals("zlib")) {
						Inflater zlib = new Inflater();

						byte[] temp = new byte[4];

						zlib.setInput(bytes, 0, bytes.length);

						for (int y = 0; y < height; y++) {
							for (int x = 0; x < width; x++) {
								try {
									zlib.inflate(temp, 0, 4);
									int id = unsignedByteToInt(temp[0]) | unsignedByteToInt(temp[1]) << 8
										| unsignedByteToInt(temp[2]) << 16 | unsignedByteToInt(temp[3]) << 24;

									final boolean flipHorizontally = ((id & FLAG_FLIP_HORIZONTALLY) != 0);
									final boolean flipVertically = ((id & FLAG_FLIP_VERTICALLY) != 0);
									final boolean flipDiagonally = ((id & FLAG_FLIP_DIAGONALLY) != 0);

									id = id & ~MASK_CLEAR;

									tilesets.getTile(id);
									TiledMapTile tile = tilesets.getTile(id);
									if (tile != null) {
										Cell cell = createTileLayerCell(flipHorizontally, flipVertically, flipDiagonally);
										cell.setTile(tile);
										layer.setCell(x, yUp ? height - 1 - y : y, cell);
									}

								} catch (DataFormatException e) {
									throw new GdxRuntimeException("Error Reading TMX Layer Data.", e);
								}
							}
						}
					}
				} else {
					// any other value of 'encoding' is one we're not aware of, probably a feature of a future version of Tiled
					throw new GdxRuntimeException("Unrecognised encoding (" + encoding + ") for TMX Layer Data");
				}
			}
			Element properties = element.getChildByName("properties");
			if (properties != null) {
				loadProperties(layer.getProperties(), properties);
			}
			map.getLayers().add(layer);
		}
	} ##FSTMerge## protected void loadTileLayer (TiledMap map, Element element) {
		if (element.getName().equals("layer")) {
			String name = element.getAttribute("name", null);
			int width = element.getIntAttribute("width", 0);
			int height = element.getIntAttribute("height", 0);
			int tileWidth = element.getParent().getIntAttribute("tilewidth", 0);
			int tileHeight = element.getParent().getIntAttribute("tileheight", 0);
			boolean visible = element.getIntAttribute("visible", 1) == 1;
			float opacity = element.getFloatAttribute("opacity", 1.0f);
			TiledMapTileLayer layer = new TiledMapTileLayer(width, height, tileWidth, tileHeight);
			layer.setVisible(visible);
			layer.setOpacity(opacity);
			layer.setName(name);

			int[] ids = TmxMapHelper.getTileIds(element, width, height);
			TiledMapTileSets tilesets = map.getTileSets();
			for (int y = 0; y < height; y++) {
				for (int x = 0; x < width; x++) {
					int id = ids[y * width + x];
					boolean flipHorizontally = ((id & FLAG_FLIP_HORIZONTALLY) != 0);
					boolean flipVertically = ((id & FLAG_FLIP_VERTICALLY) != 0);
					boolean flipDiagonally = ((id & FLAG_FLIP_DIAGONALLY) != 0);

					TiledMapTile tile = tilesets.getTile(id & ~MASK_CLEAR);
					if (tile != null) {
						Cell cell = createTileLayerCell(flipHorizontally, flipVertically, flipDiagonally);
						cell.setTile(tile);
						layer.setCell(x, yUp ? height - 1 - y : y, cell);
					}
				}
			}

			Element properties = element.getChildByName("properties");
			if (properties != null) {
				loadProperties(layer.getProperties(), properties);
			}
			map.getLayers().add(layer);
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_f810c_cfbb5/rev_f810c-cfbb5/gdx/src/com/badlogic/gdx/maps/tiled/TmxMapLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 20545d665f280db81adbe07810fd91281f0118aa
Parent1 SHA-1: f810cc3bae74a11bc8478284807fc9dd32e15da2
Parent2 SHA-1: cfbb5b161d1ff2403e7c967852f342f70480d551
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ protected void loadTileLayer (TiledMap map, Element element) {
		if (element.getName().equals("layer")) {
			String name = element.getAttribute("name", null);
			int width = element.getIntAttribute("width", 0);
			int height = element.getIntAttribute("height", 0);
			int tileWidth = element.getParent().getIntAttribute("tilewidth", 0);
			int tileHeight = element.getParent().getIntAttribute("tileheight", 0);
			boolean visible = element.getIntAttribute("visible", 1) == 1;
			float opacity = element.getFloatAttribute("opacity", 1.0f);
			TiledMapTileLayer layer = new TiledMapTileLayer(width, height, tileWidth, tileHeight);
			layer.setVisible(visible);
			layer.setOpacity(opacity);
			layer.setName(name);

			int[] ids = TmxMapHelper.getTileIds(element, width, height);
			TiledMapTileSets tilesets = map.getTileSets();
			for (int y = 0; y < height; y++) {
				for (int x = 0; x < width; x++) {
					int id = ids[y * width + x];
					boolean flipHorizontally = ((id & FLAG_FLIP_HORIZONTALLY) != 0);
					boolean flipVertically = ((id & FLAG_FLIP_VERTICALLY) != 0);
					boolean flipDiagonally = ((id & FLAG_FLIP_DIAGONALLY) != 0);

					TiledMapTile tile = tilesets.getTile(id & ~MASK_CLEAR);
					if (tile != null) {
						Cell cell = createTileLayerCell(flipHorizontally, flipVertically, flipDiagonally);
						cell.setTile(tile);
						layer.setCell(x, yUp ? height - 1 - y : y, cell);
					}
				}
			}

			Element properties = element.getChildByName("properties");
			if (properties != null) {
				loadProperties(layer.getProperties(), properties);
			}
			map.getLayers().add(layer);
		}
	} ##FSTMerge## protected void loadTileLayer (TiledMap map, Element element) {
		if (element.getName().equals("layer")) {
			String name = element.getAttribute("name", null);
			int width = element.getIntAttribute("width", 0);
			int height = element.getIntAttribute("height", 0);
			int tileWidth = element.getParent().getIntAttribute("tilewidth", 0);
			int tileHeight = element.getParent().getIntAttribute("tileheight", 0);
			boolean visible = element.getIntAttribute("visible", 1) == 1;
			float opacity = element.getFloatAttribute("opacity", 1.0f);
			TiledMapTileLayer layer = new TiledMapTileLayer(width, height, tileWidth, tileHeight);
			layer.setVisible(visible);
			layer.setOpacity(opacity);
			layer.setName(name);

			TiledMapTileSets tilesets = map.getTileSets();

			Element data = element.getChildByName("data");
			String encoding = data.getAttribute("encoding", null);
			String compression = data.getAttribute("compression", null);
			if (encoding == null) { // no 'encoding' attribute means that the encoding is XML
				throw new GdxRuntimeException("Unsupported encoding (XML) for TMX Layer Data");
			}
			if (encoding.equals("csv")) {
				String[] array = data.getText().split(",");
				for (int y = 0; y < height; y++) {
					for (int x = 0; x < width; x++) {
						int id = (int)Long.parseLong(array[y * width + x].trim());

						final boolean flipHorizontally = ((id & FLAG_FLIP_HORIZONTALLY) != 0);
						final boolean flipVertically = ((id & FLAG_FLIP_VERTICALLY) != 0);
						final boolean flipDiagonally = ((id & FLAG_FLIP_DIAGONALLY) != 0);

						id = id & ~MASK_CLEAR;

						tilesets.getTile(id);
						TiledMapTile tile = tilesets.getTile(id);
						if (tile != null) {
							Cell cell = createTileLayerCell(flipHorizontally, flipVertically, flipDiagonally);
							cell.setTile(tile);
							layer.setCell(x, yUp ? height - 1 - y : y, cell);
						}
					}
				}
			} else {
				if (encoding.equals("base64")) {
					byte[] bytes = Base64Coder.decode(data.getText());
					if (compression == null) {
						int read = 0;
						for (int y = 0; y < height; y++) {
							for (int x = 0; x < width; x++) {

								int id = unsignedByteToInt(bytes[read++]) | unsignedByteToInt(bytes[read++]) << 8
									| unsignedByteToInt(bytes[read++]) << 16 | unsignedByteToInt(bytes[read++]) << 24;

								final boolean flipHorizontally = ((id & FLAG_FLIP_HORIZONTALLY) != 0);
								final boolean flipVertically = ((id & FLAG_FLIP_VERTICALLY) != 0);
								final boolean flipDiagonally = ((id & FLAG_FLIP_DIAGONALLY) != 0);

								id = id & ~MASK_CLEAR;

								tilesets.getTile(id);
								TiledMapTile tile = tilesets.getTile(id);
								if (tile != null) {
									Cell cell = createTileLayerCell(flipHorizontally, flipVertically, flipDiagonally);
									cell.setTile(tile);
									layer.setCell(x, yUp ? height - 1 - y : y, cell);
								}
							}
						}
					} else if (compression.equals("gzip")) {
						GZIPInputStream GZIS = null;
						try {
							GZIS = new GZIPInputStream(new ByteArrayInputStream(bytes), bytes.length);
						} catch (IOException e) {
							throw new GdxRuntimeException("Error Reading TMX Layer Data - IOException: " + e.getMessage());
						}

						byte[] temp = new byte[4];
						for (int y = 0; y < height; y++) {
							for (int x = 0; x < width; x++) {
								try {
									GZIS.read(temp, 0, 4);
									int id = unsignedByteToInt(temp[0]) | unsignedByteToInt(temp[1]) << 8
										| unsignedByteToInt(temp[2]) << 16 | unsignedByteToInt(temp[3]) << 24;

									final boolean flipHorizontally = ((id & FLAG_FLIP_HORIZONTALLY) != 0);
									final boolean flipVertically = ((id & FLAG_FLIP_VERTICALLY) != 0);
									final boolean flipDiagonally = ((id & FLAG_FLIP_DIAGONALLY) != 0);

									id = id & ~MASK_CLEAR;

									tilesets.getTile(id);
									TiledMapTile tile = tilesets.getTile(id);
									if (tile != null) {
										Cell cell = createTileLayerCell(flipHorizontally, flipVertically, flipDiagonally);
										cell.setTile(tile);
										layer.setCell(x, yUp ? height - 1 - y : y, cell);
									}
								} catch (IOException e) {
									throw new GdxRuntimeException("Error Reading TMX Layer Data.", e);
								}
							}
						}
					} else if (compression.equals("zlib")) {
						Inflater zlib = new Inflater();

						byte[] temp = new byte[4];

						zlib.setInput(bytes, 0, bytes.length);

						for (int y = 0; y < height; y++) {
							for (int x = 0; x < width; x++) {
								try {
									zlib.inflate(temp, 0, 4);
									int id = unsignedByteToInt(temp[0]) | unsignedByteToInt(temp[1]) << 8
										| unsignedByteToInt(temp[2]) << 16 | unsignedByteToInt(temp[3]) << 24;

									final boolean flipHorizontally = ((id & FLAG_FLIP_HORIZONTALLY) != 0);
									final boolean flipVertically = ((id & FLAG_FLIP_VERTICALLY) != 0);
									final boolean flipDiagonally = ((id & FLAG_FLIP_DIAGONALLY) != 0);

									id = id & ~MASK_CLEAR;

									tilesets.getTile(id);
									TiledMapTile tile = tilesets.getTile(id);
									if (tile != null) {
										Cell cell = createTileLayerCell(flipHorizontally, flipVertically, flipDiagonally);
										cell.setTile(tile);
										layer.setCell(x, yUp ? height - 1 - y : y, cell);
									}

								} catch (DataFormatException e) {
									throw new GdxRuntimeException("Error Reading TMX Layer Data.", e);
								}
							}
						}
					}
				} else {
					// any other value of 'encoding' is one we're not aware of, probably a feature of a future version of Tiled
					// or another editor
					throw new GdxRuntimeException("Unrecognised encoding (" + encoding + ") for TMX Layer Data");
				}
			}
			Element properties = element.getChildByName("properties");
			if (properties != null) {
				loadProperties(layer.getProperties(), properties);
			}
			map.getLayers().add(layer);
		}
	} ##FSTMerge## protected void loadTileLayer (TiledMap map, Element element) {
		if (element.getName().equals("layer")) {
			String name = element.getAttribute("name", null);
			int width = element.getIntAttribute("width", 0);
			int height = element.getIntAttribute("height", 0);
			int tileWidth = element.getParent().getIntAttribute("tilewidth", 0);
			int tileHeight = element.getParent().getIntAttribute("tileheight", 0);
			boolean visible = element.getIntAttribute("visible", 1) == 1;
			float opacity = element.getFloatAttribute("opacity", 1.0f);
			TiledMapTileLayer layer = new TiledMapTileLayer(width, height, tileWidth, tileHeight);
			layer.setVisible(visible);
			layer.setOpacity(opacity);
			layer.setName(name);

			int[] ids = TmxMapHelper.getTileIds(element, width, height);
			TiledMapTileSets tilesets = map.getTileSets();
			for (int y = 0; y < height; y++) {
				for (int x = 0; x < width; x++) {
					int id = ids[y * width + x];
					boolean flipHorizontally = ((id & FLAG_FLIP_HORIZONTALLY) != 0);
					boolean flipVertically = ((id & FLAG_FLIP_VERTICALLY) != 0);
					boolean flipDiagonally = ((id & FLAG_FLIP_DIAGONALLY) != 0);

					TiledMapTile tile = tilesets.getTile(id & ~MASK_CLEAR);
					if (tile != null) {
						Cell cell = createTileLayerCell(flipHorizontally, flipVertically, flipDiagonally);
						cell.setTile(tile);
						layer.setCell(x, yUp ? height - 1 - y : y, cell);
					}
				}
			}

			Element properties = element.getChildByName("properties");
			if (properties != null) {
				loadProperties(layer.getProperties(), properties);
			}
			map.getLayers().add(layer);
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_f810c_cfbb5/rev_f810c-cfbb5/gdx/src/com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 20545d665f280db81adbe07810fd91281f0118aa
Parent1 SHA-1: f810cc3bae74a11bc8478284807fc9dd32e15da2
Parent2 SHA-1: cfbb5b161d1ff2403e7c967852f342f70480d551
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public synchronized <T> T get (String fileName) {
		Class<T> type = assetTypes.get(fileName);
		if(type==null) throw new GdxRuntimeException("Asset not loaded: " + fileName);
		ObjectMap<String, RefCountedContainer> assetsByType = assets.get(type);
		if (assetsByType == null) throw new GdxRuntimeException("Asset not loaded: " + fileName);
		RefCountedContainer assetContainer = assetsByType.get(fileName);
		if (assetContainer == null) throw new GdxRuntimeException("Asset not loaded: " + fileName);
		T asset = assetContainer.getObject(type);
		if (asset == null) throw new GdxRuntimeException("Asset not loaded: " + fileName);
		return asset;
	} ##FSTMerge## public synchronized <T> T get (String fileName) {
		Class<T> type = assetTypes.get(fileName);
		ObjectMap<String, RefCountedContainer> assetsByType = assets.get(type);
		if (assetsByType == null) throw new GdxRuntimeException("Asset not loaded: " + fileName);
		RefCountedContainer assetContainer = assetsByType.get(fileName);
		if (assetContainer == null) throw new GdxRuntimeException("Asset not loaded: " + fileName);
		T asset = assetContainer.getObject(type);
		if (asset == null) throw new GdxRuntimeException("Asset not loaded: " + fileName);
		return asset;
	} ##FSTMerge## public synchronized <T> T get (String fileName) {
		Class<T> type = assetTypes.get(fileName);
		if(type==null) throw new GdxRuntimeException("Asset not loaded: " + fileName);
		ObjectMap<String, RefCountedContainer> assetsByType = assets.get(type);
		if (assetsByType == null) throw new GdxRuntimeException("Asset not loaded: " + fileName);
		RefCountedContainer assetContainer = assetsByType.get(fileName);
		if (assetContainer == null) throw new GdxRuntimeException("Asset not loaded: " + fileName);
		T asset = assetContainer.getObject(type);
		if (asset == null) throw new GdxRuntimeException("Asset not loaded: " + fileName);
		return asset;
	}
File path: /tmp/downloads/libgdx/revisions/rev_f810c_cfbb5/rev_f810c-cfbb5/gdx/src/com/badlogic/gdx/assets/AssetManager.java
############## CONFLICT ##############
Conflict type: AddSameFd
Merge Commit SHA-1: 20545d665f280db81adbe07810fd91281f0118aa
Parent1 SHA-1: f810cc3bae74a11bc8478284807fc9dd32e15da2
Parent2 SHA-1: cfbb5b161d1ff2403e7c967852f342f70480d551
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ static final int FLAG_FLIP_HORIZONTALLY = 0x80000000; ##FSTMerge## ##FSTMerge## static final int FLAG_FLIP_HORIZONTALLY = 0x80000000;
File path: /tmp/downloads/libgdx/revisions/rev_f810c_cfbb5/rev_f810c-cfbb5/gdx/src/com/badlogic/gdx/maps/tiled/TmxMapHelper.java
############## CONFLICT ##############
Conflict type: AddSameFd
Merge Commit SHA-1: 20545d665f280db81adbe07810fd91281f0118aa
Parent1 SHA-1: f810cc3bae74a11bc8478284807fc9dd32e15da2
Parent2 SHA-1: cfbb5b161d1ff2403e7c967852f342f70480d551
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ static final int FLAG_FLIP_VERTICALLY = 0x40000000; ##FSTMerge## ##FSTMerge## static final int FLAG_FLIP_VERTICALLY = 0x40000000;
File path: /tmp/downloads/libgdx/revisions/rev_f810c_cfbb5/rev_f810c-cfbb5/gdx/src/com/badlogic/gdx/maps/tiled/TmxMapHelper.java
############## CONFLICT ##############
Conflict type: AddSameFd
Merge Commit SHA-1: 20545d665f280db81adbe07810fd91281f0118aa
Parent1 SHA-1: f810cc3bae74a11bc8478284807fc9dd32e15da2
Parent2 SHA-1: cfbb5b161d1ff2403e7c967852f342f70480d551
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ static final int FLAG_FLIP_DIAGONALLY = 0x20000000; ##FSTMerge## ##FSTMerge## static final int FLAG_FLIP_DIAGONALLY = 0x20000000;
File path: /tmp/downloads/libgdx/revisions/rev_f810c_cfbb5/rev_f810c-cfbb5/gdx/src/com/badlogic/gdx/maps/tiled/TmxMapHelper.java
############## CONFLICT ##############
Conflict type: AddSameFd
Merge Commit SHA-1: 20545d665f280db81adbe07810fd91281f0118aa
Parent1 SHA-1: f810cc3bae74a11bc8478284807fc9dd32e15da2
Parent2 SHA-1: cfbb5b161d1ff2403e7c967852f342f70480d551
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ static final int MASK_CLEAR = 0xE0000000; ##FSTMerge## ##FSTMerge## static final int MASK_CLEAR = 0xE0000000;
File path: /tmp/downloads/libgdx/revisions/rev_f810c_cfbb5/rev_f810c-cfbb5/gdx/src/com/badlogic/gdx/maps/tiled/TmxMapHelper.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 20545d665f280db81adbe07810fd91281f0118aa
Parent1 SHA-1: f810cc3bae74a11bc8478284807fc9dd32e15da2
Parent2 SHA-1: cfbb5b161d1ff2403e7c967852f342f70480d551
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ private TmxMapHelper () {

	} ##FSTMerge## ##FSTMerge## private TmxMapHelper () {

	}
File path: /tmp/downloads/libgdx/revisions/rev_f810c_cfbb5/rev_f810c-cfbb5/gdx/src/com/badlogic/gdx/maps/tiled/TmxMapHelper.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 20545d665f280db81adbe07810fd91281f0118aa
Parent1 SHA-1: f810cc3bae74a11bc8478284807fc9dd32e15da2
Parent2 SHA-1: cfbb5b161d1ff2403e7c967852f342f70480d551
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ static int[] getTileIds (Element element, int width, int height) {
		Element data = element.getChildByName("data");
		String encoding = data.getAttribute("encoding", null);
		if (encoding == null) { // no 'encoding' attribute means that the encoding is XML
			throw new GdxRuntimeException("Unsupported encoding (XML) for TMX Layer Data");
		}
		int[] ids = new int[width * height];
		if (encoding.equals("csv")) {
			String[] array = data.getText().split(",");
			for (int i = 0; i < array.length; i++)
				ids[i] = (int)Long.parseLong(array[i]);
		} else {
			if (true)
				if (encoding.equals("base64")) {
					InputStream is = null;
					try {
						String compression = data.getAttribute("compression", null);
						byte[] bytes = Base64Coder.decode(data.getText());
						if (compression == null)
							is = new ByteArrayInputStream(bytes);
						else if (compression.equals("gzip"))
							is = new GZIPInputStream(new ByteArrayInputStream(bytes), bytes.length);
						else if (compression.equals("zlib"))
							is = new InflaterInputStream(new ByteArrayInputStream(bytes));
						else
							throw new GdxRuntimeException("Unrecognised compression (" + compression + ") for TMX Layer Data");

						byte[] temp = new byte[4];
						for (int y = 0; y < height; y++) {
							for (int x = 0; x < width; x++) {
								if (is.read(temp) != temp.length)
									throw new GdxRuntimeException("Error Reading TMX Layer Data: Premature end of tile data");
								ids[y * width + x] = unsignedByteToInt(temp[0]) | unsignedByteToInt(temp[1]) << 8
									| unsignedByteToInt(temp[2]) << 16 | unsignedByteToInt(temp[3]) << 24;
							}
						}
					} catch (IOException e) {
						throw new GdxRuntimeException("Error Reading TMX Layer Data - IOException: " + e.getMessage());
					} finally {
						StreamUtils.closeQuietly(is);
					}
				} else {
					// any other value of 'encoding' is one we're not aware of, probably a feature of a future version of Tiled
					// or another editor
					throw new GdxRuntimeException("Unrecognised encoding (" + encoding + ") for TMX Layer Data");
				}
		}
		return ids;
	} ##FSTMerge## ##FSTMerge## static int[] getTileIds (Element element, int width, int height) {
		Element data = element.getChildByName("data");
		String encoding = data.getAttribute("encoding", null);
		if (encoding == null) { // no 'encoding' attribute means that the encoding is XML
			throw new GdxRuntimeException("Unsupported encoding (XML) for TMX Layer Data");
		}
		int[] ids = new int[width * height];
		if (encoding.equals("csv")) {
			String[] array = data.getText().split(",");
			for (int i = 0; i < array.length; i++)
				ids[i] = (int)Long.parseLong(array[i]);
		} else {
			if (true)
				if (encoding.equals("base64")) {
					InputStream is = null;
					try {
						String compression = data.getAttribute("compression", null);
						byte[] bytes = Base64Coder.decode(data.getText());
						if (compression == null)
							is = new ByteArrayInputStream(bytes);
						else if (compression.equals("gzip"))
							is = new GZIPInputStream(new ByteArrayInputStream(bytes), bytes.length);
						else if (compression.equals("zlib"))
							is = new InflaterInputStream(new ByteArrayInputStream(bytes));
						else
							throw new GdxRuntimeException("Unrecognised compression (" + compression + ") for TMX Layer Data");

						byte[] temp = new byte[4];
						for (int y = 0; y < height; y++) {
							for (int x = 0; x < width; x++) {
								if (is.read(temp) != temp.length)
									throw new GdxRuntimeException("Error Reading TMX Layer Data: Premature end of tile data");
								ids[y * width + x] = unsignedByteToInt(temp[0]) | unsignedByteToInt(temp[1]) << 8
									| unsignedByteToInt(temp[2]) << 16 | unsignedByteToInt(temp[3]) << 24;
							}
						}
					} catch (IOException e) {
						throw new GdxRuntimeException("Error Reading TMX Layer Data - IOException: " + e.getMessage());
					} finally {
						StreamUtils.closeQuietly(is);
					}
				} else {
					// any other value of 'encoding' is one we're not aware of, probably a feature of a future version of Tiled
					// or another editor
					throw new GdxRuntimeException("Unrecognised encoding (" + encoding + ") for TMX Layer Data");
				}
		}
		return ids;
	}
File path: /tmp/downloads/libgdx/revisions/rev_f810c_cfbb5/rev_f810c-cfbb5/gdx/src/com/badlogic/gdx/maps/tiled/TmxMapHelper.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 20545d665f280db81adbe07810fd91281f0118aa
Parent1 SHA-1: f810cc3bae74a11bc8478284807fc9dd32e15da2
Parent2 SHA-1: cfbb5b161d1ff2403e7c967852f342f70480d551
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ static int unsignedByteToInt (byte b) {
		return (int)b & 0xFF;
	} ##FSTMerge## ##FSTMerge## static int unsignedByteToInt (byte b) {
		return (int)b & 0xFF;
	}
File path: /tmp/downloads/libgdx/revisions/rev_f810c_cfbb5/rev_f810c-cfbb5/gdx/src/com/badlogic/gdx/maps/tiled/TmxMapHelper.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 20545d665f280db81adbe07810fd91281f0118aa
Parent1 SHA-1: f810cc3bae74a11bc8478284807fc9dd32e15da2
Parent2 SHA-1: cfbb5b161d1ff2403e7c967852f342f70480d551
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public ##FSTMerge## ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_f810c_cfbb5/rev_f810c-cfbb5/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/java/util/zip/InflaterInputStream.java
############## CONFLICT ##############
Conflict type: ExtendsList
Merge Commit SHA-1: 20545d665f280db81adbe07810fd91281f0118aa
Parent1 SHA-1: f810cc3bae74a11bc8478284807fc9dd32e15da2
Parent2 SHA-1: cfbb5b161d1ff2403e7c967852f342f70480d551
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ extends InputStream ##FSTMerge## ##FSTMerge## extends InputStream
File path: /tmp/downloads/libgdx/revisions/rev_f810c_cfbb5/rev_f810c-cfbb5/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/java/util/zip/InflaterInputStream.java
############## CONFLICT ##############
Conflict type: AddSameFd
Merge Commit SHA-1: 20545d665f280db81adbe07810fd91281f0118aa
Parent1 SHA-1: f810cc3bae74a11bc8478284807fc9dd32e15da2
Parent2 SHA-1: cfbb5b161d1ff2403e7c967852f342f70480d551
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ private InputStream in; ##FSTMerge## ##FSTMerge## private InputStream in;
File path: /tmp/downloads/libgdx/revisions/rev_f810c_cfbb5/rev_f810c-cfbb5/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/java/util/zip/InflaterInputStream.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 20545d665f280db81adbe07810fd91281f0118aa
Parent1 SHA-1: f810cc3bae74a11bc8478284807fc9dd32e15da2
Parent2 SHA-1: cfbb5b161d1ff2403e7c967852f342f70480d551
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public InflaterInputStream (InputStream in) {
		this.in = in;
	} ##FSTMerge## ##FSTMerge## public InflaterInputStream (InputStream in) {
		this.in = in;
	}
File path: /tmp/downloads/libgdx/revisions/rev_f810c_cfbb5/rev_f810c-cfbb5/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/java/util/zip/InflaterInputStream.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 20545d665f280db81adbe07810fd91281f0118aa
Parent1 SHA-1: f810cc3bae74a11bc8478284807fc9dd32e15da2
Parent2 SHA-1: cfbb5b161d1ff2403e7c967852f342f70480d551
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public int read () throws IOException {
		throw new GdxRuntimeException("InflaterInputStream not supported in GWT");
	} ##FSTMerge## ##FSTMerge## @Override
	public int read () throws IOException {
		throw new GdxRuntimeException("InflaterInputStream not supported in GWT");
	}
File path: /tmp/downloads/libgdx/revisions/rev_f810c_cfbb5/rev_f810c-cfbb5/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/java/util/zip/InflaterInputStream.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 20545d665f280db81adbe07810fd91281f0118aa
Parent1 SHA-1: f810cc3bae74a11bc8478284807fc9dd32e15da2
Parent2 SHA-1: cfbb5b161d1ff2403e7c967852f342f70480d551
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public void close () throws IOException {
		super.close();
		StreamUtils.closeQuietly(in);
	} ##FSTMerge## ##FSTMerge## @Override
	public void close () throws IOException {
		super.close();
		StreamUtils.closeQuietly(in);
	}
File path: /tmp/downloads/libgdx/revisions/rev_f810c_cfbb5/rev_f810c-cfbb5/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/java/util/zip/InflaterInputStream.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 20545d665f280db81adbe07810fd91281f0118aa
Parent1 SHA-1: f810cc3bae74a11bc8478284807fc9dd32e15da2
Parent2 SHA-1: cfbb5b161d1ff2403e7c967852f342f70480d551
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public ##FSTMerge## ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_f810c_cfbb5/rev_f810c-cfbb5/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/java/util/zip/GZIPInputStream.java
############## CONFLICT ##############
Conflict type: ExtendsList
Merge Commit SHA-1: 20545d665f280db81adbe07810fd91281f0118aa
Parent1 SHA-1: f810cc3bae74a11bc8478284807fc9dd32e15da2
Parent2 SHA-1: cfbb5b161d1ff2403e7c967852f342f70480d551
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ extends InflaterInputStream ##FSTMerge## ##FSTMerge## extends InflaterInputStream
File path: /tmp/downloads/libgdx/revisions/rev_f810c_cfbb5/rev_f810c-cfbb5/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/java/util/zip/GZIPInputStream.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 20545d665f280db81adbe07810fd91281f0118aa
Parent1 SHA-1: f810cc3bae74a11bc8478284807fc9dd32e15da2
Parent2 SHA-1: cfbb5b161d1ff2403e7c967852f342f70480d551
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public GZIPInputStream (InputStream in, int size) {
		super(in);
	} ##FSTMerge## ##FSTMerge## public GZIPInputStream (InputStream in, int size) {
		super(in);
	}
File path: /tmp/downloads/libgdx/revisions/rev_f810c_cfbb5/rev_f810c-cfbb5/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/java/util/zip/GZIPInputStream.java

==================================================================================================================
Revision: /tmp/downloads/libgdx/revisions/rev_1683b_36a26/rev_1683b-36a26.revisions
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: df642ce87167fe6ede51a6aac8ff4a09eaf4a966
Parent1 SHA-1: 1683bdb72a82e48163710028a2b149f92ffc1249
Parent2 SHA-1: 36a26110e89990300d1ecd125cfa0d4390e0ebae
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ protected Json getJsonLoader (final FileHandle skinFile) {
		final Skin skin = this;

		final Json json = new Json() {
			public <T> T readValue (Class<T> type, Class elementType, JsonValue jsonData) {
				// If the JSON is a string but the type is not, look up the actual value by name.
				if (jsonData.isString() && !ClassReflection.isAssignableFrom(CharSequence.class, type)) return get(jsonData.asString(), type);
				return super.readValue(type, elementType, jsonData);
			}
		};
		json.setTypeName(null);
		json.setUsePrototypes(false);

		json.setSerializer(Skin.class, new ReadOnlySerializer<Skin>() {
			public Skin read (Json json, JsonValue typeToValueMap, Class ignored) {
				for (JsonValue valueMap = typeToValueMap.child(); valueMap != null; valueMap = valueMap.next()) {
					try {
						readNamedObjects(json, ClassReflection.forName(valueMap.name()), valueMap);
					} catch (ReflectionException ex) {
						throw new SerializationException(ex);
					}
				}
				return skin;
			}

			private void readNamedObjects (Json json, Class type, JsonValue valueMap) {
				Class addType = type == TintedDrawable.class ? Drawable.class : type;
				for (JsonValue valueEntry = valueMap.child(); valueEntry != null; valueEntry = valueEntry.next()) {
					Object object = json.readValue(type, valueEntry);
					if (object == null) continue;
					try {
						add(valueEntry.name(), object, addType);
					} catch (Exception ex) {
						throw new SerializationException("Error reading " + ClassReflection.getSimpleName(type) + ": " + valueEntry.name(), ex);
					}
				}
			}
		});

		json.setSerializer(BitmapFont.class, new ReadOnlySerializer<BitmapFont>() {
			public BitmapFont read (Json json, JsonValue jsonData, Class type) {
				String path = json.readValue("file", String.class, jsonData);
				int size = json.readValue("size", int.class, -1, jsonData);

				FileHandle fontFile = skinFile.parent().child(path);
				if (!fontFile.exists()) fontFile = Gdx.files.internal(path);
				if (!fontFile.exists()) throw new SerializationException("Font file not found: " + fontFile);

				// Use a region with the same name as the font, else use a PNG file in the same directory as the FNT file.
				String regionName = fontFile.nameWithoutExtension();
				try {
					BitmapFont font;
					TextureRegion region = skin.optional(regionName, TextureRegion.class);
					if (region != null)
						font = new BitmapFont(fontFile, region, false);
					else {
						FileHandle imageFile = fontFile.parent().child(regionName + ".png");
						if (imageFile.exists())
							font = new BitmapFont(fontFile, imageFile, false);
						else
							font = new BitmapFont(fontFile, false);
					}
					if (size != -1) {
						// Use scale factor based on lineHeight (as font size) to scale the font
						font.setScale(size / font.getData().lineHeight);
					}
					return font;
				} catch (RuntimeException ex) {
					throw new SerializationException("Error loading bitmap font: " + fontFile, ex);
				}
			}
		});

		json.setSerializer(Color.class, new ReadOnlySerializer<Color>() {
			public Color read (Json json, JsonValue jsonData, Class type) {
				if (jsonData.isString()) return get(jsonData.asString(), Color.class);
				String hex = json.readValue("hex", String.class, (String)null, jsonData);
				if (hex != null) return Color.valueOf(hex);
				float r = json.readValue("r", float.class, 0f, jsonData);
				float g = json.readValue("g", float.class, 0f, jsonData);
				float b = json.readValue("b", float.class, 0f, jsonData);
				float a = json.readValue("a", float.class, 1f, jsonData);
				return new Color(r, g, b, a);
			}
		});

		json.setSerializer(TintedDrawable.class, new ReadOnlySerializer() {
			public Object read (Json json, JsonValue jsonData, Class type) {
				String name = json.readValue("name", String.class, jsonData);
				Color color = json.readValue("color", Color.class, jsonData);
				return newDrawable(name, color);
			}
		});

		return json;
	} ##FSTMerge## protected Json getJsonLoader (final FileHandle skinFile) {
		final Skin skin = this;

		final Json json = new Json() {
			public <T> T readValue (Class<T> type, Class elementType, JsonValue jsonData) {
				// If the JSON is a string but the type is not, look up the actual value by name.
				if (jsonData.isString() && !ClassReflection.isAssignableFrom(CharSequence.class, type)) return get(jsonData.asString(), type);
				return super.readValue(type, elementType, jsonData);
			}
		};
		json.setTypeName(null);
		json.setUsePrototypes(false);

		json.setSerializer(Skin.class, new ReadOnlySerializer<Skin>() {
			public Skin read (Json json, JsonValue typeToValueMap, Class ignored) {
				for (JsonValue valueMap = typeToValueMap.child(); valueMap != null; valueMap = valueMap.next()) {
					try {
						readNamedObjects(json, ClassReflection.forName(valueMap.name()), valueMap);
					} catch (ReflectionException ex) {
						throw new SerializationException(ex);
					}
				}
				return skin;
			}

			private void readNamedObjects (Json json, Class type, JsonValue valueMap) {
				Class addType = type == TintedDrawable.class ? Drawable.class : type;
				for (JsonValue valueEntry = valueMap.child(); valueEntry != null; valueEntry = valueEntry.next()) {
					Object object = json.readValue(type, valueEntry);
					if (object == null) continue;
					try {
						add(valueEntry.name(), object, addType);
					} catch (Exception ex) {
						throw new SerializationException("Error reading " + ClassReflection.getSimpleName(type) + ": " + valueEntry.name(), ex);
					}
				}
			}
		});

		json.setSerializer(BitmapFont.class, new ReadOnlySerializer<BitmapFont>() {
			public BitmapFont read (Json json, JsonValue jsonData, Class type) {
				String path = json.readValue("file", String.class, jsonData);

				FileHandle fontFile = skinFile.parent().child(path);
				if (!fontFile.exists()) fontFile = Gdx.files.internal(path);
				if (!fontFile.exists()) throw new SerializationException("Font file not found: " + fontFile);

				// Use a region with the same name as the font, else use a PNG file in the same directory as the FNT file.
				String regionName = fontFile.nameWithoutExtension();
				try {
					TextureRegion region = skin.optional(regionName, TextureRegion.class);
					if (region != null)
						return new BitmapFont(fontFile, region, false);
					else {
						FileHandle imageFile = fontFile.parent().child(regionName + ".png");
						if (imageFile.exists())
							return new BitmapFont(fontFile, imageFile, false);
						else
							return new BitmapFont(fontFile, false);
					}
				} catch (RuntimeException ex) {
					throw new SerializationException("Error loading bitmap font: " + fontFile, ex);
				}
			}
		});

		json.setSerializer(Color.class, new ReadOnlySerializer<Color>() {
			public Color read (Json json, JsonValue jsonData, Class type) {
				if (jsonData.isString()) return get(jsonData.asString(), Color.class);
				String hex = json.readValue("hex", String.class, (String)null, jsonData);
				if (hex != null) return Color.valueOf(hex);
				float r = json.readValue("r", float.class, 0f, jsonData);
				float g = json.readValue("g", float.class, 0f, jsonData);
				float b = json.readValue("b", float.class, 0f, jsonData);
				float a = json.readValue("a", float.class, 1f, jsonData);
				return new Color(r, g, b, a);
			}
		});

		json.setSerializer(TintedDrawable.class, new ReadOnlySerializer() {
			public Object read (Json json, JsonValue jsonData, Class type) {
				String name = json.readValue("name", String.class, jsonData);
				Color color = json.readValue("color", Color.class, jsonData);
				return newDrawable(name, color);
			}
		});

		return json;
	} ##FSTMerge## protected Json getJsonLoader (final FileHandle skinFile) {
		final Skin skin = this;

		final Json json = new Json() {
			public <T> T readValue (Class<T> type, Class elementType, JsonValue jsonData) {
				// If the JSON is a string but the type is not, look up the actual value by name.
				if (jsonData.isString() && !ClassReflection.isAssignableFrom(CharSequence.class, type)) return get(jsonData.asString(), type);
				return super.readValue(type, elementType, jsonData);
			}
		};
		json.setTypeName(null);
		json.setUsePrototypes(false);

		json.setSerializer(Skin.class, new ReadOnlySerializer<Skin>() {
			public Skin read (Json json, JsonValue typeToValueMap, Class ignored) {
				for (JsonValue valueMap = typeToValueMap.child(); valueMap != null; valueMap = valueMap.next()) {
					try {
						readNamedObjects(json, ClassReflection.forName(valueMap.name()), valueMap);
					} catch (ReflectionException ex) {
						throw new SerializationException(ex);
					}
				}
				return skin;
			}

			private void readNamedObjects (Json json, Class type, JsonValue valueMap) {
				Class addType = type == TintedDrawable.class ? Drawable.class : type;
				for (JsonValue valueEntry = valueMap.child(); valueEntry != null; valueEntry = valueEntry.next()) {
					Object object = json.readValue(type, valueEntry);
					if (object == null) continue;
					try {
						add(valueEntry.name(), object, addType);
					} catch (Exception ex) {
						throw new SerializationException("Error reading " + ClassReflection.getSimpleName(type) + ": " + valueEntry.name(), ex);
					}
				}
			}
		});

		json.setSerializer(BitmapFont.class, new ReadOnlySerializer<BitmapFont>() {
			public BitmapFont read (Json json, JsonValue jsonData, Class type) {
				String path = json.readValue("file", String.class, jsonData);
				Boolean flip = json.readValue("flip", Boolean.class, false, jsonData);

				FileHandle fontFile = skinFile.parent().child(path);
				if (!fontFile.exists()) fontFile = Gdx.files.internal(path);
				if (!fontFile.exists()) throw new SerializationException("Font file not found: " + fontFile);

				// Use a region with the same name as the font, else use a PNG file in the same directory as the FNT file.
				String regionName = fontFile.nameWithoutExtension();
				try {
					TextureRegion region = skin.optional(regionName, TextureRegion.class);
					if (region != null)
						return new BitmapFont(fontFile, region, flip);
					else {
						FileHandle imageFile = fontFile.parent().child(regionName + ".png");
						if (imageFile.exists())
							return new BitmapFont(fontFile, imageFile, flip);
						else
							return new BitmapFont(fontFile, flip);
					}
				} catch (RuntimeException ex) {
					throw new SerializationException("Error loading bitmap font: " + fontFile, ex);
				}
			}
		});

		json.setSerializer(Color.class, new ReadOnlySerializer<Color>() {
			public Color read (Json json, JsonValue jsonData, Class type) {
				if (jsonData.isString()) return get(jsonData.asString(), Color.class);
				String hex = json.readValue("hex", String.class, (String)null, jsonData);
				if (hex != null) return Color.valueOf(hex);
				float r = json.readValue("r", float.class, 0f, jsonData);
				float g = json.readValue("g", float.class, 0f, jsonData);
				float b = json.readValue("b", float.class, 0f, jsonData);
				float a = json.readValue("a", float.class, 1f, jsonData);
				return new Color(r, g, b, a);
			}
		});

		json.setSerializer(TintedDrawable.class, new ReadOnlySerializer() {
			public Object read (Json json, JsonValue jsonData, Class type) {
				String name = json.readValue("name", String.class, jsonData);
				Color color = json.readValue("color", Color.class, jsonData);
				return newDrawable(name, color);
			}
		});

		return json;
	}
File path: /tmp/downloads/libgdx/revisions/rev_1683b_36a26/rev_1683b-36a26/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Skin.java

==================================================================================================================
Revision: /tmp/downloads/libgdx/revisions/rev_0f674_d1a9a/rev_0f674-d1a9a.revisions
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 5db3f4168f23444be9408ff3ffe38dc7337fc6c3
Parent1 SHA-1: 0f67424d6eaef8f285593434880160de96eebb71
Parent2 SHA-1: d1a9af0063921681c4a1e87cbb7f3a6f32106f7f
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public <T> T readValue (Class<T> type, Class elementType, JsonValue jsonData) {
		if (jsonData == null) return null;

		if (jsonData.isObject()) {
			String className = typeName == null ? null : jsonData.getString(typeName, null);
			if (className != null) {
				jsonData.remove(typeName);
				try {
					type = (Class<T>)ClassReflection.forName(className);
				} catch (ReflectionException ex) {
					type = tagToClass.get(className);
					if (type == null) throw new SerializationException(ex);
				}
			}

			Object object;
			if (type != null) {
				if (type == String.class || type == Integer.class || type == Boolean.class || type == Float.class
					|| type == Long.class || type == Double.class || type == Short.class || type == Byte.class
					|| type == Character.class || type.isEnum()) {
					return readValue("value", type, jsonData);
				}

				Serializer serializer = classToSerializer.get(type);
				if (serializer != null) return (T)serializer.read(this, jsonData, type);

				object = newInstance(type);

				if (object instanceof Serializable) {
					((Serializable)object).read(this, jsonData);
					return (T)object;
				}

				if (object instanceof HashMap) {
					HashMap result = (HashMap)object;
					for (JsonValue child = jsonData.child(); child != null; child = child.next())
						result.put(child.name(), readValue(elementType, null, child));
					return (T)result;
				}
			} else if (defaultSerializer != null) {
				return (T)defaultSerializer.read(this, jsonData, type);
			} else
				return (T)jsonData;

			if (object instanceof ObjectMap) {
				ObjectMap result = (ObjectMap)object;
				for (JsonValue child = jsonData.child(); child != null; child = child.next())
					result.put(child.name(), readValue(elementType, null, child));
				return (T)result;
			}
			readFields(object, jsonData);
			return (T)object;
		}

		if (type != null) {
			Serializer serializer = classToSerializer.get(type);
			if (serializer != null) return (T)serializer.read(this, jsonData, type);
		}

		if (jsonData.isArray()) {
			if ((type == null || type == Object.class) || ClassReflection.isAssignableFrom(Array.class, type)) {
				Array newArray = (type == null || type == Object.class) ? new Array() : (Array)newInstance(type);
				for (JsonValue child = jsonData.child(); child != null; child = child.next())
					newArray.add(readValue(elementType, null, child));
				return (T)newArray;
			}
			if (ClassReflection.isAssignableFrom(List.class, type)) {
				List newArray = type == List.class ? new ArrayList() : (List)newInstance(type);
				for (JsonValue child = jsonData.child(); child != null; child = child.next())
					newArray.add(readValue(elementType, null, child));
				return (T)newArray;
			}
			if (type.isArray()) {
				Class componentType = type.getComponentType();
				if (elementType == null) elementType = componentType;
				Object newArray = ArrayReflection.newInstance(componentType, jsonData.size());
				int i = 0;
				for (JsonValue child = jsonData.child(); child != null; child = child.next())
					ArrayReflection.set(newArray, i++, readValue(elementType, null, child));
				return (T)newArray;
			}
			throw new SerializationException("Unable to convert value to required type: " + jsonData + " (" + type.getName() + ")");
		}

		if (jsonData.isNumber()) {
			try {
				if (type == null || type == float.class || type == Float.class) return (T)(Float)jsonData.asFloat();
				if (type == int.class || type == Integer.class) return (T)(Integer)jsonData.asInt();
				if (type == long.class || type == Long.class) return (T)(Long)jsonData.asLong();
				if (type == double.class || type == Double.class) return (T)(Double)(double)jsonData.asFloat();
				if (type == String.class) return (T)Float.toString(jsonData.asFloat());
				if (type == short.class || type == Short.class) return (T)(Short)(short)jsonData.asInt();
				if (type == byte.class || type == Byte.class) return (T)(Byte)(byte)jsonData.asInt();
			} catch (NumberFormatException ignored) {
			}
			jsonData = new JsonValue(jsonData.asString());
		}

		if (jsonData.isBoolean()) {
			try {
				if (type == null || type == boolean.class || type == Boolean.class) return (T)(Boolean)jsonData.asBoolean();
			} catch (NumberFormatException ignored) {
			}
			jsonData = new JsonValue(jsonData.asString());
		}

		if (jsonData.isString()) {
			String string = jsonData.asString();
			if (type == null || type == String.class) return (T)string;
			try {
				if (type == int.class || type == Integer.class) return (T)Integer.valueOf(string);
				if (type == float.class || type == Float.class) return (T)Float.valueOf(string);
				if (type == long.class || type == Long.class) return (T)Long.valueOf(string);
				if (type == double.class || type == Double.class) return (T)Double.valueOf(string);
				if (type == short.class || type == Short.class) return (T)Short.valueOf(string);
				if (type == byte.class || type == Byte.class) return (T)Byte.valueOf(string);
			} catch (NumberFormatException ignored) {
			}
			if (type == boolean.class || type == Boolean.class) return (T)Boolean.valueOf(string);
			if (type == char.class || type == Character.class) return (T)(Character)string.charAt(0);
			if (ClassReflection.isAssignableFrom(Enum.class, type)) {
				Object[] constants = type.getEnumConstants();
				for (int i = 0, n = constants.length; i < n; i++)
					if (string.equals(constants[i].toString())) return (T)constants[i];
			}
			if (type == CharSequence.class) return (T)string;
			throw new SerializationException("Unable to convert value to required type: " + jsonData + " (" + type.getName() + ")");
		}

		return null;
	} ##FSTMerge## public <T> T readValue (Class<T> type, Class elementType, JsonValue jsonData) {
		if (jsonData == null) return null;

		if (jsonData.isObject()) {
			String className = typeName == null ? null : jsonData.getString(typeName, null);
			if (className != null) {
				jsonData.remove(typeName);
				try {
					type = (Class<T>)ClassReflection.forName(className);
				} catch (ReflectionException ex) {
					type = tagToClass.get(className);
					if (type == null) throw new SerializationException(ex);
				}
			}

			Object object;
			if (type != null) {
				if (type == String.class || type == Integer.class || type == Boolean.class || type == Float.class
					|| type == Long.class || type == Double.class || type == Short.class || type == Byte.class
					|| type == Character.class || type.isEnum()) {
					return readValue("value", type, jsonData);
				}

				Serializer serializer = classToSerializer.get(type);
				if (serializer != null) return (T)serializer.read(this, jsonData, type);

				object = newInstance(type);

				if (object instanceof Serializable) {
					((Serializable)object).read(this, jsonData);
					return (T)object;
				}

				if (object instanceof HashMap) {
					HashMap result = (HashMap)object;
					for (JsonValue child = jsonData.child(); child != null; child = child.next())
						result.put(child.name(), readValue(elementType, null, child));
					return (T)result;
				}
			} else if (defaultSerializer != null) {
				return (T)defaultSerializer.read(this, jsonData, type);
			} else
				return (T)jsonData;

			if (object instanceof ObjectMap) {
				ObjectMap result = (ObjectMap)object;
				for (JsonValue child = jsonData.child(); child != null; child = child.next())
					result.put(child.name(), readValue(elementType, null, child));
				return (T)result;
			}
			readFields(object, jsonData);
			return (T)object;
		}

		if (type != null) {
			Serializer serializer = classToSerializer.get(type);
			if (serializer != null) return (T)serializer.read(this, jsonData, type);
		}

		if (jsonData.isArray()) {
			if ((type == null || type == Object.class) || ClassReflection.isAssignableFrom(Array.class, type)) {
				Array newArray = (type == null || type == Object.class) ? new Array() : (Array)newInstance(type);
				for (JsonValue child = jsonData.child(); child != null; child = child.next())
					newArray.add(readValue(elementType, null, child));
				return (T)newArray;
			}
			if (ClassReflection.isAssignableFrom(List.class, type)) {
				List newArray = type == null ? new ArrayList() : (List)newInstance(type);
				for (JsonValue child = jsonData.child(); child != null; child = child.next())
					newArray.add(readValue(elementType, null, child));
				return (T)newArray;
			}
			if (type.isArray()) {
				Class componentType = type.getComponentType();
				if (elementType == null) elementType = componentType;
				Object newArray = ArrayReflection.newInstance(componentType, jsonData.size());
				int i = 0;
				for (JsonValue child = jsonData.child(); child != null; child = child.next())
					ArrayReflection.set(newArray, i++, readValue(elementType, null, child));
				return (T)newArray;
			}
			throw new SerializationException("Unable to convert value to required type: " + jsonData + " (" + type.getName() + ")");
		}

		if (jsonData.isNumber()) {
			try {
				if (type == null || type == float.class || type == Float.class) return (T)(Float)jsonData.asFloat();
				if (type == int.class || type == Integer.class) return (T)(Integer)jsonData.asInt();
				if (type == long.class || type == Long.class) return (T)(Long)jsonData.asLong();
				if (type == double.class || type == Double.class) return (T)(Double)(double)jsonData.asFloat();
				if (type == String.class) return (T)Float.toString(jsonData.asFloat());
				if (type == short.class || type == Short.class) return (T)(Short)(short)jsonData.asInt();
				if (type == byte.class || type == Byte.class) return (T)(Byte)(byte)jsonData.asInt();
			} catch (NumberFormatException ignored) {
			}
			jsonData = new JsonValue(jsonData.asString());
		}

		if (jsonData.isBoolean()) {
			try {
				if (type == null || type == boolean.class || type == Boolean.class) return (T)(Boolean)jsonData.asBoolean();
			} catch (NumberFormatException ignored) {
			}
			jsonData = new JsonValue(jsonData.asString());
		}

		if (jsonData.isString()) {
			String string = jsonData.asString();
			if (type == null || type == String.class) return (T)string;
			try {
				if (type == int.class || type == Integer.class) return (T)Integer.valueOf(string);
				if (type == float.class || type == Float.class) return (T)Float.valueOf(string);
				if (type == long.class || type == Long.class) return (T)Long.valueOf(string);
				if (type == double.class || type == Double.class) return (T)Double.valueOf(string);
				if (type == short.class || type == Short.class) return (T)Short.valueOf(string);
				if (type == byte.class || type == Byte.class) return (T)Byte.valueOf(string);
			} catch (NumberFormatException ignored) {
			}
			if (type == boolean.class || type == Boolean.class) return (T)Boolean.valueOf(string);
			if (type == char.class || type == Character.class) return (T)(Character)string.charAt(0);
			if (ClassReflection.isAssignableFrom(Enum.class, type)) {
				Object[] constants = type.getEnumConstants();
				for (int i = 0, n = constants.length; i < n; i++)
					if (string.equals(constants[i].toString())) return (T)constants[i];
			}
			if (type == CharSequence.class) return (T)string;
			throw new SerializationException("Unable to convert value to required type: " + jsonData + " (" + type.getName() + ")");
		}

		return null;
	} ##FSTMerge## public <T> T readValue (Class<T> type, Class elementType, JsonValue jsonData) {
		if (jsonData == null) return null;

		if (jsonData.isObject()) {
			String className = typeName == null ? null : jsonData.getString(typeName, null);
			if (className != null) {
				jsonData.remove(typeName);
				try {
					type = (Class<T>)ClassReflection.forName(className);
				} catch (ReflectionException ex) {
					type = tagToClass.get(className);
					if (type == null) throw new SerializationException(ex);
				}
			}

			Object object;
			if (type != null) {
				if (type == String.class || type == Integer.class || type == Boolean.class || type == Float.class
					|| type == Long.class || type == Double.class || type == Short.class || type == Byte.class
					|| type == Character.class || type.isEnum()) {
					return readValue("value", type, jsonData);
				}

				Serializer serializer = classToSerializer.get(type);
				if (serializer != null) return (T)serializer.read(this, jsonData, type);

				object = newInstance(type);

				if (object instanceof Serializable) {
					((Serializable)object).read(this, jsonData);
					return (T)object;
				}

				if (object instanceof HashMap) {
					HashMap result = (HashMap)object;
					for (JsonValue child = jsonData.child(); child != null; child = child.next())
						result.put(child.name(), readValue(elementType, null, child));
					return (T)result;
				}
			} else if (defaultSerializer != null) {
				return (T)defaultSerializer.read(this, jsonData, type);
			} else
				return (T)jsonData;

			if (object instanceof ObjectMap) {
				ObjectMap result = (ObjectMap)object;
				for (JsonValue child = jsonData.child(); child != null; child = child.next())
					result.put(child.name(), readValue(elementType, null, child));
				return (T)result;
			}
			readFields(object, jsonData);
			return (T)object;
		}

		if (type != null) {
			Serializer serializer = classToSerializer.get(type);
			if (serializer != null) return (T)serializer.read(this, jsonData, type);
		}

		if (jsonData.isArray()) {
			if ((type == null || type == Object.class) || ClassReflection.isAssignableFrom(Array.class, type)) {
				Array newArray = (type == null || type == Object.class) ? new Array() : (Array)newInstance(type);
				for (JsonValue child = jsonData.child(); child != null; child = child.next())
					newArray.add(readValue(elementType, null, child));
				return (T)newArray;
			}
			if (ClassReflection.isAssignableFrom(List.class, type)) {
				List newArray = (type == null || type.isInterface()) ? new ArrayList() : (List)newInstance(type);
				for (JsonValue child = jsonData.child(); child != null; child = child.next())
					newArray.add(readValue(elementType, null, child));
				return (T)newArray;
			}
			if (type.isArray()) {
				Class componentType = type.getComponentType();
				if (elementType == null) elementType = componentType;
				Object newArray = ArrayReflection.newInstance(componentType, jsonData.size);
				int i = 0;
				for (JsonValue child = jsonData.child(); child != null; child = child.next())
					ArrayReflection.set(newArray, i++, readValue(elementType, null, child));
				return (T)newArray;
			}
			throw new SerializationException("Unable to convert value to required type: " + jsonData + " (" + type.getName() + ")");
		}

		if (jsonData.isNumber()) {
			try {
				if (type == null || type == float.class || type == Float.class) return (T)(Float)jsonData.asFloat();
				if (type == int.class || type == Integer.class) return (T)(Integer)jsonData.asInt();
				if (type == long.class || type == Long.class) return (T)(Long)jsonData.asLong();
				if (type == double.class || type == Double.class) return (T)(Double)(double)jsonData.asFloat();
				if (type == String.class) return (T)Float.toString(jsonData.asFloat());
				if (type == short.class || type == Short.class) return (T)(Short)(short)jsonData.asInt();
				if (type == byte.class || type == Byte.class) return (T)(Byte)(byte)jsonData.asInt();
			} catch (NumberFormatException ignored) {
			}
			jsonData = new JsonValue(jsonData.asString());
		}

		if (jsonData.isBoolean()) {
			try {
				if (type == null || type == boolean.class || type == Boolean.class) return (T)(Boolean)jsonData.asBoolean();
			} catch (NumberFormatException ignored) {
			}
			jsonData = new JsonValue(jsonData.asString());
		}

		if (jsonData.isString()) {
			String string = jsonData.asString();
			if (type == null || type == String.class) return (T)string;
			try {
				if (type == int.class || type == Integer.class) return (T)Integer.valueOf(string);
				if (type == float.class || type == Float.class) return (T)Float.valueOf(string);
				if (type == long.class || type == Long.class) return (T)Long.valueOf(string);
				if (type == double.class || type == Double.class) return (T)Double.valueOf(string);
				if (type == short.class || type == Short.class) return (T)Short.valueOf(string);
				if (type == byte.class || type == Byte.class) return (T)Byte.valueOf(string);
			} catch (NumberFormatException ignored) {
			}
			if (type == boolean.class || type == Boolean.class) return (T)Boolean.valueOf(string);
			if (type == char.class || type == Character.class) return (T)(Character)string.charAt(0);
			if (ClassReflection.isAssignableFrom(Enum.class, type)) {
				Object[] constants = type.getEnumConstants();
				for (int i = 0, n = constants.length; i < n; i++)
					if (string.equals(constants[i].toString())) return (T)constants[i];
			}
			if (type == CharSequence.class) return (T)string;
			throw new SerializationException("Unable to convert value to required type: " + jsonData + " (" + type.getName() + ")");
		}

		return null;
	}
File path: /tmp/downloads/libgdx/revisions/rev_0f674_d1a9a/rev_0f674-d1a9a/gdx/src/com/badlogic/gdx/utils/Json.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 5db3f4168f23444be9408ff3ffe38dc7337fc6c3
Parent1 SHA-1: 0f67424d6eaef8f285593434880160de96eebb71
Parent2 SHA-1: d1a9af0063921681c4a1e87cbb7f3a6f32106f7f
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ private void generateLookups () {
		p("Map<String, Type> types = new HashMap<String, Type>();");

		TypeOracle typeOracle = context.getTypeOracle();
		JPackage[] packages = typeOracle.getPackages();

		// gather all types from wanted packages
		for (JPackage p : packages) {
			for (JClassType t : p.getTypes()) {
				gatherTypes(t.getErasedType(), types);
			}
		}

		gatherTypes(typeOracle.findType("java.util.List").getErasedType(), types);
		gatherTypes(typeOracle.findType("java.util.ArrayList").getErasedType(), types);
		gatherTypes(typeOracle.findType("java.util.HashMap").getErasedType(), types);
		gatherTypes(typeOracle.findType("java.util.Map").getErasedType(), types);
		gatherTypes(typeOracle.findType("java.lang.String").getErasedType(), types);
		gatherTypes(typeOracle.findType("java.lang.Boolean").getErasedType(), types);
		gatherTypes(typeOracle.findType("java.lang.Byte").getErasedType(), types);
		gatherTypes(typeOracle.findType("java.lang.Character").getErasedType(), types);
		gatherTypes(typeOracle.findType("java.lang.Short").getErasedType(), types);
		gatherTypes(typeOracle.findType("java.lang.Integer").getErasedType(), types);
		gatherTypes(typeOracle.findType("java.lang.Float").getErasedType(), types);
		gatherTypes(typeOracle.findType("java.lang.CharSequence").getErasedType(), types);
		gatherTypes(typeOracle.findType("java.lang.Double").getErasedType(), types);
		gatherTypes(typeOracle.findType("java.lang.Object").getErasedType(), types);

		// generate Type lookup generator methods.
		int id = 0;
		for (JType t : types) {
			String typeGen = createTypeGenerator(t);
			p("public void c" + (id++) + "() {");
			p(typeGen);
			p("}\n");
		}

		// generate constructor that calls all the type generators
		// that populate the map.
		p("public " + simpleName + "() {");
		for (int i = 0; i < id; i++) {
			p("c" + i + "();");
		}
		p("}");

		// generate field setters/getters
		for (SetterGetterStub stub : setterGetterStubs) {
			String stubSource = generateSetterGetterStub(stub);
			if (stubSource.equals("")) stub.unused = true;
			p(stubSource);
		}

		// generate methods
		for (MethodStub stub : methodStubs) {
			String stubSource = generateMethodStub(stub);
			if (stubSource.equals("")) stub.unused = true;
				p(stubSource);
		}
		logger.log(Type.INFO, types.size() + " types reflected");
	} ##FSTMerge## private void generateLookups () {
		p("Map<String, Type> types = new HashMap<String, Type>();");

		TypeOracle typeOracle = context.getTypeOracle();
		JPackage[] packages = typeOracle.getPackages();

		// gather all types from wanted packages
		for (JPackage p : packages) {
			for (JClassType t : p.getTypes()) {
				gatherTypes(t.getErasedType(), types);
			}
		}

		gatherTypes(typeOracle.findType("java.util.ArrayList").getErasedType(), types);
		gatherTypes(typeOracle.findType("java.util.HashMap").getErasedType(), types);
		gatherTypes(typeOracle.findType("java.util.Map").getErasedType(), types);
		gatherTypes(typeOracle.findType("java.lang.String").getErasedType(), types);
		gatherTypes(typeOracle.findType("java.lang.Boolean").getErasedType(), types);
		gatherTypes(typeOracle.findType("java.lang.Byte").getErasedType(), types);
		gatherTypes(typeOracle.findType("java.lang.Character").getErasedType(), types);
		gatherTypes(typeOracle.findType("java.lang.Short").getErasedType(), types);
		gatherTypes(typeOracle.findType("java.lang.Integer").getErasedType(), types);
		gatherTypes(typeOracle.findType("java.lang.Float").getErasedType(), types);
		gatherTypes(typeOracle.findType("java.lang.CharSequence").getErasedType(), types);
		gatherTypes(typeOracle.findType("java.lang.Double").getErasedType(), types);
		gatherTypes(typeOracle.findType("java.lang.Object").getErasedType(), types);

		// generate Type lookup generator methods.
		int id = 0;
		for (JType t : types) {
			String typeGen = createTypeGenerator(t);
			p("public void c" + (id++) + "() {");
			p(typeGen);
			p("}\n");
		}

		// generate constructor that calls all the type generators
		// that populate the map.
		p("public " + simpleName + "() {");
		for (int i = 0; i < id; i++) {
			p("c" + i + "();");
		}
		p("}");

		// generate field setters/getters
		for (SetterGetterStub stub : setterGetterStubs) {
			String stubSource = generateSetterGetterStub(stub);
			if (stubSource.equals("")) stub.unused = true;
			p(stubSource);
		}

		// generate methods
		for (MethodStub stub : methodStubs) {
			String stubSource = generateMethodStub(stub);
			if (stubSource.equals("")) stub.unused = true;
				p(stubSource);
		}
		logger.log(Type.INFO, types.size() + " types reflected");
	} ##FSTMerge## private void generateLookups () {
		p("Map<String, Type> types = new HashMap<String, Type>();");

		TypeOracle typeOracle = context.getTypeOracle();
		JPackage[] packages = typeOracle.getPackages();

		// gather all types from wanted packages
		for (JPackage p : packages) {
			for (JClassType t : p.getTypes()) {
				gatherTypes(t.getErasedType(), types);
			}
		}

		gatherTypes(typeOracle.findType("java.util.ArrayList").getErasedType(), types);
		gatherTypes(typeOracle.findType("java.util.HashMap").getErasedType(), types);
		gatherTypes(typeOracle.findType("java.util.Map").getErasedType(), types);
		gatherTypes(typeOracle.findType("java.lang.String").getErasedType(), types);
		gatherTypes(typeOracle.findType("java.lang.Boolean").getErasedType(), types);
		gatherTypes(typeOracle.findType("java.lang.Byte").getErasedType(), types);
		gatherTypes(typeOracle.findType("java.lang.Character").getErasedType(), types);
		gatherTypes(typeOracle.findType("java.lang.Short").getErasedType(), types);
		gatherTypes(typeOracle.findType("java.lang.Integer").getErasedType(), types);
		gatherTypes(typeOracle.findType("java.lang.Float").getErasedType(), types);
		gatherTypes(typeOracle.findType("java.lang.CharSequence").getErasedType(), types);
		gatherTypes(typeOracle.findType("java.lang.Double").getErasedType(), types);
		gatherTypes(typeOracle.findType("java.lang.Object").getErasedType(), types);

		// generate Type lookup generator methods.
		int id = 0;
		for (JType t : types) {
			String typeGen = createTypeGenerator(t);
			p("public void c" + (id++) + "() {");
			p(typeGen);
			p("}\n");
		}

		// generate constructor that calls all the type generators
		// that populate the map.
		p("public " + simpleName + "() {");
		for (int i = 0; i < id; i++) {
			p("c" + i + "();");
		}
		p("}");

		// generate field setters/getters
		for (SetterGetterStub stub : setterGetterStubs) {
			String stubSource = generateSetterGetterStub(stub);
			if (stubSource.equals("")) stub.unused = true;
			p(stubSource);
		}

		// generate methods
		for (MethodStub stub : methodStubs) {
			String stubSource = generateMethodStub(stub);
			if (stubSource.equals("")) stub.unused = true;
				p(stubSource);
		}
		logger.log(Type.INFO, types.size() + " types reflected");
	}
File path: /tmp/downloads/libgdx/revisions/rev_0f674_d1a9a/rev_0f674-d1a9a/backends/gdx-backends-gwt/src/com/badlogic/gwtref/gen/ReflectionCacheSourceCreator.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 5db3f4168f23444be9408ff3ffe38dc7337fc6c3
Parent1 SHA-1: 0f67424d6eaef8f285593434880160de96eebb71
Parent2 SHA-1: d1a9af0063921681c4a1e87cbb7f3a6f32106f7f
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ private String generateSetterGetterStub (SetterGetterStub stub) {
		buffer.setLength(0);
		if (stub.enclosingType == null || stub.type == null) {
			logger.log(Type.INFO, "field '" + stub.name + "' in class '" + stub.enclosingType + "' is not accessible as its type '"
				+ stub.type + "' is not public");
			return "";
		}
		if (stub.enclosingType.startsWith("java") || stub.enclosingType.contains("google")) {
			logger.log(Type.INFO, "not emitting code for accessing field " + stub.name + " in class '" + stub.enclosingType
				+ ", either in java.* or GWT related class");
			return "";
		}

		if (stub.type.startsWith("long") || stub.type.contains("java.lang.Long")) {
			logger.log(Type.INFO, "not emitting code for accessing field " + stub.name + " in class '" + stub.enclosingType
				+ " as its of type long which can't be used with JSNI");
			return "";
		}

		stub.enclosingType = stub.enclosingType.replace(".class", "");
		stub.type = stub.type.replace(".class", "");

		pb("public native Object " + stub.getter + "(" + stub.enclosingType + " obj) /*-{");
		if (stub.isStatic)
			pb("   return @" + stub.enclosingType + "::" + stub.name + ";");
		else
			pb("   return obj.@" + stub.enclosingType + "::" + stub.name + ";");
		pb("}-*/;");

		if (!stub.isFinal) {
			String vType = stub.type.equals("int") || stub.type.equals("float") || stub.type.equals("double")
					|| stub.type.equals("boolean") ? stub.type : "Object";
			pb("public native void " + stub.setter + "(" + stub.enclosingType + " obj, " + vType + " value)  /*-{");
			if (stub.isStatic)
				pb("    @" + stub.enclosingType + "::" + stub.name + " = value");
			else
				pb("    obj.@" + stub.enclosingType + "::" + stub.name + " = value;");
			pb("}-*/;");
		}

		return buffer.toString();
	} ##FSTMerge## private String generateSetterGetterStub (SetterGetterStub stub) {
		buffer.setLength(0);
		if (stub.enclosingType == null || stub.type == null) {
			logger.log(Type.INFO, "field '" + stub.name + "' in class '" + stub.enclosingType + "' is not accessible as its type '"
				+ stub.type + "' is not public");
			return "";
		}
		if (stub.enclosingType.startsWith("java") || stub.enclosingType.contains("google")) {
			logger.log(Type.INFO, "not emitting code for accessing field " + stub.name + " in class '" + stub.enclosingType
				+ ", either in java.* or GWT related class");
			return "";
		}

		if (stub.type.startsWith("long") || stub.type.contains("java.lang.Long")) {
			logger.log(Type.INFO, "not emitting code for accessing field " + stub.name + " in class '" + stub.enclosingType
				+ " as its of type long which can't be used with JSNI");
			return "";
		}

		stub.enclosingType = stub.enclosingType.replace(".class", "");
		stub.type = stub.type.replace(".class", "");

		pb("public native Object " + stub.getter + "(" + stub.enclosingType + " obj) /*-{");
		if (stub.isStatic)
			pb("   return @" + stub.enclosingType + "::" + stub.name + ";");
		else
			pb("   return obj.@" + stub.enclosingType + "::" + stub.name + ";");
		pb("}-*/;");

		if (!stub.isFinal) {
			pb("public native void " + stub.setter + "(" + stub.enclosingType + " obj, Object value)  /*-{");
			if (stub.isStatic)
				pb("    @" + stub.enclosingType + "::" + stub.name + " = value");
			else
				pb("    obj.@" + stub.enclosingType + "::" + stub.name + " = value;");
			pb("}-*/;");
		}

		return buffer.toString();
	} ##FSTMerge## private String generateSetterGetterStub (SetterGetterStub stub) {
		buffer.setLength(0);
		if (stub.enclosingType == null || stub.type == null) {
			logger.log(Type.INFO, "field '" + stub.name + "' in class '" + stub.enclosingType + "' is not accessible as its type '"
				+ stub.type + "' is not public");
			return "";
		}
		if (stub.enclosingType.startsWith("java") || stub.enclosingType.contains("google")) {
			logger.log(Type.INFO, "not emitting code for accessing field " + stub.name + " in class '" + stub.enclosingType
				+ ", either in java.* or GWT related class");
			return "";
		}

		if (stub.type.startsWith("long") || stub.type.contains("java.lang.Long")) {
			logger.log(Type.INFO, "not emitting code for accessing field " + stub.name + " in class '" + stub.enclosingType
				+ " as its of type long which can't be used with JSNI");
			return "";
		}

		stub.enclosingType = stub.enclosingType.replace(".class", "");
		stub.type = stub.type.replace(".class", "");

		pb("public native Object " + stub.getter + "(" + stub.enclosingType + " obj) /*-{");
		if (stub.isStatic)
			pb("   return @" + stub.enclosingType + "::" + stub.name + ";");
		else
			pb("   return obj.@" + stub.enclosingType + "::" + stub.name + ";");
		pb("}-*/;");

		if (!stub.isFinal) {
			pb("public native void " + stub.setter + "(" + stub.enclosingType + " obj, Object value)  /*-{");
			if (stub.isStatic)
				pb("    @" + stub.enclosingType + "::" + stub.name + " = value");
			else
				pb("    obj.@" + stub.enclosingType + "::" + stub.name + " = value;");
			pb("}-*/;");
		}

		return buffer.toString();
	}
File path: /tmp/downloads/libgdx/revisions/rev_0f674_d1a9a/rev_0f674-d1a9a/backends/gdx-backends-gwt/src/com/badlogic/gwtref/gen/ReflectionCacheSourceCreator.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 5db3f4168f23444be9408ff3ffe38dc7337fc6c3
Parent1 SHA-1: 0f67424d6eaef8f285593434880160de96eebb71
Parent2 SHA-1: d1a9af0063921681c4a1e87cbb7f3a6f32106f7f
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ private void setF () {
		p("public void set(Field field, Object obj, Object value) throws IllegalAccessException {");
		for (SetterGetterStub stub : setterGetterStubs) {
			if (stub.enclosingType == null || stub.type == null || stub.isFinal || stub.unused) continue;
			if (stub.type.equals("float")){
				p("   if(field.setter.equals(\"" + stub.setter + "\")) " + stub.setter + "((" + stub.enclosingType + ")obj, ((Number) value).floatValue());");
			} else if (stub.type.equals("int")){
				p("   if(field.setter.equals(\"" + stub.setter + "\")) " + stub.setter + "((" + stub.enclosingType + ")obj, ((Number) value).intValue());");
			} else if (stub.type.equals("double")){
				p("   if(field.setter.equals(\"" + stub.setter + "\")) " + stub.setter + "((" + stub.enclosingType + ")obj, ((Number) value).doubleValue());");
			} else if (stub.type.equals("boolean")){
				p("   if(field.setter.equals(\"" + stub.setter + "\")) " + stub.setter + "((" + stub.enclosingType + ")obj, ((Boolean) value).booleanValue());");
			} else {
				p("   if(field.setter.equals(\"" + stub.setter + "\")) " + stub.setter + "((" + stub.enclosingType + ")obj, value);");
			}
		}
		p("}");
	} ##FSTMerge## private void setF () {
		p("public void set(Field field, Object obj, Object value) throws IllegalAccessException {");
		for (SetterGetterStub stub : setterGetterStubs) {
			if (stub.enclosingType == null || stub.type == null || stub.isFinal || stub.unused) continue;
			p("   if(field.setter.equals(\"" + stub.setter + "\")) " + stub.setter + "((" + stub.enclosingType + ")obj, value);");
		}
		p("}");
	} ##FSTMerge## private void setF () {
		p("public void set(Field field, Object obj, Object value) throws IllegalAccessException {");
		p("    String param = field.setter;");
		SwitchedCodeBlocks pc = new SwitchedCodeBlocks();
		for (SetterGetterStub stub : setterGetterStubs) {
			if (stub.enclosingType == null || stub.type == null || stub.isFinal || stub.unused) continue;
			pc.add(stub.setter, stub.setter + "((" + stub.enclosingType + ")obj, value);");
		}
		pc.print();
		p("}");
	}
File path: /tmp/downloads/libgdx/revisions/rev_0f674_d1a9a/rev_0f674-d1a9a/backends/gdx-backends-gwt/src/com/badlogic/gwtref/gen/ReflectionCacheSourceCreator.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 5db3f4168f23444be9408ff3ffe38dc7337fc6c3
Parent1 SHA-1: 0f67424d6eaef8f285593434880160de96eebb71
Parent2 SHA-1: d1a9af0063921681c4a1e87cbb7f3a6f32106f7f
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public final void set(final Attribute attribute) {
		final int idx = indexOf(attribute.type);
		if (idx < 0) {
			enable(attribute.type);
			attributes.add(attribute);
			sorted = false;
		} else {
			attributes.set(idx, attribute);
		}
	} ##FSTMerge## public final void set(final Attribute... attributes) {
		for (final Attribute attr : attributes)
			set(attr);
	} ##FSTMerge##
File path: /tmp/downloads/libgdx/revisions/rev_0f674_d1a9a/rev_0f674-d1a9a/gdx/src/com/badlogic/gdx/graphics/g3d/materials/Material.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 5db3f4168f23444be9408ff3ffe38dc7337fc6c3
Parent1 SHA-1: 0f67424d6eaef8f285593434880160de96eebb71
Parent2 SHA-1: d1a9af0063921681c4a1e87cbb7f3a6f32106f7f
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public Lights add(final BaseLight... lights) {
		for (final BaseLight light : lights)
			add(light);
		return this;
	} ##FSTMerge## public Lights add(BaseLight light) {
		if (light instanceof DirectionalLight)
			directionalLights.add((DirectionalLight)light);
		else if (light instanceof PointLight)
			pointLights.add((PointLight)light);
		else
			throw new GdxRuntimeException("Unknown light type");
		return this;
	} ##FSTMerge##
File path: /tmp/downloads/libgdx/revisions/rev_0f674_d1a9a/rev_0f674-d1a9a/gdx/src/com/badlogic/gdx/graphics/g3d/lights/Lights.java

==================================================================================================================
Revision: /tmp/downloads/libgdx/revisions/rev_886d2_443c0/rev_886d2-443c0.revisions
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: e7fc99c5d7a26e15937a0ac12b3d8c55fdaca3c9
Parent1 SHA-1: 886d2b03b8806e61b2cca276d4d7273620978a68
Parent2 SHA-1: 443c0e4d6d8139f4baa0148f69d734a092314e54
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public static final List<Class<? extends GdxTest>> tests = new ArrayList<Class<? extends GdxTest>>(Arrays.asList(
		AnimationTest.class, AccelerometerTest.class, ActionTest.class, ActionSequenceTest.class, LetterBoxTest3.class,
		GroupTest.class, AlphaTest.class, AtlasIssueTest.class, AssetManagerTest.class, FilterPerformanceTest.class,
		AudioDeviceTest.class, AudioRecorderTest.class, BitmapFontAlignmentTest.class, BitmapFontDistanceFieldTest.class, BitmapFontFlipTest.class,
		GroupCullingTest.class, GestureDetectorTest.class, LabelTest.class, BitmapFontMetricsTest.class, BlitTest.class, TableTest.class,
		BobTest.class, ImageScaleTest.class, TableLayoutTest.class, Box2DTest.class, BulletTestCollection.class, InterpolationTest.class, TouchpadTest.class,
		Box2DTestCollection.class, BufferUtilsTest.class, ImageTest.class, CompassTest.class, ComplexActionTest.class,
		CullTest.class, DeltaTimeTest.class, EarClippingTriangulatorTest.class, EdgeDetectionTest.class, ETC1Test.class, ExitTest.class, FilesTest.class,
		ScrollPaneTest.class, FloatTest.class, FloatTextureTest.class, FrameBufferTest.class, FramebufferToTextureTest.class, FrustumTest.class,
		FullscreenTest.class, Gdx2DTest.class, GroupFadeTest.class, ImmediateModeRendererTest.class, Scene2dTest.class,
		ImmediateModeRendererAlphaTest.class, IndexBufferObjectClassTest.class, TreeTest.class, IndexBufferObjectShaderTest.class,
		InputTest.class, IntegerBitmapFontTest.class, InverseKinematicsTest.class, IsometricTileTest.class,
		KinematicBodyTest.class, LifeCycleTest.class, LineDrawingTest.class, ScrollPane2Test.class, ManagedTest.class,
		ManualBindTest.class, MaterialTest.class, MatrixJNITest.class, MeshMultitextureTest.class, MeshShaderTest.class, MeshTest.class,
		MipMapTest.class, MultitouchTest.class, MusicTest.class, MyFirstTriangle.class, ObjTest.class, OnscreenKeyboardTest.class,
		OrthoCamBorderTest.class, ParallaxTest.class, ParticleEmitterTest.class, PickingTest.class, PixelsPerInchTest.class,
		PixmapBlendingTest.class, PixmapTest.class, PixmapPackerTest.class, PolygonRegionTest.class, PolygonSpriteTest.class, PreferencesTest.class,
		ProjectiveTextureTest.class, Pong.class, ProjectTest.class, RemoteTest.class, RotationTest.class, DragAndDropTest.class,
		SelectTest.class,
		ShaderMultitextureTest.class, ShadowMappingTest.class, PathTest.class, SimpleAnimationTest.class, SimpleDecalTest.class,
		SimpleStageCullingTest.class, SoundTest.class, SpriteCacheTest.class, SpriteCacheOffsetTest.class, LetterBoxTest1.class,
		SpriteBatchRotationTest.class, SpriteBatchShaderTest.class, SpriteBatchTest.class, SpritePerformanceTest.class,
		SpritePerformanceTest2.class, StagePerformanceTest.class, StageTest.class, TerrainTest.class, TextureDataTest.class,
		TextureDownloadTest.class, TextureFormatTest.class, TextureAtlasTest.class, TextInputDialogTest.class,
		TextureRenderTest.class, TileTest.class, UITest.class, VBOVATest.class, VertexArrayTest.class,
		VertexBufferObjectTest.class, VertexArrayClassTest.class, VertexBufferObjectClassTest.class, LetterBoxTest2.class,
		VertexBufferObjectShaderTest.class, VibratorTest.class, WaterRipples.class, HelloTriangle.class,
		SimpleVertexShader.class, ShapeRendererTest.class, MoveSpriteExample.class, UISimpleTest.class,
		// SoundTouchTest.class, Mpg123Test.class, WavTest.class, FreeTypeTest.class,
		// InternationalFontsTest.class, VorbisTest.class
		TextButtonTest.class, TextButtonTestGL2.class, TextureBindTest.class, SortedSpriteTest.class, DelaunayTriangulatorTest.class,
		ExternalMusicTest.class, SoftKeyboardTest.class, DirtyRenderingTest.class, YDownTest.class, ShaderCollectionTest.class,
		ScreenCaptureTest.class, BitmapFontTest.class, LabelScaleTest.class, GamepadTest.class, NetAPITest.class, TideMapAssetManagerTest.class, TideMapDirectLoaderTest.class, TiledMapAssetManagerTest.class, TiledMapBench.class,
		RunnablePostTest.class, Vector2dTest.class, SuperKoalio.class, NinePatchTest.class, Basic3DSceneTest.class, Animation3DTest.class,
		ModelTest.class, Basic3DTest.class, ShaderTest.class, SkeletonTest.class, HexagonalTiledMapTest.class, FogTest.class, TimerTest.class, Bresenham2Test.class)); ##FSTMerge## public static final List<Class<? extends GdxTest>> tests = new ArrayList<Class<? extends GdxTest>>(Arrays.asList(
		AnimationTest.class, AccelerometerTest.class, ActionTest.class, ActionSequenceTest.class, LetterBoxTest3.class,
		GroupTest.class, AlphaTest.class, AtlasIssueTest.class, AssetManagerTest.class, FilterPerformanceTest.class,
		AudioDeviceTest.class, AudioRecorderTest.class, BitmapFontAlignmentTest.class, BitmapFontDistanceFieldTest.class, BitmapFontFlipTest.class,
		GroupCullingTest.class, GestureDetectorTest.class, LabelTest.class, BitmapFontMetricsTest.class, BlitTest.class, TableTest.class,
		BobTest.class, ImageScaleTest.class, TableLayoutTest.class, Box2DTest.class, BulletTestCollection.class, InterpolationTest.class, TouchpadTest.class,
		Box2DTestCollection.class, BufferUtilsTest.class, ImageTest.class, CompassTest.class, ComplexActionTest.class,
		CullTest.class, DeltaTimeTest.class, EarClippingTriangulatorTest.class, EdgeDetectionTest.class, ETC1Test.class, ExitTest.class, FilesTest.class,
		ScrollPaneTest.class, FloatTest.class, FloatTextureTest.class, FrameBufferTest.class, FramebufferToTextureTest.class, FrustumTest.class,
		FullscreenTest.class, Gdx2DTest.class, GroupFadeTest.class, ImmediateModeRendererTest.class, Scene2dTest.class,
		ImmediateModeRendererAlphaTest.class, IndexBufferObjectClassTest.class, TreeTest.class, IndexBufferObjectShaderTest.class,
		InputTest.class, IntegerBitmapFontTest.class, InverseKinematicsTest.class, IsoCamTest.class, IsometricTileTest.class,
		KinematicBodyTest.class, LifeCycleTest.class, LineDrawingTest.class, ScrollPane2Test.class, ManagedTest.class,
		ManualBindTest.class, MaterialTest.class, MatrixJNITest.class, MeshMultitextureTest.class, MeshShaderTest.class, MeshTest.class,
		MipMapTest.class, MultitouchTest.class, MusicTest.class, MyFirstTriangle.class, ObjTest.class, OnscreenKeyboardTest.class,
		OrthoCamBorderTest.class, ParallaxTest.class, ParticleEmitterTest.class, PickingTest.class, PixelsPerInchTest.class,
		PixmapBlendingTest.class, PixmapTest.class, PixmapPackerTest.class, PolygonRegionTest.class, PolygonSpriteTest.class, PreferencesTest.class,
		ProjectiveTextureTest.class, Pong.class, ProjectTest.class, RemoteTest.class, RotationTest.class, DragAndDropTest.class,
		SelectTest.class,
		ShaderMultitextureTest.class, ShadowMappingTest.class, PathTest.class, SimpleAnimationTest.class, SimpleDecalTest.class,
		SimpleStageCullingTest.class, SoundTest.class, SpriteCacheTest.class, SpriteCacheOffsetTest.class, LetterBoxTest1.class,
		SpriteBatchRotationTest.class, SpriteBatchShaderTest.class, SpriteBatchTest.class, SpritePerformanceTest.class,
		SpritePerformanceTest2.class, StagePerformanceTest.class, StageTest.class, TerrainTest.class, TextureDataTest.class,
		TextureDownloadTest.class, TextureFormatTest.class, TextureAtlasTest.class, TextInputDialogTest.class,
		TextureRenderTest.class, TileTest.class, UITest.class, VBOVATest.class, VertexArrayTest.class,
		VertexBufferObjectTest.class, VertexArrayClassTest.class, VertexBufferObjectClassTest.class, LetterBoxTest2.class,
		VertexBufferObjectShaderTest.class, VibratorTest.class, WaterRipples.class, HelloTriangle.class,
		SimpleVertexShader.class, ShapeRendererTest.class, MoveSpriteExample.class, UISimpleTest.class,
		// SoundTouchTest.class, Mpg123Test.class, WavTest.class, FreeTypeTest.class,
		// InternationalFontsTest.class, VorbisTest.class
		TextButtonTest.class, TextButtonTestGL2.class, TextureBindTest.class, SortedSpriteTest.class, DelaunayTriangulatorTest.class,
		ExternalMusicTest.class, SoftKeyboardTest.class, DirtyRenderingTest.class, YDownTest.class, ShaderCollectionTest.class,
		ScreenCaptureTest.class, BitmapFontTest.class, LabelScaleTest.class, GamepadTest.class, NetAPITest.class, TideMapAssetManagerTest.class, TideMapDirectLoaderTest.class, TiledMapAssetManagerTest.class, TiledMapBench.class,
		RunnablePostTest.class, Vector2dTest.class, SuperKoalio.class, NinePatchTest.class, Basic3DSceneTest.class, Animation3DTest.class,
		ModelTest.class, Basic3DTest.class, ShaderTest.class, SkeletonTest.class, HexagonalTiledMapTest.class, FogTest.class, TimerTest.class, Bresenham2Test.class)); ##FSTMerge## public static final List<Class<? extends GdxTest>> tests = new ArrayList<Class<? extends GdxTest>>(Arrays.asList(
		// @off
		AccelerometerTest.class,
		ActionSequenceTest.class,
		ActionTest.class,
		AlphaTest.class,
		Animation3DTest.class,
		AnimationTest.class,
		AssetManagerTest.class,
		AtlasIssueTest.class,
		AudioDeviceTest.class,
		AudioRecorderTest.class,
		Basic3DSceneTest.class,
		Basic3DTest.class,
		BitmapFontAlignmentTest.class,
		BitmapFontDistanceFieldTest.class,
		BitmapFontFlipTest.class,
		BitmapFontMetricsTest.class,
		BitmapFontTest.class,
		BlitTest.class,
		BobTest.class,
		Box2DTest.class,
		Box2DTestCollection.class,
		Bresenham2Test.class,
		BufferUtilsTest.class,
		BulletTestCollection.class,
		CompassTest.class,
		ComplexActionTest.class,
		CullTest.class,
		DelaunayTriangulatorTest.class,
		DeltaTimeTest.class,
		DirtyRenderingTest.class,
		DragAndDropTest.class,
		ETC1Test.class,
		EarClippingTriangulatorTest.class,
		EdgeDetectionTest.class,
		ExitTest.class,
		ExternalMusicTest.class,
		FilesTest.class,
		FilterPerformanceTest.class,
		FloatTest.class,
		FloatTextureTest.class,
		FogTest.class,
		FrameBufferTest.class,
		FramebufferToTextureTest.class,
		FrustumTest.class,
		FullscreenTest.class,
		GamepadTest.class,
		Gdx2DTest.class,
		GestureDetectorTest.class,
		GroupCullingTest.class,
		GroupFadeTest.class,
		GroupTest.class,
		HelloTriangle.class,
		HexagonalTiledMapTest.class,
		ImageScaleTest.class,
		ImageTest.class,
		ImmediateModeRendererAlphaTest.class,
		ImmediateModeRendererTest.class,
		IndexBufferObjectClassTest.class,
		IndexBufferObjectShaderTest.class,
		InputTest.class,
		IntegerBitmapFontTest.class,
		InterpolationTest.class,
		InverseKinematicsTest.class,
		IsoCamTest.class,
		IsometricTileTest.class,
		KinematicBodyTest.class,
		LabelScaleTest.class,
		LabelTest.class,
		LetterBoxTest1.class,
		LetterBoxTest2.class,
		LetterBoxTest3.class,
		LifeCycleTest.class,
		LineDrawingTest.class,
		ManagedTest.class,
		ManualBindTest.class,
		MaterialTest.class,
		MatrixJNITest.class,
		MeshMultitextureTest.class,
		MeshShaderTest.class,
		MeshTest.class,
		MipMapTest.class,
		ModelTest.class,
		MoveSpriteExample.class,
		MultitouchTest.class,
		MusicTest.class,
		MyFirstTriangle.class,
		NetAPITest.class,
		NinePatchTest.class,
		ObjTest.class,
		OnscreenKeyboardTest.class,
		OrthoCamBorderTest.class,
		ParallaxTest.class,
		ParticleEmitterTest.class,
		PathTest.class,
		PickingTest.class,
		PixelsPerInchTest.class,
		PixmapBlendingTest.class,
		PixmapPackerTest.class,
		PixmapTest.class,
		PolygonRegionTest.class,
		PolygonSpriteTest.class,
		Pong.class,
		PreferencesTest.class,
		ProjectTest.class,
		ProjectiveTextureTest.class,
		RemoteTest.class,
		RotationTest.class,
		RunnablePostTest.class,
		Scene2dTest.class,
		ScreenCaptureTest.class,
		ScrollPane2Test.class,
		ScrollPaneScrollBarsTest.class,
		ScrollPaneTest.class,
		SelectTest.class,
		ShaderCollectionTest.class,
		ShaderMultitextureTest.class,
		ShaderTest.class,
		ShadowMappingTest.class,
		ShapeRendererTest.class,
		SimpleAnimationTest.class,
		SimpleDecalTest.class,
		SimpleStageCullingTest.class,
		SimpleVertexShader.class,
		SkeletonTest.class,
		SoftKeyboardTest.class,
		SortedSpriteTest.class,
		SoundTest.class,
		SpriteBatchRotationTest.class,
		SpriteBatchShaderTest.class,
		SpriteBatchTest.class,
		SpriteCacheOffsetTest.class,
		SpriteCacheTest.class,
		SpritePerformanceTest.class,
		SpritePerformanceTest2.class,
		StagePerformanceTest.class,
		StageTest.class,
		SuperKoalio.class,
		TableLayoutTest.class,
		TableTest.class,
		TerrainTest.class,
		TextButtonTest.class,
		TextButtonTestGL2.class,
		TextInputDialogTest.class,
		TextureAtlasTest.class,
		TextureBindTest.class,
		TextureDataTest.class,
		TextureDownloadTest.class,
		TextureFormatTest.class,
		TextureRenderTest.class,
		TideMapAssetManagerTest.class,
		TideMapDirectLoaderTest.class,
		TileTest.class,
		TiledMapAssetManagerTest.class,
		TiledMapBench.class,
		TimerTest.class,
		TouchpadTest.class,
		TreeTest.class,
		UISimpleTest.class,
		UITest.class,
		VBOVATest.class,
		Vector2dTest.class,
		VertexArrayClassTest.class,
		VertexArrayTest.class,
		VertexBufferObjectClassTest.class,
		VertexBufferObjectShaderTest.class,
		VertexBufferObjectTest.class,
		VibratorTest.class,
		WaterRipples.class,
		YDownTest.class
		// @on

		// SoundTouchTest.class, Mpg123Test.class, WavTest.class, FreeTypeTest.class,
		// InternationalFontsTest.class, VorbisTest.class
		));
File path: /tmp/downloads/libgdx/revisions/rev_886d2_443c0/rev_886d2-443c0/tests/gdx-tests/src/com/badlogic/gdx/tests/utils/GdxTests.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: e7fc99c5d7a26e15937a0ac12b3d8c55fdaca3c9
Parent1 SHA-1: 886d2b03b8806e61b2cca276d4d7273620978a68
Parent2 SHA-1: 443c0e4d6d8139f4baa0148f69d734a092314e54
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public OrthographicCamera (float viewportWidth, float viewportHeight, float diamondAngle) {
		this.viewportWidth = viewportWidth;
		this.viewportHeight = viewportHeight;
		this.near = 0;
		findDirectionForIsoView(diamondAngle, 0.00000001f, 20);
		update();
	} ##FSTMerge## public OrthographicCamera (float viewportWidth, float viewportHeight, float diamondAngle) {
		this.viewportWidth = viewportWidth;
		this.viewportHeight = viewportHeight;
		this.near = 0;
		findDirectionForIsoView(diamondAngle, 0.00000001f, 20);
		update();
	}
File path: /tmp/downloads/libgdx/revisions/rev_886d2_443c0/rev_886d2-443c0/gdx/src/com/badlogic/gdx/graphics/OrthographicCamera.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: e7fc99c5d7a26e15937a0ac12b3d8c55fdaca3c9
Parent1 SHA-1: 886d2b03b8806e61b2cca276d4d7273620978a68
Parent2 SHA-1: 443c0e4d6d8139f4baa0148f69d734a092314e54
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void findDirectionForIsoView (float targetAngle, float epsilon, int maxIterations) {
		float start = targetAngle - 5;
		float end = targetAngle + 5;
		float mid = targetAngle;

		int iterations = 0;
		float aMid = 0;
		while (Math.abs(targetAngle - aMid) > epsilon && iterations++ < maxIterations) {
			aMid = calculateAngle(mid);

			if (targetAngle < aMid) {
				end = mid;
			} else {
				start = mid;
			}
			mid = start + (end - start) / 2;
		}
		position.set(calculateDirection(mid));
		position.y = -position.y;
		lookAt(0, 0, 0);
		normalizeUp();
	} ##FSTMerge## public void findDirectionForIsoView (float targetAngle, float epsilon, int maxIterations) {
		float start = targetAngle - 5;
		float end = targetAngle + 5;
		float mid = targetAngle;

		int iterations = 0;
		float aMid = 0;
		while (Math.abs(targetAngle - aMid) > epsilon && iterations++ < maxIterations) {
			aMid = calculateAngle(mid);

			if (targetAngle < aMid) {
				end = mid;
			} else {
				start = mid;
			}
			mid = start + (end - start) / 2;
		}
		position.set(calculateDirection(mid));
		position.y = -position.y;
		lookAt(0, 0, 0);
		normalizeUp();
	}
File path: /tmp/downloads/libgdx/revisions/rev_886d2_443c0/rev_886d2-443c0/gdx/src/com/badlogic/gdx/graphics/OrthographicCamera.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: e7fc99c5d7a26e15937a0ac12b3d8c55fdaca3c9
Parent1 SHA-1: 886d2b03b8806e61b2cca276d4d7273620978a68
Parent2 SHA-1: 443c0e4d6d8139f4baa0148f69d734a092314e54
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private float calculateAngle (float a) {
		Vector3 camPos = calculateDirection(a);
		position.set(camPos.scl(30));
		lookAt(0, 0, 0);
		normalizeUp();
		update();

		Vector3 orig = new Vector3(0, 0, 0);
		Vector3 vec = new Vector3(1, 0, 0);
		project(orig);
		project(vec);
		Vector2 d = new Vector2(vec.x - orig.x, -(vec.y - orig.y));
		return d.angle();
	} ##FSTMerge## private float calculateAngle (float a) {
		Vector3 camPos = calculateDirection(a);
		position.set(camPos.scl(30));
		lookAt(0, 0, 0);
		normalizeUp();
		update();

		Vector3 orig = new Vector3(0, 0, 0);
		Vector3 vec = new Vector3(1, 0, 0);
		project(orig);
		project(vec);
		Vector2 d = new Vector2(vec.x - orig.x, -(vec.y - orig.y));
		return d.angle();
	}
File path: /tmp/downloads/libgdx/revisions/rev_886d2_443c0/rev_886d2-443c0/gdx/src/com/badlogic/gdx/graphics/OrthographicCamera.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: e7fc99c5d7a26e15937a0ac12b3d8c55fdaca3c9
Parent1 SHA-1: 886d2b03b8806e61b2cca276d4d7273620978a68
Parent2 SHA-1: 443c0e4d6d8139f4baa0148f69d734a092314e54
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Vector3 calculateDirection (float angle) {
		Matrix4 transform = new Matrix4();
		Vector3 dir = new Vector3(-1, 0, 1).nor();
		transform.setToRotation(new Vector3(1, 0, 1).nor(), angle);
		dir.mul(transform).nor();
		return dir;
	} ##FSTMerge## private Vector3 calculateDirection (float angle) {
		Matrix4 transform = new Matrix4();
		Vector3 dir = new Vector3(-1, 0, 1).nor();
		transform.setToRotation(new Vector3(1, 0, 1).nor(), angle);
		dir.mul(transform).nor();
		return dir;
	}
File path: /tmp/downloads/libgdx/revisions/rev_886d2_443c0/rev_886d2-443c0/gdx/src/com/badlogic/gdx/graphics/OrthographicCamera.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: e7fc99c5d7a26e15937a0ac12b3d8c55fdaca3c9
Parent1 SHA-1: 886d2b03b8806e61b2cca276d4d7273620978a68
Parent2 SHA-1: 443c0e4d6d8139f4baa0148f69d734a092314e54
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_886d2_443c0/rev_886d2-443c0/tests/gdx-tests/src/com/badlogic/gdx/tests/IsoCamTest.java
############## CONFLICT ##############
Conflict type: ExtendsList
Merge Commit SHA-1: e7fc99c5d7a26e15937a0ac12b3d8c55fdaca3c9
Parent1 SHA-1: 886d2b03b8806e61b2cca276d4d7273620978a68
Parent2 SHA-1: 443c0e4d6d8139f4baa0148f69d734a092314e54
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## extends GdxTest ##FSTMerge## extends GdxTest
File path: /tmp/downloads/libgdx/revisions/rev_886d2_443c0/rev_886d2-443c0/tests/gdx-tests/src/com/badlogic/gdx/tests/IsoCamTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: e7fc99c5d7a26e15937a0ac12b3d8c55fdaca3c9
Parent1 SHA-1: 886d2b03b8806e61b2cca276d4d7273620978a68
Parent2 SHA-1: 443c0e4d6d8139f4baa0148f69d734a092314e54
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static final int TARGET_WIDTH = 480; ##FSTMerge## private static final int TARGET_WIDTH = 480;
File path: /tmp/downloads/libgdx/revisions/rev_886d2_443c0/rev_886d2-443c0/tests/gdx-tests/src/com/badlogic/gdx/tests/IsoCamTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: e7fc99c5d7a26e15937a0ac12b3d8c55fdaca3c9
Parent1 SHA-1: 886d2b03b8806e61b2cca276d4d7273620978a68
Parent2 SHA-1: 443c0e4d6d8139f4baa0148f69d734a092314e54
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static final float UNIT_TO_PIXEL = TARGET_WIDTH * 0.15f; ##FSTMerge## private static final float UNIT_TO_PIXEL = TARGET_WIDTH * 0.15f;
File path: /tmp/downloads/libgdx/revisions/rev_886d2_443c0/rev_886d2-443c0/tests/gdx-tests/src/com/badlogic/gdx/tests/IsoCamTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: e7fc99c5d7a26e15937a0ac12b3d8c55fdaca3c9
Parent1 SHA-1: 886d2b03b8806e61b2cca276d4d7273620978a68
Parent2 SHA-1: 443c0e4d6d8139f4baa0148f69d734a092314e54
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## Texture texture; ##FSTMerge## Texture texture;
File path: /tmp/downloads/libgdx/revisions/rev_886d2_443c0/rev_886d2-443c0/tests/gdx-tests/src/com/badlogic/gdx/tests/IsoCamTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: e7fc99c5d7a26e15937a0ac12b3d8c55fdaca3c9
Parent1 SHA-1: 886d2b03b8806e61b2cca276d4d7273620978a68
Parent2 SHA-1: 443c0e4d6d8139f4baa0148f69d734a092314e54
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## OrthographicCamera cam; ##FSTMerge## OrthographicCamera cam;
File path: /tmp/downloads/libgdx/revisions/rev_886d2_443c0/rev_886d2-443c0/tests/gdx-tests/src/com/badlogic/gdx/tests/IsoCamTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: e7fc99c5d7a26e15937a0ac12b3d8c55fdaca3c9
Parent1 SHA-1: 886d2b03b8806e61b2cca276d4d7273620978a68
Parent2 SHA-1: 443c0e4d6d8139f4baa0148f69d734a092314e54
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## SpriteBatch batch; ##FSTMerge## SpriteBatch batch;
File path: /tmp/downloads/libgdx/revisions/rev_886d2_443c0/rev_886d2-443c0/tests/gdx-tests/src/com/badlogic/gdx/tests/IsoCamTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: e7fc99c5d7a26e15937a0ac12b3d8c55fdaca3c9
Parent1 SHA-1: 886d2b03b8806e61b2cca276d4d7273620978a68
Parent2 SHA-1: 443c0e4d6d8139f4baa0148f69d734a092314e54
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final Sprite[][] sprites = new Sprite[10][10]; ##FSTMerge## final Sprite[][] sprites = new Sprite[10][10];
File path: /tmp/downloads/libgdx/revisions/rev_886d2_443c0/rev_886d2-443c0/tests/gdx-tests/src/com/badlogic/gdx/tests/IsoCamTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: e7fc99c5d7a26e15937a0ac12b3d8c55fdaca3c9
Parent1 SHA-1: 886d2b03b8806e61b2cca276d4d7273620978a68
Parent2 SHA-1: 443c0e4d6d8139f4baa0148f69d734a092314e54
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final Matrix4 matrix = new Matrix4(); ##FSTMerge## final Matrix4 matrix = new Matrix4();
File path: /tmp/downloads/libgdx/revisions/rev_886d2_443c0/rev_886d2-443c0/tests/gdx-tests/src/com/badlogic/gdx/tests/IsoCamTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: e7fc99c5d7a26e15937a0ac12b3d8c55fdaca3c9
Parent1 SHA-1: 886d2b03b8806e61b2cca276d4d7273620978a68
Parent2 SHA-1: 443c0e4d6d8139f4baa0148f69d734a092314e54
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void create () {
		texture = new Texture(Gdx.files.internal("data/badlogicsmall.jpg"));
		float unitsOnX = (float)Math.sqrt(2) * TARGET_WIDTH / (UNIT_TO_PIXEL);
		float pixelsOnX = Gdx.graphics.getWidth() / unitsOnX;
		float unitsOnY = Gdx.graphics.getHeight() / pixelsOnX;
		cam = new OrthographicCamera(unitsOnX, unitsOnY, 25);
		cam.position.scl(30);
		cam.near = 1;
		cam.far = 1000;
		matrix.setToRotation(new Vector3(1, 0, 0), 90);

		for (int z = 0; z < 10; z++) {
			for (int x = 0; x < 10; x++) {
				sprites[x][z] = new Sprite(texture);
				sprites[x][z].setPosition(x, z);
				sprites[x][z].setSize(1, 1);
			}
		}

		batch = new SpriteBatch();

		Gdx.input.setInputProcessor(new IsoCamController(cam));
	} ##FSTMerge## @Override
	public void create () {
		texture = new Texture(Gdx.files.internal("data/badlogicsmall.jpg"));
		float unitsOnX = (float)Math.sqrt(2) * TARGET_WIDTH / (UNIT_TO_PIXEL);
		float pixelsOnX = Gdx.graphics.getWidth() / unitsOnX;
		float unitsOnY = Gdx.graphics.getHeight() / pixelsOnX;
		cam = new OrthographicCamera(unitsOnX, unitsOnY, 25);
		cam.position.scl(30);
		cam.near = 1;
		cam.far = 1000;
		matrix.setToRotation(new Vector3(1, 0, 0), 90);

		for (int z = 0; z < 10; z++) {
			for (int x = 0; x < 10; x++) {
				sprites[x][z] = new Sprite(texture);
				sprites[x][z].setPosition(x, z);
				sprites[x][z].setSize(1, 1);
			}
		}

		batch = new SpriteBatch();

		Gdx.input.setInputProcessor(new IsoCamController(cam));
	}
File path: /tmp/downloads/libgdx/revisions/rev_886d2_443c0/rev_886d2-443c0/tests/gdx-tests/src/com/badlogic/gdx/tests/IsoCamTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: e7fc99c5d7a26e15937a0ac12b3d8c55fdaca3c9
Parent1 SHA-1: 886d2b03b8806e61b2cca276d4d7273620978a68
Parent2 SHA-1: 443c0e4d6d8139f4baa0148f69d734a092314e54
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void dispose () {
		texture.dispose();
		batch.dispose();
	} ##FSTMerge## @Override
	public void dispose () {
		texture.dispose();
		batch.dispose();
	}
File path: /tmp/downloads/libgdx/revisions/rev_886d2_443c0/rev_886d2-443c0/tests/gdx-tests/src/com/badlogic/gdx/tests/IsoCamTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: e7fc99c5d7a26e15937a0ac12b3d8c55fdaca3c9
Parent1 SHA-1: 886d2b03b8806e61b2cca276d4d7273620978a68
Parent2 SHA-1: 443c0e4d6d8139f4baa0148f69d734a092314e54
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void render () {
		Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
		cam.update();

		batch.setProjectionMatrix(cam.combined);
		batch.setTransformMatrix(matrix);
		batch.begin();
		for (int z = 0; z < 10; z++) {
			for (int x = 0; x < 10; x++) {
				sprites[x][z].draw(batch);
			}
		}
		batch.end();

		checkTileTouched();
	} ##FSTMerge## @Override
	public void render () {
		Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
		cam.update();

		batch.setProjectionMatrix(cam.combined);
		batch.setTransformMatrix(matrix);
		batch.begin();
		for (int z = 0; z < 10; z++) {
			for (int x = 0; x < 10; x++) {
				sprites[x][z].draw(batch);
			}
		}
		batch.end();

		checkTileTouched();
	}
File path: /tmp/downloads/libgdx/revisions/rev_886d2_443c0/rev_886d2-443c0/tests/gdx-tests/src/com/badlogic/gdx/tests/IsoCamTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: e7fc99c5d7a26e15937a0ac12b3d8c55fdaca3c9
Parent1 SHA-1: 886d2b03b8806e61b2cca276d4d7273620978a68
Parent2 SHA-1: 443c0e4d6d8139f4baa0148f69d734a092314e54
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final Plane xzPlane = new Plane(new Vector3(0, 1, 0), 0); ##FSTMerge## final Plane xzPlane = new Plane(new Vector3(0, 1, 0), 0);
File path: /tmp/downloads/libgdx/revisions/rev_886d2_443c0/rev_886d2-443c0/tests/gdx-tests/src/com/badlogic/gdx/tests/IsoCamTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: e7fc99c5d7a26e15937a0ac12b3d8c55fdaca3c9
Parent1 SHA-1: 886d2b03b8806e61b2cca276d4d7273620978a68
Parent2 SHA-1: 443c0e4d6d8139f4baa0148f69d734a092314e54
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final Vector3 intersection = new Vector3(); ##FSTMerge## final Vector3 intersection = new Vector3();
File path: /tmp/downloads/libgdx/revisions/rev_886d2_443c0/rev_886d2-443c0/tests/gdx-tests/src/com/badlogic/gdx/tests/IsoCamTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: e7fc99c5d7a26e15937a0ac12b3d8c55fdaca3c9
Parent1 SHA-1: 886d2b03b8806e61b2cca276d4d7273620978a68
Parent2 SHA-1: 443c0e4d6d8139f4baa0148f69d734a092314e54
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## Sprite lastSelectedTile = null; ##FSTMerge## Sprite lastSelectedTile = null;
File path: /tmp/downloads/libgdx/revisions/rev_886d2_443c0/rev_886d2-443c0/tests/gdx-tests/src/com/badlogic/gdx/tests/IsoCamTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: e7fc99c5d7a26e15937a0ac12b3d8c55fdaca3c9
Parent1 SHA-1: 886d2b03b8806e61b2cca276d4d7273620978a68
Parent2 SHA-1: 443c0e4d6d8139f4baa0148f69d734a092314e54
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void checkTileTouched () {
		if (Gdx.input.justTouched()) {
			Ray pickRay = cam.getPickRay(Gdx.input.getX(), Gdx.input.getY());
			Intersector.intersectRayPlane(pickRay, xzPlane, intersection);
			System.out.println(intersection);
			int x = (int)intersection.x;
			int z = (int)intersection.z;
			if (x >= 0 && x < 10 && z >= 0 && z < 10) {
				if (lastSelectedTile != null) lastSelectedTile.setColor(1, 1, 1, 1);
				Sprite sprite = sprites[x][z];
				sprite.setColor(1, 0, 0, 1);
				lastSelectedTile = sprite;
			}
		}
	} ##FSTMerge## private void checkTileTouched () {
		if (Gdx.input.justTouched()) {
			Ray pickRay = cam.getPickRay(Gdx.input.getX(), Gdx.input.getY());
			Intersector.intersectRayPlane(pickRay, xzPlane, intersection);
			System.out.println(intersection);
			int x = (int)intersection.x;
			int z = (int)intersection.z;
			if (x >= 0 && x < 10 && z >= 0 && z < 10) {
				if (lastSelectedTile != null) lastSelectedTile.setColor(1, 1, 1, 1);
				Sprite sprite = sprites[x][z];
				sprite.setColor(1, 0, 0, 1);
				lastSelectedTile = sprite;
			}
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_886d2_443c0/rev_886d2-443c0/tests/gdx-tests/src/com/badlogic/gdx/tests/IsoCamTest.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: e7fc99c5d7a26e15937a0ac12b3d8c55fdaca3c9
Parent1 SHA-1: 886d2b03b8806e61b2cca276d4d7273620978a68
Parent2 SHA-1: 443c0e4d6d8139f4baa0148f69d734a092314e54
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_886d2_443c0/rev_886d2-443c0/tests/gdx-tests/src/com/badlogic/gdx/tests/IsoCamTest.java
############## CONFLICT ##############
Conflict type: ExtendsList
Merge Commit SHA-1: e7fc99c5d7a26e15937a0ac12b3d8c55fdaca3c9
Parent1 SHA-1: 886d2b03b8806e61b2cca276d4d7273620978a68
Parent2 SHA-1: 443c0e4d6d8139f4baa0148f69d734a092314e54
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## extends InputAdapter ##FSTMerge## extends InputAdapter
File path: /tmp/downloads/libgdx/revisions/rev_886d2_443c0/rev_886d2-443c0/tests/gdx-tests/src/com/badlogic/gdx/tests/IsoCamTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: e7fc99c5d7a26e15937a0ac12b3d8c55fdaca3c9
Parent1 SHA-1: 886d2b03b8806e61b2cca276d4d7273620978a68
Parent2 SHA-1: 443c0e4d6d8139f4baa0148f69d734a092314e54
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final Plane xzPlane = new Plane(new Vector3(0, 1, 0), 0); ##FSTMerge## final Plane xzPlane = new Plane(new Vector3(0, 1, 0), 0);
File path: /tmp/downloads/libgdx/revisions/rev_886d2_443c0/rev_886d2-443c0/tests/gdx-tests/src/com/badlogic/gdx/tests/IsoCamTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: e7fc99c5d7a26e15937a0ac12b3d8c55fdaca3c9
Parent1 SHA-1: 886d2b03b8806e61b2cca276d4d7273620978a68
Parent2 SHA-1: 443c0e4d6d8139f4baa0148f69d734a092314e54
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final Vector3 intersection = new Vector3(); ##FSTMerge## final Vector3 intersection = new Vector3();
File path: /tmp/downloads/libgdx/revisions/rev_886d2_443c0/rev_886d2-443c0/tests/gdx-tests/src/com/badlogic/gdx/tests/IsoCamTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: e7fc99c5d7a26e15937a0ac12b3d8c55fdaca3c9
Parent1 SHA-1: 886d2b03b8806e61b2cca276d4d7273620978a68
Parent2 SHA-1: 443c0e4d6d8139f4baa0148f69d734a092314e54
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final Vector3 curr = new Vector3(); ##FSTMerge## final Vector3 curr = new Vector3();
File path: /tmp/downloads/libgdx/revisions/rev_886d2_443c0/rev_886d2-443c0/tests/gdx-tests/src/com/badlogic/gdx/tests/IsoCamTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: e7fc99c5d7a26e15937a0ac12b3d8c55fdaca3c9
Parent1 SHA-1: 886d2b03b8806e61b2cca276d4d7273620978a68
Parent2 SHA-1: 443c0e4d6d8139f4baa0148f69d734a092314e54
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final Vector3 last = new Vector3(-1, -1, -1); ##FSTMerge## final Vector3 last = new Vector3(-1, -1, -1);
File path: /tmp/downloads/libgdx/revisions/rev_886d2_443c0/rev_886d2-443c0/tests/gdx-tests/src/com/badlogic/gdx/tests/IsoCamTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: e7fc99c5d7a26e15937a0ac12b3d8c55fdaca3c9
Parent1 SHA-1: 886d2b03b8806e61b2cca276d4d7273620978a68
Parent2 SHA-1: 443c0e4d6d8139f4baa0148f69d734a092314e54
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final Vector3 delta = new Vector3(); ##FSTMerge## final Vector3 delta = new Vector3();
File path: /tmp/downloads/libgdx/revisions/rev_886d2_443c0/rev_886d2-443c0/tests/gdx-tests/src/com/badlogic/gdx/tests/IsoCamTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: e7fc99c5d7a26e15937a0ac12b3d8c55fdaca3c9
Parent1 SHA-1: 886d2b03b8806e61b2cca276d4d7273620978a68
Parent2 SHA-1: 443c0e4d6d8139f4baa0148f69d734a092314e54
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final Camera camera; ##FSTMerge## final Camera camera;
File path: /tmp/downloads/libgdx/revisions/rev_886d2_443c0/rev_886d2-443c0/tests/gdx-tests/src/com/badlogic/gdx/tests/IsoCamTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: e7fc99c5d7a26e15937a0ac12b3d8c55fdaca3c9
Parent1 SHA-1: 886d2b03b8806e61b2cca276d4d7273620978a68
Parent2 SHA-1: 443c0e4d6d8139f4baa0148f69d734a092314e54
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public IsoCamController (Camera camera) {
			this.camera = camera;
		} ##FSTMerge## public IsoCamController (Camera camera) {
			this.camera = camera;
		}
File path: /tmp/downloads/libgdx/revisions/rev_886d2_443c0/rev_886d2-443c0/tests/gdx-tests/src/com/badlogic/gdx/tests/IsoCamTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: e7fc99c5d7a26e15937a0ac12b3d8c55fdaca3c9
Parent1 SHA-1: 886d2b03b8806e61b2cca276d4d7273620978a68
Parent2 SHA-1: 443c0e4d6d8139f4baa0148f69d734a092314e54
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
		public boolean touchDragged (int x, int y, int pointer) {
			Ray pickRay = camera.getPickRay(x, y);
			Intersector.intersectRayPlane(pickRay, xzPlane, curr);

			if (!(last.x == -1 && last.y == -1 && last.z == -1)) {
				pickRay = camera.getPickRay(last.x, last.y);
				Intersector.intersectRayPlane(pickRay, xzPlane, delta);
				delta.sub(curr);
				camera.position.add(delta.x, 0, delta.z);
			}
			last.set(x, y, 0);
			return false;
		} ##FSTMerge## @Override
		public boolean touchDragged (int x, int y, int pointer) {
			Ray pickRay = camera.getPickRay(x, y);
			Intersector.intersectRayPlane(pickRay, xzPlane, curr);

			if (!(last.x == -1 && last.y == -1 && last.z == -1)) {
				pickRay = camera.getPickRay(last.x, last.y);
				Intersector.intersectRayPlane(pickRay, xzPlane, delta);
				delta.sub(curr);
				camera.position.add(delta.x, 0, delta.z);
			}
			last.set(x, y, 0);
			return false;
		}
File path: /tmp/downloads/libgdx/revisions/rev_886d2_443c0/rev_886d2-443c0/tests/gdx-tests/src/com/badlogic/gdx/tests/IsoCamTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: e7fc99c5d7a26e15937a0ac12b3d8c55fdaca3c9
Parent1 SHA-1: 886d2b03b8806e61b2cca276d4d7273620978a68
Parent2 SHA-1: 443c0e4d6d8139f4baa0148f69d734a092314e54
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
		public boolean touchUp (int x, int y, int pointer, int button) {
			last.set(-1, -1, -1);
			return false;
		} ##FSTMerge## @Override
		public boolean touchUp (int x, int y, int pointer, int button) {
			last.set(-1, -1, -1);
			return false;
		}
File path: /tmp/downloads/libgdx/revisions/rev_886d2_443c0/rev_886d2-443c0/tests/gdx-tests/src/com/badlogic/gdx/tests/IsoCamTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: e7fc99c5d7a26e15937a0ac12b3d8c55fdaca3c9
Parent1 SHA-1: 886d2b03b8806e61b2cca276d4d7273620978a68
Parent2 SHA-1: 443c0e4d6d8139f4baa0148f69d734a092314e54
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public boolean needsGL20 () {
		return false;
	} ##FSTMerge## @Override
	public boolean needsGL20 () {
		return false;
	}
File path: /tmp/downloads/libgdx/revisions/rev_886d2_443c0/rev_886d2-443c0/tests/gdx-tests/src/com/badlogic/gdx/tests/IsoCamTest.java

==================================================================================================================
Revision: /tmp/downloads/libgdx/revisions/rev_92a1e_d5398/rev_92a1e-d5398.revisions

==================================================================================================================
Revision: /tmp/downloads/libgdx/revisions/rev_efeb9_2ba7d/rev_efeb9-2ba7d.revisions
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: b9826b741518c20197ba7870d100d9e04be4d35c
Parent1 SHA-1: efeb979f17f61369e4d284144c1abf5f23822896
Parent2 SHA-1: 2ba7ddfef5a6fd80790dafcec2e079467d6051c0
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public static final List<Class<? extends GdxTest>> tests = new ArrayList<Class<? extends GdxTest>>(Arrays.asList(
		AnimationTest.class, AccelerometerTest.class, ActionTest.class, ActionSequenceTest.class, LetterBoxTest3.class,
		GroupTest.class, AlphaTest.class, AtlasIssueTest.class, AssetManagerTest.class, FilterPerformanceTest.class,
		AudioDeviceTest.class, AudioRecorderTest.class, BitmapFontAlignmentTest.class, BitmapFontDistanceFieldTest.class, BitmapFontFlipTest.class,
		GroupCullingTest.class, GestureDetectorTest.class, LabelTest.class, BitmapFontMetricsTest.class, BlitTest.class, TableTest.class,
		BobTest.class, ImageScaleTest.class, TableLayoutTest.class, Box2DTest.class, BulletTestCollection.class, InterpolationTest.class, TouchpadTest.class,
		Box2DTestCollection.class, BufferUtilsTest.class, ImageTest.class, CompassTest.class, ComplexActionTest.class,
		CullTest.class, DeltaTimeTest.class, EdgeDetectionTest.class, ETC1Test.class, ExitTest.class, FilesTest.class,
		ScrollPaneTest.class, FloatTest.class, FloatTextureTest.class, FrameBufferTest.class, FramebufferToTextureTest.class, FrustumTest.class,
		FullscreenTest.class, Gdx2DTest.class, GroupFadeTest.class, ImmediateModeRendererTest.class, Scene2dTest.class,
		ImmediateModeRendererAlphaTest.class, IndexBufferObjectClassTest.class, TreeTest.class, IndexBufferObjectShaderTest.class,
		InputTest.class, IntegerBitmapFontTest.class, InverseKinematicsTest.class, IsoCamTest.class, IsometricTileTest.class,
		KinematicBodyTest.class, LifeCycleTest.class, LineDrawingTest.class, ScrollPane2Test.class, ManagedTest.class,
		ManualBindTest.class, MaterialTest.class, MatrixJNITest.class, MeshMultitextureTest.class, MeshShaderTest.class, MeshTest.class,
		MipMapTest.class, MultitouchTest.class, MusicTest.class, MyFirstTriangle.class, ObjTest.class, OnscreenKeyboardTest.class,
		OrthoCamBorderTest.class, ParallaxTest.class, ParticleEmitterTest.class, PickingTest.class, PixelsPerInchTest.class,
		PixmapBlendingTest.class, PixmapTest.class, PixmapPackerTest.class, PolygonRegionTest.class, PolygonSpriteTest.class, PreferencesTest.class,
		ProjectiveTextureTest.class, Pong.class, ProjectTest.class, RemoteTest.class, RotationTest.class, DragAndDropTest.class,
		ShaderMultitextureTest.class, ShadowMappingTest.class, PathTest.class, SimpleAnimationTest.class, SimpleDecalTest.class,
		SimpleStageCullingTest.class, SoundTest.class, SpriteCacheTest.class, SpriteCacheOffsetTest.class, LetterBoxTest1.class,
		SpriteBatchRotationTest.class, SpriteBatchShaderTest.class, SpriteBatchTest.class, SpritePerformanceTest.class,
		SpritePerformanceTest2.class, StagePerformanceTest.class, StageTest.class, TerrainTest.class, TextureDataTest.class,
		TextureDownloadTest.class, TextureFormatTest.class, TextureAtlasTest.class, TextInputDialogTest.class,
		TextureRenderTest.class, TileTest.class, UITest.class, VBOVATest.class, VertexArrayTest.class,
		VertexBufferObjectTest.class, VertexArrayClassTest.class, VertexBufferObjectClassTest.class, LetterBoxTest2.class,
		VertexBufferObjectShaderTest.class, VibratorTest.class, WaterRipples.class, HelloTriangle.class,
		SimpleVertexShader.class, ShapeRendererTest.class, MoveSpriteExample.class, UISimpleTest.class,
		// SoundTouchTest.class, Mpg123Test.class, WavTest.class, FreeTypeTest.class,
		// InternationalFontsTest.class, VorbisTest.class
		TextButtonTest.class, TextButtonTestGL2.class, TextureBindTest.class, SortedSpriteTest.class,
		ExternalMusicTest.class, SoftKeyboardTest.class, DirtyRenderingTest.class, YDownTest.class,
		ScreenCaptureTest.class, BitmapFontTest.class, LabelScaleTest.class, GamepadTest.class, NetAPITest.class, TideMapAssetManagerTest.class, TideMapDirectLoaderTest.class, TiledMapAssetManagerTest.class, TiledMapBench.class,
		RunnablePostTest.class, Vector2dTest.class, SuperKoalio.class, NinePatchTest.class, Basic3DSceneTest.class,
		ModelTest.class, Basic3DTest.class, ShaderTest.class, SkeletonTest.class, HexagonalTiledMapTest.class, FogTest.class)); ##FSTMerge## public static final List<Class<? extends GdxTest>> tests = new ArrayList<Class<? extends GdxTest>>(Arrays.asList(
		AnimationTest.class, AccelerometerTest.class, ActionTest.class, ActionSequenceTest.class, LetterBoxTest3.class,
		GroupTest.class, AlphaTest.class, AtlasIssueTest.class, AssetManagerTest.class, FilterPerformanceTest.class,
		AudioDeviceTest.class, AudioRecorderTest.class, BitmapFontAlignmentTest.class, BitmapFontDistanceFieldTest.class, BitmapFontFlipTest.class,
		GroupCullingTest.class, GestureDetectorTest.class, LabelTest.class, BitmapFontMetricsTest.class, BlitTest.class, TableTest.class,
		BobTest.class, ImageScaleTest.class, TableLayoutTest.class, Box2DTest.class, BulletTestCollection.class, InterpolationTest.class, TouchpadTest.class,
		Box2DTestCollection.class, BufferUtilsTest.class, ImageTest.class, CompassTest.class, ComplexActionTest.class,
		CullTest.class, DeltaTimeTest.class, EdgeDetectionTest.class, ETC1Test.class, ExitTest.class, FilesTest.class,
		ScrollPaneTest.class, FloatTest.class, FloatTextureTest.class, FrameBufferTest.class, FramebufferToTextureTest.class, FrustumTest.class,
		FullscreenTest.class, Gdx2DTest.class, GroupFadeTest.class, ImmediateModeRendererTest.class, Scene2dTest.class,
		ImmediateModeRendererAlphaTest.class, IndexBufferObjectClassTest.class, TreeTest.class, IndexBufferObjectShaderTest.class,
		InputTest.class, IntegerBitmapFontTest.class, InverseKinematicsTest.class, IsoCamTest.class, IsometricTileTest.class,
		KinematicBodyTest.class, LifeCycleTest.class, LineDrawingTest.class, ScrollPane2Test.class, ManagedTest.class,
		ManualBindTest.class, MaterialTest.class, MatrixJNITest.class, MeshMultitextureTest.class, MeshShaderTest.class, MeshTest.class,
		MipMapTest.class, MultitouchTest.class, MusicTest.class, MyFirstTriangle.class, ObjTest.class, OnscreenKeyboardTest.class,
		OrthoCamBorderTest.class, ParallaxTest.class, ParticleEmitterTest.class, PickingTest.class, PixelsPerInchTest.class,
		PixmapBlendingTest.class, PixmapTest.class, PixmapPackerTest.class, PolygonRegionTest.class, PolygonSpriteTest.class, PreferencesTest.class,
		ProjectiveTextureTest.class, Pong.class, ProjectTest.class, RemoteTest.class, RotationTest.class, DragAndDropTest.class,
		ShaderMultitextureTest.class, ShadowMappingTest.class, PathTest.class, SimpleAnimationTest.class, SimpleDecalTest.class,
		SimpleStageCullingTest.class, SoundTest.class, SpriteCacheTest.class, SpriteCacheOffsetTest.class, LetterBoxTest1.class,
		SpriteBatchRotationTest.class, SpriteBatchShaderTest.class, SpriteBatchTest.class, SpritePerformanceTest.class,
		SpritePerformanceTest2.class, StagePerformanceTest.class, StageTest.class, TerrainTest.class, TextureDataTest.class,
		TextureDownloadTest.class, TextureFormatTest.class, TextureAtlasTest.class, TextInputDialogTest.class,
		TextureRenderTest.class, TileTest.class, UITest.class, VBOVATest.class, VertexArrayTest.class,
		VertexBufferObjectTest.class, VertexArrayClassTest.class, VertexBufferObjectClassTest.class, LetterBoxTest2.class,
		VertexBufferObjectShaderTest.class, VibratorTest.class, WaterRipples.class, HelloTriangle.class,
		SimpleVertexShader.class, ShapeRendererTest.class, MoveSpriteExample.class, UISimpleTest.class,
		// SoundTouchTest.class, Mpg123Test.class, WavTest.class, FreeTypeTest.class,
		// InternationalFontsTest.class, VorbisTest.class
		TextButtonTest.class, TextButtonTestGL2.class, TextureBindTest.class, SortedSpriteTest.class,
		ExternalMusicTest.class, SoftKeyboardTest.class, DirtyRenderingTest.class, YDownTest.class,
		ScreenCaptureTest.class, BitmapFontTest.class, LabelScaleTest.class, GamepadTest.class, NetAPITest.class, TideMapAssetManagerTest.class, TideMapDirectLoaderTest.class, TiledMapAssetManagerTest.class, TiledMapBench.class,
		RunnablePostTest.class, Vector2dTest.class, SuperKoalio.class, NinePatchTest.class, Basic3DSceneTest.class,
		ModelTest.class, Basic3DTest.class, ShaderTest.class, SkeletonTest.class, HexagonalTiledMapTest.class)); ##FSTMerge## public static final List<Class<? extends GdxTest>> tests = new ArrayList<Class<? extends GdxTest>>(Arrays.asList(
		AnimationTest.class, AccelerometerTest.class, ActionTest.class, ActionSequenceTest.class, LetterBoxTest3.class,
		GroupTest.class, AlphaTest.class, AtlasIssueTest.class, AssetManagerTest.class, FilterPerformanceTest.class,
		AudioDeviceTest.class, AudioRecorderTest.class, BitmapFontAlignmentTest.class, BitmapFontDistanceFieldTest.class, BitmapFontFlipTest.class,
		GroupCullingTest.class, GestureDetectorTest.class, LabelTest.class, BitmapFontMetricsTest.class, BlitTest.class, TableTest.class,
		BobTest.class, ImageScaleTest.class, TableLayoutTest.class, Box2DTest.class, BulletTestCollection.class, InterpolationTest.class, TouchpadTest.class,
		Box2DTestCollection.class, BufferUtilsTest.class, ImageTest.class, CompassTest.class, ComplexActionTest.class,
		CullTest.class, DeltaTimeTest.class, EdgeDetectionTest.class, ETC1Test.class, ExitTest.class, FilesTest.class,
		ScrollPaneTest.class, FloatTest.class, FloatTextureTest.class, FrameBufferTest.class, FramebufferToTextureTest.class, FrustumTest.class,
		FullscreenTest.class, Gdx2DTest.class, GroupFadeTest.class, ImmediateModeRendererTest.class, Scene2dTest.class,
		ImmediateModeRendererAlphaTest.class, IndexBufferObjectClassTest.class, TreeTest.class, IndexBufferObjectShaderTest.class,
		InputTest.class, IntegerBitmapFontTest.class, InverseKinematicsTest.class, IsoCamTest.class, IsometricTileTest.class,
		KinematicBodyTest.class, LifeCycleTest.class, LineDrawingTest.class, ScrollPane2Test.class, ManagedTest.class,
		ManualBindTest.class, MaterialTest.class, MatrixJNITest.class, MeshMultitextureTest.class, MeshShaderTest.class, MeshTest.class,
		MipMapTest.class, MultitouchTest.class, MusicTest.class, MyFirstTriangle.class, ObjTest.class, OnscreenKeyboardTest.class,
		OrthoCamBorderTest.class, ParallaxTest.class, ParticleEmitterTest.class, PickingTest.class, PixelsPerInchTest.class,
		PixmapBlendingTest.class, PixmapTest.class, PixmapPackerTest.class, PolygonRegionTest.class, PolygonSpriteTest.class, PreferencesTest.class,
		ProjectiveTextureTest.class, Pong.class, ProjectTest.class, RemoteTest.class, RotationTest.class, DragAndDropTest.class,
		ShaderMultitextureTest.class, ShadowMappingTest.class, PathTest.class, SimpleAnimationTest.class, SimpleDecalTest.class,
		SimpleStageCullingTest.class, SoundTest.class, SpriteCacheTest.class, SpriteCacheOffsetTest.class, LetterBoxTest1.class,
		SpriteBatchRotationTest.class, SpriteBatchShaderTest.class, SpriteBatchTest.class, SpritePerformanceTest.class,
		SpritePerformanceTest2.class, StagePerformanceTest.class, StageTest.class, TerrainTest.class, TextureDataTest.class,
		TextureDownloadTest.class, TextureFormatTest.class, TextureAtlasTest.class, TextInputDialogTest.class,
		TextureRenderTest.class, TileTest.class, UITest.class, VBOVATest.class, VertexArrayTest.class,
		VertexBufferObjectTest.class, VertexArrayClassTest.class, VertexBufferObjectClassTest.class, LetterBoxTest2.class,
		VertexBufferObjectShaderTest.class, VibratorTest.class, WaterRipples.class, HelloTriangle.class,
		SimpleVertexShader.class, ShapeRendererTest.class, MoveSpriteExample.class, UISimpleTest.class,
		// SoundTouchTest.class, Mpg123Test.class, WavTest.class, FreeTypeTest.class,
		// InternationalFontsTest.class, VorbisTest.class
		TextButtonTest.class, TextButtonTestGL2.class, TextureBindTest.class, SortedSpriteTest.class,
		ExternalMusicTest.class, SoftKeyboardTest.class, DirtyRenderingTest.class, YDownTest.class,
		ScreenCaptureTest.class, BitmapFontTest.class, LabelScaleTest.class, GamepadTest.class, NetAPITest.class, TideMapAssetManagerTest.class, TideMapDirectLoaderTest.class, TiledMapAssetManagerTest.class, TiledMapBench.class,
		RunnablePostTest.class, Vector2dTest.class, SuperKoalio.class, NinePatchTest.class, Basic3DSceneTest.class, Animation3DTest.class,
		ModelTest.class, Basic3DTest.class, ShaderTest.class, SkeletonTest.class, HexagonalTiledMapTest.class));
File path: /tmp/downloads/libgdx/revisions/rev_efeb9_2ba7d/rev_efeb9-2ba7d/tests/gdx-tests/src/com/badlogic/gdx/tests/utils/GdxTests.java

==================================================================================================================
Revision: /tmp/downloads/libgdx/revisions/rev_50e57_4775c/rev_50e57-4775c.revisions
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 082dd16a90a8c8871df0a39bf62e3c04f6b776f9
Parent1 SHA-1: 50e57d2a5df89abfc3ce0a69d1a7a0074fa5f8f6
Parent2 SHA-1: 4775cddebf16f2fcbabbfe8ab21d4efcdbcea4b5
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public static final List<Class<? extends GdxTest>> tests = new ArrayList<Class<? extends GdxTest>>(Arrays.asList(
		AnimationTest.class, AccelerometerTest.class, ActionTest.class, ActionSequenceTest.class, LetterBoxTest3.class,
		GroupTest.class, AlphaTest.class, AtlasIssueTest.class, AssetManagerTest.class, FilterPerformanceTest.class,
		AudioDeviceTest.class, AudioRecorderTest.class, BitmapFontAlignmentTest.class, BitmapFontDistanceFieldTest.class, BitmapFontFlipTest.class,
		GroupCullingTest.class, GestureDetectorTest.class, LabelTest.class, BitmapFontMetricsTest.class, BlitTest.class, TableTest.class,
		BobTest.class, ImageScaleTest.class, TableLayoutTest.class, Box2DTest.class, BulletTestCollection.class, InterpolationTest.class, TouchpadTest.class,
		Box2DTestCollection.class, BufferUtilsTest.class, ImageTest.class, CompassTest.class, ComplexActionTest.class,
		CullTest.class, DeltaTimeTest.class, EdgeDetectionTest.class, ETC1Test.class, ExitTest.class, FilesTest.class,
		ScrollPaneTest.class, FloatTest.class, FloatTextureTest.class, FrameBufferTest.class, FramebufferToTextureTest.class, FrustumTest.class,
		FullscreenTest.class, Gdx2DTest.class, GroupFadeTest.class, ImmediateModeRendererTest.class, Scene2dTest.class,
		ImmediateModeRendererAlphaTest.class, IndexBufferObjectClassTest.class, TreeTest.class, IndexBufferObjectShaderTest.class,
		InputTest.class, IntegerBitmapFontTest.class, InverseKinematicsTest.class, IsoCamTest.class, IsometricTileTest.class,
		KinematicBodyTest.class, LifeCycleTest.class, LineDrawingTest.class, ScrollPane2Test.class, ManagedTest.class,
		ManualBindTest.class, MaterialTest.class, MatrixJNITest.class, MeshMultitextureTest.class, MeshShaderTest.class, MeshTest.class,
		MipMapTest.class, MultitouchTest.class, MusicTest.class, MyFirstTriangle.class, ObjTest.class, OnscreenKeyboardTest.class,
		OrthoCamBorderTest.class, ParallaxTest.class, ParticleEmitterTest.class, PickingTest.class, PixelsPerInchTest.class,
		PixmapBlendingTest.class, PixmapTest.class, PixmapPackerTest.class, PolygonRegionTest.class, PolygonSpriteTest.class, PreferencesTest.class,
		ProjectiveTextureTest.class, Pong.class, ProjectTest.class, RemoteTest.class, RotationTest.class, DragAndDropTest.class,
		ShaderMultitextureTest.class, ShadowMappingTest.class, PathTest.class, SimpleAnimationTest.class, SimpleDecalTest.class,
		SimpleStageCullingTest.class, SoundTest.class, SpriteCacheTest.class, SpriteCacheOffsetTest.class, LetterBoxTest1.class,
		SpriteBatchRotationTest.class, SpriteBatchShaderTest.class, SpriteBatchTest.class, SpritePerformanceTest.class,
		SpritePerformanceTest2.class, StagePerformanceTest.class, StageTest.class, TerrainTest.class, TextureDataTest.class,
		TextureDownloadTest.class, TextureFormatTest.class, TextureAtlasTest.class, TextInputDialogTest.class,
		TextureRenderTest.class, TileTest.class, UITest.class, VBOVATest.class, VertexArrayTest.class,
		VertexBufferObjectTest.class, VertexArrayClassTest.class, VertexBufferObjectClassTest.class, LetterBoxTest2.class,
		VertexBufferObjectShaderTest.class, VibratorTest.class, WaterRipples.class, HelloTriangle.class,
		SimpleVertexShader.class, ShapeRendererTest.class, MoveSpriteExample.class, UISimpleTest.class,
		// SoundTouchTest.class, Mpg123Test.class, WavTest.class, FreeTypeTest.class,
		// InternationalFontsTest.class, VorbisTest.class
		TextButtonTest.class, TextButtonTestGL2.class, TextureBindTest.class, SortedSpriteTest.class,
		ExternalMusicTest.class, SoftKeyboardTest.class, DirtyRenderingTest.class, YDownTest.class,
		ScreenCaptureTest.class, BitmapFontTest.class, LabelScaleTest.class, GamepadTest.class, NetAPITest.class, TideMapAssetManagerTest.class, TideMapDirectLoaderTest.class, TiledMapAssetManagerTest.class, TiledMapBench.class,
		RunnablePostTest.class, Vector2dTest.class, SuperKoalio.class, NinePatchTest.class,
		ModelTest.class, Basic3DTest.class, ShaderTest.class, SkeletonTest.class, HexagonalTiledMapTest.class, FogTest.class)); ##FSTMerge## public static final List<Class<? extends GdxTest>> tests = new ArrayList<Class<? extends GdxTest>>(Arrays.asList(
		AnimationTest.class, AccelerometerTest.class, ActionTest.class, ActionSequenceTest.class, LetterBoxTest3.class,
		GroupTest.class, AlphaTest.class, AtlasIssueTest.class, AssetManagerTest.class, FilterPerformanceTest.class,
		AudioDeviceTest.class, AudioRecorderTest.class, BitmapFontAlignmentTest.class, BitmapFontDistanceFieldTest.class, BitmapFontFlipTest.class,
		GroupCullingTest.class, GestureDetectorTest.class, LabelTest.class, BitmapFontMetricsTest.class, BlitTest.class, TableTest.class,
		BobTest.class, ImageScaleTest.class, TableLayoutTest.class, Box2DTest.class, BulletTestCollection.class, InterpolationTest.class, TouchpadTest.class,
		Box2DTestCollection.class, BufferUtilsTest.class, ImageTest.class, CompassTest.class, ComplexActionTest.class,
		CullTest.class, DeltaTimeTest.class, EdgeDetectionTest.class, ETC1Test.class, ExitTest.class, FilesTest.class,
		ScrollPaneTest.class, FloatTest.class, FloatTextureTest.class, FrameBufferTest.class, FramebufferToTextureTest.class, FrustumTest.class,
		FullscreenTest.class, Gdx2DTest.class, GroupFadeTest.class, ImmediateModeRendererTest.class, Scene2dTest.class,
		ImmediateModeRendererAlphaTest.class, IndexBufferObjectClassTest.class, TreeTest.class, IndexBufferObjectShaderTest.class,
		InputTest.class, IntegerBitmapFontTest.class, InverseKinematicsTest.class, IsoCamTest.class, IsometricTileTest.class,
		KinematicBodyTest.class, LifeCycleTest.class, LineDrawingTest.class, ScrollPane2Test.class, ManagedTest.class,
		ManualBindTest.class, MaterialTest.class, MatrixJNITest.class, MeshMultitextureTest.class, MeshShaderTest.class, MeshTest.class,
		MipMapTest.class, MultitouchTest.class, MusicTest.class, MyFirstTriangle.class, ObjTest.class, OnscreenKeyboardTest.class,
		OrthoCamBorderTest.class, ParallaxTest.class, ParticleEmitterTest.class, PickingTest.class, PixelsPerInchTest.class,
		PixmapBlendingTest.class, PixmapTest.class, PixmapPackerTest.class, PolygonRegionTest.class, PolygonSpriteTest.class, PreferencesTest.class,
		ProjectiveTextureTest.class, Pong.class, ProjectTest.class, RemoteTest.class, RotationTest.class, DragAndDropTest.class,
		ShaderMultitextureTest.class, ShadowMappingTest.class, PathTest.class, SimpleAnimationTest.class, SimpleDecalTest.class,
		SimpleStageCullingTest.class, SoundTest.class, SpriteCacheTest.class, SpriteCacheOffsetTest.class, LetterBoxTest1.class,
		SpriteBatchRotationTest.class, SpriteBatchShaderTest.class, SpriteBatchTest.class, SpritePerformanceTest.class,
		SpritePerformanceTest2.class, StagePerformanceTest.class, StageTest.class, TerrainTest.class, TextureDataTest.class,
		TextureDownloadTest.class, TextureFormatTest.class, TextureAtlasTest.class, TextInputDialogTest.class,
		TextureRenderTest.class, TileTest.class, UITest.class, VBOVATest.class, VertexArrayTest.class,
		VertexBufferObjectTest.class, VertexArrayClassTest.class, VertexBufferObjectClassTest.class, LetterBoxTest2.class,
		VertexBufferObjectShaderTest.class, VibratorTest.class, WaterRipples.class, HelloTriangle.class,
		SimpleVertexShader.class, ShapeRendererTest.class, MoveSpriteExample.class, UISimpleTest.class,
		// SoundTouchTest.class, Mpg123Test.class, WavTest.class, FreeTypeTest.class,
		// InternationalFontsTest.class, VorbisTest.class
		TextButtonTest.class, TextButtonTestGL2.class, TextureBindTest.class, SortedSpriteTest.class,
		ExternalMusicTest.class, SoftKeyboardTest.class, DirtyRenderingTest.class, YDownTest.class,
		ScreenCaptureTest.class, BitmapFontTest.class, LabelScaleTest.class, GamepadTest.class, NetAPITest.class, TideMapAssetManagerTest.class, TideMapDirectLoaderTest.class, TiledMapAssetManagerTest.class, TiledMapBench.class,
		RunnablePostTest.class, Vector2dTest.class, SuperKoalio.class, NinePatchTest.class,
		ModelTest.class, Basic3DTest.class, ShaderTest.class, SkeletonTest.class, HexagonalTiledMapTest.class)); ##FSTMerge## public static final List<Class<? extends GdxTest>> tests = new ArrayList<Class<? extends GdxTest>>(Arrays.asList(
		AnimationTest.class, AccelerometerTest.class, ActionTest.class, ActionSequenceTest.class, LetterBoxTest3.class,
		GroupTest.class, AlphaTest.class, AtlasIssueTest.class, AssetManagerTest.class, FilterPerformanceTest.class,
		AudioDeviceTest.class, AudioRecorderTest.class, BitmapFontAlignmentTest.class, BitmapFontDistanceFieldTest.class, BitmapFontFlipTest.class,
		GroupCullingTest.class, GestureDetectorTest.class, LabelTest.class, BitmapFontMetricsTest.class, BlitTest.class, TableTest.class,
		BobTest.class, ImageScaleTest.class, TableLayoutTest.class, Box2DTest.class, BulletTestCollection.class, InterpolationTest.class, TouchpadTest.class,
		Box2DTestCollection.class, BufferUtilsTest.class, ImageTest.class, CompassTest.class, ComplexActionTest.class,
		CullTest.class, DeltaTimeTest.class, EdgeDetectionTest.class, ETC1Test.class, ExitTest.class, FilesTest.class,
		ScrollPaneTest.class, FloatTest.class, FloatTextureTest.class, FrameBufferTest.class, FramebufferToTextureTest.class, FrustumTest.class,
		FullscreenTest.class, Gdx2DTest.class, GroupFadeTest.class, ImmediateModeRendererTest.class, Scene2dTest.class,
		ImmediateModeRendererAlphaTest.class, IndexBufferObjectClassTest.class, TreeTest.class, IndexBufferObjectShaderTest.class,
		InputTest.class, IntegerBitmapFontTest.class, InverseKinematicsTest.class, IsoCamTest.class, IsometricTileTest.class,
		KinematicBodyTest.class, LifeCycleTest.class, LineDrawingTest.class, ScrollPane2Test.class, ManagedTest.class,
		ManualBindTest.class, MaterialTest.class, MatrixJNITest.class, MeshMultitextureTest.class, MeshShaderTest.class, MeshTest.class,
		MipMapTest.class, MultitouchTest.class, MusicTest.class, MyFirstTriangle.class, ObjTest.class, OnscreenKeyboardTest.class,
		OrthoCamBorderTest.class, ParallaxTest.class, ParticleEmitterTest.class, PickingTest.class, PixelsPerInchTest.class,
		PixmapBlendingTest.class, PixmapTest.class, PixmapPackerTest.class, PolygonRegionTest.class, PolygonSpriteTest.class, PreferencesTest.class,
		ProjectiveTextureTest.class, Pong.class, ProjectTest.class, RemoteTest.class, RotationTest.class, DragAndDropTest.class,
		ShaderMultitextureTest.class, ShadowMappingTest.class, PathTest.class, SimpleAnimationTest.class, SimpleDecalTest.class,
		SimpleStageCullingTest.class, SoundTest.class, SpriteCacheTest.class, SpriteCacheOffsetTest.class, LetterBoxTest1.class,
		SpriteBatchRotationTest.class, SpriteBatchShaderTest.class, SpriteBatchTest.class, SpritePerformanceTest.class,
		SpritePerformanceTest2.class, StagePerformanceTest.class, StageTest.class, TerrainTest.class, TextureDataTest.class,
		TextureDownloadTest.class, TextureFormatTest.class, TextureAtlasTest.class, TextInputDialogTest.class,
		TextureRenderTest.class, TileTest.class, UITest.class, VBOVATest.class, VertexArrayTest.class,
		VertexBufferObjectTest.class, VertexArrayClassTest.class, VertexBufferObjectClassTest.class, LetterBoxTest2.class,
		VertexBufferObjectShaderTest.class, VibratorTest.class, WaterRipples.class, HelloTriangle.class,
		SimpleVertexShader.class, ShapeRendererTest.class, MoveSpriteExample.class, UISimpleTest.class,
		// SoundTouchTest.class, Mpg123Test.class, WavTest.class, FreeTypeTest.class,
		// InternationalFontsTest.class, VorbisTest.class
		TextButtonTest.class, TextButtonTestGL2.class, TextureBindTest.class, SortedSpriteTest.class,
		ExternalMusicTest.class, SoftKeyboardTest.class, DirtyRenderingTest.class, YDownTest.class,
		ScreenCaptureTest.class, BitmapFontTest.class, LabelScaleTest.class, GamepadTest.class, NetAPITest.class, TideMapAssetManagerTest.class, TideMapDirectLoaderTest.class, TiledMapAssetManagerTest.class, TiledMapBench.class,
		RunnablePostTest.class, Vector2dTest.class, SuperKoalio.class, NinePatchTest.class, Basic3DSceneTest.class,
		ModelTest.class, Basic3DTest.class, ShaderTest.class, SkeletonTest.class, HexagonalTiledMapTest.class));
File path: /tmp/downloads/libgdx/revisions/rev_50e57_4775c/rev_50e57-4775c/tests/gdx-tests/src/com/badlogic/gdx/tests/utils/GdxTests.java

==================================================================================================================
Revision: /tmp/downloads/libgdx/revisions/rev_fe398_3a11b/rev_fe398-3a11b.revisions
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 5018aae0c08aea6550e239d09515b42c503742db
Parent1 SHA-1: fe398cf1224ec59b458587894b3d3312b5b5b86c
Parent2 SHA-1: 3a11b5d6cc6b1f39de4046853d9fcc99a8611c55
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ protected  String models[] = new String[] {
		"car.obj", "cube.obj", "scene.obj", "scene2.obj", "sphere.obj", "wheel.obj", 
		"g3d/head.g3db", "g3d/knight.g3dj", "g3d/knight.g3db", "g3d/teapot.g3db", "g3d/fighter.g3db"
	}; ##FSTMerge## protected  String models[] = new String[] {
		"car.obj", "cube.obj", "scene.obj", "scene2.obj", "sphere.obj", "wheel.obj", 
		"g3d/head.g3db", "g3d/knight.g3dj", "g3d/knight.g3db", "g3d/teapot.g3db"
	}; ##FSTMerge## protected  String models[] = new String[] {
		"car.obj", "cube.obj", "scene.obj", "scene2.obj", "sphere.obj", "wheel.obj", 
		"g3d/head.g3db", "g3d/knight.g3dj", "g3d/knight.g3db", "g3d/ship.obj", "g3d/teapot.g3db"
	};
File path: /tmp/downloads/libgdx/revisions/rev_fe398_3a11b/rev_fe398-3a11b/tests/gdx-tests/src/com/badlogic/gdx/tests/g3d/BaseG3dHudTest.java

==================================================================================================================
Revision: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094.revisions
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public static final List<Class<? extends GdxTest>> tests = new ArrayList<Class<? extends GdxTest>>(Arrays.asList(
		AnimationTest.class, AccelerometerTest.class, ActionTest.class, ActionSequenceTest.class,
		GroupTest.class, AlphaTest.class, AtlasIssueTest.class, AssetManagerTest.class, FilterPerformanceTest.class,
		AudioDeviceTest.class, AudioRecorderTest.class, BitmapFontAlignmentTest.class, BitmapFontDistanceFieldTest.class, BitmapFontFlipTest.class,
		GroupCullingTest.class, GestureDetectorTest.class, LabelTest.class, BitmapFontMetricsTest.class, BlitTest.class, TableTest.class,
		BobTest.class, ImageScaleTest.class, TableLayoutTest.class, Box2DTest.class, BulletTestCollection.class, InterpolationTest.class, TouchpadTest.class,
		Box2DTestCollection.class, BufferUtilsTest.class, ImageTest.class, CompassTest.class, ComplexActionTest.class,
		CullTest.class, DeltaTimeTest.class, EdgeDetectionTest.class, ETC1Test.class, ExitTest.class, FilesTest.class,
		ScrollPaneTest.class, FloatTest.class, FloatTextureTest.class, FrameBufferTest.class, FramebufferToTextureTest.class, FrustumTest.class,
		FullscreenTest.class, Gdx2DTest.class, GroupFadeTest.class, ImmediateModeRendererTest.class, Scene2dTest.class,
		ImmediateModeRendererAlphaTest.class, IndexBufferObjectClassTest.class, TreeTest.class, IndexBufferObjectShaderTest.class,
		InputTest.class, IntegerBitmapFontTest.class, InverseKinematicsTest.class, IsoCamTest.class, IsometricTileTest.class,
		KinematicBodyTest.class, LifeCycleTest.class, LineDrawingTest.class, ScrollPane2Test.class, ManagedTest.class,
		ManualBindTest.class, MaterialTest.class, MatrixJNITest.class, MeshMultitextureTest.class, MeshShaderTest.class, MeshTest.class,
		MipMapTest.class, MultitouchTest.class, MusicTest.class, MyFirstTriangle.class, ObjTest.class, OnscreenKeyboardTest.class,
		OrthoCamBorderTest.class, ParallaxTest.class, ParticleEmitterTest.class, PickingTest.class, PixelsPerInchTest.class,
		PixmapBlendingTest.class, PixmapTest.class, PixmapPackerTest.class, PolygonRegionTest.class, PolygonSpriteTest.class, PreferencesTest.class,
		ProjectiveTextureTest.class, Pong.class, ProjectTest.class, RemoteTest.class, RotationTest.class, DragAndDropTest.class,
		ShaderMultitextureTest.class, ShadowMappingTest.class, PathTest.class, SimpleAnimationTest.class, SimpleDecalTest.class,
		SimpleStageCullingTest.class, SoundTest.class, SpriteCacheTest.class, SpriteCacheOffsetTest.class, LetterBoxTest.class,
		SpriteBatchRotationTest.class, SpriteBatchShaderTest.class, SpriteBatchTest.class, SpritePerformanceTest.class,
		SpritePerformanceTest2.class, StagePerformanceTest.class, StageTest.class, TerrainTest.class, TextureDataTest.class,
		TextureDownloadTest.class, TextureFormatTest.class, TextureAtlasTest.class, TextInputDialogTest.class,
		TextureRenderTest.class, TileTest.class, UITest.class, VBOVATest.class, VertexArrayTest.class,
		VertexBufferObjectTest.class, VertexArrayClassTest.class, VertexBufferObjectClassTest.class, LetterBoxTest2.class,
		VertexBufferObjectShaderTest.class, VibratorTest.class, WaterRipples.class, HelloTriangle.class,
		SimpleVertexShader.class, ShapeRendererTest.class, MoveSpriteExample.class, UISimpleTest.class,
		// SoundTouchTest.class, Mpg123Test.class, WavTest.class, FreeTypeTest.class,
		// InternationalFontsTest.class, VorbisTest.class
		TextButtonTest.class, TextButtonTestGL2.class, TextureBindTest.class, SortedSpriteTest.class,
		ExternalMusicTest.class, SoftKeyboardTest.class, DirtyRenderingTest.class, YDownTest.class,
		ScreenCaptureTest.class, BitmapFontTest.class, LabelScaleTest.class, GamepadTest.class, NetAPITest.class, TideMapAssetManagerTest.class, TideMapDirectLoaderTest.class, TiledMapAssetManagerTest.class, TiledMapBench.class,
		RunnablePostTest.class, Vector2dTest.class, SuperKoalio.class, NinePatchTest.class,
		JsonModelLoaderTest.class, BatchRenderTest.class, NewModelTest.class, HexagonalTiledMapTest.class)); ##FSTMerge## public static final List<Class<? extends GdxTest>> tests = new ArrayList<Class<? extends GdxTest>>(Arrays.asList(
		AnimationTest.class, AccelerometerTest.class, ActionTest.class, ActionSequenceTest.class,
		GroupTest.class, AlphaTest.class, AtlasIssueTest.class, AssetManagerTest.class, FilterPerformanceTest.class,
		AudioDeviceTest.class, AudioRecorderTest.class, BitmapFontAlignmentTest.class, BitmapFontDistanceFieldTest.class, BitmapFontFlipTest.class,
		GroupCullingTest.class, GestureDetectorTest.class, LabelTest.class, BitmapFontMetricsTest.class, BlitTest.class, TableTest.class,
		BobTest.class, ImageScaleTest.class, TableLayoutTest.class, Box2DTest.class, BulletTestCollection.class, InterpolationTest.class, TouchpadTest.class,
		Box2DTestCollection.class, BufferUtilsTest.class, ImageTest.class, CompassTest.class, ComplexActionTest.class,
		CullTest.class, DeltaTimeTest.class, EdgeDetectionTest.class, ETC1Test.class, ExitTest.class, FilesTest.class,
		ScrollPaneTest.class, FloatTest.class, FloatTextureTest.class, FrameBufferTest.class, FramebufferToTextureTest.class, FrustumTest.class,
		FullscreenTest.class, Gdx2DTest.class, GroupFadeTest.class, ImmediateModeRendererTest.class, Scene2dTest.class,
		ImmediateModeRendererAlphaTest.class, IndexBufferObjectClassTest.class, TreeTest.class, IndexBufferObjectShaderTest.class,
		InputTest.class, IntegerBitmapFontTest.class, InverseKinematicsTest.class, IsoCamTest.class, IsometricTileTest.class,
		KinematicBodyTest.class, LifeCycleTest.class, LineDrawingTest.class, ScrollPane2Test.class, ManagedTest.class,
		ManualBindTest.class, MaterialTest.class, MatrixJNITest.class, MeshMultitextureTest.class, MeshShaderTest.class, MeshTest.class,
		MipMapTest.class, MultitouchTest.class, MusicTest.class, MyFirstTriangle.class, ObjTest.class, OnscreenKeyboardTest.class,
		OrthoCamBorderTest.class, ParallaxTest.class, ParticleEmitterTest.class, PickingTest.class, PixelsPerInchTest.class,
		PixmapBlendingTest.class, PixmapTest.class, PixmapPackerTest.class, PolygonRegionTest.class, PolygonSpriteTest.class, PreferencesTest.class,
		ProjectiveTextureTest.class, Pong.class, ProjectTest.class, RemoteTest.class, RotationTest.class, DragAndDropTest.class,
		ShaderMultitextureTest.class, ShadowMappingTest.class, PathTest.class, SimpleAnimationTest.class, SimpleDecalTest.class,
		SimpleStageCullingTest.class, SoundTest.class, SpriteCacheTest.class, SpriteCacheOffsetTest.class, LetterBoxTest.class,
		SpriteBatchRotationTest.class, SpriteBatchShaderTest.class, SpriteBatchTest.class, SpritePerformanceTest.class,
		SpritePerformanceTest2.class, StagePerformanceTest.class, StageTest.class, TerrainTest.class, TextureDataTest.class,
		TextureDownloadTest.class, TextureFormatTest.class, TextureAtlasTest.class, TextInputDialogTest.class,
		TextureRenderTest.class, TileTest.class, UITest.class, VBOVATest.class, VertexArrayTest.class,
		VertexBufferObjectTest.class, VertexArrayClassTest.class, VertexBufferObjectClassTest.class, LetterBoxTest2.class,
		VertexBufferObjectShaderTest.class, VibratorTest.class, WaterRipples.class, HelloTriangle.class,
		SimpleVertexShader.class, ShapeRendererTest.class, MoveSpriteExample.class, UISimpleTest.class,
		// SoundTouchTest.class, Mpg123Test.class, WavTest.class, FreeTypeTest.class,
		// InternationalFontsTest.class, VorbisTest.class
		TextButtonTest.class, TextButtonTestGL2.class, TextureBindTest.class, SortedSpriteTest.class,
		ExternalMusicTest.class, SoftKeyboardTest.class, DirtyRenderingTest.class, YDownTest.class,
		ScreenCaptureTest.class, BitmapFontTest.class, LabelScaleTest.class, GamepadTest.class, NetAPITest.class, TideMapAssetManagerTest.class, TideMapDirectLoaderTest.class, TiledMapAssetManagerTest.class, TiledMapBench.class,
		RunnablePostTest.class, Vector2dTest.class, SuperKoalio.class, NinePatchTest.class, HexagonalTiledMapTest.class)); ##FSTMerge## public static final List<Class<? extends GdxTest>> tests = new ArrayList<Class<? extends GdxTest>>(Arrays.asList(
		AnimationTest.class, AccelerometerTest.class, ActionTest.class, ActionSequenceTest.class,
		GroupTest.class, AlphaTest.class, AtlasIssueTest.class, AssetManagerTest.class, FilterPerformanceTest.class,
		AudioDeviceTest.class, AudioRecorderTest.class, BitmapFontAlignmentTest.class, BitmapFontDistanceFieldTest.class, BitmapFontFlipTest.class,
		GroupCullingTest.class, GestureDetectorTest.class, LabelTest.class, BitmapFontMetricsTest.class, BlitTest.class, TableTest.class,
		BobTest.class, ImageScaleTest.class, TableLayoutTest.class, Box2DTest.class, BulletTestCollection.class, InterpolationTest.class, TouchpadTest.class,
		Box2DTestCollection.class, BufferUtilsTest.class, ImageTest.class, CompassTest.class, ComplexActionTest.class,
		CullTest.class, DeltaTimeTest.class, EdgeDetectionTest.class, ETC1Test.class, ExitTest.class, FilesTest.class,
		ScrollPaneTest.class, FloatTest.class, FloatTextureTest.class, FrameBufferTest.class, FramebufferToTextureTest.class, FrustumTest.class,
		FullscreenTest.class, Gdx2DTest.class, GroupFadeTest.class, ImmediateModeRendererTest.class, Scene2dTest.class,
		ImmediateModeRendererAlphaTest.class, IndexBufferObjectClassTest.class, TreeTest.class, IndexBufferObjectShaderTest.class,
		InputTest.class, IntegerBitmapFontTest.class, InverseKinematicsTest.class, IsoCamTest.class, IsometricTileTest.class,
		KinematicBodyTest.class, LifeCycleTest.class, LineDrawingTest.class, ScrollPane2Test.class, ManagedTest.class,
		ManualBindTest.class, MaterialTest.class, MatrixJNITest.class, MeshMultitextureTest.class, MeshShaderTest.class, MeshTest.class,
		MipMapTest.class, MultitouchTest.class, MusicTest.class, MyFirstTriangle.class, ObjTest.class, OnscreenKeyboardTest.class,
		OrthoCamBorderTest.class, ParallaxTest.class, ParticleEmitterTest.class, PickingTest.class, PixelsPerInchTest.class,
		PixmapBlendingTest.class, PixmapTest.class, PixmapPackerTest.class, PolygonRegionTest.class, PolygonSpriteTest.class, PreferencesTest.class,
		ProjectiveTextureTest.class, Pong.class, ProjectTest.class, RemoteTest.class, RotationTest.class, DragAndDropTest.class,
		ShaderMultitextureTest.class, ShadowMappingTest.class, PathTest.class, SimpleAnimationTest.class, SimpleDecalTest.class,
		SimpleStageCullingTest.class, SoundTest.class, SpriteCacheTest.class, SpriteCacheOffsetTest.class, LetterBoxTest.class,
		SpriteBatchRotationTest.class, SpriteBatchShaderTest.class, SpriteBatchTest.class, SpritePerformanceTest.class,
		SpritePerformanceTest2.class, StagePerformanceTest.class, StageTest.class, TerrainTest.class, TextureDataTest.class,
		TextureDownloadTest.class, TextureFormatTest.class, TextureAtlasTest.class, TextInputDialogTest.class,
		TextureRenderTest.class, TileTest.class, UITest.class, VBOVATest.class, VertexArrayTest.class,
		VertexBufferObjectTest.class, VertexArrayClassTest.class, VertexBufferObjectClassTest.class, LetterBoxTest2.class,
		VertexBufferObjectShaderTest.class, VibratorTest.class, WaterRipples.class, HelloTriangle.class,
		SimpleVertexShader.class, ShapeRendererTest.class, MoveSpriteExample.class, UISimpleTest.class,
		// SoundTouchTest.class, Mpg123Test.class, WavTest.class, FreeTypeTest.class,
		// InternationalFontsTest.class, VorbisTest.class
		TextButtonTest.class, TextButtonTestGL2.class, TextureBindTest.class, SortedSpriteTest.class,
		ExternalMusicTest.class, SoftKeyboardTest.class, DirtyRenderingTest.class, YDownTest.class,
		ScreenCaptureTest.class, BitmapFontTest.class, LabelScaleTest.class, GamepadTest.class, NetAPITest.class, TideMapAssetManagerTest.class, TideMapDirectLoaderTest.class, TiledMapAssetManagerTest.class, TiledMapBench.class,
		TiledMapAtlasDirectLoaderTest.class,TiledMapAtlasAssetManagerTest.class,
		RunnablePostTest.class, Vector2dTest.class, SuperKoalio.class, NinePatchTest.class, HexagonalTiledMapTest.class));
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/tests/gdx-tests/src/com/badlogic/gdx/tests/utils/GdxTests.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public static void main (String[] argv) {
		// this is only here for me to debug native code faster
//		new SharedLibraryLoader("../../extensions/gdx-audio/libs/gdx-audio-natives.jar").load("gdx-audio");
//		new SharedLibraryLoader("../../extensions/gdx-image/libs/gdx-image-natives.jar").load("gdx-image");
//		new SharedLibraryLoader("../../extensions/gdx-freetype/libs/gdx-freetype-natives.jar").load("gdx-freetype");
//		new SharedLibraryLoader("../../extensions/gdx-controllers/gdx-controllers-desktop/libs/gdx-controllers-desktop-natives.jar").load("gdx-controllers-desktop");
//		new SharedLibraryLoader("../../gdx/libs/gdx-natives.jar").load("gdx");

		GdxTest test = new NewModelTest();
		LwjglApplicationConfiguration config = new LwjglApplicationConfiguration();
		config.useGL20 = test.needsGL20();
		new LwjglApplication(test, config);
	} ##FSTMerge## public static void main (String[] argv) {
		// this is only here for me to debug native code faster
//		new SharedLibraryLoader("../../extensions/gdx-audio/libs/gdx-audio-natives.jar").load("gdx-audio");
//		new SharedLibraryLoader("../../extensions/gdx-image/libs/gdx-image-natives.jar").load("gdx-image");
//		new SharedLibraryLoader("../../extensions/gdx-freetype/libs/gdx-freetype-natives.jar").load("gdx-freetype");
//		new SharedLibraryLoader("../../extensions/gdx-controllers/gdx-controllers-desktop/libs/gdx-controllers-desktop-natives.jar").load("gdx-controllers-desktop");
//		new SharedLibraryLoader("../../gdx/libs/gdx-natives.jar").load("gdx");

		GdxTest test = new GroupTest();
		LwjglApplicationConfiguration config = new LwjglApplicationConfiguration();
		config.useGL20 = test.needsGL20();
		new LwjglApplication(test, config);
	} ##FSTMerge## public static void main (String[] argv) {
		// this is only here for me to debug native code faster
//		new SharedLibraryLoader("../../extensions/gdx-audio/libs/gdx-audio-natives.jar").load("gdx-audio");
//		new SharedLibraryLoader("../../extensions/gdx-image/libs/gdx-image-natives.jar").load("gdx-image");
//		new SharedLibraryLoader("../../extensions/gdx-freetype/libs/gdx-freetype-natives.jar").load("gdx-freetype");
//		new SharedLibraryLoader("../../extensions/gdx-controllers/gdx-controllers-desktop/libs/gdx-controllers-desktop-natives.jar").load("gdx-controllers-desktop");
//		new SharedLibraryLoader("../../gdx/libs/gdx-natives.jar").load("gdx");

		GdxTest test = new FilesTest();
		LwjglApplicationConfiguration config = new LwjglApplicationConfiguration();
		config.useGL20 = test.needsGL20();
		new LwjglApplication(test, config);
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/tests/gdx-tests-lwjgl/src/com/badlogic/gdx/tests/lwjgl/LwjglDebugStarter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public JsonValue parse (InputStream input) {
		try {
			return parse(new InputStreamReader(input, "ISO-8859-1"));
		} catch (IOException ex) {
			throw new SerializationException(ex);
		}
	} ##FSTMerge## public JsonValue parse (InputStream input) {
		try {
			return parse(new InputStreamReader(input, "ISO-8859-1"));
		} catch (IOException ex) {
			throw new SerializationException(ex);
		}
	} ##FSTMerge## public JsonValue parse (InputStream input) {
		try {
			return parse(new InputStreamReader(input, "ISO-8859-1"));
		} catch (IOException ex) {
			throw new SerializationException(ex);
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/utils/JsonReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public JsonValue parse (FileHandle file) {
		try {
			return parse(file.read());
		} catch (Exception ex) {
			throw new SerializationException("Error parsing file: " + file, ex);
		}
	} ##FSTMerge## public JsonValue parse (FileHandle file) {
		try {
			return parse(file.read());
		} catch (Exception ex) {
			throw new SerializationException("Error parsing file: " + file, ex);
		}
	} ##FSTMerge## public JsonValue parse (FileHandle file) {
		try {
			return parse(file.read());
		} catch (Exception ex) {
			throw new SerializationException("Error parsing file: " + file, ex);
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/utils/JsonReader.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/StillModelNode.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements StillModelInstance ##FSTMerge## implements StillModelInstance
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/StillModelNode.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final private float[] vec3 = {0, 0, 0}; ##FSTMerge## static final private float[] vec3 = {0, 0, 0};
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/StillModelNode.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final public Vector3 origin = new Vector3(); ##FSTMerge## final public Vector3 origin = new Vector3();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/StillModelNode.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final public Vector3 transformedPosition = new Vector3(); ##FSTMerge## final public Vector3 transformedPosition = new Vector3();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/StillModelNode.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final public Matrix4 matrix = new Matrix4(); ##FSTMerge## final public Matrix4 matrix = new Matrix4();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/StillModelNode.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Material[] materials; ##FSTMerge## public Material[] materials;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/StillModelNode.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public float radius; ##FSTMerge## public float radius;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/StillModelNode.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public StillModelNode () {
		this(null);
	} ##FSTMerge## public StillModelNode () {
		this(null);
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/StillModelNode.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public StillModelNode (Material[] materials) {
		this.materials = materials;
	} ##FSTMerge## public StillModelNode (Material[] materials) {
		this.materials = materials;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/StillModelNode.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public Matrix4 getTransform () {
		return matrix;
	} ##FSTMerge## @Override
	public Matrix4 getTransform () {
		return matrix;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/StillModelNode.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public Vector3 getSortCenter () {
		vec3[0] = origin.x;
		vec3[1] = origin.y;
		vec3[2] = origin.z;
		Matrix4.mulVec(matrix.val, vec3);
		transformedPosition.x = vec3[0];
		transformedPosition.y = vec3[1];
		transformedPosition.z = vec3[2];
		return transformedPosition;
	} ##FSTMerge## @Override
	public Vector3 getSortCenter () {
		vec3[0] = origin.x;
		vec3[1] = origin.y;
		vec3[2] = origin.z;
		Matrix4.mulVec(matrix.val, vec3);
		transformedPosition.x = vec3[0];
		transformedPosition.y = vec3[1];
		transformedPosition.z = vec3[2];
		return transformedPosition;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/StillModelNode.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public Material[] getMaterials () {
		return materials;
	} ##FSTMerge## @Override
	public Material[] getMaterials () {
		return materials;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/StillModelNode.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public float getBoundingSphereRadius () {
		return radius;
	} ##FSTMerge## @Override
	public float getBoundingSphereRadius () {
		return radius;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/StillModelNode.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public StillModelNode copy () {
		final StillModelNode copy = new StillModelNode();
		if (materials != null) {
			final int len = materials.length;
			Material[] mats = new Material[len];
			for (int i = 0; i < len; i++) {
				mats[i] = materials[i].copy();
			}
			copy.materials = mats;
		}
		copy.matrix.set(matrix.val);
		copy.origin.set(origin);
		copy.radius = radius;
		copy.transformedPosition.set(transformedPosition);
		return copy;

	} ##FSTMerge## public StillModelNode copy () {
		final StillModelNode copy = new StillModelNode();
		if (materials != null) {
			final int len = materials.length;
			Material[] mats = new Material[len];
			for (int i = 0; i < len; i++) {
				mats[i] = materials[i].copy();
			}
			copy.materials = mats;
		}
		copy.matrix.set(matrix.val);
		copy.origin.set(origin);
		copy.radius = radius;
		copy.transformedPosition.set(transformedPosition);
		return copy;

	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/StillModelNode.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/StillModelInstance.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Matrix4 getTransform (); ##FSTMerge## public Matrix4 getTransform ();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/StillModelInstance.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Vector3 getSortCenter (); ##FSTMerge## public Vector3 getSortCenter ();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/StillModelInstance.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public float getBoundingSphereRadius (); ##FSTMerge## public float getBoundingSphereRadius ();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/StillModelInstance.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Material[] getMaterials (); ##FSTMerge## public Material[] getMaterials ();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/StillModelInstance.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/ModelRenderer.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void begin (); ##FSTMerge## public void begin ();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/ModelRenderer.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void draw (StillModel model, StillModelInstance instance); ##FSTMerge## public void draw (StillModel model, StillModelInstance instance);
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/ModelRenderer.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void draw (AnimatedModel model, AnimatedModelInstance instance); ##FSTMerge## public void draw (AnimatedModel model, AnimatedModelInstance instance);
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/ModelRenderer.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void end (); ##FSTMerge## public void end ();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/ModelRenderer.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/ModelLoaderHints.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final boolean flipV; ##FSTMerge## public final boolean flipV;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/ModelLoaderHints.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ModelLoaderHints (boolean flipV) {
		this.flipV = flipV;
	} ##FSTMerge## public ModelLoaderHints (boolean flipV) {
		this.flipV = flipV;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/ModelLoaderHints.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/AnimatedModelNode.java
############## CONFLICT ##############
Conflict type: ExtendsList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## extends StillModelNode ##FSTMerge## extends StillModelNode
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/AnimatedModelNode.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements AnimatedModelInstance ##FSTMerge## implements AnimatedModelInstance
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/AnimatedModelNode.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public String animation; ##FSTMerge## public String animation;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/AnimatedModelNode.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public float time; ##FSTMerge## public float time;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/AnimatedModelNode.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public boolean looping; ##FSTMerge## public boolean looping;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/AnimatedModelNode.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public AnimatedModelNode() {
		super();
	} ##FSTMerge## public AnimatedModelNode() {
		super();
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/AnimatedModelNode.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public AnimatedModelNode(Material[] materials) {
		super(materials);
	} ##FSTMerge## public AnimatedModelNode(Material[] materials) {
		super(materials);
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/AnimatedModelNode.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public String getAnimation () {
		return animation;
	} ##FSTMerge## @Override
	public String getAnimation () {
		return animation;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/AnimatedModelNode.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public float getAnimationTime () {
		return time;
	} ##FSTMerge## @Override
	public float getAnimationTime () {
		return time;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/AnimatedModelNode.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public boolean isLooping () {
		return looping;
	} ##FSTMerge## @Override
	public boolean isLooping () {
		return looping;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/AnimatedModelNode.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public AnimatedModelNode copy () {
		final AnimatedModelNode copy = new AnimatedModelNode();
		if (materials != null) {
			final int len = materials.length;
			Material[] mats = new Material[len];
			for (int i = 0; i < len; i++) {
				mats[i] = materials[i].copy();
			}
			copy.materials = mats;
		}
		copy.matrix.set(matrix.val);
		copy.origin.set(origin);
		copy.radius = radius;
		copy.transformedPosition.set(transformedPosition);
		copy.animation = animation;
		copy.time = time;
		copy.looping = looping;
		return copy;
	} ##FSTMerge## public AnimatedModelNode copy () {
		final AnimatedModelNode copy = new AnimatedModelNode();
		if (materials != null) {
			final int len = materials.length;
			Material[] mats = new Material[len];
			for (int i = 0; i < len; i++) {
				mats[i] = materials[i].copy();
			}
			copy.materials = mats;
		}
		copy.matrix.set(matrix.val);
		copy.origin.set(origin);
		copy.radius = radius;
		copy.transformedPosition.set(transformedPosition);
		copy.animation = animation;
		copy.time = time;
		copy.looping = looping;
		return copy;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/AnimatedModelNode.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/AnimatedModelInstance.java
############## CONFLICT ##############
Conflict type: ExtendsList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## extends StillModelInstance ##FSTMerge## extends StillModelInstance
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/AnimatedModelInstance.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public String getAnimation (); ##FSTMerge## public String getAnimation ();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/AnimatedModelInstance.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public float getAnimationTime (); ##FSTMerge## public float getAnimationTime ();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/AnimatedModelInstance.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public boolean isLooping (); ##FSTMerge## public boolean isLooping ();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/AnimatedModelInstance.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public abstract ##FSTMerge## public abstract
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/SubMesh.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public String name; ##FSTMerge## public String name;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/SubMesh.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Material material; ##FSTMerge## public Material material;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/SubMesh.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int primitiveType; ##FSTMerge## public int primitiveType;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/SubMesh.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Mesh mesh; ##FSTMerge## public Mesh mesh;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/SubMesh.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public SubMesh (String name, Mesh mesh, int primitiveType, Material material) {
		this.name = name;
		this.setMesh(mesh);
		this.primitiveType = primitiveType;
		this.material = material;
	} ##FSTMerge## public SubMesh (String name, Mesh mesh, int primitiveType, Material material) {
		this.name = name;
		this.setMesh(mesh);
		this.primitiveType = primitiveType;
		this.material = material;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/SubMesh.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public SubMesh (String name, Mesh mesh, int primitiveType) {
		this(name, mesh, primitiveType, null);
	} ##FSTMerge## public SubMesh (String name, Mesh mesh, int primitiveType) {
		this(name, mesh, primitiveType, null);
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/SubMesh.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public abstract void getBoundingBox (BoundingBox bbox); ##FSTMerge## public abstract void getBoundingBox (BoundingBox bbox);
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/SubMesh.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Mesh getMesh() {
		return mesh;
	} ##FSTMerge## public Mesh getMesh() {
		return mesh;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/SubMesh.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void setMesh(Mesh mesh) {
		this.mesh = mesh;
	} ##FSTMerge## public void setMesh(Mesh mesh) {
		this.mesh = mesh;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/SubMesh.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/Model.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void render (); ##FSTMerge## public void render ();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/Model.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void render (ShaderProgram program); ##FSTMerge## public void render (ShaderProgram program);
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/Model.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Model getSubModel (String... subMeshNames); ##FSTMerge## public Model getSubModel (String... subMeshNames);
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/Model.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public SubMesh getSubMesh (String name); ##FSTMerge## public SubMesh getSubMesh (String name);
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/Model.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public SubMesh[] getSubMeshes (); ##FSTMerge## public SubMesh[] getSubMeshes ();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/Model.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void getBoundingBox (BoundingBox bbox); ##FSTMerge## public void getBoundingBox (BoundingBox bbox);
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/Model.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void setMaterials (Material... materials); ##FSTMerge## public void setMaterials (Material... materials);
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/Model.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void setMaterial (Material material); ##FSTMerge## public void setMaterial (Material material);
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/Model.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void dispose (); ##FSTMerge## public void dispose ();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/Model.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/AnimatedModel.java
############## CONFLICT ##############
Conflict type: ExtendsList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## extends Model ##FSTMerge## extends Model
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/AnimatedModel.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void setAnimation (String animation, float time, boolean loop); ##FSTMerge## public void setAnimation (String animation, float time, boolean loop);
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/AnimatedModel.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Animation getAnimation (String name); ##FSTMerge## public Animation getAnimation (String name);
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/AnimatedModel.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Animation[] getAnimations (); ##FSTMerge## public Animation[] getAnimations ();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/AnimatedModel.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/still/StillSubMesh.java
############## CONFLICT ##############
Conflict type: ExtendsList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## extends SubMesh ##FSTMerge## extends SubMesh
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/still/StillSubMesh.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public StillSubMesh (String name, Mesh mesh, int primitiveType, Material material) {
		super(name, mesh, primitiveType, material);
	} ##FSTMerge## public StillSubMesh (String name, Mesh mesh, int primitiveType, Material material) {
		super(name, mesh, primitiveType, material);
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/still/StillSubMesh.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public StillSubMesh (String name, Mesh mesh, int primitiveType) {
		super(name, mesh, primitiveType);
	} ##FSTMerge## public StillSubMesh (String name, Mesh mesh, int primitiveType) {
		super(name, mesh, primitiveType);
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/still/StillSubMesh.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void getBoundingBox (BoundingBox bbox) {
		mesh.calculateBoundingBox(bbox);
	} ##FSTMerge## @Override
	public void getBoundingBox (BoundingBox bbox) {
		mesh.calculateBoundingBox(bbox);
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/still/StillSubMesh.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/still/StillModel.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements Model ##FSTMerge## implements Model
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/still/StillModel.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final public StillSubMesh[] subMeshes; ##FSTMerge## final public StillSubMesh[] subMeshes;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/still/StillModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public StillModel (SubMesh... subMeshes) {
		this.subMeshes = new StillSubMesh[subMeshes.length];
		for (int i = 0; i < subMeshes.length ; ++i) {
			this.subMeshes[i] = (StillSubMesh)subMeshes[i];
		}	
	} ##FSTMerge## public StillModel (SubMesh... subMeshes) {
		this.subMeshes = new StillSubMesh[subMeshes.length];
		for (int i = 0; i < subMeshes.length ; ++i) {
			this.subMeshes[i] = (StillSubMesh)subMeshes[i];
		}	
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/still/StillModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void render () {
		int len = subMeshes.length;
		for (int i = 0; i < len; i++) {
			StillSubMesh subMesh = subMeshes[i];
			if (i == 0) {
				subMesh.material.bind();
			} else if (!subMeshes[i - 1].material.equals(subMesh.material)) {
				subMesh.material.bind();
			}
			subMesh.mesh.render(subMesh.primitiveType);
		}
	} ##FSTMerge## @Override
	public void render () {
		int len = subMeshes.length;
		for (int i = 0; i < len; i++) {
			StillSubMesh subMesh = subMeshes[i];
			if (i == 0) {
				subMesh.material.bind();
			} else if (!subMeshes[i - 1].material.equals(subMesh.material)) {
				subMesh.material.bind();
			}
			subMesh.mesh.render(subMesh.primitiveType);
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/still/StillModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void render (ShaderProgram program) {
		int len = subMeshes.length;
		for (int i = 0; i < len; i++) {
			StillSubMesh subMesh = subMeshes[i];
			if (i == 0) {
				subMesh.material.bind(program);
			} else if (!subMeshes[i - 1].material.equals(subMesh.material)) {
				subMesh.material.bind(program);
			}
			subMesh.mesh.render(program, subMesh.primitiveType);
		}
	} ##FSTMerge## @Override
	public void render (ShaderProgram program) {
		int len = subMeshes.length;
		for (int i = 0; i < len; i++) {
			StillSubMesh subMesh = subMeshes[i];
			if (i == 0) {
				subMesh.material.bind(program);
			} else if (!subMeshes[i - 1].material.equals(subMesh.material)) {
				subMesh.material.bind(program);
			}
			subMesh.mesh.render(program, subMesh.primitiveType);
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/still/StillModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public Model getSubModel (String... subMeshNames) {
		ArrayList<SubMesh> subMeshes = new ArrayList<SubMesh>();
		for (String name : subMeshNames)
			for (StillSubMesh subMesh : this.subMeshes)
				if (name.equals(subMesh.name)) subMeshes.add(subMesh);
		if (subMeshes.size() > 0) return new StillModel(subMeshes.toArray(new StillSubMesh[subMeshes.size()]));
		return null;
	} ##FSTMerge## @Override
	public Model getSubModel (String... subMeshNames) {
		ArrayList<SubMesh> subMeshes = new ArrayList<SubMesh>();
		for (String name : subMeshNames)
			for (StillSubMesh subMesh : this.subMeshes)
				if (name.equals(subMesh.name)) subMeshes.add(subMesh);
		if (subMeshes.size() > 0) return new StillModel(subMeshes.toArray(new StillSubMesh[subMeshes.size()]));
		return null;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/still/StillModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public StillSubMesh getSubMesh (String name) {
		for (StillSubMesh subMesh : subMeshes) {
			if (subMesh.name.equals(name)) return subMesh;
		}
		return null;
	} ##FSTMerge## @Override
	public StillSubMesh getSubMesh (String name) {
		for (StillSubMesh subMesh : subMeshes) {
			if (subMesh.name.equals(name)) return subMesh;
		}
		return null;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/still/StillModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public SubMesh[] getSubMeshes () {
		return subMeshes;
	} ##FSTMerge## @Override
	public SubMesh[] getSubMeshes () {
		return subMeshes;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/still/StillModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void setMaterials (Material... materials) {
		if (materials.length != subMeshes.length)
			throw new UnsupportedOperationException("number of materials must equal number of sub-meshes");
		int len = materials.length;
		for (int i = 0; i < len; i++) {
			subMeshes[i].material = materials[i];
		}
	} ##FSTMerge## @Override
	public void setMaterials (Material... materials) {
		if (materials.length != subMeshes.length)
			throw new UnsupportedOperationException("number of materials must equal number of sub-meshes");
		int len = materials.length;
		for (int i = 0; i < len; i++) {
			subMeshes[i].material = materials[i];
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/still/StillModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void setMaterial (Material material) {
		int len = subMeshes.length;
		for (int i = 0; i < len; i++) {
			subMeshes[i].material = material;
		}
	} ##FSTMerge## @Override
	public void setMaterial (Material material) {
		int len = subMeshes.length;
		for (int i = 0; i < len; i++) {
			subMeshes[i].material = material;
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/still/StillModel.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final static BoundingBox tmpBox = new BoundingBox(); ##FSTMerge## private final static BoundingBox tmpBox = new BoundingBox();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/still/StillModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void getBoundingBox (BoundingBox bbox) {
		bbox.inf();
		for (int i = 0; i < subMeshes.length; i++) {
			subMeshes[i].mesh.calculateBoundingBox(tmpBox);
			bbox.ext(tmpBox);
		}
	} ##FSTMerge## @Override
	public void getBoundingBox (BoundingBox bbox) {
		bbox.inf();
		for (int i = 0; i < subMeshes.length; i++) {
			subMeshes[i].mesh.calculateBoundingBox(tmpBox);
			bbox.ext(tmpBox);
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/still/StillModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void dispose () {
		for (int i = 0; i < subMeshes.length; i++) {
			subMeshes[i].mesh.dispose();
		}
	} ##FSTMerge## @Override
	public void dispose () {
		for (int i = 0; i < subMeshes.length; i++) {
			subMeshes[i].mesh.dispose();
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/still/StillModel.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonSubMesh.java
############## CONFLICT ##############
Conflict type: ExtendsList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## extends SubMesh ##FSTMerge## extends SubMesh
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonSubMesh.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public SkeletonSubMesh (String name, Mesh mesh, int primitiveType) {
		super(name, mesh, primitiveType);
	} ##FSTMerge## public SkeletonSubMesh (String name, Mesh mesh, int primitiveType) {
		super(name, mesh, primitiveType);
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonSubMesh.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public short[] indices; ##FSTMerge## public short[] indices;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonSubMesh.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public float[] vertices; ##FSTMerge## public float[] vertices;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonSubMesh.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public float[] skinnedVertices; ##FSTMerge## public float[] skinnedVertices;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonSubMesh.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int[][] boneAssignments; ##FSTMerge## public int[][] boneAssignments;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonSubMesh.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public float[][] boneWeights; ##FSTMerge## public float[][] boneWeights;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonSubMesh.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void getBoundingBox (BoundingBox bbox) {
		mesh.calculateBoundingBox(bbox);
	} ##FSTMerge## @Override
	public void getBoundingBox (BoundingBox bbox) {
		mesh.calculateBoundingBox(bbox);
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonSubMesh.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void setVertices (float[] vertices) {
		this.vertices = vertices;
	} ##FSTMerge## public void setVertices (float[] vertices) {
		this.vertices = vertices;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonSubMesh.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void setIndices (short[] indices) {
		this.indices = indices;
	} ##FSTMerge## public void setIndices (short[] indices) {
		this.indices = indices;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonSubMesh.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModelGpuSkinned.java
############## CONFLICT ##############
Conflict type: ExtendsList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## extends SkeletonModel ##FSTMerge## extends SkeletonModel
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModelGpuSkinned.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final static String BoneIndexAttribue = "a_boneIndex"; ##FSTMerge## public final static String BoneIndexAttribue = "a_boneIndex";
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModelGpuSkinned.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final static String BoneWeightAttribue = "a_boneWeight"; ##FSTMerge## public final static String BoneWeightAttribue = "a_boneWeight";
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModelGpuSkinned.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public SkeletonModelGpuSkinned(Skeleton skeleton, SkeletonSubMesh[] subMeshes) {
		super(skeleton,subMeshes);
	} ##FSTMerge## public SkeletonModelGpuSkinned(Skeleton skeleton, SkeletonSubMesh[] subMeshes) {
		super(skeleton,subMeshes);
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModelGpuSkinned.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static SkeletonModel CreateFromSkeletonModel(SkeletonModel skeletonModel){
		if (Gdx.gl20 == null){
			return skeletonModel;
		}
		SkeletonModelGpuSkinned model = new SkeletonModelGpuSkinned(skeletonModel.skeleton, skeletonModel.subMeshes);
		model.setupGpuSkin();
		return model;
	} ##FSTMerge## public static SkeletonModel CreateFromSkeletonModel(SkeletonModel skeletonModel){
		if (Gdx.gl20 == null){
			return skeletonModel;
		}
		SkeletonModelGpuSkinned model = new SkeletonModelGpuSkinned(skeletonModel.skeleton, skeletonModel.subMeshes);
		model.setupGpuSkin();
		return model;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModelGpuSkinned.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void setupGpuSkin(){
		for (int i = 0; i < subMeshes.length; i++) {
			setupGpuSkin(subMeshes[i]);
		}
	} ##FSTMerge## public void setupGpuSkin(){
		for (int i = 0; i < subMeshes.length; i++) {
			setupGpuSkin(subMeshes[i]);
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModelGpuSkinned.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void setupGpuSkin(SkeletonSubMesh subMesh){
		VertexAttributes oldAttributes =  subMesh.mesh.getVertexAttributes();
		final int oldAttributeCount = oldAttributes.size();
		VertexAttribute[] attributeArray = new VertexAttribute[oldAttributeCount+2];
		for(int i=0;i<oldAttributeCount;i++){
			attributeArray[i] = oldAttributes.get(i);
		}
		final int boneIndex = oldAttributeCount;
		final int weightIndex = oldAttributeCount+1;
		attributeArray[boneIndex] = new VertexAttribute(Usage.Generic, 4, BoneIndexAttribue);
		attributeArray[weightIndex] = new VertexAttribute(Usage.Generic, 4, BoneWeightAttribue);
		VertexAttributes newAttributes = new VertexAttributes(attributeArray);
		
		//TODO: not sure if I want to generate a new mesh. But VertexAttributes was final inside mesh
		Mesh newMesh = new Mesh(true, subMesh.mesh.getMaxVertices(), subMesh.mesh.getMaxIndices(), newAttributes);
		
		final int stride = subMesh.mesh.getVertexSize() / 4;
		final int newStride = newMesh.getVertexSize() / 4;
		final int numVertices = subMesh.mesh.getNumVertices();
		int idx = 0;
		int newIdx = 0;
		int bidx = -1;
		int widx = -1;
		for(int i=0;i<newAttributes.size();i++)
		{
			VertexAttribute a = newAttributes.get(i);
			if(a.alias.equals(BoneIndexAttribue)){
				bidx = a.offset/4;
			} else if(a.alias.equals(BoneWeightAttribue)){
				widx = a.offset/4;
			}
		}
		
		if(bidx <0 || widx < 0){
			throw new IllegalArgumentException("Need Shader with bone index and bone wieght vectors to use GPU skinning");
		}
		
		final float[] vertices = subMesh.vertices;
		final float[] skinnedVertices = new float[newStride * numVertices];

		for (int i = 0; i < numVertices; i++, idx += stride, newIdx += newStride, bidx += newStride, widx += newStride) {
			final int[] boneIndices = subMesh.boneAssignments[i];
			final float[] boneWeights = subMesh.boneWeights[i];
			
			System.arraycopy(vertices, idx, skinnedVertices, newIdx, stride);
			
			skinnedVertices[bidx] = boneIndices.length>0?boneIndices[0]:0;
			skinnedVertices[bidx + 1] = boneIndices.length>1?boneIndices[1]:0;
			skinnedVertices[bidx + 2] = boneIndices.length>2?boneIndices[2]:0;
			skinnedVertices[bidx + 3] = boneIndices.length>3?boneIndices[3]:0;
			
			skinnedVertices[widx] = boneWeights.length>0?boneWeights[0]:0;
			skinnedVertices[widx + 1] = boneWeights.length>1?boneWeights[1]:0;
			skinnedVertices[widx + 2] = boneWeights.length>2?boneWeights[2]:0;
			skinnedVertices[widx + 3] = boneWeights.length>3?boneWeights[3]:0;
		}

		newMesh.setVertices(skinnedVertices);
		newMesh.setIndices(subMesh.indices);
		subMesh.mesh.dispose();
		subMesh.mesh = newMesh;
		subMesh.skinnedVertices = null;
		subMesh.vertices = skinnedVertices;
	} ##FSTMerge## private void setupGpuSkin(SkeletonSubMesh subMesh){
		VertexAttributes oldAttributes =  subMesh.mesh.getVertexAttributes();
		final int oldAttributeCount = oldAttributes.size();
		VertexAttribute[] attributeArray = new VertexAttribute[oldAttributeCount+2];
		for(int i=0;i<oldAttributeCount;i++){
			attributeArray[i] = oldAttributes.get(i);
		}
		final int boneIndex = oldAttributeCount;
		final int weightIndex = oldAttributeCount+1;
		attributeArray[boneIndex] = new VertexAttribute(Usage.Generic, 4, BoneIndexAttribue);
		attributeArray[weightIndex] = new VertexAttribute(Usage.Generic, 4, BoneWeightAttribue);
		VertexAttributes newAttributes = new VertexAttributes(attributeArray);
		
		//TODO: not sure if I want to generate a new mesh. But VertexAttributes was final inside mesh
		Mesh newMesh = new Mesh(true, subMesh.mesh.getMaxVertices(), subMesh.mesh.getMaxIndices(), newAttributes);
		
		final int stride = subMesh.mesh.getVertexSize() / 4;
		final int newStride = newMesh.getVertexSize() / 4;
		final int numVertices = subMesh.mesh.getNumVertices();
		int idx = 0;
		int newIdx = 0;
		int bidx = -1;
		int widx = -1;
		for(int i=0;i<newAttributes.size();i++)
		{
			VertexAttribute a = newAttributes.get(i);
			if(a.alias.equals(BoneIndexAttribue)){
				bidx = a.offset/4;
			} else if(a.alias.equals(BoneWeightAttribue)){
				widx = a.offset/4;
			}
		}
		
		if(bidx <0 || widx < 0){
			throw new IllegalArgumentException("Need Shader with bone index and bone wieght vectors to use GPU skinning");
		}
		
		final float[] vertices = subMesh.vertices;
		final float[] skinnedVertices = new float[newStride * numVertices];

		for (int i = 0; i < numVertices; i++, idx += stride, newIdx += newStride, bidx += newStride, widx += newStride) {
			final int[] boneIndices = subMesh.boneAssignments[i];
			final float[] boneWeights = subMesh.boneWeights[i];
			
			System.arraycopy(vertices, idx, skinnedVertices, newIdx, stride);
			
			skinnedVertices[bidx] = boneIndices.length>0?boneIndices[0]:0;
			skinnedVertices[bidx + 1] = boneIndices.length>1?boneIndices[1]:0;
			skinnedVertices[bidx + 2] = boneIndices.length>2?boneIndices[2]:0;
			skinnedVertices[bidx + 3] = boneIndices.length>3?boneIndices[3]:0;
			
			skinnedVertices[widx] = boneWeights.length>0?boneWeights[0]:0;
			skinnedVertices[widx + 1] = boneWeights.length>1?boneWeights[1]:0;
			skinnedVertices[widx + 2] = boneWeights.length>2?boneWeights[2]:0;
			skinnedVertices[widx + 3] = boneWeights.length>3?boneWeights[3]:0;
		}

		newMesh.setVertices(skinnedVertices);
		newMesh.setIndices(subMesh.indices);
		subMesh.mesh.dispose();
		subMesh.mesh = newMesh;
		subMesh.skinnedVertices = null;
		subMesh.vertices = skinnedVertices;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModelGpuSkinned.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void setAnimation(String animation, float time, boolean loop) {
		skeleton.setAnimation(animation, time);
	} ##FSTMerge## @Override
	public void setAnimation(String animation, float time, boolean loop) {
		skeleton.setAnimation(animation, time);
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModelGpuSkinned.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModel.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements AnimatedModel ##FSTMerge## implements AnimatedModel
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModel.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final Skeleton skeleton; ##FSTMerge## public final Skeleton skeleton;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModel.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final SkeletonSubMesh[] subMeshes; ##FSTMerge## public final SkeletonSubMesh[] subMeshes;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public SkeletonModel (Skeleton skeleton, SubMesh[] subMeshes) {
		this.skeleton = skeleton;
		this.subMeshes = new SkeletonSubMesh[subMeshes.length];
		
		for (int i=0; i < subMeshes.length; ++i) {
			this.subMeshes[i] = (SkeletonSubMesh)subMeshes[i];
		}
		setMaterial(new Material("default"));
	} ##FSTMerge## public SkeletonModel (Skeleton skeleton, SubMesh[] subMeshes) {
		this.skeleton = skeleton;
		this.subMeshes = new SkeletonSubMesh[subMeshes.length];
		
		for (int i=0; i < subMeshes.length; ++i) {
			this.subMeshes[i] = (SkeletonSubMesh)subMeshes[i];
		}
		setMaterial(new Material("default"));
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void setBindPose () {
		skeleton.setBindPose();
		for (int i = 0; i < subMeshes.length; i++) {
			skin(subMeshes[i], skeleton.combinedMatrices);
		}
	} ##FSTMerge## public void setBindPose () {
		skeleton.setBindPose();
		for (int i = 0; i < subMeshes.length; i++) {
			skin(subMeshes[i], skeleton.combinedMatrices);
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void setAnimation (String animation, float time, boolean loop) {
		skeleton.setAnimation(animation, time);
		for (int i = 0; i < subMeshes.length; i++) {
			skin(subMeshes[i], skeleton.combinedMatrices);
		}
	} ##FSTMerge## @Override
	public void setAnimation (String animation, float time, boolean loop) {
		skeleton.setAnimation(animation, time);
		for (int i = 0; i < subMeshes.length; i++) {
			skin(subMeshes[i], skeleton.combinedMatrices);
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModel.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final Vector3 v = new Vector3(); ##FSTMerge## final Vector3 v = new Vector3();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void skin (SkeletonSubMesh subMesh, Array<Matrix4> boneMatrices) {
		final int stride = subMesh.mesh.getVertexSize() / 4;
		final int numVertices = subMesh.mesh.getNumVertices();
		int idx = 0;
		int nidx = subMesh.mesh.getVertexAttribute(Usage.Normal) == null ? -1
			: subMesh.mesh.getVertexAttribute(Usage.Normal).offset / 4;
		final float[] vertices = subMesh.vertices;
		final float[] skinnedVertices = subMesh.skinnedVertices;

		System.arraycopy(subMesh.vertices, 0, skinnedVertices, 0, subMesh.vertices.length);

		for (int i = 0; i < numVertices; i++, idx += stride, nidx += stride) {
			final int[] boneIndices = subMesh.boneAssignments[i];
			final float[] boneWeights = subMesh.boneWeights[i];

			final float ox = vertices[idx], oy = vertices[idx + 1], oz = vertices[idx + 2];
			float x = 0, y = 0, z = 0;
			float onx = 0, ony = 0, onz = 0;
			float nx = 0, ny = 0, nz = 0;

			if (nidx != -1) {
				onx = vertices[nidx];
				ony = vertices[nidx + 1];
				onz = vertices[nidx + 2];
			}

			for (int j = 0; j < boneIndices.length; j++) {
				int boneIndex = boneIndices[j];
				float weight = boneWeights[j];
				v.set(ox, oy, oz);
				v.mul(boneMatrices.get(boneIndex));
				x += v.x * weight;
				y += v.y * weight;
				z += v.z * weight;

				if (nidx != -1) {
					v.set(onx, ony, onz);
					v.rot(boneMatrices.get(boneIndex));
					nx += v.x * weight;
					ny += v.y * weight;
					nz += v.z * weight;
				}
			}

			skinnedVertices[idx] = x;
			skinnedVertices[idx + 1] = y;
			skinnedVertices[idx + 2] = z;

			if (nidx != -1) {
				skinnedVertices[nidx] = nx;
				skinnedVertices[nidx + 1] = ny;
				skinnedVertices[nidx + 2] = nz;
			}
		}

		subMesh.mesh.setVertices(skinnedVertices);
	} ##FSTMerge## public void skin (SkeletonSubMesh subMesh, Array<Matrix4> boneMatrices) {
		final int stride = subMesh.mesh.getVertexSize() / 4;
		final int numVertices = subMesh.mesh.getNumVertices();
		int idx = 0;
		int nidx = subMesh.mesh.getVertexAttribute(Usage.Normal) == null ? -1
			: subMesh.mesh.getVertexAttribute(Usage.Normal).offset / 4;
		final float[] vertices = subMesh.vertices;
		final float[] skinnedVertices = subMesh.skinnedVertices;

		System.arraycopy(subMesh.vertices, 0, skinnedVertices, 0, subMesh.vertices.length);

		for (int i = 0; i < numVertices; i++, idx += stride, nidx += stride) {
			final int[] boneIndices = subMesh.boneAssignments[i];
			final float[] boneWeights = subMesh.boneWeights[i];

			final float ox = vertices[idx], oy = vertices[idx + 1], oz = vertices[idx + 2];
			float x = 0, y = 0, z = 0;
			float onx = 0, ony = 0, onz = 0;
			float nx = 0, ny = 0, nz = 0;

			if (nidx != -1) {
				onx = vertices[nidx];
				ony = vertices[nidx + 1];
				onz = vertices[nidx + 2];
			}

			for (int j = 0; j < boneIndices.length; j++) {
				int boneIndex = boneIndices[j];
				float weight = boneWeights[j];
				v.set(ox, oy, oz);
				v.mul(boneMatrices.get(boneIndex));
				x += v.x * weight;
				y += v.y * weight;
				z += v.z * weight;

				if (nidx != -1) {
					v.set(onx, ony, onz);
					v.rot(boneMatrices.get(boneIndex));
					nx += v.x * weight;
					ny += v.y * weight;
					nz += v.z * weight;
				}
			}

			skinnedVertices[idx] = x;
			skinnedVertices[idx + 1] = y;
			skinnedVertices[idx + 2] = z;

			if (nidx != -1) {
				skinnedVertices[nidx] = nx;
				skinnedVertices[nidx + 1] = ny;
				skinnedVertices[nidx + 2] = nz;
			}
		}

		subMesh.mesh.setVertices(skinnedVertices);
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void render () {
		int len = subMeshes.length;
		for (int i = 0; i < len; i++) {
			SkeletonSubMesh subMesh = subMeshes[i];
			if (i == 0) {
				subMesh.material.bind();
			} else if (!subMeshes[i - 1].material.equals(subMesh.material)) {
				subMesh.material.bind();
			}
			subMesh.mesh.render(subMesh.primitiveType);
		}
	} ##FSTMerge## @Override
	public void render () {
		int len = subMeshes.length;
		for (int i = 0; i < len; i++) {
			SkeletonSubMesh subMesh = subMeshes[i];
			if (i == 0) {
				subMesh.material.bind();
			} else if (!subMeshes[i - 1].material.equals(subMesh.material)) {
				subMesh.material.bind();
			}
			subMesh.mesh.render(subMesh.primitiveType);
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void render (ShaderProgram program) {
		int len = subMeshes.length;
		for (int i = 0; i < len; i++) {
			SkeletonSubMesh subMesh = subMeshes[i];
			if (i == 0) {
				subMesh.material.bind(program);
			} else if (!subMeshes[i - 1].material.equals(subMesh.material)) {
				subMesh.material.bind(program);
			}
			subMesh.mesh.render(program, subMesh.primitiveType);
		}
	} ##FSTMerge## @Override
	public void render (ShaderProgram program) {
		int len = subMeshes.length;
		for (int i = 0; i < len; i++) {
			SkeletonSubMesh subMesh = subMeshes[i];
			if (i == 0) {
				subMesh.material.bind(program);
			} else if (!subMeshes[i - 1].material.equals(subMesh.material)) {
				subMesh.material.bind(program);
			}
			subMesh.mesh.render(program, subMesh.primitiveType);
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void setMaterials (Material... materials) {
		if (materials.length != subMeshes.length)
			throw new UnsupportedOperationException("number of materials must equal number of sub-meshes");
		int len = materials.length;
		for (int i = 0; i < len; i++) {
			subMeshes[i].material = materials[i];
		}
	} ##FSTMerge## @Override
	public void setMaterials (Material... materials) {
		if (materials.length != subMeshes.length)
			throw new UnsupportedOperationException("number of materials must equal number of sub-meshes");
		int len = materials.length;
		for (int i = 0; i < len; i++) {
			subMeshes[i].material = materials[i];
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void setMaterial (Material material) {
		int len = subMeshes.length;
		for (int i = 0; i < len; i++) {
			subMeshes[i].material = material;
		}
	} ##FSTMerge## @Override
	public void setMaterial (Material material) {
		int len = subMeshes.length;
		for (int i = 0; i < len; i++) {
			subMeshes[i].material = material;
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public SubMesh getSubMesh (String name) {
		int len = subMeshes.length;
		for (int i = 0; i < len; i++) {
			if (subMeshes[i].name.equals(name)) return subMeshes[i];
		}
		return null;
	} ##FSTMerge## @Override
	public SubMesh getSubMesh (String name) {
		int len = subMeshes.length;
		for (int i = 0; i < len; i++) {
			if (subMeshes[i].name.equals(name)) return subMeshes[i];
		}
		return null;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public SubMesh[] getSubMeshes () {
		return subMeshes;
	} ##FSTMerge## @Override
	public SubMesh[] getSubMeshes () {
		return subMeshes;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public SkeletonAnimation getAnimation (String name) {
		return skeleton.animations.get(name);
	} ##FSTMerge## @Override
	public SkeletonAnimation getAnimation (String name) {
		return skeleton.animations.get(name);
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModel.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## protected SkeletonAnimation[] animations; ##FSTMerge## protected SkeletonAnimation[] animations;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public SkeletonAnimation[] getAnimations () {
		if (animations == null || animations.length != skeleton.animations.size) {
			animations = new SkeletonAnimation[skeleton.animations.size];
			int i = 0;
			for (SkeletonAnimation anim : skeleton.animations.values()) {
				animations[i++] = anim;
			}
		}
		return animations;
	} ##FSTMerge## @Override
	public SkeletonAnimation[] getAnimations () {
		if (animations == null || animations.length != skeleton.animations.size) {
			animations = new SkeletonAnimation[skeleton.animations.size];
			int i = 0;
			for (SkeletonAnimation anim : skeleton.animations.values()) {
				animations[i++] = anim;
			}
		}
		return animations;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public Model getSubModel (String... subMeshNames) {
		// FIXME
		return null;
	} ##FSTMerge## @Override
	public Model getSubModel (String... subMeshNames) {
		// FIXME
		return null;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModel.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final static BoundingBox tmpBox = new BoundingBox(); ##FSTMerge## private final static BoundingBox tmpBox = new BoundingBox();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void getBoundingBox (BoundingBox bbox) {
		bbox.inf();
		for (int i = 0; i < subMeshes.length; i++) {
			subMeshes[i].mesh.calculateBoundingBox(tmpBox);
			bbox.ext(tmpBox);
		}
	} ##FSTMerge## @Override
	public void getBoundingBox (BoundingBox bbox) {
		bbox.inf();
		for (int i = 0; i < subMeshes.length; i++) {
			subMeshes[i].mesh.calculateBoundingBox(tmpBox);
			bbox.ext(tmpBox);
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void dispose () {
		for (int i = 0; i < subMeshes.length; i++) {
			subMeshes[i].mesh.dispose();
		}
	} ##FSTMerge## @Override
	public void dispose () {
		for (int i = 0; i < subMeshes.length; i++) {
			subMeshes[i].mesh.dispose();
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModel.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonKeyframe.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public float timeStamp = 0; ##FSTMerge## public float timeStamp = 0;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonKeyframe.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int parentIndex = -1; ##FSTMerge## public int parentIndex = -1;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonKeyframe.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final Vector3 position = new Vector3(); ##FSTMerge## public final Vector3 position = new Vector3();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonKeyframe.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final Vector3 scale = new Vector3(1, 1, 1); ##FSTMerge## public final Vector3 scale = new Vector3(1, 1, 1);
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonKeyframe.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final Quaternion rotation = new Quaternion(0, 0, 0, 1); ##FSTMerge## public final Quaternion rotation = new Quaternion(0, 0, 0, 1);
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonKeyframe.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public String toString () {
		return "time: " + timeStamp + ", " + "parent: " + parentIndex + ", " + "position: " + position + ", " + "scale: " + scale
			+ ", " + "rotation: " + rotation;
	} ##FSTMerge## public String toString () {
		return "time: " + timeStamp + ", " + "parent: " + parentIndex + ", " + "position: " + position + ", " + "scale: " + scale
			+ ", " + "rotation: " + rotation;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonKeyframe.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonJoint.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public String name; ##FSTMerge## public String name;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonJoint.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int index; ##FSTMerge## public int index;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonJoint.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int parentIndex; ##FSTMerge## public int parentIndex;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonJoint.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public SkeletonJoint parent; ##FSTMerge## public SkeletonJoint parent;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonJoint.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final Array<SkeletonJoint> children = new Array<SkeletonJoint>(1); ##FSTMerge## public final Array<SkeletonJoint> children = new Array<SkeletonJoint>(1);
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonJoint.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final Vector3 position = new Vector3(); ##FSTMerge## public final Vector3 position = new Vector3();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonJoint.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final Quaternion rotation = new Quaternion(new Vector3(0, 1, 0), 0); ##FSTMerge## public final Quaternion rotation = new Quaternion(new Vector3(0, 1, 0), 0);
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonJoint.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final Vector3 scale = new Vector3(1, 1, 1); ##FSTMerge## public final Vector3 scale = new Vector3(1, 1, 1);
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonJoint.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonAnimation.java
############## CONFLICT ##############
Conflict type: ExtendsList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## extends Animation ##FSTMerge## extends Animation
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonAnimation.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final SkeletonKeyframe[][] perJointkeyFrames; ##FSTMerge## public final SkeletonKeyframe[][] perJointkeyFrames;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonAnimation.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public SkeletonAnimation (String name, float totalDuration, SkeletonKeyframe[][] perJointKeyFrames) {
		super(name, totalDuration);
		this.perJointkeyFrames = perJointKeyFrames;
	} ##FSTMerge## public SkeletonAnimation (String name, float totalDuration, SkeletonKeyframe[][] perJointKeyFrames) {
		super(name, totalDuration);
		this.perJointkeyFrames = perJointKeyFrames;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonAnimation.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/Skeleton.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final Array<SkeletonJoint> hierarchy = new Array<SkeletonJoint>(); ##FSTMerge## public final Array<SkeletonJoint> hierarchy = new Array<SkeletonJoint>();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/Skeleton.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final Array<String> jointNames = new Array<String>(); ##FSTMerge## public final Array<String> jointNames = new Array<String>();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/Skeleton.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final Map<String, Integer> namesToIndices = new HashMap<String, Integer>(); ##FSTMerge## public final Map<String, Integer> namesToIndices = new HashMap<String, Integer>();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/Skeleton.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final Array<SkeletonKeyframe> bindPoseJoints = new Array<SkeletonKeyframe>(); ##FSTMerge## public final Array<SkeletonKeyframe> bindPoseJoints = new Array<SkeletonKeyframe>();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/Skeleton.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final Array<SkeletonKeyframe> animPoseJoints = new Array<SkeletonKeyframe>(); ##FSTMerge## public final Array<SkeletonKeyframe> animPoseJoints = new Array<SkeletonKeyframe>();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/Skeleton.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final Array<Matrix4> offsetMatrices = new Array<Matrix4>(); ##FSTMerge## public final Array<Matrix4> offsetMatrices = new Array<Matrix4>();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/Skeleton.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final Array<Matrix4> sceneMatrices = new Array<Matrix4>(); ##FSTMerge## public final Array<Matrix4> sceneMatrices = new Array<Matrix4>();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/Skeleton.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final Array<Matrix4> combinedMatrices = new Array<Matrix4>(); ##FSTMerge## public final Array<Matrix4> combinedMatrices = new Array<Matrix4>();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/Skeleton.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final ObjectMap<String, SkeletonAnimation> animations = new ObjectMap<String, SkeletonAnimation>(); ##FSTMerge## public final ObjectMap<String, SkeletonAnimation> animations = new ObjectMap<String, SkeletonAnimation>();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/Skeleton.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static final Matrix4 IDENTITY = new Matrix4(); ##FSTMerge## private static final Matrix4 IDENTITY = new Matrix4();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/Skeleton.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final Matrix4 rotMatrix = new Matrix4(); ##FSTMerge## private final Matrix4 rotMatrix = new Matrix4();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/Skeleton.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void buildFromHierarchy () {
		jointNames.clear();
		namesToIndices.clear();
		bindPoseJoints.clear();
		animPoseJoints.clear();
		offsetMatrices.clear();
		sceneMatrices.clear();

		for (int i = 0; i < hierarchy.size; i++) {
			recursiveFill(hierarchy.get(i));
		}

		calculateMatrices(bindPoseJoints);
		calculateOffsetMatrices();
	} ##FSTMerge## public void buildFromHierarchy () {
		jointNames.clear();
		namesToIndices.clear();
		bindPoseJoints.clear();
		animPoseJoints.clear();
		offsetMatrices.clear();
		sceneMatrices.clear();

		for (int i = 0; i < hierarchy.size; i++) {
			recursiveFill(hierarchy.get(i));
		}

		calculateMatrices(bindPoseJoints);
		calculateOffsetMatrices();
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/Skeleton.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void recursiveFill (SkeletonJoint joint) {
		joint.index = bindPoseJoints.size;
		joint.parentIndex = joint.parent != null ? joint.parent.index : -1;

		SkeletonKeyframe keyFrame = new SkeletonKeyframe();
		keyFrame.position.set(joint.position);
		keyFrame.scale.set(joint.scale);
		keyFrame.rotation.set(joint.rotation);
		keyFrame.parentIndex = joint.parentIndex;

		jointNames.add(joint.name);
		namesToIndices.put(joint.name, joint.index);
		bindPoseJoints.add(keyFrame);
		SkeletonKeyframe animKeyframe = new SkeletonKeyframe();
		animKeyframe.parentIndex = joint.parentIndex;
		animPoseJoints.add(animKeyframe);
		offsetMatrices.add(new Matrix4());
		sceneMatrices.add(new Matrix4());
		combinedMatrices.add(new Matrix4());

		int len = joint.children.size;
		for (int i = 0; i < len; i++) {
			recursiveFill(joint.children.get(i));
		}
	} ##FSTMerge## private void recursiveFill (SkeletonJoint joint) {
		joint.index = bindPoseJoints.size;
		joint.parentIndex = joint.parent != null ? joint.parent.index : -1;

		SkeletonKeyframe keyFrame = new SkeletonKeyframe();
		keyFrame.position.set(joint.position);
		keyFrame.scale.set(joint.scale);
		keyFrame.rotation.set(joint.rotation);
		keyFrame.parentIndex = joint.parentIndex;

		jointNames.add(joint.name);
		namesToIndices.put(joint.name, joint.index);
		bindPoseJoints.add(keyFrame);
		SkeletonKeyframe animKeyframe = new SkeletonKeyframe();
		animKeyframe.parentIndex = joint.parentIndex;
		animPoseJoints.add(animKeyframe);
		offsetMatrices.add(new Matrix4());
		sceneMatrices.add(new Matrix4());
		combinedMatrices.add(new Matrix4());

		int len = joint.children.size;
		for (int i = 0; i < len; i++) {
			recursiveFill(joint.children.get(i));
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/Skeleton.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## protected void calculateOffsetMatrices () {
		for (int i = 0; i < offsetMatrices.size; i++) {
			offsetMatrices.get(i).set(sceneMatrices.get(i)).inv();
		}
	} ##FSTMerge## protected void calculateOffsetMatrices () {
		for (int i = 0; i < offsetMatrices.size; i++) {
			offsetMatrices.get(i).set(sceneMatrices.get(i)).inv();
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/Skeleton.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## protected void calculateMatrices (Array<SkeletonKeyframe> joints) {
		for (int i = 0; i < joints.size; i++) {
			SkeletonKeyframe joint = joints.get(i);
			Matrix4 sceneMatrix = sceneMatrices.get(i);
			Matrix4 parentMatrix = joint.parentIndex != -1 ? sceneMatrices.get(joint.parentIndex) : IDENTITY;
			Matrix4 combinedMatrix = combinedMatrices.get(i);

			joint.rotation.toMatrix(rotMatrix.val);
			rotMatrix.trn(joint.position);
			rotMatrix.scl(joint.scale);
			sceneMatrix.set(parentMatrix);
			sceneMatrix.mul(rotMatrix);

			combinedMatrix.set(sceneMatrix);
			combinedMatrix.mul(offsetMatrices.get(i));
		}
	} ##FSTMerge## protected void calculateMatrices (Array<SkeletonKeyframe> joints) {
		for (int i = 0; i < joints.size; i++) {
			SkeletonKeyframe joint = joints.get(i);
			Matrix4 sceneMatrix = sceneMatrices.get(i);
			Matrix4 parentMatrix = joint.parentIndex != -1 ? sceneMatrices.get(joint.parentIndex) : IDENTITY;
			Matrix4 combinedMatrix = combinedMatrices.get(i);

			joint.rotation.toMatrix(rotMatrix.val);
			rotMatrix.trn(joint.position);
			rotMatrix.scl(joint.scale);
			sceneMatrix.set(parentMatrix);
			sceneMatrix.mul(rotMatrix);

			combinedMatrix.set(sceneMatrix);
			combinedMatrix.mul(offsetMatrices.get(i));
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/Skeleton.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void setAnimation (String name, float time) {
		SkeletonAnimation anim = animations.get(name);
		if (anim == null) throw new IllegalArgumentException("Animation with name '" + name + "' does not exist");
		if (time < 0 || time > anim.totalDuration)
			throw new IllegalArgumentException("time must be 0 <= time <= animation duration");

		int len = anim.perJointkeyFrames.length;
		for (int i = 0; i < len; i++) {
			SkeletonKeyframe[] jointTrack = anim.perJointkeyFrames[i];
			int idx = 0;
			int len2 = jointTrack.length;
			for (int j = 0; j < len2; j++) {
				SkeletonKeyframe jointFrame = jointTrack[j];
				if (jointFrame.timeStamp >= time) {
					idx = Math.max(0, j - 1);
					break;
				}
			}

			SkeletonKeyframe startFrame = jointTrack[idx];
			SkeletonKeyframe endFrame = idx + 1 == len2 ? startFrame : jointTrack[idx + 1];
			float alpha = 0;

			if (startFrame != endFrame) {
				alpha = Math.min(1, (time - startFrame.timeStamp) / (endFrame.timeStamp - startFrame.timeStamp));
			}
			SkeletonKeyframe animFrame = animPoseJoints.get(i);
			animFrame.position.set(startFrame.position).lerp(endFrame.position, alpha);
			animFrame.scale.set(startFrame.scale).lerp(endFrame.scale, alpha);
			animFrame.rotation.set(startFrame.rotation).slerp(endFrame.rotation, alpha);
		}

		calculateMatrices(animPoseJoints);
	} ##FSTMerge## public void setAnimation (String name, float time) {
		SkeletonAnimation anim = animations.get(name);
		if (anim == null) throw new IllegalArgumentException("Animation with name '" + name + "' does not exist");
		if (time < 0 || time > anim.totalDuration)
			throw new IllegalArgumentException("time must be 0 <= time <= animation duration");

		int len = anim.perJointkeyFrames.length;
		for (int i = 0; i < len; i++) {
			SkeletonKeyframe[] jointTrack = anim.perJointkeyFrames[i];
			int idx = 0;
			int len2 = jointTrack.length;
			for (int j = 0; j < len2; j++) {
				SkeletonKeyframe jointFrame = jointTrack[j];
				if (jointFrame.timeStamp >= time) {
					idx = Math.max(0, j - 1);
					break;
				}
			}

			SkeletonKeyframe startFrame = jointTrack[idx];
			SkeletonKeyframe endFrame = idx + 1 == len2 ? startFrame : jointTrack[idx + 1];
			float alpha = 0;

			if (startFrame != endFrame) {
				alpha = Math.min(1, (time - startFrame.timeStamp) / (endFrame.timeStamp - startFrame.timeStamp));
			}
			SkeletonKeyframe animFrame = animPoseJoints.get(i);
			animFrame.position.set(startFrame.position).lerp(endFrame.position, alpha);
			animFrame.scale.set(startFrame.scale).lerp(endFrame.scale, alpha);
			animFrame.rotation.set(startFrame.rotation).slerp(endFrame.rotation, alpha);
		}

		calculateMatrices(animPoseJoints);
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/Skeleton.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void setBindPose () {
		calculateMatrices(bindPoseJoints);
	} ##FSTMerge## public void setBindPose () {
		calculateMatrices(bindPoseJoints);
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/Skeleton.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedSubMesh.java
############## CONFLICT ##############
Conflict type: ExtendsList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## extends SubMesh ##FSTMerge## extends SubMesh
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedSubMesh.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final float[] blendedVertices; ##FSTMerge## public final float[] blendedVertices;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedSubMesh.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final int animatedComponents; ##FSTMerge## public final int animatedComponents;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedSubMesh.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final ObjectMap<String, KeyframedAnimation> animations; ##FSTMerge## public final ObjectMap<String, KeyframedAnimation> animations;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedSubMesh.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public KeyframedSubMesh (String name, Mesh mesh, float[] blendedVertices, ObjectMap<String, KeyframedAnimation> animations,
		int animatedComponents, int primitiveType) {
		
		super(name, mesh, primitiveType);
		
		this.blendedVertices = blendedVertices;
		this.animations = animations;
		this.animatedComponents = animatedComponents;
	} ##FSTMerge## public KeyframedSubMesh (String name, Mesh mesh, float[] blendedVertices, ObjectMap<String, KeyframedAnimation> animations,
		int animatedComponents, int primitiveType) {
		
		super(name, mesh, primitiveType);
		
		this.blendedVertices = blendedVertices;
		this.animations = animations;
		this.animatedComponents = animatedComponents;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedSubMesh.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void getBoundingBox (BoundingBox bbox) {
		mesh.calculateBoundingBox(bbox);
	} ##FSTMerge## @Override
	public void getBoundingBox (BoundingBox bbox) {
		mesh.calculateBoundingBox(bbox);
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedSubMesh.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedModel.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements AnimatedModel, Disposable ##FSTMerge## implements AnimatedModel, Disposable
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedModel.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final KeyframedSubMesh[] subMeshes; ##FSTMerge## public final KeyframedSubMesh[] subMeshes;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedModel.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## protected final KeyframedAnimation[] animations; ##FSTMerge## protected final KeyframedAnimation[] animations;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public KeyframedModel (KeyframedSubMesh[] subMeshes) {
		this.subMeshes = subMeshes;

		Array<KeyframedAnimation> meshAnims = subMeshes[0].animations.values().toArray();
		animations = new KeyframedAnimation[meshAnims.size];
		for (int i = 0; i < animations.length; i++) {
			animations[i] = meshAnims.get(i);
		}

		checkValidity();
	} ##FSTMerge## public KeyframedModel (KeyframedSubMesh[] subMeshes) {
		this.subMeshes = subMeshes;

		Array<KeyframedAnimation> meshAnims = subMeshes[0].animations.values().toArray();
		animations = new KeyframedAnimation[meshAnims.size];
		for (int i = 0; i < animations.length; i++) {
			animations[i] = meshAnims.get(i);
		}

		checkValidity();
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void checkValidity () {
		for (int i = 0; i < subMeshes.length; i++) {
			if (subMeshes[i].animations.size != animations.length)
				throw new GdxRuntimeException("number of animations in subMesh[0] is not the same in subMesh[" + i
					+ "]. All sub-meshes must have the same animations and number of frames");
		}

		for (int i = 0; i < animations.length; i++) {
			KeyframedAnimation anim = animations[i];
			for (int j = 0; j < subMeshes.length; j++) {
				KeyframedAnimation otherAnim = subMeshes[j].animations.get(anim.name);
				if (otherAnim == null) throw new GdxRuntimeException("animation '" + anim.name + "' missing in subMesh[" + j + "]");
				if (otherAnim.frameDuration != anim.frameDuration)
					throw new GdxRuntimeException("animation '" + anim.name + "' in subMesh[" + j
						+ "] has different frame duration than the same animation in subMesh[0]");
				if (otherAnim.keyframes.length != anim.keyframes.length)
					throw new GdxRuntimeException("animation '" + anim.name + "' in subMesh[" + j
						+ "] has different number of keyframes than the same animation in subMesh[0]");
			}
		}
	} ##FSTMerge## private void checkValidity () {
		for (int i = 0; i < subMeshes.length; i++) {
			if (subMeshes[i].animations.size != animations.length)
				throw new GdxRuntimeException("number of animations in subMesh[0] is not the same in subMesh[" + i
					+ "]. All sub-meshes must have the same animations and number of frames");
		}

		for (int i = 0; i < animations.length; i++) {
			KeyframedAnimation anim = animations[i];
			for (int j = 0; j < subMeshes.length; j++) {
				KeyframedAnimation otherAnim = subMeshes[j].animations.get(anim.name);
				if (otherAnim == null) throw new GdxRuntimeException("animation '" + anim.name + "' missing in subMesh[" + j + "]");
				if (otherAnim.frameDuration != anim.frameDuration)
					throw new GdxRuntimeException("animation '" + anim.name + "' in subMesh[" + j
						+ "] has different frame duration than the same animation in subMesh[0]");
				if (otherAnim.keyframes.length != anim.keyframes.length)
					throw new GdxRuntimeException("animation '" + anim.name + "' in subMesh[" + j
						+ "] has different number of keyframes than the same animation in subMesh[0]");
			}
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void render () {
		int len = subMeshes.length;
		for (int i = 0; i < len; i++) {
			KeyframedSubMesh subMesh = subMeshes[i];
			if (i == 0 || !subMeshes[i - 1].material.equals(subMesh.material)) {
				subMesh.material.bind();
			}
			subMesh.mesh.render(subMesh.primitiveType);
		}
	} ##FSTMerge## @Override
	public void render () {
		int len = subMeshes.length;
		for (int i = 0; i < len; i++) {
			KeyframedSubMesh subMesh = subMeshes[i];
			if (i == 0 || !subMeshes[i - 1].material.equals(subMesh.material)) {
				subMesh.material.bind();
			}
			subMesh.mesh.render(subMesh.primitiveType);
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void render (ShaderProgram program) {
		int len = subMeshes.length;
		for (int i = 0; i < len; i++) {
			KeyframedSubMesh subMesh = subMeshes[i];
			if (i == 0 || !subMeshes[i - 1].material.equals(subMesh.material)) {
				subMesh.material.bind(program);
			}
			subMesh.mesh.render(program, subMesh.primitiveType);
		}
	} ##FSTMerge## @Override
	public void render (ShaderProgram program) {
		int len = subMeshes.length;
		for (int i = 0; i < len; i++) {
			KeyframedSubMesh subMesh = subMeshes[i];
			if (i == 0 || !subMeshes[i - 1].material.equals(subMesh.material)) {
				subMesh.material.bind(program);
			}
			subMesh.mesh.render(program, subMesh.primitiveType);
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void setMaterials (Material... materials) {
		if (materials.length != subMeshes.length)
			throw new UnsupportedOperationException("number of materials must equal number of sub-meshes");
		int len = materials.length;
		for (int i = 0; i < len; i++) {
			subMeshes[i].material = materials[i];
		}
	} ##FSTMerge## @Override
	public void setMaterials (Material... materials) {
		if (materials.length != subMeshes.length)
			throw new UnsupportedOperationException("number of materials must equal number of sub-meshes");
		int len = materials.length;
		for (int i = 0; i < len; i++) {
			subMeshes[i].material = materials[i];
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void setMaterial (Material material) {
		int len = subMeshes.length;
		for (int i = 0; i < len; i++) {
			subMeshes[i].material = material;
		}
	} ##FSTMerge## @Override
	public void setMaterial (Material material) {
		int len = subMeshes.length;
		for (int i = 0; i < len; i++) {
			subMeshes[i].material = material;
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public KeyframedSubMesh getSubMesh (String name) {
		int len = subMeshes.length;
		for (int i = 0; i < len; i++) {
			if (subMeshes[i].name.equals(name)) return subMeshes[i];
		}
		return null;
	} ##FSTMerge## @Override
	public KeyframedSubMesh getSubMesh (String name) {
		int len = subMeshes.length;
		for (int i = 0; i < len; i++) {
			if (subMeshes[i].name.equals(name)) return subMeshes[i];
		}
		return null;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public SubMesh[] getSubMeshes () {
		return subMeshes;
	} ##FSTMerge## @Override
	public SubMesh[] getSubMeshes () {
		return subMeshes;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void setAnimation (String animation, float time, boolean loop) {
		int len = subMeshes.length;
		for (int i = 0; i < len; i++) {
			final KeyframedSubMesh subMesh = subMeshes[i];
			final KeyframedAnimation anim = subMesh.animations.get(animation);
			if (anim == null) throw new IllegalArgumentException("No animation with name '" + animation + "' in submesh #" + i);
			if (time < 0 || time > anim.totalDuration)
				throw new IllegalArgumentException("time must be 0 <= time <= animation duration");

			final int startIndex = (int)Math.floor((time / anim.frameDuration));
			final Keyframe startFrame = anim.keyframes[startIndex];
			final Keyframe endFrame = anim.keyframes[anim.keyframes.length - 1 == startIndex ? loop ? 0 : startIndex
				: startIndex + 1];

			final int numComponents = subMesh.animatedComponents;
			final float[] src = startFrame.vertices;
			final int srcLen = numComponents * subMesh.mesh.getNumVertices();

			final float[] dst = subMesh.blendedVertices;
			final int dstInc = subMesh.mesh.getVertexSize() / 4 - numComponents;

			if (startFrame == endFrame) {
				for (int srcIdx = 0, dstIdx = 0; srcIdx < srcLen; dstIdx += dstInc) {
					for (int j = 0; j < numComponents; j++) {
						dst[dstIdx++] = src[srcIdx++];
					}
				}
			} else {
				float[] src2 = endFrame.vertices;
				float alpha = (time - (startIndex * anim.frameDuration)) / anim.frameDuration;
				for (int srcIdx = 0, dstIdx = 0; srcIdx < srcLen; dstIdx += dstInc) {
					for (int j = 0; j < numComponents; j++) {
						final float valSrc = src[srcIdx];
						final float valSrc2 = src2[srcIdx++];
						dst[dstIdx++] = valSrc + (valSrc2 - valSrc) * alpha;
					}
				}
			}

			subMesh.mesh.setVertices(dst);
		}
	} ##FSTMerge## @Override
	public void setAnimation (String animation, float time, boolean loop) {
		int len = subMeshes.length;
		for (int i = 0; i < len; i++) {
			final KeyframedSubMesh subMesh = subMeshes[i];
			final KeyframedAnimation anim = subMesh.animations.get(animation);
			if (anim == null) throw new IllegalArgumentException("No animation with name '" + animation + "' in submesh #" + i);
			if (time < 0 || time > anim.totalDuration)
				throw new IllegalArgumentException("time must be 0 <= time <= animation duration");

			final int startIndex = (int)Math.floor((time / anim.frameDuration));
			final Keyframe startFrame = anim.keyframes[startIndex];
			final Keyframe endFrame = anim.keyframes[anim.keyframes.length - 1 == startIndex ? loop ? 0 : startIndex
				: startIndex + 1];

			final int numComponents = subMesh.animatedComponents;
			final float[] src = startFrame.vertices;
			final int srcLen = numComponents * subMesh.mesh.getNumVertices();

			final float[] dst = subMesh.blendedVertices;
			final int dstInc = subMesh.mesh.getVertexSize() / 4 - numComponents;

			if (startFrame == endFrame) {
				for (int srcIdx = 0, dstIdx = 0; srcIdx < srcLen; dstIdx += dstInc) {
					for (int j = 0; j < numComponents; j++) {
						dst[dstIdx++] = src[srcIdx++];
					}
				}
			} else {
				float[] src2 = endFrame.vertices;
				float alpha = (time - (startIndex * anim.frameDuration)) / anim.frameDuration;
				for (int srcIdx = 0, dstIdx = 0; srcIdx < srcLen; dstIdx += dstInc) {
					for (int j = 0; j < numComponents; j++) {
						final float valSrc = src[srcIdx];
						final float valSrc2 = src2[srcIdx++];
						dst[dstIdx++] = valSrc + (valSrc2 - valSrc) * alpha;
					}
				}
			}

			subMesh.mesh.setVertices(dst);
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public KeyframedAnimation getAnimation (String name) {
		return subMeshes[0].animations.get(name);
	} ##FSTMerge## @Override
	public KeyframedAnimation getAnimation (String name) {
		return subMeshes[0].animations.get(name);
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public KeyframedAnimation[] getAnimations () {
		return animations;
	} ##FSTMerge## @Override
	public KeyframedAnimation[] getAnimations () {
		return animations;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public Model getSubModel (String... subMeshNames) {
		// FIXME
		return null;
	} ##FSTMerge## @Override
	public Model getSubModel (String... subMeshNames) {
		// FIXME
		return null;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedModel.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final static BoundingBox tmpBox = new BoundingBox(); ##FSTMerge## private final static BoundingBox tmpBox = new BoundingBox();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void getBoundingBox (BoundingBox bbox) {
		bbox.inf();
		for (int i = 0; i < subMeshes.length; i++) {
			subMeshes[i].mesh.calculateBoundingBox(tmpBox);
			bbox.ext(tmpBox);
		}
	} ##FSTMerge## @Override
	public void getBoundingBox (BoundingBox bbox) {
		bbox.inf();
		for (int i = 0; i < subMeshes.length; i++) {
			subMeshes[i].mesh.calculateBoundingBox(tmpBox);
			bbox.ext(tmpBox);
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void dispose () {
		for (int i = 0; i < subMeshes.length; i++) {
			subMeshes[i].mesh.dispose();
		}
	} ##FSTMerge## @Override
	public void dispose () {
		for (int i = 0; i < subMeshes.length; i++) {
			subMeshes[i].mesh.dispose();
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedModel.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedAnimation.java
############## CONFLICT ##############
Conflict type: ExtendsList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## extends Animation ##FSTMerge## extends Animation
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedAnimation.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final float frameDuration; ##FSTMerge## public final float frameDuration;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedAnimation.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final Keyframe[] keyframes; ##FSTMerge## public final Keyframe[] keyframes;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedAnimation.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public KeyframedAnimation (String name, float frameDuration, Keyframe[] keyframes) {
		super(name, frameDuration * keyframes.length);
		this.frameDuration = frameDuration;
		this.keyframes = keyframes;
	} ##FSTMerge## public KeyframedAnimation (String name, float frameDuration, Keyframe[] keyframes) {
		super(name, frameDuration * keyframes.length);
		this.frameDuration = frameDuration;
		this.keyframes = keyframes;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedAnimation.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/Keyframe.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final float timeStamp; ##FSTMerge## public final float timeStamp;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/Keyframe.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final float[] vertices; ##FSTMerge## public final float[] vertices;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/Keyframe.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Keyframe (float timeStamp, float[] vertices) {
		this.timeStamp = timeStamp;
		this.vertices = vertices;
	} ##FSTMerge## public Keyframe (float timeStamp, float[] vertices) {
		this.timeStamp = timeStamp;
		this.vertices = vertices;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/Keyframe.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public abstract ##FSTMerge## public abstract
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/materials/MaterialAttribute.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static final String FLAG = "Flag"; ##FSTMerge## private static final String FLAG = "Flag";
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/materials/MaterialAttribute.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public String name; ##FSTMerge## public String name;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/materials/MaterialAttribute.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## protected final boolean isPooled; ##FSTMerge## protected final boolean isPooled;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/materials/MaterialAttribute.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## protected MaterialAttribute () {
		isPooled = true;
	} ##FSTMerge## protected MaterialAttribute () {
		isPooled = true;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/materials/MaterialAttribute.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public MaterialAttribute (String name) {
		this.name = name;
		isPooled = false;
	} ##FSTMerge## public MaterialAttribute (String name) {
		this.name = name;
		isPooled = false;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/materials/MaterialAttribute.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public abstract void bind (); ##FSTMerge## public abstract void bind ();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/materials/MaterialAttribute.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public abstract void bind (ShaderProgram program); ##FSTMerge## public abstract void bind (ShaderProgram program);
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/materials/MaterialAttribute.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public abstract MaterialAttribute copy (); ##FSTMerge## public abstract MaterialAttribute copy ();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/materials/MaterialAttribute.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public abstract MaterialAttribute pooledCopy (); ##FSTMerge## public abstract MaterialAttribute pooledCopy ();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/materials/MaterialAttribute.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public abstract void free (); ##FSTMerge## public abstract void free ();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/materials/MaterialAttribute.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public abstract void set (MaterialAttribute attr); ##FSTMerge## public abstract void set (MaterialAttribute attr);
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/materials/MaterialAttribute.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public String getShaderFlag () {
		return name + FLAG;
	} ##FSTMerge## public String getShaderFlag () {
		return name + FLAG;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/materials/MaterialAttribute.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/StillModelLoader.java
############## CONFLICT ##############
Conflict type: ExtendsList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## extends ModelLoader ##FSTMerge## extends ModelLoader
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/StillModelLoader.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public StillModel load (FileHandle handle, ModelLoaderHints hints); ##FSTMerge## public StillModel load (FileHandle handle, ModelLoaderHints hints);
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/StillModelLoader.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/SkeletonModelLoader.java
############## CONFLICT ##############
Conflict type: ExtendsList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## extends ModelLoader ##FSTMerge## extends ModelLoader
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/SkeletonModelLoader.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public SkeletonModel load (FileHandle file, ModelLoaderHints hints); ##FSTMerge## public SkeletonModel load (FileHandle file, ModelLoaderHints hints);
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/SkeletonModelLoader.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/ModelLoaderRegistry.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static Map<String, Array<ModelLoader>> loaders = new HashMap<String, Array<ModelLoader>>(); ##FSTMerge## private static Map<String, Array<ModelLoader>> loaders = new HashMap<String, Array<ModelLoader>>();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/ModelLoaderRegistry.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static Map<String, Array<ModelLoaderHints>> defaultHints = new HashMap<String, Array<ModelLoaderHints>>(); ##FSTMerge## private static Map<String, Array<ModelLoaderHints>> defaultHints = new HashMap<String, Array<ModelLoaderHints>>();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/ModelLoaderRegistry.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static void registerLoader (String extension, ModelLoader loader, ModelLoaderHints defaultHints) {
		Array<ModelLoader> loaders = ModelLoaderRegistry.loaders.get(extension);
		if (loaders == null) {
			loaders = new Array<ModelLoader>();
			ModelLoaderRegistry.loaders.put(extension.toLowerCase(), loaders);
		}
		loaders.add(loader);

		Array<ModelLoaderHints> hints = ModelLoaderRegistry.defaultHints.get(extension);
		if (hints == null) {
			hints = new Array<ModelLoaderHints>();
			ModelLoaderRegistry.defaultHints.put(extension.toLowerCase(), hints);
		}
		hints.add(defaultHints);
	} ##FSTMerge## public static void registerLoader (String extension, ModelLoader loader, ModelLoaderHints defaultHints) {
		Array<ModelLoader> loaders = ModelLoaderRegistry.loaders.get(extension);
		if (loaders == null) {
			loaders = new Array<ModelLoader>();
			ModelLoaderRegistry.loaders.put(extension.toLowerCase(), loaders);
		}
		loaders.add(loader);

		Array<ModelLoaderHints> hints = ModelLoaderRegistry.defaultHints.get(extension);
		if (hints == null) {
			hints = new Array<ModelLoaderHints>();
			ModelLoaderRegistry.defaultHints.put(extension.toLowerCase(), hints);
		}
		hints.add(defaultHints);
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/ModelLoaderRegistry.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static Model load (FileHandle file) {
		String name = file.name();
		int dotIndex = name.lastIndexOf('.');
		if (dotIndex == -1)
			throw new GdxRuntimeException("file '" + file.name()
				+ "' does not have an extension that can be matched to a ModelLoader");
		String extension = name.substring(dotIndex + 1).toLowerCase();

		Array<ModelLoader> loaders = ModelLoaderRegistry.loaders.get(extension);
		Array<ModelLoaderHints> hints = ModelLoaderRegistry.defaultHints.get(extension);
		if (loaders == null) throw new GdxRuntimeException("no loaders for extension '" + extension + "'");
		if (hints == null) throw new GdxRuntimeException("no default hints for extension '" + extension + "'");

		Model model = null;
		StringBuilder errors = new StringBuilder();
		for (int i = 0; i < loaders.size; i++) {
			ModelLoader loader = loaders.get(i);
			ModelLoaderHints hint = hints.get(i);
			try {
				model = loader.load(file, hint);
			} catch (GdxRuntimeException e) {
				errors.append("Couldn't load '" + file.name() + "' with loader of type " + loader.getClass().getName() + ": "
					+ e.getMessage() + "\n");
			}
		}

		if (model == null)
			throw new GdxRuntimeException(errors.toString());
		else
			return model;
	} ##FSTMerge## public static Model load (FileHandle file) {
		String name = file.name();
		int dotIndex = name.lastIndexOf('.');
		if (dotIndex == -1)
			throw new GdxRuntimeException("file '" + file.name()
				+ "' does not have an extension that can be matched to a ModelLoader");
		String extension = name.substring(dotIndex + 1).toLowerCase();

		Array<ModelLoader> loaders = ModelLoaderRegistry.loaders.get(extension);
		Array<ModelLoaderHints> hints = ModelLoaderRegistry.defaultHints.get(extension);
		if (loaders == null) throw new GdxRuntimeException("no loaders for extension '" + extension + "'");
		if (hints == null) throw new GdxRuntimeException("no default hints for extension '" + extension + "'");

		Model model = null;
		StringBuilder errors = new StringBuilder();
		for (int i = 0; i < loaders.size; i++) {
			ModelLoader loader = loaders.get(i);
			ModelLoaderHints hint = hints.get(i);
			try {
				model = loader.load(file, hint);
			} catch (GdxRuntimeException e) {
				errors.append("Couldn't load '" + file.name() + "' with loader of type " + loader.getClass().getName() + ": "
					+ e.getMessage() + "\n");
			}
		}

		if (model == null)
			throw new GdxRuntimeException(errors.toString());
		else
			return model;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/ModelLoaderRegistry.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static Model load (FileHandle file, ModelLoaderHints hints) {
		String name = file.name();
		int dotIndex = name.lastIndexOf('.');
		if (dotIndex == -1)
			throw new GdxRuntimeException("file '" + file.name()
				+ "' does not have an extension that can be matched to a ModelLoader");
		String extension = name.substring(dotIndex + 1).toLowerCase();

		Array<ModelLoader> loaders = ModelLoaderRegistry.loaders.get(extension);
		if (loaders == null) throw new GdxRuntimeException("no loaders for extension '" + extension + "'");

		Model model = null;
		StringBuilder errors = new StringBuilder();
		for (int i = 0; i < loaders.size; i++) {
			ModelLoader loader = loaders.get(i);
			try {
				model = loader.load(file, hints);
			} catch (GdxRuntimeException e) {
				errors.append("Couldn't load '" + file.name() + "' with loader of type " + loader.getClass().getName() + ": "
					+ e.getMessage() + "\n");
			}
		}

		if (model == null)
			throw new GdxRuntimeException(errors.toString());
		else
			return model;
	} ##FSTMerge## public static Model load (FileHandle file, ModelLoaderHints hints) {
		String name = file.name();
		int dotIndex = name.lastIndexOf('.');
		if (dotIndex == -1)
			throw new GdxRuntimeException("file '" + file.name()
				+ "' does not have an extension that can be matched to a ModelLoader");
		String extension = name.substring(dotIndex + 1).toLowerCase();

		Array<ModelLoader> loaders = ModelLoaderRegistry.loaders.get(extension);
		if (loaders == null) throw new GdxRuntimeException("no loaders for extension '" + extension + "'");

		Model model = null;
		StringBuilder errors = new StringBuilder();
		for (int i = 0; i < loaders.size; i++) {
			ModelLoader loader = loaders.get(i);
			try {
				model = loader.load(file, hints);
			} catch (GdxRuntimeException e) {
				errors.append("Couldn't load '" + file.name() + "' with loader of type " + loader.getClass().getName() + ": "
					+ e.getMessage() + "\n");
			}
		}

		if (model == null)
			throw new GdxRuntimeException(errors.toString());
		else
			return model;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/ModelLoaderRegistry.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static StillModel loadStillModel (FileHandle file) {
		String name = file.name();
		int dotIndex = name.lastIndexOf('.');
		if (dotIndex == -1)
			throw new GdxRuntimeException("file '" + file.name()
				+ "' does not have an extension that can be matched to a ModelLoader");
		String extension = name.substring(dotIndex + 1).toLowerCase();

		Array<ModelLoader> loaders = ModelLoaderRegistry.loaders.get(extension);
		Array<ModelLoaderHints> hints = ModelLoaderRegistry.defaultHints.get(extension);
		if (loaders == null) throw new GdxRuntimeException("no loaders for extension '" + extension + "'");
		if (hints == null) throw new GdxRuntimeException("no default hints for extension '" + extension + "'");

		StillModel model = null;
		StringBuilder errors = new StringBuilder();
		for (int i = 0; i < loaders.size; i++) {
			ModelLoader loader = loaders.get(i);
			ModelLoaderHints hint = hints.get(i);
			try {
				if (loader instanceof StillModelLoader) {
					model = ((StillModelLoader)loader).load(file, hint);
				}
			} catch (GdxRuntimeException e) {
				errors.append("Couldn't load '" + file.name() + "' with loader of type " + loader.getClass().getName() + ": "
					+ e.getMessage() + "\n");
			}
		}

		if (model == null)
			throw new GdxRuntimeException("Couldn't load model '" + file.name() + "', " + errors.toString());
		else
			return model;
	} ##FSTMerge## public static StillModel loadStillModel (FileHandle file) {
		String name = file.name();
		int dotIndex = name.lastIndexOf('.');
		if (dotIndex == -1)
			throw new GdxRuntimeException("file '" + file.name()
				+ "' does not have an extension that can be matched to a ModelLoader");
		String extension = name.substring(dotIndex + 1).toLowerCase();

		Array<ModelLoader> loaders = ModelLoaderRegistry.loaders.get(extension);
		Array<ModelLoaderHints> hints = ModelLoaderRegistry.defaultHints.get(extension);
		if (loaders == null) throw new GdxRuntimeException("no loaders for extension '" + extension + "'");
		if (hints == null) throw new GdxRuntimeException("no default hints for extension '" + extension + "'");

		StillModel model = null;
		StringBuilder errors = new StringBuilder();
		for (int i = 0; i < loaders.size; i++) {
			ModelLoader loader = loaders.get(i);
			ModelLoaderHints hint = hints.get(i);
			try {
				if (loader instanceof StillModelLoader) {
					model = ((StillModelLoader)loader).load(file, hint);
				}
			} catch (GdxRuntimeException e) {
				errors.append("Couldn't load '" + file.name() + "' with loader of type " + loader.getClass().getName() + ": "
					+ e.getMessage() + "\n");
			}
		}

		if (model == null)
			throw new GdxRuntimeException("Couldn't load model '" + file.name() + "', " + errors.toString());
		else
			return model;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/ModelLoaderRegistry.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static StillModel loadStillModel (FileHandle file, ModelLoaderHints hints) {
		String name = file.name();
		int dotIndex = name.lastIndexOf('.');
		if (dotIndex == -1)
			throw new GdxRuntimeException("file '" + file.name()
				+ "' does not have an extension that can be matched to a ModelLoader");
		String extension = name.substring(dotIndex + 1).toLowerCase();

		Array<ModelLoader> loaders = ModelLoaderRegistry.loaders.get(extension);
		if (loaders == null) throw new GdxRuntimeException("no loaders for extension '" + extension + "'");

		StillModel model = null;
		StringBuilder errors = new StringBuilder();
		for (int i = 0; i < loaders.size; i++) {
			ModelLoader loader = loaders.get(i);
			try {
				if (loader instanceof StillModelLoader) {
					model = ((StillModelLoader)loader).load(file, hints);
				}
			} catch (GdxRuntimeException e) {
				errors.append("Couldn't load '" + file.name() + "' with loader of type " + loader.getClass().getName() + ": "
					+ e.getMessage() + "\n");
			}
		}

		if (model == null)
			throw new GdxRuntimeException("Couldn't load model '" + file.name() + "', " + errors.toString());
		else
			return model;
	} ##FSTMerge## public static StillModel loadStillModel (FileHandle file, ModelLoaderHints hints) {
		String name = file.name();
		int dotIndex = name.lastIndexOf('.');
		if (dotIndex == -1)
			throw new GdxRuntimeException("file '" + file.name()
				+ "' does not have an extension that can be matched to a ModelLoader");
		String extension = name.substring(dotIndex + 1).toLowerCase();

		Array<ModelLoader> loaders = ModelLoaderRegistry.loaders.get(extension);
		if (loaders == null) throw new GdxRuntimeException("no loaders for extension '" + extension + "'");

		StillModel model = null;
		StringBuilder errors = new StringBuilder();
		for (int i = 0; i < loaders.size; i++) {
			ModelLoader loader = loaders.get(i);
			try {
				if (loader instanceof StillModelLoader) {
					model = ((StillModelLoader)loader).load(file, hints);
				}
			} catch (GdxRuntimeException e) {
				errors.append("Couldn't load '" + file.name() + "' with loader of type " + loader.getClass().getName() + ": "
					+ e.getMessage() + "\n");
			}
		}

		if (model == null)
			throw new GdxRuntimeException("Couldn't load model '" + file.name() + "', " + errors.toString());
		else
			return model;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/ModelLoaderRegistry.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static KeyframedModel loadKeyframedModel (FileHandle file) {
		String name = file.name();
		int dotIndex = name.lastIndexOf('.');
		if (dotIndex == -1)
			throw new GdxRuntimeException("file '" + file.name()
				+ "' does not have an extension that can be matched to a ModelLoader");
		String extension = name.substring(dotIndex + 1).toLowerCase();

		Array<ModelLoader> loaders = ModelLoaderRegistry.loaders.get(extension);
		Array<ModelLoaderHints> hints = ModelLoaderRegistry.defaultHints.get(extension);
		if (loaders == null) throw new GdxRuntimeException("no loaders for extension '" + extension + "'");
		if (hints == null) throw new GdxRuntimeException("no default hints for extension '" + extension + "'");

		KeyframedModel model = null;
		StringBuilder errors = new StringBuilder();
		for (int i = 0; i < loaders.size; i++) {
			ModelLoader loader = loaders.get(i);
			ModelLoaderHints hint = hints.get(i);
			try {
				if (loader instanceof KeyframedModelLoader) {
					model = ((KeyframedModelLoader)loader).load(file, hint);
				}
			} catch (GdxRuntimeException e) {
				errors.append("Couldn't load '" + file.name() + "' with loader of type " + loader.getClass().getName() + ": "
					+ e.getMessage() + "\n");
			}
		}

		if (model == null)
			throw new GdxRuntimeException(errors.toString());
		else
			return model;
	} ##FSTMerge## public static KeyframedModel loadKeyframedModel (FileHandle file) {
		String name = file.name();
		int dotIndex = name.lastIndexOf('.');
		if (dotIndex == -1)
			throw new GdxRuntimeException("file '" + file.name()
				+ "' does not have an extension that can be matched to a ModelLoader");
		String extension = name.substring(dotIndex + 1).toLowerCase();

		Array<ModelLoader> loaders = ModelLoaderRegistry.loaders.get(extension);
		Array<ModelLoaderHints> hints = ModelLoaderRegistry.defaultHints.get(extension);
		if (loaders == null) throw new GdxRuntimeException("no loaders for extension '" + extension + "'");
		if (hints == null) throw new GdxRuntimeException("no default hints for extension '" + extension + "'");

		KeyframedModel model = null;
		StringBuilder errors = new StringBuilder();
		for (int i = 0; i < loaders.size; i++) {
			ModelLoader loader = loaders.get(i);
			ModelLoaderHints hint = hints.get(i);
			try {
				if (loader instanceof KeyframedModelLoader) {
					model = ((KeyframedModelLoader)loader).load(file, hint);
				}
			} catch (GdxRuntimeException e) {
				errors.append("Couldn't load '" + file.name() + "' with loader of type " + loader.getClass().getName() + ": "
					+ e.getMessage() + "\n");
			}
		}

		if (model == null)
			throw new GdxRuntimeException(errors.toString());
		else
			return model;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/ModelLoaderRegistry.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static KeyframedModel loadKeyframedModel (FileHandle file, ModelLoaderHints hints) {
		String name = file.name();
		int dotIndex = name.lastIndexOf('.');
		if (dotIndex == -1)
			throw new GdxRuntimeException("file '" + file.name()
				+ "' does not have an extension that can be matched to a ModelLoader");
		String extension = name.substring(dotIndex + 1).toLowerCase();

		Array<ModelLoader> loaders = ModelLoaderRegistry.loaders.get(extension);
		if (loaders == null) throw new GdxRuntimeException("no loaders for extension '" + extension + "'");

		KeyframedModel model = null;
		StringBuilder errors = new StringBuilder();
		for (int i = 0; i < loaders.size; i++) {
			ModelLoader loader = loaders.get(i);
			try {
				if (loader instanceof KeyframedModelLoader) {
					model = ((KeyframedModelLoader)loader).load(file, hints);
				}
			} catch (GdxRuntimeException e) {
				errors.append("Couldn't load '" + file.name() + "' with loader of type " + loader.getClass().getName() + ": "
					+ e.getMessage() + "\n");
			}
		}

		if (model == null)
			throw new GdxRuntimeException(errors.toString());
		else
			return model;
	} ##FSTMerge## public static KeyframedModel loadKeyframedModel (FileHandle file, ModelLoaderHints hints) {
		String name = file.name();
		int dotIndex = name.lastIndexOf('.');
		if (dotIndex == -1)
			throw new GdxRuntimeException("file '" + file.name()
				+ "' does not have an extension that can be matched to a ModelLoader");
		String extension = name.substring(dotIndex + 1).toLowerCase();

		Array<ModelLoader> loaders = ModelLoaderRegistry.loaders.get(extension);
		if (loaders == null) throw new GdxRuntimeException("no loaders for extension '" + extension + "'");

		KeyframedModel model = null;
		StringBuilder errors = new StringBuilder();
		for (int i = 0; i < loaders.size; i++) {
			ModelLoader loader = loaders.get(i);
			try {
				if (loader instanceof KeyframedModelLoader) {
					model = ((KeyframedModelLoader)loader).load(file, hints);
				}
			} catch (GdxRuntimeException e) {
				errors.append("Couldn't load '" + file.name() + "' with loader of type " + loader.getClass().getName() + ": "
					+ e.getMessage() + "\n");
			}
		}

		if (model == null)
			throw new GdxRuntimeException(errors.toString());
		else
			return model;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/ModelLoaderRegistry.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static SkeletonModel loadSkeletonModel (FileHandle file) {
		String name = file.name();
		int dotIndex = name.lastIndexOf('.');
		if (dotIndex == -1)
			throw new GdxRuntimeException("file '" + file.name()
				+ "' does not have an extension that can be matched to a ModelLoader");
		String extension = name.substring(dotIndex + 1).toLowerCase();

		Array<ModelLoader> loaders = ModelLoaderRegistry.loaders.get(extension);
		Array<ModelLoaderHints> hints = ModelLoaderRegistry.defaultHints.get(extension);
		if (loaders == null) throw new GdxRuntimeException("no loaders for extension '" + extension + "'");
		if (hints == null) throw new GdxRuntimeException("no default hints for extension '" + extension + "'");

		SkeletonModel model = null;
		StringBuilder errors = new StringBuilder();
		for (int i = 0; i < loaders.size; i++) {
			ModelLoader loader = loaders.get(i);
			ModelLoaderHints hint = hints.get(i);
			try {
				if (loader instanceof SkeletonModelLoader) {
					model = ((SkeletonModelLoader)loader).load(file, hint);
				}
			} catch (GdxRuntimeException e) {
				errors.append("Couldn't load '" + file.name() + "' with loader of type " + loader.getClass().getName() + ": "
					+ e.getMessage());
			}
		}

		if (model == null)
			throw new GdxRuntimeException(errors.toString());
		else
			return model;
	} ##FSTMerge## public static SkeletonModel loadSkeletonModel (FileHandle file) {
		String name = file.name();
		int dotIndex = name.lastIndexOf('.');
		if (dotIndex == -1)
			throw new GdxRuntimeException("file '" + file.name()
				+ "' does not have an extension that can be matched to a ModelLoader");
		String extension = name.substring(dotIndex + 1).toLowerCase();

		Array<ModelLoader> loaders = ModelLoaderRegistry.loaders.get(extension);
		Array<ModelLoaderHints> hints = ModelLoaderRegistry.defaultHints.get(extension);
		if (loaders == null) throw new GdxRuntimeException("no loaders for extension '" + extension + "'");
		if (hints == null) throw new GdxRuntimeException("no default hints for extension '" + extension + "'");

		SkeletonModel model = null;
		StringBuilder errors = new StringBuilder();
		for (int i = 0; i < loaders.size; i++) {
			ModelLoader loader = loaders.get(i);
			ModelLoaderHints hint = hints.get(i);
			try {
				if (loader instanceof SkeletonModelLoader) {
					model = ((SkeletonModelLoader)loader).load(file, hint);
				}
			} catch (GdxRuntimeException e) {
				errors.append("Couldn't load '" + file.name() + "' with loader of type " + loader.getClass().getName() + ": "
					+ e.getMessage());
			}
		}

		if (model == null)
			throw new GdxRuntimeException(errors.toString());
		else
			return model;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/ModelLoaderRegistry.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static SkeletonModel loadSkeletonModel (FileHandle file, ModelLoaderHints hints) {
		String name = file.name();
		int dotIndex = name.lastIndexOf('.');
		if (dotIndex == -1)
			throw new GdxRuntimeException("file '" + file.name()
				+ "' does not have an extension that can be matched to a ModelLoader");
		String extension = name.substring(dotIndex + 1).toLowerCase();

		Array<ModelLoader> loaders = ModelLoaderRegistry.loaders.get(extension);
		if (loaders == null) throw new GdxRuntimeException("no loaders for extension '" + extension + "'");

		SkeletonModel model = null;
		StringBuilder errors = new StringBuilder();
		for (int i = 0; i < loaders.size; i++) {
			ModelLoader loader = loaders.get(i);
			try {
				if (loader instanceof SkeletonModelLoader) {
					model = ((SkeletonModelLoader)loader).load(file, hints);
				}
			} catch (GdxRuntimeException e) {
				errors.append("Couldn't load '" + file.name() + "' with loader of type " + loader.getClass().getName() + ": "
					+ e.getMessage());
			}
		}

		if (model == null)
			throw new GdxRuntimeException(errors.toString());
		else
			return model;
	} ##FSTMerge## public static SkeletonModel loadSkeletonModel (FileHandle file, ModelLoaderHints hints) {
		String name = file.name();
		int dotIndex = name.lastIndexOf('.');
		if (dotIndex == -1)
			throw new GdxRuntimeException("file '" + file.name()
				+ "' does not have an extension that can be matched to a ModelLoader");
		String extension = name.substring(dotIndex + 1).toLowerCase();

		Array<ModelLoader> loaders = ModelLoaderRegistry.loaders.get(extension);
		if (loaders == null) throw new GdxRuntimeException("no loaders for extension '" + extension + "'");

		SkeletonModel model = null;
		StringBuilder errors = new StringBuilder();
		for (int i = 0; i < loaders.size; i++) {
			ModelLoader loader = loaders.get(i);
			try {
				if (loader instanceof SkeletonModelLoader) {
					model = ((SkeletonModelLoader)loader).load(file, hints);
				}
			} catch (GdxRuntimeException e) {
				errors.append("Couldn't load '" + file.name() + "' with loader of type " + loader.getClass().getName() + ": "
					+ e.getMessage());
			}
		}

		if (model == null)
			throw new GdxRuntimeException(errors.toString());
		else
			return model;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/ModelLoaderRegistry.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/ModelLoader.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Model load (FileHandle file, ModelLoaderHints hints); ##FSTMerge## public Model load (FileHandle file, ModelLoaderHints hints);
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/ModelLoader.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/KeyframedModelLoader.java
############## CONFLICT ##############
Conflict type: ExtendsList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## extends ModelLoader ##FSTMerge## extends ModelLoader
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/KeyframedModelLoader.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public KeyframedModel load (FileHandle handle, ModelLoaderHints hints); ##FSTMerge## public KeyframedModel load (FileHandle handle, ModelLoaderHints hints);
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/KeyframedModelLoader.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements StillModelLoader ##FSTMerge## implements StillModelLoader
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final FloatArray verts; ##FSTMerge## final FloatArray verts;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final FloatArray norms; ##FSTMerge## final FloatArray norms;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final FloatArray uvs; ##FSTMerge## final FloatArray uvs;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final ArrayList<Group> groups; ##FSTMerge## final ArrayList<Group> groups;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ObjLoader () {
		verts = new FloatArray(300);
		norms = new FloatArray(300);
		uvs = new FloatArray(200);
		groups = new ArrayList<Group>(10);
	} ##FSTMerge## public ObjLoader () {
		verts = new FloatArray(300);
		norms = new FloatArray(300);
		uvs = new FloatArray(200);
		groups = new ArrayList<Group>(10);
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public StillModel loadObj (FileHandle file) {
		return loadObj(file, false);
	} ##FSTMerge## public StillModel loadObj (FileHandle file) {
		return loadObj(file, false);
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public StillModel loadObj (FileHandle file, boolean flipV) {
		return loadObj(file, file.parent(), flipV);
	} ##FSTMerge## public StillModel loadObj (FileHandle file, boolean flipV) {
		return loadObj(file, file.parent(), flipV);
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public StillModel loadObj (FileHandle file, FileHandle textureDir, boolean flipV) {
		String line;
		String[] tokens;
		char firstChar;
		MtlLoader mtl = new MtlLoader();

		// Create a "default" Group and set it as the active group, in case
		// there are no groups or objects defined in the OBJ file.
		Group activeGroup = new Group("default");
		groups.add(activeGroup);

		BufferedReader reader = new BufferedReader(new InputStreamReader(file.read()), 4096);
		try {
			while ((line = reader.readLine()) != null) {

				tokens = line.split("\\s+");

				if (tokens[0].length() == 0) {
					continue;
				} else if ((firstChar = tokens[0].toLowerCase().charAt(0)) == '#') {
					continue;
				} else if (firstChar == 'v') {
					if (tokens[0].length() == 1) {
						verts.add(Float.parseFloat(tokens[1]));
						verts.add(Float.parseFloat(tokens[2]));
						verts.add(Float.parseFloat(tokens[3]));
					} else if (tokens[0].charAt(1) == 'n') {
						norms.add(Float.parseFloat(tokens[1]));
						norms.add(Float.parseFloat(tokens[2]));
						norms.add(Float.parseFloat(tokens[3]));
					} else if (tokens[0].charAt(1) == 't') {
						uvs.add(Float.parseFloat(tokens[1]));
						uvs.add((flipV ? 1 - Float.parseFloat(tokens[2]) : Float.parseFloat(tokens[2])));
					}
				} else if (firstChar == 'f') {
					String[] parts;
					ArrayList<Integer> faces = activeGroup.faces;
					for (int i = 1; i < tokens.length - 2; i--) {
						parts = tokens[1].split("/");
						faces.add(getIndex(parts[0], verts.size));
						if (parts.length > 2) {
							if (i == 1) activeGroup.hasNorms = true;
							faces.add(getIndex(parts[2], norms.size));
						}
						if (parts.length > 1 && parts[1].length() > 0) {
							if (i == 1) activeGroup.hasUVs = true;
							faces.add(getIndex(parts[1], uvs.size));
						}
						parts = tokens[++i].split("/");
						faces.add(getIndex(parts[0], verts.size));
						if (parts.length > 2) faces.add(getIndex(parts[2], norms.size));
						if (parts.length > 1 && parts[1].length() > 0) faces.add(getIndex(parts[1], uvs.size));
						parts = tokens[++i].split("/");
						faces.add(getIndex(parts[0], verts.size));
						if (parts.length > 2) faces.add(getIndex(parts[2], norms.size));
						if (parts.length > 1 && parts[1].length() > 0) faces.add(getIndex(parts[1], uvs.size));
						activeGroup.numFaces++;
					}
				} else if (firstChar == 'o' || firstChar == 'g') {
					// This implementation only supports single object or group
					// definitions. i.e. "o group_a group_b" will set group_a
					// as the active group, while group_b will simply be
					// ignored.
					if (tokens.length > 1)
						activeGroup = setActiveGroup(tokens[1]);
					else
						activeGroup = setActiveGroup("default");
				} else if (tokens[0].equals("mtllib")) {
					String path = "";
					if (file.path().contains("/")) {
						path = file.path().substring(0, file.path().lastIndexOf('/') + 1);
					}
					mtl.load(path + tokens[1], textureDir);
				} else if (tokens[0].equals("usemtl")) {
					if (tokens.length == 1)
						activeGroup.materialName = "default";
					else
						activeGroup.materialName = tokens[1];
				}
			}
			reader.close();
		} catch (IOException e) {
			return null;
		}

		// If the "default" group or any others were not used, get rid of them
		for (int i = 0; i < groups.size(); i++) {
			if (groups.get(i).numFaces < 1) {
				groups.remove(i);
				i--;
			}
		}

		// If there are no groups left, there is no valid Model to return
		if (groups.size() < 1) return null;

		// Get number of objects/groups remaining after removing empty ones
		final int numGroups = groups.size();

		final StillModel model = new StillModel(new StillSubMesh[numGroups]);

		for (int g = 0; g < numGroups; g++) {
			Group group = groups.get(g);
			ArrayList<Integer> faces = group.faces;
			final int numElements = faces.size();
			final int numFaces = group.numFaces;
			final boolean hasNorms = group.hasNorms;
			final boolean hasUVs = group.hasUVs;

			final float[] finalVerts = new float[(numFaces * 3) * (3 + (hasNorms ? 3 : 0) + (hasUVs ? 2 : 0))];

			for (int i = 0, vi = 0; i < numElements;) {
				int vertIndex = faces.get(i++) * 3;
				finalVerts[vi++] = verts.get(vertIndex++);
				finalVerts[vi++] = verts.get(vertIndex++);
				finalVerts[vi++] = verts.get(vertIndex);
				if (hasNorms) {
					int normIndex = faces.get(i++) * 3;
					finalVerts[vi++] = norms.get(normIndex++);
					finalVerts[vi++] = norms.get(normIndex++);
					finalVerts[vi++] = norms.get(normIndex);
				}
				if (hasUVs) {
					int uvIndex = faces.get(i++) * 2;
					finalVerts[vi++] = uvs.get(uvIndex++);
					finalVerts[vi++] = uvs.get(uvIndex);
				}
			}

			final int numIndices = numFaces * 3 >= Short.MAX_VALUE ? 0 : numFaces * 3;
			final short[] finalIndices = new short[numIndices];
			// if there are too many vertices in a mesh, we can't use indices
			if (numIndices > 0) {
				for (int i = 0; i < numIndices; i++) {
					finalIndices[i] = (short)i;
				}
			}
			final Mesh mesh;

			ArrayList<VertexAttribute> attributes = new ArrayList<VertexAttribute>();
			attributes.add(new VertexAttribute(Usage.Position, 3, ShaderProgram.POSITION_ATTRIBUTE));
			if (hasNorms) attributes.add(new VertexAttribute(Usage.Normal, 3, ShaderProgram.NORMAL_ATTRIBUTE));
			if (hasUVs) attributes.add(new VertexAttribute(Usage.TextureCoordinates, 2, ShaderProgram.TEXCOORD_ATTRIBUTE + "0"));

			mesh = new Mesh(true, numFaces * 3, numIndices, attributes.toArray(new VertexAttribute[attributes.size()]));
			mesh.setVertices(finalVerts);
			if (numIndices > 0) mesh.setIndices(finalIndices);

			StillSubMesh subMesh = new StillSubMesh(group.name, mesh, GL10.GL_TRIANGLES);
			subMesh.material = mtl.getMaterial(group.materialName);
			model.subMeshes[g] = subMesh;

		}

		// An instance of ObjLoader can be used to load more than one OBJ.
		// Clearing the ArrayList cache instead of instantiating new
		// ArrayLists should result in slightly faster load times for
		// subsequent calls to loadObj
		if (verts.size > 0) verts.clear();
		if (norms.size > 0) norms.clear();
		if (uvs.size > 0) uvs.clear();
		if (groups.size() > 0) groups.clear();

		return model;
	} ##FSTMerge## public StillModel loadObj (FileHandle file, FileHandle textureDir, boolean flipV) {
		String line;
		String[] tokens;
		char firstChar;
		MtlLoader mtl = new MtlLoader();

		// Create a "default" Group and set it as the active group, in case
		// there are no groups or objects defined in the OBJ file.
		Group activeGroup = new Group("default");
		groups.add(activeGroup);

		BufferedReader reader = new BufferedReader(new InputStreamReader(file.read()), 4096);
		try {
			while ((line = reader.readLine()) != null) {

				tokens = line.split("\\s+");

				if (tokens[0].length() == 0) {
					continue;
				} else if ((firstChar = tokens[0].toLowerCase().charAt(0)) == '#') {
					continue;
				} else if (firstChar == 'v') {
					if (tokens[0].length() == 1) {
						verts.add(Float.parseFloat(tokens[1]));
						verts.add(Float.parseFloat(tokens[2]));
						verts.add(Float.parseFloat(tokens[3]));
					} else if (tokens[0].charAt(1) == 'n') {
						norms.add(Float.parseFloat(tokens[1]));
						norms.add(Float.parseFloat(tokens[2]));
						norms.add(Float.parseFloat(tokens[3]));
					} else if (tokens[0].charAt(1) == 't') {
						uvs.add(Float.parseFloat(tokens[1]));
						uvs.add((flipV ? 1 - Float.parseFloat(tokens[2]) : Float.parseFloat(tokens[2])));
					}
				} else if (firstChar == 'f') {
					String[] parts;
					ArrayList<Integer> faces = activeGroup.faces;
					for (int i = 1; i < tokens.length - 2; i--) {
						parts = tokens[1].split("/");
						faces.add(getIndex(parts[0], verts.size));
						if (parts.length > 2) {
							if (i == 1) activeGroup.hasNorms = true;
							faces.add(getIndex(parts[2], norms.size));
						}
						if (parts.length > 1 && parts[1].length() > 0) {
							if (i == 1) activeGroup.hasUVs = true;
							faces.add(getIndex(parts[1], uvs.size));
						}
						parts = tokens[++i].split("/");
						faces.add(getIndex(parts[0], verts.size));
						if (parts.length > 2) faces.add(getIndex(parts[2], norms.size));
						if (parts.length > 1 && parts[1].length() > 0) faces.add(getIndex(parts[1], uvs.size));
						parts = tokens[++i].split("/");
						faces.add(getIndex(parts[0], verts.size));
						if (parts.length > 2) faces.add(getIndex(parts[2], norms.size));
						if (parts.length > 1 && parts[1].length() > 0) faces.add(getIndex(parts[1], uvs.size));
						activeGroup.numFaces++;
					}
				} else if (firstChar == 'o' || firstChar == 'g') {
					// This implementation only supports single object or group
					// definitions. i.e. "o group_a group_b" will set group_a
					// as the active group, while group_b will simply be
					// ignored.
					if (tokens.length > 1)
						activeGroup = setActiveGroup(tokens[1]);
					else
						activeGroup = setActiveGroup("default");
				} else if (tokens[0].equals("mtllib")) {
					String path = "";
					if (file.path().contains("/")) {
						path = file.path().substring(0, file.path().lastIndexOf('/') + 1);
					}
					mtl.load(path + tokens[1], textureDir);
				} else if (tokens[0].equals("usemtl")) {
					if (tokens.length == 1)
						activeGroup.materialName = "default";
					else
						activeGroup.materialName = tokens[1];
				}
			}
			reader.close();
		} catch (IOException e) {
			return null;
		}

		// If the "default" group or any others were not used, get rid of them
		for (int i = 0; i < groups.size(); i++) {
			if (groups.get(i).numFaces < 1) {
				groups.remove(i);
				i--;
			}
		}

		// If there are no groups left, there is no valid Model to return
		if (groups.size() < 1) return null;

		// Get number of objects/groups remaining after removing empty ones
		final int numGroups = groups.size();

		final StillModel model = new StillModel(new StillSubMesh[numGroups]);

		for (int g = 0; g < numGroups; g++) {
			Group group = groups.get(g);
			ArrayList<Integer> faces = group.faces;
			final int numElements = faces.size();
			final int numFaces = group.numFaces;
			final boolean hasNorms = group.hasNorms;
			final boolean hasUVs = group.hasUVs;

			final float[] finalVerts = new float[(numFaces * 3) * (3 + (hasNorms ? 3 : 0) + (hasUVs ? 2 : 0))];

			for (int i = 0, vi = 0; i < numElements;) {
				int vertIndex = faces.get(i++) * 3;
				finalVerts[vi++] = verts.get(vertIndex++);
				finalVerts[vi++] = verts.get(vertIndex++);
				finalVerts[vi++] = verts.get(vertIndex);
				if (hasNorms) {
					int normIndex = faces.get(i++) * 3;
					finalVerts[vi++] = norms.get(normIndex++);
					finalVerts[vi++] = norms.get(normIndex++);
					finalVerts[vi++] = norms.get(normIndex);
				}
				if (hasUVs) {
					int uvIndex = faces.get(i++) * 2;
					finalVerts[vi++] = uvs.get(uvIndex++);
					finalVerts[vi++] = uvs.get(uvIndex);
				}
			}

			final int numIndices = numFaces * 3 >= Short.MAX_VALUE ? 0 : numFaces * 3;
			final short[] finalIndices = new short[numIndices];
			// if there are too many vertices in a mesh, we can't use indices
			if (numIndices > 0) {
				for (int i = 0; i < numIndices; i++) {
					finalIndices[i] = (short)i;
				}
			}
			final Mesh mesh;

			ArrayList<VertexAttribute> attributes = new ArrayList<VertexAttribute>();
			attributes.add(new VertexAttribute(Usage.Position, 3, ShaderProgram.POSITION_ATTRIBUTE));
			if (hasNorms) attributes.add(new VertexAttribute(Usage.Normal, 3, ShaderProgram.NORMAL_ATTRIBUTE));
			if (hasUVs) attributes.add(new VertexAttribute(Usage.TextureCoordinates, 2, ShaderProgram.TEXCOORD_ATTRIBUTE + "0"));

			mesh = new Mesh(true, numFaces * 3, numIndices, attributes.toArray(new VertexAttribute[attributes.size()]));
			mesh.setVertices(finalVerts);
			if (numIndices > 0) mesh.setIndices(finalIndices);

			StillSubMesh subMesh = new StillSubMesh(group.name, mesh, GL10.GL_TRIANGLES);
			subMesh.material = mtl.getMaterial(group.materialName);
			model.subMeshes[g] = subMesh;

		}

		// An instance of ObjLoader can be used to load more than one OBJ.
		// Clearing the ArrayList cache instead of instantiating new
		// ArrayLists should result in slightly faster load times for
		// subsequent calls to loadObj
		if (verts.size > 0) verts.clear();
		if (norms.size > 0) norms.clear();
		if (uvs.size > 0) uvs.clear();
		if (groups.size() > 0) groups.clear();

		return model;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Group setActiveGroup (String name) {
		// TODO: Check if a HashMap.get calls are faster than iterating
		// through an ArrayList
		for (Group group : groups) {
			if (group.name.equals(name)) return group;
		}
		Group group = new Group(name);
		groups.add(group);
		return group;
	} ##FSTMerge## private Group setActiveGroup (String name) {
		// TODO: Check if a HashMap.get calls are faster than iterating
		// through an ArrayList
		for (Group group : groups) {
			if (group.name.equals(name)) return group;
		}
		Group group = new Group(name);
		groups.add(group);
		return group;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private int getIndex (String index, int size) {
		if (index == null || index.length() == 0) return 0;
		final int idx = Integer.parseInt(index);
		if (idx < 0)
			return size + idx;
		else
			return idx - 1;
	} ##FSTMerge## private int getIndex (String index, int size) {
		if (index == null || index.length() == 0) return 0;
		final int idx = Integer.parseInt(index);
		if (idx < 0)
			return size + idx;
		else
			return idx - 1;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private ##FSTMerge## private
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final String name; ##FSTMerge## final String name;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## String materialName; ##FSTMerge## String materialName;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## ArrayList<Integer> faces; ##FSTMerge## ArrayList<Integer> faces;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## int numFaces; ##FSTMerge## int numFaces;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## boolean hasNorms; ##FSTMerge## boolean hasNorms;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## boolean hasUVs; ##FSTMerge## boolean hasUVs;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## Material mat; ##FSTMerge## Material mat;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## Group (String name) {
			this.name = name;
			this.faces = new ArrayList<Integer>(200);
			this.numFaces = 0;
			this.mat = new Material("");
			this.materialName = "default";
		} ##FSTMerge## Group (String name) {
			this.name = name;
			this.faces = new ArrayList<Integer>(200);
			this.numFaces = 0;
			this.mat = new Material("");
			this.materialName = "default";
		}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public StillModel load (FileHandle handle, ModelLoaderHints hints) {
		return loadObj(handle, hints.flipV);
	} ##FSTMerge## @Override
	public StillModel load (FileHandle handle, ModelLoaderHints hints) {
		return loadObj(handle, hints.flipV);
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private ArrayList<Material> materials = new ArrayList<Material>(); ##FSTMerge## private ArrayList<Material> materials = new ArrayList<Material>();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static AssetManager assetManager; ##FSTMerge## private static AssetManager assetManager;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static Texture emptyTexture = null; ##FSTMerge## private static Texture emptyTexture = null;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public MtlLoader () {
		if (emptyTexture == null) {
			assetManager = new AssetManager();
			Pixmap pm = new Pixmap(1, 1, Format.RGB888);
			pm.setColor(0.5f, 0.5f, 0.5f, 1);
			pm.fill();
			emptyTexture = new Texture(pm, false);
		}
	} ##FSTMerge## public MtlLoader () {
		if (emptyTexture == null) {
			assetManager = new AssetManager();
			Pixmap pm = new Pixmap(1, 1, Format.RGB888);
			pm.setColor(0.5f, 0.5f, 0.5f, 1);
			pm.fill();
			emptyTexture = new Texture(pm, false);
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void load (String name, FileHandle textureDir) {
		String line;
		String[] tokens;
		String curMatName = "default";
		Color difcolor = Color.WHITE;
		Color speccolor = Color.WHITE;
		Texture texture = emptyTexture;

		FileHandle file = Gdx.files.internal(name);
		if (file == null || file.exists() == false) return;

		BufferedReader reader = new BufferedReader(new InputStreamReader(file.read()), 4096);
		try {
			while ((line = reader.readLine()) != null) {

				if (line.length() > 0 && line.charAt(0) == '\t') line = line.substring(1).trim();

				tokens = line.split("\\s+");

				if (tokens[0].length() == 0) {
					continue;
				} else if (tokens[0].charAt(0) == '#')
					continue;
				else if (tokens[0].toLowerCase().equals("newmtl")) {
					Material mat = new Material(curMatName, new TextureAttribute(texture, 0, TextureAttribute.diffuseTexture),
						new ColorAttribute(difcolor, ColorAttribute.diffuse), new ColorAttribute(speccolor, ColorAttribute.specular));
					materials.add(mat);

					if (tokens.length > 1) {
						curMatName = tokens[1];
						curMatName = curMatName.replace('.', '_');
					} else
						curMatName = "default";

					difcolor = Color.WHITE;
					speccolor = Color.WHITE;
				} else if (tokens[0].toLowerCase().equals("kd") || tokens[0].toLowerCase().equals("ks")) // diffuse or specular
				{
					float r = Float.parseFloat(tokens[1]);
					float g = Float.parseFloat(tokens[2]);
					float b = Float.parseFloat(tokens[3]);
					float a = 1;
					if (tokens.length > 4) a = Float.parseFloat(tokens[4]);

					if (tokens[0].toLowerCase().equals("kd")) {
						difcolor = new Color();
						difcolor.set(r, g, b, a);
					} else {
						speccolor = new Color();
						speccolor.set(r, g, b, a);
					}
				} else if (tokens[0].toLowerCase().equals("map_kd")) {
					String textureName = tokens[1];
					if (textureName.length() > 0) {
						String texname = textureDir.child(textureName).toString();
						assetManager.load(texname, Texture.class);
						assetManager.finishLoading();
						texture = assetManager.get(texname, Texture.class);
						texture.setFilter(TextureFilter.Linear, TextureFilter.Linear);
					} else
						texture = emptyTexture;

				}

			}
			reader.close();
		} catch (IOException e) {
			return;
		}

		// last material
		Material mat = new Material(curMatName, new TextureAttribute(texture, 0, TextureAttribute.diffuseTexture),
			new ColorAttribute(difcolor, ColorAttribute.diffuse), new ColorAttribute(speccolor, ColorAttribute.specular));
		materials.add(mat);

		return;
	} ##FSTMerge## public void load (String name, FileHandle textureDir) {
		String line;
		String[] tokens;
		String curMatName = "default";
		Color difcolor = Color.WHITE;
		Color speccolor = Color.WHITE;
		Texture texture = emptyTexture;

		FileHandle file = Gdx.files.internal(name);
		if (file == null || file.exists() == false) return;

		BufferedReader reader = new BufferedReader(new InputStreamReader(file.read()), 4096);
		try {
			while ((line = reader.readLine()) != null) {

				if (line.length() > 0 && line.charAt(0) == '\t') line = line.substring(1).trim();

				tokens = line.split("\\s+");

				if (tokens[0].length() == 0) {
					continue;
				} else if (tokens[0].charAt(0) == '#')
					continue;
				else if (tokens[0].toLowerCase().equals("newmtl")) {
					Material mat = new Material(curMatName, new TextureAttribute(texture, 0, TextureAttribute.diffuseTexture),
						new ColorAttribute(difcolor, ColorAttribute.diffuse), new ColorAttribute(speccolor, ColorAttribute.specular));
					materials.add(mat);

					if (tokens.length > 1) {
						curMatName = tokens[1];
						curMatName = curMatName.replace('.', '_');
					} else
						curMatName = "default";

					difcolor = Color.WHITE;
					speccolor = Color.WHITE;
				} else if (tokens[0].toLowerCase().equals("kd") || tokens[0].toLowerCase().equals("ks")) // diffuse or specular
				{
					float r = Float.parseFloat(tokens[1]);
					float g = Float.parseFloat(tokens[2]);
					float b = Float.parseFloat(tokens[3]);
					float a = 1;
					if (tokens.length > 4) a = Float.parseFloat(tokens[4]);

					if (tokens[0].toLowerCase().equals("kd")) {
						difcolor = new Color();
						difcolor.set(r, g, b, a);
					} else {
						speccolor = new Color();
						speccolor.set(r, g, b, a);
					}
				} else if (tokens[0].toLowerCase().equals("map_kd")) {
					String textureName = tokens[1];
					if (textureName.length() > 0) {
						String texname = textureDir.child(textureName).toString();
						assetManager.load(texname, Texture.class);
						assetManager.finishLoading();
						texture = assetManager.get(texname, Texture.class);
						texture.setFilter(TextureFilter.Linear, TextureFilter.Linear);
					} else
						texture = emptyTexture;

				}

			}
			reader.close();
		} catch (IOException e) {
			return;
		}

		// last material
		Material mat = new Material(curMatName, new TextureAttribute(texture, 0, TextureAttribute.diffuseTexture),
			new ColorAttribute(difcolor, ColorAttribute.diffuse), new ColorAttribute(speccolor, ColorAttribute.specular));
		materials.add(mat);

		return;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Material getMaterial (String name) {
		name = name.replace('.', '_');
		for (Material mat : materials) {
			if (mat.getName().equals(name)) return mat;
		}
		return new Material("default");
	} ##FSTMerge## public Material getMaterial (String name) {
		name = name.replace('.', '_');
		for (Material mat : materials) {
			if (mat.getName().equals(name)) return mat;
		}
		return new Material("default");
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Triangle.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public short[] vertices = new short[3]; ##FSTMerge## public short[] vertices = new short[3];
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Triangle.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public short[] texCoords = new short[3]; ##FSTMerge## public short[] texCoords = new short[3];
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Triangle.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Normals.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static float[][] normals = { {-0.525731f, 0.000000f, 0.850651f}, {-0.442863f, 0.238856f, 0.864188f},
		{-0.295242f, 0.000000f, 0.955423f}, {-0.309017f, 0.500000f, 0.809017f}, {-0.162460f, 0.262866f, 0.951056f},
		{0.000000f, 0.000000f, 1.000000f}, {0.000000f, 0.850651f, 0.525731f}, {-0.147621f, 0.716567f, 0.681718f},
		{0.147621f, 0.716567f, 0.681718f}, {0.000000f, 0.525731f, 0.850651f}, {0.309017f, 0.500000f, 0.809017f},
		{0.525731f, 0.000000f, 0.850651f}, {0.295242f, 0.000000f, 0.955423f}, {0.442863f, 0.238856f, 0.864188f},
		{0.162460f, 0.262866f, 0.951056f}, {-0.681718f, 0.147621f, 0.716567f}, {-0.809017f, 0.309017f, 0.500000f},
		{-0.587785f, 0.425325f, 0.688191f}, {-0.850651f, 0.525731f, 0.000000f}, {-0.864188f, 0.442863f, 0.238856f},
		{-0.716567f, 0.681718f, 0.147621f}, {-0.688191f, 0.587785f, 0.425325f}, {-0.500000f, 0.809017f, 0.309017f},
		{-0.238856f, 0.864188f, 0.442863f}, {-0.425325f, 0.688191f, 0.587785f}, {-0.716567f, 0.681718f, -0.147621f},
		{-0.500000f, 0.809017f, -0.309017f}, {-0.525731f, 0.850651f, 0.000000f}, {0.000000f, 0.850651f, -0.525731f},
		{-0.238856f, 0.864188f, -0.442863f}, {0.000000f, 0.955423f, -0.295242f}, {-0.262866f, 0.951056f, -0.162460f},
		{0.000000f, 1.000000f, 0.000000f}, {0.000000f, 0.955423f, 0.295242f}, {-0.262866f, 0.951056f, 0.162460f},
		{0.238856f, 0.864188f, 0.442863f}, {0.262866f, 0.951056f, 0.162460f}, {0.500000f, 0.809017f, 0.309017f},
		{0.238856f, 0.864188f, -0.442863f}, {0.262866f, 0.951056f, -0.162460f}, {0.500000f, 0.809017f, -0.309017f},
		{0.850651f, 0.525731f, 0.000000f}, {0.716567f, 0.681718f, 0.147621f}, {0.716567f, 0.681718f, -0.147621f},
		{0.525731f, 0.850651f, 0.000000f}, {0.425325f, 0.688191f, 0.587785f}, {0.864188f, 0.442863f, 0.238856f},
		{0.688191f, 0.587785f, 0.425325f}, {0.809017f, 0.309017f, 0.500000f}, {0.681718f, 0.147621f, 0.716567f},
		{0.587785f, 0.425325f, 0.688191f}, {0.955423f, 0.295242f, 0.000000f}, {1.000000f, 0.000000f, 0.000000f},
		{0.951056f, 0.162460f, 0.262866f}, {0.850651f, -0.525731f, 0.000000f}, {0.955423f, -0.295242f, 0.000000f},
		{0.864188f, -0.442863f, 0.238856f}, {0.951056f, -0.162460f, 0.262866f}, {0.809017f, -0.309017f, 0.500000f},
		{0.681718f, -0.147621f, 0.716567f}, {0.850651f, 0.000000f, 0.525731f}, {0.864188f, 0.442863f, -0.238856f},
		{0.809017f, 0.309017f, -0.500000f}, {0.951056f, 0.162460f, -0.262866f}, {0.525731f, 0.000000f, -0.850651f},
		{0.681718f, 0.147621f, -0.716567f}, {0.681718f, -0.147621f, -0.716567f}, {0.850651f, 0.000000f, -0.525731f},
		{0.809017f, -0.309017f, -0.500000f}, {0.864188f, -0.442863f, -0.238856f}, {0.951056f, -0.162460f, -0.262866f},
		{0.147621f, 0.716567f, -0.681718f}, {0.309017f, 0.500000f, -0.809017f}, {0.425325f, 0.688191f, -0.587785f},
		{0.442863f, 0.238856f, -0.864188f}, {0.587785f, 0.425325f, -0.688191f}, {0.688191f, 0.587785f, -0.425325f},
		{-0.147621f, 0.716567f, -0.681718f}, {-0.309017f, 0.500000f, -0.809017f}, {0.000000f, 0.525731f, -0.850651f},
		{-0.525731f, 0.000000f, -0.850651f}, {-0.442863f, 0.238856f, -0.864188f}, {-0.295242f, 0.000000f, -0.955423f},
		{-0.162460f, 0.262866f, -0.951056f}, {0.000000f, 0.000000f, -1.000000f}, {0.295242f, 0.000000f, -0.955423f},
		{0.162460f, 0.262866f, -0.951056f}, {-0.442863f, -0.238856f, -0.864188f}, {-0.309017f, -0.500000f, -0.809017f},
		{-0.162460f, -0.262866f, -0.951056f}, {0.000000f, -0.850651f, -0.525731f}, {-0.147621f, -0.716567f, -0.681718f},
		{0.147621f, -0.716567f, -0.681718f}, {0.000000f, -0.525731f, -0.850651f}, {0.309017f, -0.500000f, -0.809017f},
		{0.442863f, -0.238856f, -0.864188f}, {0.162460f, -0.262866f, -0.951056f}, {0.238856f, -0.864188f, -0.442863f},
		{0.500000f, -0.809017f, -0.309017f}, {0.425325f, -0.688191f, -0.587785f}, {0.716567f, -0.681718f, -0.147621f},
		{0.688191f, -0.587785f, -0.425325f}, {0.587785f, -0.425325f, -0.688191f}, {0.000000f, -0.955423f, -0.295242f},
		{0.000000f, -1.000000f, 0.000000f}, {0.262866f, -0.951056f, -0.162460f}, {0.000000f, -0.850651f, 0.525731f},
		{0.000000f, -0.955423f, 0.295242f}, {0.238856f, -0.864188f, 0.442863f}, {0.262866f, -0.951056f, 0.162460f},
		{0.500000f, -0.809017f, 0.309017f}, {0.716567f, -0.681718f, 0.147621f}, {0.525731f, -0.850651f, 0.000000f},
		{-0.238856f, -0.864188f, -0.442863f}, {-0.500000f, -0.809017f, -0.309017f}, {-0.262866f, -0.951056f, -0.162460f},
		{-0.850651f, -0.525731f, 0.000000f}, {-0.716567f, -0.681718f, -0.147621f}, {-0.716567f, -0.681718f, 0.147621f},
		{-0.525731f, -0.850651f, 0.000000f}, {-0.500000f, -0.809017f, 0.309017f}, {-0.238856f, -0.864188f, 0.442863f},
		{-0.262866f, -0.951056f, 0.162460f}, {-0.864188f, -0.442863f, 0.238856f}, {-0.809017f, -0.309017f, 0.500000f},
		{-0.688191f, -0.587785f, 0.425325f}, {-0.681718f, -0.147621f, 0.716567f}, {-0.442863f, -0.238856f, 0.864188f},
		{-0.587785f, -0.425325f, 0.688191f}, {-0.309017f, -0.500000f, 0.809017f}, {-0.147621f, -0.716567f, 0.681718f},
		{-0.425325f, -0.688191f, 0.587785f}, {-0.162460f, -0.262866f, 0.951056f}, {0.442863f, -0.238856f, 0.864188f},
		{0.162460f, -0.262866f, 0.951056f}, {0.309017f, -0.500000f, 0.809017f}, {0.147621f, -0.716567f, 0.681718f},
		{0.000000f, -0.525731f, 0.850651f}, {0.425325f, -0.688191f, 0.587785f}, {0.587785f, -0.425325f, 0.688191f},
		{0.688191f, -0.587785f, 0.425325f}, {-0.955423f, 0.295242f, 0.000000f}, {-0.951056f, 0.162460f, 0.262866f},
		{-1.000000f, 0.000000f, 0.000000f}, {-0.850651f, 0.000000f, 0.525731f}, {-0.955423f, -0.295242f, 0.000000f},
		{-0.951056f, -0.162460f, 0.262866f}, {-0.864188f, 0.442863f, -0.238856f}, {-0.951056f, 0.162460f, -0.262866f},
		{-0.809017f, 0.309017f, -0.500000f}, {-0.864188f, -0.442863f, -0.238856f}, {-0.951056f, -0.162460f, -0.262866f},
		{-0.809017f, -0.309017f, -0.500000f}, {-0.681718f, 0.147621f, -0.716567f}, {-0.681718f, -0.147621f, -0.716567f},
		{-0.850651f, 0.000000f, -0.525731f}, {-0.688191f, 0.587785f, -0.425325f}, {-0.587785f, 0.425325f, -0.688191f},
		{-0.425325f, 0.688191f, -0.587785f}, {-0.425325f, -0.688191f, -0.587785f}, {-0.587785f, -0.425325f, -0.688191f},
		{-0.688191f, -0.587785f, -0.425325f}}; ##FSTMerge## public static float[][] normals = { {-0.525731f, 0.000000f, 0.850651f}, {-0.442863f, 0.238856f, 0.864188f},
		{-0.295242f, 0.000000f, 0.955423f}, {-0.309017f, 0.500000f, 0.809017f}, {-0.162460f, 0.262866f, 0.951056f},
		{0.000000f, 0.000000f, 1.000000f}, {0.000000f, 0.850651f, 0.525731f}, {-0.147621f, 0.716567f, 0.681718f},
		{0.147621f, 0.716567f, 0.681718f}, {0.000000f, 0.525731f, 0.850651f}, {0.309017f, 0.500000f, 0.809017f},
		{0.525731f, 0.000000f, 0.850651f}, {0.295242f, 0.000000f, 0.955423f}, {0.442863f, 0.238856f, 0.864188f},
		{0.162460f, 0.262866f, 0.951056f}, {-0.681718f, 0.147621f, 0.716567f}, {-0.809017f, 0.309017f, 0.500000f},
		{-0.587785f, 0.425325f, 0.688191f}, {-0.850651f, 0.525731f, 0.000000f}, {-0.864188f, 0.442863f, 0.238856f},
		{-0.716567f, 0.681718f, 0.147621f}, {-0.688191f, 0.587785f, 0.425325f}, {-0.500000f, 0.809017f, 0.309017f},
		{-0.238856f, 0.864188f, 0.442863f}, {-0.425325f, 0.688191f, 0.587785f}, {-0.716567f, 0.681718f, -0.147621f},
		{-0.500000f, 0.809017f, -0.309017f}, {-0.525731f, 0.850651f, 0.000000f}, {0.000000f, 0.850651f, -0.525731f},
		{-0.238856f, 0.864188f, -0.442863f}, {0.000000f, 0.955423f, -0.295242f}, {-0.262866f, 0.951056f, -0.162460f},
		{0.000000f, 1.000000f, 0.000000f}, {0.000000f, 0.955423f, 0.295242f}, {-0.262866f, 0.951056f, 0.162460f},
		{0.238856f, 0.864188f, 0.442863f}, {0.262866f, 0.951056f, 0.162460f}, {0.500000f, 0.809017f, 0.309017f},
		{0.238856f, 0.864188f, -0.442863f}, {0.262866f, 0.951056f, -0.162460f}, {0.500000f, 0.809017f, -0.309017f},
		{0.850651f, 0.525731f, 0.000000f}, {0.716567f, 0.681718f, 0.147621f}, {0.716567f, 0.681718f, -0.147621f},
		{0.525731f, 0.850651f, 0.000000f}, {0.425325f, 0.688191f, 0.587785f}, {0.864188f, 0.442863f, 0.238856f},
		{0.688191f, 0.587785f, 0.425325f}, {0.809017f, 0.309017f, 0.500000f}, {0.681718f, 0.147621f, 0.716567f},
		{0.587785f, 0.425325f, 0.688191f}, {0.955423f, 0.295242f, 0.000000f}, {1.000000f, 0.000000f, 0.000000f},
		{0.951056f, 0.162460f, 0.262866f}, {0.850651f, -0.525731f, 0.000000f}, {0.955423f, -0.295242f, 0.000000f},
		{0.864188f, -0.442863f, 0.238856f}, {0.951056f, -0.162460f, 0.262866f}, {0.809017f, -0.309017f, 0.500000f},
		{0.681718f, -0.147621f, 0.716567f}, {0.850651f, 0.000000f, 0.525731f}, {0.864188f, 0.442863f, -0.238856f},
		{0.809017f, 0.309017f, -0.500000f}, {0.951056f, 0.162460f, -0.262866f}, {0.525731f, 0.000000f, -0.850651f},
		{0.681718f, 0.147621f, -0.716567f}, {0.681718f, -0.147621f, -0.716567f}, {0.850651f, 0.000000f, -0.525731f},
		{0.809017f, -0.309017f, -0.500000f}, {0.864188f, -0.442863f, -0.238856f}, {0.951056f, -0.162460f, -0.262866f},
		{0.147621f, 0.716567f, -0.681718f}, {0.309017f, 0.500000f, -0.809017f}, {0.425325f, 0.688191f, -0.587785f},
		{0.442863f, 0.238856f, -0.864188f}, {0.587785f, 0.425325f, -0.688191f}, {0.688191f, 0.587785f, -0.425325f},
		{-0.147621f, 0.716567f, -0.681718f}, {-0.309017f, 0.500000f, -0.809017f}, {0.000000f, 0.525731f, -0.850651f},
		{-0.525731f, 0.000000f, -0.850651f}, {-0.442863f, 0.238856f, -0.864188f}, {-0.295242f, 0.000000f, -0.955423f},
		{-0.162460f, 0.262866f, -0.951056f}, {0.000000f, 0.000000f, -1.000000f}, {0.295242f, 0.000000f, -0.955423f},
		{0.162460f, 0.262866f, -0.951056f}, {-0.442863f, -0.238856f, -0.864188f}, {-0.309017f, -0.500000f, -0.809017f},
		{-0.162460f, -0.262866f, -0.951056f}, {0.000000f, -0.850651f, -0.525731f}, {-0.147621f, -0.716567f, -0.681718f},
		{0.147621f, -0.716567f, -0.681718f}, {0.000000f, -0.525731f, -0.850651f}, {0.309017f, -0.500000f, -0.809017f},
		{0.442863f, -0.238856f, -0.864188f}, {0.162460f, -0.262866f, -0.951056f}, {0.238856f, -0.864188f, -0.442863f},
		{0.500000f, -0.809017f, -0.309017f}, {0.425325f, -0.688191f, -0.587785f}, {0.716567f, -0.681718f, -0.147621f},
		{0.688191f, -0.587785f, -0.425325f}, {0.587785f, -0.425325f, -0.688191f}, {0.000000f, -0.955423f, -0.295242f},
		{0.000000f, -1.000000f, 0.000000f}, {0.262866f, -0.951056f, -0.162460f}, {0.000000f, -0.850651f, 0.525731f},
		{0.000000f, -0.955423f, 0.295242f}, {0.238856f, -0.864188f, 0.442863f}, {0.262866f, -0.951056f, 0.162460f},
		{0.500000f, -0.809017f, 0.309017f}, {0.716567f, -0.681718f, 0.147621f}, {0.525731f, -0.850651f, 0.000000f},
		{-0.238856f, -0.864188f, -0.442863f}, {-0.500000f, -0.809017f, -0.309017f}, {-0.262866f, -0.951056f, -0.162460f},
		{-0.850651f, -0.525731f, 0.000000f}, {-0.716567f, -0.681718f, -0.147621f}, {-0.716567f, -0.681718f, 0.147621f},
		{-0.525731f, -0.850651f, 0.000000f}, {-0.500000f, -0.809017f, 0.309017f}, {-0.238856f, -0.864188f, 0.442863f},
		{-0.262866f, -0.951056f, 0.162460f}, {-0.864188f, -0.442863f, 0.238856f}, {-0.809017f, -0.309017f, 0.500000f},
		{-0.688191f, -0.587785f, 0.425325f}, {-0.681718f, -0.147621f, 0.716567f}, {-0.442863f, -0.238856f, 0.864188f},
		{-0.587785f, -0.425325f, 0.688191f}, {-0.309017f, -0.500000f, 0.809017f}, {-0.147621f, -0.716567f, 0.681718f},
		{-0.425325f, -0.688191f, 0.587785f}, {-0.162460f, -0.262866f, 0.951056f}, {0.442863f, -0.238856f, 0.864188f},
		{0.162460f, -0.262866f, 0.951056f}, {0.309017f, -0.500000f, 0.809017f}, {0.147621f, -0.716567f, 0.681718f},
		{0.000000f, -0.525731f, 0.850651f}, {0.425325f, -0.688191f, 0.587785f}, {0.587785f, -0.425325f, 0.688191f},
		{0.688191f, -0.587785f, 0.425325f}, {-0.955423f, 0.295242f, 0.000000f}, {-0.951056f, 0.162460f, 0.262866f},
		{-1.000000f, 0.000000f, 0.000000f}, {-0.850651f, 0.000000f, 0.525731f}, {-0.955423f, -0.295242f, 0.000000f},
		{-0.951056f, -0.162460f, 0.262866f}, {-0.864188f, 0.442863f, -0.238856f}, {-0.951056f, 0.162460f, -0.262866f},
		{-0.809017f, 0.309017f, -0.500000f}, {-0.864188f, -0.442863f, -0.238856f}, {-0.951056f, -0.162460f, -0.262866f},
		{-0.809017f, -0.309017f, -0.500000f}, {-0.681718f, 0.147621f, -0.716567f}, {-0.681718f, -0.147621f, -0.716567f},
		{-0.850651f, 0.000000f, -0.525731f}, {-0.688191f, 0.587785f, -0.425325f}, {-0.587785f, 0.425325f, -0.688191f},
		{-0.425325f, 0.688191f, -0.587785f}, {-0.425325f, -0.688191f, -0.587785f}, {-0.587785f, -0.425325f, -0.688191f},
		{-0.688191f, -0.587785f, -0.425325f}};
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Normals.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements KeyframedModelLoader ##FSTMerge## implements KeyframedModelLoader
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public KeyframedModel load (FileHandle file, ModelLoaderHints hints) {
		float frameDuration = 0.2f;
		if (hints instanceof MD2LoaderHints) {
			frameDuration = ((MD2LoaderHints)hints).frameDuration;
		}
		return load(file, frameDuration);
	} ##FSTMerge## public KeyframedModel load (FileHandle file, ModelLoaderHints hints) {
		float frameDuration = 0.2f;
		if (hints instanceof MD2LoaderHints) {
			frameDuration = ((MD2LoaderHints)hints).frameDuration;
		}
		return load(file, frameDuration);
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public KeyframedModel load (FileHandle fileHandle, float frameDuration) {
		InputStream in = fileHandle.read();
		try {
			return load(in, frameDuration);
		} finally {
			if (in != null) try {
				in.close();
			} catch (IOException e) {
			}
			;
		}
	} ##FSTMerge## public KeyframedModel load (FileHandle fileHandle, float frameDuration) {
		InputStream in = fileHandle.read();
		try {
			return load(in, frameDuration);
		} finally {
			if (in != null) try {
				in.close();
			} catch (IOException e) {
			}
			;
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public KeyframedModel load (InputStream in, float frameDuration) {
		try {
			byte[] bytes = loadBytes(in);

			MD2Header header = loadHeader(bytes);
			float[] texCoords = loadTexCoords(header, bytes);
			MD2Triangle[] triangles = loadTriangles(header, bytes);
			MD2Frame[] frames = loadFrames(header, bytes);

			return buildModel(header, triangles, texCoords, frames, frameDuration);
		} catch (Exception ex) {
			ex.printStackTrace();
			return null;
		}
	} ##FSTMerge## public KeyframedModel load (InputStream in, float frameDuration) {
		try {
			byte[] bytes = loadBytes(in);

			MD2Header header = loadHeader(bytes);
			float[] texCoords = loadTexCoords(header, bytes);
			MD2Triangle[] triangles = loadTriangles(header, bytes);
			MD2Frame[] frames = loadFrames(header, bytes);

			return buildModel(header, triangles, texCoords, frames, frameDuration);
		} catch (Exception ex) {
			ex.printStackTrace();
			return null;
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private KeyframedModel buildModel (MD2Header header, MD2Triangle[] triangles, float[] texCoords, MD2Frame[] frames,
		float frameDuration) {
		ArrayList<VertexIndices> vertCombos = new ArrayList<VertexIndices>();
		short[] indices = new short[triangles.length * 3];
		int idx = 0;
		short vertIdx = 0;
		for (int i = 0; i < triangles.length; i++) {
			MD2Triangle triangle = triangles[i];
			for (int j = 0; j < 3; j++) {
				VertexIndices vert = null;
				boolean contains = false;
				for (int k = 0; k < vertCombos.size(); k++) {
					VertexIndices vIdx = vertCombos.get(k);
					if (vIdx.vIdx == triangle.vertices[j] && vIdx.tIdx == triangle.texCoords[j]) {
						vert = vIdx;
						contains = true;
						break;
					}
				}
				if (!contains) {
					vert = new VertexIndices(triangle.vertices[j], triangle.texCoords[j], vertIdx);
					vertCombos.add(vert);
					vertIdx++;
				}

				indices[idx++] = vert.nIdx;
			}
		}

		idx = 0;
		float[] uvs = new float[vertCombos.size() * 2];
		for (int i = 0; i < vertCombos.size(); i++) {
			VertexIndices vtI = vertCombos.get(i);
			uvs[idx++] = texCoords[vtI.tIdx * 2];
			uvs[idx++] = texCoords[vtI.tIdx * 2 + 1];
		}

		for (int i = 0; i < frames.length; i++) {
			MD2Frame frame = frames[i];
			idx = 0;
			float[] newVerts = new float[vertCombos.size() * 6];

			for (int j = 0; j < vertCombos.size(); j++) {
				VertexIndices vIdx = vertCombos.get(j);
				newVerts[idx++] = frame.vertices[vIdx.vIdx * 3];
				newVerts[idx++] = frame.vertices[vIdx.vIdx * 3 + 1];
				newVerts[idx++] = frame.vertices[vIdx.vIdx * 3 + 2];
				newVerts[idx++] = MD2Normals.normals[frame.normalIndices[vIdx.vIdx]][1];
				newVerts[idx++] = MD2Normals.normals[frame.normalIndices[vIdx.vIdx]][2];
				newVerts[idx++] = MD2Normals.normals[frame.normalIndices[vIdx.vIdx]][0];
			}
			frame.vertices = newVerts;
		}

		header.numVertices = vertCombos.size();

		float[] blendedVertices = new float[header.numVertices * 8];
		MD2Frame frame = frames[0];

		idx = 0;
		int idxV = 0;
		int idxT = 0;
		for (int i = 0; i < header.numVertices; i++) {
			VertexIndices vIdx = vertCombos.get(i);

			blendedVertices[idx++] = frame.vertices[idxV++];
			blendedVertices[idx++] = frame.vertices[idxV++];
			blendedVertices[idx++] = frame.vertices[idxV++];
			blendedVertices[idx++] = frame.vertices[idxV++];
			blendedVertices[idx++] = frame.vertices[idxV++];
			blendedVertices[idx++] = frame.vertices[idxV++];
			blendedVertices[idx++] = uvs[idxT++];
			blendedVertices[idx++] = uvs[idxT++];
		}

		ObjectMap<String, KeyframedAnimation> animations = new ObjectMap<String, KeyframedAnimation>();

		String lastName = frames[0].name;
		int beginFrame = 0;

		for (int frameNum = 1; frameNum < frames.length; frameNum++) {
			if (!frames[frameNum].name.equals(lastName) || frameNum == frames.length - 1) {
				int subAnimLen = frameNum - beginFrame;
				KeyframedAnimation subAnim = new KeyframedAnimation(lastName, frameDuration, new Keyframe[subAnimLen]);

				for (int subFrame = beginFrame; subFrame < frameNum; subFrame++) {
					int absFrameNum = subFrame - beginFrame;

					frame = frames[subFrame];
					float[] vertices = new float[header.numVertices * 6];
					idx = 0;
					idxV = 0;
					for (int i = 0; i < header.numVertices; i++) {
						vertices[idx++] = frame.vertices[idxV++];
						vertices[idx++] = frame.vertices[idxV++];
						vertices[idx++] = frame.vertices[idxV++];
						vertices[idx++] = frame.vertices[idxV++];
						vertices[idx++] = frame.vertices[idxV++];
						vertices[idx++] = frame.vertices[idxV++];
					}

					Keyframe keyFrame = new Keyframe(absFrameNum * frameDuration, vertices);
					subAnim.keyframes[absFrameNum] = keyFrame;
					animations.put(subAnim.name, subAnim);
				}

				lastName = frames[frameNum].name;
				beginFrame = frameNum;
			}
		}

		KeyframedAnimation animation = new KeyframedAnimation("all", frameDuration, new Keyframe[frames.length]);
		float timeStamp = 0;
		for (int frameNum = 0; frameNum < frames.length; frameNum++) {
			frame = frames[frameNum];
			float[] vertices = new float[header.numVertices * 6];
			idx = 0;
			idxV = 0;
			for (int i = 0; i < header.numVertices; i++) {
				vertices[idx++] = frame.vertices[idxV++];
				vertices[idx++] = frame.vertices[idxV++];
				vertices[idx++] = frame.vertices[idxV++];
				vertices[idx++] = frame.vertices[idxV++];
				vertices[idx++] = frame.vertices[idxV++];
				vertices[idx++] = frame.vertices[idxV++];
			}

			Keyframe keyFrame = new Keyframe(frameNum * frameDuration, vertices);
			animation.keyframes[frameNum] = keyFrame;
		}

		Mesh mesh = new Mesh(VertexDataType.VertexArray, false, header.numVertices, indices.length, new VertexAttribute(
			Usage.Position, 3, ShaderProgram.POSITION_ATTRIBUTE), new VertexAttribute(Usage.Normal, 3,
			ShaderProgram.NORMAL_ATTRIBUTE),
			new VertexAttribute(Usage.TextureCoordinates, 2, ShaderProgram.TEXCOORD_ATTRIBUTE + "0"));
		mesh.setIndices(indices);
		animations.put("all", animation);

		KeyframedSubMesh subMesh = new KeyframedSubMesh("md2-mesh", mesh, blendedVertices, animations, 6, GL10.GL_TRIANGLES);
		KeyframedModel model = new KeyframedModel(new KeyframedSubMesh[] {subMesh});
		model.setAnimation("all", 0, false);
		return model;
	} ##FSTMerge## private KeyframedModel buildModel (MD2Header header, MD2Triangle[] triangles, float[] texCoords, MD2Frame[] frames,
		float frameDuration) {
		ArrayList<VertexIndices> vertCombos = new ArrayList<VertexIndices>();
		short[] indices = new short[triangles.length * 3];
		int idx = 0;
		short vertIdx = 0;
		for (int i = 0; i < triangles.length; i++) {
			MD2Triangle triangle = triangles[i];
			for (int j = 0; j < 3; j++) {
				VertexIndices vert = null;
				boolean contains = false;
				for (int k = 0; k < vertCombos.size(); k++) {
					VertexIndices vIdx = vertCombos.get(k);
					if (vIdx.vIdx == triangle.vertices[j] && vIdx.tIdx == triangle.texCoords[j]) {
						vert = vIdx;
						contains = true;
						break;
					}
				}
				if (!contains) {
					vert = new VertexIndices(triangle.vertices[j], triangle.texCoords[j], vertIdx);
					vertCombos.add(vert);
					vertIdx++;
				}

				indices[idx++] = vert.nIdx;
			}
		}

		idx = 0;
		float[] uvs = new float[vertCombos.size() * 2];
		for (int i = 0; i < vertCombos.size(); i++) {
			VertexIndices vtI = vertCombos.get(i);
			uvs[idx++] = texCoords[vtI.tIdx * 2];
			uvs[idx++] = texCoords[vtI.tIdx * 2 + 1];
		}

		for (int i = 0; i < frames.length; i++) {
			MD2Frame frame = frames[i];
			idx = 0;
			float[] newVerts = new float[vertCombos.size() * 6];

			for (int j = 0; j < vertCombos.size(); j++) {
				VertexIndices vIdx = vertCombos.get(j);
				newVerts[idx++] = frame.vertices[vIdx.vIdx * 3];
				newVerts[idx++] = frame.vertices[vIdx.vIdx * 3 + 1];
				newVerts[idx++] = frame.vertices[vIdx.vIdx * 3 + 2];
				newVerts[idx++] = MD2Normals.normals[frame.normalIndices[vIdx.vIdx]][1];
				newVerts[idx++] = MD2Normals.normals[frame.normalIndices[vIdx.vIdx]][2];
				newVerts[idx++] = MD2Normals.normals[frame.normalIndices[vIdx.vIdx]][0];
			}
			frame.vertices = newVerts;
		}

		header.numVertices = vertCombos.size();

		float[] blendedVertices = new float[header.numVertices * 8];
		MD2Frame frame = frames[0];

		idx = 0;
		int idxV = 0;
		int idxT = 0;
		for (int i = 0; i < header.numVertices; i++) {
			VertexIndices vIdx = vertCombos.get(i);

			blendedVertices[idx++] = frame.vertices[idxV++];
			blendedVertices[idx++] = frame.vertices[idxV++];
			blendedVertices[idx++] = frame.vertices[idxV++];
			blendedVertices[idx++] = frame.vertices[idxV++];
			blendedVertices[idx++] = frame.vertices[idxV++];
			blendedVertices[idx++] = frame.vertices[idxV++];
			blendedVertices[idx++] = uvs[idxT++];
			blendedVertices[idx++] = uvs[idxT++];
		}

		ObjectMap<String, KeyframedAnimation> animations = new ObjectMap<String, KeyframedAnimation>();

		String lastName = frames[0].name;
		int beginFrame = 0;

		for (int frameNum = 1; frameNum < frames.length; frameNum++) {
			if (!frames[frameNum].name.equals(lastName) || frameNum == frames.length - 1) {
				int subAnimLen = frameNum - beginFrame;
				KeyframedAnimation subAnim = new KeyframedAnimation(lastName, frameDuration, new Keyframe[subAnimLen]);

				for (int subFrame = beginFrame; subFrame < frameNum; subFrame++) {
					int absFrameNum = subFrame - beginFrame;

					frame = frames[subFrame];
					float[] vertices = new float[header.numVertices * 6];
					idx = 0;
					idxV = 0;
					for (int i = 0; i < header.numVertices; i++) {
						vertices[idx++] = frame.vertices[idxV++];
						vertices[idx++] = frame.vertices[idxV++];
						vertices[idx++] = frame.vertices[idxV++];
						vertices[idx++] = frame.vertices[idxV++];
						vertices[idx++] = frame.vertices[idxV++];
						vertices[idx++] = frame.vertices[idxV++];
					}

					Keyframe keyFrame = new Keyframe(absFrameNum * frameDuration, vertices);
					subAnim.keyframes[absFrameNum] = keyFrame;
					animations.put(subAnim.name, subAnim);
				}

				lastName = frames[frameNum].name;
				beginFrame = frameNum;
			}
		}

		KeyframedAnimation animation = new KeyframedAnimation("all", frameDuration, new Keyframe[frames.length]);
		float timeStamp = 0;
		for (int frameNum = 0; frameNum < frames.length; frameNum++) {
			frame = frames[frameNum];
			float[] vertices = new float[header.numVertices * 6];
			idx = 0;
			idxV = 0;
			for (int i = 0; i < header.numVertices; i++) {
				vertices[idx++] = frame.vertices[idxV++];
				vertices[idx++] = frame.vertices[idxV++];
				vertices[idx++] = frame.vertices[idxV++];
				vertices[idx++] = frame.vertices[idxV++];
				vertices[idx++] = frame.vertices[idxV++];
				vertices[idx++] = frame.vertices[idxV++];
			}

			Keyframe keyFrame = new Keyframe(frameNum * frameDuration, vertices);
			animation.keyframes[frameNum] = keyFrame;
		}

		Mesh mesh = new Mesh(VertexDataType.VertexArray, false, header.numVertices, indices.length, new VertexAttribute(
			Usage.Position, 3, ShaderProgram.POSITION_ATTRIBUTE), new VertexAttribute(Usage.Normal, 3,
			ShaderProgram.NORMAL_ATTRIBUTE),
			new VertexAttribute(Usage.TextureCoordinates, 2, ShaderProgram.TEXCOORD_ATTRIBUTE + "0"));
		mesh.setIndices(indices);
		animations.put("all", animation);

		KeyframedSubMesh subMesh = new KeyframedSubMesh("md2-mesh", mesh, blendedVertices, animations, 6, GL10.GL_TRIANGLES);
		KeyframedModel model = new KeyframedModel(new KeyframedSubMesh[] {subMesh});
		model.setAnimation("all", 0, false);
		return model;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private float[] buildTexCoords (MD2Header header, MD2Triangle[] triangles, float[] texCoords) {
		float[] uvs = new float[header.numVertices * 2];

		for (int i = 0; i < triangles.length; i++) {
			MD2Triangle triangle = triangles[i];
			for (int j = 0; j < 3; j++) {
				int vertIdx = triangle.vertices[j];
				int uvIdx = vertIdx * 2;
				uvs[uvIdx] = texCoords[triangle.texCoords[j] * 2];
				uvs[uvIdx + 1] = texCoords[triangle.texCoords[j] * 2 + 1];
			}
		}

		return uvs;
	} ##FSTMerge## private float[] buildTexCoords (MD2Header header, MD2Triangle[] triangles, float[] texCoords) {
		float[] uvs = new float[header.numVertices * 2];

		for (int i = 0; i < triangles.length; i++) {
			MD2Triangle triangle = triangles[i];
			for (int j = 0; j < 3; j++) {
				int vertIdx = triangle.vertices[j];
				int uvIdx = vertIdx * 2;
				uvs[uvIdx] = texCoords[triangle.texCoords[j] * 2];
				uvs[uvIdx + 1] = texCoords[triangle.texCoords[j] * 2 + 1];
			}
		}

		return uvs;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private short[] buildIndices (MD2Triangle[] triangles) {
		short[] indices = new short[triangles.length * 3];

		int idx = 0;
		for (int i = 0; i < triangles.length; i++) {
			MD2Triangle triangle = triangles[i];
			indices[idx++] = triangle.vertices[0];
			indices[idx++] = triangle.vertices[1];
			indices[idx++] = triangle.vertices[2];
		}
		return indices;
	} ##FSTMerge## private short[] buildIndices (MD2Triangle[] triangles) {
		short[] indices = new short[triangles.length * 3];

		int idx = 0;
		for (int i = 0; i < triangles.length; i++) {
			MD2Triangle triangle = triangles[i];
			indices[idx++] = triangle.vertices[0];
			indices[idx++] = triangle.vertices[1];
			indices[idx++] = triangle.vertices[2];
		}
		return indices;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private MD2Frame[] loadFrames (MD2Header header, byte[] bytes) throws IOException {
		LittleEndianInputStream in = new LittleEndianInputStream(new ByteArrayInputStream(bytes));
		in.skip(header.offsetFrames);

		MD2Frame[] frames = new MD2Frame[header.numFrames];
		for (int i = 0; i < header.numFrames; i++) {
			frames[i] = loadFrame(header, in);
		}

		in.close();

		return frames;
	} ##FSTMerge## private MD2Frame[] loadFrames (MD2Header header, byte[] bytes) throws IOException {
		LittleEndianInputStream in = new LittleEndianInputStream(new ByteArrayInputStream(bytes));
		in.skip(header.offsetFrames);

		MD2Frame[] frames = new MD2Frame[header.numFrames];
		for (int i = 0; i < header.numFrames; i++) {
			frames[i] = loadFrame(header, in);
		}

		in.close();

		return frames;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final byte[] charBuffer = new byte[16]; ##FSTMerge## private final byte[] charBuffer = new byte[16];
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private MD2Frame loadFrame (MD2Header header, LittleEndianInputStream in) throws IOException {
		MD2Frame frame = new MD2Frame();
		frame.vertices = new float[header.numVertices * 3];
		frame.normalIndices = new int[header.numVertices];

		float scaleX = in.readFloat(), scaleY = in.readFloat(), scaleZ = in.readFloat();
		float transX = in.readFloat(), transY = in.readFloat(), transZ = in.readFloat();
		in.read(charBuffer);

		int len = 0;
		for (int i = 0; i < charBuffer.length; i++)
			if (charBuffer[i] == 0) {
				len = i;
				break;
			}

		frame.name = new String(charBuffer, 0, len);

		int vertIdx = 0;

		for (int i = 0; i < header.numVertices; i++) {
			float x = in.read() * scaleX + transX;
			float y = in.read() * scaleY + transY;
			float z = in.read() * scaleZ + transZ;

			frame.vertices[vertIdx++] = y;
			frame.vertices[vertIdx++] = z;
			frame.vertices[vertIdx++] = x;

			frame.normalIndices[i] = in.read(); // normal index
		}

		return frame;
	} ##FSTMerge## private MD2Frame loadFrame (MD2Header header, LittleEndianInputStream in) throws IOException {
		MD2Frame frame = new MD2Frame();
		frame.vertices = new float[header.numVertices * 3];
		frame.normalIndices = new int[header.numVertices];

		float scaleX = in.readFloat(), scaleY = in.readFloat(), scaleZ = in.readFloat();
		float transX = in.readFloat(), transY = in.readFloat(), transZ = in.readFloat();
		in.read(charBuffer);

		int len = 0;
		for (int i = 0; i < charBuffer.length; i++)
			if (charBuffer[i] == 0) {
				len = i;
				break;
			}

		frame.name = new String(charBuffer, 0, len);

		int vertIdx = 0;

		for (int i = 0; i < header.numVertices; i++) {
			float x = in.read() * scaleX + transX;
			float y = in.read() * scaleY + transY;
			float z = in.read() * scaleZ + transZ;

			frame.vertices[vertIdx++] = y;
			frame.vertices[vertIdx++] = z;
			frame.vertices[vertIdx++] = x;

			frame.normalIndices[i] = in.read(); // normal index
		}

		return frame;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private MD2Triangle[] loadTriangles (MD2Header header, byte[] bytes) throws IOException {
		LittleEndianInputStream in = new LittleEndianInputStream(new ByteArrayInputStream(bytes));
		in.skip(header.offsetTriangles);
		MD2Triangle[] triangles = new MD2Triangle[header.numTriangles];

		for (int i = 0; i < header.numTriangles; i++) {
			MD2Triangle triangle = new MD2Triangle();
			triangle.vertices[0] = in.readShort();
			triangle.vertices[1] = in.readShort();
			triangle.vertices[2] = in.readShort();
			triangle.texCoords[0] = in.readShort();
			triangle.texCoords[1] = in.readShort();
			triangle.texCoords[2] = in.readShort();
			triangles[i] = triangle;
		}

		in.close();

		return triangles;
	} ##FSTMerge## private MD2Triangle[] loadTriangles (MD2Header header, byte[] bytes) throws IOException {
		LittleEndianInputStream in = new LittleEndianInputStream(new ByteArrayInputStream(bytes));
		in.skip(header.offsetTriangles);
		MD2Triangle[] triangles = new MD2Triangle[header.numTriangles];

		for (int i = 0; i < header.numTriangles; i++) {
			MD2Triangle triangle = new MD2Triangle();
			triangle.vertices[0] = in.readShort();
			triangle.vertices[1] = in.readShort();
			triangle.vertices[2] = in.readShort();
			triangle.texCoords[0] = in.readShort();
			triangle.texCoords[1] = in.readShort();
			triangle.texCoords[2] = in.readShort();
			triangles[i] = triangle;
		}

		in.close();

		return triangles;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private float[] loadTexCoords (MD2Header header, byte[] bytes) throws IOException {
		LittleEndianInputStream in = new LittleEndianInputStream(new ByteArrayInputStream(bytes));
		in.skip(header.offsetTexCoords);
		float[] texCoords = new float[header.numTexCoords * 2];
		float width = header.skinWidth;
		float height = header.skinHeight;

		for (int i = 0; i < header.numTexCoords * 2; i += 2) {
			short u = in.readShort();
			short v = in.readShort();
			texCoords[i] = u / width;
			texCoords[i + 1] = v / height;
		}
		in.close();
		return texCoords;
	} ##FSTMerge## private float[] loadTexCoords (MD2Header header, byte[] bytes) throws IOException {
		LittleEndianInputStream in = new LittleEndianInputStream(new ByteArrayInputStream(bytes));
		in.skip(header.offsetTexCoords);
		float[] texCoords = new float[header.numTexCoords * 2];
		float width = header.skinWidth;
		float height = header.skinHeight;

		for (int i = 0; i < header.numTexCoords * 2; i += 2) {
			short u = in.readShort();
			short v = in.readShort();
			texCoords[i] = u / width;
			texCoords[i + 1] = v / height;
		}
		in.close();
		return texCoords;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private MD2Header loadHeader (byte[] bytes) throws IOException {
		LittleEndianInputStream in = new LittleEndianInputStream(new ByteArrayInputStream(bytes));
		MD2Header header = new MD2Header();

		header.ident = in.readInt();
		header.version = in.readInt();
		header.skinWidth = in.readInt();
		header.skinHeight = in.readInt();
		header.frameSize = in.readInt();
		header.numSkins = in.readInt();
		header.numVertices = in.readInt();
		header.numTexCoords = in.readInt();
		header.numTriangles = in.readInt();
		header.numGLCommands = in.readInt();
		header.numFrames = in.readInt();
		header.offsetSkin = in.readInt();
		header.offsetTexCoords = in.readInt();
		header.offsetTriangles = in.readInt();
		header.offsetFrames = in.readInt();
		header.offsetGLCommands = in.readInt();
		header.offsetEnd = in.readInt();

		in.close();

		return header;
	} ##FSTMerge## private MD2Header loadHeader (byte[] bytes) throws IOException {
		LittleEndianInputStream in = new LittleEndianInputStream(new ByteArrayInputStream(bytes));
		MD2Header header = new MD2Header();

		header.ident = in.readInt();
		header.version = in.readInt();
		header.skinWidth = in.readInt();
		header.skinHeight = in.readInt();
		header.frameSize = in.readInt();
		header.numSkins = in.readInt();
		header.numVertices = in.readInt();
		header.numTexCoords = in.readInt();
		header.numTriangles = in.readInt();
		header.numGLCommands = in.readInt();
		header.numFrames = in.readInt();
		header.offsetSkin = in.readInt();
		header.offsetTexCoords = in.readInt();
		header.offsetTriangles = in.readInt();
		header.offsetFrames = in.readInt();
		header.offsetGLCommands = in.readInt();
		header.offsetEnd = in.readInt();

		in.close();

		return header;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private byte[] loadBytes (InputStream in) throws IOException {
		ByteArrayOutputStream out = new ByteArrayOutputStream();
		byte[] buffer = new byte[1024];

		int readBytes = 0;
		while ((readBytes = in.read(buffer)) > 0) {
			out.write(buffer, 0, readBytes);
		}

		out.close();
		return out.toByteArray();
	} ##FSTMerge## private byte[] loadBytes (InputStream in) throws IOException {
		ByteArrayOutputStream out = new ByteArrayOutputStream();
		byte[] buffer = new byte[1024];

		int readBytes = 0;
		while ((readBytes = in.read(buffer)) > 0) {
			out.write(buffer, 0, readBytes);
		}

		out.close();
		return out.toByteArray();
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public VertexIndices (short vIdx, short tIdx, short nIdx) {
			this.vIdx = vIdx;
			this.tIdx = tIdx;
			this.nIdx = nIdx;
		} ##FSTMerge## public VertexIndices (short vIdx, short tIdx, short nIdx) {
			this.vIdx = vIdx;
			this.tIdx = tIdx;
			this.nIdx = nIdx;
		}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
		public int hashCode () {
			final int prime = 31;
			int result = 1;
			result = prime * result + tIdx;
			result = prime * result + vIdx;
			return result;
		} ##FSTMerge## @Override
		public int hashCode () {
			final int prime = 31;
			int result = 1;
			result = prime * result + tIdx;
			result = prime * result + vIdx;
			return result;
		}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
		public boolean equals (Object obj) {
			if (this == obj) return true;
			if (obj == null) return false;
			if (getClass() != obj.getClass()) return false;
			VertexIndices other = (VertexIndices)obj;
			if (tIdx != other.tIdx) return false;
			if (vIdx != other.vIdx) return false;
			return true;
		} ##FSTMerge## @Override
		public boolean equals (Object obj) {
			if (this == obj) return true;
			if (obj == null) return false;
			if (getClass() != obj.getClass()) return false;
			VertexIndices other = (VertexIndices)obj;
			if (tIdx != other.tIdx) return false;
			if (vIdx != other.vIdx) return false;
			return true;
		}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public short vIdx; ##FSTMerge## public short vIdx;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public short tIdx; ##FSTMerge## public short tIdx;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public short nIdx; ##FSTMerge## public short nIdx;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static ##FSTMerge## public static
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: ExtendsList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## extends ModelLoaderHints ##FSTMerge## extends ModelLoaderHints
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final float frameDuration; ##FSTMerge## public final float frameDuration;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public MD2LoaderHints (float frameDuration) {
			super(false);
			this.frameDuration = frameDuration;
		} ##FSTMerge## public MD2LoaderHints (float frameDuration) {
			super(false);
			this.frameDuration = frameDuration;
		}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Header.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int ident; ##FSTMerge## public int ident;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Header.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int version; ##FSTMerge## public int version;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Header.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int skinWidth; ##FSTMerge## public int skinWidth;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Header.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int skinHeight; ##FSTMerge## public int skinHeight;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Header.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int frameSize; ##FSTMerge## public int frameSize;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Header.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int numSkins; ##FSTMerge## public int numSkins;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Header.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int numVertices; ##FSTMerge## public int numVertices;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Header.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int numTexCoords; ##FSTMerge## public int numTexCoords;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Header.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int numTriangles; ##FSTMerge## public int numTriangles;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Header.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int numGLCommands; ##FSTMerge## public int numGLCommands;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Header.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int numFrames; ##FSTMerge## public int numFrames;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Header.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int offsetSkin; ##FSTMerge## public int offsetSkin;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Header.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int offsetTexCoords; ##FSTMerge## public int offsetTexCoords;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Header.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int offsetTriangles; ##FSTMerge## public int offsetTriangles;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Header.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int offsetFrames; ##FSTMerge## public int offsetFrames;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Header.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int offsetGLCommands; ##FSTMerge## public int offsetGLCommands;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Header.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int offsetEnd; ##FSTMerge## public int offsetEnd;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Header.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Frame.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public float[] vertices; ##FSTMerge## public float[] vertices;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Frame.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int[] normalIndices; ##FSTMerge## public int[] normalIndices;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Frame.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public String name; ##FSTMerge## public String name;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Frame.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static KeyframedModel loadKeyframedModel (FileHandle handle, boolean flipV) {
		return loadKeyframedModel(handle.read(), flipV);
	} ##FSTMerge## public static KeyframedModel loadKeyframedModel (FileHandle handle, boolean flipV) {
		return loadKeyframedModel(handle.read(), flipV);
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static StillModel loadStillModel (FileHandle handle, boolean flipV) {
		return loadStillModel(handle.read(), flipV);
	} ##FSTMerge## public static StillModel loadStillModel (FileHandle handle, boolean flipV) {
		return loadStillModel(handle.read(), flipV);
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static int lineNum = 0; ##FSTMerge## static int lineNum = 0;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static String line = null; ##FSTMerge## static String line = null;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static StillModel loadStillModel (InputStream stream, boolean flipV) {
		BufferedReader in = new BufferedReader(new InputStreamReader(stream));

		lineNum = 1;
		try {
			String version = readString(in);
			if (!version.equals("g3dt-still-1.0")) throw new GdxRuntimeException("incorrect version");
			int numMeshes = readInt(in);
			StillSubMesh[] subMeshes = new StillSubMesh[numMeshes];
			for (int i = 0; i < numMeshes; i++) {
				subMeshes[i] = readStillSubMesh(in, flipV);
			}
			StillModel model = new StillModel(subMeshes);
			return model;
		} catch (Throwable e) {
			throw new GdxRuntimeException("Couldn't read keyframed model, error in line " + lineNum + ", '" + line + "' : "
				+ e.getMessage(), e);
		}
	} ##FSTMerge## public static StillModel loadStillModel (InputStream stream, boolean flipV) {
		BufferedReader in = new BufferedReader(new InputStreamReader(stream));

		lineNum = 1;
		try {
			String version = readString(in);
			if (!version.equals("g3dt-still-1.0")) throw new GdxRuntimeException("incorrect version");
			int numMeshes = readInt(in);
			StillSubMesh[] subMeshes = new StillSubMesh[numMeshes];
			for (int i = 0; i < numMeshes; i++) {
				subMeshes[i] = readStillSubMesh(in, flipV);
			}
			StillModel model = new StillModel(subMeshes);
			return model;
		} catch (Throwable e) {
			throw new GdxRuntimeException("Couldn't read keyframed model, error in line " + lineNum + ", '" + line + "' : "
				+ e.getMessage(), e);
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static StillSubMesh readStillSubMesh (BufferedReader in, boolean flipV) throws IOException {
		String name = readString(in);
		IntArray indices = readFaces(in);
		int numVertices = readInt(in);
		int numAttributes = readInt(in);

		if (!readString(in).equals("position")) throw new GdxRuntimeException("first attribute must be position.");
		int numUvs = 0;
		boolean hasNormals = false;
		for (int i = 1; i < numAttributes; i++) {
			String attributeType = readString(in);

			if (!attributeType.equals("normal") && !attributeType.equals("uv"))
				throw new GdxRuntimeException("attribute name must be normal or uv");

			if (attributeType.equals("normal")) {
				if (i != 1) throw new GdxRuntimeException("attribute normal must be second attribute");
				hasNormals = true;
			}
			if (attributeType.equals("uv")) {
				numUvs++;
			}
		}
		VertexAttribute[] vertexAttributes = createVertexAttributes(hasNormals, numUvs);
		int vertexSize = new VertexAttributes(vertexAttributes).vertexSize / 4;
		float[] vertices = new float[numVertices * vertexSize];
		int idx = 0;
		int uvOffset = hasNormals ? 6 : 3;
		for (int i = 0; i < numVertices; i++) {
			readFloatArray(in, vertices, idx);
			if (flipV) {
				for (int j = idx + uvOffset + 1; j < idx + uvOffset + numUvs * 2; j += 2) {
					vertices[j] = 1 - vertices[j];
				}
			}
			idx += vertexSize;
		}

		Mesh mesh = new Mesh(true, numVertices, indices.size, vertexAttributes);
		mesh.setVertices(vertices);
		mesh.setIndices(convertToShortArray(indices));
		return new StillSubMesh(name, mesh, GL10.GL_TRIANGLES);
	} ##FSTMerge## private static StillSubMesh readStillSubMesh (BufferedReader in, boolean flipV) throws IOException {
		String name = readString(in);
		IntArray indices = readFaces(in);
		int numVertices = readInt(in);
		int numAttributes = readInt(in);

		if (!readString(in).equals("position")) throw new GdxRuntimeException("first attribute must be position.");
		int numUvs = 0;
		boolean hasNormals = false;
		for (int i = 1; i < numAttributes; i++) {
			String attributeType = readString(in);

			if (!attributeType.equals("normal") && !attributeType.equals("uv"))
				throw new GdxRuntimeException("attribute name must be normal or uv");

			if (attributeType.equals("normal")) {
				if (i != 1) throw new GdxRuntimeException("attribute normal must be second attribute");
				hasNormals = true;
			}
			if (attributeType.equals("uv")) {
				numUvs++;
			}
		}
		VertexAttribute[] vertexAttributes = createVertexAttributes(hasNormals, numUvs);
		int vertexSize = new VertexAttributes(vertexAttributes).vertexSize / 4;
		float[] vertices = new float[numVertices * vertexSize];
		int idx = 0;
		int uvOffset = hasNormals ? 6 : 3;
		for (int i = 0; i < numVertices; i++) {
			readFloatArray(in, vertices, idx);
			if (flipV) {
				for (int j = idx + uvOffset + 1; j < idx + uvOffset + numUvs * 2; j += 2) {
					vertices[j] = 1 - vertices[j];
				}
			}
			idx += vertexSize;
		}

		Mesh mesh = new Mesh(true, numVertices, indices.size, vertexAttributes);
		mesh.setVertices(vertices);
		mesh.setIndices(convertToShortArray(indices));
		return new StillSubMesh(name, mesh, GL10.GL_TRIANGLES);
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static KeyframedModel loadKeyframedModel (InputStream stream, boolean flipV) {
		BufferedReader in = new BufferedReader(new InputStreamReader(stream));

		lineNum = 1;
		try {
			String version = readString(in);
			if (!version.equals("g3dt-keyframed-1.0")) throw new GdxRuntimeException("incorrect version");
			int numMeshes = readInt(in);
			KeyframedSubMesh[] subMeshes = new KeyframedSubMesh[numMeshes];
			for (int i = 0; i < numMeshes; i++) {
				subMeshes[i] = readMesh(in, flipV);
			}
			KeyframedModel model = new KeyframedModel(subMeshes);
			model.setAnimation(model.getAnimations()[0].name, 0, false);
			return model;
		} catch (Throwable e) {
			throw new GdxRuntimeException("Couldn't read keyframed model, error in line " + lineNum + ", '" + line + "' : "
				+ e.getMessage(), e);
		}
	} ##FSTMerge## public static KeyframedModel loadKeyframedModel (InputStream stream, boolean flipV) {
		BufferedReader in = new BufferedReader(new InputStreamReader(stream));

		lineNum = 1;
		try {
			String version = readString(in);
			if (!version.equals("g3dt-keyframed-1.0")) throw new GdxRuntimeException("incorrect version");
			int numMeshes = readInt(in);
			KeyframedSubMesh[] subMeshes = new KeyframedSubMesh[numMeshes];
			for (int i = 0; i < numMeshes; i++) {
				subMeshes[i] = readMesh(in, flipV);
			}
			KeyframedModel model = new KeyframedModel(subMeshes);
			model.setAnimation(model.getAnimations()[0].name, 0, false);
			return model;
		} catch (Throwable e) {
			throw new GdxRuntimeException("Couldn't read keyframed model, error in line " + lineNum + ", '" + line + "' : "
				+ e.getMessage(), e);
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static KeyframedSubMesh readMesh (BufferedReader in, boolean flipV) throws IOException {
		String name = readString(in);
		IntArray indices = readFaces(in);
		int numVertices = readInt(in);
		int numAttributes = readInt(in);

		if (!readString(in).equals("position")) throw new GdxRuntimeException("first attribute must be position.");
		Array<FloatArray> uvSets = new Array<FloatArray>();
		boolean hasNormals = false;
		for (int i = 1; i < numAttributes; i++) {
			String attributeType = readString(in);

			if (!attributeType.equals("normal") && !attributeType.equals("uv"))
				throw new GdxRuntimeException("attribute name must be normal or uv");

			if (attributeType.equals("normal")) {
				if (i != 1) throw new GdxRuntimeException("attribute normal must be second attribute");
				hasNormals = true;
			}
			if (attributeType.equals("uv")) {
				uvSets.add(readUVSet(in, numVertices, flipV));
			}
		}
		int animatedComponents = hasNormals ? 6 : 3;

		VertexAttribute[] vertexAttributes = createVertexAttributes(hasNormals, uvSets.size);

		int numAnimations = readInt(in);
		ObjectMap<String, KeyframedAnimation> animations = new ObjectMap<String, KeyframedAnimation>(numAnimations);
		for (int i = 0; i < numAnimations; i++) {
			String animationName = readString(in);
			int numKeyframes = readInt(in);
			float frameDuration = readFloat(in); // in seconds

			Keyframe[] keyframes = new Keyframe[numKeyframes];
			float time = 0;
			FloatArray vertex = new FloatArray(animatedComponents);
			for (int frame = 0; frame < numKeyframes; frame++) {
				float[] vertices = new float[numVertices * (animatedComponents)];
				int idx = 0;
				for (int j = 0; j < numVertices; j++) {
					idx = readFloatArray(in, vertices, idx);
				}
				Keyframe keyframe = new Keyframe(time, vertices);
				keyframes[frame] = keyframe;
				time += frameDuration;
			}

			KeyframedAnimation animation = new KeyframedAnimation(animationName, frameDuration, keyframes);
			animations.put(animationName, animation);
		}

		KeyframedSubMesh mesh = new KeyframedSubMesh(name, new Mesh(VertexDataType.VertexArray, false, numVertices, indices.size,
			createVertexAttributes(hasNormals, uvSets.size)), buildVertices(numVertices, hasNormals, uvSets), animations,
			animatedComponents, GL10.GL_TRIANGLES);
		mesh.mesh.setIndices(convertToShortArray(indices));
		mesh.mesh.setVertices(mesh.blendedVertices);
		return mesh;
	} ##FSTMerge## private static KeyframedSubMesh readMesh (BufferedReader in, boolean flipV) throws IOException {
		String name = readString(in);
		IntArray indices = readFaces(in);
		int numVertices = readInt(in);
		int numAttributes = readInt(in);

		if (!readString(in).equals("position")) throw new GdxRuntimeException("first attribute must be position.");
		Array<FloatArray> uvSets = new Array<FloatArray>();
		boolean hasNormals = false;
		for (int i = 1; i < numAttributes; i++) {
			String attributeType = readString(in);

			if (!attributeType.equals("normal") && !attributeType.equals("uv"))
				throw new GdxRuntimeException("attribute name must be normal or uv");

			if (attributeType.equals("normal")) {
				if (i != 1) throw new GdxRuntimeException("attribute normal must be second attribute");
				hasNormals = true;
			}
			if (attributeType.equals("uv")) {
				uvSets.add(readUVSet(in, numVertices, flipV));
			}
		}
		int animatedComponents = hasNormals ? 6 : 3;

		VertexAttribute[] vertexAttributes = createVertexAttributes(hasNormals, uvSets.size);

		int numAnimations = readInt(in);
		ObjectMap<String, KeyframedAnimation> animations = new ObjectMap<String, KeyframedAnimation>(numAnimations);
		for (int i = 0; i < numAnimations; i++) {
			String animationName = readString(in);
			int numKeyframes = readInt(in);
			float frameDuration = readFloat(in); // in seconds

			Keyframe[] keyframes = new Keyframe[numKeyframes];
			float time = 0;
			FloatArray vertex = new FloatArray(animatedComponents);
			for (int frame = 0; frame < numKeyframes; frame++) {
				float[] vertices = new float[numVertices * (animatedComponents)];
				int idx = 0;
				for (int j = 0; j < numVertices; j++) {
					idx = readFloatArray(in, vertices, idx);
				}
				Keyframe keyframe = new Keyframe(time, vertices);
				keyframes[frame] = keyframe;
				time += frameDuration;
			}

			KeyframedAnimation animation = new KeyframedAnimation(animationName, frameDuration, keyframes);
			animations.put(animationName, animation);
		}

		KeyframedSubMesh mesh = new KeyframedSubMesh(name, new Mesh(VertexDataType.VertexArray, false, numVertices, indices.size,
			createVertexAttributes(hasNormals, uvSets.size)), buildVertices(numVertices, hasNormals, uvSets), animations,
			animatedComponents, GL10.GL_TRIANGLES);
		mesh.mesh.setIndices(convertToShortArray(indices));
		mesh.mesh.setVertices(mesh.blendedVertices);
		return mesh;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static float[] buildVertices (int numVertices, boolean hasNormals, Array<FloatArray> uvSets) {
		float[] vertices = new float[numVertices * (3 + (hasNormals ? 3 : 0) + uvSets.size * 2)];

		int idx = 0;
		int idxUv = 0;
		for (int i = 0; i < numVertices; i++) {
			vertices[idx++] = 0;
			vertices[idx++] = 0;
			vertices[idx++] = 0;
			if (hasNormals) {
				vertices[idx++] = 0;
				vertices[idx++] = 0;
				vertices[idx++] = 0;
			}
			for (int j = 0; j < uvSets.size; j++) {
				vertices[idx++] = uvSets.get(j).get(idxUv);
				vertices[idx++] = uvSets.get(j).get(idxUv + 1);
			}
			idxUv += 2;
		}
		return vertices;
	} ##FSTMerge## private static float[] buildVertices (int numVertices, boolean hasNormals, Array<FloatArray> uvSets) {
		float[] vertices = new float[numVertices * (3 + (hasNormals ? 3 : 0) + uvSets.size * 2)];

		int idx = 0;
		int idxUv = 0;
		for (int i = 0; i < numVertices; i++) {
			vertices[idx++] = 0;
			vertices[idx++] = 0;
			vertices[idx++] = 0;
			if (hasNormals) {
				vertices[idx++] = 0;
				vertices[idx++] = 0;
				vertices[idx++] = 0;
			}
			for (int j = 0; j < uvSets.size; j++) {
				vertices[idx++] = uvSets.get(j).get(idxUv);
				vertices[idx++] = uvSets.get(j).get(idxUv + 1);
			}
			idxUv += 2;
		}
		return vertices;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static VertexAttribute[] createVertexAttributes (boolean hasNormals, int uvs) {
		VertexAttribute[] attributes = new VertexAttribute[1 + (hasNormals ? 1 : 0) + uvs];
		int idx = 0;
		attributes[idx++] = new VertexAttribute(Usage.Position, 3, ShaderProgram.POSITION_ATTRIBUTE);
		if (hasNormals) attributes[idx++] = new VertexAttribute(Usage.Normal, 3, ShaderProgram.NORMAL_ATTRIBUTE);
		for (int i = 0; i < uvs; i++) {
			attributes[idx++] = new VertexAttribute(Usage.TextureCoordinates, 2, ShaderProgram.TEXCOORD_ATTRIBUTE + i);
		}
		return attributes;
	} ##FSTMerge## private static VertexAttribute[] createVertexAttributes (boolean hasNormals, int uvs) {
		VertexAttribute[] attributes = new VertexAttribute[1 + (hasNormals ? 1 : 0) + uvs];
		int idx = 0;
		attributes[idx++] = new VertexAttribute(Usage.Position, 3, ShaderProgram.POSITION_ATTRIBUTE);
		if (hasNormals) attributes[idx++] = new VertexAttribute(Usage.Normal, 3, ShaderProgram.NORMAL_ATTRIBUTE);
		for (int i = 0; i < uvs; i++) {
			attributes[idx++] = new VertexAttribute(Usage.TextureCoordinates, 2, ShaderProgram.TEXCOORD_ATTRIBUTE + i);
		}
		return attributes;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static FloatArray readUVSet (BufferedReader in, int numVertices, boolean flipV) throws IOException {
		FloatArray uvSet = new FloatArray(numVertices * 2);
		FloatArray uv = new FloatArray(2);
		for (int i = 0; i < numVertices; i++) {
			readFloatArray(in, uv);
			uvSet.add(uv.items[0]);
			uvSet.add(flipV ? 1 - uv.items[1] : uv.items[1]);
		}
		return uvSet;
	} ##FSTMerge## private static FloatArray readUVSet (BufferedReader in, int numVertices, boolean flipV) throws IOException {
		FloatArray uvSet = new FloatArray(numVertices * 2);
		FloatArray uv = new FloatArray(2);
		for (int i = 0; i < numVertices; i++) {
			readFloatArray(in, uv);
			uvSet.add(uv.items[0]);
			uvSet.add(flipV ? 1 - uv.items[1] : uv.items[1]);
		}
		return uvSet;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static IntArray readFaces (BufferedReader in) throws NumberFormatException, IOException {
		int numFaces = readInt(in);
		IntArray faceIndices = new IntArray();
		IntArray triangles = new IntArray();
		IntArray indices = new IntArray();

		for (int face = 0; face < numFaces; face++) {
			readIntArray(in, faceIndices);
			int numIndices = faceIndices.get(0);
			triangles.clear();
			int baseIndex = faceIndices.get(1);
			for (int i = 2; i < numIndices; i++) {
				triangles.add(baseIndex);
				triangles.add(faceIndices.items[i]);
				triangles.add(faceIndices.items[i + 1]);
			}
			indices.addAll(triangles);
		}

		indices.shrink();
		return indices;
	} ##FSTMerge## private static IntArray readFaces (BufferedReader in) throws NumberFormatException, IOException {
		int numFaces = readInt(in);
		IntArray faceIndices = new IntArray();
		IntArray triangles = new IntArray();
		IntArray indices = new IntArray();

		for (int face = 0; face < numFaces; face++) {
			readIntArray(in, faceIndices);
			int numIndices = faceIndices.get(0);
			triangles.clear();
			int baseIndex = faceIndices.get(1);
			for (int i = 2; i < numIndices; i++) {
				triangles.add(baseIndex);
				triangles.add(faceIndices.items[i]);
				triangles.add(faceIndices.items[i + 1]);
			}
			indices.addAll(triangles);
		}

		indices.shrink();
		return indices;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static short[] convertToShortArray (IntArray array) {
		short[] shortArray = new short[array.size];
		for (int i = 0; i < array.size; i++) {
			shortArray[i] = (short)array.items[i];
		}
		return shortArray;
	} ##FSTMerge## private static short[] convertToShortArray (IntArray array) {
		short[] shortArray = new short[array.size];
		for (int i = 0; i < array.size; i++) {
			shortArray[i] = (short)array.items[i];
		}
		return shortArray;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static float readFloat (BufferedReader in) throws NumberFormatException, IOException {
		lineNum++;
		return Float.parseFloat(read(in).trim());
	} ##FSTMerge## private static float readFloat (BufferedReader in) throws NumberFormatException, IOException {
		lineNum++;
		return Float.parseFloat(read(in).trim());
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static int readInt (BufferedReader in) throws NumberFormatException, IOException {
		lineNum++;
		return (int)(Math.floor(Float.parseFloat(read(in).trim())));
	} ##FSTMerge## private static int readInt (BufferedReader in) throws NumberFormatException, IOException {
		lineNum++;
		return (int)(Math.floor(Float.parseFloat(read(in).trim())));
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static String readString (BufferedReader in) throws IOException {
		lineNum++;
		return read(in);
	} ##FSTMerge## private static String readString (BufferedReader in) throws IOException {
		lineNum++;
		return read(in);
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static void readFloatArray (BufferedReader in, FloatArray array) throws IOException {
		lineNum++;
		String[] tokens = read(in).split(",");
		int len = tokens.length;
		array.clear();
		for (int i = 0; i < len; i++) {
			array.add(Float.parseFloat(tokens[i].trim()));
		}
	} ##FSTMerge## private static void readFloatArray (BufferedReader in, FloatArray array) throws IOException {
		lineNum++;
		String[] tokens = read(in).split(",");
		int len = tokens.length;
		array.clear();
		for (int i = 0; i < len; i++) {
			array.add(Float.parseFloat(tokens[i].trim()));
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static int readFloatArray (BufferedReader in, float[] array, int idx) throws IOException {
		lineNum++;
		String[] tokens = read(in).split(",");
		int len = tokens.length;
		for (int i = 0; i < len; i++) {
			array[idx++] = Float.parseFloat(tokens[i].trim());
		}
		return idx;
	} ##FSTMerge## private static int readFloatArray (BufferedReader in, float[] array, int idx) throws IOException {
		lineNum++;
		String[] tokens = read(in).split(",");
		int len = tokens.length;
		for (int i = 0; i < len; i++) {
			array[idx++] = Float.parseFloat(tokens[i].trim());
		}
		return idx;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static void readIntArray (BufferedReader in, IntArray array) throws IOException {
		String[] tokens = read(in).split(",");
		int len = tokens.length;
		array.clear();
		for (int i = 0; i < len; i++) {
			array.add(Integer.parseInt(tokens[i].trim()));
		}
	} ##FSTMerge## private static void readIntArray (BufferedReader in, IntArray array) throws IOException {
		String[] tokens = read(in).split(",");
		int len = tokens.length;
		array.clear();
		for (int i = 0; i < len; i++) {
			array.add(Integer.parseInt(tokens[i].trim()));
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static String read (BufferedReader in) throws IOException {
		line = in.readLine();
		return line;
	} ##FSTMerge## private static String read (BufferedReader in) throws IOException {
		line = in.readLine();
		return line;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static ##FSTMerge## public static
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements StillModelLoader ##FSTMerge## implements StillModelLoader
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
		public StillModel load (FileHandle handle, ModelLoaderHints hints) {
			return G3dtLoader.loadStillModel(handle, hints.flipV);
		} ##FSTMerge## @Override
		public StillModel load (FileHandle handle, ModelLoaderHints hints) {
			return G3dtLoader.loadStillModel(handle, hints.flipV);
		}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static ##FSTMerge## public static
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements KeyframedModelLoader ##FSTMerge## implements KeyframedModelLoader
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
		public KeyframedModel load (FileHandle handle, ModelLoaderHints hints) {
			return G3dtLoader.loadKeyframedModel(handle, hints.flipV);
		} ##FSTMerge## @Override
		public KeyframedModel load (FileHandle handle, ModelLoaderHints hints) {
			return G3dtLoader.loadKeyframedModel(handle, hints.flipV);
		}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static StillModel loadStillModel (FileHandle handle) {
		Chunk root = null;
		InputStream in = null;
		try {
			in = handle.read();
			root = ChunkReader.readChunks(in);

			// check root tag
			if (root.getId() != G3dConstants.G3D_ROOT) throw new GdxRuntimeException("Invalid root tag id: " + root.getId());

			// check version
			Chunk version = root.getChild(G3dConstants.VERSION_INFO);
			if (version == null) throw new GdxRuntimeException("No version chunk found");
			int major = version.readByte();
			int minor = version.readByte();
			if (major != 0 || minor != 1)
				throw new GdxRuntimeException("Invalid version, required 0.1, got " + major + "." + minor);

			// read stillmodel
			Chunk stillModel = root.getChild(G3dConstants.STILL_MODEL);
			if (stillModel == null) throw new GdxRuntimeException("No stillmodel chunk found");
			int numSubMeshes = stillModel.readInt();

			// read submeshes
			StillSubMesh[] meshes = new StillSubMesh[numSubMeshes];
			Chunk[] meshChunks = stillModel.getChildren(G3dConstants.STILL_SUBMESH);
			if (meshChunks.length != numSubMeshes)
				throw new GdxRuntimeException("Number of submeshes not equal to number specified in still model chunk, expected "
					+ numSubMeshes + ", got " + meshChunks.length);
			for (int i = 0; i < numSubMeshes; i++) {
				// read submesh name and primitive type
				Chunk subMesh = meshChunks[i];
				String name = subMesh.readString();
				int primitiveType = subMesh.readInt();

				// read attributes
				Chunk attributes = subMesh.getChild(G3dConstants.VERTEX_ATTRIBUTES);
				if (attributes == null) throw new GdxRuntimeException("No vertex attribute chunk given");
				int numAttributes = attributes.readInt();
				Chunk[] attributeChunks = attributes.getChildren(G3dConstants.VERTEX_ATTRIBUTE);
				if (attributeChunks.length != numAttributes)
					new GdxRuntimeException("Number of attributes not equal to number specified in attributes chunk, expected "
						+ numAttributes + ", got " + attributeChunks.length);
				VertexAttribute[] vertAttribs = new VertexAttribute[numAttributes];
				for (int j = 0; j < numAttributes; j++) {
					vertAttribs[j] = new VertexAttribute(attributeChunks[j].readInt(), attributeChunks[j].readInt(),
						attributeChunks[j].readString());
				}

				// read vertices
				Chunk vertices = subMesh.getChild(G3dConstants.VERTEX_LIST);
				int numVertices = vertices.readInt();
				float[] vertexData = vertices.readFloats();

				// read indices
				Chunk indices = subMesh.getChild(G3dConstants.INDEX_LIST);
				int numIndices = indices.readInt();
				short[] indexData = indices.readShorts();

				StillSubMesh mesh = new StillSubMesh(name, new Mesh(true, numVertices, numIndices, vertAttribs), primitiveType);
				mesh.mesh.setVertices(vertexData);
				mesh.mesh.setIndices(indexData);
				mesh.material = new Material("default");
				meshes[i] = mesh;
			}

			StillModel model = new StillModel(meshes);
			model.setMaterial(new Material("default"));
			return model;
		} catch (IOException e) {
			throw new GdxRuntimeException("Couldn't load still model from '" + handle.name() + "', " + e.getMessage(), e);
		} finally {
			if (in != null) try {
				in.close();
			} catch (IOException e) {
			}
		}
	} ##FSTMerge## public static StillModel loadStillModel (FileHandle handle) {
		Chunk root = null;
		InputStream in = null;
		try {
			in = handle.read();
			root = ChunkReader.readChunks(in);

			// check root tag
			if (root.getId() != G3dConstants.G3D_ROOT) throw new GdxRuntimeException("Invalid root tag id: " + root.getId());

			// check version
			Chunk version = root.getChild(G3dConstants.VERSION_INFO);
			if (version == null) throw new GdxRuntimeException("No version chunk found");
			int major = version.readByte();
			int minor = version.readByte();
			if (major != 0 || minor != 1)
				throw new GdxRuntimeException("Invalid version, required 0.1, got " + major + "." + minor);

			// read stillmodel
			Chunk stillModel = root.getChild(G3dConstants.STILL_MODEL);
			if (stillModel == null) throw new GdxRuntimeException("No stillmodel chunk found");
			int numSubMeshes = stillModel.readInt();

			// read submeshes
			StillSubMesh[] meshes = new StillSubMesh[numSubMeshes];
			Chunk[] meshChunks = stillModel.getChildren(G3dConstants.STILL_SUBMESH);
			if (meshChunks.length != numSubMeshes)
				throw new GdxRuntimeException("Number of submeshes not equal to number specified in still model chunk, expected "
					+ numSubMeshes + ", got " + meshChunks.length);
			for (int i = 0; i < numSubMeshes; i++) {
				// read submesh name and primitive type
				Chunk subMesh = meshChunks[i];
				String name = subMesh.readString();
				int primitiveType = subMesh.readInt();

				// read attributes
				Chunk attributes = subMesh.getChild(G3dConstants.VERTEX_ATTRIBUTES);
				if (attributes == null) throw new GdxRuntimeException("No vertex attribute chunk given");
				int numAttributes = attributes.readInt();
				Chunk[] attributeChunks = attributes.getChildren(G3dConstants.VERTEX_ATTRIBUTE);
				if (attributeChunks.length != numAttributes)
					new GdxRuntimeException("Number of attributes not equal to number specified in attributes chunk, expected "
						+ numAttributes + ", got " + attributeChunks.length);
				VertexAttribute[] vertAttribs = new VertexAttribute[numAttributes];
				for (int j = 0; j < numAttributes; j++) {
					vertAttribs[j] = new VertexAttribute(attributeChunks[j].readInt(), attributeChunks[j].readInt(),
						attributeChunks[j].readString());
				}

				// read vertices
				Chunk vertices = subMesh.getChild(G3dConstants.VERTEX_LIST);
				int numVertices = vertices.readInt();
				float[] vertexData = vertices.readFloats();

				// read indices
				Chunk indices = subMesh.getChild(G3dConstants.INDEX_LIST);
				int numIndices = indices.readInt();
				short[] indexData = indices.readShorts();

				StillSubMesh mesh = new StillSubMesh(name, new Mesh(true, numVertices, numIndices, vertAttribs), primitiveType);
				mesh.mesh.setVertices(vertexData);
				mesh.mesh.setIndices(indexData);
				mesh.material = new Material("default");
				meshes[i] = mesh;
			}

			StillModel model = new StillModel(meshes);
			model.setMaterial(new Material("default"));
			return model;
		} catch (IOException e) {
			throw new GdxRuntimeException("Couldn't load still model from '" + handle.name() + "', " + e.getMessage(), e);
		} finally {
			if (in != null) try {
				in.close();
			} catch (IOException e) {
			}
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static KeyframedModel loadKeyframedModel (FileHandle handle) {
		Chunk root = null;
		InputStream in = null;
		try {
			in = handle.read();
			root = ChunkReader.readChunks(in);

			// check root tag
			if (root.getId() != G3dConstants.G3D_ROOT) throw new GdxRuntimeException("Invalid root tag id: " + root.getId());

			// check version
			Chunk version = root.getChild(G3dConstants.VERSION_INFO);
			if (version == null) throw new GdxRuntimeException("No version chunk found");
			int major = version.readByte();
			int minor = version.readByte();
			if (major != 0 || minor != 1)
				throw new GdxRuntimeException("Invalid version, required 0.1, got " + major + "." + minor);

			// read keyframed model
			Chunk stillModel = root.getChild(G3dConstants.KEYFRAMED_MODEL);
			if (stillModel == null) throw new GdxRuntimeException("No stillmodel chunk found");
			int numSubMeshes = stillModel.readInt();

			// read submeshes
			KeyframedSubMesh[] meshes = new KeyframedSubMesh[numSubMeshes];
			Chunk[] meshChunks = stillModel.getChildren(G3dConstants.KEYFRAMED_SUBMESH);
			if (meshChunks.length != numSubMeshes)
				throw new GdxRuntimeException("Number of submeshes not equal to number specified in still model chunk, expected "
					+ numSubMeshes + ", got " + meshChunks.length);
			for (int i = 0; i < numSubMeshes; i++) {
				// read submesh name and primitive type
				Chunk subMesh = meshChunks[i];
				String meshName = subMesh.readString();
				int primitiveType = subMesh.readInt();
				int animatedComponents = subMesh.readInt();
				int numAnimations = subMesh.readInt();

				// read attributes
				Chunk attributes = subMesh.getChild(G3dConstants.VERTEX_ATTRIBUTES);
				if (attributes == null) throw new GdxRuntimeException("No vertex attribute chunk given");
				int numAttributes = attributes.readInt();
				Chunk[] attributeChunks = attributes.getChildren(G3dConstants.VERTEX_ATTRIBUTE);
				if (attributeChunks.length != numAttributes)
					new GdxRuntimeException("Number of attributes not equal to number specified in attributes chunk, expected "
						+ numAttributes + ", got " + attributeChunks.length);
				VertexAttribute[] vertAttribs = new VertexAttribute[numAttributes];
				for (int j = 0; j < numAttributes; j++) {
					vertAttribs[j] = new VertexAttribute(attributeChunks[j].readInt(), attributeChunks[j].readInt(),
						attributeChunks[j].readString());
				}

				// read static components, sort of like a bind pose mesh
				Chunk vertices = subMesh.getChild(G3dConstants.VERTEX_LIST);
				int numVertices = vertices.readInt();
				float[] vertexData = vertices.readFloats();

				// read indices
				Chunk indices = subMesh.getChild(G3dConstants.INDEX_LIST);
				int numIndices = indices.readInt();
				short[] indexData = indices.readShorts();

				// read animations
				ObjectMap<String, KeyframedAnimation> animations = new ObjectMap<String, KeyframedAnimation>();
				Chunk[] animationChunks = subMesh.getChildren(G3dConstants.KEYFRAMED_ANIMATION);
				if (numAnimations != animationChunks.length)
					throw new GdxRuntimeException(
						"number of keyframed animations not equal to number specified in keyframed submesh chunk, was "
							+ animationChunks.length + ", expected " + numAnimations);
				for (int j = 0; j < numAnimations; j++) {
					Chunk animationChunk = animationChunks[j];
					String animationName = animationChunk.readString();
					float frameDuration = animationChunk.readFloat();

					// read keyframes
					int numKeyframes = animationChunk.readInt();
					Keyframe[] keyframes = new Keyframe[numKeyframes];
					Chunk[] keyframeChunks = animationChunk.getChildren(G3dConstants.KEYFRAMED_FRAME);
					if (numKeyframes != keyframeChunks.length)
						throw new GdxRuntimeException("number of keyframes not equal to number specified in keyframed animation, was "
							+ keyframeChunks.length + ", expected " + numKeyframes);
					for (int k = 0; k < numKeyframes; k++) {
						Chunk keyframeChunk = keyframeChunks[k];
						float timeStamp = keyframeChunk.readFloat();
						float[] keyframeVertices = keyframeChunk.readFloats();

						keyframes[k] = new Keyframe(timeStamp, keyframeVertices);
					}

					animations.put(animationName, new KeyframedAnimation(animationName, frameDuration, keyframes));
				}

				Mesh mesh = new Mesh(VertexDataType.VertexArray, false, numVertices, numIndices, vertAttribs);
				meshes[i] = new KeyframedSubMesh(meshName, mesh, vertexData, animations, animatedComponents, primitiveType);
				mesh.setVertices(vertexData);
				mesh.setIndices(indexData);
			}

			KeyframedModel model = new KeyframedModel(meshes);
			model.setMaterial(new Material("default"));
			return model;
		} catch (IOException e) {
			throw new GdxRuntimeException("Couldn't load still model from '" + handle.name() + "', " + e.getMessage(), e);
		} finally {
			if (in != null) try {
				in.close();
			} catch (IOException e) {
			}
		}
	} ##FSTMerge## public static KeyframedModel loadKeyframedModel (FileHandle handle) {
		Chunk root = null;
		InputStream in = null;
		try {
			in = handle.read();
			root = ChunkReader.readChunks(in);

			// check root tag
			if (root.getId() != G3dConstants.G3D_ROOT) throw new GdxRuntimeException("Invalid root tag id: " + root.getId());

			// check version
			Chunk version = root.getChild(G3dConstants.VERSION_INFO);
			if (version == null) throw new GdxRuntimeException("No version chunk found");
			int major = version.readByte();
			int minor = version.readByte();
			if (major != 0 || minor != 1)
				throw new GdxRuntimeException("Invalid version, required 0.1, got " + major + "." + minor);

			// read keyframed model
			Chunk stillModel = root.getChild(G3dConstants.KEYFRAMED_MODEL);
			if (stillModel == null) throw new GdxRuntimeException("No stillmodel chunk found");
			int numSubMeshes = stillModel.readInt();

			// read submeshes
			KeyframedSubMesh[] meshes = new KeyframedSubMesh[numSubMeshes];
			Chunk[] meshChunks = stillModel.getChildren(G3dConstants.KEYFRAMED_SUBMESH);
			if (meshChunks.length != numSubMeshes)
				throw new GdxRuntimeException("Number of submeshes not equal to number specified in still model chunk, expected "
					+ numSubMeshes + ", got " + meshChunks.length);
			for (int i = 0; i < numSubMeshes; i++) {
				// read submesh name and primitive type
				Chunk subMesh = meshChunks[i];
				String meshName = subMesh.readString();
				int primitiveType = subMesh.readInt();
				int animatedComponents = subMesh.readInt();
				int numAnimations = subMesh.readInt();

				// read attributes
				Chunk attributes = subMesh.getChild(G3dConstants.VERTEX_ATTRIBUTES);
				if (attributes == null) throw new GdxRuntimeException("No vertex attribute chunk given");
				int numAttributes = attributes.readInt();
				Chunk[] attributeChunks = attributes.getChildren(G3dConstants.VERTEX_ATTRIBUTE);
				if (attributeChunks.length != numAttributes)
					new GdxRuntimeException("Number of attributes not equal to number specified in attributes chunk, expected "
						+ numAttributes + ", got " + attributeChunks.length);
				VertexAttribute[] vertAttribs = new VertexAttribute[numAttributes];
				for (int j = 0; j < numAttributes; j++) {
					vertAttribs[j] = new VertexAttribute(attributeChunks[j].readInt(), attributeChunks[j].readInt(),
						attributeChunks[j].readString());
				}

				// read static components, sort of like a bind pose mesh
				Chunk vertices = subMesh.getChild(G3dConstants.VERTEX_LIST);
				int numVertices = vertices.readInt();
				float[] vertexData = vertices.readFloats();

				// read indices
				Chunk indices = subMesh.getChild(G3dConstants.INDEX_LIST);
				int numIndices = indices.readInt();
				short[] indexData = indices.readShorts();

				// read animations
				ObjectMap<String, KeyframedAnimation> animations = new ObjectMap<String, KeyframedAnimation>();
				Chunk[] animationChunks = subMesh.getChildren(G3dConstants.KEYFRAMED_ANIMATION);
				if (numAnimations != animationChunks.length)
					throw new GdxRuntimeException(
						"number of keyframed animations not equal to number specified in keyframed submesh chunk, was "
							+ animationChunks.length + ", expected " + numAnimations);
				for (int j = 0; j < numAnimations; j++) {
					Chunk animationChunk = animationChunks[j];
					String animationName = animationChunk.readString();
					float frameDuration = animationChunk.readFloat();

					// read keyframes
					int numKeyframes = animationChunk.readInt();
					Keyframe[] keyframes = new Keyframe[numKeyframes];
					Chunk[] keyframeChunks = animationChunk.getChildren(G3dConstants.KEYFRAMED_FRAME);
					if (numKeyframes != keyframeChunks.length)
						throw new GdxRuntimeException("number of keyframes not equal to number specified in keyframed animation, was "
							+ keyframeChunks.length + ", expected " + numKeyframes);
					for (int k = 0; k < numKeyframes; k++) {
						Chunk keyframeChunk = keyframeChunks[k];
						float timeStamp = keyframeChunk.readFloat();
						float[] keyframeVertices = keyframeChunk.readFloats();

						keyframes[k] = new Keyframe(timeStamp, keyframeVertices);
					}

					animations.put(animationName, new KeyframedAnimation(animationName, frameDuration, keyframes));
				}

				Mesh mesh = new Mesh(VertexDataType.VertexArray, false, numVertices, numIndices, vertAttribs);
				meshes[i] = new KeyframedSubMesh(meshName, mesh, vertexData, animations, animatedComponents, primitiveType);
				mesh.setVertices(vertexData);
				mesh.setIndices(indexData);
			}

			KeyframedModel model = new KeyframedModel(meshes);
			model.setMaterial(new Material("default"));
			return model;
		} catch (IOException e) {
			throw new GdxRuntimeException("Couldn't load still model from '" + handle.name() + "', " + e.getMessage(), e);
		} finally {
			if (in != null) try {
				in.close();
			} catch (IOException e) {
			}
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static SkeletonModel loadSkeletonModel (FileHandle handle) {
		Chunk root = null;
		InputStream in = null;
		try {
			in = handle.read();
			root = ChunkReader.readChunks(in);

			// check root tag
			if (root.getId() != G3dConstants.G3D_ROOT) throw new GdxRuntimeException("Invalid root tag id: " + root.getId());

			// check version
			Chunk version = root.getChild(G3dConstants.VERSION_INFO);
			if (version == null) throw new GdxRuntimeException("No version chunk found");
			int major = version.readByte();
			int minor = version.readByte();
			if (major != 0 || minor != 1)
				throw new GdxRuntimeException("Invalid version, required 0.1, got " + major + "." + minor);

			// read skeleton model
			Chunk skeletonModel = root.getChild(G3dConstants.SKELETON_MODEL);
			if (skeletonModel == null) throw new GdxRuntimeException("No skeletonModel chunk found");
			int numSubMeshes = skeletonModel.readInt();

			// read submeshes
			SkeletonSubMesh[] meshes = new SkeletonSubMesh[numSubMeshes];
			Chunk[] meshChunks = skeletonModel.getChildren(G3dConstants.SKELETON_SUBMESH);
			if (meshChunks.length != numSubMeshes)
				throw new GdxRuntimeException("Number of submeshes not equal to number specified in still model chunk, expected "
					+ numSubMeshes + ", got " + meshChunks.length);
			for (int i = 0; i < numSubMeshes; i++) {
				Chunk subMeshChunk = meshChunks[i];
				
				// read attributes
				Chunk attributes = subMeshChunk.getChild(G3dConstants.VERTEX_ATTRIBUTES);
				if (attributes == null) throw new GdxRuntimeException("No vertex attribute chunk given");
				int numAttributes = attributes.readInt();
				Chunk[] attributeChunks = attributes.getChildren(G3dConstants.VERTEX_ATTRIBUTE);
				if (attributeChunks.length != numAttributes)
					new GdxRuntimeException("Number of attributes not equal to number specified in attributes chunk, expected "
						+ numAttributes + ", got " + attributeChunks.length);
				VertexAttribute[] vertAttribs = new VertexAttribute[numAttributes];
				for (int j = 0; j < numAttributes; j++) {
					vertAttribs[j] = new VertexAttribute(attributeChunks[j].readInt(), attributeChunks[j].readInt(),
						attributeChunks[j].readString());
				}

				// read static components, sort of like a bind pose mesh
				Chunk vertices = subMeshChunk.getChild(G3dConstants.VERTEX_LIST);
				int numVertices = vertices.readInt();
				float[] meshVertices = vertices.readFloats();

				// read indices
				Chunk indices = subMeshChunk.getChild(G3dConstants.INDEX_LIST);
				int numIndices = indices.readInt();
				short[] meshIndices = indices.readShorts();
				
				//read bone weight
				Chunk boneWeights = subMeshChunk.getChild(G3dConstants.BONE_WEIGHTS);
				int numBonesWeights = boneWeights.readInt();
				Chunk[] boneWeightChunks = boneWeights.getChildren(G3dConstants.BONE_WEIGHT);
				if (attributeChunks.length != numAttributes)
					new GdxRuntimeException("Number of bone weights not equal to number specified in bone weights chunk, expected "
						+ numBonesWeights + ", got " + boneWeightChunks.length);
				float[][] meshBoneWeights = new float[numBonesWeights][];
				for(int j=0;j<numBonesWeights;j++) {
					int count = boneWeightChunks[j].readInt();
					meshBoneWeights[j] = boneWeightChunks[j].readFloats();
				}

				//read bone assignment
				Chunk boneAssignments = subMeshChunk.getChild(G3dConstants.BONE_ASSIGNMENTS);
				int numBoneAssignments = boneAssignments.readInt();
				Chunk[] boneAssignmentChunks = boneAssignments.getChildren(G3dConstants.BONE_ASSIGNMENT);
				if (boneAssignmentChunks.length != numBoneAssignments)
					new GdxRuntimeException("Number of bone assignment not equal to number specified in bone assignment chunk, expected "
						+ numBoneAssignments + ", got " + boneAssignmentChunks.length);
				int[][] meshBoneAssignments = new int[numBoneAssignments][];
				for(int j=0;j<numBoneAssignments;j++) {
					int count = boneAssignmentChunks[j].readInt();
					meshBoneAssignments[j] = boneAssignmentChunks[j].readInts();
				}
				
				SkeletonSubMesh subMesh = new SkeletonSubMesh(subMeshChunk.readString(), new Mesh(false, numVertices, numIndices, vertAttribs),
					subMeshChunk.readInt());
				
				subMesh.indices = meshIndices;
				subMesh.boneAssignments = meshBoneAssignments;
				subMesh.boneWeights = meshBoneWeights;
				subMesh.vertices = meshVertices;
				
				subMesh.mesh.setVertices(subMesh.vertices);
				subMesh.mesh.setIndices(subMesh.indices);
				subMesh.skinnedVertices = new float[subMesh.vertices.length];
				System.arraycopy(subMesh.vertices, 0, subMesh.skinnedVertices, 0, subMesh.vertices.length);
				meshes[i] = subMesh;
			}
			
			//read Skeleton hierarchy
			Skeleton skeleton = new Skeleton();
			Chunk skeletonChunk = skeletonModel.getChild(G3dConstants.SKELETON);
			{
				// read Skeleton hierarchy
				Chunk hierarchy = skeletonChunk.getChild(G3dConstants.SKELETON_HIERARCHY);
				int numHierarchyJoints = hierarchy.readInt();
				for(int i=0;i<numHierarchyJoints;i++) {
					skeleton.hierarchy.add(readSkeletonJoint(hierarchy));
				}
				
				
				// read Skeleton animations
				Chunk animations = skeletonChunk.getChild(G3dConstants.SKELETON_ANIMATIONS);
				int numAnimations = animations.readInt();
				Chunk[] animationChunks = animations.getChildren(G3dConstants.SKELETON_ANIMATION);
				if (animationChunks.length != numAnimations)
					new GdxRuntimeException("Number of animations not equal to number specified in animations chunk, expected "
						+ numAnimations + ", got " + animationChunks.length);
				for(int i=0;i<numAnimations; i++) {
					Chunk animation = animationChunks[i];

					String name = animation.readString();
					float totalDuration = animation.readFloat();
					
					int numJoints = animation.readInt();
					SkeletonKeyframe perJointKeyFrames[][] = new SkeletonKeyframe[numJoints][];
					for(int j=0;j<numJoints;j++){
						int numFrames = animation.readInt();
						perJointKeyFrames[j] = new SkeletonKeyframe[numFrames];
						
						for(int k=0;k<numFrames;k++){
							SkeletonKeyframe frame = new SkeletonKeyframe();

							frame.timeStamp = animation.readFloat();
							frame.parentIndex = animation.readInt();
							frame.position.x = animation.readFloat();
							frame.position.y = animation.readFloat();
							frame.position.z = animation.readFloat();
							frame.rotation.w = animation.readFloat();
							frame.rotation.x = animation.readFloat();
							frame.rotation.y = animation.readFloat();
							frame.rotation.z = animation.readFloat();
							frame.scale.x = animation.readFloat();
							frame.scale.y = animation.readFloat();
							frame.scale.z = animation.readFloat();
							perJointKeyFrames[j][k] = frame;
						}
					}
					
					skeleton.animations.put(name, new SkeletonAnimation(name, totalDuration, perJointKeyFrames));
				}
			}
			skeleton.buildFromHierarchy();

			SkeletonModel model = new SkeletonModel(skeleton, meshes);
			model.setMaterial(new Material("default"));
			return model;
		} catch (IOException e) {
			throw new GdxRuntimeException("Couldn't load skeleton model from '" + handle.name() + "', " + e.getMessage(), e);
		} finally {
			if (in != null) try {
				in.close();
			} catch (IOException e) {
			}
		}
	} ##FSTMerge## public static SkeletonModel loadSkeletonModel (FileHandle handle) {
		Chunk root = null;
		InputStream in = null;
		try {
			in = handle.read();
			root = ChunkReader.readChunks(in);

			// check root tag
			if (root.getId() != G3dConstants.G3D_ROOT) throw new GdxRuntimeException("Invalid root tag id: " + root.getId());

			// check version
			Chunk version = root.getChild(G3dConstants.VERSION_INFO);
			if (version == null) throw new GdxRuntimeException("No version chunk found");
			int major = version.readByte();
			int minor = version.readByte();
			if (major != 0 || minor != 1)
				throw new GdxRuntimeException("Invalid version, required 0.1, got " + major + "." + minor);

			// read skeleton model
			Chunk skeletonModel = root.getChild(G3dConstants.SKELETON_MODEL);
			if (skeletonModel == null) throw new GdxRuntimeException("No skeletonModel chunk found");
			int numSubMeshes = skeletonModel.readInt();

			// read submeshes
			SkeletonSubMesh[] meshes = new SkeletonSubMesh[numSubMeshes];
			Chunk[] meshChunks = skeletonModel.getChildren(G3dConstants.SKELETON_SUBMESH);
			if (meshChunks.length != numSubMeshes)
				throw new GdxRuntimeException("Number of submeshes not equal to number specified in still model chunk, expected "
					+ numSubMeshes + ", got " + meshChunks.length);
			for (int i = 0; i < numSubMeshes; i++) {
				Chunk subMeshChunk = meshChunks[i];
				
				// read attributes
				Chunk attributes = subMeshChunk.getChild(G3dConstants.VERTEX_ATTRIBUTES);
				if (attributes == null) throw new GdxRuntimeException("No vertex attribute chunk given");
				int numAttributes = attributes.readInt();
				Chunk[] attributeChunks = attributes.getChildren(G3dConstants.VERTEX_ATTRIBUTE);
				if (attributeChunks.length != numAttributes)
					new GdxRuntimeException("Number of attributes not equal to number specified in attributes chunk, expected "
						+ numAttributes + ", got " + attributeChunks.length);
				VertexAttribute[] vertAttribs = new VertexAttribute[numAttributes];
				for (int j = 0; j < numAttributes; j++) {
					vertAttribs[j] = new VertexAttribute(attributeChunks[j].readInt(), attributeChunks[j].readInt(),
						attributeChunks[j].readString());
				}

				// read static components, sort of like a bind pose mesh
				Chunk vertices = subMeshChunk.getChild(G3dConstants.VERTEX_LIST);
				int numVertices = vertices.readInt();
				float[] meshVertices = vertices.readFloats();

				// read indices
				Chunk indices = subMeshChunk.getChild(G3dConstants.INDEX_LIST);
				int numIndices = indices.readInt();
				short[] meshIndices = indices.readShorts();
				
				//read bone weight
				Chunk boneWeights = subMeshChunk.getChild(G3dConstants.BONE_WEIGHTS);
				int numBonesWeights = boneWeights.readInt();
				Chunk[] boneWeightChunks = boneWeights.getChildren(G3dConstants.BONE_WEIGHT);
				if (attributeChunks.length != numAttributes)
					new GdxRuntimeException("Number of bone weights not equal to number specified in bone weights chunk, expected "
						+ numBonesWeights + ", got " + boneWeightChunks.length);
				float[][] meshBoneWeights = new float[numBonesWeights][];
				for(int j=0;j<numBonesWeights;j++) {
					int count = boneWeightChunks[j].readInt();
					meshBoneWeights[j] = boneWeightChunks[j].readFloats();
				}

				//read bone assignment
				Chunk boneAssignments = subMeshChunk.getChild(G3dConstants.BONE_ASSIGNMENTS);
				int numBoneAssignments = boneAssignments.readInt();
				Chunk[] boneAssignmentChunks = boneAssignments.getChildren(G3dConstants.BONE_ASSIGNMENT);
				if (boneAssignmentChunks.length != numBoneAssignments)
					new GdxRuntimeException("Number of bone assignment not equal to number specified in bone assignment chunk, expected "
						+ numBoneAssignments + ", got " + boneAssignmentChunks.length);
				int[][] meshBoneAssignments = new int[numBoneAssignments][];
				for(int j=0;j<numBoneAssignments;j++) {
					int count = boneAssignmentChunks[j].readInt();
					meshBoneAssignments[j] = boneAssignmentChunks[j].readInts();
				}
				
				SkeletonSubMesh subMesh = new SkeletonSubMesh(subMeshChunk.readString(), new Mesh(false, numVertices, numIndices, vertAttribs),
					subMeshChunk.readInt());
				
				subMesh.indices = meshIndices;
				subMesh.boneAssignments = meshBoneAssignments;
				subMesh.boneWeights = meshBoneWeights;
				subMesh.vertices = meshVertices;
				
				subMesh.mesh.setVertices(subMesh.vertices);
				subMesh.mesh.setIndices(subMesh.indices);
				subMesh.skinnedVertices = new float[subMesh.vertices.length];
				System.arraycopy(subMesh.vertices, 0, subMesh.skinnedVertices, 0, subMesh.vertices.length);
				meshes[i] = subMesh;
			}
			
			//read Skeleton hierarchy
			Skeleton skeleton = new Skeleton();
			Chunk skeletonChunk = skeletonModel.getChild(G3dConstants.SKELETON);
			{
				// read Skeleton hierarchy
				Chunk hierarchy = skeletonChunk.getChild(G3dConstants.SKELETON_HIERARCHY);
				int numHierarchyJoints = hierarchy.readInt();
				for(int i=0;i<numHierarchyJoints;i++) {
					skeleton.hierarchy.add(readSkeletonJoint(hierarchy));
				}
				
				
				// read Skeleton animations
				Chunk animations = skeletonChunk.getChild(G3dConstants.SKELETON_ANIMATIONS);
				int numAnimations = animations.readInt();
				Chunk[] animationChunks = animations.getChildren(G3dConstants.SKELETON_ANIMATION);
				if (animationChunks.length != numAnimations)
					new GdxRuntimeException("Number of animations not equal to number specified in animations chunk, expected "
						+ numAnimations + ", got " + animationChunks.length);
				for(int i=0;i<numAnimations; i++) {
					Chunk animation = animationChunks[i];

					String name = animation.readString();
					float totalDuration = animation.readFloat();
					
					int numJoints = animation.readInt();
					SkeletonKeyframe perJointKeyFrames[][] = new SkeletonKeyframe[numJoints][];
					for(int j=0;j<numJoints;j++){
						int numFrames = animation.readInt();
						perJointKeyFrames[j] = new SkeletonKeyframe[numFrames];
						
						for(int k=0;k<numFrames;k++){
							SkeletonKeyframe frame = new SkeletonKeyframe();

							frame.timeStamp = animation.readFloat();
							frame.parentIndex = animation.readInt();
							frame.position.x = animation.readFloat();
							frame.position.y = animation.readFloat();
							frame.position.z = animation.readFloat();
							frame.rotation.w = animation.readFloat();
							frame.rotation.x = animation.readFloat();
							frame.rotation.y = animation.readFloat();
							frame.rotation.z = animation.readFloat();
							frame.scale.x = animation.readFloat();
							frame.scale.y = animation.readFloat();
							frame.scale.z = animation.readFloat();
							perJointKeyFrames[j][k] = frame;
						}
					}
					
					skeleton.animations.put(name, new SkeletonAnimation(name, totalDuration, perJointKeyFrames));
				}
			}
			skeleton.buildFromHierarchy();

			SkeletonModel model = new SkeletonModel(skeleton, meshes);
			model.setMaterial(new Material("default"));
			return model;
		} catch (IOException e) {
			throw new GdxRuntimeException("Couldn't load skeleton model from '" + handle.name() + "', " + e.getMessage(), e);
		} finally {
			if (in != null) try {
				in.close();
			} catch (IOException e) {
			}
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static SkeletonJoint readSkeletonJoint(Chunk jointChunk) {
		SkeletonJoint joint = new SkeletonJoint();
		
		joint.name = jointChunk.readString();
		joint.position.x = jointChunk.readFloat();
		joint.position.y = jointChunk.readFloat();
		joint.position.z = jointChunk.readFloat();
		joint.rotation.w = jointChunk.readFloat();
		joint.rotation.x = jointChunk.readFloat();
		joint.rotation.y = jointChunk.readFloat();
		joint.rotation.z = jointChunk.readFloat();
		joint.scale.x = jointChunk.readFloat();
		joint.scale.y = jointChunk.readFloat();
		joint.scale.z = jointChunk.readFloat();
		
		int count = jointChunk.readInt();
		for(int i=0;i<count;i++) {
			SkeletonJoint child = readSkeletonJoint(jointChunk);
			child.parent = joint;
			joint.children.add(child);
		}
		
		return joint;
	} ##FSTMerge## private static SkeletonJoint readSkeletonJoint(Chunk jointChunk) {
		SkeletonJoint joint = new SkeletonJoint();
		
		joint.name = jointChunk.readString();
		joint.position.x = jointChunk.readFloat();
		joint.position.y = jointChunk.readFloat();
		joint.position.z = jointChunk.readFloat();
		joint.rotation.w = jointChunk.readFloat();
		joint.rotation.x = jointChunk.readFloat();
		joint.rotation.y = jointChunk.readFloat();
		joint.rotation.z = jointChunk.readFloat();
		joint.scale.x = jointChunk.readFloat();
		joint.scale.y = jointChunk.readFloat();
		joint.scale.z = jointChunk.readFloat();
		
		int count = jointChunk.readInt();
		for(int i=0;i<count;i++) {
			SkeletonJoint child = readSkeletonJoint(jointChunk);
			child.parent = joint;
			joint.children.add(child);
		}
		
		return joint;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dLoader.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static ##FSTMerge## public static
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dLoader.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements StillModelLoader ##FSTMerge## implements StillModelLoader
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
		public StillModel load (FileHandle handle, ModelLoaderHints hints) {
			return G3dLoader.loadStillModel(handle);
		} ##FSTMerge## @Override
		public StillModel load (FileHandle handle, ModelLoaderHints hints) {
			return G3dLoader.loadStillModel(handle);
		}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dLoader.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static ##FSTMerge## public static
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dLoader.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements KeyframedModelLoader ##FSTMerge## implements KeyframedModelLoader
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
		public KeyframedModel load (FileHandle handle, ModelLoaderHints hints) {
			return G3dLoader.loadKeyframedModel(handle);
		} ##FSTMerge## @Override
		public KeyframedModel load (FileHandle handle, ModelLoaderHints hints) {
			return G3dLoader.loadKeyframedModel(handle);
		}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dLoader.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static ##FSTMerge## public static
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dLoader.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements SkeletonModelLoader ##FSTMerge## implements SkeletonModelLoader
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
		public SkeletonModel load (FileHandle handle, ModelLoaderHints hints) {
			return G3dLoader.loadSkeletonModel(handle);
		} ##FSTMerge## @Override
		public SkeletonModel load (FileHandle handle, ModelLoaderHints hints) {
			return G3dLoader.loadSkeletonModel(handle);
		}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dLoader.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final byte MAJOR_VERSION = 0; ##FSTMerge## public static final byte MAJOR_VERSION = 0;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final byte MINOR_VERSION = 1; ##FSTMerge## public static final byte MINOR_VERSION = 1;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final int G3D_ROOT = 0x4733441A; ##FSTMerge## public static final int G3D_ROOT = 0x4733441A;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final int VERSION_INFO = 0x0001; ##FSTMerge## public static final int VERSION_INFO = 0x0001;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final int STILL_MODEL = 0x1000; ##FSTMerge## public static final int STILL_MODEL = 0x1000;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final int STILL_SUBMESH = 0x1100; ##FSTMerge## public static final int STILL_SUBMESH = 0x1100;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final int KEYFRAMED_MODEL = 0x2000; ##FSTMerge## public static final int KEYFRAMED_MODEL = 0x2000;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final int KEYFRAMED_SUBMESH = 0x2200; ##FSTMerge## public static final int KEYFRAMED_SUBMESH = 0x2200;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final int KEYFRAMED_ANIMATION = 0x2300; ##FSTMerge## public static final int KEYFRAMED_ANIMATION = 0x2300;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final int KEYFRAMED_FRAME = 0x2400; ##FSTMerge## public static final int KEYFRAMED_FRAME = 0x2400;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final int SKELETON_MODEL = 0x4000; ##FSTMerge## public static final int SKELETON_MODEL = 0x4000;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final int SKELETON_SUBMESH = 0x4200; ##FSTMerge## public static final int SKELETON_SUBMESH = 0x4200;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final int SKELETON_ANIMATIONS = 0x4300; ##FSTMerge## public static final int SKELETON_ANIMATIONS = 0x4300;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final int SKELETON_ANIMATION = 0x4400; ##FSTMerge## public static final int SKELETON_ANIMATION = 0x4400;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final int SKELETON = 0x4500; ##FSTMerge## public static final int SKELETON = 0x4500;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final int SKELETON_HIERARCHY = 0x4600; ##FSTMerge## public static final int SKELETON_HIERARCHY = 0x4600;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final int SKELETON_JOINT = 0x4700; ##FSTMerge## public static final int SKELETON_JOINT = 0x4700;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final int SKELETON_KEYFRAME = 0x4800; ##FSTMerge## public static final int SKELETON_KEYFRAME = 0x4800;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final int VERTEX_LIST = 0x1110; ##FSTMerge## public static final int VERTEX_LIST = 0x1110;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final int INDEX_LIST = 0x1111; ##FSTMerge## public static final int INDEX_LIST = 0x1111;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final int VERTEX_ATTRIBUTES = 0x1120; ##FSTMerge## public static final int VERTEX_ATTRIBUTES = 0x1120;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final int VERTEX_ATTRIBUTE = 0x1121; ##FSTMerge## public static final int VERTEX_ATTRIBUTE = 0x1121;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final int BONE_WEIGHTS = 0x1130; ##FSTMerge## public static final int BONE_WEIGHTS = 0x1130;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final int BONE_WEIGHT = 0x1131; ##FSTMerge## public static final int BONE_WEIGHT = 0x1131;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final int BONE_ASSIGNMENTS = 0x1140; ##FSTMerge## public static final int BONE_ASSIGNMENTS = 0x1140;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final int BONE_ASSIGNMENT = 0x1141; ##FSTMerge## public static final int BONE_ASSIGNMENT = 0x1141;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/CountingDataInputStream.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements DataInput ##FSTMerge## implements DataInput
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/CountingDataInputStream.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## int readBytes = 0; ##FSTMerge## int readBytes = 0;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/CountingDataInputStream.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## DataInputStream in; ##FSTMerge## DataInputStream in;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/CountingDataInputStream.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public CountingDataInputStream (InputStream in) {
		this.in = new DataInputStream(in);
	} ##FSTMerge## public CountingDataInputStream (InputStream in) {
		this.in = new DataInputStream(in);
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/CountingDataInputStream.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int getReadBytes () {
		return readBytes;
	} ##FSTMerge## public int getReadBytes () {
		return readBytes;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/CountingDataInputStream.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void readFully (byte[] b) throws IOException {
		readBytes += b.length;
		in.readFully(b);
	} ##FSTMerge## @Override
	public void readFully (byte[] b) throws IOException {
		readBytes += b.length;
		in.readFully(b);
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/CountingDataInputStream.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void readFully (byte[] b, int off, int len) throws IOException {
		readBytes += len;
		in.readFully(b, off, len);
	} ##FSTMerge## @Override
	public void readFully (byte[] b, int off, int len) throws IOException {
		readBytes += len;
		in.readFully(b, off, len);
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/CountingDataInputStream.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public int skipBytes (int n) throws IOException {
		int skipped = in.skipBytes(n);
		readBytes += skipped;
		return skipped;
	} ##FSTMerge## @Override
	public int skipBytes (int n) throws IOException {
		int skipped = in.skipBytes(n);
		readBytes += skipped;
		return skipped;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/CountingDataInputStream.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public boolean readBoolean () throws IOException {
		readBytes += 1;
		return in.readBoolean();
	} ##FSTMerge## @Override
	public boolean readBoolean () throws IOException {
		readBytes += 1;
		return in.readBoolean();
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/CountingDataInputStream.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public byte readByte () throws IOException {
		readBytes += 1;
		return in.readByte();
	} ##FSTMerge## @Override
	public byte readByte () throws IOException {
		readBytes += 1;
		return in.readByte();
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/CountingDataInputStream.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public int readUnsignedByte () throws IOException {
		readBytes += 1;
		return in.readUnsignedByte();
	} ##FSTMerge## @Override
	public int readUnsignedByte () throws IOException {
		readBytes += 1;
		return in.readUnsignedByte();
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/CountingDataInputStream.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public short readShort () throws IOException {
		readBytes += 2;
		return in.readShort();
	} ##FSTMerge## @Override
	public short readShort () throws IOException {
		readBytes += 2;
		return in.readShort();
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/CountingDataInputStream.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public int readUnsignedShort () throws IOException {
		readBytes += 2;
		return in.readUnsignedShort();
	} ##FSTMerge## @Override
	public int readUnsignedShort () throws IOException {
		readBytes += 2;
		return in.readUnsignedShort();
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/CountingDataInputStream.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public char readChar () throws IOException {
		readBytes += 2;
		return in.readChar();
	} ##FSTMerge## @Override
	public char readChar () throws IOException {
		readBytes += 2;
		return in.readChar();
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/CountingDataInputStream.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public int readInt () throws IOException {
		readBytes += 4;
		return in.readInt();
	} ##FSTMerge## @Override
	public int readInt () throws IOException {
		readBytes += 4;
		return in.readInt();
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/CountingDataInputStream.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public long readLong () throws IOException {
		readBytes += 8;
		return in.readLong();
	} ##FSTMerge## @Override
	public long readLong () throws IOException {
		readBytes += 8;
		return in.readLong();
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/CountingDataInputStream.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public float readFloat () throws IOException {
		readBytes += 4;
		return in.readFloat();
	} ##FSTMerge## @Override
	public float readFloat () throws IOException {
		readBytes += 4;
		return in.readFloat();
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/CountingDataInputStream.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public double readDouble () throws IOException {
		readBytes += 8;
		return in.readDouble();
	} ##FSTMerge## @Override
	public double readDouble () throws IOException {
		readBytes += 8;
		return in.readDouble();
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/CountingDataInputStream.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public String readLine () throws IOException {
		throw new UnsupportedOperationException("Not implemented");
	} ##FSTMerge## @Override
	public String readLine () throws IOException {
		throw new UnsupportedOperationException("Not implemented");
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/CountingDataInputStream.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public String readUTF () throws IOException {
		throw new UnsupportedOperationException("Not implemented");
	} ##FSTMerge## @Override
	public String readUTF () throws IOException {
		throw new UnsupportedOperationException("Not implemented");
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/CountingDataInputStream.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final int id; ##FSTMerge## final int id;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final Chunk parent; ##FSTMerge## final Chunk parent;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final Array<Chunk> children = new Array<Chunk>(); ##FSTMerge## final Array<Chunk> children = new Array<Chunk>();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final ByteArrayOutputStream payload = new ByteArrayOutputStream(); ##FSTMerge## final ByteArrayOutputStream payload = new ByteArrayOutputStream();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final DataOutputStream out = new DataOutputStream(payload); ##FSTMerge## final DataOutputStream out = new DataOutputStream(payload);
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Chunk (int id) {
			this.id = id;
			this.parent = null;
		} ##FSTMerge## public Chunk (int id) {
			this.id = id;
			this.parent = null;
		}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Chunk (int id, Chunk parent) {
			this.id = id;
			this.parent = parent;
		} ##FSTMerge## public Chunk (int id, Chunk parent) {
			this.id = id;
			this.parent = parent;
		}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final Chunk root; ##FSTMerge## final Chunk root;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## Chunk currChunk; ##FSTMerge## Chunk currChunk;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ChunkWriter () {
		root = new Chunk(G3D_ROOT);
		currChunk = root;
	} ##FSTMerge## public ChunkWriter () {
		root = new Chunk(G3D_ROOT);
		currChunk = root;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void newChunk (int id) {
		Chunk chunk = new Chunk(id, currChunk);
		currChunk.children.add(chunk);
		currChunk = chunk;
	} ##FSTMerge## public void newChunk (int id) {
		Chunk chunk = new Chunk(id, currChunk);
		currChunk.children.add(chunk);
		currChunk = chunk;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void endChunk () {
		currChunk = currChunk.parent;
	} ##FSTMerge## public void endChunk () {
		currChunk = currChunk.parent;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void writeByte (int v) {
		try {
			currChunk.out.writeByte(v);
		} catch (IOException e) {
		}
		;
	} ##FSTMerge## public void writeByte (int v) {
		try {
			currChunk.out.writeByte(v);
		} catch (IOException e) {
		}
		;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void writeShort (short v) {
		try {
			currChunk.out.writeShort(v);
		} catch (IOException e) {
		}
		;
	} ##FSTMerge## public void writeShort (short v) {
		try {
			currChunk.out.writeShort(v);
		} catch (IOException e) {
		}
		;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void writeInt (int v) {
		try {
			currChunk.out.writeInt(v);
		} catch (IOException e) {
		}
		;
	} ##FSTMerge## public void writeInt (int v) {
		try {
			currChunk.out.writeInt(v);
		} catch (IOException e) {
		}
		;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void writeLong (long v) {
		try {
			currChunk.out.writeLong(v);
		} catch (IOException e) {
		}
		;
	} ##FSTMerge## public void writeLong (long v) {
		try {
			currChunk.out.writeLong(v);
		} catch (IOException e) {
		}
		;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void writeFloat (float v) {
		try {
			currChunk.out.writeFloat(v);
		} catch (IOException e) {
		}
		;
	} ##FSTMerge## public void writeFloat (float v) {
		try {
			currChunk.out.writeFloat(v);
		} catch (IOException e) {
		}
		;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void writeDouble (double v) {
		try {
			currChunk.out.writeDouble(v);
		} catch (IOException e) {
		}
		;
	} ##FSTMerge## public void writeDouble (double v) {
		try {
			currChunk.out.writeDouble(v);
		} catch (IOException e) {
		}
		;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void writeString (String v) {
		try {
			byte[] bytes = v.getBytes("UTF-8");
			currChunk.out.writeInt(bytes.length);
			currChunk.out.write(bytes);
		} catch (IOException e) {
		}
	} ##FSTMerge## public void writeString (String v) {
		try {
			byte[] bytes = v.getBytes("UTF-8");
			currChunk.out.writeInt(bytes.length);
			currChunk.out.write(bytes);
		} catch (IOException e) {
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void writeToStream (OutputStream out) throws IOException {
		writeToStream(root, new DataOutputStream(out));
	} ##FSTMerge## public void writeToStream (OutputStream out) throws IOException {
		writeToStream(root, new DataOutputStream(out));
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void writeToStream (Chunk chunk, DataOutputStream out) throws IOException {
		// write id, payload size in bytes and number of children
		out.writeInt(chunk.id);
		out.writeInt(chunk.payload.size());
		out.writeInt(chunk.children.size);

		// write payload
		out.write(chunk.payload.toByteArray());

		// recursively write children
		for (int i = 0; i < chunk.children.size; i++) {
			Chunk child = chunk.children.get(i);
			writeToStream(child, out);
		}
	} ##FSTMerge## private void writeToStream (Chunk chunk, DataOutputStream out) throws IOException {
		// write id, payload size in bytes and number of children
		out.writeInt(chunk.id);
		out.writeInt(chunk.payload.size());
		out.writeInt(chunk.children.size);

		// write payload
		out.write(chunk.payload.toByteArray());

		// recursively write children
		for (int i = 0; i < chunk.children.size; i++) {
			Chunk child = chunk.children.get(i);
			writeToStream(child, out);
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void writeBytes (byte[] v) {
		try {
			currChunk.out.writeInt(v.length);
			for (int i = 0; i < v.length; i++) {
				currChunk.out.writeByte(v[i]);
			}
		} catch (IOException e) {
		}
	} ##FSTMerge## public void writeBytes (byte[] v) {
		try {
			currChunk.out.writeInt(v.length);
			for (int i = 0; i < v.length; i++) {
				currChunk.out.writeByte(v[i]);
			}
		} catch (IOException e) {
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void writeShorts (short[] v) {
		try {
			currChunk.out.writeInt(v.length);
			for (int i = 0; i < v.length; i++) {
				currChunk.out.writeShort(v[i]);
			}
		} catch (IOException e) {
		}
	} ##FSTMerge## public void writeShorts (short[] v) {
		try {
			currChunk.out.writeInt(v.length);
			for (int i = 0; i < v.length; i++) {
				currChunk.out.writeShort(v[i]);
			}
		} catch (IOException e) {
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void writeInts (int[] v) {
		try {
			currChunk.out.writeInt(v.length);
			for (int i = 0; i < v.length; i++) {
				currChunk.out.writeInt(v[i]);
			}
		} catch (IOException e) {
		}
	} ##FSTMerge## public void writeInts (int[] v) {
		try {
			currChunk.out.writeInt(v.length);
			for (int i = 0; i < v.length; i++) {
				currChunk.out.writeInt(v[i]);
			}
		} catch (IOException e) {
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void writeLongs (long[] v) {
		try {
			currChunk.out.writeInt(v.length);
			for (int i = 0; i < v.length; i++) {
				currChunk.out.writeLong(v[i]);
			}
		} catch (IOException e) {
		}
	} ##FSTMerge## public void writeLongs (long[] v) {
		try {
			currChunk.out.writeInt(v.length);
			for (int i = 0; i < v.length; i++) {
				currChunk.out.writeLong(v[i]);
			}
		} catch (IOException e) {
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void writeFloats (float[] v) {
		try {
			currChunk.out.writeInt(v.length);
			for (int i = 0; i < v.length; i++) {
				currChunk.out.writeFloat(v[i]);
			}
		} catch (IOException e) {
		}
	} ##FSTMerge## public void writeFloats (float[] v) {
		try {
			currChunk.out.writeInt(v.length);
			for (int i = 0; i < v.length; i++) {
				currChunk.out.writeFloat(v[i]);
			}
		} catch (IOException e) {
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void writeDoubles (double[] v) {
		try {
			currChunk.out.writeInt(v.length);
			for (int i = 0; i < v.length; i++) {
				currChunk.out.writeDouble(v[i]);
			}
		} catch (IOException e) {
		}
	} ##FSTMerge## public void writeDoubles (double[] v) {
		try {
			currChunk.out.writeInt(v.length);
			for (int i = 0; i < v.length; i++) {
				currChunk.out.writeDouble(v[i]);
			}
		} catch (IOException e) {
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static ##FSTMerge## public static
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## int id; ##FSTMerge## int id;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## Chunk parent; ##FSTMerge## Chunk parent;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## Array<Chunk> children = new Array<Chunk>(); ##FSTMerge## Array<Chunk> children = new Array<Chunk>();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## ByteArrayInputStream payload; ##FSTMerge## ByteArrayInputStream payload;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## byte[] payloadBytes; ##FSTMerge## byte[] payloadBytes;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## int offset = 0; ##FSTMerge## int offset = 0;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## CountingDataInputStream in; ##FSTMerge## CountingDataInputStream in;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## protected Chunk (int id, Chunk parent, byte[] bytes, int offset, int size) throws IOException {
			this.id = id;
			this.parent = parent;
			this.payload = new ByteArrayInputStream(bytes, offset, size);
			this.payloadBytes = bytes;
			this.offset = offset;
			this.in = new CountingDataInputStream(payload);
		} ##FSTMerge## protected Chunk (int id, Chunk parent, byte[] bytes, int offset, int size) throws IOException {
			this.id = id;
			this.parent = parent;
			this.payload = new ByteArrayInputStream(bytes, offset, size);
			this.payloadBytes = bytes;
			this.offset = offset;
			this.in = new CountingDataInputStream(payload);
		}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int getId () {
			return id;
		} ##FSTMerge## public int getId () {
			return id;
		}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Chunk getParent () {
			return parent;
		} ##FSTMerge## public Chunk getParent () {
			return parent;
		}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Array<Chunk> getChildren () {
			return children;
		} ##FSTMerge## public Array<Chunk> getChildren () {
			return children;
		}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int readByte () {
			try {
				return in.readByte();
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		} ##FSTMerge## public int readByte () {
			try {
				return in.readByte();
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public short readShort () {
			try {
				return in.readShort();
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		} ##FSTMerge## public short readShort () {
			try {
				return in.readShort();
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int readInt () {
			try {
				return in.readInt();
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		} ##FSTMerge## public int readInt () {
			try {
				return in.readInt();
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public long readLong () {
			try {
				return in.readLong();
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		} ##FSTMerge## public long readLong () {
			try {
				return in.readLong();
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public float readFloat () {
			try {
				return in.readFloat();
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		} ##FSTMerge## public float readFloat () {
			try {
				return in.readFloat();
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public double readDouble () {
			try {
				return in.readDouble();
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		} ##FSTMerge## public double readDouble () {
			try {
				return in.readDouble();
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public byte[] readBytes () {
			try {
				int len = in.readInt();
				byte[] v = new byte[len];
				for (int i = 0; i < len; i++) {
					v[i] = in.readByte();
				}
				return v;
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		} ##FSTMerge## public byte[] readBytes () {
			try {
				int len = in.readInt();
				byte[] v = new byte[len];
				for (int i = 0; i < len; i++) {
					v[i] = in.readByte();
				}
				return v;
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public short[] readShorts () {
			try {
				int len = in.readInt();
				short[] v = new short[len];
				for (int i = 0; i < len; i++) {
					v[i] = in.readShort();
				}
				return v;
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		} ##FSTMerge## public short[] readShorts () {
			try {
				int len = in.readInt();
				short[] v = new short[len];
				for (int i = 0; i < len; i++) {
					v[i] = in.readShort();
				}
				return v;
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int[] readInts () {
			try {
				int len = in.readInt();
				int[] v = new int[len];
				for (int i = 0; i < len; i++) {
					v[i] = in.readInt();
				}
				return v;
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		} ##FSTMerge## public int[] readInts () {
			try {
				int len = in.readInt();
				int[] v = new int[len];
				for (int i = 0; i < len; i++) {
					v[i] = in.readInt();
				}
				return v;
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public long[] readLongs () {
			try {
				int len = in.readInt();
				long[] v = new long[len];
				for (int i = 0; i < len; i++) {
					v[i] = in.readLong();
				}
				return v;
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		} ##FSTMerge## public long[] readLongs () {
			try {
				int len = in.readInt();
				long[] v = new long[len];
				for (int i = 0; i < len; i++) {
					v[i] = in.readLong();
				}
				return v;
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public float[] readFloats () {
			try {
				int len = in.readInt();
				float[] v = new float[len];
				for (int i = 0; i < len; i++) {
					v[i] = in.readFloat();
				}
				return v;
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		} ##FSTMerge## public float[] readFloats () {
			try {
				int len = in.readInt();
				float[] v = new float[len];
				for (int i = 0; i < len; i++) {
					v[i] = in.readFloat();
				}
				return v;
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public double[] readDoubles () {
			try {
				int len = in.readInt();
				double[] v = new double[len];
				for (int i = 0; i < len; i++) {
					v[i] = in.readDouble();
				}
				return v;
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		} ##FSTMerge## public double[] readDoubles () {
			try {
				int len = in.readInt();
				double[] v = new double[len];
				for (int i = 0; i < len; i++) {
					v[i] = in.readDouble();
				}
				return v;
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public String readString () {
			try {
				int len = in.readInt();
				byte[] bytes = new byte[len];
				in.readFully(bytes);
				return new String(bytes, "UTF-8");
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		} ##FSTMerge## public String readString () {
			try {
				int len = in.readInt();
				byte[] bytes = new byte[len];
				in.readFully(bytes);
				return new String(bytes, "UTF-8");
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Chunk getChild (int id) {
			for (int i = 0; i < children.size; i++) {
				Chunk child = children.get(i);
				if (child.getId() == id) return child;
			}
			return null;
		} ##FSTMerge## public Chunk getChild (int id) {
			for (int i = 0; i < children.size; i++) {
				Chunk child = children.get(i);
				if (child.getId() == id) return child;
			}
			return null;
		}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Chunk[] getChildren (int id) {
			Array<Chunk> meshes = new Array<Chunk>(true, 16, Chunk.class);
			for (int i = 0; i < children.size; i++) {
				Chunk child = children.get(i);
				if (child.getId() == id) meshes.add(child);
			}
			meshes.shrink();
			return meshes.items;
		} ##FSTMerge## public Chunk[] getChildren (int id) {
			Array<Chunk> meshes = new Array<Chunk>(true, 16, Chunk.class);
			for (int i = 0; i < children.size; i++) {
				Chunk child = children.get(i);
				if (child.getId() == id) meshes.add(child);
			}
			meshes.shrink();
			return meshes.items;
		}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static Chunk readChunks (InputStream in) throws IOException {
		return loadChunks(in, 0);
	} ##FSTMerge## public static Chunk readChunks (InputStream in) throws IOException {
		return loadChunks(in, 0);
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static Chunk loadChunks (InputStream in, int fileSize) throws IOException {
		byte[] bytes = readStream(in, fileSize);
		CountingDataInputStream din = new CountingDataInputStream(new ByteArrayInputStream(bytes));
		return loadChunk(din, bytes);
	} ##FSTMerge## private static Chunk loadChunks (InputStream in, int fileSize) throws IOException {
		byte[] bytes = readStream(in, fileSize);
		CountingDataInputStream din = new CountingDataInputStream(new ByteArrayInputStream(bytes));
		return loadChunk(din, bytes);
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static Chunk loadChunk (CountingDataInputStream din, byte[] bytes) throws IOException {
		int id = din.readInt();
		int payloadSize = din.readInt();
		int numChildren = din.readInt();
		int offset = din.getReadBytes();
		din.skipBytes(payloadSize);
		Chunk chunk = new Chunk(id, null, bytes, offset, payloadSize);
		for (int i = 0; i < numChildren; i++) {
			Chunk child = loadChunk(din, bytes);
			child.parent = chunk;
			chunk.children.add(child);
		}
		return chunk;
	} ##FSTMerge## private static Chunk loadChunk (CountingDataInputStream din, byte[] bytes) throws IOException {
		int id = din.readInt();
		int payloadSize = din.readInt();
		int numChildren = din.readInt();
		int offset = din.getReadBytes();
		din.skipBytes(payloadSize);
		Chunk chunk = new Chunk(id, null, bytes, offset, payloadSize);
		for (int i = 0; i < numChildren; i++) {
			Chunk child = loadChunk(din, bytes);
			child.parent = chunk;
			chunk.children.add(child);
		}
		return chunk;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static byte[] readStream (InputStream in, int size) throws IOException {
		if (size == 0) {
			ByteArrayOutputStream bytes = new ByteArrayOutputStream();
			byte[] buffer = new byte[10 * 1024];
			int readBytes = 0;
			while ((readBytes = in.read(buffer)) != -1) {
				bytes.write(buffer, 0, readBytes);
			}
			return bytes.toByteArray();
		} else {
			byte[] bytes = new byte[size];
			DataInputStream din = new DataInputStream(in);
			din.readFully(bytes);
			return bytes;
		}
	} ##FSTMerge## private static byte[] readStream (InputStream in, int size) throws IOException {
		if (size == 0) {
			ByteArrayOutputStream bytes = new ByteArrayOutputStream();
			byte[] buffer = new byte[10 * 1024];
			int readBytes = 0;
			while ((readBytes = in.read(buffer)) != -1) {
				bytes.write(buffer, 0, readBytes);
			}
			return bytes.toByteArray();
		} else {
			byte[] bytes = new byte[size];
			DataInputStream din = new DataInputStream(in);
			din.readFully(bytes);
			return bytes;
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static void printChunks (Chunk chunk) {
		printChunks(chunk, 0);
	} ##FSTMerge## public static void printChunks (Chunk chunk) {
		printChunks(chunk, 0);
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static void printChunks (Chunk chunk, int level) {
		String id = null;
		String payload = null;
		switch (chunk.getId()) {
		case G3D_ROOT:
			id = "G3D_ROOT";
			break;
		case VERSION_INFO:
			id = "VERSION_INFO";
			int major = chunk.readByte();
			int minor = chunk.readByte();
			payload = rep("   ", level + 1) + "major: " + major + ", minor: " + minor;
			break;
		case STILL_MODEL:
			id = "STILL_MODEL";
			int subMeshes = chunk.readInt();
			payload = rep("   ", level + 1) + "#submeshes: " + subMeshes;
			break;
		case STILL_SUBMESH:
			id = "STILL_SUBMESH";
			payload = rep("   ", level + 1) + "name: " + chunk.readString() + ", primitive type: " + chunk.readInt();
			break;
		case VERTEX_ATTRIBUTE:
			id = "VERTEX_ATTRIBUTE";
			int usage = chunk.readInt();
			int components = chunk.readInt();
			String name = chunk.readString();
			payload = rep("   ", level + 1) + "usage: " + usage + ", components: " + components + ", name: " + name;
			break;
		case VERTEX_ATTRIBUTES:
			id = "VERTEX_ATTRIBUTES";
			int numAttributes = chunk.readInt();
			payload = rep("   ", level + 1) + "#attributes: " + numAttributes;
			break;
		case VERTEX_LIST:
			id = "VERTEX_LIST";
			int numVertices = chunk.readInt();
			float[] vertices = chunk.readFloats();
			payload = rep("   ", level + 1) + "#vertices: " + numVertices + ": " + Arrays.toString(vertices).substring(0, 400);
			break;
		case INDEX_LIST:
			id = "INDEX_LIST";
			int numIndices = chunk.readInt();
			short[] indices = chunk.readShorts();
			payload = rep("   ", level + 1) + "#indices: " + numIndices + ": " + Arrays.toString(indices).substring(0, 400);
			break;
		default:
			id = "unknown [" + id + "]";
			payload = rep("   ", level + 1) + "unknown";
			break;
		}

		System.out.println(rep("   ", level) + id + " {");
		if (payload != null) System.out.println(payload);
		for (Chunk child : chunk.getChildren()) {
			printChunks(child, level + 1);
		}
		System.out.println(rep("   ", level) + "}");
	} ##FSTMerge## private static void printChunks (Chunk chunk, int level) {
		String id = null;
		String payload = null;
		switch (chunk.getId()) {
		case G3D_ROOT:
			id = "G3D_ROOT";
			break;
		case VERSION_INFO:
			id = "VERSION_INFO";
			int major = chunk.readByte();
			int minor = chunk.readByte();
			payload = rep("   ", level + 1) + "major: " + major + ", minor: " + minor;
			break;
		case STILL_MODEL:
			id = "STILL_MODEL";
			int subMeshes = chunk.readInt();
			payload = rep("   ", level + 1) + "#submeshes: " + subMeshes;
			break;
		case STILL_SUBMESH:
			id = "STILL_SUBMESH";
			payload = rep("   ", level + 1) + "name: " + chunk.readString() + ", primitive type: " + chunk.readInt();
			break;
		case VERTEX_ATTRIBUTE:
			id = "VERTEX_ATTRIBUTE";
			int usage = chunk.readInt();
			int components = chunk.readInt();
			String name = chunk.readString();
			payload = rep("   ", level + 1) + "usage: " + usage + ", components: " + components + ", name: " + name;
			break;
		case VERTEX_ATTRIBUTES:
			id = "VERTEX_ATTRIBUTES";
			int numAttributes = chunk.readInt();
			payload = rep("   ", level + 1) + "#attributes: " + numAttributes;
			break;
		case VERTEX_LIST:
			id = "VERTEX_LIST";
			int numVertices = chunk.readInt();
			float[] vertices = chunk.readFloats();
			payload = rep("   ", level + 1) + "#vertices: " + numVertices + ": " + Arrays.toString(vertices).substring(0, 400);
			break;
		case INDEX_LIST:
			id = "INDEX_LIST";
			int numIndices = chunk.readInt();
			short[] indices = chunk.readShorts();
			payload = rep("   ", level + 1) + "#indices: " + numIndices + ": " + Arrays.toString(indices).substring(0, 400);
			break;
		default:
			id = "unknown [" + id + "]";
			payload = rep("   ", level + 1) + "unknown";
			break;
		}

		System.out.println(rep("   ", level) + id + " {");
		if (payload != null) System.out.println(payload);
		for (Chunk child : chunk.getChildren()) {
			printChunks(child, level + 1);
		}
		System.out.println(rep("   ", level) + "}");
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static String rep (String c, int n) {
		StringBuffer buf = new StringBuffer();
		for (int i = 0; i < n; i++)
			buf.append(c);
		return buf.toString();
	} ##FSTMerge## private static String rep (String c, int n) {
		StringBuffer buf = new StringBuffer();
		for (int i = 0; i < n; i++)
			buf.append(c);
		return buf.toString();
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements Renderer ##FSTMerge## implements Renderer
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private SpriteBatch spriteBatch; ##FSTMerge## private SpriteBatch spriteBatch;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private StillModel shipMesh; ##FSTMerge## private StillModel shipMesh;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Texture shipTexture; ##FSTMerge## private Texture shipTexture;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private StillModel invaderMesh; ##FSTMerge## private StillModel invaderMesh;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Texture invaderTexture; ##FSTMerge## private Texture invaderTexture;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private StillModel blockMesh; ##FSTMerge## private StillModel blockMesh;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private StillModel shotMesh; ##FSTMerge## private StillModel shotMesh;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Texture backgroundTexture; ##FSTMerge## private Texture backgroundTexture;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Mesh explosionMesh; ##FSTMerge## private Mesh explosionMesh;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Texture explosionTexture; ##FSTMerge## private Texture explosionTexture;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private BitmapFont font; ##FSTMerge## private BitmapFont font;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private float invaderAngle = 0; ##FSTMerge## private float invaderAngle = 0;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private String status = ""; ##FSTMerge## private String status = "";
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private int lastScore = 0; ##FSTMerge## private int lastScore = 0;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private int lastLives = 0; ##FSTMerge## private int lastLives = 0;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private int lastWave = 0; ##FSTMerge## private int lastWave = 0;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final Matrix4 viewMatrix = new Matrix4(); ##FSTMerge## private final Matrix4 viewMatrix = new Matrix4();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final Matrix4 transform = new Matrix4(); ##FSTMerge## private final Matrix4 transform = new Matrix4();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final Matrix4 normal = new Matrix4(); ##FSTMerge## private final Matrix4 normal = new Matrix4();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final Matrix3 normal3 = new Matrix3(); ##FSTMerge## private final Matrix3 normal3 = new Matrix3();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private PerspectiveCamera camera; ##FSTMerge## private PerspectiveCamera camera;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## ShaderProgram texShader; ##FSTMerge## ShaderProgram texShader;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## ShaderProgram colorShader; ##FSTMerge## ShaderProgram colorShader;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## ShaderProgram lightTexShader; ##FSTMerge## ShaderProgram lightTexShader;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public RendererGL20 () {
		try {
			spriteBatch = new SpriteBatch();

			texShader = new ShaderProgram(Gdx.files.internal("data/shaders/tex-vs.glsl"),
				Gdx.files.internal("data/shaders/tex-fs.glsl"));
			colorShader = new ShaderProgram(Gdx.files.internal("data/shaders/color-vs.glsl"),
				Gdx.files.internal("data/shaders/color-fs.glsl"));
			lightTexShader = new ShaderProgram(Gdx.files.internal("data/shaders/light-tex-vs.glsl"),
				Gdx.files.internal("data/shaders/light-tex-fs.glsl"));

			if (!texShader.isCompiled()) throw new GdxRuntimeException("Couldn't compile tex shader");
			if (!colorShader.isCompiled()) throw new GdxRuntimeException("Couldn't compile color shader");
			if (!lightTexShader.isCompiled()) throw new GdxRuntimeException("Couldn't compile light/tex shader");

			shipMesh = ModelLoaderRegistry.loadStillModel(Gdx.files.internal("data/ship.obj"));
			invaderMesh = ModelLoaderRegistry.loadStillModel(Gdx.files.internal("data/invader.obj"));
			blockMesh = ModelLoaderRegistry.loadStillModel(Gdx.files.internal("data/block.obj"));
			shotMesh = ModelLoaderRegistry.loadStillModel(Gdx.files.internal("data/shot.obj"));

			shipTexture = new Texture(Gdx.files.internal("data/ship.png"), Format.RGB565, true);
			shipTexture.setFilter(TextureFilter.MipMap, TextureFilter.Linear);
			invaderTexture = new Texture(Gdx.files.internal("data/invader.png"), Format.RGB565, true);
			invaderTexture.setFilter(TextureFilter.MipMap, TextureFilter.Linear);
			backgroundTexture = new Texture(Gdx.files.internal("data/planet.jpg"), Format.RGB565, true);
			backgroundTexture.setFilter(TextureFilter.MipMap, TextureFilter.Linear);
			explosionTexture = new Texture(Gdx.files.internal("data/explode.png"), Format.RGBA4444, true);
			explosionTexture.setFilter(TextureFilter.MipMap, TextureFilter.Linear);

			explosionMesh = new Mesh(true, 4 * 16, 0, new VertexAttribute(Usage.Position, 3, "a_position"), new VertexAttribute(
				Usage.TextureCoordinates, 2, "a_texCoord0"));

			float[] vertices = new float[4 * 16 * (3 + 2)];
			int idx = 0;
			for (int row = 0; row < 4; row++) {
				for (int column = 0; column < 4; column++) {
					vertices[idx++] = 1;
					vertices[idx++] = 1;
					vertices[idx++] = 0;
					vertices[idx++] = 0.25f + column * 0.25f;
					vertices[idx++] = 0 + row * 0.25f;

					vertices[idx++] = -1;
					vertices[idx++] = 1;
					vertices[idx++] = 0;
					vertices[idx++] = 0 + column * 0.25f;
					vertices[idx++] = 0 + row * 0.25f;

					vertices[idx++] = -1;
					vertices[idx++] = -1;
					vertices[idx++] = 0;
					vertices[idx++] = 0f + column * 0.25f;
					vertices[idx++] = 0.25f + row * 0.25f;

					vertices[idx++] = 1;
					vertices[idx++] = -1;
					vertices[idx++] = 0;
					vertices[idx++] = 0.25f + column * 0.25f;
					vertices[idx++] = 0.25f + row * 0.25f;
				}
			}

			explosionMesh.setVertices(vertices);
			font = new BitmapFont(Gdx.files.internal("data/font10.fnt"), Gdx.files.internal("data/font10.png"), false);

			camera = new PerspectiveCamera(67, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
		} catch (Exception ex) {
			ex.printStackTrace();
		}
	} ##FSTMerge## public RendererGL20 () {
		try {
			spriteBatch = new SpriteBatch();

			texShader = new ShaderProgram(Gdx.files.internal("data/shaders/tex-vs.glsl"),
				Gdx.files.internal("data/shaders/tex-fs.glsl"));
			colorShader = new ShaderProgram(Gdx.files.internal("data/shaders/color-vs.glsl"),
				Gdx.files.internal("data/shaders/color-fs.glsl"));
			lightTexShader = new ShaderProgram(Gdx.files.internal("data/shaders/light-tex-vs.glsl"),
				Gdx.files.internal("data/shaders/light-tex-fs.glsl"));

			if (!texShader.isCompiled()) throw new GdxRuntimeException("Couldn't compile tex shader");
			if (!colorShader.isCompiled()) throw new GdxRuntimeException("Couldn't compile color shader");
			if (!lightTexShader.isCompiled()) throw new GdxRuntimeException("Couldn't compile light/tex shader");

			shipMesh = ModelLoaderRegistry.loadStillModel(Gdx.files.internal("data/ship.obj"));
			invaderMesh = ModelLoaderRegistry.loadStillModel(Gdx.files.internal("data/invader.obj"));
			blockMesh = ModelLoaderRegistry.loadStillModel(Gdx.files.internal("data/block.obj"));
			shotMesh = ModelLoaderRegistry.loadStillModel(Gdx.files.internal("data/shot.obj"));

			shipTexture = new Texture(Gdx.files.internal("data/ship.png"), Format.RGB565, true);
			shipTexture.setFilter(TextureFilter.MipMap, TextureFilter.Linear);
			invaderTexture = new Texture(Gdx.files.internal("data/invader.png"), Format.RGB565, true);
			invaderTexture.setFilter(TextureFilter.MipMap, TextureFilter.Linear);
			backgroundTexture = new Texture(Gdx.files.internal("data/planet.jpg"), Format.RGB565, true);
			backgroundTexture.setFilter(TextureFilter.MipMap, TextureFilter.Linear);
			explosionTexture = new Texture(Gdx.files.internal("data/explode.png"), Format.RGBA4444, true);
			explosionTexture.setFilter(TextureFilter.MipMap, TextureFilter.Linear);

			explosionMesh = new Mesh(true, 4 * 16, 0, new VertexAttribute(Usage.Position, 3, "a_position"), new VertexAttribute(
				Usage.TextureCoordinates, 2, "a_texCoord0"));

			float[] vertices = new float[4 * 16 * (3 + 2)];
			int idx = 0;
			for (int row = 0; row < 4; row++) {
				for (int column = 0; column < 4; column++) {
					vertices[idx++] = 1;
					vertices[idx++] = 1;
					vertices[idx++] = 0;
					vertices[idx++] = 0.25f + column * 0.25f;
					vertices[idx++] = 0 + row * 0.25f;

					vertices[idx++] = -1;
					vertices[idx++] = 1;
					vertices[idx++] = 0;
					vertices[idx++] = 0 + column * 0.25f;
					vertices[idx++] = 0 + row * 0.25f;

					vertices[idx++] = -1;
					vertices[idx++] = -1;
					vertices[idx++] = 0;
					vertices[idx++] = 0f + column * 0.25f;
					vertices[idx++] = 0.25f + row * 0.25f;

					vertices[idx++] = 1;
					vertices[idx++] = -1;
					vertices[idx++] = 0;
					vertices[idx++] = 0.25f + column * 0.25f;
					vertices[idx++] = 0.25f + row * 0.25f;
				}
			}

			explosionMesh.setVertices(vertices);
			font = new BitmapFont(Gdx.files.internal("data/font10.fnt"), Gdx.files.internal("data/font10.png"), false);

			camera = new PerspectiveCamera(67, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
		} catch (Exception ex) {
			ex.printStackTrace();
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void render (Simulation simulation, float delta) {
		// We explicitly require GL10, otherwise we could've used the GLCommon
		// interface via Gdx.gl
		GLCommon gl = Gdx.gl;
		gl.glClear(GL10.GL_COLOR_BUFFER_BIT | GL10.GL_DEPTH_BUFFER_BIT);
		renderBackground();
		gl.glEnable(GL10.GL_DEPTH_TEST);
		gl.glEnable(GL10.GL_CULL_FACE);
		setProjectionAndCamera(simulation.ship);
		renderShip(simulation.ship);
		renderInvaders(simulation.invaders);
		renderBlocks(simulation.blocks);
		renderShots(simulation.shots);
		renderExplosions(simulation.explosions);
		gl.glDisable(GL10.GL_CULL_FACE);
		gl.glDisable(GL10.GL_DEPTH_TEST);

		spriteBatch.setProjectionMatrix(viewMatrix);
		spriteBatch.begin();
		if (simulation.ship.lives != lastLives || simulation.score != lastScore || simulation.wave != lastWave) {
			status = "lives: " + simulation.ship.lives + " wave: " + simulation.wave + " score: " + simulation.score;
			lastLives = simulation.ship.lives;
			lastScore = simulation.score;
			lastWave = simulation.wave;
		}
		spriteBatch.enableBlending();
		font.draw(spriteBatch, status, 0, 320);
		spriteBatch.end();

		invaderAngle += delta * 90;
		if (invaderAngle > 360) invaderAngle -= 360;
	} ##FSTMerge## public void render (Simulation simulation, float delta) {
		// We explicitly require GL10, otherwise we could've used the GLCommon
		// interface via Gdx.gl
		GLCommon gl = Gdx.gl;
		gl.glClear(GL10.GL_COLOR_BUFFER_BIT | GL10.GL_DEPTH_BUFFER_BIT);
		renderBackground();
		gl.glEnable(GL10.GL_DEPTH_TEST);
		gl.glEnable(GL10.GL_CULL_FACE);
		setProjectionAndCamera(simulation.ship);
		renderShip(simulation.ship);
		renderInvaders(simulation.invaders);
		renderBlocks(simulation.blocks);
		renderShots(simulation.shots);
		renderExplosions(simulation.explosions);
		gl.glDisable(GL10.GL_CULL_FACE);
		gl.glDisable(GL10.GL_DEPTH_TEST);

		spriteBatch.setProjectionMatrix(viewMatrix);
		spriteBatch.begin();
		if (simulation.ship.lives != lastLives || simulation.score != lastScore || simulation.wave != lastWave) {
			status = "lives: " + simulation.ship.lives + " wave: " + simulation.wave + " score: " + simulation.score;
			lastLives = simulation.ship.lives;
			lastScore = simulation.score;
			lastWave = simulation.wave;
		}
		spriteBatch.enableBlending();
		font.draw(spriteBatch, status, 0, 320);
		spriteBatch.end();

		invaderAngle += delta * 90;
		if (invaderAngle > 360) invaderAngle -= 360;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void renderBackground () {
		viewMatrix.setToOrtho2D(0, 0, 400, 320);
		spriteBatch.setProjectionMatrix(viewMatrix);
		spriteBatch.begin();
		spriteBatch.disableBlending();
		spriteBatch.setColor(Color.WHITE);
		spriteBatch.draw(backgroundTexture, 0, 0, 480, 320, 0, 0, 512, 512, false, false);
		spriteBatch.end();
	} ##FSTMerge## private void renderBackground () {
		viewMatrix.setToOrtho2D(0, 0, 400, 320);
		spriteBatch.setProjectionMatrix(viewMatrix);
		spriteBatch.begin();
		spriteBatch.disableBlending();
		spriteBatch.setColor(Color.WHITE);
		spriteBatch.draw(backgroundTexture, 0, 0, 480, 320, 0, 0, 512, 512, false, false);
		spriteBatch.end();
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final Vector3 dir = new Vector3(); ##FSTMerge## final Vector3 dir = new Vector3();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void setProjectionAndCamera (Ship ship) {
		camera.position.set(ship.position.x, 6, 2);
		camera.direction.set(ship.position.x, 0, -4).sub(camera.position).nor();
		camera.update();
	} ##FSTMerge## private void setProjectionAndCamera (Ship ship) {
		camera.position.set(ship.position.x, 6, 2);
		camera.direction.set(ship.position.x, 0, -4).sub(camera.position).nor();
		camera.update();
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void renderShip (Ship ship) {
		if (ship.isExploding) return;

		shipTexture.bind();
		lightTexShader.begin();
		lightTexShader.setUniformi("u_diffuse", 0);
		transform.set(camera.combined);
		transform.translate(ship.position.x, ship.position.y, ship.position.z);
		transform.rotate(0, 0, 1, 45 * (-Gdx.input.getAccelerometerY() / 5));
		transform.rotate(0, 1, 0, 180);
		lightTexShader.setUniformMatrix("u_projView", transform);
		normal.idt();
		normal.rotate(0, 1, 0, 180);
		normal3.set(normal.toNormalMatrix());
		lightTexShader.setUniformMatrix("u_normal", normal3);
		shipMesh.render(lightTexShader);
		lightTexShader.end();
	} ##FSTMerge## private void renderShip (Ship ship) {
		if (ship.isExploding) return;

		shipTexture.bind();
		lightTexShader.begin();
		lightTexShader.setUniformi("u_diffuse", 0);
		transform.set(camera.combined);
		transform.translate(ship.position.x, ship.position.y, ship.position.z);
		transform.rotate(0, 0, 1, 45 * (-Gdx.input.getAccelerometerY() / 5));
		transform.rotate(0, 1, 0, 180);
		lightTexShader.setUniformMatrix("u_projView", transform);
		normal.idt();
		normal.rotate(0, 1, 0, 180);
		normal3.set(normal.toNormalMatrix());
		lightTexShader.setUniformMatrix("u_normal", normal3);
		shipMesh.render(lightTexShader);
		lightTexShader.end();
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void renderInvaders (ArrayList<Invader> invaders) {
		lightTexShader.begin();
		normal.idt();
		normal.rotate(0, 1, 0, invaderAngle);
		normal3.set(normal.toNormalMatrix());
		lightTexShader.setUniformMatrix("u_normal", normal3);
		invaderTexture.bind();
		for (int i = 0; i < invaders.size(); i++) {
			Invader invader = invaders.get(i);
			transform.set(camera.combined);
			transform.translate(invader.position.x, invader.position.y, invader.position.z);
			transform.rotate(0, 1, 0, invaderAngle);
			lightTexShader.setUniformMatrix("u_projView", transform);
			invaderMesh.render(lightTexShader);
		}
		lightTexShader.end();
	} ##FSTMerge## private void renderInvaders (ArrayList<Invader> invaders) {
		lightTexShader.begin();
		normal.idt();
		normal.rotate(0, 1, 0, invaderAngle);
		normal3.set(normal.toNormalMatrix());
		lightTexShader.setUniformMatrix("u_normal", normal3);
		invaderTexture.bind();
		for (int i = 0; i < invaders.size(); i++) {
			Invader invader = invaders.get(i);
			transform.set(camera.combined);
			transform.translate(invader.position.x, invader.position.y, invader.position.z);
			transform.rotate(0, 1, 0, invaderAngle);
			lightTexShader.setUniformMatrix("u_projView", transform);
			invaderMesh.render(lightTexShader);
		}
		lightTexShader.end();
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void renderBlocks (ArrayList<Block> blocks) {
		Gdx.gl.glEnable(GL10.GL_BLEND);
		Gdx.gl.glBlendFunc(GL10.GL_SRC_ALPHA, GL10.GL_ONE_MINUS_SRC_ALPHA);
		colorShader.begin();
		colorShader.setUniformf("u_color", 0, 0, 1, 0.5f);
		for (int i = 0; i < blocks.size(); i++) {
			Block block = blocks.get(i);
			transform.set(camera.combined);
			transform.translate(block.position.x, block.position.y, block.position.z);
			colorShader.setUniformMatrix("u_projView", transform);
			blockMesh.render(colorShader);
		}
		colorShader.end();
		Gdx.gl.glDisable(GL10.GL_BLEND);
	} ##FSTMerge## private void renderBlocks (ArrayList<Block> blocks) {
		Gdx.gl.glEnable(GL10.GL_BLEND);
		Gdx.gl.glBlendFunc(GL10.GL_SRC_ALPHA, GL10.GL_ONE_MINUS_SRC_ALPHA);
		colorShader.begin();
		colorShader.setUniformf("u_color", 0, 0, 1, 0.5f);
		for (int i = 0; i < blocks.size(); i++) {
			Block block = blocks.get(i);
			transform.set(camera.combined);
			transform.translate(block.position.x, block.position.y, block.position.z);
			colorShader.setUniformMatrix("u_projView", transform);
			blockMesh.render(colorShader);
		}
		colorShader.end();
		Gdx.gl.glDisable(GL10.GL_BLEND);
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void renderShots (ArrayList<Shot> shots) {
		colorShader.begin();
		colorShader.setUniformf("u_color", 1, 1, 0, 1f);
		for (int i = 0; i < shots.size(); i++) {
			Shot shot = shots.get(i);
			transform.set(camera.combined);
			transform.translate(shot.position.x, shot.position.y, shot.position.z);
			colorShader.setUniformMatrix("u_projView", transform);
			shotMesh.render(colorShader);
		}
		colorShader.end();
	} ##FSTMerge## private void renderShots (ArrayList<Shot> shots) {
		colorShader.begin();
		colorShader.setUniformf("u_color", 1, 1, 0, 1f);
		for (int i = 0; i < shots.size(); i++) {
			Shot shot = shots.get(i);
			transform.set(camera.combined);
			transform.translate(shot.position.x, shot.position.y, shot.position.z);
			colorShader.setUniformMatrix("u_projView", transform);
			shotMesh.render(colorShader);
		}
		colorShader.end();
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void renderExplosions (ArrayList<Explosion> explosions) {
		Gdx.gl.glEnable(GL10.GL_BLEND);
		Gdx.gl.glBlendFunc(GL10.GL_SRC_ALPHA, GL10.GL_ONE_MINUS_SRC_ALPHA);
		explosionTexture.bind();
		texShader.begin();
		texShader.setUniformi("u_diffuse", 0);
		for (int i = 0; i < explosions.size(); i++) {
			Explosion explosion = explosions.get(i);
			transform.set(camera.combined);
			transform.translate(explosion.position.x, explosion.position.y, explosion.position.z);
			texShader.setUniformMatrix("u_projView", transform);
			explosionMesh.render(texShader, GL10.GL_TRIANGLE_FAN,
				(int)(explosion.aliveTime / Explosion.EXPLOSION_LIVE_TIME * 15) * 4, 4);
		}
		texShader.end();
		Gdx.gl.glDisable(GL10.GL_BLEND);
	} ##FSTMerge## private void renderExplosions (ArrayList<Explosion> explosions) {
		Gdx.gl.glEnable(GL10.GL_BLEND);
		Gdx.gl.glBlendFunc(GL10.GL_SRC_ALPHA, GL10.GL_ONE_MINUS_SRC_ALPHA);
		explosionTexture.bind();
		texShader.begin();
		texShader.setUniformi("u_diffuse", 0);
		for (int i = 0; i < explosions.size(); i++) {
			Explosion explosion = explosions.get(i);
			transform.set(camera.combined);
			transform.translate(explosion.position.x, explosion.position.y, explosion.position.z);
			texShader.setUniformMatrix("u_projView", transform);
			explosionMesh.render(texShader, GL10.GL_TRIANGLE_FAN,
				(int)(explosion.aliveTime / Explosion.EXPLOSION_LIVE_TIME * 15) * 4, 4);
		}
		texShader.end();
		Gdx.gl.glDisable(GL10.GL_BLEND);
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void dispose () {
		spriteBatch.dispose();
		shipTexture.dispose();
		invaderTexture.dispose();
		backgroundTexture.dispose();
		explosionTexture.dispose();
		font.dispose();
		explosionMesh.dispose();
		shipMesh.dispose();
		invaderMesh.dispose();
		shotMesh.dispose();
		blockMesh.dispose();
	} ##FSTMerge## public void dispose () {
		spriteBatch.dispose();
		shipTexture.dispose();
		invaderTexture.dispose();
		backgroundTexture.dispose();
		explosionTexture.dispose();
		font.dispose();
		explosionMesh.dispose();
		shipMesh.dispose();
		invaderMesh.dispose();
		shotMesh.dispose();
		blockMesh.dispose();
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements Renderer ##FSTMerge## implements Renderer
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private SpriteBatch spriteBatch; ##FSTMerge## private SpriteBatch spriteBatch;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private StillModel shipMesh; ##FSTMerge## private StillModel shipMesh;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Texture shipTexture; ##FSTMerge## private Texture shipTexture;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private StillModel invaderMesh; ##FSTMerge## private StillModel invaderMesh;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Texture invaderTexture; ##FSTMerge## private Texture invaderTexture;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private StillModel blockMesh; ##FSTMerge## private StillModel blockMesh;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private StillModel shotMesh; ##FSTMerge## private StillModel shotMesh;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Texture backgroundTexture; ##FSTMerge## private Texture backgroundTexture;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Mesh explosionMesh; ##FSTMerge## private Mesh explosionMesh;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Texture explosionTexture; ##FSTMerge## private Texture explosionTexture;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private BitmapFont font; ##FSTMerge## private BitmapFont font;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private float invaderAngle = 0; ##FSTMerge## private float invaderAngle = 0;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private String status = ""; ##FSTMerge## private String status = "";
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private int lastScore = 0; ##FSTMerge## private int lastScore = 0;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private int lastLives = 0; ##FSTMerge## private int lastLives = 0;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private int lastWave = 0; ##FSTMerge## private int lastWave = 0;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final Matrix4 viewMatrix = new Matrix4(); ##FSTMerge## private final Matrix4 viewMatrix = new Matrix4();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final Matrix4 transformMatrix = new Matrix4(); ##FSTMerge## private final Matrix4 transformMatrix = new Matrix4();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private PerspectiveCamera camera; ##FSTMerge## private PerspectiveCamera camera;
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public RendererGL10 () {
		try {
			spriteBatch = new SpriteBatch();

			shipMesh = ModelLoaderRegistry.loadStillModel(Gdx.files.internal("data/ship.obj"));
			invaderMesh = ModelLoaderRegistry.loadStillModel(Gdx.files.internal("data/invader.obj"));
			blockMesh = ModelLoaderRegistry.loadStillModel(Gdx.files.internal("data/block.obj"));
			shotMesh = ModelLoaderRegistry.loadStillModel(Gdx.files.internal("data/shot.obj"));

			shipTexture = new Texture(Gdx.files.internal("data/ship.png"), Format.RGB565, true);
			shipTexture.setFilter(TextureFilter.MipMap, TextureFilter.Linear);
			invaderTexture = new Texture(Gdx.files.internal("data/invader.png"), Format.RGB565, true);
			invaderTexture.setFilter(TextureFilter.MipMap, TextureFilter.Linear);
			backgroundTexture = new Texture(Gdx.files.internal("data/planet.jpg"), Format.RGB565, true);
			backgroundTexture.setFilter(TextureFilter.MipMap, TextureFilter.Linear);
			explosionTexture = new Texture(Gdx.files.internal("data/explode.png"), Format.RGBA4444, true);
			explosionTexture.setFilter(TextureFilter.MipMap, TextureFilter.Linear);

			explosionMesh = new Mesh(true, 4 * 16, 0, new VertexAttribute(Usage.Position, 3, "a_position"), new VertexAttribute(
				Usage.TextureCoordinates, 2, "a_texCoord"));

			float[] vertices = new float[4 * 16 * (3 + 2)];
			int idx = 0;
			for (int row = 0; row < 4; row++) {
				for (int column = 0; column < 4; column++) {
					vertices[idx++] = 1;
					vertices[idx++] = 1;
					vertices[idx++] = 0;
					vertices[idx++] = 0.25f + column * 0.25f;
					vertices[idx++] = 0 + row * 0.25f;

					vertices[idx++] = -1;
					vertices[idx++] = 1;
					vertices[idx++] = 0;
					vertices[idx++] = 0 + column * 0.25f;
					vertices[idx++] = 0 + row * 0.25f;

					vertices[idx++] = -1;
					vertices[idx++] = -1;
					vertices[idx++] = 0;
					vertices[idx++] = 0f + column * 0.25f;
					vertices[idx++] = 0.25f + row * 0.25f;

					vertices[idx++] = 1;
					vertices[idx++] = -1;
					vertices[idx++] = 0;
					vertices[idx++] = 0.25f + column * 0.25f;
					vertices[idx++] = 0.25f + row * 0.25f;
				}
			}

			explosionMesh.setVertices(vertices);
			font = new BitmapFont(Gdx.files.internal("data/font10.fnt"), Gdx.files.internal("data/font10.png"), false);

			camera = new PerspectiveCamera(67, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
		} catch (Exception ex) {
			ex.printStackTrace();
		}
	} ##FSTMerge## public RendererGL10 () {
		try {
			spriteBatch = new SpriteBatch();

			shipMesh = ModelLoaderRegistry.loadStillModel(Gdx.files.internal("data/ship.obj"));
			invaderMesh = ModelLoaderRegistry.loadStillModel(Gdx.files.internal("data/invader.obj"));
			blockMesh = ModelLoaderRegistry.loadStillModel(Gdx.files.internal("data/block.obj"));
			shotMesh = ModelLoaderRegistry.loadStillModel(Gdx.files.internal("data/shot.obj"));

			shipTexture = new Texture(Gdx.files.internal("data/ship.png"), Format.RGB565, true);
			shipTexture.setFilter(TextureFilter.MipMap, TextureFilter.Linear);
			invaderTexture = new Texture(Gdx.files.internal("data/invader.png"), Format.RGB565, true);
			invaderTexture.setFilter(TextureFilter.MipMap, TextureFilter.Linear);
			backgroundTexture = new Texture(Gdx.files.internal("data/planet.jpg"), Format.RGB565, true);
			backgroundTexture.setFilter(TextureFilter.MipMap, TextureFilter.Linear);
			explosionTexture = new Texture(Gdx.files.internal("data/explode.png"), Format.RGBA4444, true);
			explosionTexture.setFilter(TextureFilter.MipMap, TextureFilter.Linear);

			explosionMesh = new Mesh(true, 4 * 16, 0, new VertexAttribute(Usage.Position, 3, "a_position"), new VertexAttribute(
				Usage.TextureCoordinates, 2, "a_texCoord"));

			float[] vertices = new float[4 * 16 * (3 + 2)];
			int idx = 0;
			for (int row = 0; row < 4; row++) {
				for (int column = 0; column < 4; column++) {
					vertices[idx++] = 1;
					vertices[idx++] = 1;
					vertices[idx++] = 0;
					vertices[idx++] = 0.25f + column * 0.25f;
					vertices[idx++] = 0 + row * 0.25f;

					vertices[idx++] = -1;
					vertices[idx++] = 1;
					vertices[idx++] = 0;
					vertices[idx++] = 0 + column * 0.25f;
					vertices[idx++] = 0 + row * 0.25f;

					vertices[idx++] = -1;
					vertices[idx++] = -1;
					vertices[idx++] = 0;
					vertices[idx++] = 0f + column * 0.25f;
					vertices[idx++] = 0.25f + row * 0.25f;

					vertices[idx++] = 1;
					vertices[idx++] = -1;
					vertices[idx++] = 0;
					vertices[idx++] = 0.25f + column * 0.25f;
					vertices[idx++] = 0.25f + row * 0.25f;
				}
			}

			explosionMesh.setVertices(vertices);
			font = new BitmapFont(Gdx.files.internal("data/font10.fnt"), Gdx.files.internal("data/font10.png"), false);

			camera = new PerspectiveCamera(67, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
		} catch (Exception ex) {
			ex.printStackTrace();
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void render (Simulation simulation, float delta) {
		// We explicitly require GL10, otherwise we could've used the GLCommon
		// interface via Gdx.gl
		GL10 gl = Gdx.graphics.getGL10();
		gl.glClear(GL10.GL_COLOR_BUFFER_BIT | GL10.GL_DEPTH_BUFFER_BIT);
		gl.glViewport(0, 0, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());

		renderBackground();

		gl.glDisable(GL10.GL_DITHER);
		gl.glEnable(GL10.GL_DEPTH_TEST);
		gl.glEnable(GL10.GL_CULL_FACE);

		setProjectionAndCamera(gl, simulation.ship);
		setLighting(gl);

		gl.glEnable(GL10.GL_TEXTURE_2D);

		renderShip(gl, simulation.ship);
		renderInvaders(gl, simulation.invaders);

		gl.glDisable(GL10.GL_TEXTURE_2D);
		renderBlocks(gl, simulation.blocks);

		gl.glDisable(GL10.GL_LIGHTING);
		renderShots(gl, simulation.shots);

		gl.glEnable(GL10.GL_TEXTURE_2D);
		renderExplosions(gl, simulation.explosions);

		gl.glDisable(GL10.GL_CULL_FACE);
		gl.glDisable(GL10.GL_DEPTH_TEST);

		spriteBatch.setProjectionMatrix(viewMatrix);
		spriteBatch.setTransformMatrix(transformMatrix);
		spriteBatch.begin();
		if (simulation.ship.lives != lastLives || simulation.score != lastScore || simulation.wave != lastWave) {
			status = "lives: " + simulation.ship.lives + " wave: " + simulation.wave + " score: " + simulation.score;
			lastLives = simulation.ship.lives;
			lastScore = simulation.score;
			lastWave = simulation.wave;
		}
		spriteBatch.enableBlending();
		spriteBatch.setBlendFunction(GL10.GL_ONE, GL10.GL_ONE_MINUS_SRC_ALPHA);
		font.draw(spriteBatch, status, 0, 320);
		spriteBatch.end();

		invaderAngle += delta * 90;
		if (invaderAngle > 360) invaderAngle -= 360;
	} ##FSTMerge## public void render (Simulation simulation, float delta) {
		// We explicitly require GL10, otherwise we could've used the GLCommon
		// interface via Gdx.gl
		GL10 gl = Gdx.graphics.getGL10();
		gl.glClear(GL10.GL_COLOR_BUFFER_BIT | GL10.GL_DEPTH_BUFFER_BIT);
		gl.glViewport(0, 0, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());

		renderBackground();

		gl.glDisable(GL10.GL_DITHER);
		gl.glEnable(GL10.GL_DEPTH_TEST);
		gl.glEnable(GL10.GL_CULL_FACE);

		setProjectionAndCamera(gl, simulation.ship);
		setLighting(gl);

		gl.glEnable(GL10.GL_TEXTURE_2D);

		renderShip(gl, simulation.ship);
		renderInvaders(gl, simulation.invaders);

		gl.glDisable(GL10.GL_TEXTURE_2D);
		renderBlocks(gl, simulation.blocks);

		gl.glDisable(GL10.GL_LIGHTING);
		renderShots(gl, simulation.shots);

		gl.glEnable(GL10.GL_TEXTURE_2D);
		renderExplosions(gl, simulation.explosions);

		gl.glDisable(GL10.GL_CULL_FACE);
		gl.glDisable(GL10.GL_DEPTH_TEST);

		spriteBatch.setProjectionMatrix(viewMatrix);
		spriteBatch.setTransformMatrix(transformMatrix);
		spriteBatch.begin();
		if (simulation.ship.lives != lastLives || simulation.score != lastScore || simulation.wave != lastWave) {
			status = "lives: " + simulation.ship.lives + " wave: " + simulation.wave + " score: " + simulation.score;
			lastLives = simulation.ship.lives;
			lastScore = simulation.score;
			lastWave = simulation.wave;
		}
		spriteBatch.enableBlending();
		spriteBatch.setBlendFunction(GL10.GL_ONE, GL10.GL_ONE_MINUS_SRC_ALPHA);
		font.draw(spriteBatch, status, 0, 320);
		spriteBatch.end();

		invaderAngle += delta * 90;
		if (invaderAngle > 360) invaderAngle -= 360;
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void renderBackground () {
		viewMatrix.setToOrtho2D(0, 0, 400, 320);
		spriteBatch.setProjectionMatrix(viewMatrix);
		spriteBatch.setTransformMatrix(transformMatrix);
		spriteBatch.begin();
		spriteBatch.disableBlending();
		spriteBatch.setColor(Color.WHITE);
		spriteBatch.draw(backgroundTexture, 0, 0, 480, 320, 0, 0, 512, 512, false, false);
		spriteBatch.end();
	} ##FSTMerge## private void renderBackground () {
		viewMatrix.setToOrtho2D(0, 0, 400, 320);
		spriteBatch.setProjectionMatrix(viewMatrix);
		spriteBatch.setTransformMatrix(transformMatrix);
		spriteBatch.begin();
		spriteBatch.disableBlending();
		spriteBatch.setColor(Color.WHITE);
		spriteBatch.draw(backgroundTexture, 0, 0, 480, 320, 0, 0, 512, 512, false, false);
		spriteBatch.end();
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final Vector3 dir = new Vector3(); ##FSTMerge## final Vector3 dir = new Vector3();
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void setProjectionAndCamera (GL10 gl, Ship ship) {
		camera.position.set(ship.position.x, 6, 2);
		camera.direction.set(ship.position.x, 0, -4).sub(camera.position).nor();
		camera.update();
		camera.apply(gl);
	} ##FSTMerge## private void setProjectionAndCamera (GL10 gl, Ship ship) {
		camera.position.set(ship.position.x, 6, 2);
		camera.direction.set(ship.position.x, 0, -4).sub(camera.position).nor();
		camera.update();
		camera.apply(gl);
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## float[] direction = {1, 0.5f, 0, 0}; ##FSTMerge## float[] direction = {1, 0.5f, 0, 0};
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void setLighting (GL10 gl) {
		gl.glEnable(GL10.GL_LIGHTING);
		gl.glEnable(GL10.GL_LIGHT0);
		gl.glLightfv(GL10.GL_LIGHT0, GL10.GL_POSITION, direction, 0);
		gl.glEnable(GL10.GL_COLOR_MATERIAL);
	} ##FSTMerge## private void setLighting (GL10 gl) {
		gl.glEnable(GL10.GL_LIGHTING);
		gl.glEnable(GL10.GL_LIGHT0);
		gl.glLightfv(GL10.GL_LIGHT0, GL10.GL_POSITION, direction, 0);
		gl.glEnable(GL10.GL_COLOR_MATERIAL);
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void renderShip (GL10 gl, Ship ship) {
		if (ship.isExploding) return;

		shipTexture.bind();
		gl.glPushMatrix();
		gl.glTranslatef(ship.position.x, ship.position.y, ship.position.z);
		gl.glRotatef(45 * (-Gdx.input.getAccelerometerY() / 5), 0, 0, 1);
		gl.glRotatef(180, 0, 1, 0);
		shipMesh.render();
		gl.glPopMatrix();
	} ##FSTMerge## private void renderShip (GL10 gl, Ship ship) {
		if (ship.isExploding) return;

		shipTexture.bind();
		gl.glPushMatrix();
		gl.glTranslatef(ship.position.x, ship.position.y, ship.position.z);
		gl.glRotatef(45 * (-Gdx.input.getAccelerometerY() / 5), 0, 0, 1);
		gl.glRotatef(180, 0, 1, 0);
		shipMesh.render();
		gl.glPopMatrix();
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void renderInvaders (GL10 gl, ArrayList<Invader> invaders) {
		invaderTexture.bind();
		Mesh mesh = invaderMesh.getSubMeshes()[0].mesh;
		for (int i = 0; i < invaders.size(); i++) {
			Invader invader = invaders.get(i);
			gl.glPushMatrix();
			gl.glTranslatef(invader.position.x, invader.position.y, invader.position.z);
			gl.glRotatef(invaderAngle, 0, 1, 0);
			mesh.render(GL10.GL_TRIANGLES);
			gl.glPopMatrix();
		}
	} ##FSTMerge## private void renderInvaders (GL10 gl, ArrayList<Invader> invaders) {
		invaderTexture.bind();
		Mesh mesh = invaderMesh.getSubMeshes()[0].mesh;
		for (int i = 0; i < invaders.size(); i++) {
			Invader invader = invaders.get(i);
			gl.glPushMatrix();
			gl.glTranslatef(invader.position.x, invader.position.y, invader.position.z);
			gl.glRotatef(invaderAngle, 0, 1, 0);
			mesh.render(GL10.GL_TRIANGLES);
			gl.glPopMatrix();
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void renderBlocks (GL10 gl, ArrayList<Block> blocks) {
		gl.glEnable(GL10.GL_BLEND);
		gl.glBlendFunc(GL10.GL_SRC_ALPHA, GL10.GL_ONE_MINUS_SRC_ALPHA);
		gl.glColor4f(0.2f, 0.2f, 1, 0.7f);
		for (int i = 0; i < blocks.size(); i++) {
			Block block = blocks.get(i);
			gl.glPushMatrix();
			gl.glTranslatef(block.position.x, block.position.y, block.position.z);
			blockMesh.render();
			gl.glPopMatrix();
		}
		gl.glColor4f(1, 1, 1, 1);
		gl.glDisable(GL10.GL_BLEND);
	} ##FSTMerge## private void renderBlocks (GL10 gl, ArrayList<Block> blocks) {
		gl.glEnable(GL10.GL_BLEND);
		gl.glBlendFunc(GL10.GL_SRC_ALPHA, GL10.GL_ONE_MINUS_SRC_ALPHA);
		gl.glColor4f(0.2f, 0.2f, 1, 0.7f);
		for (int i = 0; i < blocks.size(); i++) {
			Block block = blocks.get(i);
			gl.glPushMatrix();
			gl.glTranslatef(block.position.x, block.position.y, block.position.z);
			blockMesh.render();
			gl.glPopMatrix();
		}
		gl.glColor4f(1, 1, 1, 1);
		gl.glDisable(GL10.GL_BLEND);
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void renderShots (GL10 gl, ArrayList<Shot> shots) {
		gl.glColor4f(1, 1, 0, 1);
		for (int i = 0; i < shots.size(); i++) {
			Shot shot = shots.get(i);
			gl.glPushMatrix();
			gl.glTranslatef(shot.position.x, shot.position.y, shot.position.z);
			shotMesh.render();
			gl.glPopMatrix();
		}
		gl.glColor4f(1, 1, 1, 1);
	} ##FSTMerge## private void renderShots (GL10 gl, ArrayList<Shot> shots) {
		gl.glColor4f(1, 1, 0, 1);
		for (int i = 0; i < shots.size(); i++) {
			Shot shot = shots.get(i);
			gl.glPushMatrix();
			gl.glTranslatef(shot.position.x, shot.position.y, shot.position.z);
			shotMesh.render();
			gl.glPopMatrix();
		}
		gl.glColor4f(1, 1, 1, 1);
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void renderExplosions (GL10 gl, ArrayList<Explosion> explosions) {
		gl.glEnable(GL10.GL_BLEND);
		gl.glBlendFunc(GL10.GL_SRC_ALPHA, GL10.GL_ONE_MINUS_SRC_ALPHA);
		explosionTexture.bind();
		for (int i = 0; i < explosions.size(); i++) {
			Explosion explosion = explosions.get(i);
			gl.glPushMatrix();
			gl.glTranslatef(explosion.position.x, explosion.position.y, explosion.position.z);
			explosionMesh.render(GL10.GL_TRIANGLE_FAN, (int)(explosion.aliveTime / Explosion.EXPLOSION_LIVE_TIME * 15) * 4, 4);
			gl.glPopMatrix();
		}
		gl.glDisable(GL10.GL_BLEND);
	} ##FSTMerge## private void renderExplosions (GL10 gl, ArrayList<Explosion> explosions) {
		gl.glEnable(GL10.GL_BLEND);
		gl.glBlendFunc(GL10.GL_SRC_ALPHA, GL10.GL_ONE_MINUS_SRC_ALPHA);
		explosionTexture.bind();
		for (int i = 0; i < explosions.size(); i++) {
			Explosion explosion = explosions.get(i);
			gl.glPushMatrix();
			gl.glTranslatef(explosion.position.x, explosion.position.y, explosion.position.z);
			explosionMesh.render(GL10.GL_TRIANGLE_FAN, (int)(explosion.aliveTime / Explosion.EXPLOSION_LIVE_TIME * 15) * 4, 4);
			gl.glPopMatrix();
		}
		gl.glDisable(GL10.GL_BLEND);
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0ce56c15161068bf87d34e68edd11c8b00efe5b6
Parent1 SHA-1: 45ee00f126e6ce0c30ab92064c0dc4f8f676a53a
Parent2 SHA-1: 990942b70e2da71bfb130c74546ef770e7ef0aa8
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void dispose () {
		spriteBatch.dispose();
		shipTexture.dispose();
		invaderTexture.dispose();
		backgroundTexture.dispose();
		explosionTexture.dispose();
		font.dispose();
		explosionMesh.dispose();
		shipMesh.dispose();
		invaderMesh.dispose();
		shotMesh.dispose();
		blockMesh.dispose();
	} ##FSTMerge## public void dispose () {
		spriteBatch.dispose();
		shipTexture.dispose();
		invaderTexture.dispose();
		backgroundTexture.dispose();
		explosionTexture.dispose();
		font.dispose();
		explosionMesh.dispose();
		shipMesh.dispose();
		invaderMesh.dispose();
		shotMesh.dispose();
		blockMesh.dispose();
	}
File path: /tmp/downloads/libgdx/revisions/rev_45ee0_99094/rev_45ee0-99094/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java

==================================================================================================================
Revision: /tmp/downloads/libgdx/revisions/rev_4e196_97613/rev_4e196-97613.revisions
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: ec4dfd31c0e3443399e459dd7bc5fc4e78b0261b
Parent1 SHA-1: 4e1968913ef57bc70f16db5118e181fcdc5eb45c
Parent2 SHA-1: 97613e2adc6b1c00eb7273463e3d75b276cdcfb9
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public void point (float x, float y, float z) {
		if (currType != ShapeType.Point) throw new GdxRuntimeException("Must call begin(ShapeType.Point)");
		checkDirty();
		checkFlush(1);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x, y, z);
	} ##FSTMerge## public void point(float x, float y, float z){
		if (currType != ShapeType.Point) throw new GdxRuntimeException("Must call begin(ShapeType.Point)");
		checkDirty();
		checkFlush(1);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x, y, z);
	} ##FSTMerge## public void point(float x, float y, float z){
		if (currType != ShapeType.Point) throw new GdxRuntimeException("Must call begin(ShapeType.Point)");
		checkDirty();
		checkFlush(1);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x, y, z);
	}
File path: /tmp/downloads/libgdx/revisions/rev_4e196_97613/rev_4e196-97613/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: ec4dfd31c0e3443399e459dd7bc5fc4e78b0261b
Parent1 SHA-1: 4e1968913ef57bc70f16db5118e181fcdc5eb45c
Parent2 SHA-1: 97613e2adc6b1c00eb7273463e3d75b276cdcfb9
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public void line (float x, float y, float z, float x2, float y2, float z2) {
		if (currType != ShapeType.Line) throw new GdxRuntimeException("Must call begin(ShapeType.Line)");
		checkDirty();
		checkFlush(2);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x, y, z);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x2, y2, z2);
	} ##FSTMerge## public void line(float x, float y, float z, float x2, float y2, float z2){
		if (currType != ShapeType.Line) throw new GdxRuntimeException("Must call begin(ShapeType.Line)");
		checkDirty();
		checkFlush(2);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x, y, z);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x2, y2, z2);
	} ##FSTMerge## public void line(float x, float y, float z, float x2, float y2, float z2){
		if (currType != ShapeType.Line) throw new GdxRuntimeException("Must call begin(ShapeType.Line)");
		checkDirty();
		checkFlush(2);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x, y, z);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x2, y2, z2);
	}
File path: /tmp/downloads/libgdx/revisions/rev_4e196_97613/rev_4e196-97613/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: ec4dfd31c0e3443399e459dd7bc5fc4e78b0261b
Parent1 SHA-1: 4e1968913ef57bc70f16db5118e181fcdc5eb45c
Parent2 SHA-1: 97613e2adc6b1c00eb7273463e3d75b276cdcfb9
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public void line (float x, float y, float x2, float y2) {
		if (currType != ShapeType.Line) throw new GdxRuntimeException("Must call begin(ShapeType.Line)");
		checkDirty();
		checkFlush(2);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x, y, 0);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x2, y2, 0);
	} ##FSTMerge## public void line(float x, float y, float x2, float y2){
		if (currType != ShapeType.Line) throw new GdxRuntimeException("Must call begin(ShapeType.Line)");
		checkDirty();
		checkFlush(2);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x, y, 0);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x2, y2, 0);
	} ##FSTMerge## public void line(float x, float y, float x2, float y2){
		if (currType != ShapeType.Line) throw new GdxRuntimeException("Must call begin(ShapeType.Line)");
		checkDirty();
		checkFlush(2);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x, y, 0);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x2, y2, 0);
	}
File path: /tmp/downloads/libgdx/revisions/rev_4e196_97613/rev_4e196-97613/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: ec4dfd31c0e3443399e459dd7bc5fc4e78b0261b
Parent1 SHA-1: 4e1968913ef57bc70f16db5118e181fcdc5eb45c
Parent2 SHA-1: 97613e2adc6b1c00eb7273463e3d75b276cdcfb9
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public void curve (float x1, float y1, float cx1, float cy1, float cx2, float cy2, float x2, float y2, int segments) {
		if (currType != ShapeType.Line) throw new GdxRuntimeException("Must call begin(ShapeType.Line)");
		checkDirty();
		checkFlush(segments * 2 + 2);

		// Algorithm from: http://www.antigrain.com/research/bezier_interpolation/index.html#PAGE_BEZIER_INTERPOLATION
		float subdiv_step = 1f / segments;
		float subdiv_step2 = subdiv_step * subdiv_step;
		float subdiv_step3 = subdiv_step * subdiv_step * subdiv_step;

		float pre1 = 3 * subdiv_step;
		float pre2 = 3 * subdiv_step2;
		float pre4 = 6 * subdiv_step2;
		float pre5 = 6 * subdiv_step3;

		float tmp1x = x1 - cx1 * 2 + cx2;
		float tmp1y = y1 - cy1 * 2 + cy2;

		float tmp2x = (cx1 - cx2) * 3 - x1 + x2;
		float tmp2y = (cy1 - cy2) * 3 - y1 + y2;

		float fx = x1;
		float fy = y1;

		float dfx = (cx1 - x1) * pre1 + tmp1x * pre2 + tmp2x * subdiv_step3;
		float dfy = (cy1 - y1) * pre1 + tmp1y * pre2 + tmp2y * subdiv_step3;

		float ddfx = tmp1x * pre4 + tmp2x * pre5;
		float ddfy = tmp1y * pre4 + tmp2y * pre5;

		float dddfx = tmp2x * pre5;
		float dddfy = tmp2y * pre5;

		while (segments-- > 0) {
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(fx, fy, 0);
			fx += dfx;
			fy += dfy;
			dfx += ddfx;
			dfy += ddfy;
			ddfx += dddfx;
			ddfy += dddfy;
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(fx, fy, 0);
		}
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(fx, fy, 0);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x2, y2, 0);
	} ##FSTMerge## public void curve(float x1, float y1, float cx1, float cy1, float cx2, float cy2, float x2, float y2, int segments){
		if (currType != ShapeType.Line) throw new GdxRuntimeException("Must call begin(ShapeType.Line)");
		checkDirty();
		checkFlush(segments * 2 + 2);

		// Algorithm from: http://www.antigrain.com/research/bezier_interpolation/index.html#PAGE_BEZIER_INTERPOLATION
		float subdiv_step = 1f / segments;
		float subdiv_step2 = subdiv_step * subdiv_step;
		float subdiv_step3 = subdiv_step * subdiv_step * subdiv_step;

		float pre1 = 3 * subdiv_step;
		float pre2 = 3 * subdiv_step2;
		float pre4 = 6 * subdiv_step2;
		float pre5 = 6 * subdiv_step3;

		float tmp1x = x1 - cx1 * 2 + cx2;
		float tmp1y = y1 - cy1 * 2 + cy2;

		float tmp2x = (cx1 - cx2) * 3 - x1 + x2;
		float tmp2y = (cy1 - cy2) * 3 - y1 + y2;

		float fx = x1;
		float fy = y1;

		float dfx = (cx1 - x1) * pre1 + tmp1x * pre2 + tmp2x * subdiv_step3;
		float dfy = (cy1 - y1) * pre1 + tmp1y * pre2 + tmp2y * subdiv_step3;

		float ddfx = tmp1x * pre4 + tmp2x * pre5;
		float ddfy = tmp1y * pre4 + tmp2y * pre5;

		float dddfx = tmp2x * pre5;
		float dddfy = tmp2y * pre5;

		while (segments-- > 0) {
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(fx, fy, 0);
			fx += dfx;
			fy += dfy;
			dfx += ddfx;
			dfy += ddfy;
			ddfx += dddfx;
			ddfy += dddfy;
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(fx, fy, 0);
		}
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(fx, fy, 0);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x2, y2, 0);
	} ##FSTMerge## public void curve(float x1, float y1, float cx1, float cy1, float cx2, float cy2, float x2, float y2, int segments){
		if (currType != ShapeType.Line) throw new GdxRuntimeException("Must call begin(ShapeType.Line)");
		checkDirty();
		checkFlush(segments * 2 + 2);

		// Algorithm from: http://www.antigrain.com/research/bezier_interpolation/index.html#PAGE_BEZIER_INTERPOLATION
		float subdiv_step = 1f / segments;
		float subdiv_step2 = subdiv_step * subdiv_step;
		float subdiv_step3 = subdiv_step * subdiv_step * subdiv_step;

		float pre1 = 3 * subdiv_step;
		float pre2 = 3 * subdiv_step2;
		float pre4 = 6 * subdiv_step2;
		float pre5 = 6 * subdiv_step3;

		float tmp1x = x1 - cx1 * 2 + cx2;
		float tmp1y = y1 - cy1 * 2 + cy2;

		float tmp2x = (cx1 - cx2) * 3 - x1 + x2;
		float tmp2y = (cy1 - cy2) * 3 - y1 + y2;

		float fx = x1;
		float fy = y1;

		float dfx = (cx1 - x1) * pre1 + tmp1x * pre2 + tmp2x * subdiv_step3;
		float dfy = (cy1 - y1) * pre1 + tmp1y * pre2 + tmp2y * subdiv_step3;

		float ddfx = tmp1x * pre4 + tmp2x * pre5;
		float ddfy = tmp1y * pre4 + tmp2y * pre5;

		float dddfx = tmp2x * pre5;
		float dddfy = tmp2y * pre5;

		while (segments-- > 0) {
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(fx, fy, 0);
			fx += dfx;
			fy += dfy;
			dfx += ddfx;
			dfy += ddfy;
			ddfx += dddfx;
			ddfy += dddfy;
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(fx, fy, 0);
		}
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(fx, fy, 0);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x2, y2, 0);
	}
File path: /tmp/downloads/libgdx/revisions/rev_4e196_97613/rev_4e196-97613/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: ec4dfd31c0e3443399e459dd7bc5fc4e78b0261b
Parent1 SHA-1: 4e1968913ef57bc70f16db5118e181fcdc5eb45c
Parent2 SHA-1: 97613e2adc6b1c00eb7273463e3d75b276cdcfb9
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public void triangle (float x1, float y1, float x2, float y2, float x3, float y3) {
		if (currType != ShapeType.Filled && currType != ShapeType.Line)
			throw new GdxRuntimeException("Must call begin(ShapeType.Filled) or begin(ShapeType.Line)");
		checkDirty();
		checkFlush(6);
		if (currType == ShapeType.Line) {
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x1, y1, 0);
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x2, y2, 0);

			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x2, y2, 0);
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x3, y3, 0);

			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x3, y3, 0);
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x1, y1, 0);
		} else {
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x1, y1, 0);
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x2, y2, 0);
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x3, y3, 0);
		}
	} ##FSTMerge## public void triangle(float x1, float y1, float x2, float y2, float x3, float y3){
		if (currType != ShapeType.Filled && currType != ShapeType.Line) 
			throw new GdxRuntimeException("Must call begin(ShapeType.Filled) or begin(ShapeType.Line)");
		checkDirty();
		checkFlush(6);
		if(currType == ShapeType.Line){
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x1, y1, 0);
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x2, y2, 0);
	
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x2, y2, 0);
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x3, y3, 0);
	
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x3, y3, 0);
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x1, y1, 0);
		}
		else {
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x1, y1, 0);
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x2, y2, 0);
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x3, y3, 0);
		}
	} ##FSTMerge## public void triangle(float x1, float y1, float x2, float y2, float x3, float y3){
		if (currType != ShapeType.Filled && currType != ShapeType.Line) 
			throw new GdxRuntimeException("Must call begin(ShapeType.Filled) or begin(ShapeType.Line)");
		checkDirty();
		checkFlush(6);
		if(currType == ShapeType.Line){
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x1, y1, 0);
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x2, y2, 0);
	
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x2, y2, 0);
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x3, y3, 0);
	
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x3, y3, 0);
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x1, y1, 0);
		}
		else {
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x1, y1, 0);
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x2, y2, 0);
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x3, y3, 0);
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_4e196_97613/rev_4e196-97613/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: ec4dfd31c0e3443399e459dd7bc5fc4e78b0261b
Parent1 SHA-1: 4e1968913ef57bc70f16db5118e181fcdc5eb45c
Parent2 SHA-1: 97613e2adc6b1c00eb7273463e3d75b276cdcfb9
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public void rect (float x, float y, float width, float height) {
		if (currType != ShapeType.Filled && currType != ShapeType.Line)
			throw new GdxRuntimeException("Must call begin(ShapeType.Filled) or begin(ShapeType.Line)");

		checkDirty();
		checkFlush(8);

		if (currType == ShapeType.Line) {
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x, y, 0);
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x + width, y, 0);

			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x + width, y, 0);
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x + width, y + height, 0);

			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x + width, y + height, 0);
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x, y + height, 0);

			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x, y + height, 0);
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x, y, 0);
		} else {
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x, y, 0);
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x + width, y, 0);
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x + width, y + height, 0);

			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x + width, y + height, 0);
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x, y + height, 0);
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x, y, 0);
		}
	} ##FSTMerge## public void rect(float x, float y, float width, float height){
		if (currType != ShapeType.Filled && currType != ShapeType.Line) 
			throw new GdxRuntimeException("Must call begin(ShapeType.Filled) or begin(ShapeType.Line)");
		
		checkDirty();
		checkFlush(8);
		
		if(currType == ShapeType.Line){
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x, y, 0);
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x + width, y, 0);
	
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x + width, y, 0);
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x + width, y + height, 0);
	
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x + width, y + height, 0);
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x, y + height, 0);
	
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x, y + height, 0);
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x, y, 0);
		}
		else {
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x, y, 0);
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x + width, y, 0);
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x + width, y + height, 0);

			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x + width, y + height, 0);
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x, y + height, 0);
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x, y, 0);
		}
	} ##FSTMerge## public void rect(float x, float y, float width, float height){
		if (currType != ShapeType.Filled && currType != ShapeType.Line) 
			throw new GdxRuntimeException("Must call begin(ShapeType.Filled) or begin(ShapeType.Line)");
		
		checkDirty();
		checkFlush(8);
		
		if(currType == ShapeType.Line){
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x, y, 0);
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x + width, y, 0);
	
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x + width, y, 0);
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x + width, y + height, 0);
	
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x + width, y + height, 0);
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x, y + height, 0);
	
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x, y + height, 0);
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x, y, 0);
		}
		else {
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x, y, 0);
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x + width, y, 0);
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x + width, y + height, 0);

			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x + width, y + height, 0);
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x, y + height, 0);
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x, y, 0);
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_4e196_97613/rev_4e196-97613/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: ec4dfd31c0e3443399e459dd7bc5fc4e78b0261b
Parent1 SHA-1: 4e1968913ef57bc70f16db5118e181fcdc5eb45c
Parent2 SHA-1: 97613e2adc6b1c00eb7273463e3d75b276cdcfb9
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public void rect (float x, float y, float width, float height, Color col1, Color col2, Color col3, Color col4) {
		if (currType != ShapeType.Filled && currType != ShapeType.Line)
			throw new GdxRuntimeException("Must call begin(ShapeType.Filled) or begin(ShapeType.Line)");

		checkDirty();
		checkFlush(8);

		if (currType == ShapeType.Line) {
			renderer.color(col1.r, col1.g, col1.b, col1.a);
			renderer.vertex(x, y, 0);
			renderer.color(col2.r, col2.g, col2.b, col2.a);
			renderer.vertex(x + width, y, 0);

			renderer.color(col2.r, col2.g, col2.b, col2.a);
			renderer.vertex(x + width, y, 0);
			renderer.color(col3.r, col3.g, col3.b, col3.a);
			renderer.vertex(x + width, y + height, 0);

			renderer.color(col3.r, col3.g, col3.b, col3.a);
			renderer.vertex(x + width, y + height, 0);
			renderer.color(col4.r, col4.g, col4.b, col4.a);
			renderer.vertex(x, y + height, 0);

			renderer.color(col4.r, col4.g, col4.b, col4.a);
			renderer.vertex(x, y + height, 0);
			renderer.color(col1.r, col1.g, col1.b, col1.a);
			renderer.vertex(x, y, 0);
		} else {
			renderer.color(col1.r, col1.g, col1.b, col1.a);
			renderer.vertex(x, y, 0);
			renderer.color(col2.r, col2.g, col2.b, col2.a);
			renderer.vertex(x + width, y, 0);
			renderer.color(col3.r, col3.g, col3.b, col3.a);
			renderer.vertex(x + width, y + height, 0);

			renderer.color(col3.r, col3.g, col3.b, col3.a);
			renderer.vertex(x + width, y + height, 0);
			renderer.color(col4.r, col4.g, col4.b, col4.a);
			renderer.vertex(x, y + height, 0);
			renderer.color(col1.r, col1.g, col1.b, col1.a);
			renderer.vertex(x, y, 0);
		}
	} ##FSTMerge## public void rect(float x, float y, float width, float height, Color col1, Color col2, Color col3, Color col4){
		if (currType != ShapeType.Filled && currType != ShapeType.Line) 
			throw new GdxRuntimeException("Must call begin(ShapeType.Filled) or begin(ShapeType.Line)");
		
		checkDirty();
		checkFlush(8);
		
		if(currType == ShapeType.Line){
			renderer.color(col1.r, col1.g, col1.b, col1.a);
			renderer.vertex(x, y, 0);
			renderer.color(col2.r, col2.g, col2.b, col2.a);
			renderer.vertex(x + width, y, 0);
	
			renderer.color(col2.r, col2.g, col2.b, col2.a);
			renderer.vertex(x + width, y, 0);
			renderer.color(col3.r, col3.g, col3.b, col3.a);
			renderer.vertex(x + width, y + height, 0);
	
			renderer.color(col3.r, col3.g, col3.b, col3.a);
			renderer.vertex(x + width, y + height, 0);
			renderer.color(col4.r, col4.g, col4.b, col4.a);
			renderer.vertex(x, y + height, 0);
	
			renderer.color(col4.r, col4.g, col4.b, col4.a);
			renderer.vertex(x, y + height, 0);
			renderer.color(col1.r, col1.g, col1.b, col1.a);
			renderer.vertex(x, y, 0);
		}
		else {
			renderer.color(col1.r, col1.g, col1.b, col1.a);
			renderer.vertex(x, y, 0);
			renderer.color(col2.r, col2.g, col2.b, col2.a);
			renderer.vertex(x + width, y, 0);
			renderer.color(col3.r, col3.g, col3.b, col3.a);
			renderer.vertex(x + width, y + height, 0);

			renderer.color(col3.r, col3.g, col3.b, col3.a);
			renderer.vertex(x + width, y + height, 0);
			renderer.color(col4.r, col4.g, col4.b, col4.a);
			renderer.vertex(x, y + height, 0);
			renderer.color(col1.r, col1.g, col1.b, col1.a);
			renderer.vertex(x, y, 0);
		}
	} ##FSTMerge## public void rect(float x, float y, float width, float height, Color col1, Color col2, Color col3, Color col4){
		if (currType != ShapeType.Filled && currType != ShapeType.Line) 
			throw new GdxRuntimeException("Must call begin(ShapeType.Filled) or begin(ShapeType.Line)");
		
		checkDirty();
		checkFlush(8);
		
		if(currType == ShapeType.Line){
			renderer.color(col1.r, col1.g, col1.b, col1.a);
			renderer.vertex(x, y, 0);
			renderer.color(col2.r, col2.g, col2.b, col2.a);
			renderer.vertex(x + width, y, 0);
	
			renderer.color(col2.r, col2.g, col2.b, col2.a);
			renderer.vertex(x + width, y, 0);
			renderer.color(col3.r, col3.g, col3.b, col3.a);
			renderer.vertex(x + width, y + height, 0);
	
			renderer.color(col3.r, col3.g, col3.b, col3.a);
			renderer.vertex(x + width, y + height, 0);
			renderer.color(col4.r, col4.g, col4.b, col4.a);
			renderer.vertex(x, y + height, 0);
	
			renderer.color(col4.r, col4.g, col4.b, col4.a);
			renderer.vertex(x, y + height, 0);
			renderer.color(col1.r, col1.g, col1.b, col1.a);
			renderer.vertex(x, y, 0);
		}
		else {
			renderer.color(col1.r, col1.g, col1.b, col1.a);
			renderer.vertex(x, y, 0);
			renderer.color(col2.r, col2.g, col2.b, col2.a);
			renderer.vertex(x + width, y, 0);
			renderer.color(col3.r, col3.g, col3.b, col3.a);
			renderer.vertex(x + width, y + height, 0);

			renderer.color(col3.r, col3.g, col3.b, col3.a);
			renderer.vertex(x + width, y + height, 0);
			renderer.color(col4.r, col4.g, col4.b, col4.a);
			renderer.vertex(x, y + height, 0);
			renderer.color(col1.r, col1.g, col1.b, col1.a);
			renderer.vertex(x, y, 0);
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_4e196_97613/rev_4e196-97613/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: ec4dfd31c0e3443399e459dd7bc5fc4e78b0261b
Parent1 SHA-1: 4e1968913ef57bc70f16db5118e181fcdc5eb45c
Parent2 SHA-1: 97613e2adc6b1c00eb7273463e3d75b276cdcfb9
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public void box (float x, float y, float z, float width, float height, float depth) {
		if (currType != ShapeType.Line) throw new GdxRuntimeException("Must call begin(ShapeType.Line)");

		checkDirty();
		checkFlush(16);

		depth = -depth;

		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x, y, z);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x + width, y, z);

		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x + width, y, z);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x + width, y, z + depth);

		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x + width, y, z + depth);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x, y, z + depth);

		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x, y, z + depth);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x, y, z);

		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x, y, z);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x, y + height, z);

		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x, y + height, z);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x + width, y + height, z);

		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x + width, y + height, z);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x + width, y + height, z + depth);

		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x + width, y + height, z + depth);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x, y + height, z + depth);

		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x, y + height, z + depth);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x, y + height, z);

		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x + width, y, z);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x + width, y + height, z);

		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x + width, y, z + depth);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x + width, y + height, z + depth);

		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x, y, z + depth);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x, y + height, z + depth);
	} ##FSTMerge## public void box(float x, float y, float z, float width, float height, float depth){
		if (currType != ShapeType.Line) throw new GdxRuntimeException("Must call begin(ShapeType.Line)");
		
		checkDirty();
		checkFlush(16);
		
		depth = -depth;
		
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x, y, z);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x + width, y, z);

		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x + width, y, z);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x + width, y, z + depth);

		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x + width, y, z + depth);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x, y, z + depth);

		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x, y, z + depth);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x, y, z);

		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x, y, z);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x, y + height, z);

		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x, y + height, z);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x + width, y + height, z);

		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x + width, y + height, z);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x + width, y + height, z + depth);

		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x + width, y + height, z + depth);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x, y + height, z + depth);

		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x, y + height, z + depth);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x, y + height, z);

		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x + width, y, z);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x + width, y + height, z);

		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x + width, y, z + depth);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x + width, y + height, z + depth);

		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x, y, z + depth);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x, y + height, z + depth);
	} ##FSTMerge## public void box(float x, float y, float z, float width, float height, float depth){
		if (currType != ShapeType.Line) throw new GdxRuntimeException("Must call begin(ShapeType.Line)");
		
		checkDirty();
		checkFlush(16);
		
		depth = -depth;
		
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x, y, z);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x + width, y, z);

		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x + width, y, z);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x + width, y, z + depth);

		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x + width, y, z + depth);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x, y, z + depth);

		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x, y, z + depth);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x, y, z);

		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x, y, z);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x, y + height, z);

		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x, y + height, z);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x + width, y + height, z);

		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x + width, y + height, z);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x + width, y + height, z + depth);

		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x + width, y + height, z + depth);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x, y + height, z + depth);

		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x, y + height, z + depth);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x, y + height, z);

		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x + width, y, z);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x + width, y + height, z);

		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x + width, y, z + depth);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x + width, y + height, z + depth);

		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x, y, z + depth);
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x, y + height, z + depth);
	}
File path: /tmp/downloads/libgdx/revisions/rev_4e196_97613/rev_4e196-97613/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: ec4dfd31c0e3443399e459dd7bc5fc4e78b0261b
Parent1 SHA-1: 4e1968913ef57bc70f16db5118e181fcdc5eb45c
Parent2 SHA-1: 97613e2adc6b1c00eb7273463e3d75b276cdcfb9
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public void circle (float x, float y, float radius, int segments) {
		if (segments <= 0) throw new IllegalArgumentException("segments must be >= 0.");
		if (currType != ShapeType.Filled && currType != ShapeType.Line)
			throw new GdxRuntimeException("Must call begin(ShapeType.Filled) or begin(ShapeType.Line)");
		checkDirty();
		checkFlush(segments * 2 + 2);

		float angle = 2 * 3.1415926f / segments;
		float cos = MathUtils.cos(angle);
		float sin = MathUtils.sin(angle);
		float cx = radius, cy = 0;
		if (currType == ShapeType.Line) {
			for (int i = 0; i < segments; i++) {
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(x + cx, y + cy, 0);
				float temp = cx;
				cx = cos * cx - sin * cy;
				cy = sin * temp + cos * cy;
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(x + cx, y + cy, 0);
			}
			// Ensure the last segment is identical to the first.
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x + cx, y + cy, 0);
		} else {
			segments--;
			for (int i = 0; i < segments; i++) {
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(x, y, 0);
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(x + cx, y + cy, 0);
				float temp = cx;
				cx = cos * cx - sin * cy;
				cy = sin * temp + cos * cy;
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(x + cx, y + cy, 0);
			}
			// Ensure the last segment is identical to the first.
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x, y, 0);
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x + cx, y + cy, 0);
		}

		float temp = cx;
		cx = radius;
		cy = 0;
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x + cx, y + cy, 0);
	} ##FSTMerge## public void circle(float x, float y, float radius, int segments){
		if (segments <= 0) throw new IllegalArgumentException("segments must be >= 0.");
		if (currType != ShapeType.Filled && currType != ShapeType.Line) 
			throw new GdxRuntimeException("Must call begin(ShapeType.Filled) or begin(ShapeType.Line)");
		checkDirty();
		checkFlush(segments * 2 + 2);

		float angle = 2 * 3.1415926f / segments;
		float cos = MathUtils.cos(angle);
		float sin = MathUtils.sin(angle);
		float cx = radius, cy = 0;
		if(currType == ShapeType.Line){
			for (int i = 0; i < segments; i++) {
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(x + cx, y + cy, 0);
				float temp = cx;
				cx = cos * cx - sin * cy;
				cy = sin * temp + cos * cy;
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(x + cx, y + cy, 0);
			}
			// Ensure the last segment is identical to the first.
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x + cx, y + cy, 0);
		}
		else {
			segments--;
			for (int i = 0; i < segments; i++) {
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(x, y, 0);
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(x + cx, y + cy, 0);
				float temp = cx;
				cx = cos * cx - sin * cy;
				cy = sin * temp + cos * cy;
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(x + cx, y + cy, 0);
			}
			// Ensure the last segment is identical to the first.
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x, y, 0);
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x + cx, y + cy, 0);
		}
		
		float temp = cx;
		cx = radius;
		cy = 0;
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x + cx, y + cy, 0);
	} ##FSTMerge## public void circle(float x, float y, float radius, int segments){
		if (segments <= 0) throw new IllegalArgumentException("segments must be >= 0.");
		if (currType != ShapeType.Filled && currType != ShapeType.Line) 
			throw new GdxRuntimeException("Must call begin(ShapeType.Filled) or begin(ShapeType.Line)");
		checkDirty();
		checkFlush(segments * 2 + 2);

		float angle = 2 * 3.1415926f / segments;
		float cos = MathUtils.cos(angle);
		float sin = MathUtils.sin(angle);
		float cx = radius, cy = 0;
		if(currType == ShapeType.Line){
			for (int i = 0; i < segments; i++) {
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(x + cx, y + cy, 0);
				float temp = cx;
				cx = cos * cx - sin * cy;
				cy = sin * temp + cos * cy;
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(x + cx, y + cy, 0);
			}
			// Ensure the last segment is identical to the first.
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x + cx, y + cy, 0);
		}
		else {
			segments--;
			for (int i = 0; i < segments; i++) {
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(x, y, 0);
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(x + cx, y + cy, 0);
				float temp = cx;
				cx = cos * cx - sin * cy;
				cy = sin * temp + cos * cy;
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(x + cx, y + cy, 0);
			}
			// Ensure the last segment is identical to the first.
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x, y, 0);
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x + cx, y + cy, 0);
		}
		
		float temp = cx;
		cx = radius;
		cy = 0;
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x + cx, y + cy, 0);
	}
File path: /tmp/downloads/libgdx/revisions/rev_4e196_97613/rev_4e196-97613/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: ec4dfd31c0e3443399e459dd7bc5fc4e78b0261b
Parent1 SHA-1: 4e1968913ef57bc70f16db5118e181fcdc5eb45c
Parent2 SHA-1: 97613e2adc6b1c00eb7273463e3d75b276cdcfb9
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public void ellipse (float x, float y, float width, float height) {
		ellipse(x, y, width, height, (int)(12 * (float)Math.cbrt(Math.max(width * 0.5f, height * 0.5f))));
	} ##FSTMerge## public void ellipse(float x, float y, float width, float height) {
		ellipse(x, y, width, height, (int)(12 * (float) Math.cbrt(Math.max(width * 0.5f,  height * 0.5f))));
	} ##FSTMerge## public void ellipse(float x, float y, float width, float height) {
		ellipse(x, y, width, height, (int)(12 * (float) Math.cbrt(Math.max(width * 0.5f,  height * 0.5f))));
	}
File path: /tmp/downloads/libgdx/revisions/rev_4e196_97613/rev_4e196-97613/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: ec4dfd31c0e3443399e459dd7bc5fc4e78b0261b
Parent1 SHA-1: 4e1968913ef57bc70f16db5118e181fcdc5eb45c
Parent2 SHA-1: 97613e2adc6b1c00eb7273463e3d75b276cdcfb9
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public void ellipse (float x, float y, float width, float height, int segments) {
		if (segments <= 0) throw new IllegalArgumentException("segments must be >= 0.");
		if (currType != ShapeType.Filled && currType != ShapeType.Line)
			throw new GdxRuntimeException("Must call begin(ShapeType.Filled) or begin(ShapeType.Line)");
		checkDirty();
		checkFlush(segments * 2 + 2);

		float angle = 2 * 3.1415926f / segments;

		float cx = x + width / 2, cy = y + height / 2;
		if (currType == ShapeType.Line) {
			for (int i = 0; i < segments; i++) {
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(cx + (width * 0.5f * MathUtils.cos(i * angle)), cy + (height * 0.5f * MathUtils.sin(i * angle)), 0);

				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(cx + (width * 0.5f * MathUtils.cos((i + 1) * angle)),
					cy + (height * 0.5f * MathUtils.sin((i + 1) * angle)), 0);
			}
		} else {
			for (int i = 0; i < segments; i++) {
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(cx + (width * 0.5f * MathUtils.cos(i * angle)), cy + (height * 0.5f * MathUtils.sin(i * angle)), 0);

				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(cx, cy, 0);

				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(cx + (width * 0.5f * MathUtils.cos((i + 1) * angle)),
					cy + (height * 0.5f * MathUtils.sin((i + 1) * angle)), 0);
			}
		}
	} ##FSTMerge## public void ellipse(float x, float y, float width, float height, int segments) {
		if (segments <= 0) throw new IllegalArgumentException("segments must be >= 0.");
		if (currType != ShapeType.Filled && currType != ShapeType.Line) 
			throw new GdxRuntimeException("Must call begin(ShapeType.Filled) or begin(ShapeType.Line)");
		checkDirty();
		checkFlush(segments * 2 + 2);

		float angle = 2 * 3.1415926f / segments;

		float cx = x + width / 2, cy = y + height / 2;
		if(currType == ShapeType.Line){
			for (int i = 0; i < segments; i++) {
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(cx + (width * 0.5f * MathUtils.cos(i * angle)), cy + (height * 0.5f * MathUtils.sin(i * angle)), 0);
				
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(cx + (width * 0.5f * MathUtils.cos((i + 1) * angle)), cy + (height * 0.5f * MathUtils.sin((i + 1) * angle)), 0);
			}
		}
		else {
			for (int i = 0; i < segments; i++) {
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(cx + (width * 0.5f * MathUtils.cos(i * angle)), cy + (height * 0.5f * MathUtils.sin(i * angle)), 0);
			
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(cx, cy, 0);
				
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(cx + (width * 0.5f * MathUtils.cos((i + 1) * angle)), cy + (height * 0.5f * MathUtils.sin((i + 1) * angle)), 0);
			}
		}
	} ##FSTMerge## public void ellipse(float x, float y, float width, float height, int segments) {
		if (segments <= 0) throw new IllegalArgumentException("segments must be >= 0.");
		if (currType != ShapeType.Filled && currType != ShapeType.Line) 
			throw new GdxRuntimeException("Must call begin(ShapeType.Filled) or begin(ShapeType.Line)");
		checkDirty();
		checkFlush(segments * 2 + 2);

		float angle = 2 * 3.1415926f / segments;

		float cx = x + width / 2, cy = y + height / 2;
		if(currType == ShapeType.Line){
			for (int i = 0; i < segments; i++) {
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(cx + (width * 0.5f * MathUtils.cos(i * angle)), cy + (height * 0.5f * MathUtils.sin(i * angle)), 0);
				
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(cx + (width * 0.5f * MathUtils.cos((i + 1) * angle)), cy + (height * 0.5f * MathUtils.sin((i + 1) * angle)), 0);
			}
		}
		else {
			for (int i = 0; i < segments; i++) {
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(cx + (width * 0.5f * MathUtils.cos(i * angle)), cy + (height * 0.5f * MathUtils.sin(i * angle)), 0);
			
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(cx, cy, 0);
				
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(cx + (width * 0.5f * MathUtils.cos((i + 1) * angle)), cy + (height * 0.5f * MathUtils.sin((i + 1) * angle)), 0);
			}
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_4e196_97613/rev_4e196-97613/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: ec4dfd31c0e3443399e459dd7bc5fc4e78b0261b
Parent1 SHA-1: 4e1968913ef57bc70f16db5118e181fcdc5eb45c
Parent2 SHA-1: 97613e2adc6b1c00eb7273463e3d75b276cdcfb9
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public void cone (float x, float y, float z, float radius, float height, int segments) {
		if (segments <= 0) throw new IllegalArgumentException("segments must be >= 0.");
		if (currType != ShapeType.Filled && currType != ShapeType.Line)
			throw new GdxRuntimeException("Must call begin(ShapeType.Filled) or begin(ShapeType.Line)");
		checkDirty();
		checkFlush(segments * 4 + 2);
		float angle = 2 * 3.1415926f / segments;
		float cos = MathUtils.cos(angle);
		float sin = MathUtils.sin(angle);
		float cx = radius, cy = 0;
		if (currType == ShapeType.Line) {
			for (int i = 0; i < segments; i++) {
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(x + cx, y + cy, z);
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(x, y, z + height);
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(x + cx, y + cy, z);
				float temp = cx;
				cx = cos * cx - sin * cy;
				cy = sin * temp + cos * cy;
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(x + cx, y + cy, z);
			}
			// Ensure the last segment is identical to the first.
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x + cx, y + cy, z);
		} else {
			segments--;
			for (int i = 0; i < segments; i++) {
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(x, y, z);
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(x + cx, y + cy, z);
				float temp = cx;
				float temp2 = cy;
				cx = cos * cx - sin * cy;
				cy = sin * temp + cos * cy;
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(x + cx, y + cy, z);
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(x + temp, y + temp2, z);
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(x + cx, y + cy, z);
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(x, y, z + height);
			}
			// Ensure the last segment is identical to the first.
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x, y, z);
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x + cx, y + cy, z);
		}
		cx = radius;
		cy = 0;
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x + cx, y + cy, z);
	} ##FSTMerge## public void cone(float x, float y, float z, float radius, float height, int segments){
		if (segments <= 0) throw new IllegalArgumentException("segments must be >= 0.");
		if (currType != ShapeType.Filled && currType != ShapeType.Line) 
			throw new GdxRuntimeException("Must call begin(ShapeType.Filled) or begin(ShapeType.Line)");
		checkDirty();
		checkFlush(segments * 4 + 2);
		float angle = 2 * 3.1415926f / segments;
		float cos = MathUtils.cos(angle);
		float sin = MathUtils.sin(angle);
		float cx = radius, cy = 0;
		if(currType == ShapeType.Line){
			for (int i = 0; i < segments; i++) {
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(x + cx, y + cy, z);
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(x, y, z + height);
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(x + cx, y + cy, z);
				float temp = cx;
				cx = cos * cx - sin * cy;
				cy = sin * temp + cos * cy;
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(x + cx, y + cy, z);
			}
			// Ensure the last segment is identical to the first.
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x + cx, y + cy, z);
		}
		else {
			segments--;
			for (int i = 0; i < segments; i++) {
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(x, y, z);
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(x + cx, y + cy, z);
				float temp = cx;
				float temp2 = cy;
				cx = cos * cx - sin * cy;
				cy = sin * temp + cos * cy;
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(x + cx, y + cy, z);
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(x + temp, y + temp2, z);
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(x + cx, y + cy, z);
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(x, y, z + height);
			}
			// Ensure the last segment is identical to the first.
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x, y, z);
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x + cx, y + cy, z);
		}
		cx = radius;
		cy = 0;
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x + cx, y + cy, z);
	} ##FSTMerge## public void cone(float x, float y, float z, float radius, float height, int segments){
		if (segments <= 0) throw new IllegalArgumentException("segments must be >= 0.");
		if (currType != ShapeType.Filled && currType != ShapeType.Line) 
			throw new GdxRuntimeException("Must call begin(ShapeType.Filled) or begin(ShapeType.Line)");
		checkDirty();
		checkFlush(segments * 4 + 2);
		float angle = 2 * 3.1415926f / segments;
		float cos = MathUtils.cos(angle);
		float sin = MathUtils.sin(angle);
		float cx = radius, cy = 0;
		if(currType == ShapeType.Line){
			for (int i = 0; i < segments; i++) {
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(x + cx, y + cy, z);
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(x, y, z + height);
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(x + cx, y + cy, z);
				float temp = cx;
				cx = cos * cx - sin * cy;
				cy = sin * temp + cos * cy;
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(x + cx, y + cy, z);
			}
			// Ensure the last segment is identical to the first.
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x + cx, y + cy, z);
		}
		else {
			segments--;
			for (int i = 0; i < segments; i++) {
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(x, y, z);
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(x + cx, y + cy, z);
				float temp = cx;
				float temp2 = cy;
				cx = cos * cx - sin * cy;
				cy = sin * temp + cos * cy;
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(x + cx, y + cy, z);
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(x + temp, y + temp2, z);
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(x + cx, y + cy, z);
				renderer.color(color.r, color.g, color.b, color.a);
				renderer.vertex(x, y, z + height);
			}
			// Ensure the last segment is identical to the first.
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x, y, z);
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x + cx, y + cy, z);
		}
		cx = radius;
		cy = 0;
		renderer.color(color.r, color.g, color.b, color.a);
		renderer.vertex(x + cx, y + cy, z);
	}
File path: /tmp/downloads/libgdx/revisions/rev_4e196_97613/rev_4e196-97613/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: ec4dfd31c0e3443399e459dd7bc5fc4e78b0261b
Parent1 SHA-1: 4e1968913ef57bc70f16db5118e181fcdc5eb45c
Parent2 SHA-1: 97613e2adc6b1c00eb7273463e3d75b276cdcfb9
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public void polygon (float[] vertices) {
		polygon(vertices, 0, vertices.length);
	} ##FSTMerge## public void polygon(float[] vertices){
		if (currType != ShapeType.Line) throw new GdxRuntimeException("Must call begin(ShapeType.Line)");
		if (vertices.length < 6) throw new IllegalArgumentException("Polygons must contain at least 3 points.");
		if (vertices.length % 2 != 0) throw new IllegalArgumentException("Polygons must have a pair number of vertices.");
		final int numFloats = vertices.length;
		
		checkDirty();
		checkFlush(numFloats);
		
		float firstX = vertices[0];
		float firstY = vertices[1];
		
		for (int i = 0; i < numFloats; i += 2) {
			float x1 = vertices[i];
			float y1 = vertices[i + 1];
			
			float x2;
			float y2;
			
			if(i + 2 >= numFloats){
				x2 = firstX;
				y2 = firstY;
			}else{
				x2 = vertices[i + 2];
				y2 = vertices[i + 3];
			}
			
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x1, y1, 0);
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x2, y2, 0);
		}
	} ##FSTMerge## public void polygon(float[] vertices){
		if (currType != ShapeType.Line) throw new GdxRuntimeException("Must call begin(ShapeType.Line)");
		if (vertices.length < 6) throw new IllegalArgumentException("Polygons must contain at least 3 points.");
		if (vertices.length % 2 != 0) throw new IllegalArgumentException("Polygons must have a pair number of vertices.");
		final int numFloats = vertices.length;
		
		checkDirty();
		checkFlush(numFloats);
		
		float firstX = vertices[0];
		float firstY = vertices[1];
		
		for (int i = 0; i < numFloats; i += 2) {
			float x1 = vertices[i];
			float y1 = vertices[i + 1];
			
			float x2;
			float y2;
			
			if(i + 2 >= numFloats){
				x2 = firstX;
				y2 = firstY;
			}else{
				x2 = vertices[i + 2];
				y2 = vertices[i + 3];
			}
			
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x1, y1, 0);
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x2, y2, 0);
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_4e196_97613/rev_4e196-97613/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: ec4dfd31c0e3443399e459dd7bc5fc4e78b0261b
Parent1 SHA-1: 4e1968913ef57bc70f16db5118e181fcdc5eb45c
Parent2 SHA-1: 97613e2adc6b1c00eb7273463e3d75b276cdcfb9
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public void polyline (float[] vertices) {
		polyline(vertices, 0, vertices.length);
	} ##FSTMerge## public void polyline(float[] vertices) {
		if (currType != ShapeType.Line) throw new GdxRuntimeException("Must call begin(ShapeType.Line)");
		if (vertices.length < 4) throw new IllegalArgumentException("Polylines must contain at least 2 points.");
		if (vertices.length % 2 != 0) throw new IllegalArgumentException("Polylines must have a pair number of vertices.");
		final int numFloats = vertices.length;

		checkDirty();
		checkFlush(numFloats);

		for (int i = 0; i < numFloats - 2; i += 2) {
			float x1 = vertices[i];
			float y1 = vertices[i + 1];

			float x2;
			float y2;

			x2 = vertices[i + 2];
			y2 = vertices[i + 3];

			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x1, y1, 0);
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x2, y2, 0);
		}
	} ##FSTMerge## public void polyline(float[] vertices) {
		if (currType != ShapeType.Line) throw new GdxRuntimeException("Must call begin(ShapeType.Line)");
		if (vertices.length < 4) throw new IllegalArgumentException("Polylines must contain at least 2 points.");
		if (vertices.length % 2 != 0) throw new IllegalArgumentException("Polylines must have a pair number of vertices.");
		final int numFloats = vertices.length;

		checkDirty();
		checkFlush(numFloats);

		for (int i = 0; i < numFloats - 2; i += 2) {
			float x1 = vertices[i];
			float y1 = vertices[i + 1];

			float x2;
			float y2;

			x2 = vertices[i + 2];
			y2 = vertices[i + 3];

			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x1, y1, 0);
			renderer.color(color.r, color.g, color.b, color.a);
			renderer.vertex(x2, y2, 0);
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_4e196_97613/rev_4e196-97613/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: ec4dfd31c0e3443399e459dd7bc5fc4e78b0261b
Parent1 SHA-1: 4e1968913ef57bc70f16db5118e181fcdc5eb45c
Parent2 SHA-1: 97613e2adc6b1c00eb7273463e3d75b276cdcfb9
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_4e196_97613/rev_4e196-97613/gdx/src/com/badlogic/gdx/graphics/TextureRef.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: ec4dfd31c0e3443399e459dd7bc5fc4e78b0261b
Parent1 SHA-1: 4e1968913ef57bc70f16db5118e181fcdc5eb45c
Parent2 SHA-1: 97613e2adc6b1c00eb7273463e3d75b276cdcfb9
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public String Name; ##FSTMerge## public String Name;
File path: /tmp/downloads/libgdx/revisions/rev_4e196_97613/rev_4e196-97613/gdx/src/com/badlogic/gdx/graphics/TextureRef.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: ec4dfd31c0e3443399e459dd7bc5fc4e78b0261b
Parent1 SHA-1: 4e1968913ef57bc70f16db5118e181fcdc5eb45c
Parent2 SHA-1: 97613e2adc6b1c00eb7273463e3d75b276cdcfb9
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private int mRefCount; ##FSTMerge## private int mRefCount;
File path: /tmp/downloads/libgdx/revisions/rev_4e196_97613/rev_4e196-97613/gdx/src/com/badlogic/gdx/graphics/TextureRef.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: ec4dfd31c0e3443399e459dd7bc5fc4e78b0261b
Parent1 SHA-1: 4e1968913ef57bc70f16db5118e181fcdc5eb45c
Parent2 SHA-1: 97613e2adc6b1c00eb7273463e3d75b276cdcfb9
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Texture mTexture; ##FSTMerge## private Texture mTexture;
File path: /tmp/downloads/libgdx/revisions/rev_4e196_97613/rev_4e196-97613/gdx/src/com/badlogic/gdx/graphics/TextureRef.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: ec4dfd31c0e3443399e459dd7bc5fc4e78b0261b
Parent1 SHA-1: 4e1968913ef57bc70f16db5118e181fcdc5eb45c
Parent2 SHA-1: 97613e2adc6b1c00eb7273463e3d75b276cdcfb9
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public TextureRef (String name, Texture texture) {
		Name = name;
		mTexture = texture;
		mRefCount = 1;
	} ##FSTMerge## public TextureRef (String name, Texture texture) {
		Name = name;
		mTexture = texture;
		mRefCount = 1;
	}
File path: /tmp/downloads/libgdx/revisions/rev_4e196_97613/rev_4e196-97613/gdx/src/com/badlogic/gdx/graphics/TextureRef.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: ec4dfd31c0e3443399e459dd7bc5fc4e78b0261b
Parent1 SHA-1: 4e1968913ef57bc70f16db5118e181fcdc5eb45c
Parent2 SHA-1: 97613e2adc6b1c00eb7273463e3d75b276cdcfb9
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void addRef () {
		mRefCount++;
	} ##FSTMerge## public void addRef () {
		mRefCount++;
	}
File path: /tmp/downloads/libgdx/revisions/rev_4e196_97613/rev_4e196-97613/gdx/src/com/badlogic/gdx/graphics/TextureRef.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: ec4dfd31c0e3443399e459dd7bc5fc4e78b0261b
Parent1 SHA-1: 4e1968913ef57bc70f16db5118e181fcdc5eb45c
Parent2 SHA-1: 97613e2adc6b1c00eb7273463e3d75b276cdcfb9
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int unload () {
		if (--mRefCount == 0) {
			mTexture.dispose();
			mTexture = null;
			// Note: This doesn't seem the best way to do this, but it works. Re-factoring welcome :)
			TextureDict.removeTexture(Name);
		}
		return mRefCount;
	} ##FSTMerge## public int unload () {
		if (--mRefCount == 0) {
			mTexture.dispose();
			mTexture = null;
			// Note: This doesn't seem the best way to do this, but it works. Re-factoring welcome :)
			TextureDict.removeTexture(Name);
		}
		return mRefCount;
	}
File path: /tmp/downloads/libgdx/revisions/rev_4e196_97613/rev_4e196-97613/gdx/src/com/badlogic/gdx/graphics/TextureRef.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: ec4dfd31c0e3443399e459dd7bc5fc4e78b0261b
Parent1 SHA-1: 4e1968913ef57bc70f16db5118e181fcdc5eb45c
Parent2 SHA-1: 97613e2adc6b1c00eb7273463e3d75b276cdcfb9
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void dispose () {
		mTexture.dispose();
	} ##FSTMerge## public void dispose () {
		mTexture.dispose();
	}
File path: /tmp/downloads/libgdx/revisions/rev_4e196_97613/rev_4e196-97613/gdx/src/com/badlogic/gdx/graphics/TextureRef.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: ec4dfd31c0e3443399e459dd7bc5fc4e78b0261b
Parent1 SHA-1: 4e1968913ef57bc70f16db5118e181fcdc5eb45c
Parent2 SHA-1: 97613e2adc6b1c00eb7273463e3d75b276cdcfb9
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void bind () {
		mTexture.bind();
	} ##FSTMerge## public void bind () {
		mTexture.bind();
	}
File path: /tmp/downloads/libgdx/revisions/rev_4e196_97613/rev_4e196-97613/gdx/src/com/badlogic/gdx/graphics/TextureRef.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: ec4dfd31c0e3443399e459dd7bc5fc4e78b0261b
Parent1 SHA-1: 4e1968913ef57bc70f16db5118e181fcdc5eb45c
Parent2 SHA-1: 97613e2adc6b1c00eb7273463e3d75b276cdcfb9
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Texture get () {
		return mTexture;
	} ##FSTMerge## public Texture get () {
		return mTexture;
	}
File path: /tmp/downloads/libgdx/revisions/rev_4e196_97613/rev_4e196-97613/gdx/src/com/badlogic/gdx/graphics/TextureRef.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: ec4dfd31c0e3443399e459dd7bc5fc4e78b0261b
Parent1 SHA-1: 4e1968913ef57bc70f16db5118e181fcdc5eb45c
Parent2 SHA-1: 97613e2adc6b1c00eb7273463e3d75b276cdcfb9
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_4e196_97613/rev_4e196-97613/gdx/src/com/badlogic/gdx/graphics/TextureDict.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: ec4dfd31c0e3443399e459dd7bc5fc4e78b0261b
Parent1 SHA-1: 4e1968913ef57bc70f16db5118e181fcdc5eb45c
Parent2 SHA-1: 97613e2adc6b1c00eb7273463e3d75b276cdcfb9
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static ObjectMap<String, TextureRef> sDictionary = new ObjectMap<String, TextureRef>(); ##FSTMerge## private static ObjectMap<String, TextureRef> sDictionary = new ObjectMap<String, TextureRef>();
File path: /tmp/downloads/libgdx/revisions/rev_4e196_97613/rev_4e196-97613/gdx/src/com/badlogic/gdx/graphics/TextureDict.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: ec4dfd31c0e3443399e459dd7bc5fc4e78b0261b
Parent1 SHA-1: 4e1968913ef57bc70f16db5118e181fcdc5eb45c
Parent2 SHA-1: 97613e2adc6b1c00eb7273463e3d75b276cdcfb9
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static TextureRef loadTexture (String path) {
		return loadTexture(path, TextureFilter.MipMap, TextureFilter.Linear, TextureWrap.ClampToEdge, TextureWrap.ClampToEdge);
	} ##FSTMerge## public static TextureRef loadTexture (String path) {
		return loadTexture(path, TextureFilter.MipMap, TextureFilter.Linear, TextureWrap.ClampToEdge, TextureWrap.ClampToEdge);
	}
File path: /tmp/downloads/libgdx/revisions/rev_4e196_97613/rev_4e196-97613/gdx/src/com/badlogic/gdx/graphics/TextureDict.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: ec4dfd31c0e3443399e459dd7bc5fc4e78b0261b
Parent1 SHA-1: 4e1968913ef57bc70f16db5118e181fcdc5eb45c
Parent2 SHA-1: 97613e2adc6b1c00eb7273463e3d75b276cdcfb9
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static TextureRef loadTexture (String path, TextureFilter minFilter, TextureFilter magFilter, TextureWrap uwrap,
		TextureWrap vwrap) {
		if (sDictionary.containsKey(path)) {
			TextureRef ref = sDictionary.get(path);
			ref.addRef();
			return ref;
		}
		// load new texture
		FileHandle texFile = Gdx.app.getFiles().getFileHandle(path, FileType.Internal);
		Texture newTex = new Texture(texFile, minFilter.isMipMap() || magFilter.isMipMap() ? true : false);
		newTex.setFilter(minFilter, magFilter);
		newTex.setWrap(uwrap, vwrap);
		TextureRef ref = new TextureRef(path, newTex);
		sDictionary.put(path, ref);
		return ref;
	} ##FSTMerge## public static TextureRef loadTexture (String path, TextureFilter minFilter, TextureFilter magFilter, TextureWrap uwrap,
		TextureWrap vwrap) {
		if (sDictionary.containsKey(path)) {
			TextureRef ref = sDictionary.get(path);
			ref.addRef();
			return ref;
		}
		// load new texture
		FileHandle texFile = Gdx.app.getFiles().getFileHandle(path, FileType.Internal);
		Texture newTex = new Texture(texFile, minFilter.isMipMap() || magFilter.isMipMap() ? true : false);
		newTex.setFilter(minFilter, magFilter);
		newTex.setWrap(uwrap, vwrap);
		TextureRef ref = new TextureRef(path, newTex);
		sDictionary.put(path, ref);
		return ref;
	}
File path: /tmp/downloads/libgdx/revisions/rev_4e196_97613/rev_4e196-97613/gdx/src/com/badlogic/gdx/graphics/TextureDict.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: ec4dfd31c0e3443399e459dd7bc5fc4e78b0261b
Parent1 SHA-1: 4e1968913ef57bc70f16db5118e181fcdc5eb45c
Parent2 SHA-1: 97613e2adc6b1c00eb7273463e3d75b276cdcfb9
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static void removeTexture (String path) {
		sDictionary.remove(path);
	} ##FSTMerge## public static void removeTexture (String path) {
		sDictionary.remove(path);
	}
File path: /tmp/downloads/libgdx/revisions/rev_4e196_97613/rev_4e196-97613/gdx/src/com/badlogic/gdx/graphics/TextureDict.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: ec4dfd31c0e3443399e459dd7bc5fc4e78b0261b
Parent1 SHA-1: 4e1968913ef57bc70f16db5118e181fcdc5eb45c
Parent2 SHA-1: 97613e2adc6b1c00eb7273463e3d75b276cdcfb9
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static void unloadAll () {
		for (TextureRef tex : sDictionary.values()) {
			tex.dispose();
		}
		sDictionary.clear();
	} ##FSTMerge## public static void unloadAll () {
		for (TextureRef tex : sDictionary.values()) {
			tex.dispose();
		}
		sDictionary.clear();
	}
File path: /tmp/downloads/libgdx/revisions/rev_4e196_97613/rev_4e196-97613/gdx/src/com/badlogic/gdx/graphics/TextureDict.java

==================================================================================================================
Revision: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396.revisions
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public static final List<Class<? extends GdxTest>> tests = new ArrayList<Class<? extends GdxTest>>(Arrays.asList(
		AnimationTest.class, AccelerometerTest.class, ActionTest.class, ActionSequenceTest.class,
		GroupTest.class, AlphaTest.class, AtlasIssueTest.class, AssetManagerTest.class, FilterPerformanceTest.class,
		AudioDeviceTest.class, AudioRecorderTest.class, BitmapFontAlignmentTest.class, BitmapFontDistanceFieldTest.class, BitmapFontFlipTest.class,
		GroupCullingTest.class, GestureDetectorTest.class, LabelTest.class, BitmapFontMetricsTest.class, BlitTest.class, TableTest.class,
		BobTest.class, ImageScaleTest.class, TableLayoutTest.class, Box2DTest.class, BulletTestCollection.class, InterpolationTest.class, TouchpadTest.class,
		Box2DTestCollection.class, BufferUtilsTest.class, ImageTest.class, CompassTest.class, ComplexActionTest.class,
		CullTest.class, DeltaTimeTest.class, EdgeDetectionTest.class, ETC1Test.class, ExitTest.class, FilesTest.class,
		ScrollPaneTest.class, FloatTest.class, FloatTextureTest.class, FrameBufferTest.class, FramebufferToTextureTest.class, FrustumTest.class,
		FullscreenTest.class, Gdx2DTest.class, GroupFadeTest.class, ImmediateModeRendererTest.class, Scene2dTest.class,
		ImmediateModeRendererAlphaTest.class, IndexBufferObjectClassTest.class, TreeTest.class, IndexBufferObjectShaderTest.class,
		InputTest.class, IntegerBitmapFontTest.class, InverseKinematicsTest.class, IsoCamTest.class, IsometricTileTest.class,
		KinematicBodyTest.class, LifeCycleTest.class, LineDrawingTest.class, ScrollPane2Test.class, ManagedTest.class,
		ManualBindTest.class, MaterialTest.class, MatrixJNITest.class, MeshMultitextureTest.class, MeshShaderTest.class, MeshTest.class,
		MipMapTest.class, MultitouchTest.class, MusicTest.class, MyFirstTriangle.class, ObjTest.class, OnscreenKeyboardTest.class,
		OrthoCamBorderTest.class, ParallaxTest.class, ParticleEmitterTest.class, PickingTest.class, PixelsPerInchTest.class,
		PixmapBlendingTest.class, PixmapTest.class, PixmapPackerTest.class, PolygonRegionTest.class, PolygonSpriteTest.class, PreferencesTest.class,
		ProjectiveTextureTest.class, Pong.class, ProjectTest.class, RemoteTest.class, RotationTest.class, DragAndDropTest.class,
		ShaderMultitextureTest.class, ShadowMappingTest.class, PathTest.class, SimpleAnimationTest.class, SimpleDecalTest.class,
		SimpleStageCullingTest.class, SoundTest.class, SpriteCacheTest.class, SpriteCacheOffsetTest.class, LetterBoxTest.class,
		SpriteBatchRotationTest.class, SpriteBatchShaderTest.class, SpriteBatchTest.class, SpritePerformanceTest.class,
		SpritePerformanceTest2.class, StagePerformanceTest.class, StageTest.class, TerrainTest.class, TextureDataTest.class,
		TextureDownloadTest.class, TextureFormatTest.class, TextureAtlasTest.class, TextInputDialogTest.class,
		TextureRenderTest.class, TileTest.class, UITest.class, VBOVATest.class, VertexArrayTest.class,
		VertexBufferObjectTest.class, VertexArrayClassTest.class, VertexBufferObjectClassTest.class, LetterBoxTest2.class,
		VertexBufferObjectShaderTest.class, VibratorTest.class, WaterRipples.class, HelloTriangle.class,
		SimpleVertexShader.class, ShapeRendererTest.class, MoveSpriteExample.class, UISimpleTest.class,
		// SoundTouchTest.class, Mpg123Test.class, WavTest.class, FreeTypeTest.class,
		// InternationalFontsTest.class, VorbisTest.class
		TextButtonTest.class, TextButtonTestGL2.class, TextureBindTest.class, SortedSpriteTest.class,
		ExternalMusicTest.class, SoftKeyboardTest.class, DirtyRenderingTest.class, YDownTest.class,
		ScreenCaptureTest.class, BitmapFontTest.class, LabelScaleTest.class, GamepadTest.class, NetAPITest.class, TideMapAssetManagerTest.class, TideMapDirectLoaderTest.class, TiledMapAssetManagerTest.class, TiledMapBench.class,
		RunnablePostTest.class, Vector2dTest.class, SuperKoalio.class, NinePatchTest.class,
		JsonModelLoaderTest.class, BatchRenderTest.class, NewModelTest.class)); ##FSTMerge## public static final List<Class<? extends GdxTest>> tests = new ArrayList<Class<? extends GdxTest>>(Arrays.asList(
		AnimationTest.class, AccelerometerTest.class, ActionTest.class, ActionSequenceTest.class,
		GroupTest.class, AlphaTest.class, AtlasIssueTest.class, AssetManagerTest.class, FilterPerformanceTest.class,
		AudioDeviceTest.class, AudioRecorderTest.class, BitmapFontAlignmentTest.class, BitmapFontDistanceFieldTest.class, BitmapFontFlipTest.class,
		GroupCullingTest.class, GestureDetectorTest.class, LabelTest.class, BitmapFontMetricsTest.class, BlitTest.class, TableTest.class,
		BobTest.class, ImageScaleTest.class, TableLayoutTest.class, Box2DTest.class, BulletTestCollection.class, InterpolationTest.class, TouchpadTest.class,
		Box2DTestCollection.class, BufferUtilsTest.class, ImageTest.class, CompassTest.class, ComplexActionTest.class,
		CullTest.class, DeltaTimeTest.class, EdgeDetectionTest.class, ETC1Test.class, ExitTest.class, FilesTest.class,
		ScrollPaneTest.class, FloatTest.class, FloatTextureTest.class, FrameBufferTest.class, FramebufferToTextureTest.class, FrustumTest.class,
		FullscreenTest.class, Gdx2DTest.class, GroupFadeTest.class, ImmediateModeRendererTest.class, Scene2dTest.class,
		ImmediateModeRendererAlphaTest.class, IndexBufferObjectClassTest.class, TreeTest.class, IndexBufferObjectShaderTest.class,
		InputTest.class, IntegerBitmapFontTest.class, InverseKinematicsTest.class, IsoCamTest.class, IsometricTileTest.class,
		KinematicBodyTest.class, LifeCycleTest.class, LineDrawingTest.class, ScrollPane2Test.class, ManagedTest.class,
		ManualBindTest.class, MaterialTest.class, MatrixJNITest.class, MeshMultitextureTest.class, MeshShaderTest.class, MeshTest.class,
		MipMapTest.class, MultitouchTest.class, MusicTest.class, MyFirstTriangle.class, ObjTest.class, OnscreenKeyboardTest.class,
		OrthoCamBorderTest.class, ParallaxTest.class, ParticleEmitterTest.class, PickingTest.class, PixelsPerInchTest.class,
		PixmapBlendingTest.class, PixmapTest.class, PixmapPackerTest.class, PolygonRegionTest.class, PolygonSpriteTest.class, PreferencesTest.class,
		ProjectiveTextureTest.class, Pong.class, ProjectTest.class, RemoteTest.class, RotationTest.class, DragAndDropTest.class,
		ShaderMultitextureTest.class, ShadowMappingTest.class, PathTest.class, SimpleAnimationTest.class, SimpleDecalTest.class,
		SimpleStageCullingTest.class, SoundTest.class, SpriteCacheTest.class, SpriteCacheOffsetTest.class, LetterBoxTest.class,
		SpriteBatchRotationTest.class, SpriteBatchShaderTest.class, SpriteBatchTest.class, SpritePerformanceTest.class,
		SpritePerformanceTest2.class, StagePerformanceTest.class, StageTest.class, TerrainTest.class, TextureDataTest.class,
		TextureDownloadTest.class, TextureFormatTest.class, TextureAtlasTest.class, TextInputDialogTest.class,
		TextureRenderTest.class, TileTest.class, UITest.class, VBOVATest.class, VertexArrayTest.class,
		VertexBufferObjectTest.class, VertexArrayClassTest.class, VertexBufferObjectClassTest.class, LetterBoxTest2.class,
		VertexBufferObjectShaderTest.class, VibratorTest.class, WaterRipples.class, HelloTriangle.class,
		SimpleVertexShader.class, ShapeRendererTest.class, MoveSpriteExample.class, UISimpleTest.class,
		// SoundTouchTest.class, Mpg123Test.class, WavTest.class, FreeTypeTest.class,
		// InternationalFontsTest.class, VorbisTest.class
		TextButtonTest.class, TextButtonTestGL2.class, TextureBindTest.class, SortedSpriteTest.class,
		ExternalMusicTest.class, SoftKeyboardTest.class, DirtyRenderingTest.class, YDownTest.class,
		ScreenCaptureTest.class, BitmapFontTest.class, LabelScaleTest.class, GamepadTest.class, NetAPITest.class, TideMapAssetManagerTest.class, TideMapDirectLoaderTest.class, TiledMapAssetManagerTest.class, TiledMapBench.class,
		RunnablePostTest.class, Vector2dTest.class, SuperKoalio.class, NinePatchTest.class)); ##FSTMerge## public static final List<Class<? extends GdxTest>> tests = new ArrayList<Class<? extends GdxTest>>(Arrays.asList(
		AnimationTest.class, AccelerometerTest.class, ActionTest.class, ActionSequenceTest.class,
		GroupTest.class, AlphaTest.class, AtlasIssueTest.class, AssetManagerTest.class, FilterPerformanceTest.class,
		AudioDeviceTest.class, AudioRecorderTest.class, BitmapFontAlignmentTest.class, BitmapFontDistanceFieldTest.class, BitmapFontFlipTest.class,
		GroupCullingTest.class, GestureDetectorTest.class, LabelTest.class, BitmapFontMetricsTest.class, BlitTest.class, TableTest.class,
		BobTest.class, ImageScaleTest.class, TableLayoutTest.class, Box2DTest.class, BulletTestCollection.class, InterpolationTest.class, TouchpadTest.class,
		Box2DTestCollection.class, BufferUtilsTest.class, ImageTest.class, CompassTest.class, ComplexActionTest.class,
		CullTest.class, DeltaTimeTest.class, EdgeDetectionTest.class, ETC1Test.class, ExitTest.class, FilesTest.class,
		ScrollPaneTest.class, FloatTest.class, FloatTextureTest.class, FrameBufferTest.class, FramebufferToTextureTest.class, FrustumTest.class,
		FullscreenTest.class, Gdx2DTest.class, GroupFadeTest.class, ImmediateModeRendererTest.class, Scene2dTest.class,
		ImmediateModeRendererAlphaTest.class, IndexBufferObjectClassTest.class, TreeTest.class, IndexBufferObjectShaderTest.class,
		InputTest.class, IntegerBitmapFontTest.class, InverseKinematicsTest.class, IsoCamTest.class, IsometricTileTest.class,
		KinematicBodyTest.class, LifeCycleTest.class, LineDrawingTest.class, ScrollPane2Test.class, ManagedTest.class,
		ManualBindTest.class, MaterialTest.class, MatrixJNITest.class, MeshMultitextureTest.class, MeshShaderTest.class, MeshTest.class,
		MipMapTest.class, MultitouchTest.class, MusicTest.class, MyFirstTriangle.class, ObjTest.class, OnscreenKeyboardTest.class,
		OrthoCamBorderTest.class, ParallaxTest.class, ParticleEmitterTest.class, PickingTest.class, PixelsPerInchTest.class,
		PixmapBlendingTest.class, PixmapTest.class, PixmapPackerTest.class, PolygonRegionTest.class, PolygonSpriteTest.class, PreferencesTest.class,
		ProjectiveTextureTest.class, Pong.class, ProjectTest.class, RemoteTest.class, RotationTest.class, DragAndDropTest.class,
		ShaderMultitextureTest.class, ShadowMappingTest.class, PathTest.class, SimpleAnimationTest.class, SimpleDecalTest.class,
		SimpleStageCullingTest.class, SoundTest.class, SpriteCacheTest.class, SpriteCacheOffsetTest.class, LetterBoxTest.class,
		SpriteBatchRotationTest.class, SpriteBatchShaderTest.class, SpriteBatchTest.class, SpritePerformanceTest.class,
		SpritePerformanceTest2.class, StagePerformanceTest.class, StageTest.class, TerrainTest.class, TextureDataTest.class,
		TextureDownloadTest.class, TextureFormatTest.class, TextureAtlasTest.class, TextInputDialogTest.class,
		TextureRenderTest.class, TileTest.class, UITest.class, VBOVATest.class, VertexArrayTest.class,
		VertexBufferObjectTest.class, VertexArrayClassTest.class, VertexBufferObjectClassTest.class, LetterBoxTest2.class,
		VertexBufferObjectShaderTest.class, VibratorTest.class, WaterRipples.class, HelloTriangle.class,
		SimpleVertexShader.class, ShapeRendererTest.class, MoveSpriteExample.class, UISimpleTest.class,
		// SoundTouchTest.class, Mpg123Test.class, WavTest.class, FreeTypeTest.class,
		// InternationalFontsTest.class, VorbisTest.class
		TextButtonTest.class, TextButtonTestGL2.class, TextureBindTest.class, SortedSpriteTest.class,
		ExternalMusicTest.class, SoftKeyboardTest.class, DirtyRenderingTest.class, YDownTest.class,
		ScreenCaptureTest.class, BitmapFontTest.class, LabelScaleTest.class, GamepadTest.class, NetAPITest.class, TideMapAssetManagerTest.class, TideMapDirectLoaderTest.class, TiledMapAssetManagerTest.class, TiledMapBench.class,
		RunnablePostTest.class, Vector2dTest.class, SuperKoalio.class, NinePatchTest.class, HexagonalTiledMapTest.class));
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/tests/gdx-tests/src/com/badlogic/gdx/tests/utils/GdxTests.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public void create () {
		super.create();
		instructions = "Tap to shoot\nDrag ragdoll to pick\nLong press to toggle debug mode\nSwipe for next test\nCtrl+drag to rotate\nScroll to zoom";
		
		camera.position.set(4f, 2f, 4f);
		camera.lookAt(0f, 1f, 0f);
		camera.update();
		
		world.addConstructor("pelvis", new BulletConstructor(createCapsuleModel(0.15f, 0.2f), 1f, new btCapsuleShape(0.15f, 0.2f)));
		world.addConstructor("spine", new BulletConstructor(createCapsuleModel(0.15f, 0.28f), 1f, new btCapsuleShape(0.15f, 0.28f)));
		world.addConstructor("head", new BulletConstructor(createCapsuleModel(0.1f, 0.05f), 1f, new btCapsuleShape(0.1f, 0.05f)));
		world.addConstructor("upperleg", new BulletConstructor(createCapsuleModel(0.07f, 0.45f), 1f, new btCapsuleShape(0.07f, 0.45f)));
		world.addConstructor("lowerleg", new BulletConstructor(createCapsuleModel(0.05f, 0.37f), 1f, new btCapsuleShape(0.05f, 0.37f)));
		world.addConstructor("upperarm", new BulletConstructor(createCapsuleModel(0.05f, 0.33f), 1f, new btCapsuleShape(0.05f, 0.33f)));
		world.addConstructor("lowerarm", new BulletConstructor(createCapsuleModel(0.04f, 0.25f), 1f, new btCapsuleShape(0.04f, 0.25f)));
		
		world.add("ground", 0f, 0f, 0f)
			.setColor(0.25f + 0.5f * (float)Math.random(), 0.25f + 0.5f * (float)Math.random(), 0.25f + 0.5f * (float)Math.random(), 1f);
		
		addRagdoll(0, 3f, 0);
		addRagdoll(1f, 6f, 0);
		addRagdoll(-1f, 12f, 0);
	} ##FSTMerge## @Override
	public void create () {
		super.create();
		instructions = "Tap to shoot\nDrag ragdoll to pick\nLong press to toggle debug mode\nSwipe for next test";
		
		camera.position.set(4f, 2f, 4f);
		camera.lookAt(0f, 1f, 0f);
		camera.update();
		
		world.addConstructor("pelvis", new BulletConstructor(createCapsuleModel(0.15f, 0.2f), 1f, new btCapsuleShape(0.15f, 0.2f)));
		world.addConstructor("spine", new BulletConstructor(createCapsuleModel(0.15f, 0.28f), 1f, new btCapsuleShape(0.15f, 0.28f)));
		world.addConstructor("head", new BulletConstructor(createCapsuleModel(0.1f, 0.05f), 1f, new btCapsuleShape(0.1f, 0.05f)));
		world.addConstructor("upperleg", new BulletConstructor(createCapsuleModel(0.07f, 0.45f), 1f, new btCapsuleShape(0.07f, 0.45f)));
		world.addConstructor("lowerleg", new BulletConstructor(createCapsuleModel(0.05f, 0.37f), 1f, new btCapsuleShape(0.05f, 0.37f)));
		world.addConstructor("upperarm", new BulletConstructor(createCapsuleModel(0.05f, 0.33f), 1f, new btCapsuleShape(0.05f, 0.33f)));
		world.addConstructor("lowerarm", new BulletConstructor(createCapsuleModel(0.04f, 0.25f), 1f, new btCapsuleShape(0.04f, 0.25f)));
		
		world.add("ground", 0f, 0f, 0f)
			.color.set(0.25f + 0.5f * (float)Math.random(), 0.25f + 0.5f * (float)Math.random(), 0.25f + 0.5f * (float)Math.random(), 1f);
		
		addRagdoll(0, 3f, 0);
		addRagdoll(1f, 6f, 0);
		addRagdoll(-1f, 12f, 0);
	} ##FSTMerge## @Override
	public void create () {
		super.create();
		instructions = "Tap to shoot\nDrag ragdoll to pick\nLong press to toggle debug mode\nSwipe for next test";
		
		camera.position.set(4f, 2f, 4f);
		camera.lookAt(0f, 1f, 0f);
		camera.update();
		
		world.addConstructor("pelvis", new BulletConstructor(createCapsuleModel(0.15f, 0.2f), 1f, new btCapsuleShape(0.15f, 0.2f)));
		world.addConstructor("spine", new BulletConstructor(createCapsuleModel(0.15f, 0.28f), 1f, new btCapsuleShape(0.15f, 0.28f)));
		world.addConstructor("head", new BulletConstructor(createCapsuleModel(0.1f, 0.05f), 1f, new btCapsuleShape(0.1f, 0.05f)));
		world.addConstructor("upperleg", new BulletConstructor(createCapsuleModel(0.07f, 0.45f), 1f, new btCapsuleShape(0.07f, 0.45f)));
		world.addConstructor("lowerleg", new BulletConstructor(createCapsuleModel(0.05f, 0.37f), 1f, new btCapsuleShape(0.05f, 0.37f)));
		world.addConstructor("upperarm", new BulletConstructor(createCapsuleModel(0.05f, 0.33f), 1f, new btCapsuleShape(0.05f, 0.33f)));
		world.addConstructor("lowerarm", new BulletConstructor(createCapsuleModel(0.04f, 0.25f), 1f, new btCapsuleShape(0.04f, 0.25f)));
		
		world.add("ground", 0f, 0f, 0f)
			.color.set(0.25f + 0.5f * (float)Math.random(), 0.25f + 0.5f * (float)Math.random(), 0.25f + 0.5f * (float)Math.random(), 1f);
		
		addRagdoll(0, 3f, 0);
		addRagdoll(1f, 6f, 0);
		addRagdoll(-1f, 12f, 0);
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/RayPickRagdollTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public void addRagdoll(final float x, final float y, final float z) {
		final Matrix4 tmpM = new Matrix4();
		btRigidBody pelvis = (btRigidBody)world.add("pelvis", x, y+1, z).body;
		btRigidBody spine = (btRigidBody)world.add("spine", x, y+1.2f, z).body;
		btRigidBody head = (btRigidBody)world.add("head", x, y+1.6f, z).body;
		btRigidBody leftupperleg = (btRigidBody)world.add("upperleg", x-0.18f, y+0.65f, z).body;
		btRigidBody leftlowerleg = (btRigidBody)world.add("lowerleg", x-0.18f, y+0.2f, z).body;
		btRigidBody rightupperleg = (btRigidBody)world.add("upperleg", x+0.18f, y+0.65f, z).body;
		btRigidBody rightlowerleg = (btRigidBody)world.add("lowerleg", x+0.18f, y+0.2f, z).body;		
		btRigidBody leftupperarm = (btRigidBody)world.add("upperarm", tmpM.setFromEulerAngles(PI2, 0, 0).trn(x-0.35f, y+1.45f, z)).body;
		btRigidBody leftlowerarm = (btRigidBody)world.add("lowerarm", tmpM.setFromEulerAngles(PI2, 0, 0).trn(x-0.7f, y+1.45f, z)).body;
		btRigidBody rightupperarm = (btRigidBody)world.add("upperarm", tmpM.setFromEulerAngles(-PI2, 0, 0).trn(x+0.35f, y+1.45f, z)).body;
		btRigidBody rightlowerarm = (btRigidBody)world.add("lowerarm", tmpM.setFromEulerAngles(-PI2, 0, 0).trn(x+0.7f, y+1.45f, z)).body;

		final Matrix4 localA = new Matrix4();
		final Matrix4 localB = new Matrix4();
		btHingeConstraint hingeC = null;
		btConeTwistConstraint coneC = null;
		
		// PelvisSpine
		localA.setFromEulerAngles(0, PI2, 0).trn(0, 0.15f, 0);
		localB.setFromEulerAngles(0, PI2, 0).trn(0, -0.15f, 0);
		constraints.add(hingeC = new btHingeConstraint(pelvis, spine, localA, localB));
		hingeC.setLimit(-PI4, PI2);
		((btDynamicsWorld)world.collisionWorld).addConstraint(hingeC, true);
		
		// SpineHead
		localA.setFromEulerAngles(PI2, 0, 0).trn(0, 0.3f, 0);
		localB.setFromEulerAngles(PI2, 0, 0).trn(0, -0.14f, 0);
		constraints.add(coneC = new btConeTwistConstraint(spine, head, localA, localB));
		coneC.setLimit(PI4, PI4, PI2);
		((btDynamicsWorld)world.collisionWorld).addConstraint(coneC, true);
		
		// LeftHip
		localA.setFromEulerAngles(-PI4*5f, 0, 0).trn(-0.18f, -0.1f, 0);
		localB.setFromEulerAngles(-PI4*5f, 0, 0).trn(0, 0.225f, 0);
		constraints.add(coneC = new btConeTwistConstraint(pelvis, leftupperleg, localA, localB));
		coneC.setLimit(PI4, PI4, 0);
		((btDynamicsWorld)world.collisionWorld).addConstraint(coneC, true);
		
		// LeftKnee
		localA.setFromEulerAngles(0, PI2, 0).trn(0, -0.225f, 0);
		localB.setFromEulerAngles(0, PI2, 0).trn(0, 0.185f, 0);
		constraints.add(hingeC = new btHingeConstraint(leftupperleg, leftlowerleg, localA, localB));
		hingeC.setLimit(0, PI2);
		((btDynamicsWorld)world.collisionWorld).addConstraint(hingeC, true);
		
		// RightHip
		localA.setFromEulerAngles(-PI4*5f, 0, 0).trn(0.18f, -0.1f, 0);
		localB.setFromEulerAngles(-PI4*5f, 0, 0).trn(0, 0.225f, 0);
		constraints.add(coneC = new btConeTwistConstraint(pelvis, rightupperleg, localA, localB));
		coneC.setLimit(PI4, PI4, 0);
		((btDynamicsWorld)world.collisionWorld).addConstraint(coneC, true);
		
		// RightKnee
		localA.setFromEulerAngles(0, PI2, 0).trn(0, -0.225f, 0);
		localB.setFromEulerAngles(0, PI2, 0).trn(0, 0.185f, 0);
		constraints.add(hingeC = new btHingeConstraint(rightupperleg, rightlowerleg, localA, localB));
		hingeC.setLimit(0, PI2);
		((btDynamicsWorld)world.collisionWorld).addConstraint(hingeC, true);
		
		// LeftShoulder
		localA.setFromEulerAngles(PI, 0, 0).trn(-0.2f, 0.15f, 0);
		localB.setFromEulerAngles(PI2, 0, 0).trn(0, -0.18f, 0);
		constraints.add(coneC = new btConeTwistConstraint(pelvis, leftupperarm, localA, localB));
		coneC.setLimit(PI2, PI2, 0);
		((btDynamicsWorld)world.collisionWorld).addConstraint(coneC, true);
		
		// LeftElbow
		localA.setFromEulerAngles(0, PI2, 0).trn(0, 0.18f, 0);
		localB.setFromEulerAngles(0, PI2, 0).trn(0, -0.14f, 0);
		constraints.add(hingeC = new btHingeConstraint(leftupperarm, leftlowerarm, localA, localB));
		hingeC.setLimit(0, PI2);
		((btDynamicsWorld)world.collisionWorld).addConstraint(hingeC, true);
		
		// RightShoulder
		localA.setFromEulerAngles(PI, 0, 0).trn(0.2f, 0.15f, 0);
		localB.setFromEulerAngles(PI2, 0, 0).trn(0, -0.18f, 0);
		constraints.add(coneC = new btConeTwistConstraint(pelvis, rightupperarm, localA, localB));
		coneC.setLimit(PI2, PI2, 0);
		((btDynamicsWorld)world.collisionWorld).addConstraint(coneC, true);
		
		// RightElbow
		localA.setFromEulerAngles(0, PI2, 0).trn(0, 0.18f, 0);
		localB.setFromEulerAngles(0, PI2, 0).trn(0, -0.14f, 0);
		constraints.add(hingeC = new btHingeConstraint(rightupperarm, rightlowerarm, localA, localB));
		hingeC.setLimit(0, PI2);
		((btDynamicsWorld)world.collisionWorld).addConstraint(hingeC, true);
	} ##FSTMerge## public void addRagdoll(final float x, final float y, final float z) {
		final Matrix4 tmpM = new Matrix4();
		btRigidBody pelvis = (btRigidBody)world.add("pelvis", x, y+1, z).body;
		btRigidBody spine = (btRigidBody)world.add("spine", x, y+1.2f, z).body;
		btRigidBody head = (btRigidBody)world.add("head", x, y+1.6f, z).body;
		btRigidBody leftupperleg = (btRigidBody)world.add("upperleg", x-0.18f, y+0.65f, z).body;
		btRigidBody leftlowerleg = (btRigidBody)world.add("lowerleg", x-0.18f, y+0.2f, z).body;
		btRigidBody rightupperleg = (btRigidBody)world.add("upperleg", x+0.18f, y+0.65f, z).body;
		btRigidBody rightlowerleg = (btRigidBody)world.add("lowerleg", x+0.18f, y+0.2f, z).body;		
		btRigidBody leftupperarm = (btRigidBody)world.add("upperarm", tmpM.setFromEulerAngles(PI2, 0, 0).trn(x-0.35f, y+1.45f, z)).body;
		btRigidBody leftlowerarm = (btRigidBody)world.add("lowerarm", tmpM.setFromEulerAngles(PI2, 0, 0).trn(x-0.7f, y+1.45f, z)).body;
		btRigidBody rightupperarm = (btRigidBody)world.add("upperarm", tmpM.setFromEulerAngles(-PI2, 0, 0).trn(x+0.35f, y+1.45f, z)).body;
		btRigidBody rightlowerarm = (btRigidBody)world.add("lowerarm", tmpM.setFromEulerAngles(-PI2, 0, 0).trn(x+0.7f, y+1.45f, z)).body;
		
		final Matrix4 localA = new Matrix4();
		final Matrix4 localB = new Matrix4();
		btHingeConstraint hingeC = null;
		btConeTwistConstraint coneC = null;
		
		// PelvisSpine
		localA.setFromEulerAngles(0, PI2, 0).trn(0, 0.15f, 0);
		localB.setFromEulerAngles(0, PI2, 0).trn(0, -0.15f, 0);
		constraints.add(hingeC = new btHingeConstraint(pelvis, spine, localA, localB));
		hingeC.setLimit(-PI4, PI2);
		((btDynamicsWorld)world.collisionWorld).addConstraint(hingeC, true);
		
		// SpineHead
		localA.setFromEulerAngles(PI2, 0, 0).trn(0, 0.3f, 0);
		localB.setFromEulerAngles(PI2, 0, 0).trn(0, -0.14f, 0);
		constraints.add(coneC = new btConeTwistConstraint(spine, head, localA, localB));
		coneC.setLimit(PI4, PI4, PI2);
		((btDynamicsWorld)world.collisionWorld).addConstraint(coneC, true);
		
		// LeftHip
		localA.setFromEulerAngles(-PI4*5f, 0, 0).trn(-0.18f, -0.1f, 0);
		localB.setFromEulerAngles(-PI4*5f, 0, 0).trn(0, 0.225f, 0);
		constraints.add(coneC = new btConeTwistConstraint(pelvis, leftupperleg, localA, localB));
		coneC.setLimit(PI4, PI4, 0);
		((btDynamicsWorld)world.collisionWorld).addConstraint(coneC, true);
		
		// LeftKnee
		localA.setFromEulerAngles(0, PI2, 0).trn(0, -0.225f, 0);
		localB.setFromEulerAngles(0, PI2, 0).trn(0, 0.185f, 0);
		constraints.add(hingeC = new btHingeConstraint(leftupperleg, leftlowerleg, localA, localB));
		hingeC.setLimit(0, PI2);
		((btDynamicsWorld)world.collisionWorld).addConstraint(hingeC, true);
		
		// RightHip
		localA.setFromEulerAngles(-PI4*5f, 0, 0).trn(0.18f, -0.1f, 0);
		localB.setFromEulerAngles(-PI4*5f, 0, 0).trn(0, 0.225f, 0);
		constraints.add(coneC = new btConeTwistConstraint(pelvis, rightupperleg, localA, localB));
		coneC.setLimit(PI4, PI4, 0);
		((btDynamicsWorld)world.collisionWorld).addConstraint(coneC, true);
		
		// RightKnee
		localA.setFromEulerAngles(0, PI2, 0).trn(0, -0.225f, 0);
		localB.setFromEulerAngles(0, PI2, 0).trn(0, 0.185f, 0);
		constraints.add(hingeC = new btHingeConstraint(rightupperleg, rightlowerleg, localA, localB));
		hingeC.setLimit(0, PI2);
		((btDynamicsWorld)world.collisionWorld).addConstraint(hingeC, true);
		
		// LeftShoulder
		localA.setFromEulerAngles(PI, 0, 0).trn(-0.2f, 0.15f, 0);
		localB.setFromEulerAngles(PI2, 0, 0).trn(0, -0.18f, 0);
		constraints.add(coneC = new btConeTwistConstraint(pelvis, leftupperarm, localA, localB));
		coneC.setLimit(PI2, PI2, 0);
		((btDynamicsWorld)world.collisionWorld).addConstraint(coneC, true);
		
		// LeftElbow
		localA.setFromEulerAngles(0, PI2, 0).trn(0, 0.18f, 0);
		localB.setFromEulerAngles(0, PI2, 0).trn(0, -0.14f, 0);
		constraints.add(hingeC = new btHingeConstraint(leftupperarm, leftlowerarm, localA, localB));
		hingeC.setLimit(0, PI2);
		((btDynamicsWorld)world.collisionWorld).addConstraint(hingeC, true);
		
		// RightShoulder
		localA.setFromEulerAngles(PI, 0, 0).trn(0.2f, 0.15f, 0);
		localB.setFromEulerAngles(PI2, 0, 0).trn(0, -0.18f, 0);
		constraints.add(coneC = new btConeTwistConstraint(pelvis, rightupperarm, localA, localB));
		coneC.setLimit(PI2, PI2, 0);
		((btDynamicsWorld)world.collisionWorld).addConstraint(coneC, true);
		
		// RightElbow
		localA.setFromEulerAngles(0, PI2, 0).trn(0, 0.18f, 0);
		localB.setFromEulerAngles(0, PI2, 0).trn(0, -0.14f, 0);
		constraints.add(hingeC = new btHingeConstraint(rightupperarm, rightlowerarm, localA, localB));
		hingeC.setLimit(0, PI2);
		((btDynamicsWorld)world.collisionWorld).addConstraint(hingeC, true);
	} ##FSTMerge## public void addRagdoll(final float x, final float y, final float z) {
		final Matrix4 tmpM = new Matrix4();
		btRigidBody pelvis = (btRigidBody)world.add("pelvis", x, y+1, z).body;
		btRigidBody spine = (btRigidBody)world.add("spine", x, y+1.2f, z).body;
		btRigidBody head = (btRigidBody)world.add("head", x, y+1.6f, z).body;
		btRigidBody leftupperleg = (btRigidBody)world.add("upperleg", x-0.18f, y+0.65f, z).body;
		btRigidBody leftlowerleg = (btRigidBody)world.add("lowerleg", x-0.18f, y+0.2f, z).body;
		btRigidBody rightupperleg = (btRigidBody)world.add("upperleg", x+0.18f, y+0.65f, z).body;
		btRigidBody rightlowerleg = (btRigidBody)world.add("lowerleg", x+0.18f, y+0.2f, z).body;		
		btRigidBody leftupperarm = (btRigidBody)world.add("upperarm", tmpM.setFromEulerAngles(PI2, 0, 0).trn(x-0.35f, y+1.45f, z)).body;
		btRigidBody leftlowerarm = (btRigidBody)world.add("lowerarm", tmpM.setFromEulerAngles(PI2, 0, 0).trn(x-0.7f, y+1.45f, z)).body;
		btRigidBody rightupperarm = (btRigidBody)world.add("upperarm", tmpM.setFromEulerAngles(-PI2, 0, 0).trn(x+0.35f, y+1.45f, z)).body;
		btRigidBody rightlowerarm = (btRigidBody)world.add("lowerarm", tmpM.setFromEulerAngles(-PI2, 0, 0).trn(x+0.7f, y+1.45f, z)).body;
		
		final Matrix4 localA = new Matrix4();
		final Matrix4 localB = new Matrix4();
		btHingeConstraint hingeC = null;
		btConeTwistConstraint coneC = null;
		
		// PelvisSpine
		localA.setFromEulerAngles(0, PI2, 0).trn(0, 0.15f, 0);
		localB.setFromEulerAngles(0, PI2, 0).trn(0, -0.15f, 0);
		constraints.add(hingeC = new btHingeConstraint(pelvis, spine, localA, localB));
		hingeC.setLimit(-PI4, PI2);
		((btDynamicsWorld)world.collisionWorld).addConstraint(hingeC, true);
		
		// SpineHead
		localA.setFromEulerAngles(PI2, 0, 0).trn(0, 0.3f, 0);
		localB.setFromEulerAngles(PI2, 0, 0).trn(0, -0.14f, 0);
		constraints.add(coneC = new btConeTwistConstraint(spine, head, localA, localB));
		coneC.setLimit(PI4, PI4, PI2);
		((btDynamicsWorld)world.collisionWorld).addConstraint(coneC, true);
		
		// LeftHip
		localA.setFromEulerAngles(-PI4*5f, 0, 0).trn(-0.18f, -0.1f, 0);
		localB.setFromEulerAngles(-PI4*5f, 0, 0).trn(0, 0.225f, 0);
		constraints.add(coneC = new btConeTwistConstraint(pelvis, leftupperleg, localA, localB));
		coneC.setLimit(PI4, PI4, 0);
		((btDynamicsWorld)world.collisionWorld).addConstraint(coneC, true);
		
		// LeftKnee
		localA.setFromEulerAngles(0, PI2, 0).trn(0, -0.225f, 0);
		localB.setFromEulerAngles(0, PI2, 0).trn(0, 0.185f, 0);
		constraints.add(hingeC = new btHingeConstraint(leftupperleg, leftlowerleg, localA, localB));
		hingeC.setLimit(0, PI2);
		((btDynamicsWorld)world.collisionWorld).addConstraint(hingeC, true);
		
		// RightHip
		localA.setFromEulerAngles(-PI4*5f, 0, 0).trn(0.18f, -0.1f, 0);
		localB.setFromEulerAngles(-PI4*5f, 0, 0).trn(0, 0.225f, 0);
		constraints.add(coneC = new btConeTwistConstraint(pelvis, rightupperleg, localA, localB));
		coneC.setLimit(PI4, PI4, 0);
		((btDynamicsWorld)world.collisionWorld).addConstraint(coneC, true);
		
		// RightKnee
		localA.setFromEulerAngles(0, PI2, 0).trn(0, -0.225f, 0);
		localB.setFromEulerAngles(0, PI2, 0).trn(0, 0.185f, 0);
		constraints.add(hingeC = new btHingeConstraint(rightupperleg, rightlowerleg, localA, localB));
		hingeC.setLimit(0, PI2);
		((btDynamicsWorld)world.collisionWorld).addConstraint(hingeC, true);
		
		// LeftShoulder
		localA.setFromEulerAngles(PI, 0, 0).trn(-0.2f, 0.15f, 0);
		localB.setFromEulerAngles(PI2, 0, 0).trn(0, -0.18f, 0);
		constraints.add(coneC = new btConeTwistConstraint(pelvis, leftupperarm, localA, localB));
		coneC.setLimit(PI2, PI2, 0);
		((btDynamicsWorld)world.collisionWorld).addConstraint(coneC, true);
		
		// LeftElbow
		localA.setFromEulerAngles(0, PI2, 0).trn(0, 0.18f, 0);
		localB.setFromEulerAngles(0, PI2, 0).trn(0, -0.14f, 0);
		constraints.add(hingeC = new btHingeConstraint(leftupperarm, leftlowerarm, localA, localB));
		hingeC.setLimit(0, PI2);
		((btDynamicsWorld)world.collisionWorld).addConstraint(hingeC, true);
		
		// RightShoulder
		localA.setFromEulerAngles(PI, 0, 0).trn(0.2f, 0.15f, 0);
		localB.setFromEulerAngles(PI2, 0, 0).trn(0, -0.18f, 0);
		constraints.add(coneC = new btConeTwistConstraint(pelvis, rightupperarm, localA, localB));
		coneC.setLimit(PI2, PI2, 0);
		((btDynamicsWorld)world.collisionWorld).addConstraint(coneC, true);
		
		// RightElbow
		localA.setFromEulerAngles(0, PI2, 0).trn(0, 0.18f, 0);
		localB.setFromEulerAngles(0, PI2, 0).trn(0, -0.14f, 0);
		constraints.add(hingeC = new btHingeConstraint(rightupperarm, rightlowerarm, localA, localB));
		hingeC.setLimit(0, PI2);
		((btDynamicsWorld)world.collisionWorld).addConstraint(hingeC, true);
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/RayPickRagdollTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ protected Model createCapsuleModel(float radius, float height) {
		final float hh = radius + 0.5f * height;
		return modelBuilder.createCylinder(radius * 2, hh * 2f, radius * 2f, 16, 
			new Material(ColorAttribute.createDiffuse(Color.WHITE), ColorAttribute.createSpecular(Color.WHITE)), 
			Usage.Position | Usage.Normal);
	} ##FSTMerge## protected Model createCapsuleModel(float radius, float height) {
		final float hh = radius + 0.5f * height;
		final Mesh mesh = new Mesh(true, 8, 36, new VertexAttribute(Usage.Position, 3, "a_position"));
		mesh.setVertices(new float[] {radius, hh, radius, radius, hh, -radius, -radius, hh, radius, -radius, hh, -radius,
			radius, -hh, radius, radius, -hh, -radius, -radius, -hh, radius, -radius, -hh, -radius});
		mesh.setIndices(new short[] {0, 1, 2, 1, 2, 3, // top
			4, 5, 6, 5, 6, 7, // bottom
			0, 2, 4, 4, 6, 2, // front
			1, 3, 5, 5, 7, 3, // back
			2, 3, 6, 6, 7, 3, // left
			0, 1, 4, 4, 5, 1 // right
			});
		return new StillModel(new StillSubMesh("capsule", mesh, GL10.GL_TRIANGLES, new Material()));
	} ##FSTMerge## protected Model createCapsuleModel(float radius, float height) {
		final float hh = radius + 0.5f * height;
		final Mesh mesh = new Mesh(true, 8, 36, new VertexAttribute(Usage.Position, 3, "a_position"));
		mesh.setVertices(new float[] {radius, hh, radius, radius, hh, -radius, -radius, hh, radius, -radius, hh, -radius,
			radius, -hh, radius, radius, -hh, -radius, -radius, -hh, radius, -radius, -hh, -radius});
		mesh.setIndices(new short[] {0, 1, 2, 1, 2, 3, // top
			4, 5, 6, 5, 6, 7, // bottom
			0, 2, 4, 4, 6, 2, // front
			1, 3, 5, 5, 7, 3, // back
			2, 3, 6, 6, 7, 3, // left
			0, 1, 4, 4, 5, 1 // right
			});
		return new StillModel(new StillSubMesh("capsule", mesh, GL10.GL_TRIANGLES, new Material()));
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/RayPickRagdollTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public void create () {
		super.create();
		instructions = "Tap a box to ray cast\nLong press to toggle debug mode\nSwipe for next test\nCtrl+drag to rotate\nScroll to zoom";

		// Create the entities
		world.add("ground", -7f, 0f, -7f)
			.setColor(0.25f + 0.5f * (float)Math.random(), 0.25f + 0.5f * (float)Math.random(), 0.25f + 0.5f * (float)Math.random(), 1f);

		for (int x = 0; x < BOXCOUNT_X; x++) {
			for (int y = 0; y < BOXCOUNT_Y; y++) {
				for (int z = 0; z < BOXCOUNT_Z; z++) {
					world.add("box", BOXOFFSET_X + x, BOXOFFSET_Y + y, BOXOFFSET_Z + z)
						.setColor(0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 1f);
				}
			}
		}
		
		rayTestCB = new ClosestRayResultCallback(Vector3.Zero, Vector3.Z);
	} ##FSTMerge## @Override
	public void create () {
		super.create();
		instructions = "Tap a box to ray cast\nLong press to toggle debug mode\nSwipe for next test";

		// Create the entities
		world.add("ground", -7f, 0f, -7f)
			.color.set(0.25f + 0.5f * (float)Math.random(), 0.25f + 0.5f * (float)Math.random(), 0.25f + 0.5f * (float)Math.random(), 1f);

		for (int x = 0; x < BOXCOUNT_X; x++) {
			for (int y = 0; y < BOXCOUNT_Y; y++) {
				for (int z = 0; z < BOXCOUNT_Z; z++) {
					world.add("box", BOXOFFSET_X + x, BOXOFFSET_Y + y, BOXOFFSET_Z + z)
						.color.set(0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 1f);
				}
			}
		}
		
		rayTestCB = new ClosestRayResultCallback(Vector3.Zero, Vector3.Z);
	} ##FSTMerge## @Override
	public void create () {
		super.create();
		instructions = "Tap a box to ray cast\nLong press to toggle debug mode\nSwipe for next test";

		// Create the entities
		world.add("ground", -7f, 0f, -7f)
			.color.set(0.25f + 0.5f * (float)Math.random(), 0.25f + 0.5f * (float)Math.random(), 0.25f + 0.5f * (float)Math.random(), 1f);

		for (int x = 0; x < BOXCOUNT_X; x++) {
			for (int y = 0; y < BOXCOUNT_Y; y++) {
				for (int z = 0; z < BOXCOUNT_Z; z++) {
					world.add("box", BOXOFFSET_X + x, BOXOFFSET_Y + y, BOXOFFSET_Z + z)
						.color.set(0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 1f);
				}
			}
		}
		
		rayTestCB = new ClosestRayResultCallback(Vector3.Zero, Vector3.Z);
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/RayCastTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final float lightAmbient[] = new float[] {0.5f, 0.5f, 0.5f, 1f}; ##FSTMerge## final float lightAmbient[] = new float[] {0.5f, 0.5f, 0.5f, 1f};
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BaseBulletTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final float lightPosition[] = new float[] {10f, 10f, 10f, 1f}; ##FSTMerge## final float lightPosition[] = new float[] {10f, 10f, 10f, 1f};
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BaseBulletTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final float lightDiffuse[] = new float[] {0.5f, 0.5f, 0.5f, 1f}; ##FSTMerge## final float lightDiffuse[] = new float[] {0.5f, 0.5f, 0.5f, 1f};
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BaseBulletTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## PerspectiveCamera camera; ##FSTMerge## PerspectiveCamera camera;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BaseBulletTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public BulletWorld world; ##FSTMerge## BulletWorld world; ##FSTMerge## BulletWorld world;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BaseBulletTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public void create () {
		init();
		modelBatch = new ModelBatch();
		
		world = createWorld();
		world.performanceCounter = performanceCounter;

		final float width = Gdx.graphics.getWidth();
		final float height = Gdx.graphics.getHeight();
		if (width > height)
			camera = new PerspectiveCamera(67f, 3f * width / height, 3f);
		else
			camera = new PerspectiveCamera(67f, 3f, 3f * height / width);
		camera.position.set(10f, 10f, 10f);
		camera.lookAt(0, 0, 0);
		camera.update();
		
		// Create some simple meshes
		final Model groundModel = modelBuilder.createRect(20f, 0f, -20f, -20f, 0f, -20f, -20f, 0f, 20f, 20f, 0f, 20f, 0, 1, 0, 
			new Material(ColorAttribute.createDiffuse(Color.WHITE), ColorAttribute.createSpecular(Color.WHITE), FloatAttribute.createShininess(16f)),
			Usage.Position | Usage.Normal);
		final Model boxModel = modelBuilder.createBox(1f, 1f, 1f,
			new Material(ColorAttribute.createDiffuse(Color.WHITE), ColorAttribute.createSpecular(Color.WHITE), FloatAttribute.createShininess(64f)), 
			Usage.Position | Usage.Normal);

		// Add the constructors
		world.addConstructor("ground", new BulletConstructor(groundModel, 0f)); // mass = 0: static body
		world.addConstructor("box", new BulletConstructor(boxModel, 1f)); // mass = 1kg: dynamic body
		world.addConstructor("staticbox", new BulletConstructor(boxModel, 0f)); // mass = 0: static body
	} ##FSTMerge## @Override
	public void create () {
		init();
		world = createWorld();
		world.performanceCounter = performanceCounter;

		final float width = Gdx.graphics.getWidth();
		final float height = Gdx.graphics.getHeight();
		if (width > height)
			camera = new PerspectiveCamera(67f, 3f * width / height, 3f);
		else
			camera = new PerspectiveCamera(67f, 3f, 3f * height / width);
		camera.position.set(10f, 10f, 10f);
		camera.lookAt(0, 0, 0);
		camera.update();
		
		// Create some simple meshes
		final Mesh groundMesh = new Mesh(true, 4, 6, new VertexAttribute(Usage.Position, 3, "a_position"));
		groundMesh.setVertices(new float[] {20f, 0f, 20f, 20f, 0f, -20f, -20f, 0f, 20f, -20f, 0f, -20f});
		groundMesh.setIndices(new short[] {0, 1, 2, 1, 2, 3});
		final StillModel groundModel = new StillModel(new StillSubMesh("ground", groundMesh, GL10.GL_TRIANGLES, new Material()));

		final Mesh boxMesh = new Mesh(true, 8, 36, new VertexAttribute(Usage.Position, 3, "a_position"));
		boxMesh.setVertices(new float[] {0.5f, 0.5f, 0.5f, 0.5f, 0.5f, -0.5f, -0.5f, 0.5f, 0.5f, -0.5f, 0.5f, -0.5f,
			0.5f, -0.5f, 0.5f, 0.5f, -0.5f, -0.5f, -0.5f, -0.5f, 0.5f, -0.5f, -0.5f, -0.5f});
		boxMesh.setIndices(new short[] {0, 1, 2, 1, 2, 3, // top
			4, 5, 6, 5, 6, 7, // bottom
			0, 2, 4, 4, 6, 2, // front
			1, 3, 5, 5, 7, 3, // back
			2, 3, 6, 6, 7, 3, // left
			0, 1, 4, 4, 5, 1 // right
			});
		final StillModel boxModel = new StillModel(new StillSubMesh("box", boxMesh, GL10.GL_TRIANGLES, new Material()));

		// Add the constructors
		world.addConstructor("ground", new BulletConstructor(groundModel, 0f)); // mass = 0: static body
		world.addConstructor("box", new BulletConstructor(boxModel, 1f)); // mass = 1kg: dynamic body
		world.addConstructor("staticbox", new BulletConstructor(boxModel, 0f)); // mass = 0: static body
	} ##FSTMerge## @Override
	public void create () {
		init();
		world = createWorld();
		world.performanceCounter = performanceCounter;

		final float width = Gdx.graphics.getWidth();
		final float height = Gdx.graphics.getHeight();
		if (width > height)
			camera = new PerspectiveCamera(67f, 3f * width / height, 3f);
		else
			camera = new PerspectiveCamera(67f, 3f, 3f * height / width);
		camera.position.set(10f, 10f, 10f);
		camera.lookAt(0, 0, 0);
		camera.update();
		
		// Create some simple meshes
		final Mesh groundMesh = new Mesh(true, 4, 6, new VertexAttribute(Usage.Position, 3, "a_position"));
		groundMesh.setVertices(new float[] {20f, 0f, 20f, 20f, 0f, -20f, -20f, 0f, 20f, -20f, 0f, -20f});
		groundMesh.setIndices(new short[] {0, 1, 2, 1, 2, 3});
		final StillModel groundModel = new StillModel(new StillSubMesh("ground", groundMesh, GL10.GL_TRIANGLES, new Material()));

		final Mesh boxMesh = new Mesh(true, 8, 36, new VertexAttribute(Usage.Position, 3, "a_position"));
		boxMesh.setVertices(new float[] {0.5f, 0.5f, 0.5f, 0.5f, 0.5f, -0.5f, -0.5f, 0.5f, 0.5f, -0.5f, 0.5f, -0.5f,
			0.5f, -0.5f, 0.5f, 0.5f, -0.5f, -0.5f, -0.5f, -0.5f, 0.5f, -0.5f, -0.5f, -0.5f});
		boxMesh.setIndices(new short[] {0, 1, 2, 1, 2, 3, // top
			4, 5, 6, 5, 6, 7, // bottom
			0, 2, 4, 4, 6, 2, // front
			1, 3, 5, 5, 7, 3, // back
			2, 3, 6, 6, 7, 3, // left
			0, 1, 4, 4, 5, 1 // right
			});
		final StillModel boxModel = new StillModel(new StillSubMesh("box", boxMesh, GL10.GL_TRIANGLES, new Material()));

		// Add the constructors
		world.addConstructor("ground", new BulletConstructor(groundModel, 0f)); // mass = 0: static body
		world.addConstructor("box", new BulletConstructor(boxModel, 1f)); // mass = 1kg: dynamic body
		world.addConstructor("staticbox", new BulletConstructor(boxModel, 0f)); // mass = 0: static body
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BaseBulletTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ protected void beginRender(boolean lighting) {
		Gdx.gl.glViewport(0, 0, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
		Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT | GL10.GL_DEPTH_BUFFER_BIT);
		//Gdx.gl.glEnable(GL10.GL_CULL_FACE);
		//Gdx.gl.glCullFace(GL10.GL_BACK);
		camera.update();
		if (debugMode != DebugDrawModes.DBG_NoDebug)
			world.setDebugMode(debugMode, camera.combined);
	} ##FSTMerge## protected void beginRender(boolean lighting) {
		GL10 gl = Gdx.gl10;
		gl.glClear(GL10.GL_COLOR_BUFFER_BIT | GL10.GL_DEPTH_BUFFER_BIT);
		gl.glEnable(GL10.GL_DEPTH_TEST);
		gl.glDepthFunc(GL10.GL_LEQUAL);
		gl.glEnable(GL10.GL_COLOR_MATERIAL);
		if (lighting) {
			gl.glEnable(GL10.GL_LIGHTING);
			gl.glEnable(GL10.GL_LIGHT0);
			gl.glLightfv(GL10.GL_LIGHT0, GL10.GL_AMBIENT, lightAmbient, 0);
			gl.glLightfv(GL10.GL_LIGHT0, GL10.GL_POSITION, lightPosition, 0);
			gl.glLightfv(GL10.GL_LIGHT0, GL10.GL_DIFFUSE, lightDiffuse, 0);
		} else
			gl.glDisable(GL10.GL_LIGHTING);
		camera.apply(Gdx.gl10);
	} ##FSTMerge## protected void beginRender(boolean lighting) {
		GL10 gl = Gdx.gl10;
		gl.glClear(GL10.GL_COLOR_BUFFER_BIT | GL10.GL_DEPTH_BUFFER_BIT);
		gl.glEnable(GL10.GL_DEPTH_TEST);
		gl.glDepthFunc(GL10.GL_LEQUAL);
		gl.glEnable(GL10.GL_COLOR_MATERIAL);
		if (lighting) {
			gl.glEnable(GL10.GL_LIGHTING);
			gl.glEnable(GL10.GL_LIGHT0);
			gl.glLightfv(GL10.GL_LIGHT0, GL10.GL_AMBIENT, lightAmbient, 0);
			gl.glLightfv(GL10.GL_LIGHT0, GL10.GL_POSITION, lightPosition, 0);
			gl.glLightfv(GL10.GL_LIGHT0, GL10.GL_DIFFUSE, lightDiffuse, 0);
		} else
			gl.glDisable(GL10.GL_LIGHTING);
		camera.apply(Gdx.gl10);
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BaseBulletTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ protected void renderWorld() {
		modelBatch.begin(camera);
		world.render(modelBatch, lights);
		modelBatch.end();
	} ##FSTMerge## protected void renderWorld() {
		world.render();
	} ##FSTMerge## protected void renderWorld() {
		world.render();
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BaseBulletTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public BulletEntity shoot(final String what, final float x, final float y, final float impulse) {
		// Shoot a box
		Ray ray = camera.getPickRay(x, y);
		BulletEntity entity = world.add(what, ray.origin.x, ray.origin.y, ray.origin.z);
		entity.setColor(0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 1f);
		((btRigidBody)entity.body).applyCentralImpulse(ray.direction.mul(impulse));
		return entity;
	} ##FSTMerge## public BulletEntity shoot(final String what, final float x, final float y, final float impulse) {
		// Shoot a box
		Ray ray = camera.getPickRay(x, y);
		BulletEntity entity = world.add(what, ray.origin.x, ray.origin.y, ray.origin.z);
		entity.color.set(0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 1f);
		((btRigidBody)entity.body).applyCentralImpulse(ray.direction.mul(impulse));
		return entity;
	} ##FSTMerge## public BulletEntity shoot(final String what, final float x, final float y, final float impulse) {
		// Shoot a box
		Ray ray = camera.getPickRay(x, y);
		BulletEntity entity = world.add(what, ray.origin.x, ray.origin.y, ray.origin.z);
		entity.color.set(0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 1f);
		((btRigidBody)entity.body).applyCentralImpulse(ray.direction.scl(impulse));
		return entity;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BaseBulletTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public void setDebugMode(final int mode) {
		world.setDebugMode(debugMode = mode, camera.combined);
	} ##FSTMerge## public void setDebugMode(final int mode) {
		world.setDebugMode(mode, camera.combined);
	} ##FSTMerge## public void setDebugMode(final int mode) {
		world.setDebugMode(mode, camera.combined);
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BaseBulletTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ Model sphere; ##FSTMerge## StillModel sphere; ##FSTMerge## StillModel sphere;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/tests/gdx-tests/src/com/badlogic/gdx/tests/FrustumTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public void create () {
		camera = new PerspectiveCamera(67, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
		camera.position.set(0, 2, 3).nor().mul(10);
		camera.lookAt(0, 0, 0);

		camera2 = new PerspectiveCamera(67, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
		camera2.position.set(-3, 2, 0);
		camera2.lookAt(0, 0, 0);
		camera2.near = 0.5f;
		camera2.far = 6;

		float aspect = Gdx.graphics.getWidth() / (float)Gdx.graphics.getHeight();
		camera3 = new OrthographicCamera(2 * aspect, 2);
		camera3.position.set(3, 2, 0);
		camera3.lookAt(0, 0, 0);
		camera3.near = 0.5f;
		camera3.far = 6;

		controller = new PerspectiveCamController(camera);
		Gdx.input.setInputProcessor(controller);

		plane = new Mesh(true, 4, 6, new VertexAttribute(Usage.Position, 3, ShaderProgram.POSITION_ATTRIBUTE));

		plane.setVertices(new float[] {-10, -1, 10, 10, -1, 10, 10, -1, -10, -10, -1, -10});
		plane.setIndices(new short[] {3, 2, 1, 1, 0, 3});
		ObjLoader objLoader = new ObjLoader();
		sphere =  objLoader.loadObj(Gdx.files.internal("data/sphere.obj"));
		sphereInstance = new ModelInstance(sphere);
		modelBatch = new ModelBatch();
		renderer = new ImmediateModeRenderer10();
	} ##FSTMerge## @Override
	public void create () {
		camera = new PerspectiveCamera(67, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
		camera.position.set(0, 2, 3).nor().mul(10);
		camera.lookAt(0, 0, 0);

		camera2 = new PerspectiveCamera(67, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
		camera2.position.set(-3, 2, 0);
		camera2.lookAt(0, 0, 0);
		camera2.near = 0.5f;
		camera2.far = 6;

		float aspect = Gdx.graphics.getWidth() / (float)Gdx.graphics.getHeight();
		camera3 = new OrthographicCamera(2 * aspect, 2);
		camera3.position.set(3, 2, 0);
		camera3.lookAt(0, 0, 0);
		camera3.near = 0.5f;
		camera3.far = 6;

		controller = new PerspectiveCamController(camera);
		Gdx.input.setInputProcessor(controller);

		plane = new Mesh(true, 4, 6, new VertexAttribute(Usage.Position, 3, ShaderProgram.POSITION_ATTRIBUTE));

		plane.setVertices(new float[] {-10, -1, 10, 10, -1, 10, 10, -1, -10, -10, -1, -10});
		plane.setIndices(new short[] {3, 2, 1, 1, 0, 3});
		sphere =  ModelLoaderRegistry.loadStillModel(Gdx.files.internal("data/sphere.obj"));
		renderer = new ImmediateModeRenderer10();
	} ##FSTMerge## @Override
	public void create () {
		camera = new PerspectiveCamera(67, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
		camera.position.set(0, 2, 3).nor().scl(10);
		camera.lookAt(0, 0, 0);

		camera2 = new PerspectiveCamera(67, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
		camera2.position.set(-3, 2, 0);
		camera2.lookAt(0, 0, 0);
		camera2.near = 0.5f;
		camera2.far = 6;

		float aspect = Gdx.graphics.getWidth() / (float)Gdx.graphics.getHeight();
		camera3 = new OrthographicCamera(2 * aspect, 2);
		camera3.position.set(3, 2, 0);
		camera3.lookAt(0, 0, 0);
		camera3.near = 0.5f;
		camera3.far = 6;

		controller = new PerspectiveCamController(camera);
		Gdx.input.setInputProcessor(controller);

		plane = new Mesh(true, 4, 6, new VertexAttribute(Usage.Position, 3, ShaderProgram.POSITION_ATTRIBUTE));

		plane.setVertices(new float[] {-10, -1, 10, 10, -1, 10, 10, -1, -10, -10, -1, -10});
		plane.setIndices(new short[] {3, 2, 1, 1, 0, 3});
		sphere =  ModelLoaderRegistry.loadStillModel(Gdx.files.internal("data/sphere.obj"));
		renderer = new ImmediateModeRenderer10();
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/tests/gdx-tests/src/com/badlogic/gdx/tests/FrustumTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public void render () {
		Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT | GL10.GL_DEPTH_BUFFER_BIT);
		Gdx.gl.glEnable(GL10.GL_DEPTH_TEST);

		camera.update();
		camera2.update();
		camera3.update();
		camera.apply(Gdx.gl10);
		
		Gdx.gl10.glColor4f(1, 0, 0, 1);
		plane.render(GL10.GL_TRIANGLE_FAN);
		Gdx.gl10.glColor4f(0, 1, 0, 1);
		
		modelBatch.begin(camera);
		modelBatch.render(sphereInstance);
		modelBatch.end();

		renderFrustum(renderer, camera2.frustum);
		renderFrustum(renderer, camera3.frustum);
	} ##FSTMerge## @Override
	public void render () {
		Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT | GL10.GL_DEPTH_BUFFER_BIT);
		Gdx.gl.glEnable(GL10.GL_DEPTH_TEST);

		camera.update();
		camera2.update();
		camera3.update();
		camera.apply(Gdx.gl10);

		Gdx.gl10.glColor4f(1, 0, 0, 1);
		plane.render(GL10.GL_TRIANGLE_FAN);
		Gdx.gl10.glColor4f(0, 1, 0, 1);
		sphere.render();

		renderFrustum(renderer, camera2.frustum);
		renderFrustum(renderer, camera3.frustum);
	} ##FSTMerge## @Override
	public void render () {
		Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT | GL10.GL_DEPTH_BUFFER_BIT);
		Gdx.gl.glEnable(GL10.GL_DEPTH_TEST);

		camera.update();
		camera2.update();
		camera3.update();
		camera.apply(Gdx.gl10);

		Gdx.gl10.glColor4f(1, 0, 0, 1);
		plane.render(GL10.GL_TRIANGLE_FAN);
		Gdx.gl10.glColor4f(0, 1, 0, 1);
		sphere.render();

		renderFrustum(renderer, camera2.frustum);
		renderFrustum(renderer, camera3.frustum);
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/tests/gdx-tests/src/com/badlogic/gdx/tests/FrustumTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public static void main (String[] argv) {
		// this is only here for me to debug native code faster
		new SharedLibraryLoader("../../extensions/gdx-audio/libs/gdx-audio-natives.jar").load("gdx-audio");
		new SharedLibraryLoader("../../extensions/gdx-image/libs/gdx-image-natives.jar").load("gdx-image");
		new SharedLibraryLoader("../../extensions/gdx-freetype/libs/gdx-freetype-natives.jar").load("gdx-freetype");
		new SharedLibraryLoader("../../extensions/gdx-controllers/gdx-controllers-desktop/libs/gdx-controllers-desktop-natives.jar").load("gdx-controllers-desktop");
		new SharedLibraryLoader("../../gdx/libs/gdx-natives.jar").load("gdx");

		
		GdxTest test = new NewModelTest();
		LwjglApplicationConfiguration config = new LwjglApplicationConfiguration();
		config.useGL20 = test.needsGL20();
		new LwjglApplication(test, config);
	} ##FSTMerge## public static void main (String[] argv) {
		// this is only here for me to debug native code faster
		new SharedLibraryLoader("../../extensions/gdx-audio/libs/gdx-audio-natives.jar").load("gdx-audio");
		new SharedLibraryLoader("../../extensions/gdx-image/libs/gdx-image-natives.jar").load("gdx-image");
		new SharedLibraryLoader("../../extensions/gdx-freetype/libs/gdx-freetype-natives.jar").load("gdx-freetype");
		new SharedLibraryLoader("../../extensions/gdx-controllers/gdx-controllers-desktop/libs/gdx-controllers-desktop-natives.jar").load("gdx-controllers-desktop");
		new SharedLibraryLoader("../../gdx/libs/gdx-natives.jar").load("gdx");

		
		GdxTest test = new SuperKoalio();
		LwjglApplicationConfiguration config = new LwjglApplicationConfiguration();
		config.useGL20 = test.needsGL20();
		new LwjglApplication(test, config);
	} ##FSTMerge## public static void main (String[] argv) {
		// this is only here for me to debug native code faster
//		new SharedLibraryLoader("../../extensions/gdx-audio/libs/gdx-audio-natives.jar").load("gdx-audio");
//		new SharedLibraryLoader("../../extensions/gdx-image/libs/gdx-image-natives.jar").load("gdx-image");
//		new SharedLibraryLoader("../../extensions/gdx-freetype/libs/gdx-freetype-natives.jar").load("gdx-freetype");
//		new SharedLibraryLoader("../../extensions/gdx-controllers/gdx-controllers-desktop/libs/gdx-controllers-desktop-natives.jar").load("gdx-controllers-desktop");
//		new SharedLibraryLoader("../../gdx/libs/gdx-natives.jar").load("gdx");

		GdxTest test = new GroupTest();
		LwjglApplicationConfiguration config = new LwjglApplicationConfiguration();
		config.useGL20 = test.needsGL20();
		new LwjglApplication(test, config);
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/tests/gdx-tests-lwjgl/src/com/badlogic/gdx/tests/lwjgl/LwjglDebugStarter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public Vector3 getEndPoint (float distance) {
		return getEndPoint(new Vector3(), distance);
	} ##FSTMerge## public Vector3 getEndPoint (float distance) {
		return new Vector3(origin).add(direction.tmp().mul(distance));
	} ##FSTMerge## public Vector3 getEndPoint (float distance) {
		return new Vector3(origin).add(direction.tmp().scl(distance));
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/math/collision/Ray.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public Ray set (Ray ray) {
		this.origin.set(ray.origin);
		this.direction.set(ray.direction);
		return this;
	} ##FSTMerge## public Ray set (Ray ray) {

		this.origin.set(ray.origin);
		this.direction.set(ray.direction);
		return this;
	} ##FSTMerge## public Ray set (Ray ray) {

		this.origin.set(ray.origin);
		this.direction.set(ray.direction);
		return this;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/math/collision/Ray.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ private int fetchUniformLocation (String name) {
		return fetchUniformLocation(name, pedantic);
	} ##FSTMerge## private int fetchUniformLocation (String name) {
		GL20 gl = Gdx.graphics.getGL20();
		// -2 == not yet cached
		// -1 == cached but not found
		int location;
		if ((location = uniforms.get(name, -2)) == -2) {
			location = gl.glGetUniformLocation(program, name);
			if (location == -1 && pedantic) throw new IllegalArgumentException("no uniform with name '" + name + "' in shader");
			uniforms.put(name, location);
		}
		return location;
	} ##FSTMerge## private int fetchUniformLocation (String name) {
		GL20 gl = Gdx.graphics.getGL20();
		// -2 == not yet cached
		// -1 == cached but not found
		int location;
		if ((location = uniforms.get(name, -2)) == -2) {
			location = gl.glGetUniformLocation(program, name);
			if (location == -1 && pedantic) throw new IllegalArgumentException("no uniform with name '" + name + "' in shader");
			uniforms.put(name, location);
		}
		return location;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/glutils/ShaderProgram.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public static void transform(final Matrix4 matrix, final float[] vertices, int vertexSize, int offset, int dimensions, int start, int count) {
		if (offset < 0 || dimensions < 1 || (offset + dimensions) > vertexSize)
			throw new IndexOutOfBoundsException();
		if (start < 0 || count < 1 || ((start + count) * vertexSize) > vertices.length)
			throw new IndexOutOfBoundsException("start = "+start+", count = "+count+", vertexSize = "+vertexSize+", length = "+vertices.length);
		
		final Vector3 tmp = new Vector3();
		
		int idx = offset + (start * vertexSize);
		switch(dimensions) {
		case 1:
			for (int i = 0; i < count; i++) {
				tmp.set(vertices[idx], 0, 0).mul(matrix);
				vertices[idx] = tmp.x;
				idx += vertexSize;
			}
			break;
		case 2:
			for (int i = 0; i < count; i++) {
				tmp.set(vertices[idx], vertices[idx + 1], 0).mul(matrix);
				vertices[idx] = tmp.x;
				vertices[idx+1] = tmp.y;
				idx += vertexSize;
			}
			break;
		case 3:
			for (int i = 0; i < count; i++) {
				tmp.set(vertices[idx], vertices[idx + 1], vertices[idx + 2]).mul(matrix);
				vertices[idx] = tmp.x;
				vertices[idx+1] = tmp.y;
				vertices[idx+2] = tmp.z;
				idx += vertexSize;
			}
			break;
		}
	} ##FSTMerge## public static void transform(final Matrix4 matrix, final float[] vertices, int vertexSize, int offset, int dimensions, int start, int count) {
		if (offset < 0 || dimensions < 1 || (offset + dimensions) > vertexSize)
			throw new IndexOutOfBoundsException();
		if (start < 0 || count < 1 || ((start + count) * vertexSize) > vertices.length)
			throw new IndexOutOfBoundsException("start = "+start+", count = "+count+", vertexSize = "+vertexSize+", length = "+vertices.length);
		
		final Vector3 tmp = Vector3.tmp;
		
		int idx = offset + (start * vertexSize);
		switch(dimensions) {
		case 1:
			for (int i = 0; i < count; i++) {
				tmp.set(vertices[idx], 0, 0).mul(matrix);
				vertices[idx] = tmp.x;
				idx += vertexSize;
			}
			break;
		case 2:
			for (int i = 0; i < count; i++) {
				tmp.set(vertices[idx], vertices[idx + 1], 0).mul(matrix);
				vertices[idx] = tmp.x;
				vertices[idx+1] = tmp.y;
				idx += vertexSize;
			}
			break;
		case 3:
			for (int i = 0; i < count; i++) {
				tmp.set(vertices[idx], vertices[idx + 1], vertices[idx + 2]).mul(matrix);
				vertices[idx] = tmp.x;
				vertices[idx+1] = tmp.y;
				vertices[idx+2] = tmp.z;
				idx += vertexSize;
			}
			break;
		}
	} ##FSTMerge## public static void transform(final Matrix4 matrix, final float[] vertices, int vertexSize, int offset, int dimensions, int start, int count) {
		if (offset < 0 || dimensions < 1 || (offset + dimensions) > vertexSize)
			throw new IndexOutOfBoundsException();
		if (start < 0 || count < 1 || ((start + count) * vertexSize) > vertices.length)
			throw new IndexOutOfBoundsException("start = "+start+", count = "+count+", vertexSize = "+vertexSize+", length = "+vertices.length);
		
		final Vector3 tmp = Vector3.tmp;
		
		int idx = offset + (start * vertexSize);
		switch(dimensions) {
		case 1:
			for (int i = 0; i < count; i++) {
				tmp.set(vertices[idx], 0, 0).mul(matrix);
				vertices[idx] = tmp.x;
				idx += vertexSize;
			}
			break;
		case 2:
			for (int i = 0; i < count; i++) {
				tmp.set(vertices[idx], vertices[idx + 1], 0).mul(matrix);
				vertices[idx] = tmp.x;
				vertices[idx+1] = tmp.y;
				idx += vertexSize;
			}
			break;
		case 3:
			for (int i = 0; i < count; i++) {
				tmp.set(vertices[idx], vertices[idx + 1], vertices[idx + 2]).mul(matrix);
				vertices[idx] = tmp.x;
				vertices[idx+1] = tmp.y;
				vertices[idx+2] = tmp.z;
				idx += vertexSize;
			}
			break;
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/Mesh.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/TextureRef.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public String Name; ##FSTMerge## public String Name;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/TextureRef.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private int mRefCount; ##FSTMerge## private int mRefCount;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/TextureRef.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Texture mTexture; ##FSTMerge## private Texture mTexture;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/TextureRef.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public TextureRef (String name, Texture texture) {
		Name = name;
		mTexture = texture;
		mRefCount = 1;
	} ##FSTMerge## public TextureRef (String name, Texture texture) {
		Name = name;
		mTexture = texture;
		mRefCount = 1;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/TextureRef.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void addRef () {
		mRefCount++;
	} ##FSTMerge## public void addRef () {
		mRefCount++;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/TextureRef.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int unload () {
		if (--mRefCount == 0) {
			mTexture.dispose();
			mTexture = null;
			// Note: This doesn't seem the best way to do this, but it works. Re-factoring welcome :)
			TextureDict.removeTexture(Name);
		}
		return mRefCount;
	} ##FSTMerge## public int unload () {
		if (--mRefCount == 0) {
			mTexture.dispose();
			mTexture = null;
			// Note: This doesn't seem the best way to do this, but it works. Re-factoring welcome :)
			TextureDict.removeTexture(Name);
		}
		return mRefCount;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/TextureRef.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void dispose () {
		mTexture.dispose();
	} ##FSTMerge## public void dispose () {
		mTexture.dispose();
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/TextureRef.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void bind () {
		mTexture.bind();
	} ##FSTMerge## public void bind () {
		mTexture.bind();
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/TextureRef.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Texture get () {
		return mTexture;
	} ##FSTMerge## public Texture get () {
		return mTexture;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/TextureRef.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/TextureDict.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static ObjectMap<String, TextureRef> sDictionary = new ObjectMap<String, TextureRef>(); ##FSTMerge## private static ObjectMap<String, TextureRef> sDictionary = new ObjectMap<String, TextureRef>();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/TextureDict.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static TextureRef loadTexture (String path) {
		return loadTexture(path, TextureFilter.MipMap, TextureFilter.Linear, TextureWrap.ClampToEdge, TextureWrap.ClampToEdge);
	} ##FSTMerge## public static TextureRef loadTexture (String path) {
		return loadTexture(path, TextureFilter.MipMap, TextureFilter.Linear, TextureWrap.ClampToEdge, TextureWrap.ClampToEdge);
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/TextureDict.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static TextureRef loadTexture (String path, TextureFilter minFilter, TextureFilter magFilter, TextureWrap uwrap,
		TextureWrap vwrap) {
		if (sDictionary.containsKey(path)) {
			TextureRef ref = sDictionary.get(path);
			ref.addRef();
			return ref;
		}
		// load new texture
		FileHandle texFile = Gdx.app.getFiles().getFileHandle(path, FileType.Internal);
		Texture newTex = new Texture(texFile, minFilter.isMipMap() || magFilter.isMipMap() ? true : false);
		newTex.setFilter(minFilter, magFilter);
		newTex.setWrap(uwrap, vwrap);
		TextureRef ref = new TextureRef(path, newTex);
		sDictionary.put(path, ref);
		return ref;
	} ##FSTMerge## public static TextureRef loadTexture (String path, TextureFilter minFilter, TextureFilter magFilter, TextureWrap uwrap,
		TextureWrap vwrap) {
		if (sDictionary.containsKey(path)) {
			TextureRef ref = sDictionary.get(path);
			ref.addRef();
			return ref;
		}
		// load new texture
		FileHandle texFile = Gdx.app.getFiles().getFileHandle(path, FileType.Internal);
		Texture newTex = new Texture(texFile, minFilter.isMipMap() || magFilter.isMipMap() ? true : false);
		newTex.setFilter(minFilter, magFilter);
		newTex.setWrap(uwrap, vwrap);
		TextureRef ref = new TextureRef(path, newTex);
		sDictionary.put(path, ref);
		return ref;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/TextureDict.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static void removeTexture (String path) {
		sDictionary.remove(path);
	} ##FSTMerge## public static void removeTexture (String path) {
		sDictionary.remove(path);
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/TextureDict.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static void unloadAll () {
		for (TextureRef tex : sDictionary.values()) {
			tex.dispose();
		}
		sDictionary.clear();
	} ##FSTMerge## public static void unloadAll () {
		for (TextureRef tex : sDictionary.values()) {
			tex.dispose();
		}
		sDictionary.clear();
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/TextureDict.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/StillModelNode.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements StillModelInstance ##FSTMerge## implements StillModelInstance
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/StillModelNode.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static final private float[] vec3 = {0, 0, 0}; ##FSTMerge## static final private float[] vec3 = {0, 0, 0};
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/StillModelNode.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final public Vector3 origin = new Vector3(); ##FSTMerge## final public Vector3 origin = new Vector3();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/StillModelNode.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final public Vector3 transformedPosition = new Vector3(); ##FSTMerge## final public Vector3 transformedPosition = new Vector3();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/StillModelNode.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final public Matrix4 matrix = new Matrix4(); ##FSTMerge## final public Matrix4 matrix = new Matrix4();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/StillModelNode.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Material[] materials; ##FSTMerge## public Material[] materials;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/StillModelNode.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public float radius; ##FSTMerge## public float radius;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/StillModelNode.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public StillModelNode () {
		this(null);
	} ##FSTMerge## public StillModelNode () {
		this(null);
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/StillModelNode.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public StillModelNode (Material[] materials) {
		this.materials = materials;
	} ##FSTMerge## public StillModelNode (Material[] materials) {
		this.materials = materials;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/StillModelNode.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public Matrix4 getTransform () {
		return matrix;
	} ##FSTMerge## @Override
	public Matrix4 getTransform () {
		return matrix;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/StillModelNode.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public Vector3 getSortCenter () {
		vec3[0] = origin.x;
		vec3[1] = origin.y;
		vec3[2] = origin.z;
		Matrix4.mulVec(matrix.val, vec3);
		transformedPosition.x = vec3[0];
		transformedPosition.y = vec3[1];
		transformedPosition.z = vec3[2];
		return transformedPosition;
	} ##FSTMerge## @Override
	public Vector3 getSortCenter () {
		vec3[0] = origin.x;
		vec3[1] = origin.y;
		vec3[2] = origin.z;
		Matrix4.mulVec(matrix.val, vec3);
		transformedPosition.x = vec3[0];
		transformedPosition.y = vec3[1];
		transformedPosition.z = vec3[2];
		return transformedPosition;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/StillModelNode.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public Material[] getMaterials () {
		return materials;
	} ##FSTMerge## @Override
	public Material[] getMaterials () {
		return materials;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/StillModelNode.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public float getBoundingSphereRadius () {
		return radius;
	} ##FSTMerge## @Override
	public float getBoundingSphereRadius () {
		return radius;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/StillModelNode.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public StillModelNode copy () {
		final StillModelNode copy = new StillModelNode();
		if (materials != null) {
			final int len = materials.length;
			Material[] mats = new Material[len];
			for (int i = 0; i < len; i++) {
				mats[i] = materials[i].copy();
			}
			copy.materials = mats;
		}
		copy.matrix.set(matrix.val);
		copy.origin.set(origin);
		copy.radius = radius;
		copy.transformedPosition.set(transformedPosition);
		return copy;

	} ##FSTMerge## public StillModelNode copy () {
		final StillModelNode copy = new StillModelNode();
		if (materials != null) {
			final int len = materials.length;
			Material[] mats = new Material[len];
			for (int i = 0; i < len; i++) {
				mats[i] = materials[i].copy();
			}
			copy.materials = mats;
		}
		copy.matrix.set(matrix.val);
		copy.origin.set(origin);
		copy.radius = radius;
		copy.transformedPosition.set(transformedPosition);
		return copy;

	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/StillModelNode.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/StillModelInstance.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Matrix4 getTransform (); ##FSTMerge## public Matrix4 getTransform ();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/StillModelInstance.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Vector3 getSortCenter (); ##FSTMerge## public Vector3 getSortCenter ();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/StillModelInstance.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public float getBoundingSphereRadius (); ##FSTMerge## public float getBoundingSphereRadius ();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/StillModelInstance.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Material[] getMaterials (); ##FSTMerge## public Material[] getMaterials ();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/StillModelInstance.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/ModelRenderer.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void begin (); ##FSTMerge## public void begin ();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/ModelRenderer.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void draw (StillModel model, StillModelInstance instance); ##FSTMerge## public void draw (StillModel model, StillModelInstance instance);
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/ModelRenderer.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void draw (AnimatedModel model, AnimatedModelInstance instance); ##FSTMerge## public void draw (AnimatedModel model, AnimatedModelInstance instance);
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/ModelRenderer.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void end (); ##FSTMerge## public void end ();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/ModelRenderer.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/ModelLoaderHints.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final boolean flipV; ##FSTMerge## public final boolean flipV;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/ModelLoaderHints.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ModelLoaderHints (boolean flipV) {
		this.flipV = flipV;
	} ##FSTMerge## public ModelLoaderHints (boolean flipV) {
		this.flipV = flipV;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/ModelLoaderHints.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/AnimatedModelNode.java
############## CONFLICT ##############
Conflict type: ExtendsList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## extends StillModelNode ##FSTMerge## extends StillModelNode
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/AnimatedModelNode.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements AnimatedModelInstance ##FSTMerge## implements AnimatedModelInstance
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/AnimatedModelNode.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public String animation; ##FSTMerge## public String animation;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/AnimatedModelNode.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public float time; ##FSTMerge## public float time;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/AnimatedModelNode.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public boolean looping; ##FSTMerge## public boolean looping;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/AnimatedModelNode.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public AnimatedModelNode() {
		super();
	} ##FSTMerge## public AnimatedModelNode() {
		super();
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/AnimatedModelNode.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public AnimatedModelNode(Material[] materials) {
		super(materials);
	} ##FSTMerge## public AnimatedModelNode(Material[] materials) {
		super(materials);
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/AnimatedModelNode.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public String getAnimation () {
		return animation;
	} ##FSTMerge## @Override
	public String getAnimation () {
		return animation;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/AnimatedModelNode.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public float getAnimationTime () {
		return time;
	} ##FSTMerge## @Override
	public float getAnimationTime () {
		return time;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/AnimatedModelNode.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public boolean isLooping () {
		return looping;
	} ##FSTMerge## @Override
	public boolean isLooping () {
		return looping;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/AnimatedModelNode.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public AnimatedModelNode copy () {
		final AnimatedModelNode copy = new AnimatedModelNode();
		if (materials != null) {
			final int len = materials.length;
			Material[] mats = new Material[len];
			for (int i = 0; i < len; i++) {
				mats[i] = materials[i].copy();
			}
			copy.materials = mats;
		}
		copy.matrix.set(matrix.val);
		copy.origin.set(origin);
		copy.radius = radius;
		copy.transformedPosition.set(transformedPosition);
		copy.animation = animation;
		copy.time = time;
		copy.looping = looping;
		return copy;
	} ##FSTMerge## public AnimatedModelNode copy () {
		final AnimatedModelNode copy = new AnimatedModelNode();
		if (materials != null) {
			final int len = materials.length;
			Material[] mats = new Material[len];
			for (int i = 0; i < len; i++) {
				mats[i] = materials[i].copy();
			}
			copy.materials = mats;
		}
		copy.matrix.set(matrix.val);
		copy.origin.set(origin);
		copy.radius = radius;
		copy.transformedPosition.set(transformedPosition);
		copy.animation = animation;
		copy.time = time;
		copy.looping = looping;
		return copy;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/AnimatedModelNode.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/AnimatedModelInstance.java
############## CONFLICT ##############
Conflict type: ExtendsList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## extends StillModelInstance ##FSTMerge## extends StillModelInstance
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/AnimatedModelInstance.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public String getAnimation (); ##FSTMerge## public String getAnimation ();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/AnimatedModelInstance.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public float getAnimationTime (); ##FSTMerge## public float getAnimationTime ();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/AnimatedModelInstance.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public boolean isLooping (); ##FSTMerge## public boolean isLooping ();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/AnimatedModelInstance.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public abstract ##FSTMerge## public abstract
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/SubMesh.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public String name; ##FSTMerge## public String name;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/SubMesh.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Material material; ##FSTMerge## public Material material;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/SubMesh.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int primitiveType; ##FSTMerge## public int primitiveType;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/SubMesh.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Mesh mesh; ##FSTMerge## public Mesh mesh;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/SubMesh.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public SubMesh (String name, Mesh mesh, int primitiveType, Material material) {
		this.name = name;
		this.setMesh(mesh);
		this.primitiveType = primitiveType;
		this.material = material;
	} ##FSTMerge## public SubMesh (String name, Mesh mesh, int primitiveType, Material material) {
		this.name = name;
		this.setMesh(mesh);
		this.primitiveType = primitiveType;
		this.material = material;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/SubMesh.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public SubMesh (String name, Mesh mesh, int primitiveType) {
		this(name, mesh, primitiveType, null);
	} ##FSTMerge## public SubMesh (String name, Mesh mesh, int primitiveType) {
		this(name, mesh, primitiveType, null);
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/SubMesh.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public abstract void getBoundingBox (BoundingBox bbox); ##FSTMerge## public abstract void getBoundingBox (BoundingBox bbox);
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/SubMesh.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Mesh getMesh() {
		return mesh;
	} ##FSTMerge## public Mesh getMesh() {
		return mesh;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/SubMesh.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void setMesh(Mesh mesh) {
		this.mesh = mesh;
	} ##FSTMerge## public void setMesh(Mesh mesh) {
		this.mesh = mesh;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/SubMesh.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/Model.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void render (); ##FSTMerge## public void render ();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/Model.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void render (ShaderProgram program); ##FSTMerge## public void render (ShaderProgram program);
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/Model.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Model getSubModel (String... subMeshNames); ##FSTMerge## public Model getSubModel (String... subMeshNames);
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/Model.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public SubMesh getSubMesh (String name); ##FSTMerge## public SubMesh getSubMesh (String name);
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/Model.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public SubMesh[] getSubMeshes (); ##FSTMerge## public SubMesh[] getSubMeshes ();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/Model.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void getBoundingBox (BoundingBox bbox); ##FSTMerge## public void getBoundingBox (BoundingBox bbox);
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/Model.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void setMaterials (Material... materials); ##FSTMerge## public void setMaterials (Material... materials);
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/Model.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void setMaterial (Material material); ##FSTMerge## public void setMaterial (Material material);
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/Model.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void dispose (); ##FSTMerge## public void dispose ();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/Model.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/AnimatedModel.java
############## CONFLICT ##############
Conflict type: ExtendsList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## extends Model ##FSTMerge## extends Model
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/AnimatedModel.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void setAnimation (String animation, float time, boolean loop); ##FSTMerge## public void setAnimation (String animation, float time, boolean loop);
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/AnimatedModel.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Animation getAnimation (String name); ##FSTMerge## public Animation getAnimation (String name);
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/AnimatedModel.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Animation[] getAnimations (); ##FSTMerge## public Animation[] getAnimations ();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/AnimatedModel.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/still/StillSubMesh.java
############## CONFLICT ##############
Conflict type: ExtendsList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## extends SubMesh ##FSTMerge## extends SubMesh
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/still/StillSubMesh.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public StillSubMesh (String name, Mesh mesh, int primitiveType, Material material) {
		super(name, mesh, primitiveType, material);
	} ##FSTMerge## public StillSubMesh (String name, Mesh mesh, int primitiveType, Material material) {
		super(name, mesh, primitiveType, material);
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/still/StillSubMesh.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public StillSubMesh (String name, Mesh mesh, int primitiveType) {
		super(name, mesh, primitiveType);
	} ##FSTMerge## public StillSubMesh (String name, Mesh mesh, int primitiveType) {
		super(name, mesh, primitiveType);
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/still/StillSubMesh.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void getBoundingBox (BoundingBox bbox) {
		mesh.calculateBoundingBox(bbox);
	} ##FSTMerge## @Override
	public void getBoundingBox (BoundingBox bbox) {
		mesh.calculateBoundingBox(bbox);
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/still/StillSubMesh.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/still/StillModel.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements Model ##FSTMerge## implements Model
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/still/StillModel.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final public StillSubMesh[] subMeshes; ##FSTMerge## final public StillSubMesh[] subMeshes;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/still/StillModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public StillModel (SubMesh... subMeshes) {
		this.subMeshes = new StillSubMesh[subMeshes.length];
		for (int i = 0; i < subMeshes.length ; ++i) {
			this.subMeshes[i] = (StillSubMesh)subMeshes[i];
		}	
	} ##FSTMerge## public StillModel (SubMesh... subMeshes) {
		this.subMeshes = new StillSubMesh[subMeshes.length];
		for (int i = 0; i < subMeshes.length ; ++i) {
			this.subMeshes[i] = (StillSubMesh)subMeshes[i];
		}	
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/still/StillModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void render () {
		int len = subMeshes.length;
		for (int i = 0; i < len; i++) {
			StillSubMesh subMesh = subMeshes[i];
			if (i == 0) {
				subMesh.material.bind();
			} else if (!subMeshes[i - 1].material.equals(subMesh.material)) {
				subMesh.material.bind();
			}
			subMesh.mesh.render(subMesh.primitiveType);
		}
	} ##FSTMerge## @Override
	public void render () {
		int len = subMeshes.length;
		for (int i = 0; i < len; i++) {
			StillSubMesh subMesh = subMeshes[i];
			if (i == 0) {
				subMesh.material.bind();
			} else if (!subMeshes[i - 1].material.equals(subMesh.material)) {
				subMesh.material.bind();
			}
			subMesh.mesh.render(subMesh.primitiveType);
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/still/StillModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void render (ShaderProgram program) {
		int len = subMeshes.length;
		for (int i = 0; i < len; i++) {
			StillSubMesh subMesh = subMeshes[i];
			if (i == 0) {
				subMesh.material.bind(program);
			} else if (!subMeshes[i - 1].material.equals(subMesh.material)) {
				subMesh.material.bind(program);
			}
			subMesh.mesh.render(program, subMesh.primitiveType);
		}
	} ##FSTMerge## @Override
	public void render (ShaderProgram program) {
		int len = subMeshes.length;
		for (int i = 0; i < len; i++) {
			StillSubMesh subMesh = subMeshes[i];
			if (i == 0) {
				subMesh.material.bind(program);
			} else if (!subMeshes[i - 1].material.equals(subMesh.material)) {
				subMesh.material.bind(program);
			}
			subMesh.mesh.render(program, subMesh.primitiveType);
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/still/StillModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public Model getSubModel (String... subMeshNames) {
		ArrayList<SubMesh> subMeshes = new ArrayList<SubMesh>();
		for (String name : subMeshNames)
			for (StillSubMesh subMesh : this.subMeshes)
				if (name.equals(subMesh.name)) subMeshes.add(subMesh);
		if (subMeshes.size() > 0) return new StillModel(subMeshes.toArray(new StillSubMesh[subMeshes.size()]));
		return null;
	} ##FSTMerge## @Override
	public Model getSubModel (String... subMeshNames) {
		ArrayList<SubMesh> subMeshes = new ArrayList<SubMesh>();
		for (String name : subMeshNames)
			for (StillSubMesh subMesh : this.subMeshes)
				if (name.equals(subMesh.name)) subMeshes.add(subMesh);
		if (subMeshes.size() > 0) return new StillModel(subMeshes.toArray(new StillSubMesh[subMeshes.size()]));
		return null;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/still/StillModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public StillSubMesh getSubMesh (String name) {
		for (StillSubMesh subMesh : subMeshes) {
			if (subMesh.name.equals(name)) return subMesh;
		}
		return null;
	} ##FSTMerge## @Override
	public StillSubMesh getSubMesh (String name) {
		for (StillSubMesh subMesh : subMeshes) {
			if (subMesh.name.equals(name)) return subMesh;
		}
		return null;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/still/StillModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public SubMesh[] getSubMeshes () {
		return subMeshes;
	} ##FSTMerge## @Override
	public SubMesh[] getSubMeshes () {
		return subMeshes;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/still/StillModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void setMaterials (Material... materials) {
		if (materials.length != subMeshes.length)
			throw new UnsupportedOperationException("number of materials must equal number of sub-meshes");
		int len = materials.length;
		for (int i = 0; i < len; i++) {
			subMeshes[i].material = materials[i];
		}
	} ##FSTMerge## @Override
	public void setMaterials (Material... materials) {
		if (materials.length != subMeshes.length)
			throw new UnsupportedOperationException("number of materials must equal number of sub-meshes");
		int len = materials.length;
		for (int i = 0; i < len; i++) {
			subMeshes[i].material = materials[i];
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/still/StillModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void setMaterial (Material material) {
		int len = subMeshes.length;
		for (int i = 0; i < len; i++) {
			subMeshes[i].material = material;
		}
	} ##FSTMerge## @Override
	public void setMaterial (Material material) {
		int len = subMeshes.length;
		for (int i = 0; i < len; i++) {
			subMeshes[i].material = material;
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/still/StillModel.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final static BoundingBox tmpBox = new BoundingBox(); ##FSTMerge## private final static BoundingBox tmpBox = new BoundingBox();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/still/StillModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void getBoundingBox (BoundingBox bbox) {
		bbox.inf();
		for (int i = 0; i < subMeshes.length; i++) {
			subMeshes[i].mesh.calculateBoundingBox(tmpBox);
			bbox.ext(tmpBox);
		}
	} ##FSTMerge## @Override
	public void getBoundingBox (BoundingBox bbox) {
		bbox.inf();
		for (int i = 0; i < subMeshes.length; i++) {
			subMeshes[i].mesh.calculateBoundingBox(tmpBox);
			bbox.ext(tmpBox);
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/still/StillModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void dispose () {
		for (int i = 0; i < subMeshes.length; i++) {
			subMeshes[i].mesh.dispose();
		}
	} ##FSTMerge## @Override
	public void dispose () {
		for (int i = 0; i < subMeshes.length; i++) {
			subMeshes[i].mesh.dispose();
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/still/StillModel.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonSubMesh.java
############## CONFLICT ##############
Conflict type: ExtendsList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## extends SubMesh ##FSTMerge## extends SubMesh
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonSubMesh.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public SkeletonSubMesh (String name, Mesh mesh, int primitiveType) {
		super(name, mesh, primitiveType);
	} ##FSTMerge## public SkeletonSubMesh (String name, Mesh mesh, int primitiveType) {
		super(name, mesh, primitiveType);
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonSubMesh.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public short[] indices; ##FSTMerge## public short[] indices;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonSubMesh.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public float[] vertices; ##FSTMerge## public float[] vertices;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonSubMesh.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public float[] skinnedVertices; ##FSTMerge## public float[] skinnedVertices;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonSubMesh.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int[][] boneAssignments; ##FSTMerge## public int[][] boneAssignments;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonSubMesh.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public float[][] boneWeights; ##FSTMerge## public float[][] boneWeights;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonSubMesh.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void getBoundingBox (BoundingBox bbox) {
		mesh.calculateBoundingBox(bbox);
	} ##FSTMerge## @Override
	public void getBoundingBox (BoundingBox bbox) {
		mesh.calculateBoundingBox(bbox);
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonSubMesh.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void setVertices (float[] vertices) {
		this.vertices = vertices;
	} ##FSTMerge## public void setVertices (float[] vertices) {
		this.vertices = vertices;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonSubMesh.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void setIndices (short[] indices) {
		this.indices = indices;
	} ##FSTMerge## public void setIndices (short[] indices) {
		this.indices = indices;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonSubMesh.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModelGpuSkinned.java
############## CONFLICT ##############
Conflict type: ExtendsList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## extends SkeletonModel ##FSTMerge## extends SkeletonModel
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModelGpuSkinned.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final static String BoneIndexAttribue = "a_boneIndex"; ##FSTMerge## public final static String BoneIndexAttribue = "a_boneIndex";
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModelGpuSkinned.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final static String BoneWeightAttribue = "a_boneWeight"; ##FSTMerge## public final static String BoneWeightAttribue = "a_boneWeight";
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModelGpuSkinned.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public SkeletonModelGpuSkinned(Skeleton skeleton, SkeletonSubMesh[] subMeshes) {
		super(skeleton,subMeshes);
	} ##FSTMerge## public SkeletonModelGpuSkinned(Skeleton skeleton, SkeletonSubMesh[] subMeshes) {
		super(skeleton,subMeshes);
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModelGpuSkinned.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static SkeletonModel CreateFromSkeletonModel(SkeletonModel skeletonModel){
		if (Gdx.gl20 == null){
			return skeletonModel;
		}
		SkeletonModelGpuSkinned model = new SkeletonModelGpuSkinned(skeletonModel.skeleton, skeletonModel.subMeshes);
		model.setupGpuSkin();
		return model;
	} ##FSTMerge## public static SkeletonModel CreateFromSkeletonModel(SkeletonModel skeletonModel){
		if (Gdx.gl20 == null){
			return skeletonModel;
		}
		SkeletonModelGpuSkinned model = new SkeletonModelGpuSkinned(skeletonModel.skeleton, skeletonModel.subMeshes);
		model.setupGpuSkin();
		return model;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModelGpuSkinned.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void setupGpuSkin(){
		for (int i = 0; i < subMeshes.length; i++) {
			setupGpuSkin(subMeshes[i]);
		}
	} ##FSTMerge## public void setupGpuSkin(){
		for (int i = 0; i < subMeshes.length; i++) {
			setupGpuSkin(subMeshes[i]);
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModelGpuSkinned.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void setupGpuSkin(SkeletonSubMesh subMesh){
		VertexAttributes oldAttributes =  subMesh.mesh.getVertexAttributes();
		final int oldAttributeCount = oldAttributes.size();
		VertexAttribute[] attributeArray = new VertexAttribute[oldAttributeCount+2];
		for(int i=0;i<oldAttributeCount;i++){
			attributeArray[i] = oldAttributes.get(i);
		}
		final int boneIndex = oldAttributeCount;
		final int weightIndex = oldAttributeCount+1;
		attributeArray[boneIndex] = new VertexAttribute(Usage.Generic, 4, BoneIndexAttribue);
		attributeArray[weightIndex] = new VertexAttribute(Usage.Generic, 4, BoneWeightAttribue);
		VertexAttributes newAttributes = new VertexAttributes(attributeArray);
		
		//TODO: not sure if I want to generate a new mesh. But VertexAttributes was final inside mesh
		Mesh newMesh = new Mesh(true, subMesh.mesh.getMaxVertices(), subMesh.mesh.getMaxIndices(), newAttributes);
		
		final int stride = subMesh.mesh.getVertexSize() / 4;
		final int newStride = newMesh.getVertexSize() / 4;
		final int numVertices = subMesh.mesh.getNumVertices();
		int idx = 0;
		int newIdx = 0;
		int bidx = -1;
		int widx = -1;
		for(int i=0;i<newAttributes.size();i++)
		{
			VertexAttribute a = newAttributes.get(i);
			if(a.alias.equals(BoneIndexAttribue)){
				bidx = a.offset/4;
			} else if(a.alias.equals(BoneWeightAttribue)){
				widx = a.offset/4;
			}
		}
		
		if(bidx <0 || widx < 0){
			throw new IllegalArgumentException("Need Shader with bone index and bone wieght vectors to use GPU skinning");
		}
		
		final float[] vertices = subMesh.vertices;
		final float[] skinnedVertices = new float[newStride * numVertices];

		for (int i = 0; i < numVertices; i++, idx += stride, newIdx += newStride, bidx += newStride, widx += newStride) {
			final int[] boneIndices = subMesh.boneAssignments[i];
			final float[] boneWeights = subMesh.boneWeights[i];
			
			System.arraycopy(vertices, idx, skinnedVertices, newIdx, stride);
			
			skinnedVertices[bidx] = boneIndices.length>0?boneIndices[0]:0;
			skinnedVertices[bidx + 1] = boneIndices.length>1?boneIndices[1]:0;
			skinnedVertices[bidx + 2] = boneIndices.length>2?boneIndices[2]:0;
			skinnedVertices[bidx + 3] = boneIndices.length>3?boneIndices[3]:0;
			
			skinnedVertices[widx] = boneWeights.length>0?boneWeights[0]:0;
			skinnedVertices[widx + 1] = boneWeights.length>1?boneWeights[1]:0;
			skinnedVertices[widx + 2] = boneWeights.length>2?boneWeights[2]:0;
			skinnedVertices[widx + 3] = boneWeights.length>3?boneWeights[3]:0;
		}

		newMesh.setVertices(skinnedVertices);
		newMesh.setIndices(subMesh.indices);
		subMesh.mesh.dispose();
		subMesh.mesh = newMesh;
		subMesh.skinnedVertices = null;
		subMesh.vertices = skinnedVertices;
	} ##FSTMerge## private void setupGpuSkin(SkeletonSubMesh subMesh){
		VertexAttributes oldAttributes =  subMesh.mesh.getVertexAttributes();
		final int oldAttributeCount = oldAttributes.size();
		VertexAttribute[] attributeArray = new VertexAttribute[oldAttributeCount+2];
		for(int i=0;i<oldAttributeCount;i++){
			attributeArray[i] = oldAttributes.get(i);
		}
		final int boneIndex = oldAttributeCount;
		final int weightIndex = oldAttributeCount+1;
		attributeArray[boneIndex] = new VertexAttribute(Usage.Generic, 4, BoneIndexAttribue);
		attributeArray[weightIndex] = new VertexAttribute(Usage.Generic, 4, BoneWeightAttribue);
		VertexAttributes newAttributes = new VertexAttributes(attributeArray);
		
		//TODO: not sure if I want to generate a new mesh. But VertexAttributes was final inside mesh
		Mesh newMesh = new Mesh(true, subMesh.mesh.getMaxVertices(), subMesh.mesh.getMaxIndices(), newAttributes);
		
		final int stride = subMesh.mesh.getVertexSize() / 4;
		final int newStride = newMesh.getVertexSize() / 4;
		final int numVertices = subMesh.mesh.getNumVertices();
		int idx = 0;
		int newIdx = 0;
		int bidx = -1;
		int widx = -1;
		for(int i=0;i<newAttributes.size();i++)
		{
			VertexAttribute a = newAttributes.get(i);
			if(a.alias.equals(BoneIndexAttribue)){
				bidx = a.offset/4;
			} else if(a.alias.equals(BoneWeightAttribue)){
				widx = a.offset/4;
			}
		}
		
		if(bidx <0 || widx < 0){
			throw new IllegalArgumentException("Need Shader with bone index and bone wieght vectors to use GPU skinning");
		}
		
		final float[] vertices = subMesh.vertices;
		final float[] skinnedVertices = new float[newStride * numVertices];

		for (int i = 0; i < numVertices; i++, idx += stride, newIdx += newStride, bidx += newStride, widx += newStride) {
			final int[] boneIndices = subMesh.boneAssignments[i];
			final float[] boneWeights = subMesh.boneWeights[i];
			
			System.arraycopy(vertices, idx, skinnedVertices, newIdx, stride);
			
			skinnedVertices[bidx] = boneIndices.length>0?boneIndices[0]:0;
			skinnedVertices[bidx + 1] = boneIndices.length>1?boneIndices[1]:0;
			skinnedVertices[bidx + 2] = boneIndices.length>2?boneIndices[2]:0;
			skinnedVertices[bidx + 3] = boneIndices.length>3?boneIndices[3]:0;
			
			skinnedVertices[widx] = boneWeights.length>0?boneWeights[0]:0;
			skinnedVertices[widx + 1] = boneWeights.length>1?boneWeights[1]:0;
			skinnedVertices[widx + 2] = boneWeights.length>2?boneWeights[2]:0;
			skinnedVertices[widx + 3] = boneWeights.length>3?boneWeights[3]:0;
		}

		newMesh.setVertices(skinnedVertices);
		newMesh.setIndices(subMesh.indices);
		subMesh.mesh.dispose();
		subMesh.mesh = newMesh;
		subMesh.skinnedVertices = null;
		subMesh.vertices = skinnedVertices;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModelGpuSkinned.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void setAnimation(String animation, float time, boolean loop) {
		skeleton.setAnimation(animation, time);
	} ##FSTMerge## @Override
	public void setAnimation(String animation, float time, boolean loop) {
		skeleton.setAnimation(animation, time);
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModelGpuSkinned.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModel.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements AnimatedModel ##FSTMerge## implements AnimatedModel
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModel.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final Skeleton skeleton; ##FSTMerge## public final Skeleton skeleton;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModel.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final SkeletonSubMesh[] subMeshes; ##FSTMerge## public final SkeletonSubMesh[] subMeshes;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public SkeletonModel (Skeleton skeleton, SubMesh[] subMeshes) {
		this.skeleton = skeleton;
		this.subMeshes = new SkeletonSubMesh[subMeshes.length];
		
		for (int i=0; i < subMeshes.length; ++i) {
			this.subMeshes[i] = (SkeletonSubMesh)subMeshes[i];
		}
		setMaterial(new Material("default"));
	} ##FSTMerge## public SkeletonModel (Skeleton skeleton, SubMesh[] subMeshes) {
		this.skeleton = skeleton;
		this.subMeshes = new SkeletonSubMesh[subMeshes.length];
		
		for (int i=0; i < subMeshes.length; ++i) {
			this.subMeshes[i] = (SkeletonSubMesh)subMeshes[i];
		}
		setMaterial(new Material("default"));
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void setBindPose () {
		skeleton.setBindPose();
		for (int i = 0; i < subMeshes.length; i++) {
			skin(subMeshes[i], skeleton.combinedMatrices);
		}
	} ##FSTMerge## public void setBindPose () {
		skeleton.setBindPose();
		for (int i = 0; i < subMeshes.length; i++) {
			skin(subMeshes[i], skeleton.combinedMatrices);
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void setAnimation (String animation, float time, boolean loop) {
		skeleton.setAnimation(animation, time);
		for (int i = 0; i < subMeshes.length; i++) {
			skin(subMeshes[i], skeleton.combinedMatrices);
		}
	} ##FSTMerge## @Override
	public void setAnimation (String animation, float time, boolean loop) {
		skeleton.setAnimation(animation, time);
		for (int i = 0; i < subMeshes.length; i++) {
			skin(subMeshes[i], skeleton.combinedMatrices);
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModel.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final Vector3 v = new Vector3(); ##FSTMerge## final Vector3 v = new Vector3();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void skin (SkeletonSubMesh subMesh, Array<Matrix4> boneMatrices) {
		final int stride = subMesh.mesh.getVertexSize() / 4;
		final int numVertices = subMesh.mesh.getNumVertices();
		int idx = 0;
		int nidx = subMesh.mesh.getVertexAttribute(Usage.Normal) == null ? -1
			: subMesh.mesh.getVertexAttribute(Usage.Normal).offset / 4;
		final float[] vertices = subMesh.vertices;
		final float[] skinnedVertices = subMesh.skinnedVertices;

		System.arraycopy(subMesh.vertices, 0, skinnedVertices, 0, subMesh.vertices.length);

		for (int i = 0; i < numVertices; i++, idx += stride, nidx += stride) {
			final int[] boneIndices = subMesh.boneAssignments[i];
			final float[] boneWeights = subMesh.boneWeights[i];

			final float ox = vertices[idx], oy = vertices[idx + 1], oz = vertices[idx + 2];
			float x = 0, y = 0, z = 0;
			float onx = 0, ony = 0, onz = 0;
			float nx = 0, ny = 0, nz = 0;

			if (nidx != -1) {
				onx = vertices[nidx];
				ony = vertices[nidx + 1];
				onz = vertices[nidx + 2];
			}

			for (int j = 0; j < boneIndices.length; j++) {
				int boneIndex = boneIndices[j];
				float weight = boneWeights[j];
				v.set(ox, oy, oz);
				v.mul(boneMatrices.get(boneIndex));
				x += v.x * weight;
				y += v.y * weight;
				z += v.z * weight;

				if (nidx != -1) {
					v.set(onx, ony, onz);
					v.rot(boneMatrices.get(boneIndex));
					nx += v.x * weight;
					ny += v.y * weight;
					nz += v.z * weight;
				}
			}

			skinnedVertices[idx] = x;
			skinnedVertices[idx + 1] = y;
			skinnedVertices[idx + 2] = z;

			if (nidx != -1) {
				skinnedVertices[nidx] = nx;
				skinnedVertices[nidx + 1] = ny;
				skinnedVertices[nidx + 2] = nz;
			}
		}

		subMesh.mesh.setVertices(skinnedVertices);
	} ##FSTMerge## public void skin (SkeletonSubMesh subMesh, Array<Matrix4> boneMatrices) {
		final int stride = subMesh.mesh.getVertexSize() / 4;
		final int numVertices = subMesh.mesh.getNumVertices();
		int idx = 0;
		int nidx = subMesh.mesh.getVertexAttribute(Usage.Normal) == null ? -1
			: subMesh.mesh.getVertexAttribute(Usage.Normal).offset / 4;
		final float[] vertices = subMesh.vertices;
		final float[] skinnedVertices = subMesh.skinnedVertices;

		System.arraycopy(subMesh.vertices, 0, skinnedVertices, 0, subMesh.vertices.length);

		for (int i = 0; i < numVertices; i++, idx += stride, nidx += stride) {
			final int[] boneIndices = subMesh.boneAssignments[i];
			final float[] boneWeights = subMesh.boneWeights[i];

			final float ox = vertices[idx], oy = vertices[idx + 1], oz = vertices[idx + 2];
			float x = 0, y = 0, z = 0;
			float onx = 0, ony = 0, onz = 0;
			float nx = 0, ny = 0, nz = 0;

			if (nidx != -1) {
				onx = vertices[nidx];
				ony = vertices[nidx + 1];
				onz = vertices[nidx + 2];
			}

			for (int j = 0; j < boneIndices.length; j++) {
				int boneIndex = boneIndices[j];
				float weight = boneWeights[j];
				v.set(ox, oy, oz);
				v.mul(boneMatrices.get(boneIndex));
				x += v.x * weight;
				y += v.y * weight;
				z += v.z * weight;

				if (nidx != -1) {
					v.set(onx, ony, onz);
					v.rot(boneMatrices.get(boneIndex));
					nx += v.x * weight;
					ny += v.y * weight;
					nz += v.z * weight;
				}
			}

			skinnedVertices[idx] = x;
			skinnedVertices[idx + 1] = y;
			skinnedVertices[idx + 2] = z;

			if (nidx != -1) {
				skinnedVertices[nidx] = nx;
				skinnedVertices[nidx + 1] = ny;
				skinnedVertices[nidx + 2] = nz;
			}
		}

		subMesh.mesh.setVertices(skinnedVertices);
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void render () {
		int len = subMeshes.length;
		for (int i = 0; i < len; i++) {
			SkeletonSubMesh subMesh = subMeshes[i];
			if (i == 0) {
				subMesh.material.bind();
			} else if (!subMeshes[i - 1].material.equals(subMesh.material)) {
				subMesh.material.bind();
			}
			subMesh.mesh.render(subMesh.primitiveType);
		}
	} ##FSTMerge## @Override
	public void render () {
		int len = subMeshes.length;
		for (int i = 0; i < len; i++) {
			SkeletonSubMesh subMesh = subMeshes[i];
			if (i == 0) {
				subMesh.material.bind();
			} else if (!subMeshes[i - 1].material.equals(subMesh.material)) {
				subMesh.material.bind();
			}
			subMesh.mesh.render(subMesh.primitiveType);
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void render (ShaderProgram program) {
		int len = subMeshes.length;
		for (int i = 0; i < len; i++) {
			SkeletonSubMesh subMesh = subMeshes[i];
			if (i == 0) {
				subMesh.material.bind(program);
			} else if (!subMeshes[i - 1].material.equals(subMesh.material)) {
				subMesh.material.bind(program);
			}
			subMesh.mesh.render(program, subMesh.primitiveType);
		}
	} ##FSTMerge## @Override
	public void render (ShaderProgram program) {
		int len = subMeshes.length;
		for (int i = 0; i < len; i++) {
			SkeletonSubMesh subMesh = subMeshes[i];
			if (i == 0) {
				subMesh.material.bind(program);
			} else if (!subMeshes[i - 1].material.equals(subMesh.material)) {
				subMesh.material.bind(program);
			}
			subMesh.mesh.render(program, subMesh.primitiveType);
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void setMaterials (Material... materials) {
		if (materials.length != subMeshes.length)
			throw new UnsupportedOperationException("number of materials must equal number of sub-meshes");
		int len = materials.length;
		for (int i = 0; i < len; i++) {
			subMeshes[i].material = materials[i];
		}
	} ##FSTMerge## @Override
	public void setMaterials (Material... materials) {
		if (materials.length != subMeshes.length)
			throw new UnsupportedOperationException("number of materials must equal number of sub-meshes");
		int len = materials.length;
		for (int i = 0; i < len; i++) {
			subMeshes[i].material = materials[i];
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void setMaterial (Material material) {
		int len = subMeshes.length;
		for (int i = 0; i < len; i++) {
			subMeshes[i].material = material;
		}
	} ##FSTMerge## @Override
	public void setMaterial (Material material) {
		int len = subMeshes.length;
		for (int i = 0; i < len; i++) {
			subMeshes[i].material = material;
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public SubMesh getSubMesh (String name) {
		int len = subMeshes.length;
		for (int i = 0; i < len; i++) {
			if (subMeshes[i].name.equals(name)) return subMeshes[i];
		}
		return null;
	} ##FSTMerge## @Override
	public SubMesh getSubMesh (String name) {
		int len = subMeshes.length;
		for (int i = 0; i < len; i++) {
			if (subMeshes[i].name.equals(name)) return subMeshes[i];
		}
		return null;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public SubMesh[] getSubMeshes () {
		return subMeshes;
	} ##FSTMerge## @Override
	public SubMesh[] getSubMeshes () {
		return subMeshes;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public SkeletonAnimation getAnimation (String name) {
		return skeleton.animations.get(name);
	} ##FSTMerge## @Override
	public SkeletonAnimation getAnimation (String name) {
		return skeleton.animations.get(name);
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModel.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## protected SkeletonAnimation[] animations; ##FSTMerge## protected SkeletonAnimation[] animations;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public SkeletonAnimation[] getAnimations () {
		if (animations == null || animations.length != skeleton.animations.size) {
			animations = new SkeletonAnimation[skeleton.animations.size];
			int i = 0;
			for (SkeletonAnimation anim : skeleton.animations.values()) {
				animations[i++] = anim;
			}
		}
		return animations;
	} ##FSTMerge## @Override
	public SkeletonAnimation[] getAnimations () {
		if (animations == null || animations.length != skeleton.animations.size) {
			animations = new SkeletonAnimation[skeleton.animations.size];
			int i = 0;
			for (SkeletonAnimation anim : skeleton.animations.values()) {
				animations[i++] = anim;
			}
		}
		return animations;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public Model getSubModel (String... subMeshNames) {
		// FIXME
		return null;
	} ##FSTMerge## @Override
	public Model getSubModel (String... subMeshNames) {
		// FIXME
		return null;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModel.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final static BoundingBox tmpBox = new BoundingBox(); ##FSTMerge## private final static BoundingBox tmpBox = new BoundingBox();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void getBoundingBox (BoundingBox bbox) {
		bbox.inf();
		for (int i = 0; i < subMeshes.length; i++) {
			subMeshes[i].mesh.calculateBoundingBox(tmpBox);
			bbox.ext(tmpBox);
		}
	} ##FSTMerge## @Override
	public void getBoundingBox (BoundingBox bbox) {
		bbox.inf();
		for (int i = 0; i < subMeshes.length; i++) {
			subMeshes[i].mesh.calculateBoundingBox(tmpBox);
			bbox.ext(tmpBox);
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void dispose () {
		for (int i = 0; i < subMeshes.length; i++) {
			subMeshes[i].mesh.dispose();
		}
	} ##FSTMerge## @Override
	public void dispose () {
		for (int i = 0; i < subMeshes.length; i++) {
			subMeshes[i].mesh.dispose();
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonModel.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonKeyframe.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public float timeStamp = 0; ##FSTMerge## public float timeStamp = 0;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonKeyframe.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int parentIndex = -1; ##FSTMerge## public int parentIndex = -1;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonKeyframe.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final Vector3 position = new Vector3(); ##FSTMerge## public final Vector3 position = new Vector3();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonKeyframe.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final Vector3 scale = new Vector3(1, 1, 1); ##FSTMerge## public final Vector3 scale = new Vector3(1, 1, 1);
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonKeyframe.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final Quaternion rotation = new Quaternion(0, 0, 0, 1); ##FSTMerge## public final Quaternion rotation = new Quaternion(0, 0, 0, 1);
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonKeyframe.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public String toString () {
		return "time: " + timeStamp + ", " + "parent: " + parentIndex + ", " + "position: " + position + ", " + "scale: " + scale
			+ ", " + "rotation: " + rotation;
	} ##FSTMerge## public String toString () {
		return "time: " + timeStamp + ", " + "parent: " + parentIndex + ", " + "position: " + position + ", " + "scale: " + scale
			+ ", " + "rotation: " + rotation;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonKeyframe.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonJoint.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public String name; ##FSTMerge## public String name;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonJoint.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int index; ##FSTMerge## public int index;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonJoint.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int parentIndex; ##FSTMerge## public int parentIndex;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonJoint.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public SkeletonJoint parent; ##FSTMerge## public SkeletonJoint parent;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonJoint.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final Array<SkeletonJoint> children = new Array<SkeletonJoint>(1); ##FSTMerge## public final Array<SkeletonJoint> children = new Array<SkeletonJoint>(1);
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonJoint.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final Vector3 position = new Vector3(); ##FSTMerge## public final Vector3 position = new Vector3();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonJoint.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final Quaternion rotation = new Quaternion(new Vector3(0, 1, 0), 0); ##FSTMerge## public final Quaternion rotation = new Quaternion(new Vector3(0, 1, 0), 0);
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonJoint.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final Vector3 scale = new Vector3(1, 1, 1); ##FSTMerge## public final Vector3 scale = new Vector3(1, 1, 1);
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonJoint.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonAnimation.java
############## CONFLICT ##############
Conflict type: ExtendsList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## extends Animation ##FSTMerge## extends Animation
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonAnimation.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final SkeletonKeyframe[][] perJointkeyFrames; ##FSTMerge## public final SkeletonKeyframe[][] perJointkeyFrames;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonAnimation.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public SkeletonAnimation (String name, float totalDuration, SkeletonKeyframe[][] perJointKeyFrames) {
		super(name, totalDuration);
		this.perJointkeyFrames = perJointKeyFrames;
	} ##FSTMerge## public SkeletonAnimation (String name, float totalDuration, SkeletonKeyframe[][] perJointKeyFrames) {
		super(name, totalDuration);
		this.perJointkeyFrames = perJointKeyFrames;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/SkeletonAnimation.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/Skeleton.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final Array<SkeletonJoint> hierarchy = new Array<SkeletonJoint>(); ##FSTMerge## public final Array<SkeletonJoint> hierarchy = new Array<SkeletonJoint>();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/Skeleton.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final Array<String> jointNames = new Array<String>(); ##FSTMerge## public final Array<String> jointNames = new Array<String>();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/Skeleton.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final Map<String, Integer> namesToIndices = new HashMap<String, Integer>(); ##FSTMerge## public final Map<String, Integer> namesToIndices = new HashMap<String, Integer>();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/Skeleton.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final Array<SkeletonKeyframe> bindPoseJoints = new Array<SkeletonKeyframe>(); ##FSTMerge## public final Array<SkeletonKeyframe> bindPoseJoints = new Array<SkeletonKeyframe>();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/Skeleton.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final Array<SkeletonKeyframe> animPoseJoints = new Array<SkeletonKeyframe>(); ##FSTMerge## public final Array<SkeletonKeyframe> animPoseJoints = new Array<SkeletonKeyframe>();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/Skeleton.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final Array<Matrix4> offsetMatrices = new Array<Matrix4>(); ##FSTMerge## public final Array<Matrix4> offsetMatrices = new Array<Matrix4>();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/Skeleton.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final Array<Matrix4> sceneMatrices = new Array<Matrix4>(); ##FSTMerge## public final Array<Matrix4> sceneMatrices = new Array<Matrix4>();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/Skeleton.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final Array<Matrix4> combinedMatrices = new Array<Matrix4>(); ##FSTMerge## public final Array<Matrix4> combinedMatrices = new Array<Matrix4>();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/Skeleton.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final ObjectMap<String, SkeletonAnimation> animations = new ObjectMap<String, SkeletonAnimation>(); ##FSTMerge## public final ObjectMap<String, SkeletonAnimation> animations = new ObjectMap<String, SkeletonAnimation>();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/Skeleton.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static final Matrix4 IDENTITY = new Matrix4(); ##FSTMerge## private static final Matrix4 IDENTITY = new Matrix4();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/Skeleton.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final Matrix4 rotMatrix = new Matrix4(); ##FSTMerge## private final Matrix4 rotMatrix = new Matrix4();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/Skeleton.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void buildFromHierarchy () {
		jointNames.clear();
		namesToIndices.clear();
		bindPoseJoints.clear();
		animPoseJoints.clear();
		offsetMatrices.clear();
		sceneMatrices.clear();

		for (int i = 0; i < hierarchy.size; i++) {
			recursiveFill(hierarchy.get(i));
		}

		calculateMatrices(bindPoseJoints);
		calculateOffsetMatrices();
	} ##FSTMerge## public void buildFromHierarchy () {
		jointNames.clear();
		namesToIndices.clear();
		bindPoseJoints.clear();
		animPoseJoints.clear();
		offsetMatrices.clear();
		sceneMatrices.clear();

		for (int i = 0; i < hierarchy.size; i++) {
			recursiveFill(hierarchy.get(i));
		}

		calculateMatrices(bindPoseJoints);
		calculateOffsetMatrices();
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/Skeleton.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void recursiveFill (SkeletonJoint joint) {
		joint.index = bindPoseJoints.size;
		joint.parentIndex = joint.parent != null ? joint.parent.index : -1;

		SkeletonKeyframe keyFrame = new SkeletonKeyframe();
		keyFrame.position.set(joint.position);
		keyFrame.scale.set(joint.scale);
		keyFrame.rotation.set(joint.rotation);
		keyFrame.parentIndex = joint.parentIndex;

		jointNames.add(joint.name);
		namesToIndices.put(joint.name, joint.index);
		bindPoseJoints.add(keyFrame);
		SkeletonKeyframe animKeyframe = new SkeletonKeyframe();
		animKeyframe.parentIndex = joint.parentIndex;
		animPoseJoints.add(animKeyframe);
		offsetMatrices.add(new Matrix4());
		sceneMatrices.add(new Matrix4());
		combinedMatrices.add(new Matrix4());

		int len = joint.children.size;
		for (int i = 0; i < len; i++) {
			recursiveFill(joint.children.get(i));
		}
	} ##FSTMerge## private void recursiveFill (SkeletonJoint joint) {
		joint.index = bindPoseJoints.size;
		joint.parentIndex = joint.parent != null ? joint.parent.index : -1;

		SkeletonKeyframe keyFrame = new SkeletonKeyframe();
		keyFrame.position.set(joint.position);
		keyFrame.scale.set(joint.scale);
		keyFrame.rotation.set(joint.rotation);
		keyFrame.parentIndex = joint.parentIndex;

		jointNames.add(joint.name);
		namesToIndices.put(joint.name, joint.index);
		bindPoseJoints.add(keyFrame);
		SkeletonKeyframe animKeyframe = new SkeletonKeyframe();
		animKeyframe.parentIndex = joint.parentIndex;
		animPoseJoints.add(animKeyframe);
		offsetMatrices.add(new Matrix4());
		sceneMatrices.add(new Matrix4());
		combinedMatrices.add(new Matrix4());

		int len = joint.children.size;
		for (int i = 0; i < len; i++) {
			recursiveFill(joint.children.get(i));
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/Skeleton.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## protected void calculateOffsetMatrices () {
		for (int i = 0; i < offsetMatrices.size; i++) {
			offsetMatrices.get(i).set(sceneMatrices.get(i)).inv();
		}
	} ##FSTMerge## protected void calculateOffsetMatrices () {
		for (int i = 0; i < offsetMatrices.size; i++) {
			offsetMatrices.get(i).set(sceneMatrices.get(i)).inv();
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/Skeleton.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## protected void calculateMatrices (Array<SkeletonKeyframe> joints) {
		for (int i = 0; i < joints.size; i++) {
			SkeletonKeyframe joint = joints.get(i);
			Matrix4 sceneMatrix = sceneMatrices.get(i);
			Matrix4 parentMatrix = joint.parentIndex != -1 ? sceneMatrices.get(joint.parentIndex) : IDENTITY;
			Matrix4 combinedMatrix = combinedMatrices.get(i);

			joint.rotation.toMatrix(rotMatrix.val);
			rotMatrix.trn(joint.position);
			rotMatrix.scl(joint.scale);
			sceneMatrix.set(parentMatrix);
			sceneMatrix.mul(rotMatrix);

			combinedMatrix.set(sceneMatrix);
			combinedMatrix.mul(offsetMatrices.get(i));
		}
	} ##FSTMerge## protected void calculateMatrices (Array<SkeletonKeyframe> joints) {
		for (int i = 0; i < joints.size; i++) {
			SkeletonKeyframe joint = joints.get(i);
			Matrix4 sceneMatrix = sceneMatrices.get(i);
			Matrix4 parentMatrix = joint.parentIndex != -1 ? sceneMatrices.get(joint.parentIndex) : IDENTITY;
			Matrix4 combinedMatrix = combinedMatrices.get(i);

			joint.rotation.toMatrix(rotMatrix.val);
			rotMatrix.trn(joint.position);
			rotMatrix.scl(joint.scale);
			sceneMatrix.set(parentMatrix);
			sceneMatrix.mul(rotMatrix);

			combinedMatrix.set(sceneMatrix);
			combinedMatrix.mul(offsetMatrices.get(i));
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/Skeleton.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void setAnimation (String name, float time) {
		SkeletonAnimation anim = animations.get(name);
		if (anim == null) throw new IllegalArgumentException("Animation with name '" + name + "' does not exist");
		if (time < 0 || time > anim.totalDuration)
			throw new IllegalArgumentException("time must be 0 <= time <= animation duration");

		int len = anim.perJointkeyFrames.length;
		for (int i = 0; i < len; i++) {
			SkeletonKeyframe[] jointTrack = anim.perJointkeyFrames[i];
			int idx = 0;
			int len2 = jointTrack.length;
			for (int j = 0; j < len2; j++) {
				SkeletonKeyframe jointFrame = jointTrack[j];
				if (jointFrame.timeStamp >= time) {
					idx = Math.max(0, j - 1);
					break;
				}
			}

			SkeletonKeyframe startFrame = jointTrack[idx];
			SkeletonKeyframe endFrame = idx + 1 == len2 ? startFrame : jointTrack[idx + 1];
			float alpha = 0;

			if (startFrame != endFrame) {
				alpha = Math.min(1, (time - startFrame.timeStamp) / (endFrame.timeStamp - startFrame.timeStamp));
			}
			SkeletonKeyframe animFrame = animPoseJoints.get(i);
			animFrame.position.set(startFrame.position).lerp(endFrame.position, alpha);
			animFrame.scale.set(startFrame.scale).lerp(endFrame.scale, alpha);
			animFrame.rotation.set(startFrame.rotation).slerp(endFrame.rotation, alpha);
		}

		calculateMatrices(animPoseJoints);
	} ##FSTMerge## public void setAnimation (String name, float time) {
		SkeletonAnimation anim = animations.get(name);
		if (anim == null) throw new IllegalArgumentException("Animation with name '" + name + "' does not exist");
		if (time < 0 || time > anim.totalDuration)
			throw new IllegalArgumentException("time must be 0 <= time <= animation duration");

		int len = anim.perJointkeyFrames.length;
		for (int i = 0; i < len; i++) {
			SkeletonKeyframe[] jointTrack = anim.perJointkeyFrames[i];
			int idx = 0;
			int len2 = jointTrack.length;
			for (int j = 0; j < len2; j++) {
				SkeletonKeyframe jointFrame = jointTrack[j];
				if (jointFrame.timeStamp >= time) {
					idx = Math.max(0, j - 1);
					break;
				}
			}

			SkeletonKeyframe startFrame = jointTrack[idx];
			SkeletonKeyframe endFrame = idx + 1 == len2 ? startFrame : jointTrack[idx + 1];
			float alpha = 0;

			if (startFrame != endFrame) {
				alpha = Math.min(1, (time - startFrame.timeStamp) / (endFrame.timeStamp - startFrame.timeStamp));
			}
			SkeletonKeyframe animFrame = animPoseJoints.get(i);
			animFrame.position.set(startFrame.position).lerp(endFrame.position, alpha);
			animFrame.scale.set(startFrame.scale).lerp(endFrame.scale, alpha);
			animFrame.rotation.set(startFrame.rotation).slerp(endFrame.rotation, alpha);
		}

		calculateMatrices(animPoseJoints);
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/Skeleton.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void setBindPose () {
		calculateMatrices(bindPoseJoints);
	} ##FSTMerge## public void setBindPose () {
		calculateMatrices(bindPoseJoints);
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/skeleton/Skeleton.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedSubMesh.java
############## CONFLICT ##############
Conflict type: ExtendsList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## extends SubMesh ##FSTMerge## extends SubMesh
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedSubMesh.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final float[] blendedVertices; ##FSTMerge## public final float[] blendedVertices;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedSubMesh.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final int animatedComponents; ##FSTMerge## public final int animatedComponents;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedSubMesh.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final ObjectMap<String, KeyframedAnimation> animations; ##FSTMerge## public final ObjectMap<String, KeyframedAnimation> animations;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedSubMesh.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public KeyframedSubMesh (String name, Mesh mesh, float[] blendedVertices, ObjectMap<String, KeyframedAnimation> animations,
		int animatedComponents, int primitiveType) {
		
		super(name, mesh, primitiveType);
		
		this.blendedVertices = blendedVertices;
		this.animations = animations;
		this.animatedComponents = animatedComponents;
	} ##FSTMerge## public KeyframedSubMesh (String name, Mesh mesh, float[] blendedVertices, ObjectMap<String, KeyframedAnimation> animations,
		int animatedComponents, int primitiveType) {
		
		super(name, mesh, primitiveType);
		
		this.blendedVertices = blendedVertices;
		this.animations = animations;
		this.animatedComponents = animatedComponents;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedSubMesh.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void getBoundingBox (BoundingBox bbox) {
		mesh.calculateBoundingBox(bbox);
	} ##FSTMerge## @Override
	public void getBoundingBox (BoundingBox bbox) {
		mesh.calculateBoundingBox(bbox);
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedSubMesh.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedModel.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements AnimatedModel, Disposable ##FSTMerge## implements AnimatedModel, Disposable
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedModel.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final KeyframedSubMesh[] subMeshes; ##FSTMerge## public final KeyframedSubMesh[] subMeshes;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedModel.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## protected final KeyframedAnimation[] animations; ##FSTMerge## protected final KeyframedAnimation[] animations;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public KeyframedModel (KeyframedSubMesh[] subMeshes) {
		this.subMeshes = subMeshes;

		Array<KeyframedAnimation> meshAnims = subMeshes[0].animations.values().toArray();
		animations = new KeyframedAnimation[meshAnims.size];
		for (int i = 0; i < animations.length; i++) {
			animations[i] = meshAnims.get(i);
		}

		checkValidity();
	} ##FSTMerge## public KeyframedModel (KeyframedSubMesh[] subMeshes) {
		this.subMeshes = subMeshes;

		Array<KeyframedAnimation> meshAnims = subMeshes[0].animations.values().toArray();
		animations = new KeyframedAnimation[meshAnims.size];
		for (int i = 0; i < animations.length; i++) {
			animations[i] = meshAnims.get(i);
		}

		checkValidity();
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void checkValidity () {
		for (int i = 0; i < subMeshes.length; i++) {
			if (subMeshes[i].animations.size != animations.length)
				throw new GdxRuntimeException("number of animations in subMesh[0] is not the same in subMesh[" + i
					+ "]. All sub-meshes must have the same animations and number of frames");
		}

		for (int i = 0; i < animations.length; i++) {
			KeyframedAnimation anim = animations[i];
			for (int j = 0; j < subMeshes.length; j++) {
				KeyframedAnimation otherAnim = subMeshes[j].animations.get(anim.name);
				if (otherAnim == null) throw new GdxRuntimeException("animation '" + anim.name + "' missing in subMesh[" + j + "]");
				if (otherAnim.frameDuration != anim.frameDuration)
					throw new GdxRuntimeException("animation '" + anim.name + "' in subMesh[" + j
						+ "] has different frame duration than the same animation in subMesh[0]");
				if (otherAnim.keyframes.length != anim.keyframes.length)
					throw new GdxRuntimeException("animation '" + anim.name + "' in subMesh[" + j
						+ "] has different number of keyframes than the same animation in subMesh[0]");
			}
		}
	} ##FSTMerge## private void checkValidity () {
		for (int i = 0; i < subMeshes.length; i++) {
			if (subMeshes[i].animations.size != animations.length)
				throw new GdxRuntimeException("number of animations in subMesh[0] is not the same in subMesh[" + i
					+ "]. All sub-meshes must have the same animations and number of frames");
		}

		for (int i = 0; i < animations.length; i++) {
			KeyframedAnimation anim = animations[i];
			for (int j = 0; j < subMeshes.length; j++) {
				KeyframedAnimation otherAnim = subMeshes[j].animations.get(anim.name);
				if (otherAnim == null) throw new GdxRuntimeException("animation '" + anim.name + "' missing in subMesh[" + j + "]");
				if (otherAnim.frameDuration != anim.frameDuration)
					throw new GdxRuntimeException("animation '" + anim.name + "' in subMesh[" + j
						+ "] has different frame duration than the same animation in subMesh[0]");
				if (otherAnim.keyframes.length != anim.keyframes.length)
					throw new GdxRuntimeException("animation '" + anim.name + "' in subMesh[" + j
						+ "] has different number of keyframes than the same animation in subMesh[0]");
			}
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void render () {
		int len = subMeshes.length;
		for (int i = 0; i < len; i++) {
			KeyframedSubMesh subMesh = subMeshes[i];
			if (i == 0 || !subMeshes[i - 1].material.equals(subMesh.material)) {
				subMesh.material.bind();
			}
			subMesh.mesh.render(subMesh.primitiveType);
		}
	} ##FSTMerge## @Override
	public void render () {
		int len = subMeshes.length;
		for (int i = 0; i < len; i++) {
			KeyframedSubMesh subMesh = subMeshes[i];
			if (i == 0 || !subMeshes[i - 1].material.equals(subMesh.material)) {
				subMesh.material.bind();
			}
			subMesh.mesh.render(subMesh.primitiveType);
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void render (ShaderProgram program) {
		int len = subMeshes.length;
		for (int i = 0; i < len; i++) {
			KeyframedSubMesh subMesh = subMeshes[i];
			if (i == 0 || !subMeshes[i - 1].material.equals(subMesh.material)) {
				subMesh.material.bind(program);
			}
			subMesh.mesh.render(program, subMesh.primitiveType);
		}
	} ##FSTMerge## @Override
	public void render (ShaderProgram program) {
		int len = subMeshes.length;
		for (int i = 0; i < len; i++) {
			KeyframedSubMesh subMesh = subMeshes[i];
			if (i == 0 || !subMeshes[i - 1].material.equals(subMesh.material)) {
				subMesh.material.bind(program);
			}
			subMesh.mesh.render(program, subMesh.primitiveType);
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void setMaterials (Material... materials) {
		if (materials.length != subMeshes.length)
			throw new UnsupportedOperationException("number of materials must equal number of sub-meshes");
		int len = materials.length;
		for (int i = 0; i < len; i++) {
			subMeshes[i].material = materials[i];
		}
	} ##FSTMerge## @Override
	public void setMaterials (Material... materials) {
		if (materials.length != subMeshes.length)
			throw new UnsupportedOperationException("number of materials must equal number of sub-meshes");
		int len = materials.length;
		for (int i = 0; i < len; i++) {
			subMeshes[i].material = materials[i];
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void setMaterial (Material material) {
		int len = subMeshes.length;
		for (int i = 0; i < len; i++) {
			subMeshes[i].material = material;
		}
	} ##FSTMerge## @Override
	public void setMaterial (Material material) {
		int len = subMeshes.length;
		for (int i = 0; i < len; i++) {
			subMeshes[i].material = material;
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public KeyframedSubMesh getSubMesh (String name) {
		int len = subMeshes.length;
		for (int i = 0; i < len; i++) {
			if (subMeshes[i].name.equals(name)) return subMeshes[i];
		}
		return null;
	} ##FSTMerge## @Override
	public KeyframedSubMesh getSubMesh (String name) {
		int len = subMeshes.length;
		for (int i = 0; i < len; i++) {
			if (subMeshes[i].name.equals(name)) return subMeshes[i];
		}
		return null;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public SubMesh[] getSubMeshes () {
		return subMeshes;
	} ##FSTMerge## @Override
	public SubMesh[] getSubMeshes () {
		return subMeshes;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void setAnimation (String animation, float time, boolean loop) {
		int len = subMeshes.length;
		for (int i = 0; i < len; i++) {
			final KeyframedSubMesh subMesh = subMeshes[i];
			final KeyframedAnimation anim = subMesh.animations.get(animation);
			if (anim == null) throw new IllegalArgumentException("No animation with name '" + animation + "' in submesh #" + i);
			if (time < 0 || time > anim.totalDuration)
				throw new IllegalArgumentException("time must be 0 <= time <= animation duration");

			final int startIndex = (int)Math.floor((time / anim.frameDuration));
			final Keyframe startFrame = anim.keyframes[startIndex];
			final Keyframe endFrame = anim.keyframes[anim.keyframes.length - 1 == startIndex ? loop ? 0 : startIndex
				: startIndex + 1];

			final int numComponents = subMesh.animatedComponents;
			final float[] src = startFrame.vertices;
			final int srcLen = numComponents * subMesh.mesh.getNumVertices();

			final float[] dst = subMesh.blendedVertices;
			final int dstInc = subMesh.mesh.getVertexSize() / 4 - numComponents;

			if (startFrame == endFrame) {
				for (int srcIdx = 0, dstIdx = 0; srcIdx < srcLen; dstIdx += dstInc) {
					for (int j = 0; j < numComponents; j++) {
						dst[dstIdx++] = src[srcIdx++];
					}
				}
			} else {
				float[] src2 = endFrame.vertices;
				float alpha = (time - (startIndex * anim.frameDuration)) / anim.frameDuration;
				for (int srcIdx = 0, dstIdx = 0; srcIdx < srcLen; dstIdx += dstInc) {
					for (int j = 0; j < numComponents; j++) {
						final float valSrc = src[srcIdx];
						final float valSrc2 = src2[srcIdx++];
						dst[dstIdx++] = valSrc + (valSrc2 - valSrc) * alpha;
					}
				}
			}

			subMesh.mesh.setVertices(dst);
		}
	} ##FSTMerge## @Override
	public void setAnimation (String animation, float time, boolean loop) {
		int len = subMeshes.length;
		for (int i = 0; i < len; i++) {
			final KeyframedSubMesh subMesh = subMeshes[i];
			final KeyframedAnimation anim = subMesh.animations.get(animation);
			if (anim == null) throw new IllegalArgumentException("No animation with name '" + animation + "' in submesh #" + i);
			if (time < 0 || time > anim.totalDuration)
				throw new IllegalArgumentException("time must be 0 <= time <= animation duration");

			final int startIndex = (int)Math.floor((time / anim.frameDuration));
			final Keyframe startFrame = anim.keyframes[startIndex];
			final Keyframe endFrame = anim.keyframes[anim.keyframes.length - 1 == startIndex ? loop ? 0 : startIndex
				: startIndex + 1];

			final int numComponents = subMesh.animatedComponents;
			final float[] src = startFrame.vertices;
			final int srcLen = numComponents * subMesh.mesh.getNumVertices();

			final float[] dst = subMesh.blendedVertices;
			final int dstInc = subMesh.mesh.getVertexSize() / 4 - numComponents;

			if (startFrame == endFrame) {
				for (int srcIdx = 0, dstIdx = 0; srcIdx < srcLen; dstIdx += dstInc) {
					for (int j = 0; j < numComponents; j++) {
						dst[dstIdx++] = src[srcIdx++];
					}
				}
			} else {
				float[] src2 = endFrame.vertices;
				float alpha = (time - (startIndex * anim.frameDuration)) / anim.frameDuration;
				for (int srcIdx = 0, dstIdx = 0; srcIdx < srcLen; dstIdx += dstInc) {
					for (int j = 0; j < numComponents; j++) {
						final float valSrc = src[srcIdx];
						final float valSrc2 = src2[srcIdx++];
						dst[dstIdx++] = valSrc + (valSrc2 - valSrc) * alpha;
					}
				}
			}

			subMesh.mesh.setVertices(dst);
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public KeyframedAnimation getAnimation (String name) {
		return subMeshes[0].animations.get(name);
	} ##FSTMerge## @Override
	public KeyframedAnimation getAnimation (String name) {
		return subMeshes[0].animations.get(name);
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public KeyframedAnimation[] getAnimations () {
		return animations;
	} ##FSTMerge## @Override
	public KeyframedAnimation[] getAnimations () {
		return animations;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public Model getSubModel (String... subMeshNames) {
		// FIXME
		return null;
	} ##FSTMerge## @Override
	public Model getSubModel (String... subMeshNames) {
		// FIXME
		return null;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedModel.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final static BoundingBox tmpBox = new BoundingBox(); ##FSTMerge## private final static BoundingBox tmpBox = new BoundingBox();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void getBoundingBox (BoundingBox bbox) {
		bbox.inf();
		for (int i = 0; i < subMeshes.length; i++) {
			subMeshes[i].mesh.calculateBoundingBox(tmpBox);
			bbox.ext(tmpBox);
		}
	} ##FSTMerge## @Override
	public void getBoundingBox (BoundingBox bbox) {
		bbox.inf();
		for (int i = 0; i < subMeshes.length; i++) {
			subMeshes[i].mesh.calculateBoundingBox(tmpBox);
			bbox.ext(tmpBox);
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedModel.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void dispose () {
		for (int i = 0; i < subMeshes.length; i++) {
			subMeshes[i].mesh.dispose();
		}
	} ##FSTMerge## @Override
	public void dispose () {
		for (int i = 0; i < subMeshes.length; i++) {
			subMeshes[i].mesh.dispose();
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedModel.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedAnimation.java
############## CONFLICT ##############
Conflict type: ExtendsList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## extends Animation ##FSTMerge## extends Animation
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedAnimation.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final float frameDuration; ##FSTMerge## public final float frameDuration;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedAnimation.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final Keyframe[] keyframes; ##FSTMerge## public final Keyframe[] keyframes;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedAnimation.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public KeyframedAnimation (String name, float frameDuration, Keyframe[] keyframes) {
		super(name, frameDuration * keyframes.length);
		this.frameDuration = frameDuration;
		this.keyframes = keyframes;
	} ##FSTMerge## public KeyframedAnimation (String name, float frameDuration, Keyframe[] keyframes) {
		super(name, frameDuration * keyframes.length);
		this.frameDuration = frameDuration;
		this.keyframes = keyframes;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/KeyframedAnimation.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/Keyframe.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final float timeStamp; ##FSTMerge## public final float timeStamp;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/Keyframe.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final float[] vertices; ##FSTMerge## public final float[] vertices;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/Keyframe.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Keyframe (float timeStamp, float[] vertices) {
		this.timeStamp = timeStamp;
		this.vertices = vertices;
	} ##FSTMerge## public Keyframe (float timeStamp, float[] vertices) {
		this.timeStamp = timeStamp;
		this.vertices = vertices;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/model/keyframe/Keyframe.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public abstract ##FSTMerge## public abstract
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/materials/MaterialAttribute.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static final String FLAG = "Flag"; ##FSTMerge## private static final String FLAG = "Flag";
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/materials/MaterialAttribute.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public String name; ##FSTMerge## public String name;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/materials/MaterialAttribute.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## protected final boolean isPooled; ##FSTMerge## protected final boolean isPooled;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/materials/MaterialAttribute.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## protected MaterialAttribute () {
		isPooled = true;
	} ##FSTMerge## protected MaterialAttribute () {
		isPooled = true;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/materials/MaterialAttribute.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public MaterialAttribute (String name) {
		this.name = name;
		isPooled = false;
	} ##FSTMerge## public MaterialAttribute (String name) {
		this.name = name;
		isPooled = false;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/materials/MaterialAttribute.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public abstract void bind (); ##FSTMerge## public abstract void bind ();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/materials/MaterialAttribute.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public abstract void bind (ShaderProgram program); ##FSTMerge## public abstract void bind (ShaderProgram program);
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/materials/MaterialAttribute.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public abstract MaterialAttribute copy (); ##FSTMerge## public abstract MaterialAttribute copy ();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/materials/MaterialAttribute.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public abstract MaterialAttribute pooledCopy (); ##FSTMerge## public abstract MaterialAttribute pooledCopy ();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/materials/MaterialAttribute.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public abstract void free (); ##FSTMerge## public abstract void free ();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/materials/MaterialAttribute.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public abstract void set (MaterialAttribute attr); ##FSTMerge## public abstract void set (MaterialAttribute attr);
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/materials/MaterialAttribute.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public String getShaderFlag () {
		return name + FLAG;
	} ##FSTMerge## public String getShaderFlag () {
		return name + FLAG;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/materials/MaterialAttribute.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/StillModelLoader.java
############## CONFLICT ##############
Conflict type: ExtendsList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## extends ModelLoader ##FSTMerge## extends ModelLoader
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/StillModelLoader.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public StillModel load (FileHandle handle, ModelLoaderHints hints); ##FSTMerge## public StillModel load (FileHandle handle, ModelLoaderHints hints);
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/StillModelLoader.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/SkeletonModelLoader.java
############## CONFLICT ##############
Conflict type: ExtendsList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## extends ModelLoader ##FSTMerge## extends ModelLoader
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/SkeletonModelLoader.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public SkeletonModel load (FileHandle file, ModelLoaderHints hints); ##FSTMerge## public SkeletonModel load (FileHandle file, ModelLoaderHints hints);
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/SkeletonModelLoader.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/ModelLoaderRegistry.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static Map<String, Array<ModelLoader>> loaders = new HashMap<String, Array<ModelLoader>>(); ##FSTMerge## private static Map<String, Array<ModelLoader>> loaders = new HashMap<String, Array<ModelLoader>>();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/ModelLoaderRegistry.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static Map<String, Array<ModelLoaderHints>> defaultHints = new HashMap<String, Array<ModelLoaderHints>>(); ##FSTMerge## private static Map<String, Array<ModelLoaderHints>> defaultHints = new HashMap<String, Array<ModelLoaderHints>>();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/ModelLoaderRegistry.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static void registerLoader (String extension, ModelLoader loader, ModelLoaderHints defaultHints) {
		Array<ModelLoader> loaders = ModelLoaderRegistry.loaders.get(extension);
		if (loaders == null) {
			loaders = new Array<ModelLoader>();
			ModelLoaderRegistry.loaders.put(extension.toLowerCase(), loaders);
		}
		loaders.add(loader);

		Array<ModelLoaderHints> hints = ModelLoaderRegistry.defaultHints.get(extension);
		if (hints == null) {
			hints = new Array<ModelLoaderHints>();
			ModelLoaderRegistry.defaultHints.put(extension.toLowerCase(), hints);
		}
		hints.add(defaultHints);
	} ##FSTMerge## public static void registerLoader (String extension, ModelLoader loader, ModelLoaderHints defaultHints) {
		Array<ModelLoader> loaders = ModelLoaderRegistry.loaders.get(extension);
		if (loaders == null) {
			loaders = new Array<ModelLoader>();
			ModelLoaderRegistry.loaders.put(extension.toLowerCase(), loaders);
		}
		loaders.add(loader);

		Array<ModelLoaderHints> hints = ModelLoaderRegistry.defaultHints.get(extension);
		if (hints == null) {
			hints = new Array<ModelLoaderHints>();
			ModelLoaderRegistry.defaultHints.put(extension.toLowerCase(), hints);
		}
		hints.add(defaultHints);
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/ModelLoaderRegistry.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static Model load (FileHandle file) {
		String name = file.name();
		int dotIndex = name.lastIndexOf('.');
		if (dotIndex == -1)
			throw new GdxRuntimeException("file '" + file.name()
				+ "' does not have an extension that can be matched to a ModelLoader");
		String extension = name.substring(dotIndex + 1).toLowerCase();

		Array<ModelLoader> loaders = ModelLoaderRegistry.loaders.get(extension);
		Array<ModelLoaderHints> hints = ModelLoaderRegistry.defaultHints.get(extension);
		if (loaders == null) throw new GdxRuntimeException("no loaders for extension '" + extension + "'");
		if (hints == null) throw new GdxRuntimeException("no default hints for extension '" + extension + "'");

		Model model = null;
		StringBuilder errors = new StringBuilder();
		for (int i = 0; i < loaders.size; i++) {
			ModelLoader loader = loaders.get(i);
			ModelLoaderHints hint = hints.get(i);
			try {
				model = loader.load(file, hint);
			} catch (GdxRuntimeException e) {
				errors.append("Couldn't load '" + file.name() + "' with loader of type " + loader.getClass().getName() + ": "
					+ e.getMessage() + "\n");
			}
		}

		if (model == null)
			throw new GdxRuntimeException(errors.toString());
		else
			return model;
	} ##FSTMerge## public static Model load (FileHandle file) {
		String name = file.name();
		int dotIndex = name.lastIndexOf('.');
		if (dotIndex == -1)
			throw new GdxRuntimeException("file '" + file.name()
				+ "' does not have an extension that can be matched to a ModelLoader");
		String extension = name.substring(dotIndex + 1).toLowerCase();

		Array<ModelLoader> loaders = ModelLoaderRegistry.loaders.get(extension);
		Array<ModelLoaderHints> hints = ModelLoaderRegistry.defaultHints.get(extension);
		if (loaders == null) throw new GdxRuntimeException("no loaders for extension '" + extension + "'");
		if (hints == null) throw new GdxRuntimeException("no default hints for extension '" + extension + "'");

		Model model = null;
		StringBuilder errors = new StringBuilder();
		for (int i = 0; i < loaders.size; i++) {
			ModelLoader loader = loaders.get(i);
			ModelLoaderHints hint = hints.get(i);
			try {
				model = loader.load(file, hint);
			} catch (GdxRuntimeException e) {
				errors.append("Couldn't load '" + file.name() + "' with loader of type " + loader.getClass().getName() + ": "
					+ e.getMessage() + "\n");
			}
		}

		if (model == null)
			throw new GdxRuntimeException(errors.toString());
		else
			return model;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/ModelLoaderRegistry.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static Model load (FileHandle file, ModelLoaderHints hints) {
		String name = file.name();
		int dotIndex = name.lastIndexOf('.');
		if (dotIndex == -1)
			throw new GdxRuntimeException("file '" + file.name()
				+ "' does not have an extension that can be matched to a ModelLoader");
		String extension = name.substring(dotIndex + 1).toLowerCase();

		Array<ModelLoader> loaders = ModelLoaderRegistry.loaders.get(extension);
		if (loaders == null) throw new GdxRuntimeException("no loaders for extension '" + extension + "'");

		Model model = null;
		StringBuilder errors = new StringBuilder();
		for (int i = 0; i < loaders.size; i++) {
			ModelLoader loader = loaders.get(i);
			try {
				model = loader.load(file, hints);
			} catch (GdxRuntimeException e) {
				errors.append("Couldn't load '" + file.name() + "' with loader of type " + loader.getClass().getName() + ": "
					+ e.getMessage() + "\n");
			}
		}

		if (model == null)
			throw new GdxRuntimeException(errors.toString());
		else
			return model;
	} ##FSTMerge## public static Model load (FileHandle file, ModelLoaderHints hints) {
		String name = file.name();
		int dotIndex = name.lastIndexOf('.');
		if (dotIndex == -1)
			throw new GdxRuntimeException("file '" + file.name()
				+ "' does not have an extension that can be matched to a ModelLoader");
		String extension = name.substring(dotIndex + 1).toLowerCase();

		Array<ModelLoader> loaders = ModelLoaderRegistry.loaders.get(extension);
		if (loaders == null) throw new GdxRuntimeException("no loaders for extension '" + extension + "'");

		Model model = null;
		StringBuilder errors = new StringBuilder();
		for (int i = 0; i < loaders.size; i++) {
			ModelLoader loader = loaders.get(i);
			try {
				model = loader.load(file, hints);
			} catch (GdxRuntimeException e) {
				errors.append("Couldn't load '" + file.name() + "' with loader of type " + loader.getClass().getName() + ": "
					+ e.getMessage() + "\n");
			}
		}

		if (model == null)
			throw new GdxRuntimeException(errors.toString());
		else
			return model;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/ModelLoaderRegistry.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static StillModel loadStillModel (FileHandle file) {
		String name = file.name();
		int dotIndex = name.lastIndexOf('.');
		if (dotIndex == -1)
			throw new GdxRuntimeException("file '" + file.name()
				+ "' does not have an extension that can be matched to a ModelLoader");
		String extension = name.substring(dotIndex + 1).toLowerCase();

		Array<ModelLoader> loaders = ModelLoaderRegistry.loaders.get(extension);
		Array<ModelLoaderHints> hints = ModelLoaderRegistry.defaultHints.get(extension);
		if (loaders == null) throw new GdxRuntimeException("no loaders for extension '" + extension + "'");
		if (hints == null) throw new GdxRuntimeException("no default hints for extension '" + extension + "'");

		StillModel model = null;
		StringBuilder errors = new StringBuilder();
		for (int i = 0; i < loaders.size; i++) {
			ModelLoader loader = loaders.get(i);
			ModelLoaderHints hint = hints.get(i);
			try {
				if (loader instanceof StillModelLoader) {
					model = ((StillModelLoader)loader).load(file, hint);
				}
			} catch (GdxRuntimeException e) {
				errors.append("Couldn't load '" + file.name() + "' with loader of type " + loader.getClass().getName() + ": "
					+ e.getMessage() + "\n");
			}
		}

		if (model == null)
			throw new GdxRuntimeException("Couldn't load model '" + file.name() + "', " + errors.toString());
		else
			return model;
	} ##FSTMerge## public static StillModel loadStillModel (FileHandle file) {
		String name = file.name();
		int dotIndex = name.lastIndexOf('.');
		if (dotIndex == -1)
			throw new GdxRuntimeException("file '" + file.name()
				+ "' does not have an extension that can be matched to a ModelLoader");
		String extension = name.substring(dotIndex + 1).toLowerCase();

		Array<ModelLoader> loaders = ModelLoaderRegistry.loaders.get(extension);
		Array<ModelLoaderHints> hints = ModelLoaderRegistry.defaultHints.get(extension);
		if (loaders == null) throw new GdxRuntimeException("no loaders for extension '" + extension + "'");
		if (hints == null) throw new GdxRuntimeException("no default hints for extension '" + extension + "'");

		StillModel model = null;
		StringBuilder errors = new StringBuilder();
		for (int i = 0; i < loaders.size; i++) {
			ModelLoader loader = loaders.get(i);
			ModelLoaderHints hint = hints.get(i);
			try {
				if (loader instanceof StillModelLoader) {
					model = ((StillModelLoader)loader).load(file, hint);
				}
			} catch (GdxRuntimeException e) {
				errors.append("Couldn't load '" + file.name() + "' with loader of type " + loader.getClass().getName() + ": "
					+ e.getMessage() + "\n");
			}
		}

		if (model == null)
			throw new GdxRuntimeException("Couldn't load model '" + file.name() + "', " + errors.toString());
		else
			return model;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/ModelLoaderRegistry.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static StillModel loadStillModel (FileHandle file, ModelLoaderHints hints) {
		String name = file.name();
		int dotIndex = name.lastIndexOf('.');
		if (dotIndex == -1)
			throw new GdxRuntimeException("file '" + file.name()
				+ "' does not have an extension that can be matched to a ModelLoader");
		String extension = name.substring(dotIndex + 1).toLowerCase();

		Array<ModelLoader> loaders = ModelLoaderRegistry.loaders.get(extension);
		if (loaders == null) throw new GdxRuntimeException("no loaders for extension '" + extension + "'");

		StillModel model = null;
		StringBuilder errors = new StringBuilder();
		for (int i = 0; i < loaders.size; i++) {
			ModelLoader loader = loaders.get(i);
			try {
				if (loader instanceof StillModelLoader) {
					model = ((StillModelLoader)loader).load(file, hints);
				}
			} catch (GdxRuntimeException e) {
				errors.append("Couldn't load '" + file.name() + "' with loader of type " + loader.getClass().getName() + ": "
					+ e.getMessage() + "\n");
			}
		}

		if (model == null)
			throw new GdxRuntimeException("Couldn't load model '" + file.name() + "', " + errors.toString());
		else
			return model;
	} ##FSTMerge## public static StillModel loadStillModel (FileHandle file, ModelLoaderHints hints) {
		String name = file.name();
		int dotIndex = name.lastIndexOf('.');
		if (dotIndex == -1)
			throw new GdxRuntimeException("file '" + file.name()
				+ "' does not have an extension that can be matched to a ModelLoader");
		String extension = name.substring(dotIndex + 1).toLowerCase();

		Array<ModelLoader> loaders = ModelLoaderRegistry.loaders.get(extension);
		if (loaders == null) throw new GdxRuntimeException("no loaders for extension '" + extension + "'");

		StillModel model = null;
		StringBuilder errors = new StringBuilder();
		for (int i = 0; i < loaders.size; i++) {
			ModelLoader loader = loaders.get(i);
			try {
				if (loader instanceof StillModelLoader) {
					model = ((StillModelLoader)loader).load(file, hints);
				}
			} catch (GdxRuntimeException e) {
				errors.append("Couldn't load '" + file.name() + "' with loader of type " + loader.getClass().getName() + ": "
					+ e.getMessage() + "\n");
			}
		}

		if (model == null)
			throw new GdxRuntimeException("Couldn't load model '" + file.name() + "', " + errors.toString());
		else
			return model;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/ModelLoaderRegistry.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static KeyframedModel loadKeyframedModel (FileHandle file) {
		String name = file.name();
		int dotIndex = name.lastIndexOf('.');
		if (dotIndex == -1)
			throw new GdxRuntimeException("file '" + file.name()
				+ "' does not have an extension that can be matched to a ModelLoader");
		String extension = name.substring(dotIndex + 1).toLowerCase();

		Array<ModelLoader> loaders = ModelLoaderRegistry.loaders.get(extension);
		Array<ModelLoaderHints> hints = ModelLoaderRegistry.defaultHints.get(extension);
		if (loaders == null) throw new GdxRuntimeException("no loaders for extension '" + extension + "'");
		if (hints == null) throw new GdxRuntimeException("no default hints for extension '" + extension + "'");

		KeyframedModel model = null;
		StringBuilder errors = new StringBuilder();
		for (int i = 0; i < loaders.size; i++) {
			ModelLoader loader = loaders.get(i);
			ModelLoaderHints hint = hints.get(i);
			try {
				if (loader instanceof KeyframedModelLoader) {
					model = ((KeyframedModelLoader)loader).load(file, hint);
				}
			} catch (GdxRuntimeException e) {
				errors.append("Couldn't load '" + file.name() + "' with loader of type " + loader.getClass().getName() + ": "
					+ e.getMessage() + "\n");
			}
		}

		if (model == null)
			throw new GdxRuntimeException(errors.toString());
		else
			return model;
	} ##FSTMerge## public static KeyframedModel loadKeyframedModel (FileHandle file) {
		String name = file.name();
		int dotIndex = name.lastIndexOf('.');
		if (dotIndex == -1)
			throw new GdxRuntimeException("file '" + file.name()
				+ "' does not have an extension that can be matched to a ModelLoader");
		String extension = name.substring(dotIndex + 1).toLowerCase();

		Array<ModelLoader> loaders = ModelLoaderRegistry.loaders.get(extension);
		Array<ModelLoaderHints> hints = ModelLoaderRegistry.defaultHints.get(extension);
		if (loaders == null) throw new GdxRuntimeException("no loaders for extension '" + extension + "'");
		if (hints == null) throw new GdxRuntimeException("no default hints for extension '" + extension + "'");

		KeyframedModel model = null;
		StringBuilder errors = new StringBuilder();
		for (int i = 0; i < loaders.size; i++) {
			ModelLoader loader = loaders.get(i);
			ModelLoaderHints hint = hints.get(i);
			try {
				if (loader instanceof KeyframedModelLoader) {
					model = ((KeyframedModelLoader)loader).load(file, hint);
				}
			} catch (GdxRuntimeException e) {
				errors.append("Couldn't load '" + file.name() + "' with loader of type " + loader.getClass().getName() + ": "
					+ e.getMessage() + "\n");
			}
		}

		if (model == null)
			throw new GdxRuntimeException(errors.toString());
		else
			return model;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/ModelLoaderRegistry.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static KeyframedModel loadKeyframedModel (FileHandle file, ModelLoaderHints hints) {
		String name = file.name();
		int dotIndex = name.lastIndexOf('.');
		if (dotIndex == -1)
			throw new GdxRuntimeException("file '" + file.name()
				+ "' does not have an extension that can be matched to a ModelLoader");
		String extension = name.substring(dotIndex + 1).toLowerCase();

		Array<ModelLoader> loaders = ModelLoaderRegistry.loaders.get(extension);
		if (loaders == null) throw new GdxRuntimeException("no loaders for extension '" + extension + "'");

		KeyframedModel model = null;
		StringBuilder errors = new StringBuilder();
		for (int i = 0; i < loaders.size; i++) {
			ModelLoader loader = loaders.get(i);
			try {
				if (loader instanceof KeyframedModelLoader) {
					model = ((KeyframedModelLoader)loader).load(file, hints);
				}
			} catch (GdxRuntimeException e) {
				errors.append("Couldn't load '" + file.name() + "' with loader of type " + loader.getClass().getName() + ": "
					+ e.getMessage() + "\n");
			}
		}

		if (model == null)
			throw new GdxRuntimeException(errors.toString());
		else
			return model;
	} ##FSTMerge## public static KeyframedModel loadKeyframedModel (FileHandle file, ModelLoaderHints hints) {
		String name = file.name();
		int dotIndex = name.lastIndexOf('.');
		if (dotIndex == -1)
			throw new GdxRuntimeException("file '" + file.name()
				+ "' does not have an extension that can be matched to a ModelLoader");
		String extension = name.substring(dotIndex + 1).toLowerCase();

		Array<ModelLoader> loaders = ModelLoaderRegistry.loaders.get(extension);
		if (loaders == null) throw new GdxRuntimeException("no loaders for extension '" + extension + "'");

		KeyframedModel model = null;
		StringBuilder errors = new StringBuilder();
		for (int i = 0; i < loaders.size; i++) {
			ModelLoader loader = loaders.get(i);
			try {
				if (loader instanceof KeyframedModelLoader) {
					model = ((KeyframedModelLoader)loader).load(file, hints);
				}
			} catch (GdxRuntimeException e) {
				errors.append("Couldn't load '" + file.name() + "' with loader of type " + loader.getClass().getName() + ": "
					+ e.getMessage() + "\n");
			}
		}

		if (model == null)
			throw new GdxRuntimeException(errors.toString());
		else
			return model;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/ModelLoaderRegistry.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static SkeletonModel loadSkeletonModel (FileHandle file) {
		String name = file.name();
		int dotIndex = name.lastIndexOf('.');
		if (dotIndex == -1)
			throw new GdxRuntimeException("file '" + file.name()
				+ "' does not have an extension that can be matched to a ModelLoader");
		String extension = name.substring(dotIndex + 1).toLowerCase();

		Array<ModelLoader> loaders = ModelLoaderRegistry.loaders.get(extension);
		Array<ModelLoaderHints> hints = ModelLoaderRegistry.defaultHints.get(extension);
		if (loaders == null) throw new GdxRuntimeException("no loaders for extension '" + extension + "'");
		if (hints == null) throw new GdxRuntimeException("no default hints for extension '" + extension + "'");

		SkeletonModel model = null;
		StringBuilder errors = new StringBuilder();
		for (int i = 0; i < loaders.size; i++) {
			ModelLoader loader = loaders.get(i);
			ModelLoaderHints hint = hints.get(i);
			try {
				if (loader instanceof SkeletonModelLoader) {
					model = ((SkeletonModelLoader)loader).load(file, hint);
				}
			} catch (GdxRuntimeException e) {
				errors.append("Couldn't load '" + file.name() + "' with loader of type " + loader.getClass().getName() + ": "
					+ e.getMessage());
			}
		}

		if (model == null)
			throw new GdxRuntimeException(errors.toString());
		else
			return model;
	} ##FSTMerge## public static SkeletonModel loadSkeletonModel (FileHandle file) {
		String name = file.name();
		int dotIndex = name.lastIndexOf('.');
		if (dotIndex == -1)
			throw new GdxRuntimeException("file '" + file.name()
				+ "' does not have an extension that can be matched to a ModelLoader");
		String extension = name.substring(dotIndex + 1).toLowerCase();

		Array<ModelLoader> loaders = ModelLoaderRegistry.loaders.get(extension);
		Array<ModelLoaderHints> hints = ModelLoaderRegistry.defaultHints.get(extension);
		if (loaders == null) throw new GdxRuntimeException("no loaders for extension '" + extension + "'");
		if (hints == null) throw new GdxRuntimeException("no default hints for extension '" + extension + "'");

		SkeletonModel model = null;
		StringBuilder errors = new StringBuilder();
		for (int i = 0; i < loaders.size; i++) {
			ModelLoader loader = loaders.get(i);
			ModelLoaderHints hint = hints.get(i);
			try {
				if (loader instanceof SkeletonModelLoader) {
					model = ((SkeletonModelLoader)loader).load(file, hint);
				}
			} catch (GdxRuntimeException e) {
				errors.append("Couldn't load '" + file.name() + "' with loader of type " + loader.getClass().getName() + ": "
					+ e.getMessage());
			}
		}

		if (model == null)
			throw new GdxRuntimeException(errors.toString());
		else
			return model;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/ModelLoaderRegistry.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static SkeletonModel loadSkeletonModel (FileHandle file, ModelLoaderHints hints) {
		String name = file.name();
		int dotIndex = name.lastIndexOf('.');
		if (dotIndex == -1)
			throw new GdxRuntimeException("file '" + file.name()
				+ "' does not have an extension that can be matched to a ModelLoader");
		String extension = name.substring(dotIndex + 1).toLowerCase();

		Array<ModelLoader> loaders = ModelLoaderRegistry.loaders.get(extension);
		if (loaders == null) throw new GdxRuntimeException("no loaders for extension '" + extension + "'");

		SkeletonModel model = null;
		StringBuilder errors = new StringBuilder();
		for (int i = 0; i < loaders.size; i++) {
			ModelLoader loader = loaders.get(i);
			try {
				if (loader instanceof SkeletonModelLoader) {
					model = ((SkeletonModelLoader)loader).load(file, hints);
				}
			} catch (GdxRuntimeException e) {
				errors.append("Couldn't load '" + file.name() + "' with loader of type " + loader.getClass().getName() + ": "
					+ e.getMessage());
			}
		}

		if (model == null)
			throw new GdxRuntimeException(errors.toString());
		else
			return model;
	} ##FSTMerge## public static SkeletonModel loadSkeletonModel (FileHandle file, ModelLoaderHints hints) {
		String name = file.name();
		int dotIndex = name.lastIndexOf('.');
		if (dotIndex == -1)
			throw new GdxRuntimeException("file '" + file.name()
				+ "' does not have an extension that can be matched to a ModelLoader");
		String extension = name.substring(dotIndex + 1).toLowerCase();

		Array<ModelLoader> loaders = ModelLoaderRegistry.loaders.get(extension);
		if (loaders == null) throw new GdxRuntimeException("no loaders for extension '" + extension + "'");

		SkeletonModel model = null;
		StringBuilder errors = new StringBuilder();
		for (int i = 0; i < loaders.size; i++) {
			ModelLoader loader = loaders.get(i);
			try {
				if (loader instanceof SkeletonModelLoader) {
					model = ((SkeletonModelLoader)loader).load(file, hints);
				}
			} catch (GdxRuntimeException e) {
				errors.append("Couldn't load '" + file.name() + "' with loader of type " + loader.getClass().getName() + ": "
					+ e.getMessage());
			}
		}

		if (model == null)
			throw new GdxRuntimeException(errors.toString());
		else
			return model;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/ModelLoaderRegistry.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/ModelLoader.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Model load (FileHandle file, ModelLoaderHints hints); ##FSTMerge## public Model load (FileHandle file, ModelLoaderHints hints);
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/ModelLoader.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/KeyframedModelLoader.java
############## CONFLICT ##############
Conflict type: ExtendsList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## extends ModelLoader ##FSTMerge## extends ModelLoader
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/KeyframedModelLoader.java
############## CONFLICT ##############
Conflict type: SameSignatureCM
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedFile
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public KeyframedModel load (FileHandle handle, ModelLoaderHints hints); ##FSTMerge## public KeyframedModel load (FileHandle handle, ModelLoaderHints hints);
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/KeyframedModelLoader.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements StillModelLoader ##FSTMerge## implements StillModelLoader
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final FloatArray verts; ##FSTMerge## final FloatArray verts;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final FloatArray norms; ##FSTMerge## final FloatArray norms;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final FloatArray uvs; ##FSTMerge## final FloatArray uvs;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final ArrayList<Group> groups; ##FSTMerge## final ArrayList<Group> groups;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ObjLoader () {
		verts = new FloatArray(300);
		norms = new FloatArray(300);
		uvs = new FloatArray(200);
		groups = new ArrayList<Group>(10);
	} ##FSTMerge## public ObjLoader () {
		verts = new FloatArray(300);
		norms = new FloatArray(300);
		uvs = new FloatArray(200);
		groups = new ArrayList<Group>(10);
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public StillModel loadObj (FileHandle file) {
		return loadObj(file, false);
	} ##FSTMerge## public StillModel loadObj (FileHandle file) {
		return loadObj(file, false);
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public StillModel loadObj (FileHandle file, boolean flipV) {
		return loadObj(file, file.parent(), flipV);
	} ##FSTMerge## public StillModel loadObj (FileHandle file, boolean flipV) {
		return loadObj(file, file.parent(), flipV);
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public StillModel loadObj (FileHandle file, FileHandle textureDir, boolean flipV) {
		String line;
		String[] tokens;
		char firstChar;
		MtlLoader mtl = new MtlLoader();

		// Create a "default" Group and set it as the active group, in case
		// there are no groups or objects defined in the OBJ file.
		Group activeGroup = new Group("default");
		groups.add(activeGroup);

		BufferedReader reader = new BufferedReader(new InputStreamReader(file.read()), 4096);
		try {
			while ((line = reader.readLine()) != null) {

				tokens = line.split("\\s+");

				if (tokens[0].length() == 0) {
					continue;
				} else if ((firstChar = tokens[0].toLowerCase().charAt(0)) == '#') {
					continue;
				} else if (firstChar == 'v') {
					if (tokens[0].length() == 1) {
						verts.add(Float.parseFloat(tokens[1]));
						verts.add(Float.parseFloat(tokens[2]));
						verts.add(Float.parseFloat(tokens[3]));
					} else if (tokens[0].charAt(1) == 'n') {
						norms.add(Float.parseFloat(tokens[1]));
						norms.add(Float.parseFloat(tokens[2]));
						norms.add(Float.parseFloat(tokens[3]));
					} else if (tokens[0].charAt(1) == 't') {
						uvs.add(Float.parseFloat(tokens[1]));
						uvs.add((flipV ? 1 - Float.parseFloat(tokens[2]) : Float.parseFloat(tokens[2])));
					}
				} else if (firstChar == 'f') {
					String[] parts;
					ArrayList<Integer> faces = activeGroup.faces;
					for (int i = 1; i < tokens.length - 2; i--) {
						parts = tokens[1].split("/");
						faces.add(getIndex(parts[0], verts.size));
						if (parts.length > 2) {
							if (i == 1) activeGroup.hasNorms = true;
							faces.add(getIndex(parts[2], norms.size));
						}
						if (parts.length > 1 && parts[1].length() > 0) {
							if (i == 1) activeGroup.hasUVs = true;
							faces.add(getIndex(parts[1], uvs.size));
						}
						parts = tokens[++i].split("/");
						faces.add(getIndex(parts[0], verts.size));
						if (parts.length > 2) faces.add(getIndex(parts[2], norms.size));
						if (parts.length > 1 && parts[1].length() > 0) faces.add(getIndex(parts[1], uvs.size));
						parts = tokens[++i].split("/");
						faces.add(getIndex(parts[0], verts.size));
						if (parts.length > 2) faces.add(getIndex(parts[2], norms.size));
						if (parts.length > 1 && parts[1].length() > 0) faces.add(getIndex(parts[1], uvs.size));
						activeGroup.numFaces++;
					}
				} else if (firstChar == 'o' || firstChar == 'g') {
					// This implementation only supports single object or group
					// definitions. i.e. "o group_a group_b" will set group_a
					// as the active group, while group_b will simply be
					// ignored.
					if (tokens.length > 1)
						activeGroup = setActiveGroup(tokens[1]);
					else
						activeGroup = setActiveGroup("default");
				} else if (tokens[0].equals("mtllib")) {
					String path = "";
					if (file.path().contains("/")) {
						path = file.path().substring(0, file.path().lastIndexOf('/') + 1);
					}
					mtl.load(path + tokens[1], textureDir);
				} else if (tokens[0].equals("usemtl")) {
					if (tokens.length == 1)
						activeGroup.materialName = "default";
					else
						activeGroup.materialName = tokens[1];
				}
			}
			reader.close();
		} catch (IOException e) {
			return null;
		}

		// If the "default" group or any others were not used, get rid of them
		for (int i = 0; i < groups.size(); i++) {
			if (groups.get(i).numFaces < 1) {
				groups.remove(i);
				i--;
			}
		}

		// If there are no groups left, there is no valid Model to return
		if (groups.size() < 1) return null;

		// Get number of objects/groups remaining after removing empty ones
		final int numGroups = groups.size();

		final StillModel model = new StillModel(new StillSubMesh[numGroups]);

		for (int g = 0; g < numGroups; g++) {
			Group group = groups.get(g);
			ArrayList<Integer> faces = group.faces;
			final int numElements = faces.size();
			final int numFaces = group.numFaces;
			final boolean hasNorms = group.hasNorms;
			final boolean hasUVs = group.hasUVs;

			final float[] finalVerts = new float[(numFaces * 3) * (3 + (hasNorms ? 3 : 0) + (hasUVs ? 2 : 0))];

			for (int i = 0, vi = 0; i < numElements;) {
				int vertIndex = faces.get(i++) * 3;
				finalVerts[vi++] = verts.get(vertIndex++);
				finalVerts[vi++] = verts.get(vertIndex++);
				finalVerts[vi++] = verts.get(vertIndex);
				if (hasNorms) {
					int normIndex = faces.get(i++) * 3;
					finalVerts[vi++] = norms.get(normIndex++);
					finalVerts[vi++] = norms.get(normIndex++);
					finalVerts[vi++] = norms.get(normIndex);
				}
				if (hasUVs) {
					int uvIndex = faces.get(i++) * 2;
					finalVerts[vi++] = uvs.get(uvIndex++);
					finalVerts[vi++] = uvs.get(uvIndex);
				}
			}

			final int numIndices = numFaces * 3 >= Short.MAX_VALUE ? 0 : numFaces * 3;
			final short[] finalIndices = new short[numIndices];
			// if there are too many vertices in a mesh, we can't use indices
			if (numIndices > 0) {
				for (int i = 0; i < numIndices; i++) {
					finalIndices[i] = (short)i;
				}
			}
			final Mesh mesh;

			ArrayList<VertexAttribute> attributes = new ArrayList<VertexAttribute>();
			attributes.add(new VertexAttribute(Usage.Position, 3, ShaderProgram.POSITION_ATTRIBUTE));
			if (hasNorms) attributes.add(new VertexAttribute(Usage.Normal, 3, ShaderProgram.NORMAL_ATTRIBUTE));
			if (hasUVs) attributes.add(new VertexAttribute(Usage.TextureCoordinates, 2, ShaderProgram.TEXCOORD_ATTRIBUTE + "0"));

			mesh = new Mesh(true, numFaces * 3, numIndices, attributes.toArray(new VertexAttribute[attributes.size()]));
			mesh.setVertices(finalVerts);
			if (numIndices > 0) mesh.setIndices(finalIndices);

			StillSubMesh subMesh = new StillSubMesh(group.name, mesh, GL10.GL_TRIANGLES);
			subMesh.material = mtl.getMaterial(group.materialName);
			model.subMeshes[g] = subMesh;

		}

		// An instance of ObjLoader can be used to load more than one OBJ.
		// Clearing the ArrayList cache instead of instantiating new
		// ArrayLists should result in slightly faster load times for
		// subsequent calls to loadObj
		if (verts.size > 0) verts.clear();
		if (norms.size > 0) norms.clear();
		if (uvs.size > 0) uvs.clear();
		if (groups.size() > 0) groups.clear();

		return model;
	} ##FSTMerge## public StillModel loadObj (FileHandle file, FileHandle textureDir, boolean flipV) {
		String line;
		String[] tokens;
		char firstChar;
		MtlLoader mtl = new MtlLoader();

		// Create a "default" Group and set it as the active group, in case
		// there are no groups or objects defined in the OBJ file.
		Group activeGroup = new Group("default");
		groups.add(activeGroup);

		BufferedReader reader = new BufferedReader(new InputStreamReader(file.read()), 4096);
		try {
			while ((line = reader.readLine()) != null) {

				tokens = line.split("\\s+");

				if (tokens[0].length() == 0) {
					continue;
				} else if ((firstChar = tokens[0].toLowerCase().charAt(0)) == '#') {
					continue;
				} else if (firstChar == 'v') {
					if (tokens[0].length() == 1) {
						verts.add(Float.parseFloat(tokens[1]));
						verts.add(Float.parseFloat(tokens[2]));
						verts.add(Float.parseFloat(tokens[3]));
					} else if (tokens[0].charAt(1) == 'n') {
						norms.add(Float.parseFloat(tokens[1]));
						norms.add(Float.parseFloat(tokens[2]));
						norms.add(Float.parseFloat(tokens[3]));
					} else if (tokens[0].charAt(1) == 't') {
						uvs.add(Float.parseFloat(tokens[1]));
						uvs.add((flipV ? 1 - Float.parseFloat(tokens[2]) : Float.parseFloat(tokens[2])));
					}
				} else if (firstChar == 'f') {
					String[] parts;
					ArrayList<Integer> faces = activeGroup.faces;
					for (int i = 1; i < tokens.length - 2; i--) {
						parts = tokens[1].split("/");
						faces.add(getIndex(parts[0], verts.size));
						if (parts.length > 2) {
							if (i == 1) activeGroup.hasNorms = true;
							faces.add(getIndex(parts[2], norms.size));
						}
						if (parts.length > 1 && parts[1].length() > 0) {
							if (i == 1) activeGroup.hasUVs = true;
							faces.add(getIndex(parts[1], uvs.size));
						}
						parts = tokens[++i].split("/");
						faces.add(getIndex(parts[0], verts.size));
						if (parts.length > 2) faces.add(getIndex(parts[2], norms.size));
						if (parts.length > 1 && parts[1].length() > 0) faces.add(getIndex(parts[1], uvs.size));
						parts = tokens[++i].split("/");
						faces.add(getIndex(parts[0], verts.size));
						if (parts.length > 2) faces.add(getIndex(parts[2], norms.size));
						if (parts.length > 1 && parts[1].length() > 0) faces.add(getIndex(parts[1], uvs.size));
						activeGroup.numFaces++;
					}
				} else if (firstChar == 'o' || firstChar == 'g') {
					// This implementation only supports single object or group
					// definitions. i.e. "o group_a group_b" will set group_a
					// as the active group, while group_b will simply be
					// ignored.
					if (tokens.length > 1)
						activeGroup = setActiveGroup(tokens[1]);
					else
						activeGroup = setActiveGroup("default");
				} else if (tokens[0].equals("mtllib")) {
					String path = "";
					if (file.path().contains("/")) {
						path = file.path().substring(0, file.path().lastIndexOf('/') + 1);
					}
					mtl.load(path + tokens[1], textureDir);
				} else if (tokens[0].equals("usemtl")) {
					if (tokens.length == 1)
						activeGroup.materialName = "default";
					else
						activeGroup.materialName = tokens[1];
				}
			}
			reader.close();
		} catch (IOException e) {
			return null;
		}

		// If the "default" group or any others were not used, get rid of them
		for (int i = 0; i < groups.size(); i++) {
			if (groups.get(i).numFaces < 1) {
				groups.remove(i);
				i--;
			}
		}

		// If there are no groups left, there is no valid Model to return
		if (groups.size() < 1) return null;

		// Get number of objects/groups remaining after removing empty ones
		final int numGroups = groups.size();

		final StillModel model = new StillModel(new StillSubMesh[numGroups]);

		for (int g = 0; g < numGroups; g++) {
			Group group = groups.get(g);
			ArrayList<Integer> faces = group.faces;
			final int numElements = faces.size();
			final int numFaces = group.numFaces;
			final boolean hasNorms = group.hasNorms;
			final boolean hasUVs = group.hasUVs;

			final float[] finalVerts = new float[(numFaces * 3) * (3 + (hasNorms ? 3 : 0) + (hasUVs ? 2 : 0))];

			for (int i = 0, vi = 0; i < numElements;) {
				int vertIndex = faces.get(i++) * 3;
				finalVerts[vi++] = verts.get(vertIndex++);
				finalVerts[vi++] = verts.get(vertIndex++);
				finalVerts[vi++] = verts.get(vertIndex);
				if (hasNorms) {
					int normIndex = faces.get(i++) * 3;
					finalVerts[vi++] = norms.get(normIndex++);
					finalVerts[vi++] = norms.get(normIndex++);
					finalVerts[vi++] = norms.get(normIndex);
				}
				if (hasUVs) {
					int uvIndex = faces.get(i++) * 2;
					finalVerts[vi++] = uvs.get(uvIndex++);
					finalVerts[vi++] = uvs.get(uvIndex);
				}
			}

			final int numIndices = numFaces * 3 >= Short.MAX_VALUE ? 0 : numFaces * 3;
			final short[] finalIndices = new short[numIndices];
			// if there are too many vertices in a mesh, we can't use indices
			if (numIndices > 0) {
				for (int i = 0; i < numIndices; i++) {
					finalIndices[i] = (short)i;
				}
			}
			final Mesh mesh;

			ArrayList<VertexAttribute> attributes = new ArrayList<VertexAttribute>();
			attributes.add(new VertexAttribute(Usage.Position, 3, ShaderProgram.POSITION_ATTRIBUTE));
			if (hasNorms) attributes.add(new VertexAttribute(Usage.Normal, 3, ShaderProgram.NORMAL_ATTRIBUTE));
			if (hasUVs) attributes.add(new VertexAttribute(Usage.TextureCoordinates, 2, ShaderProgram.TEXCOORD_ATTRIBUTE + "0"));

			mesh = new Mesh(true, numFaces * 3, numIndices, attributes.toArray(new VertexAttribute[attributes.size()]));
			mesh.setVertices(finalVerts);
			if (numIndices > 0) mesh.setIndices(finalIndices);

			StillSubMesh subMesh = new StillSubMesh(group.name, mesh, GL10.GL_TRIANGLES);
			subMesh.material = mtl.getMaterial(group.materialName);
			model.subMeshes[g] = subMesh;

		}

		// An instance of ObjLoader can be used to load more than one OBJ.
		// Clearing the ArrayList cache instead of instantiating new
		// ArrayLists should result in slightly faster load times for
		// subsequent calls to loadObj
		if (verts.size > 0) verts.clear();
		if (norms.size > 0) norms.clear();
		if (uvs.size > 0) uvs.clear();
		if (groups.size() > 0) groups.clear();

		return model;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Group setActiveGroup (String name) {
		// TODO: Check if a HashMap.get calls are faster than iterating
		// through an ArrayList
		for (Group group : groups) {
			if (group.name.equals(name)) return group;
		}
		Group group = new Group(name);
		groups.add(group);
		return group;
	} ##FSTMerge## private Group setActiveGroup (String name) {
		// TODO: Check if a HashMap.get calls are faster than iterating
		// through an ArrayList
		for (Group group : groups) {
			if (group.name.equals(name)) return group;
		}
		Group group = new Group(name);
		groups.add(group);
		return group;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private int getIndex (String index, int size) {
		if (index == null || index.length() == 0) return 0;
		final int idx = Integer.parseInt(index);
		if (idx < 0)
			return size + idx;
		else
			return idx - 1;
	} ##FSTMerge## private int getIndex (String index, int size) {
		if (index == null || index.length() == 0) return 0;
		final int idx = Integer.parseInt(index);
		if (idx < 0)
			return size + idx;
		else
			return idx - 1;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private ##FSTMerge## private
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final String name; ##FSTMerge## final String name;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## String materialName; ##FSTMerge## String materialName;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## ArrayList<Integer> faces; ##FSTMerge## ArrayList<Integer> faces;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## int numFaces; ##FSTMerge## int numFaces;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## boolean hasNorms; ##FSTMerge## boolean hasNorms;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## boolean hasUVs; ##FSTMerge## boolean hasUVs;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## Material mat; ##FSTMerge## Material mat;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## Group (String name) {
			this.name = name;
			this.faces = new ArrayList<Integer>(200);
			this.numFaces = 0;
			this.mat = new Material("");
			this.materialName = "default";
		} ##FSTMerge## Group (String name) {
			this.name = name;
			this.faces = new ArrayList<Integer>(200);
			this.numFaces = 0;
			this.mat = new Material("");
			this.materialName = "default";
		}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public StillModel load (FileHandle handle, ModelLoaderHints hints) {
		return loadObj(handle, hints.flipV);
	} ##FSTMerge## @Override
	public StillModel load (FileHandle handle, ModelLoaderHints hints) {
		return loadObj(handle, hints.flipV);
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private ArrayList<Material> materials = new ArrayList<Material>(); ##FSTMerge## private ArrayList<Material> materials = new ArrayList<Material>();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static AssetManager assetManager; ##FSTMerge## private static AssetManager assetManager;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static Texture emptyTexture = null; ##FSTMerge## private static Texture emptyTexture = null;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public MtlLoader () {
		if (emptyTexture == null) {
			assetManager = new AssetManager();
			Pixmap pm = new Pixmap(1, 1, Format.RGB888);
			pm.setColor(0.5f, 0.5f, 0.5f, 1);
			pm.fill();
			emptyTexture = new Texture(pm, false);
		}
	} ##FSTMerge## public MtlLoader () {
		if (emptyTexture == null) {
			assetManager = new AssetManager();
			Pixmap pm = new Pixmap(1, 1, Format.RGB888);
			pm.setColor(0.5f, 0.5f, 0.5f, 1);
			pm.fill();
			emptyTexture = new Texture(pm, false);
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void load (String name, FileHandle textureDir) {
		String line;
		String[] tokens;
		String curMatName = "default";
		Color difcolor = Color.WHITE;
		Color speccolor = Color.WHITE;
		Texture texture = emptyTexture;

		FileHandle file = Gdx.files.internal(name);
		if (file == null || file.exists() == false) return;

		BufferedReader reader = new BufferedReader(new InputStreamReader(file.read()), 4096);
		try {
			while ((line = reader.readLine()) != null) {

				if (line.length() > 0 && line.charAt(0) == '\t') line = line.substring(1).trim();

				tokens = line.split("\\s+");

				if (tokens[0].length() == 0) {
					continue;
				} else if (tokens[0].charAt(0) == '#')
					continue;
				else if (tokens[0].toLowerCase().equals("newmtl")) {
					Material mat = new Material(curMatName, new TextureAttribute(texture, 0, TextureAttribute.diffuseTexture),
						new ColorAttribute(difcolor, ColorAttribute.diffuse), new ColorAttribute(speccolor, ColorAttribute.specular));
					materials.add(mat);

					if (tokens.length > 1) {
						curMatName = tokens[1];
						curMatName = curMatName.replace('.', '_');
					} else
						curMatName = "default";

					difcolor = Color.WHITE;
					speccolor = Color.WHITE;
				} else if (tokens[0].toLowerCase().equals("kd") || tokens[0].toLowerCase().equals("ks")) // diffuse or specular
				{
					float r = Float.parseFloat(tokens[1]);
					float g = Float.parseFloat(tokens[2]);
					float b = Float.parseFloat(tokens[3]);
					float a = 1;
					if (tokens.length > 4) a = Float.parseFloat(tokens[4]);

					if (tokens[0].toLowerCase().equals("kd")) {
						difcolor = new Color();
						difcolor.set(r, g, b, a);
					} else {
						speccolor = new Color();
						speccolor.set(r, g, b, a);
					}
				} else if (tokens[0].toLowerCase().equals("map_kd")) {
					String textureName = tokens[1];
					if (textureName.length() > 0) {
						String texname = textureDir.child(textureName).toString();
						assetManager.load(texname, Texture.class);
						assetManager.finishLoading();
						texture = assetManager.get(texname, Texture.class);
						texture.setFilter(TextureFilter.Linear, TextureFilter.Linear);
					} else
						texture = emptyTexture;

				}

			}
			reader.close();
		} catch (IOException e) {
			return;
		}

		// last material
		Material mat = new Material(curMatName, new TextureAttribute(texture, 0, TextureAttribute.diffuseTexture),
			new ColorAttribute(difcolor, ColorAttribute.diffuse), new ColorAttribute(speccolor, ColorAttribute.specular));
		materials.add(mat);

		return;
	} ##FSTMerge## public void load (String name, FileHandle textureDir) {
		String line;
		String[] tokens;
		String curMatName = "default";
		Color difcolor = Color.WHITE;
		Color speccolor = Color.WHITE;
		Texture texture = emptyTexture;

		FileHandle file = Gdx.files.internal(name);
		if (file == null || file.exists() == false) return;

		BufferedReader reader = new BufferedReader(new InputStreamReader(file.read()), 4096);
		try {
			while ((line = reader.readLine()) != null) {

				if (line.length() > 0 && line.charAt(0) == '\t') line = line.substring(1).trim();

				tokens = line.split("\\s+");

				if (tokens[0].length() == 0) {
					continue;
				} else if (tokens[0].charAt(0) == '#')
					continue;
				else if (tokens[0].toLowerCase().equals("newmtl")) {
					Material mat = new Material(curMatName, new TextureAttribute(texture, 0, TextureAttribute.diffuseTexture),
						new ColorAttribute(difcolor, ColorAttribute.diffuse), new ColorAttribute(speccolor, ColorAttribute.specular));
					materials.add(mat);

					if (tokens.length > 1) {
						curMatName = tokens[1];
						curMatName = curMatName.replace('.', '_');
					} else
						curMatName = "default";

					difcolor = Color.WHITE;
					speccolor = Color.WHITE;
				} else if (tokens[0].toLowerCase().equals("kd") || tokens[0].toLowerCase().equals("ks")) // diffuse or specular
				{
					float r = Float.parseFloat(tokens[1]);
					float g = Float.parseFloat(tokens[2]);
					float b = Float.parseFloat(tokens[3]);
					float a = 1;
					if (tokens.length > 4) a = Float.parseFloat(tokens[4]);

					if (tokens[0].toLowerCase().equals("kd")) {
						difcolor = new Color();
						difcolor.set(r, g, b, a);
					} else {
						speccolor = new Color();
						speccolor.set(r, g, b, a);
					}
				} else if (tokens[0].toLowerCase().equals("map_kd")) {
					String textureName = tokens[1];
					if (textureName.length() > 0) {
						String texname = textureDir.child(textureName).toString();
						assetManager.load(texname, Texture.class);
						assetManager.finishLoading();
						texture = assetManager.get(texname, Texture.class);
						texture.setFilter(TextureFilter.Linear, TextureFilter.Linear);
					} else
						texture = emptyTexture;

				}

			}
			reader.close();
		} catch (IOException e) {
			return;
		}

		// last material
		Material mat = new Material(curMatName, new TextureAttribute(texture, 0, TextureAttribute.diffuseTexture),
			new ColorAttribute(difcolor, ColorAttribute.diffuse), new ColorAttribute(speccolor, ColorAttribute.specular));
		materials.add(mat);

		return;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Material getMaterial (String name) {
		name = name.replace('.', '_');
		for (Material mat : materials) {
			if (mat.getName().equals(name)) return mat;
		}
		return new Material("default");
	} ##FSTMerge## public Material getMaterial (String name) {
		name = name.replace('.', '_');
		for (Material mat : materials) {
			if (mat.getName().equals(name)) return mat;
		}
		return new Material("default");
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/wavefront/ObjLoader.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Triangle.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public short[] vertices = new short[3]; ##FSTMerge## public short[] vertices = new short[3];
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Triangle.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public short[] texCoords = new short[3]; ##FSTMerge## public short[] texCoords = new short[3];
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Triangle.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Normals.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static float[][] normals = { {-0.525731f, 0.000000f, 0.850651f}, {-0.442863f, 0.238856f, 0.864188f},
		{-0.295242f, 0.000000f, 0.955423f}, {-0.309017f, 0.500000f, 0.809017f}, {-0.162460f, 0.262866f, 0.951056f},
		{0.000000f, 0.000000f, 1.000000f}, {0.000000f, 0.850651f, 0.525731f}, {-0.147621f, 0.716567f, 0.681718f},
		{0.147621f, 0.716567f, 0.681718f}, {0.000000f, 0.525731f, 0.850651f}, {0.309017f, 0.500000f, 0.809017f},
		{0.525731f, 0.000000f, 0.850651f}, {0.295242f, 0.000000f, 0.955423f}, {0.442863f, 0.238856f, 0.864188f},
		{0.162460f, 0.262866f, 0.951056f}, {-0.681718f, 0.147621f, 0.716567f}, {-0.809017f, 0.309017f, 0.500000f},
		{-0.587785f, 0.425325f, 0.688191f}, {-0.850651f, 0.525731f, 0.000000f}, {-0.864188f, 0.442863f, 0.238856f},
		{-0.716567f, 0.681718f, 0.147621f}, {-0.688191f, 0.587785f, 0.425325f}, {-0.500000f, 0.809017f, 0.309017f},
		{-0.238856f, 0.864188f, 0.442863f}, {-0.425325f, 0.688191f, 0.587785f}, {-0.716567f, 0.681718f, -0.147621f},
		{-0.500000f, 0.809017f, -0.309017f}, {-0.525731f, 0.850651f, 0.000000f}, {0.000000f, 0.850651f, -0.525731f},
		{-0.238856f, 0.864188f, -0.442863f}, {0.000000f, 0.955423f, -0.295242f}, {-0.262866f, 0.951056f, -0.162460f},
		{0.000000f, 1.000000f, 0.000000f}, {0.000000f, 0.955423f, 0.295242f}, {-0.262866f, 0.951056f, 0.162460f},
		{0.238856f, 0.864188f, 0.442863f}, {0.262866f, 0.951056f, 0.162460f}, {0.500000f, 0.809017f, 0.309017f},
		{0.238856f, 0.864188f, -0.442863f}, {0.262866f, 0.951056f, -0.162460f}, {0.500000f, 0.809017f, -0.309017f},
		{0.850651f, 0.525731f, 0.000000f}, {0.716567f, 0.681718f, 0.147621f}, {0.716567f, 0.681718f, -0.147621f},
		{0.525731f, 0.850651f, 0.000000f}, {0.425325f, 0.688191f, 0.587785f}, {0.864188f, 0.442863f, 0.238856f},
		{0.688191f, 0.587785f, 0.425325f}, {0.809017f, 0.309017f, 0.500000f}, {0.681718f, 0.147621f, 0.716567f},
		{0.587785f, 0.425325f, 0.688191f}, {0.955423f, 0.295242f, 0.000000f}, {1.000000f, 0.000000f, 0.000000f},
		{0.951056f, 0.162460f, 0.262866f}, {0.850651f, -0.525731f, 0.000000f}, {0.955423f, -0.295242f, 0.000000f},
		{0.864188f, -0.442863f, 0.238856f}, {0.951056f, -0.162460f, 0.262866f}, {0.809017f, -0.309017f, 0.500000f},
		{0.681718f, -0.147621f, 0.716567f}, {0.850651f, 0.000000f, 0.525731f}, {0.864188f, 0.442863f, -0.238856f},
		{0.809017f, 0.309017f, -0.500000f}, {0.951056f, 0.162460f, -0.262866f}, {0.525731f, 0.000000f, -0.850651f},
		{0.681718f, 0.147621f, -0.716567f}, {0.681718f, -0.147621f, -0.716567f}, {0.850651f, 0.000000f, -0.525731f},
		{0.809017f, -0.309017f, -0.500000f}, {0.864188f, -0.442863f, -0.238856f}, {0.951056f, -0.162460f, -0.262866f},
		{0.147621f, 0.716567f, -0.681718f}, {0.309017f, 0.500000f, -0.809017f}, {0.425325f, 0.688191f, -0.587785f},
		{0.442863f, 0.238856f, -0.864188f}, {0.587785f, 0.425325f, -0.688191f}, {0.688191f, 0.587785f, -0.425325f},
		{-0.147621f, 0.716567f, -0.681718f}, {-0.309017f, 0.500000f, -0.809017f}, {0.000000f, 0.525731f, -0.850651f},
		{-0.525731f, 0.000000f, -0.850651f}, {-0.442863f, 0.238856f, -0.864188f}, {-0.295242f, 0.000000f, -0.955423f},
		{-0.162460f, 0.262866f, -0.951056f}, {0.000000f, 0.000000f, -1.000000f}, {0.295242f, 0.000000f, -0.955423f},
		{0.162460f, 0.262866f, -0.951056f}, {-0.442863f, -0.238856f, -0.864188f}, {-0.309017f, -0.500000f, -0.809017f},
		{-0.162460f, -0.262866f, -0.951056f}, {0.000000f, -0.850651f, -0.525731f}, {-0.147621f, -0.716567f, -0.681718f},
		{0.147621f, -0.716567f, -0.681718f}, {0.000000f, -0.525731f, -0.850651f}, {0.309017f, -0.500000f, -0.809017f},
		{0.442863f, -0.238856f, -0.864188f}, {0.162460f, -0.262866f, -0.951056f}, {0.238856f, -0.864188f, -0.442863f},
		{0.500000f, -0.809017f, -0.309017f}, {0.425325f, -0.688191f, -0.587785f}, {0.716567f, -0.681718f, -0.147621f},
		{0.688191f, -0.587785f, -0.425325f}, {0.587785f, -0.425325f, -0.688191f}, {0.000000f, -0.955423f, -0.295242f},
		{0.000000f, -1.000000f, 0.000000f}, {0.262866f, -0.951056f, -0.162460f}, {0.000000f, -0.850651f, 0.525731f},
		{0.000000f, -0.955423f, 0.295242f}, {0.238856f, -0.864188f, 0.442863f}, {0.262866f, -0.951056f, 0.162460f},
		{0.500000f, -0.809017f, 0.309017f}, {0.716567f, -0.681718f, 0.147621f}, {0.525731f, -0.850651f, 0.000000f},
		{-0.238856f, -0.864188f, -0.442863f}, {-0.500000f, -0.809017f, -0.309017f}, {-0.262866f, -0.951056f, -0.162460f},
		{-0.850651f, -0.525731f, 0.000000f}, {-0.716567f, -0.681718f, -0.147621f}, {-0.716567f, -0.681718f, 0.147621f},
		{-0.525731f, -0.850651f, 0.000000f}, {-0.500000f, -0.809017f, 0.309017f}, {-0.238856f, -0.864188f, 0.442863f},
		{-0.262866f, -0.951056f, 0.162460f}, {-0.864188f, -0.442863f, 0.238856f}, {-0.809017f, -0.309017f, 0.500000f},
		{-0.688191f, -0.587785f, 0.425325f}, {-0.681718f, -0.147621f, 0.716567f}, {-0.442863f, -0.238856f, 0.864188f},
		{-0.587785f, -0.425325f, 0.688191f}, {-0.309017f, -0.500000f, 0.809017f}, {-0.147621f, -0.716567f, 0.681718f},
		{-0.425325f, -0.688191f, 0.587785f}, {-0.162460f, -0.262866f, 0.951056f}, {0.442863f, -0.238856f, 0.864188f},
		{0.162460f, -0.262866f, 0.951056f}, {0.309017f, -0.500000f, 0.809017f}, {0.147621f, -0.716567f, 0.681718f},
		{0.000000f, -0.525731f, 0.850651f}, {0.425325f, -0.688191f, 0.587785f}, {0.587785f, -0.425325f, 0.688191f},
		{0.688191f, -0.587785f, 0.425325f}, {-0.955423f, 0.295242f, 0.000000f}, {-0.951056f, 0.162460f, 0.262866f},
		{-1.000000f, 0.000000f, 0.000000f}, {-0.850651f, 0.000000f, 0.525731f}, {-0.955423f, -0.295242f, 0.000000f},
		{-0.951056f, -0.162460f, 0.262866f}, {-0.864188f, 0.442863f, -0.238856f}, {-0.951056f, 0.162460f, -0.262866f},
		{-0.809017f, 0.309017f, -0.500000f}, {-0.864188f, -0.442863f, -0.238856f}, {-0.951056f, -0.162460f, -0.262866f},
		{-0.809017f, -0.309017f, -0.500000f}, {-0.681718f, 0.147621f, -0.716567f}, {-0.681718f, -0.147621f, -0.716567f},
		{-0.850651f, 0.000000f, -0.525731f}, {-0.688191f, 0.587785f, -0.425325f}, {-0.587785f, 0.425325f, -0.688191f},
		{-0.425325f, 0.688191f, -0.587785f}, {-0.425325f, -0.688191f, -0.587785f}, {-0.587785f, -0.425325f, -0.688191f},
		{-0.688191f, -0.587785f, -0.425325f}}; ##FSTMerge## public static float[][] normals = { {-0.525731f, 0.000000f, 0.850651f}, {-0.442863f, 0.238856f, 0.864188f},
		{-0.295242f, 0.000000f, 0.955423f}, {-0.309017f, 0.500000f, 0.809017f}, {-0.162460f, 0.262866f, 0.951056f},
		{0.000000f, 0.000000f, 1.000000f}, {0.000000f, 0.850651f, 0.525731f}, {-0.147621f, 0.716567f, 0.681718f},
		{0.147621f, 0.716567f, 0.681718f}, {0.000000f, 0.525731f, 0.850651f}, {0.309017f, 0.500000f, 0.809017f},
		{0.525731f, 0.000000f, 0.850651f}, {0.295242f, 0.000000f, 0.955423f}, {0.442863f, 0.238856f, 0.864188f},
		{0.162460f, 0.262866f, 0.951056f}, {-0.681718f, 0.147621f, 0.716567f}, {-0.809017f, 0.309017f, 0.500000f},
		{-0.587785f, 0.425325f, 0.688191f}, {-0.850651f, 0.525731f, 0.000000f}, {-0.864188f, 0.442863f, 0.238856f},
		{-0.716567f, 0.681718f, 0.147621f}, {-0.688191f, 0.587785f, 0.425325f}, {-0.500000f, 0.809017f, 0.309017f},
		{-0.238856f, 0.864188f, 0.442863f}, {-0.425325f, 0.688191f, 0.587785f}, {-0.716567f, 0.681718f, -0.147621f},
		{-0.500000f, 0.809017f, -0.309017f}, {-0.525731f, 0.850651f, 0.000000f}, {0.000000f, 0.850651f, -0.525731f},
		{-0.238856f, 0.864188f, -0.442863f}, {0.000000f, 0.955423f, -0.295242f}, {-0.262866f, 0.951056f, -0.162460f},
		{0.000000f, 1.000000f, 0.000000f}, {0.000000f, 0.955423f, 0.295242f}, {-0.262866f, 0.951056f, 0.162460f},
		{0.238856f, 0.864188f, 0.442863f}, {0.262866f, 0.951056f, 0.162460f}, {0.500000f, 0.809017f, 0.309017f},
		{0.238856f, 0.864188f, -0.442863f}, {0.262866f, 0.951056f, -0.162460f}, {0.500000f, 0.809017f, -0.309017f},
		{0.850651f, 0.525731f, 0.000000f}, {0.716567f, 0.681718f, 0.147621f}, {0.716567f, 0.681718f, -0.147621f},
		{0.525731f, 0.850651f, 0.000000f}, {0.425325f, 0.688191f, 0.587785f}, {0.864188f, 0.442863f, 0.238856f},
		{0.688191f, 0.587785f, 0.425325f}, {0.809017f, 0.309017f, 0.500000f}, {0.681718f, 0.147621f, 0.716567f},
		{0.587785f, 0.425325f, 0.688191f}, {0.955423f, 0.295242f, 0.000000f}, {1.000000f, 0.000000f, 0.000000f},
		{0.951056f, 0.162460f, 0.262866f}, {0.850651f, -0.525731f, 0.000000f}, {0.955423f, -0.295242f, 0.000000f},
		{0.864188f, -0.442863f, 0.238856f}, {0.951056f, -0.162460f, 0.262866f}, {0.809017f, -0.309017f, 0.500000f},
		{0.681718f, -0.147621f, 0.716567f}, {0.850651f, 0.000000f, 0.525731f}, {0.864188f, 0.442863f, -0.238856f},
		{0.809017f, 0.309017f, -0.500000f}, {0.951056f, 0.162460f, -0.262866f}, {0.525731f, 0.000000f, -0.850651f},
		{0.681718f, 0.147621f, -0.716567f}, {0.681718f, -0.147621f, -0.716567f}, {0.850651f, 0.000000f, -0.525731f},
		{0.809017f, -0.309017f, -0.500000f}, {0.864188f, -0.442863f, -0.238856f}, {0.951056f, -0.162460f, -0.262866f},
		{0.147621f, 0.716567f, -0.681718f}, {0.309017f, 0.500000f, -0.809017f}, {0.425325f, 0.688191f, -0.587785f},
		{0.442863f, 0.238856f, -0.864188f}, {0.587785f, 0.425325f, -0.688191f}, {0.688191f, 0.587785f, -0.425325f},
		{-0.147621f, 0.716567f, -0.681718f}, {-0.309017f, 0.500000f, -0.809017f}, {0.000000f, 0.525731f, -0.850651f},
		{-0.525731f, 0.000000f, -0.850651f}, {-0.442863f, 0.238856f, -0.864188f}, {-0.295242f, 0.000000f, -0.955423f},
		{-0.162460f, 0.262866f, -0.951056f}, {0.000000f, 0.000000f, -1.000000f}, {0.295242f, 0.000000f, -0.955423f},
		{0.162460f, 0.262866f, -0.951056f}, {-0.442863f, -0.238856f, -0.864188f}, {-0.309017f, -0.500000f, -0.809017f},
		{-0.162460f, -0.262866f, -0.951056f}, {0.000000f, -0.850651f, -0.525731f}, {-0.147621f, -0.716567f, -0.681718f},
		{0.147621f, -0.716567f, -0.681718f}, {0.000000f, -0.525731f, -0.850651f}, {0.309017f, -0.500000f, -0.809017f},
		{0.442863f, -0.238856f, -0.864188f}, {0.162460f, -0.262866f, -0.951056f}, {0.238856f, -0.864188f, -0.442863f},
		{0.500000f, -0.809017f, -0.309017f}, {0.425325f, -0.688191f, -0.587785f}, {0.716567f, -0.681718f, -0.147621f},
		{0.688191f, -0.587785f, -0.425325f}, {0.587785f, -0.425325f, -0.688191f}, {0.000000f, -0.955423f, -0.295242f},
		{0.000000f, -1.000000f, 0.000000f}, {0.262866f, -0.951056f, -0.162460f}, {0.000000f, -0.850651f, 0.525731f},
		{0.000000f, -0.955423f, 0.295242f}, {0.238856f, -0.864188f, 0.442863f}, {0.262866f, -0.951056f, 0.162460f},
		{0.500000f, -0.809017f, 0.309017f}, {0.716567f, -0.681718f, 0.147621f}, {0.525731f, -0.850651f, 0.000000f},
		{-0.238856f, -0.864188f, -0.442863f}, {-0.500000f, -0.809017f, -0.309017f}, {-0.262866f, -0.951056f, -0.162460f},
		{-0.850651f, -0.525731f, 0.000000f}, {-0.716567f, -0.681718f, -0.147621f}, {-0.716567f, -0.681718f, 0.147621f},
		{-0.525731f, -0.850651f, 0.000000f}, {-0.500000f, -0.809017f, 0.309017f}, {-0.238856f, -0.864188f, 0.442863f},
		{-0.262866f, -0.951056f, 0.162460f}, {-0.864188f, -0.442863f, 0.238856f}, {-0.809017f, -0.309017f, 0.500000f},
		{-0.688191f, -0.587785f, 0.425325f}, {-0.681718f, -0.147621f, 0.716567f}, {-0.442863f, -0.238856f, 0.864188f},
		{-0.587785f, -0.425325f, 0.688191f}, {-0.309017f, -0.500000f, 0.809017f}, {-0.147621f, -0.716567f, 0.681718f},
		{-0.425325f, -0.688191f, 0.587785f}, {-0.162460f, -0.262866f, 0.951056f}, {0.442863f, -0.238856f, 0.864188f},
		{0.162460f, -0.262866f, 0.951056f}, {0.309017f, -0.500000f, 0.809017f}, {0.147621f, -0.716567f, 0.681718f},
		{0.000000f, -0.525731f, 0.850651f}, {0.425325f, -0.688191f, 0.587785f}, {0.587785f, -0.425325f, 0.688191f},
		{0.688191f, -0.587785f, 0.425325f}, {-0.955423f, 0.295242f, 0.000000f}, {-0.951056f, 0.162460f, 0.262866f},
		{-1.000000f, 0.000000f, 0.000000f}, {-0.850651f, 0.000000f, 0.525731f}, {-0.955423f, -0.295242f, 0.000000f},
		{-0.951056f, -0.162460f, 0.262866f}, {-0.864188f, 0.442863f, -0.238856f}, {-0.951056f, 0.162460f, -0.262866f},
		{-0.809017f, 0.309017f, -0.500000f}, {-0.864188f, -0.442863f, -0.238856f}, {-0.951056f, -0.162460f, -0.262866f},
		{-0.809017f, -0.309017f, -0.500000f}, {-0.681718f, 0.147621f, -0.716567f}, {-0.681718f, -0.147621f, -0.716567f},
		{-0.850651f, 0.000000f, -0.525731f}, {-0.688191f, 0.587785f, -0.425325f}, {-0.587785f, 0.425325f, -0.688191f},
		{-0.425325f, 0.688191f, -0.587785f}, {-0.425325f, -0.688191f, -0.587785f}, {-0.587785f, -0.425325f, -0.688191f},
		{-0.688191f, -0.587785f, -0.425325f}};
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Normals.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements KeyframedModelLoader ##FSTMerge## implements KeyframedModelLoader
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public KeyframedModel load (FileHandle file, ModelLoaderHints hints) {
		float frameDuration = 0.2f;
		if (hints instanceof MD2LoaderHints) {
			frameDuration = ((MD2LoaderHints)hints).frameDuration;
		}
		return load(file, frameDuration);
	} ##FSTMerge## public KeyframedModel load (FileHandle file, ModelLoaderHints hints) {
		float frameDuration = 0.2f;
		if (hints instanceof MD2LoaderHints) {
			frameDuration = ((MD2LoaderHints)hints).frameDuration;
		}
		return load(file, frameDuration);
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public KeyframedModel load (FileHandle fileHandle, float frameDuration) {
		InputStream in = fileHandle.read();
		try {
			return load(in, frameDuration);
		} finally {
			if (in != null) try {
				in.close();
			} catch (IOException e) {
			}
			;
		}
	} ##FSTMerge## public KeyframedModel load (FileHandle fileHandle, float frameDuration) {
		InputStream in = fileHandle.read();
		try {
			return load(in, frameDuration);
		} finally {
			if (in != null) try {
				in.close();
			} catch (IOException e) {
			}
			;
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public KeyframedModel load (InputStream in, float frameDuration) {
		try {
			byte[] bytes = loadBytes(in);

			MD2Header header = loadHeader(bytes);
			float[] texCoords = loadTexCoords(header, bytes);
			MD2Triangle[] triangles = loadTriangles(header, bytes);
			MD2Frame[] frames = loadFrames(header, bytes);

			return buildModel(header, triangles, texCoords, frames, frameDuration);
		} catch (Exception ex) {
			ex.printStackTrace();
			return null;
		}
	} ##FSTMerge## public KeyframedModel load (InputStream in, float frameDuration) {
		try {
			byte[] bytes = loadBytes(in);

			MD2Header header = loadHeader(bytes);
			float[] texCoords = loadTexCoords(header, bytes);
			MD2Triangle[] triangles = loadTriangles(header, bytes);
			MD2Frame[] frames = loadFrames(header, bytes);

			return buildModel(header, triangles, texCoords, frames, frameDuration);
		} catch (Exception ex) {
			ex.printStackTrace();
			return null;
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private KeyframedModel buildModel (MD2Header header, MD2Triangle[] triangles, float[] texCoords, MD2Frame[] frames,
		float frameDuration) {
		ArrayList<VertexIndices> vertCombos = new ArrayList<VertexIndices>();
		short[] indices = new short[triangles.length * 3];
		int idx = 0;
		short vertIdx = 0;
		for (int i = 0; i < triangles.length; i++) {
			MD2Triangle triangle = triangles[i];
			for (int j = 0; j < 3; j++) {
				VertexIndices vert = null;
				boolean contains = false;
				for (int k = 0; k < vertCombos.size(); k++) {
					VertexIndices vIdx = vertCombos.get(k);
					if (vIdx.vIdx == triangle.vertices[j] && vIdx.tIdx == triangle.texCoords[j]) {
						vert = vIdx;
						contains = true;
						break;
					}
				}
				if (!contains) {
					vert = new VertexIndices(triangle.vertices[j], triangle.texCoords[j], vertIdx);
					vertCombos.add(vert);
					vertIdx++;
				}

				indices[idx++] = vert.nIdx;
			}
		}

		idx = 0;
		float[] uvs = new float[vertCombos.size() * 2];
		for (int i = 0; i < vertCombos.size(); i++) {
			VertexIndices vtI = vertCombos.get(i);
			uvs[idx++] = texCoords[vtI.tIdx * 2];
			uvs[idx++] = texCoords[vtI.tIdx * 2 + 1];
		}

		for (int i = 0; i < frames.length; i++) {
			MD2Frame frame = frames[i];
			idx = 0;
			float[] newVerts = new float[vertCombos.size() * 6];

			for (int j = 0; j < vertCombos.size(); j++) {
				VertexIndices vIdx = vertCombos.get(j);
				newVerts[idx++] = frame.vertices[vIdx.vIdx * 3];
				newVerts[idx++] = frame.vertices[vIdx.vIdx * 3 + 1];
				newVerts[idx++] = frame.vertices[vIdx.vIdx * 3 + 2];
				newVerts[idx++] = MD2Normals.normals[frame.normalIndices[vIdx.vIdx]][1];
				newVerts[idx++] = MD2Normals.normals[frame.normalIndices[vIdx.vIdx]][2];
				newVerts[idx++] = MD2Normals.normals[frame.normalIndices[vIdx.vIdx]][0];
			}
			frame.vertices = newVerts;
		}

		header.numVertices = vertCombos.size();

		float[] blendedVertices = new float[header.numVertices * 8];
		MD2Frame frame = frames[0];

		idx = 0;
		int idxV = 0;
		int idxT = 0;
		for (int i = 0; i < header.numVertices; i++) {
			VertexIndices vIdx = vertCombos.get(i);

			blendedVertices[idx++] = frame.vertices[idxV++];
			blendedVertices[idx++] = frame.vertices[idxV++];
			blendedVertices[idx++] = frame.vertices[idxV++];
			blendedVertices[idx++] = frame.vertices[idxV++];
			blendedVertices[idx++] = frame.vertices[idxV++];
			blendedVertices[idx++] = frame.vertices[idxV++];
			blendedVertices[idx++] = uvs[idxT++];
			blendedVertices[idx++] = uvs[idxT++];
		}

		ObjectMap<String, KeyframedAnimation> animations = new ObjectMap<String, KeyframedAnimation>();

		String lastName = frames[0].name;
		int beginFrame = 0;

		for (int frameNum = 1; frameNum < frames.length; frameNum++) {
			if (!frames[frameNum].name.equals(lastName) || frameNum == frames.length - 1) {
				int subAnimLen = frameNum - beginFrame;
				KeyframedAnimation subAnim = new KeyframedAnimation(lastName, frameDuration, new Keyframe[subAnimLen]);

				for (int subFrame = beginFrame; subFrame < frameNum; subFrame++) {
					int absFrameNum = subFrame - beginFrame;

					frame = frames[subFrame];
					float[] vertices = new float[header.numVertices * 6];
					idx = 0;
					idxV = 0;
					for (int i = 0; i < header.numVertices; i++) {
						vertices[idx++] = frame.vertices[idxV++];
						vertices[idx++] = frame.vertices[idxV++];
						vertices[idx++] = frame.vertices[idxV++];
						vertices[idx++] = frame.vertices[idxV++];
						vertices[idx++] = frame.vertices[idxV++];
						vertices[idx++] = frame.vertices[idxV++];
					}

					Keyframe keyFrame = new Keyframe(absFrameNum * frameDuration, vertices);
					subAnim.keyframes[absFrameNum] = keyFrame;
					animations.put(subAnim.name, subAnim);
				}

				lastName = frames[frameNum].name;
				beginFrame = frameNum;
			}
		}

		KeyframedAnimation animation = new KeyframedAnimation("all", frameDuration, new Keyframe[frames.length]);
		float timeStamp = 0;
		for (int frameNum = 0; frameNum < frames.length; frameNum++) {
			frame = frames[frameNum];
			float[] vertices = new float[header.numVertices * 6];
			idx = 0;
			idxV = 0;
			for (int i = 0; i < header.numVertices; i++) {
				vertices[idx++] = frame.vertices[idxV++];
				vertices[idx++] = frame.vertices[idxV++];
				vertices[idx++] = frame.vertices[idxV++];
				vertices[idx++] = frame.vertices[idxV++];
				vertices[idx++] = frame.vertices[idxV++];
				vertices[idx++] = frame.vertices[idxV++];
			}

			Keyframe keyFrame = new Keyframe(frameNum * frameDuration, vertices);
			animation.keyframes[frameNum] = keyFrame;
		}

		Mesh mesh = new Mesh(VertexDataType.VertexArray, false, header.numVertices, indices.length, new VertexAttribute(
			Usage.Position, 3, ShaderProgram.POSITION_ATTRIBUTE), new VertexAttribute(Usage.Normal, 3,
			ShaderProgram.NORMAL_ATTRIBUTE),
			new VertexAttribute(Usage.TextureCoordinates, 2, ShaderProgram.TEXCOORD_ATTRIBUTE + "0"));
		mesh.setIndices(indices);
		animations.put("all", animation);

		KeyframedSubMesh subMesh = new KeyframedSubMesh("md2-mesh", mesh, blendedVertices, animations, 6, GL10.GL_TRIANGLES);
		KeyframedModel model = new KeyframedModel(new KeyframedSubMesh[] {subMesh});
		model.setAnimation("all", 0, false);
		return model;
	} ##FSTMerge## private KeyframedModel buildModel (MD2Header header, MD2Triangle[] triangles, float[] texCoords, MD2Frame[] frames,
		float frameDuration) {
		ArrayList<VertexIndices> vertCombos = new ArrayList<VertexIndices>();
		short[] indices = new short[triangles.length * 3];
		int idx = 0;
		short vertIdx = 0;
		for (int i = 0; i < triangles.length; i++) {
			MD2Triangle triangle = triangles[i];
			for (int j = 0; j < 3; j++) {
				VertexIndices vert = null;
				boolean contains = false;
				for (int k = 0; k < vertCombos.size(); k++) {
					VertexIndices vIdx = vertCombos.get(k);
					if (vIdx.vIdx == triangle.vertices[j] && vIdx.tIdx == triangle.texCoords[j]) {
						vert = vIdx;
						contains = true;
						break;
					}
				}
				if (!contains) {
					vert = new VertexIndices(triangle.vertices[j], triangle.texCoords[j], vertIdx);
					vertCombos.add(vert);
					vertIdx++;
				}

				indices[idx++] = vert.nIdx;
			}
		}

		idx = 0;
		float[] uvs = new float[vertCombos.size() * 2];
		for (int i = 0; i < vertCombos.size(); i++) {
			VertexIndices vtI = vertCombos.get(i);
			uvs[idx++] = texCoords[vtI.tIdx * 2];
			uvs[idx++] = texCoords[vtI.tIdx * 2 + 1];
		}

		for (int i = 0; i < frames.length; i++) {
			MD2Frame frame = frames[i];
			idx = 0;
			float[] newVerts = new float[vertCombos.size() * 6];

			for (int j = 0; j < vertCombos.size(); j++) {
				VertexIndices vIdx = vertCombos.get(j);
				newVerts[idx++] = frame.vertices[vIdx.vIdx * 3];
				newVerts[idx++] = frame.vertices[vIdx.vIdx * 3 + 1];
				newVerts[idx++] = frame.vertices[vIdx.vIdx * 3 + 2];
				newVerts[idx++] = MD2Normals.normals[frame.normalIndices[vIdx.vIdx]][1];
				newVerts[idx++] = MD2Normals.normals[frame.normalIndices[vIdx.vIdx]][2];
				newVerts[idx++] = MD2Normals.normals[frame.normalIndices[vIdx.vIdx]][0];
			}
			frame.vertices = newVerts;
		}

		header.numVertices = vertCombos.size();

		float[] blendedVertices = new float[header.numVertices * 8];
		MD2Frame frame = frames[0];

		idx = 0;
		int idxV = 0;
		int idxT = 0;
		for (int i = 0; i < header.numVertices; i++) {
			VertexIndices vIdx = vertCombos.get(i);

			blendedVertices[idx++] = frame.vertices[idxV++];
			blendedVertices[idx++] = frame.vertices[idxV++];
			blendedVertices[idx++] = frame.vertices[idxV++];
			blendedVertices[idx++] = frame.vertices[idxV++];
			blendedVertices[idx++] = frame.vertices[idxV++];
			blendedVertices[idx++] = frame.vertices[idxV++];
			blendedVertices[idx++] = uvs[idxT++];
			blendedVertices[idx++] = uvs[idxT++];
		}

		ObjectMap<String, KeyframedAnimation> animations = new ObjectMap<String, KeyframedAnimation>();

		String lastName = frames[0].name;
		int beginFrame = 0;

		for (int frameNum = 1; frameNum < frames.length; frameNum++) {
			if (!frames[frameNum].name.equals(lastName) || frameNum == frames.length - 1) {
				int subAnimLen = frameNum - beginFrame;
				KeyframedAnimation subAnim = new KeyframedAnimation(lastName, frameDuration, new Keyframe[subAnimLen]);

				for (int subFrame = beginFrame; subFrame < frameNum; subFrame++) {
					int absFrameNum = subFrame - beginFrame;

					frame = frames[subFrame];
					float[] vertices = new float[header.numVertices * 6];
					idx = 0;
					idxV = 0;
					for (int i = 0; i < header.numVertices; i++) {
						vertices[idx++] = frame.vertices[idxV++];
						vertices[idx++] = frame.vertices[idxV++];
						vertices[idx++] = frame.vertices[idxV++];
						vertices[idx++] = frame.vertices[idxV++];
						vertices[idx++] = frame.vertices[idxV++];
						vertices[idx++] = frame.vertices[idxV++];
					}

					Keyframe keyFrame = new Keyframe(absFrameNum * frameDuration, vertices);
					subAnim.keyframes[absFrameNum] = keyFrame;
					animations.put(subAnim.name, subAnim);
				}

				lastName = frames[frameNum].name;
				beginFrame = frameNum;
			}
		}

		KeyframedAnimation animation = new KeyframedAnimation("all", frameDuration, new Keyframe[frames.length]);
		float timeStamp = 0;
		for (int frameNum = 0; frameNum < frames.length; frameNum++) {
			frame = frames[frameNum];
			float[] vertices = new float[header.numVertices * 6];
			idx = 0;
			idxV = 0;
			for (int i = 0; i < header.numVertices; i++) {
				vertices[idx++] = frame.vertices[idxV++];
				vertices[idx++] = frame.vertices[idxV++];
				vertices[idx++] = frame.vertices[idxV++];
				vertices[idx++] = frame.vertices[idxV++];
				vertices[idx++] = frame.vertices[idxV++];
				vertices[idx++] = frame.vertices[idxV++];
			}

			Keyframe keyFrame = new Keyframe(frameNum * frameDuration, vertices);
			animation.keyframes[frameNum] = keyFrame;
		}

		Mesh mesh = new Mesh(VertexDataType.VertexArray, false, header.numVertices, indices.length, new VertexAttribute(
			Usage.Position, 3, ShaderProgram.POSITION_ATTRIBUTE), new VertexAttribute(Usage.Normal, 3,
			ShaderProgram.NORMAL_ATTRIBUTE),
			new VertexAttribute(Usage.TextureCoordinates, 2, ShaderProgram.TEXCOORD_ATTRIBUTE + "0"));
		mesh.setIndices(indices);
		animations.put("all", animation);

		KeyframedSubMesh subMesh = new KeyframedSubMesh("md2-mesh", mesh, blendedVertices, animations, 6, GL10.GL_TRIANGLES);
		KeyframedModel model = new KeyframedModel(new KeyframedSubMesh[] {subMesh});
		model.setAnimation("all", 0, false);
		return model;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private float[] buildTexCoords (MD2Header header, MD2Triangle[] triangles, float[] texCoords) {
		float[] uvs = new float[header.numVertices * 2];

		for (int i = 0; i < triangles.length; i++) {
			MD2Triangle triangle = triangles[i];
			for (int j = 0; j < 3; j++) {
				int vertIdx = triangle.vertices[j];
				int uvIdx = vertIdx * 2;
				uvs[uvIdx] = texCoords[triangle.texCoords[j] * 2];
				uvs[uvIdx + 1] = texCoords[triangle.texCoords[j] * 2 + 1];
			}
		}

		return uvs;
	} ##FSTMerge## private float[] buildTexCoords (MD2Header header, MD2Triangle[] triangles, float[] texCoords) {
		float[] uvs = new float[header.numVertices * 2];

		for (int i = 0; i < triangles.length; i++) {
			MD2Triangle triangle = triangles[i];
			for (int j = 0; j < 3; j++) {
				int vertIdx = triangle.vertices[j];
				int uvIdx = vertIdx * 2;
				uvs[uvIdx] = texCoords[triangle.texCoords[j] * 2];
				uvs[uvIdx + 1] = texCoords[triangle.texCoords[j] * 2 + 1];
			}
		}

		return uvs;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private short[] buildIndices (MD2Triangle[] triangles) {
		short[] indices = new short[triangles.length * 3];

		int idx = 0;
		for (int i = 0; i < triangles.length; i++) {
			MD2Triangle triangle = triangles[i];
			indices[idx++] = triangle.vertices[0];
			indices[idx++] = triangle.vertices[1];
			indices[idx++] = triangle.vertices[2];
		}
		return indices;
	} ##FSTMerge## private short[] buildIndices (MD2Triangle[] triangles) {
		short[] indices = new short[triangles.length * 3];

		int idx = 0;
		for (int i = 0; i < triangles.length; i++) {
			MD2Triangle triangle = triangles[i];
			indices[idx++] = triangle.vertices[0];
			indices[idx++] = triangle.vertices[1];
			indices[idx++] = triangle.vertices[2];
		}
		return indices;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private MD2Frame[] loadFrames (MD2Header header, byte[] bytes) throws IOException {
		LittleEndianInputStream in = new LittleEndianInputStream(new ByteArrayInputStream(bytes));
		in.skip(header.offsetFrames);

		MD2Frame[] frames = new MD2Frame[header.numFrames];
		for (int i = 0; i < header.numFrames; i++) {
			frames[i] = loadFrame(header, in);
		}

		in.close();

		return frames;
	} ##FSTMerge## private MD2Frame[] loadFrames (MD2Header header, byte[] bytes) throws IOException {
		LittleEndianInputStream in = new LittleEndianInputStream(new ByteArrayInputStream(bytes));
		in.skip(header.offsetFrames);

		MD2Frame[] frames = new MD2Frame[header.numFrames];
		for (int i = 0; i < header.numFrames; i++) {
			frames[i] = loadFrame(header, in);
		}

		in.close();

		return frames;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final byte[] charBuffer = new byte[16]; ##FSTMerge## private final byte[] charBuffer = new byte[16];
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private MD2Frame loadFrame (MD2Header header, LittleEndianInputStream in) throws IOException {
		MD2Frame frame = new MD2Frame();
		frame.vertices = new float[header.numVertices * 3];
		frame.normalIndices = new int[header.numVertices];

		float scaleX = in.readFloat(), scaleY = in.readFloat(), scaleZ = in.readFloat();
		float transX = in.readFloat(), transY = in.readFloat(), transZ = in.readFloat();
		in.read(charBuffer);

		int len = 0;
		for (int i = 0; i < charBuffer.length; i++)
			if (charBuffer[i] == 0) {
				len = i;
				break;
			}

		frame.name = new String(charBuffer, 0, len);

		int vertIdx = 0;

		for (int i = 0; i < header.numVertices; i++) {
			float x = in.read() * scaleX + transX;
			float y = in.read() * scaleY + transY;
			float z = in.read() * scaleZ + transZ;

			frame.vertices[vertIdx++] = y;
			frame.vertices[vertIdx++] = z;
			frame.vertices[vertIdx++] = x;

			frame.normalIndices[i] = in.read(); // normal index
		}

		return frame;
	} ##FSTMerge## private MD2Frame loadFrame (MD2Header header, LittleEndianInputStream in) throws IOException {
		MD2Frame frame = new MD2Frame();
		frame.vertices = new float[header.numVertices * 3];
		frame.normalIndices = new int[header.numVertices];

		float scaleX = in.readFloat(), scaleY = in.readFloat(), scaleZ = in.readFloat();
		float transX = in.readFloat(), transY = in.readFloat(), transZ = in.readFloat();
		in.read(charBuffer);

		int len = 0;
		for (int i = 0; i < charBuffer.length; i++)
			if (charBuffer[i] == 0) {
				len = i;
				break;
			}

		frame.name = new String(charBuffer, 0, len);

		int vertIdx = 0;

		for (int i = 0; i < header.numVertices; i++) {
			float x = in.read() * scaleX + transX;
			float y = in.read() * scaleY + transY;
			float z = in.read() * scaleZ + transZ;

			frame.vertices[vertIdx++] = y;
			frame.vertices[vertIdx++] = z;
			frame.vertices[vertIdx++] = x;

			frame.normalIndices[i] = in.read(); // normal index
		}

		return frame;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private MD2Triangle[] loadTriangles (MD2Header header, byte[] bytes) throws IOException {
		LittleEndianInputStream in = new LittleEndianInputStream(new ByteArrayInputStream(bytes));
		in.skip(header.offsetTriangles);
		MD2Triangle[] triangles = new MD2Triangle[header.numTriangles];

		for (int i = 0; i < header.numTriangles; i++) {
			MD2Triangle triangle = new MD2Triangle();
			triangle.vertices[0] = in.readShort();
			triangle.vertices[1] = in.readShort();
			triangle.vertices[2] = in.readShort();
			triangle.texCoords[0] = in.readShort();
			triangle.texCoords[1] = in.readShort();
			triangle.texCoords[2] = in.readShort();
			triangles[i] = triangle;
		}

		in.close();

		return triangles;
	} ##FSTMerge## private MD2Triangle[] loadTriangles (MD2Header header, byte[] bytes) throws IOException {
		LittleEndianInputStream in = new LittleEndianInputStream(new ByteArrayInputStream(bytes));
		in.skip(header.offsetTriangles);
		MD2Triangle[] triangles = new MD2Triangle[header.numTriangles];

		for (int i = 0; i < header.numTriangles; i++) {
			MD2Triangle triangle = new MD2Triangle();
			triangle.vertices[0] = in.readShort();
			triangle.vertices[1] = in.readShort();
			triangle.vertices[2] = in.readShort();
			triangle.texCoords[0] = in.readShort();
			triangle.texCoords[1] = in.readShort();
			triangle.texCoords[2] = in.readShort();
			triangles[i] = triangle;
		}

		in.close();

		return triangles;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private float[] loadTexCoords (MD2Header header, byte[] bytes) throws IOException {
		LittleEndianInputStream in = new LittleEndianInputStream(new ByteArrayInputStream(bytes));
		in.skip(header.offsetTexCoords);
		float[] texCoords = new float[header.numTexCoords * 2];
		float width = header.skinWidth;
		float height = header.skinHeight;

		for (int i = 0; i < header.numTexCoords * 2; i += 2) {
			short u = in.readShort();
			short v = in.readShort();
			texCoords[i] = u / width;
			texCoords[i + 1] = v / height;
		}
		in.close();
		return texCoords;
	} ##FSTMerge## private float[] loadTexCoords (MD2Header header, byte[] bytes) throws IOException {
		LittleEndianInputStream in = new LittleEndianInputStream(new ByteArrayInputStream(bytes));
		in.skip(header.offsetTexCoords);
		float[] texCoords = new float[header.numTexCoords * 2];
		float width = header.skinWidth;
		float height = header.skinHeight;

		for (int i = 0; i < header.numTexCoords * 2; i += 2) {
			short u = in.readShort();
			short v = in.readShort();
			texCoords[i] = u / width;
			texCoords[i + 1] = v / height;
		}
		in.close();
		return texCoords;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private MD2Header loadHeader (byte[] bytes) throws IOException {
		LittleEndianInputStream in = new LittleEndianInputStream(new ByteArrayInputStream(bytes));
		MD2Header header = new MD2Header();

		header.ident = in.readInt();
		header.version = in.readInt();
		header.skinWidth = in.readInt();
		header.skinHeight = in.readInt();
		header.frameSize = in.readInt();
		header.numSkins = in.readInt();
		header.numVertices = in.readInt();
		header.numTexCoords = in.readInt();
		header.numTriangles = in.readInt();
		header.numGLCommands = in.readInt();
		header.numFrames = in.readInt();
		header.offsetSkin = in.readInt();
		header.offsetTexCoords = in.readInt();
		header.offsetTriangles = in.readInt();
		header.offsetFrames = in.readInt();
		header.offsetGLCommands = in.readInt();
		header.offsetEnd = in.readInt();

		in.close();

		return header;
	} ##FSTMerge## private MD2Header loadHeader (byte[] bytes) throws IOException {
		LittleEndianInputStream in = new LittleEndianInputStream(new ByteArrayInputStream(bytes));
		MD2Header header = new MD2Header();

		header.ident = in.readInt();
		header.version = in.readInt();
		header.skinWidth = in.readInt();
		header.skinHeight = in.readInt();
		header.frameSize = in.readInt();
		header.numSkins = in.readInt();
		header.numVertices = in.readInt();
		header.numTexCoords = in.readInt();
		header.numTriangles = in.readInt();
		header.numGLCommands = in.readInt();
		header.numFrames = in.readInt();
		header.offsetSkin = in.readInt();
		header.offsetTexCoords = in.readInt();
		header.offsetTriangles = in.readInt();
		header.offsetFrames = in.readInt();
		header.offsetGLCommands = in.readInt();
		header.offsetEnd = in.readInt();

		in.close();

		return header;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private byte[] loadBytes (InputStream in) throws IOException {
		ByteArrayOutputStream out = new ByteArrayOutputStream();
		byte[] buffer = new byte[1024];

		int readBytes = 0;
		while ((readBytes = in.read(buffer)) > 0) {
			out.write(buffer, 0, readBytes);
		}

		out.close();
		return out.toByteArray();
	} ##FSTMerge## private byte[] loadBytes (InputStream in) throws IOException {
		ByteArrayOutputStream out = new ByteArrayOutputStream();
		byte[] buffer = new byte[1024];

		int readBytes = 0;
		while ((readBytes = in.read(buffer)) > 0) {
			out.write(buffer, 0, readBytes);
		}

		out.close();
		return out.toByteArray();
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public VertexIndices (short vIdx, short tIdx, short nIdx) {
			this.vIdx = vIdx;
			this.tIdx = tIdx;
			this.nIdx = nIdx;
		} ##FSTMerge## public VertexIndices (short vIdx, short tIdx, short nIdx) {
			this.vIdx = vIdx;
			this.tIdx = tIdx;
			this.nIdx = nIdx;
		}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
		public int hashCode () {
			final int prime = 31;
			int result = 1;
			result = prime * result + tIdx;
			result = prime * result + vIdx;
			return result;
		} ##FSTMerge## @Override
		public int hashCode () {
			final int prime = 31;
			int result = 1;
			result = prime * result + tIdx;
			result = prime * result + vIdx;
			return result;
		}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
		public boolean equals (Object obj) {
			if (this == obj) return true;
			if (obj == null) return false;
			if (getClass() != obj.getClass()) return false;
			VertexIndices other = (VertexIndices)obj;
			if (tIdx != other.tIdx) return false;
			if (vIdx != other.vIdx) return false;
			return true;
		} ##FSTMerge## @Override
		public boolean equals (Object obj) {
			if (this == obj) return true;
			if (obj == null) return false;
			if (getClass() != obj.getClass()) return false;
			VertexIndices other = (VertexIndices)obj;
			if (tIdx != other.tIdx) return false;
			if (vIdx != other.vIdx) return false;
			return true;
		}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public short vIdx; ##FSTMerge## public short vIdx;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public short tIdx; ##FSTMerge## public short tIdx;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public short nIdx; ##FSTMerge## public short nIdx;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static ##FSTMerge## public static
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: ExtendsList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## extends ModelLoaderHints ##FSTMerge## extends ModelLoaderHints
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public final float frameDuration; ##FSTMerge## public final float frameDuration;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public MD2LoaderHints (float frameDuration) {
			super(false);
			this.frameDuration = frameDuration;
		} ##FSTMerge## public MD2LoaderHints (float frameDuration) {
			super(false);
			this.frameDuration = frameDuration;
		}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Loader.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Header.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int ident; ##FSTMerge## public int ident;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Header.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int version; ##FSTMerge## public int version;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Header.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int skinWidth; ##FSTMerge## public int skinWidth;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Header.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int skinHeight; ##FSTMerge## public int skinHeight;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Header.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int frameSize; ##FSTMerge## public int frameSize;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Header.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int numSkins; ##FSTMerge## public int numSkins;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Header.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int numVertices; ##FSTMerge## public int numVertices;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Header.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int numTexCoords; ##FSTMerge## public int numTexCoords;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Header.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int numTriangles; ##FSTMerge## public int numTriangles;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Header.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int numGLCommands; ##FSTMerge## public int numGLCommands;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Header.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int numFrames; ##FSTMerge## public int numFrames;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Header.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int offsetSkin; ##FSTMerge## public int offsetSkin;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Header.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int offsetTexCoords; ##FSTMerge## public int offsetTexCoords;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Header.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int offsetTriangles; ##FSTMerge## public int offsetTriangles;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Header.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int offsetFrames; ##FSTMerge## public int offsetFrames;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Header.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int offsetGLCommands; ##FSTMerge## public int offsetGLCommands;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Header.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int offsetEnd; ##FSTMerge## public int offsetEnd;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Header.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Frame.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public float[] vertices; ##FSTMerge## public float[] vertices;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Frame.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int[] normalIndices; ##FSTMerge## public int[] normalIndices;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Frame.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public String name; ##FSTMerge## public String name;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/md2/MD2Frame.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static KeyframedModel loadKeyframedModel (FileHandle handle, boolean flipV) {
		return loadKeyframedModel(handle.read(), flipV);
	} ##FSTMerge## public static KeyframedModel loadKeyframedModel (FileHandle handle, boolean flipV) {
		return loadKeyframedModel(handle.read(), flipV);
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static StillModel loadStillModel (FileHandle handle, boolean flipV) {
		return loadStillModel(handle.read(), flipV);
	} ##FSTMerge## public static StillModel loadStillModel (FileHandle handle, boolean flipV) {
		return loadStillModel(handle.read(), flipV);
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static int lineNum = 0; ##FSTMerge## static int lineNum = 0;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## static String line = null; ##FSTMerge## static String line = null;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static StillModel loadStillModel (InputStream stream, boolean flipV) {
		BufferedReader in = new BufferedReader(new InputStreamReader(stream));

		lineNum = 1;
		try {
			String version = readString(in);
			if (!version.equals("g3dt-still-1.0")) throw new GdxRuntimeException("incorrect version");
			int numMeshes = readInt(in);
			StillSubMesh[] subMeshes = new StillSubMesh[numMeshes];
			for (int i = 0; i < numMeshes; i++) {
				subMeshes[i] = readStillSubMesh(in, flipV);
			}
			StillModel model = new StillModel(subMeshes);
			return model;
		} catch (Throwable e) {
			throw new GdxRuntimeException("Couldn't read keyframed model, error in line " + lineNum + ", '" + line + "' : "
				+ e.getMessage(), e);
		}
	} ##FSTMerge## public static StillModel loadStillModel (InputStream stream, boolean flipV) {
		BufferedReader in = new BufferedReader(new InputStreamReader(stream));

		lineNum = 1;
		try {
			String version = readString(in);
			if (!version.equals("g3dt-still-1.0")) throw new GdxRuntimeException("incorrect version");
			int numMeshes = readInt(in);
			StillSubMesh[] subMeshes = new StillSubMesh[numMeshes];
			for (int i = 0; i < numMeshes; i++) {
				subMeshes[i] = readStillSubMesh(in, flipV);
			}
			StillModel model = new StillModel(subMeshes);
			return model;
		} catch (Throwable e) {
			throw new GdxRuntimeException("Couldn't read keyframed model, error in line " + lineNum + ", '" + line + "' : "
				+ e.getMessage(), e);
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static StillSubMesh readStillSubMesh (BufferedReader in, boolean flipV) throws IOException {
		String name = readString(in);
		IntArray indices = readFaces(in);
		int numVertices = readInt(in);
		int numAttributes = readInt(in);

		if (!readString(in).equals("position")) throw new GdxRuntimeException("first attribute must be position.");
		int numUvs = 0;
		boolean hasNormals = false;
		for (int i = 1; i < numAttributes; i++) {
			String attributeType = readString(in);

			if (!attributeType.equals("normal") && !attributeType.equals("uv"))
				throw new GdxRuntimeException("attribute name must be normal or uv");

			if (attributeType.equals("normal")) {
				if (i != 1) throw new GdxRuntimeException("attribute normal must be second attribute");
				hasNormals = true;
			}
			if (attributeType.equals("uv")) {
				numUvs++;
			}
		}
		VertexAttribute[] vertexAttributes = createVertexAttributes(hasNormals, numUvs);
		int vertexSize = new VertexAttributes(vertexAttributes).vertexSize / 4;
		float[] vertices = new float[numVertices * vertexSize];
		int idx = 0;
		int uvOffset = hasNormals ? 6 : 3;
		for (int i = 0; i < numVertices; i++) {
			readFloatArray(in, vertices, idx);
			if (flipV) {
				for (int j = idx + uvOffset + 1; j < idx + uvOffset + numUvs * 2; j += 2) {
					vertices[j] = 1 - vertices[j];
				}
			}
			idx += vertexSize;
		}

		Mesh mesh = new Mesh(true, numVertices, indices.size, vertexAttributes);
		mesh.setVertices(vertices);
		mesh.setIndices(convertToShortArray(indices));
		return new StillSubMesh(name, mesh, GL10.GL_TRIANGLES);
	} ##FSTMerge## private static StillSubMesh readStillSubMesh (BufferedReader in, boolean flipV) throws IOException {
		String name = readString(in);
		IntArray indices = readFaces(in);
		int numVertices = readInt(in);
		int numAttributes = readInt(in);

		if (!readString(in).equals("position")) throw new GdxRuntimeException("first attribute must be position.");
		int numUvs = 0;
		boolean hasNormals = false;
		for (int i = 1; i < numAttributes; i++) {
			String attributeType = readString(in);

			if (!attributeType.equals("normal") && !attributeType.equals("uv"))
				throw new GdxRuntimeException("attribute name must be normal or uv");

			if (attributeType.equals("normal")) {
				if (i != 1) throw new GdxRuntimeException("attribute normal must be second attribute");
				hasNormals = true;
			}
			if (attributeType.equals("uv")) {
				numUvs++;
			}
		}
		VertexAttribute[] vertexAttributes = createVertexAttributes(hasNormals, numUvs);
		int vertexSize = new VertexAttributes(vertexAttributes).vertexSize / 4;
		float[] vertices = new float[numVertices * vertexSize];
		int idx = 0;
		int uvOffset = hasNormals ? 6 : 3;
		for (int i = 0; i < numVertices; i++) {
			readFloatArray(in, vertices, idx);
			if (flipV) {
				for (int j = idx + uvOffset + 1; j < idx + uvOffset + numUvs * 2; j += 2) {
					vertices[j] = 1 - vertices[j];
				}
			}
			idx += vertexSize;
		}

		Mesh mesh = new Mesh(true, numVertices, indices.size, vertexAttributes);
		mesh.setVertices(vertices);
		mesh.setIndices(convertToShortArray(indices));
		return new StillSubMesh(name, mesh, GL10.GL_TRIANGLES);
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static KeyframedModel loadKeyframedModel (InputStream stream, boolean flipV) {
		BufferedReader in = new BufferedReader(new InputStreamReader(stream));

		lineNum = 1;
		try {
			String version = readString(in);
			if (!version.equals("g3dt-keyframed-1.0")) throw new GdxRuntimeException("incorrect version");
			int numMeshes = readInt(in);
			KeyframedSubMesh[] subMeshes = new KeyframedSubMesh[numMeshes];
			for (int i = 0; i < numMeshes; i++) {
				subMeshes[i] = readMesh(in, flipV);
			}
			KeyframedModel model = new KeyframedModel(subMeshes);
			model.setAnimation(model.getAnimations()[0].name, 0, false);
			return model;
		} catch (Throwable e) {
			throw new GdxRuntimeException("Couldn't read keyframed model, error in line " + lineNum + ", '" + line + "' : "
				+ e.getMessage(), e);
		}
	} ##FSTMerge## public static KeyframedModel loadKeyframedModel (InputStream stream, boolean flipV) {
		BufferedReader in = new BufferedReader(new InputStreamReader(stream));

		lineNum = 1;
		try {
			String version = readString(in);
			if (!version.equals("g3dt-keyframed-1.0")) throw new GdxRuntimeException("incorrect version");
			int numMeshes = readInt(in);
			KeyframedSubMesh[] subMeshes = new KeyframedSubMesh[numMeshes];
			for (int i = 0; i < numMeshes; i++) {
				subMeshes[i] = readMesh(in, flipV);
			}
			KeyframedModel model = new KeyframedModel(subMeshes);
			model.setAnimation(model.getAnimations()[0].name, 0, false);
			return model;
		} catch (Throwable e) {
			throw new GdxRuntimeException("Couldn't read keyframed model, error in line " + lineNum + ", '" + line + "' : "
				+ e.getMessage(), e);
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static KeyframedSubMesh readMesh (BufferedReader in, boolean flipV) throws IOException {
		String name = readString(in);
		IntArray indices = readFaces(in);
		int numVertices = readInt(in);
		int numAttributes = readInt(in);

		if (!readString(in).equals("position")) throw new GdxRuntimeException("first attribute must be position.");
		Array<FloatArray> uvSets = new Array<FloatArray>();
		boolean hasNormals = false;
		for (int i = 1; i < numAttributes; i++) {
			String attributeType = readString(in);

			if (!attributeType.equals("normal") && !attributeType.equals("uv"))
				throw new GdxRuntimeException("attribute name must be normal or uv");

			if (attributeType.equals("normal")) {
				if (i != 1) throw new GdxRuntimeException("attribute normal must be second attribute");
				hasNormals = true;
			}
			if (attributeType.equals("uv")) {
				uvSets.add(readUVSet(in, numVertices, flipV));
			}
		}
		int animatedComponents = hasNormals ? 6 : 3;

		VertexAttribute[] vertexAttributes = createVertexAttributes(hasNormals, uvSets.size);

		int numAnimations = readInt(in);
		ObjectMap<String, KeyframedAnimation> animations = new ObjectMap<String, KeyframedAnimation>(numAnimations);
		for (int i = 0; i < numAnimations; i++) {
			String animationName = readString(in);
			int numKeyframes = readInt(in);
			float frameDuration = readFloat(in); // in seconds

			Keyframe[] keyframes = new Keyframe[numKeyframes];
			float time = 0;
			FloatArray vertex = new FloatArray(animatedComponents);
			for (int frame = 0; frame < numKeyframes; frame++) {
				float[] vertices = new float[numVertices * (animatedComponents)];
				int idx = 0;
				for (int j = 0; j < numVertices; j++) {
					idx = readFloatArray(in, vertices, idx);
				}
				Keyframe keyframe = new Keyframe(time, vertices);
				keyframes[frame] = keyframe;
				time += frameDuration;
			}

			KeyframedAnimation animation = new KeyframedAnimation(animationName, frameDuration, keyframes);
			animations.put(animationName, animation);
		}

		KeyframedSubMesh mesh = new KeyframedSubMesh(name, new Mesh(VertexDataType.VertexArray, false, numVertices, indices.size,
			createVertexAttributes(hasNormals, uvSets.size)), buildVertices(numVertices, hasNormals, uvSets), animations,
			animatedComponents, GL10.GL_TRIANGLES);
		mesh.mesh.setIndices(convertToShortArray(indices));
		mesh.mesh.setVertices(mesh.blendedVertices);
		return mesh;
	} ##FSTMerge## private static KeyframedSubMesh readMesh (BufferedReader in, boolean flipV) throws IOException {
		String name = readString(in);
		IntArray indices = readFaces(in);
		int numVertices = readInt(in);
		int numAttributes = readInt(in);

		if (!readString(in).equals("position")) throw new GdxRuntimeException("first attribute must be position.");
		Array<FloatArray> uvSets = new Array<FloatArray>();
		boolean hasNormals = false;
		for (int i = 1; i < numAttributes; i++) {
			String attributeType = readString(in);

			if (!attributeType.equals("normal") && !attributeType.equals("uv"))
				throw new GdxRuntimeException("attribute name must be normal or uv");

			if (attributeType.equals("normal")) {
				if (i != 1) throw new GdxRuntimeException("attribute normal must be second attribute");
				hasNormals = true;
			}
			if (attributeType.equals("uv")) {
				uvSets.add(readUVSet(in, numVertices, flipV));
			}
		}
		int animatedComponents = hasNormals ? 6 : 3;

		VertexAttribute[] vertexAttributes = createVertexAttributes(hasNormals, uvSets.size);

		int numAnimations = readInt(in);
		ObjectMap<String, KeyframedAnimation> animations = new ObjectMap<String, KeyframedAnimation>(numAnimations);
		for (int i = 0; i < numAnimations; i++) {
			String animationName = readString(in);
			int numKeyframes = readInt(in);
			float frameDuration = readFloat(in); // in seconds

			Keyframe[] keyframes = new Keyframe[numKeyframes];
			float time = 0;
			FloatArray vertex = new FloatArray(animatedComponents);
			for (int frame = 0; frame < numKeyframes; frame++) {
				float[] vertices = new float[numVertices * (animatedComponents)];
				int idx = 0;
				for (int j = 0; j < numVertices; j++) {
					idx = readFloatArray(in, vertices, idx);
				}
				Keyframe keyframe = new Keyframe(time, vertices);
				keyframes[frame] = keyframe;
				time += frameDuration;
			}

			KeyframedAnimation animation = new KeyframedAnimation(animationName, frameDuration, keyframes);
			animations.put(animationName, animation);
		}

		KeyframedSubMesh mesh = new KeyframedSubMesh(name, new Mesh(VertexDataType.VertexArray, false, numVertices, indices.size,
			createVertexAttributes(hasNormals, uvSets.size)), buildVertices(numVertices, hasNormals, uvSets), animations,
			animatedComponents, GL10.GL_TRIANGLES);
		mesh.mesh.setIndices(convertToShortArray(indices));
		mesh.mesh.setVertices(mesh.blendedVertices);
		return mesh;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static float[] buildVertices (int numVertices, boolean hasNormals, Array<FloatArray> uvSets) {
		float[] vertices = new float[numVertices * (3 + (hasNormals ? 3 : 0) + uvSets.size * 2)];

		int idx = 0;
		int idxUv = 0;
		for (int i = 0; i < numVertices; i++) {
			vertices[idx++] = 0;
			vertices[idx++] = 0;
			vertices[idx++] = 0;
			if (hasNormals) {
				vertices[idx++] = 0;
				vertices[idx++] = 0;
				vertices[idx++] = 0;
			}
			for (int j = 0; j < uvSets.size; j++) {
				vertices[idx++] = uvSets.get(j).get(idxUv);
				vertices[idx++] = uvSets.get(j).get(idxUv + 1);
			}
			idxUv += 2;
		}
		return vertices;
	} ##FSTMerge## private static float[] buildVertices (int numVertices, boolean hasNormals, Array<FloatArray> uvSets) {
		float[] vertices = new float[numVertices * (3 + (hasNormals ? 3 : 0) + uvSets.size * 2)];

		int idx = 0;
		int idxUv = 0;
		for (int i = 0; i < numVertices; i++) {
			vertices[idx++] = 0;
			vertices[idx++] = 0;
			vertices[idx++] = 0;
			if (hasNormals) {
				vertices[idx++] = 0;
				vertices[idx++] = 0;
				vertices[idx++] = 0;
			}
			for (int j = 0; j < uvSets.size; j++) {
				vertices[idx++] = uvSets.get(j).get(idxUv);
				vertices[idx++] = uvSets.get(j).get(idxUv + 1);
			}
			idxUv += 2;
		}
		return vertices;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static VertexAttribute[] createVertexAttributes (boolean hasNormals, int uvs) {
		VertexAttribute[] attributes = new VertexAttribute[1 + (hasNormals ? 1 : 0) + uvs];
		int idx = 0;
		attributes[idx++] = new VertexAttribute(Usage.Position, 3, ShaderProgram.POSITION_ATTRIBUTE);
		if (hasNormals) attributes[idx++] = new VertexAttribute(Usage.Normal, 3, ShaderProgram.NORMAL_ATTRIBUTE);
		for (int i = 0; i < uvs; i++) {
			attributes[idx++] = new VertexAttribute(Usage.TextureCoordinates, 2, ShaderProgram.TEXCOORD_ATTRIBUTE + i);
		}
		return attributes;
	} ##FSTMerge## private static VertexAttribute[] createVertexAttributes (boolean hasNormals, int uvs) {
		VertexAttribute[] attributes = new VertexAttribute[1 + (hasNormals ? 1 : 0) + uvs];
		int idx = 0;
		attributes[idx++] = new VertexAttribute(Usage.Position, 3, ShaderProgram.POSITION_ATTRIBUTE);
		if (hasNormals) attributes[idx++] = new VertexAttribute(Usage.Normal, 3, ShaderProgram.NORMAL_ATTRIBUTE);
		for (int i = 0; i < uvs; i++) {
			attributes[idx++] = new VertexAttribute(Usage.TextureCoordinates, 2, ShaderProgram.TEXCOORD_ATTRIBUTE + i);
		}
		return attributes;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static FloatArray readUVSet (BufferedReader in, int numVertices, boolean flipV) throws IOException {
		FloatArray uvSet = new FloatArray(numVertices * 2);
		FloatArray uv = new FloatArray(2);
		for (int i = 0; i < numVertices; i++) {
			readFloatArray(in, uv);
			uvSet.add(uv.items[0]);
			uvSet.add(flipV ? 1 - uv.items[1] : uv.items[1]);
		}
		return uvSet;
	} ##FSTMerge## private static FloatArray readUVSet (BufferedReader in, int numVertices, boolean flipV) throws IOException {
		FloatArray uvSet = new FloatArray(numVertices * 2);
		FloatArray uv = new FloatArray(2);
		for (int i = 0; i < numVertices; i++) {
			readFloatArray(in, uv);
			uvSet.add(uv.items[0]);
			uvSet.add(flipV ? 1 - uv.items[1] : uv.items[1]);
		}
		return uvSet;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static IntArray readFaces (BufferedReader in) throws NumberFormatException, IOException {
		int numFaces = readInt(in);
		IntArray faceIndices = new IntArray();
		IntArray triangles = new IntArray();
		IntArray indices = new IntArray();

		for (int face = 0; face < numFaces; face++) {
			readIntArray(in, faceIndices);
			int numIndices = faceIndices.get(0);
			triangles.clear();
			int baseIndex = faceIndices.get(1);
			for (int i = 2; i < numIndices; i++) {
				triangles.add(baseIndex);
				triangles.add(faceIndices.items[i]);
				triangles.add(faceIndices.items[i + 1]);
			}
			indices.addAll(triangles);
		}

		indices.shrink();
		return indices;
	} ##FSTMerge## private static IntArray readFaces (BufferedReader in) throws NumberFormatException, IOException {
		int numFaces = readInt(in);
		IntArray faceIndices = new IntArray();
		IntArray triangles = new IntArray();
		IntArray indices = new IntArray();

		for (int face = 0; face < numFaces; face++) {
			readIntArray(in, faceIndices);
			int numIndices = faceIndices.get(0);
			triangles.clear();
			int baseIndex = faceIndices.get(1);
			for (int i = 2; i < numIndices; i++) {
				triangles.add(baseIndex);
				triangles.add(faceIndices.items[i]);
				triangles.add(faceIndices.items[i + 1]);
			}
			indices.addAll(triangles);
		}

		indices.shrink();
		return indices;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static short[] convertToShortArray (IntArray array) {
		short[] shortArray = new short[array.size];
		for (int i = 0; i < array.size; i++) {
			shortArray[i] = (short)array.items[i];
		}
		return shortArray;
	} ##FSTMerge## private static short[] convertToShortArray (IntArray array) {
		short[] shortArray = new short[array.size];
		for (int i = 0; i < array.size; i++) {
			shortArray[i] = (short)array.items[i];
		}
		return shortArray;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static float readFloat (BufferedReader in) throws NumberFormatException, IOException {
		lineNum++;
		return Float.parseFloat(read(in).trim());
	} ##FSTMerge## private static float readFloat (BufferedReader in) throws NumberFormatException, IOException {
		lineNum++;
		return Float.parseFloat(read(in).trim());
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static int readInt (BufferedReader in) throws NumberFormatException, IOException {
		lineNum++;
		return (int)(Math.floor(Float.parseFloat(read(in).trim())));
	} ##FSTMerge## private static int readInt (BufferedReader in) throws NumberFormatException, IOException {
		lineNum++;
		return (int)(Math.floor(Float.parseFloat(read(in).trim())));
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static String readString (BufferedReader in) throws IOException {
		lineNum++;
		return read(in);
	} ##FSTMerge## private static String readString (BufferedReader in) throws IOException {
		lineNum++;
		return read(in);
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static void readFloatArray (BufferedReader in, FloatArray array) throws IOException {
		lineNum++;
		String[] tokens = read(in).split(",");
		int len = tokens.length;
		array.clear();
		for (int i = 0; i < len; i++) {
			array.add(Float.parseFloat(tokens[i].trim()));
		}
	} ##FSTMerge## private static void readFloatArray (BufferedReader in, FloatArray array) throws IOException {
		lineNum++;
		String[] tokens = read(in).split(",");
		int len = tokens.length;
		array.clear();
		for (int i = 0; i < len; i++) {
			array.add(Float.parseFloat(tokens[i].trim()));
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static int readFloatArray (BufferedReader in, float[] array, int idx) throws IOException {
		lineNum++;
		String[] tokens = read(in).split(",");
		int len = tokens.length;
		for (int i = 0; i < len; i++) {
			array[idx++] = Float.parseFloat(tokens[i].trim());
		}
		return idx;
	} ##FSTMerge## private static int readFloatArray (BufferedReader in, float[] array, int idx) throws IOException {
		lineNum++;
		String[] tokens = read(in).split(",");
		int len = tokens.length;
		for (int i = 0; i < len; i++) {
			array[idx++] = Float.parseFloat(tokens[i].trim());
		}
		return idx;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static void readIntArray (BufferedReader in, IntArray array) throws IOException {
		String[] tokens = read(in).split(",");
		int len = tokens.length;
		array.clear();
		for (int i = 0; i < len; i++) {
			array.add(Integer.parseInt(tokens[i].trim()));
		}
	} ##FSTMerge## private static void readIntArray (BufferedReader in, IntArray array) throws IOException {
		String[] tokens = read(in).split(",");
		int len = tokens.length;
		array.clear();
		for (int i = 0; i < len; i++) {
			array.add(Integer.parseInt(tokens[i].trim()));
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static String read (BufferedReader in) throws IOException {
		line = in.readLine();
		return line;
	} ##FSTMerge## private static String read (BufferedReader in) throws IOException {
		line = in.readLine();
		return line;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static ##FSTMerge## public static
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements StillModelLoader ##FSTMerge## implements StillModelLoader
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
		public StillModel load (FileHandle handle, ModelLoaderHints hints) {
			return G3dtLoader.loadStillModel(handle, hints.flipV);
		} ##FSTMerge## @Override
		public StillModel load (FileHandle handle, ModelLoaderHints hints) {
			return G3dtLoader.loadStillModel(handle, hints.flipV);
		}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static ##FSTMerge## public static
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements KeyframedModelLoader ##FSTMerge## implements KeyframedModelLoader
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
		public KeyframedModel load (FileHandle handle, ModelLoaderHints hints) {
			return G3dtLoader.loadKeyframedModel(handle, hints.flipV);
		} ##FSTMerge## @Override
		public KeyframedModel load (FileHandle handle, ModelLoaderHints hints) {
			return G3dtLoader.loadKeyframedModel(handle, hints.flipV);
		}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dtLoader.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static StillModel loadStillModel (FileHandle handle) {
		Chunk root = null;
		InputStream in = null;
		try {
			in = handle.read();
			root = ChunkReader.readChunks(in);

			// check root tag
			if (root.getId() != G3dConstants.G3D_ROOT) throw new GdxRuntimeException("Invalid root tag id: " + root.getId());

			// check version
			Chunk version = root.getChild(G3dConstants.VERSION_INFO);
			if (version == null) throw new GdxRuntimeException("No version chunk found");
			int major = version.readByte();
			int minor = version.readByte();
			if (major != 0 || minor != 1)
				throw new GdxRuntimeException("Invalid version, required 0.1, got " + major + "." + minor);

			// read stillmodel
			Chunk stillModel = root.getChild(G3dConstants.STILL_MODEL);
			if (stillModel == null) throw new GdxRuntimeException("No stillmodel chunk found");
			int numSubMeshes = stillModel.readInt();

			// read submeshes
			StillSubMesh[] meshes = new StillSubMesh[numSubMeshes];
			Chunk[] meshChunks = stillModel.getChildren(G3dConstants.STILL_SUBMESH);
			if (meshChunks.length != numSubMeshes)
				throw new GdxRuntimeException("Number of submeshes not equal to number specified in still model chunk, expected "
					+ numSubMeshes + ", got " + meshChunks.length);
			for (int i = 0; i < numSubMeshes; i++) {
				// read submesh name and primitive type
				Chunk subMesh = meshChunks[i];
				String name = subMesh.readString();
				int primitiveType = subMesh.readInt();

				// read attributes
				Chunk attributes = subMesh.getChild(G3dConstants.VERTEX_ATTRIBUTES);
				if (attributes == null) throw new GdxRuntimeException("No vertex attribute chunk given");
				int numAttributes = attributes.readInt();
				Chunk[] attributeChunks = attributes.getChildren(G3dConstants.VERTEX_ATTRIBUTE);
				if (attributeChunks.length != numAttributes)
					new GdxRuntimeException("Number of attributes not equal to number specified in attributes chunk, expected "
						+ numAttributes + ", got " + attributeChunks.length);
				VertexAttribute[] vertAttribs = new VertexAttribute[numAttributes];
				for (int j = 0; j < numAttributes; j++) {
					vertAttribs[j] = new VertexAttribute(attributeChunks[j].readInt(), attributeChunks[j].readInt(),
						attributeChunks[j].readString());
				}

				// read vertices
				Chunk vertices = subMesh.getChild(G3dConstants.VERTEX_LIST);
				int numVertices = vertices.readInt();
				float[] vertexData = vertices.readFloats();

				// read indices
				Chunk indices = subMesh.getChild(G3dConstants.INDEX_LIST);
				int numIndices = indices.readInt();
				short[] indexData = indices.readShorts();

				StillSubMesh mesh = new StillSubMesh(name, new Mesh(true, numVertices, numIndices, vertAttribs), primitiveType);
				mesh.mesh.setVertices(vertexData);
				mesh.mesh.setIndices(indexData);
				mesh.material = new Material("default");
				meshes[i] = mesh;
			}

			StillModel model = new StillModel(meshes);
			model.setMaterial(new Material("default"));
			return model;
		} catch (IOException e) {
			throw new GdxRuntimeException("Couldn't load still model from '" + handle.name() + "', " + e.getMessage(), e);
		} finally {
			if (in != null) try {
				in.close();
			} catch (IOException e) {
			}
		}
	} ##FSTMerge## public static StillModel loadStillModel (FileHandle handle) {
		Chunk root = null;
		InputStream in = null;
		try {
			in = handle.read();
			root = ChunkReader.readChunks(in);

			// check root tag
			if (root.getId() != G3dConstants.G3D_ROOT) throw new GdxRuntimeException("Invalid root tag id: " + root.getId());

			// check version
			Chunk version = root.getChild(G3dConstants.VERSION_INFO);
			if (version == null) throw new GdxRuntimeException("No version chunk found");
			int major = version.readByte();
			int minor = version.readByte();
			if (major != 0 || minor != 1)
				throw new GdxRuntimeException("Invalid version, required 0.1, got " + major + "." + minor);

			// read stillmodel
			Chunk stillModel = root.getChild(G3dConstants.STILL_MODEL);
			if (stillModel == null) throw new GdxRuntimeException("No stillmodel chunk found");
			int numSubMeshes = stillModel.readInt();

			// read submeshes
			StillSubMesh[] meshes = new StillSubMesh[numSubMeshes];
			Chunk[] meshChunks = stillModel.getChildren(G3dConstants.STILL_SUBMESH);
			if (meshChunks.length != numSubMeshes)
				throw new GdxRuntimeException("Number of submeshes not equal to number specified in still model chunk, expected "
					+ numSubMeshes + ", got " + meshChunks.length);
			for (int i = 0; i < numSubMeshes; i++) {
				// read submesh name and primitive type
				Chunk subMesh = meshChunks[i];
				String name = subMesh.readString();
				int primitiveType = subMesh.readInt();

				// read attributes
				Chunk attributes = subMesh.getChild(G3dConstants.VERTEX_ATTRIBUTES);
				if (attributes == null) throw new GdxRuntimeException("No vertex attribute chunk given");
				int numAttributes = attributes.readInt();
				Chunk[] attributeChunks = attributes.getChildren(G3dConstants.VERTEX_ATTRIBUTE);
				if (attributeChunks.length != numAttributes)
					new GdxRuntimeException("Number of attributes not equal to number specified in attributes chunk, expected "
						+ numAttributes + ", got " + attributeChunks.length);
				VertexAttribute[] vertAttribs = new VertexAttribute[numAttributes];
				for (int j = 0; j < numAttributes; j++) {
					vertAttribs[j] = new VertexAttribute(attributeChunks[j].readInt(), attributeChunks[j].readInt(),
						attributeChunks[j].readString());
				}

				// read vertices
				Chunk vertices = subMesh.getChild(G3dConstants.VERTEX_LIST);
				int numVertices = vertices.readInt();
				float[] vertexData = vertices.readFloats();

				// read indices
				Chunk indices = subMesh.getChild(G3dConstants.INDEX_LIST);
				int numIndices = indices.readInt();
				short[] indexData = indices.readShorts();

				StillSubMesh mesh = new StillSubMesh(name, new Mesh(true, numVertices, numIndices, vertAttribs), primitiveType);
				mesh.mesh.setVertices(vertexData);
				mesh.mesh.setIndices(indexData);
				mesh.material = new Material("default");
				meshes[i] = mesh;
			}

			StillModel model = new StillModel(meshes);
			model.setMaterial(new Material("default"));
			return model;
		} catch (IOException e) {
			throw new GdxRuntimeException("Couldn't load still model from '" + handle.name() + "', " + e.getMessage(), e);
		} finally {
			if (in != null) try {
				in.close();
			} catch (IOException e) {
			}
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static KeyframedModel loadKeyframedModel (FileHandle handle) {
		Chunk root = null;
		InputStream in = null;
		try {
			in = handle.read();
			root = ChunkReader.readChunks(in);

			// check root tag
			if (root.getId() != G3dConstants.G3D_ROOT) throw new GdxRuntimeException("Invalid root tag id: " + root.getId());

			// check version
			Chunk version = root.getChild(G3dConstants.VERSION_INFO);
			if (version == null) throw new GdxRuntimeException("No version chunk found");
			int major = version.readByte();
			int minor = version.readByte();
			if (major != 0 || minor != 1)
				throw new GdxRuntimeException("Invalid version, required 0.1, got " + major + "." + minor);

			// read keyframed model
			Chunk stillModel = root.getChild(G3dConstants.KEYFRAMED_MODEL);
			if (stillModel == null) throw new GdxRuntimeException("No stillmodel chunk found");
			int numSubMeshes = stillModel.readInt();

			// read submeshes
			KeyframedSubMesh[] meshes = new KeyframedSubMesh[numSubMeshes];
			Chunk[] meshChunks = stillModel.getChildren(G3dConstants.KEYFRAMED_SUBMESH);
			if (meshChunks.length != numSubMeshes)
				throw new GdxRuntimeException("Number of submeshes not equal to number specified in still model chunk, expected "
					+ numSubMeshes + ", got " + meshChunks.length);
			for (int i = 0; i < numSubMeshes; i++) {
				// read submesh name and primitive type
				Chunk subMesh = meshChunks[i];
				String meshName = subMesh.readString();
				int primitiveType = subMesh.readInt();
				int animatedComponents = subMesh.readInt();
				int numAnimations = subMesh.readInt();

				// read attributes
				Chunk attributes = subMesh.getChild(G3dConstants.VERTEX_ATTRIBUTES);
				if (attributes == null) throw new GdxRuntimeException("No vertex attribute chunk given");
				int numAttributes = attributes.readInt();
				Chunk[] attributeChunks = attributes.getChildren(G3dConstants.VERTEX_ATTRIBUTE);
				if (attributeChunks.length != numAttributes)
					new GdxRuntimeException("Number of attributes not equal to number specified in attributes chunk, expected "
						+ numAttributes + ", got " + attributeChunks.length);
				VertexAttribute[] vertAttribs = new VertexAttribute[numAttributes];
				for (int j = 0; j < numAttributes; j++) {
					vertAttribs[j] = new VertexAttribute(attributeChunks[j].readInt(), attributeChunks[j].readInt(),
						attributeChunks[j].readString());
				}

				// read static components, sort of like a bind pose mesh
				Chunk vertices = subMesh.getChild(G3dConstants.VERTEX_LIST);
				int numVertices = vertices.readInt();
				float[] vertexData = vertices.readFloats();

				// read indices
				Chunk indices = subMesh.getChild(G3dConstants.INDEX_LIST);
				int numIndices = indices.readInt();
				short[] indexData = indices.readShorts();

				// read animations
				ObjectMap<String, KeyframedAnimation> animations = new ObjectMap<String, KeyframedAnimation>();
				Chunk[] animationChunks = subMesh.getChildren(G3dConstants.KEYFRAMED_ANIMATION);
				if (numAnimations != animationChunks.length)
					throw new GdxRuntimeException(
						"number of keyframed animations not equal to number specified in keyframed submesh chunk, was "
							+ animationChunks.length + ", expected " + numAnimations);
				for (int j = 0; j < numAnimations; j++) {
					Chunk animationChunk = animationChunks[j];
					String animationName = animationChunk.readString();
					float frameDuration = animationChunk.readFloat();

					// read keyframes
					int numKeyframes = animationChunk.readInt();
					Keyframe[] keyframes = new Keyframe[numKeyframes];
					Chunk[] keyframeChunks = animationChunk.getChildren(G3dConstants.KEYFRAMED_FRAME);
					if (numKeyframes != keyframeChunks.length)
						throw new GdxRuntimeException("number of keyframes not equal to number specified in keyframed animation, was "
							+ keyframeChunks.length + ", expected " + numKeyframes);
					for (int k = 0; k < numKeyframes; k++) {
						Chunk keyframeChunk = keyframeChunks[k];
						float timeStamp = keyframeChunk.readFloat();
						float[] keyframeVertices = keyframeChunk.readFloats();

						keyframes[k] = new Keyframe(timeStamp, keyframeVertices);
					}

					animations.put(animationName, new KeyframedAnimation(animationName, frameDuration, keyframes));
				}

				Mesh mesh = new Mesh(VertexDataType.VertexArray, false, numVertices, numIndices, vertAttribs);
				meshes[i] = new KeyframedSubMesh(meshName, mesh, vertexData, animations, animatedComponents, primitiveType);
				mesh.setVertices(vertexData);
				mesh.setIndices(indexData);
			}

			KeyframedModel model = new KeyframedModel(meshes);
			model.setMaterial(new Material("default"));
			return model;
		} catch (IOException e) {
			throw new GdxRuntimeException("Couldn't load still model from '" + handle.name() + "', " + e.getMessage(), e);
		} finally {
			if (in != null) try {
				in.close();
			} catch (IOException e) {
			}
		}
	} ##FSTMerge## public static KeyframedModel loadKeyframedModel (FileHandle handle) {
		Chunk root = null;
		InputStream in = null;
		try {
			in = handle.read();
			root = ChunkReader.readChunks(in);

			// check root tag
			if (root.getId() != G3dConstants.G3D_ROOT) throw new GdxRuntimeException("Invalid root tag id: " + root.getId());

			// check version
			Chunk version = root.getChild(G3dConstants.VERSION_INFO);
			if (version == null) throw new GdxRuntimeException("No version chunk found");
			int major = version.readByte();
			int minor = version.readByte();
			if (major != 0 || minor != 1)
				throw new GdxRuntimeException("Invalid version, required 0.1, got " + major + "." + minor);

			// read keyframed model
			Chunk stillModel = root.getChild(G3dConstants.KEYFRAMED_MODEL);
			if (stillModel == null) throw new GdxRuntimeException("No stillmodel chunk found");
			int numSubMeshes = stillModel.readInt();

			// read submeshes
			KeyframedSubMesh[] meshes = new KeyframedSubMesh[numSubMeshes];
			Chunk[] meshChunks = stillModel.getChildren(G3dConstants.KEYFRAMED_SUBMESH);
			if (meshChunks.length != numSubMeshes)
				throw new GdxRuntimeException("Number of submeshes not equal to number specified in still model chunk, expected "
					+ numSubMeshes + ", got " + meshChunks.length);
			for (int i = 0; i < numSubMeshes; i++) {
				// read submesh name and primitive type
				Chunk subMesh = meshChunks[i];
				String meshName = subMesh.readString();
				int primitiveType = subMesh.readInt();
				int animatedComponents = subMesh.readInt();
				int numAnimations = subMesh.readInt();

				// read attributes
				Chunk attributes = subMesh.getChild(G3dConstants.VERTEX_ATTRIBUTES);
				if (attributes == null) throw new GdxRuntimeException("No vertex attribute chunk given");
				int numAttributes = attributes.readInt();
				Chunk[] attributeChunks = attributes.getChildren(G3dConstants.VERTEX_ATTRIBUTE);
				if (attributeChunks.length != numAttributes)
					new GdxRuntimeException("Number of attributes not equal to number specified in attributes chunk, expected "
						+ numAttributes + ", got " + attributeChunks.length);
				VertexAttribute[] vertAttribs = new VertexAttribute[numAttributes];
				for (int j = 0; j < numAttributes; j++) {
					vertAttribs[j] = new VertexAttribute(attributeChunks[j].readInt(), attributeChunks[j].readInt(),
						attributeChunks[j].readString());
				}

				// read static components, sort of like a bind pose mesh
				Chunk vertices = subMesh.getChild(G3dConstants.VERTEX_LIST);
				int numVertices = vertices.readInt();
				float[] vertexData = vertices.readFloats();

				// read indices
				Chunk indices = subMesh.getChild(G3dConstants.INDEX_LIST);
				int numIndices = indices.readInt();
				short[] indexData = indices.readShorts();

				// read animations
				ObjectMap<String, KeyframedAnimation> animations = new ObjectMap<String, KeyframedAnimation>();
				Chunk[] animationChunks = subMesh.getChildren(G3dConstants.KEYFRAMED_ANIMATION);
				if (numAnimations != animationChunks.length)
					throw new GdxRuntimeException(
						"number of keyframed animations not equal to number specified in keyframed submesh chunk, was "
							+ animationChunks.length + ", expected " + numAnimations);
				for (int j = 0; j < numAnimations; j++) {
					Chunk animationChunk = animationChunks[j];
					String animationName = animationChunk.readString();
					float frameDuration = animationChunk.readFloat();

					// read keyframes
					int numKeyframes = animationChunk.readInt();
					Keyframe[] keyframes = new Keyframe[numKeyframes];
					Chunk[] keyframeChunks = animationChunk.getChildren(G3dConstants.KEYFRAMED_FRAME);
					if (numKeyframes != keyframeChunks.length)
						throw new GdxRuntimeException("number of keyframes not equal to number specified in keyframed animation, was "
							+ keyframeChunks.length + ", expected " + numKeyframes);
					for (int k = 0; k < numKeyframes; k++) {
						Chunk keyframeChunk = keyframeChunks[k];
						float timeStamp = keyframeChunk.readFloat();
						float[] keyframeVertices = keyframeChunk.readFloats();

						keyframes[k] = new Keyframe(timeStamp, keyframeVertices);
					}

					animations.put(animationName, new KeyframedAnimation(animationName, frameDuration, keyframes));
				}

				Mesh mesh = new Mesh(VertexDataType.VertexArray, false, numVertices, numIndices, vertAttribs);
				meshes[i] = new KeyframedSubMesh(meshName, mesh, vertexData, animations, animatedComponents, primitiveType);
				mesh.setVertices(vertexData);
				mesh.setIndices(indexData);
			}

			KeyframedModel model = new KeyframedModel(meshes);
			model.setMaterial(new Material("default"));
			return model;
		} catch (IOException e) {
			throw new GdxRuntimeException("Couldn't load still model from '" + handle.name() + "', " + e.getMessage(), e);
		} finally {
			if (in != null) try {
				in.close();
			} catch (IOException e) {
			}
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static SkeletonModel loadSkeletonModel (FileHandle handle) {
		Chunk root = null;
		InputStream in = null;
		try {
			in = handle.read();
			root = ChunkReader.readChunks(in);

			// check root tag
			if (root.getId() != G3dConstants.G3D_ROOT) throw new GdxRuntimeException("Invalid root tag id: " + root.getId());

			// check version
			Chunk version = root.getChild(G3dConstants.VERSION_INFO);
			if (version == null) throw new GdxRuntimeException("No version chunk found");
			int major = version.readByte();
			int minor = version.readByte();
			if (major != 0 || minor != 1)
				throw new GdxRuntimeException("Invalid version, required 0.1, got " + major + "." + minor);

			// read skeleton model
			Chunk skeletonModel = root.getChild(G3dConstants.SKELETON_MODEL);
			if (skeletonModel == null) throw new GdxRuntimeException("No skeletonModel chunk found");
			int numSubMeshes = skeletonModel.readInt();

			// read submeshes
			SkeletonSubMesh[] meshes = new SkeletonSubMesh[numSubMeshes];
			Chunk[] meshChunks = skeletonModel.getChildren(G3dConstants.SKELETON_SUBMESH);
			if (meshChunks.length != numSubMeshes)
				throw new GdxRuntimeException("Number of submeshes not equal to number specified in still model chunk, expected "
					+ numSubMeshes + ", got " + meshChunks.length);
			for (int i = 0; i < numSubMeshes; i++) {
				Chunk subMeshChunk = meshChunks[i];
				
				// read attributes
				Chunk attributes = subMeshChunk.getChild(G3dConstants.VERTEX_ATTRIBUTES);
				if (attributes == null) throw new GdxRuntimeException("No vertex attribute chunk given");
				int numAttributes = attributes.readInt();
				Chunk[] attributeChunks = attributes.getChildren(G3dConstants.VERTEX_ATTRIBUTE);
				if (attributeChunks.length != numAttributes)
					new GdxRuntimeException("Number of attributes not equal to number specified in attributes chunk, expected "
						+ numAttributes + ", got " + attributeChunks.length);
				VertexAttribute[] vertAttribs = new VertexAttribute[numAttributes];
				for (int j = 0; j < numAttributes; j++) {
					vertAttribs[j] = new VertexAttribute(attributeChunks[j].readInt(), attributeChunks[j].readInt(),
						attributeChunks[j].readString());
				}

				// read static components, sort of like a bind pose mesh
				Chunk vertices = subMeshChunk.getChild(G3dConstants.VERTEX_LIST);
				int numVertices = vertices.readInt();
				float[] meshVertices = vertices.readFloats();

				// read indices
				Chunk indices = subMeshChunk.getChild(G3dConstants.INDEX_LIST);
				int numIndices = indices.readInt();
				short[] meshIndices = indices.readShorts();
				
				//read bone weight
				Chunk boneWeights = subMeshChunk.getChild(G3dConstants.BONE_WEIGHTS);
				int numBonesWeights = boneWeights.readInt();
				Chunk[] boneWeightChunks = boneWeights.getChildren(G3dConstants.BONE_WEIGHT);
				if (attributeChunks.length != numAttributes)
					new GdxRuntimeException("Number of bone weights not equal to number specified in bone weights chunk, expected "
						+ numBonesWeights + ", got " + boneWeightChunks.length);
				float[][] meshBoneWeights = new float[numBonesWeights][];
				for(int j=0;j<numBonesWeights;j++) {
					int count = boneWeightChunks[j].readInt();
					meshBoneWeights[j] = boneWeightChunks[j].readFloats();
				}

				//read bone assignment
				Chunk boneAssignments = subMeshChunk.getChild(G3dConstants.BONE_ASSIGNMENTS);
				int numBoneAssignments = boneAssignments.readInt();
				Chunk[] boneAssignmentChunks = boneAssignments.getChildren(G3dConstants.BONE_ASSIGNMENT);
				if (boneAssignmentChunks.length != numBoneAssignments)
					new GdxRuntimeException("Number of bone assignment not equal to number specified in bone assignment chunk, expected "
						+ numBoneAssignments + ", got " + boneAssignmentChunks.length);
				int[][] meshBoneAssignments = new int[numBoneAssignments][];
				for(int j=0;j<numBoneAssignments;j++) {
					int count = boneAssignmentChunks[j].readInt();
					meshBoneAssignments[j] = boneAssignmentChunks[j].readInts();
				}
				
				SkeletonSubMesh subMesh = new SkeletonSubMesh(subMeshChunk.readString(), new Mesh(false, numVertices, numIndices, vertAttribs),
					subMeshChunk.readInt());
				
				subMesh.indices = meshIndices;
				subMesh.boneAssignments = meshBoneAssignments;
				subMesh.boneWeights = meshBoneWeights;
				subMesh.vertices = meshVertices;
				
				subMesh.mesh.setVertices(subMesh.vertices);
				subMesh.mesh.setIndices(subMesh.indices);
				subMesh.skinnedVertices = new float[subMesh.vertices.length];
				System.arraycopy(subMesh.vertices, 0, subMesh.skinnedVertices, 0, subMesh.vertices.length);
				meshes[i] = subMesh;
			}
			
			//read Skeleton hierarchy
			Skeleton skeleton = new Skeleton();
			Chunk skeletonChunk = skeletonModel.getChild(G3dConstants.SKELETON);
			{
				// read Skeleton hierarchy
				Chunk hierarchy = skeletonChunk.getChild(G3dConstants.SKELETON_HIERARCHY);
				int numHierarchyJoints = hierarchy.readInt();
				for(int i=0;i<numHierarchyJoints;i++) {
					skeleton.hierarchy.add(readSkeletonJoint(hierarchy));
				}
				
				
				// read Skeleton animations
				Chunk animations = skeletonChunk.getChild(G3dConstants.SKELETON_ANIMATIONS);
				int numAnimations = animations.readInt();
				Chunk[] animationChunks = animations.getChildren(G3dConstants.SKELETON_ANIMATION);
				if (animationChunks.length != numAnimations)
					new GdxRuntimeException("Number of animations not equal to number specified in animations chunk, expected "
						+ numAnimations + ", got " + animationChunks.length);
				for(int i=0;i<numAnimations; i++) {
					Chunk animation = animationChunks[i];

					String name = animation.readString();
					float totalDuration = animation.readFloat();
					
					int numJoints = animation.readInt();
					SkeletonKeyframe perJointKeyFrames[][] = new SkeletonKeyframe[numJoints][];
					for(int j=0;j<numJoints;j++){
						int numFrames = animation.readInt();
						perJointKeyFrames[j] = new SkeletonKeyframe[numFrames];
						
						for(int k=0;k<numFrames;k++){
							SkeletonKeyframe frame = new SkeletonKeyframe();

							frame.timeStamp = animation.readFloat();
							frame.parentIndex = animation.readInt();
							frame.position.x = animation.readFloat();
							frame.position.y = animation.readFloat();
							frame.position.z = animation.readFloat();
							frame.rotation.w = animation.readFloat();
							frame.rotation.x = animation.readFloat();
							frame.rotation.y = animation.readFloat();
							frame.rotation.z = animation.readFloat();
							frame.scale.x = animation.readFloat();
							frame.scale.y = animation.readFloat();
							frame.scale.z = animation.readFloat();
							perJointKeyFrames[j][k] = frame;
						}
					}
					
					skeleton.animations.put(name, new SkeletonAnimation(name, totalDuration, perJointKeyFrames));
				}
			}
			skeleton.buildFromHierarchy();

			SkeletonModel model = new SkeletonModel(skeleton, meshes);
			model.setMaterial(new Material("default"));
			return model;
		} catch (IOException e) {
			throw new GdxRuntimeException("Couldn't load skeleton model from '" + handle.name() + "', " + e.getMessage(), e);
		} finally {
			if (in != null) try {
				in.close();
			} catch (IOException e) {
			}
		}
	} ##FSTMerge## public static SkeletonModel loadSkeletonModel (FileHandle handle) {
		Chunk root = null;
		InputStream in = null;
		try {
			in = handle.read();
			root = ChunkReader.readChunks(in);

			// check root tag
			if (root.getId() != G3dConstants.G3D_ROOT) throw new GdxRuntimeException("Invalid root tag id: " + root.getId());

			// check version
			Chunk version = root.getChild(G3dConstants.VERSION_INFO);
			if (version == null) throw new GdxRuntimeException("No version chunk found");
			int major = version.readByte();
			int minor = version.readByte();
			if (major != 0 || minor != 1)
				throw new GdxRuntimeException("Invalid version, required 0.1, got " + major + "." + minor);

			// read skeleton model
			Chunk skeletonModel = root.getChild(G3dConstants.SKELETON_MODEL);
			if (skeletonModel == null) throw new GdxRuntimeException("No skeletonModel chunk found");
			int numSubMeshes = skeletonModel.readInt();

			// read submeshes
			SkeletonSubMesh[] meshes = new SkeletonSubMesh[numSubMeshes];
			Chunk[] meshChunks = skeletonModel.getChildren(G3dConstants.SKELETON_SUBMESH);
			if (meshChunks.length != numSubMeshes)
				throw new GdxRuntimeException("Number of submeshes not equal to number specified in still model chunk, expected "
					+ numSubMeshes + ", got " + meshChunks.length);
			for (int i = 0; i < numSubMeshes; i++) {
				Chunk subMeshChunk = meshChunks[i];
				
				// read attributes
				Chunk attributes = subMeshChunk.getChild(G3dConstants.VERTEX_ATTRIBUTES);
				if (attributes == null) throw new GdxRuntimeException("No vertex attribute chunk given");
				int numAttributes = attributes.readInt();
				Chunk[] attributeChunks = attributes.getChildren(G3dConstants.VERTEX_ATTRIBUTE);
				if (attributeChunks.length != numAttributes)
					new GdxRuntimeException("Number of attributes not equal to number specified in attributes chunk, expected "
						+ numAttributes + ", got " + attributeChunks.length);
				VertexAttribute[] vertAttribs = new VertexAttribute[numAttributes];
				for (int j = 0; j < numAttributes; j++) {
					vertAttribs[j] = new VertexAttribute(attributeChunks[j].readInt(), attributeChunks[j].readInt(),
						attributeChunks[j].readString());
				}

				// read static components, sort of like a bind pose mesh
				Chunk vertices = subMeshChunk.getChild(G3dConstants.VERTEX_LIST);
				int numVertices = vertices.readInt();
				float[] meshVertices = vertices.readFloats();

				// read indices
				Chunk indices = subMeshChunk.getChild(G3dConstants.INDEX_LIST);
				int numIndices = indices.readInt();
				short[] meshIndices = indices.readShorts();
				
				//read bone weight
				Chunk boneWeights = subMeshChunk.getChild(G3dConstants.BONE_WEIGHTS);
				int numBonesWeights = boneWeights.readInt();
				Chunk[] boneWeightChunks = boneWeights.getChildren(G3dConstants.BONE_WEIGHT);
				if (attributeChunks.length != numAttributes)
					new GdxRuntimeException("Number of bone weights not equal to number specified in bone weights chunk, expected "
						+ numBonesWeights + ", got " + boneWeightChunks.length);
				float[][] meshBoneWeights = new float[numBonesWeights][];
				for(int j=0;j<numBonesWeights;j++) {
					int count = boneWeightChunks[j].readInt();
					meshBoneWeights[j] = boneWeightChunks[j].readFloats();
				}

				//read bone assignment
				Chunk boneAssignments = subMeshChunk.getChild(G3dConstants.BONE_ASSIGNMENTS);
				int numBoneAssignments = boneAssignments.readInt();
				Chunk[] boneAssignmentChunks = boneAssignments.getChildren(G3dConstants.BONE_ASSIGNMENT);
				if (boneAssignmentChunks.length != numBoneAssignments)
					new GdxRuntimeException("Number of bone assignment not equal to number specified in bone assignment chunk, expected "
						+ numBoneAssignments + ", got " + boneAssignmentChunks.length);
				int[][] meshBoneAssignments = new int[numBoneAssignments][];
				for(int j=0;j<numBoneAssignments;j++) {
					int count = boneAssignmentChunks[j].readInt();
					meshBoneAssignments[j] = boneAssignmentChunks[j].readInts();
				}
				
				SkeletonSubMesh subMesh = new SkeletonSubMesh(subMeshChunk.readString(), new Mesh(false, numVertices, numIndices, vertAttribs),
					subMeshChunk.readInt());
				
				subMesh.indices = meshIndices;
				subMesh.boneAssignments = meshBoneAssignments;
				subMesh.boneWeights = meshBoneWeights;
				subMesh.vertices = meshVertices;
				
				subMesh.mesh.setVertices(subMesh.vertices);
				subMesh.mesh.setIndices(subMesh.indices);
				subMesh.skinnedVertices = new float[subMesh.vertices.length];
				System.arraycopy(subMesh.vertices, 0, subMesh.skinnedVertices, 0, subMesh.vertices.length);
				meshes[i] = subMesh;
			}
			
			//read Skeleton hierarchy
			Skeleton skeleton = new Skeleton();
			Chunk skeletonChunk = skeletonModel.getChild(G3dConstants.SKELETON);
			{
				// read Skeleton hierarchy
				Chunk hierarchy = skeletonChunk.getChild(G3dConstants.SKELETON_HIERARCHY);
				int numHierarchyJoints = hierarchy.readInt();
				for(int i=0;i<numHierarchyJoints;i++) {
					skeleton.hierarchy.add(readSkeletonJoint(hierarchy));
				}
				
				
				// read Skeleton animations
				Chunk animations = skeletonChunk.getChild(G3dConstants.SKELETON_ANIMATIONS);
				int numAnimations = animations.readInt();
				Chunk[] animationChunks = animations.getChildren(G3dConstants.SKELETON_ANIMATION);
				if (animationChunks.length != numAnimations)
					new GdxRuntimeException("Number of animations not equal to number specified in animations chunk, expected "
						+ numAnimations + ", got " + animationChunks.length);
				for(int i=0;i<numAnimations; i++) {
					Chunk animation = animationChunks[i];

					String name = animation.readString();
					float totalDuration = animation.readFloat();
					
					int numJoints = animation.readInt();
					SkeletonKeyframe perJointKeyFrames[][] = new SkeletonKeyframe[numJoints][];
					for(int j=0;j<numJoints;j++){
						int numFrames = animation.readInt();
						perJointKeyFrames[j] = new SkeletonKeyframe[numFrames];
						
						for(int k=0;k<numFrames;k++){
							SkeletonKeyframe frame = new SkeletonKeyframe();

							frame.timeStamp = animation.readFloat();
							frame.parentIndex = animation.readInt();
							frame.position.x = animation.readFloat();
							frame.position.y = animation.readFloat();
							frame.position.z = animation.readFloat();
							frame.rotation.w = animation.readFloat();
							frame.rotation.x = animation.readFloat();
							frame.rotation.y = animation.readFloat();
							frame.rotation.z = animation.readFloat();
							frame.scale.x = animation.readFloat();
							frame.scale.y = animation.readFloat();
							frame.scale.z = animation.readFloat();
							perJointKeyFrames[j][k] = frame;
						}
					}
					
					skeleton.animations.put(name, new SkeletonAnimation(name, totalDuration, perJointKeyFrames));
				}
			}
			skeleton.buildFromHierarchy();

			SkeletonModel model = new SkeletonModel(skeleton, meshes);
			model.setMaterial(new Material("default"));
			return model;
		} catch (IOException e) {
			throw new GdxRuntimeException("Couldn't load skeleton model from '" + handle.name() + "', " + e.getMessage(), e);
		} finally {
			if (in != null) try {
				in.close();
			} catch (IOException e) {
			}
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static SkeletonJoint readSkeletonJoint(Chunk jointChunk) {
		SkeletonJoint joint = new SkeletonJoint();
		
		joint.name = jointChunk.readString();
		joint.position.x = jointChunk.readFloat();
		joint.position.y = jointChunk.readFloat();
		joint.position.z = jointChunk.readFloat();
		joint.rotation.w = jointChunk.readFloat();
		joint.rotation.x = jointChunk.readFloat();
		joint.rotation.y = jointChunk.readFloat();
		joint.rotation.z = jointChunk.readFloat();
		joint.scale.x = jointChunk.readFloat();
		joint.scale.y = jointChunk.readFloat();
		joint.scale.z = jointChunk.readFloat();
		
		int count = jointChunk.readInt();
		for(int i=0;i<count;i++) {
			SkeletonJoint child = readSkeletonJoint(jointChunk);
			child.parent = joint;
			joint.children.add(child);
		}
		
		return joint;
	} ##FSTMerge## private static SkeletonJoint readSkeletonJoint(Chunk jointChunk) {
		SkeletonJoint joint = new SkeletonJoint();
		
		joint.name = jointChunk.readString();
		joint.position.x = jointChunk.readFloat();
		joint.position.y = jointChunk.readFloat();
		joint.position.z = jointChunk.readFloat();
		joint.rotation.w = jointChunk.readFloat();
		joint.rotation.x = jointChunk.readFloat();
		joint.rotation.y = jointChunk.readFloat();
		joint.rotation.z = jointChunk.readFloat();
		joint.scale.x = jointChunk.readFloat();
		joint.scale.y = jointChunk.readFloat();
		joint.scale.z = jointChunk.readFloat();
		
		int count = jointChunk.readInt();
		for(int i=0;i<count;i++) {
			SkeletonJoint child = readSkeletonJoint(jointChunk);
			child.parent = joint;
			joint.children.add(child);
		}
		
		return joint;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dLoader.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static ##FSTMerge## public static
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dLoader.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements StillModelLoader ##FSTMerge## implements StillModelLoader
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
		public StillModel load (FileHandle handle, ModelLoaderHints hints) {
			return G3dLoader.loadStillModel(handle);
		} ##FSTMerge## @Override
		public StillModel load (FileHandle handle, ModelLoaderHints hints) {
			return G3dLoader.loadStillModel(handle);
		}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dLoader.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static ##FSTMerge## public static
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dLoader.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements KeyframedModelLoader ##FSTMerge## implements KeyframedModelLoader
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
		public KeyframedModel load (FileHandle handle, ModelLoaderHints hints) {
			return G3dLoader.loadKeyframedModel(handle);
		} ##FSTMerge## @Override
		public KeyframedModel load (FileHandle handle, ModelLoaderHints hints) {
			return G3dLoader.loadKeyframedModel(handle);
		}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dLoader.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static ##FSTMerge## public static
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dLoader.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements SkeletonModelLoader ##FSTMerge## implements SkeletonModelLoader
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dLoader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
		public SkeletonModel load (FileHandle handle, ModelLoaderHints hints) {
			return G3dLoader.loadSkeletonModel(handle);
		} ##FSTMerge## @Override
		public SkeletonModel load (FileHandle handle, ModelLoaderHints hints) {
			return G3dLoader.loadSkeletonModel(handle);
		}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dLoader.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final byte MAJOR_VERSION = 0; ##FSTMerge## public static final byte MAJOR_VERSION = 0;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final byte MINOR_VERSION = 1; ##FSTMerge## public static final byte MINOR_VERSION = 1;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final int G3D_ROOT = 0x4733441A; ##FSTMerge## public static final int G3D_ROOT = 0x4733441A;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final int VERSION_INFO = 0x0001; ##FSTMerge## public static final int VERSION_INFO = 0x0001;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final int STILL_MODEL = 0x1000; ##FSTMerge## public static final int STILL_MODEL = 0x1000;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final int STILL_SUBMESH = 0x1100; ##FSTMerge## public static final int STILL_SUBMESH = 0x1100;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final int KEYFRAMED_MODEL = 0x2000; ##FSTMerge## public static final int KEYFRAMED_MODEL = 0x2000;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final int KEYFRAMED_SUBMESH = 0x2200; ##FSTMerge## public static final int KEYFRAMED_SUBMESH = 0x2200;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final int KEYFRAMED_ANIMATION = 0x2300; ##FSTMerge## public static final int KEYFRAMED_ANIMATION = 0x2300;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final int KEYFRAMED_FRAME = 0x2400; ##FSTMerge## public static final int KEYFRAMED_FRAME = 0x2400;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final int SKELETON_MODEL = 0x4000; ##FSTMerge## public static final int SKELETON_MODEL = 0x4000;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final int SKELETON_SUBMESH = 0x4200; ##FSTMerge## public static final int SKELETON_SUBMESH = 0x4200;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final int SKELETON_ANIMATIONS = 0x4300; ##FSTMerge## public static final int SKELETON_ANIMATIONS = 0x4300;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final int SKELETON_ANIMATION = 0x4400; ##FSTMerge## public static final int SKELETON_ANIMATION = 0x4400;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final int SKELETON = 0x4500; ##FSTMerge## public static final int SKELETON = 0x4500;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final int SKELETON_HIERARCHY = 0x4600; ##FSTMerge## public static final int SKELETON_HIERARCHY = 0x4600;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final int SKELETON_JOINT = 0x4700; ##FSTMerge## public static final int SKELETON_JOINT = 0x4700;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final int SKELETON_KEYFRAME = 0x4800; ##FSTMerge## public static final int SKELETON_KEYFRAME = 0x4800;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final int VERTEX_LIST = 0x1110; ##FSTMerge## public static final int VERTEX_LIST = 0x1110;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final int INDEX_LIST = 0x1111; ##FSTMerge## public static final int INDEX_LIST = 0x1111;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final int VERTEX_ATTRIBUTES = 0x1120; ##FSTMerge## public static final int VERTEX_ATTRIBUTES = 0x1120;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final int VERTEX_ATTRIBUTE = 0x1121; ##FSTMerge## public static final int VERTEX_ATTRIBUTE = 0x1121;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final int BONE_WEIGHTS = 0x1130; ##FSTMerge## public static final int BONE_WEIGHTS = 0x1130;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final int BONE_WEIGHT = 0x1131; ##FSTMerge## public static final int BONE_WEIGHT = 0x1131;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final int BONE_ASSIGNMENTS = 0x1140; ##FSTMerge## public static final int BONE_ASSIGNMENTS = 0x1140;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static final int BONE_ASSIGNMENT = 0x1141; ##FSTMerge## public static final int BONE_ASSIGNMENT = 0x1141;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/G3dConstants.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/CountingDataInputStream.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements DataInput ##FSTMerge## implements DataInput
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/CountingDataInputStream.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## int readBytes = 0; ##FSTMerge## int readBytes = 0;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/CountingDataInputStream.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## DataInputStream in; ##FSTMerge## DataInputStream in;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/CountingDataInputStream.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public CountingDataInputStream (InputStream in) {
		this.in = new DataInputStream(in);
	} ##FSTMerge## public CountingDataInputStream (InputStream in) {
		this.in = new DataInputStream(in);
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/CountingDataInputStream.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int getReadBytes () {
		return readBytes;
	} ##FSTMerge## public int getReadBytes () {
		return readBytes;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/CountingDataInputStream.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void readFully (byte[] b) throws IOException {
		readBytes += b.length;
		in.readFully(b);
	} ##FSTMerge## @Override
	public void readFully (byte[] b) throws IOException {
		readBytes += b.length;
		in.readFully(b);
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/CountingDataInputStream.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public void readFully (byte[] b, int off, int len) throws IOException {
		readBytes += len;
		in.readFully(b, off, len);
	} ##FSTMerge## @Override
	public void readFully (byte[] b, int off, int len) throws IOException {
		readBytes += len;
		in.readFully(b, off, len);
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/CountingDataInputStream.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public int skipBytes (int n) throws IOException {
		int skipped = in.skipBytes(n);
		readBytes += skipped;
		return skipped;
	} ##FSTMerge## @Override
	public int skipBytes (int n) throws IOException {
		int skipped = in.skipBytes(n);
		readBytes += skipped;
		return skipped;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/CountingDataInputStream.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public boolean readBoolean () throws IOException {
		readBytes += 1;
		return in.readBoolean();
	} ##FSTMerge## @Override
	public boolean readBoolean () throws IOException {
		readBytes += 1;
		return in.readBoolean();
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/CountingDataInputStream.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public byte readByte () throws IOException {
		readBytes += 1;
		return in.readByte();
	} ##FSTMerge## @Override
	public byte readByte () throws IOException {
		readBytes += 1;
		return in.readByte();
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/CountingDataInputStream.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public int readUnsignedByte () throws IOException {
		readBytes += 1;
		return in.readUnsignedByte();
	} ##FSTMerge## @Override
	public int readUnsignedByte () throws IOException {
		readBytes += 1;
		return in.readUnsignedByte();
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/CountingDataInputStream.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public short readShort () throws IOException {
		readBytes += 2;
		return in.readShort();
	} ##FSTMerge## @Override
	public short readShort () throws IOException {
		readBytes += 2;
		return in.readShort();
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/CountingDataInputStream.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public int readUnsignedShort () throws IOException {
		readBytes += 2;
		return in.readUnsignedShort();
	} ##FSTMerge## @Override
	public int readUnsignedShort () throws IOException {
		readBytes += 2;
		return in.readUnsignedShort();
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/CountingDataInputStream.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public char readChar () throws IOException {
		readBytes += 2;
		return in.readChar();
	} ##FSTMerge## @Override
	public char readChar () throws IOException {
		readBytes += 2;
		return in.readChar();
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/CountingDataInputStream.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public int readInt () throws IOException {
		readBytes += 4;
		return in.readInt();
	} ##FSTMerge## @Override
	public int readInt () throws IOException {
		readBytes += 4;
		return in.readInt();
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/CountingDataInputStream.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public long readLong () throws IOException {
		readBytes += 8;
		return in.readLong();
	} ##FSTMerge## @Override
	public long readLong () throws IOException {
		readBytes += 8;
		return in.readLong();
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/CountingDataInputStream.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public float readFloat () throws IOException {
		readBytes += 4;
		return in.readFloat();
	} ##FSTMerge## @Override
	public float readFloat () throws IOException {
		readBytes += 4;
		return in.readFloat();
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/CountingDataInputStream.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public double readDouble () throws IOException {
		readBytes += 8;
		return in.readDouble();
	} ##FSTMerge## @Override
	public double readDouble () throws IOException {
		readBytes += 8;
		return in.readDouble();
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/CountingDataInputStream.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public String readLine () throws IOException {
		throw new UnsupportedOperationException("Not implemented");
	} ##FSTMerge## @Override
	public String readLine () throws IOException {
		throw new UnsupportedOperationException("Not implemented");
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/CountingDataInputStream.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## @Override
	public String readUTF () throws IOException {
		throw new UnsupportedOperationException("Not implemented");
	} ##FSTMerge## @Override
	public String readUTF () throws IOException {
		throw new UnsupportedOperationException("Not implemented");
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/CountingDataInputStream.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final int id; ##FSTMerge## final int id;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final Chunk parent; ##FSTMerge## final Chunk parent;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final Array<Chunk> children = new Array<Chunk>(); ##FSTMerge## final Array<Chunk> children = new Array<Chunk>();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final ByteArrayOutputStream payload = new ByteArrayOutputStream(); ##FSTMerge## final ByteArrayOutputStream payload = new ByteArrayOutputStream();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final DataOutputStream out = new DataOutputStream(payload); ##FSTMerge## final DataOutputStream out = new DataOutputStream(payload);
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Chunk (int id) {
			this.id = id;
			this.parent = null;
		} ##FSTMerge## public Chunk (int id) {
			this.id = id;
			this.parent = null;
		}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Chunk (int id, Chunk parent) {
			this.id = id;
			this.parent = parent;
		} ##FSTMerge## public Chunk (int id, Chunk parent) {
			this.id = id;
			this.parent = parent;
		}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final Chunk root; ##FSTMerge## final Chunk root;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## Chunk currChunk; ##FSTMerge## Chunk currChunk;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ChunkWriter () {
		root = new Chunk(G3D_ROOT);
		currChunk = root;
	} ##FSTMerge## public ChunkWriter () {
		root = new Chunk(G3D_ROOT);
		currChunk = root;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void newChunk (int id) {
		Chunk chunk = new Chunk(id, currChunk);
		currChunk.children.add(chunk);
		currChunk = chunk;
	} ##FSTMerge## public void newChunk (int id) {
		Chunk chunk = new Chunk(id, currChunk);
		currChunk.children.add(chunk);
		currChunk = chunk;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void endChunk () {
		currChunk = currChunk.parent;
	} ##FSTMerge## public void endChunk () {
		currChunk = currChunk.parent;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void writeByte (int v) {
		try {
			currChunk.out.writeByte(v);
		} catch (IOException e) {
		}
		;
	} ##FSTMerge## public void writeByte (int v) {
		try {
			currChunk.out.writeByte(v);
		} catch (IOException e) {
		}
		;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void writeShort (short v) {
		try {
			currChunk.out.writeShort(v);
		} catch (IOException e) {
		}
		;
	} ##FSTMerge## public void writeShort (short v) {
		try {
			currChunk.out.writeShort(v);
		} catch (IOException e) {
		}
		;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void writeInt (int v) {
		try {
			currChunk.out.writeInt(v);
		} catch (IOException e) {
		}
		;
	} ##FSTMerge## public void writeInt (int v) {
		try {
			currChunk.out.writeInt(v);
		} catch (IOException e) {
		}
		;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void writeLong (long v) {
		try {
			currChunk.out.writeLong(v);
		} catch (IOException e) {
		}
		;
	} ##FSTMerge## public void writeLong (long v) {
		try {
			currChunk.out.writeLong(v);
		} catch (IOException e) {
		}
		;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void writeFloat (float v) {
		try {
			currChunk.out.writeFloat(v);
		} catch (IOException e) {
		}
		;
	} ##FSTMerge## public void writeFloat (float v) {
		try {
			currChunk.out.writeFloat(v);
		} catch (IOException e) {
		}
		;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void writeDouble (double v) {
		try {
			currChunk.out.writeDouble(v);
		} catch (IOException e) {
		}
		;
	} ##FSTMerge## public void writeDouble (double v) {
		try {
			currChunk.out.writeDouble(v);
		} catch (IOException e) {
		}
		;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void writeString (String v) {
		try {
			byte[] bytes = v.getBytes("UTF-8");
			currChunk.out.writeInt(bytes.length);
			currChunk.out.write(bytes);
		} catch (IOException e) {
		}
	} ##FSTMerge## public void writeString (String v) {
		try {
			byte[] bytes = v.getBytes("UTF-8");
			currChunk.out.writeInt(bytes.length);
			currChunk.out.write(bytes);
		} catch (IOException e) {
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void writeToStream (OutputStream out) throws IOException {
		writeToStream(root, new DataOutputStream(out));
	} ##FSTMerge## public void writeToStream (OutputStream out) throws IOException {
		writeToStream(root, new DataOutputStream(out));
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void writeToStream (Chunk chunk, DataOutputStream out) throws IOException {
		// write id, payload size in bytes and number of children
		out.writeInt(chunk.id);
		out.writeInt(chunk.payload.size());
		out.writeInt(chunk.children.size);

		// write payload
		out.write(chunk.payload.toByteArray());

		// recursively write children
		for (int i = 0; i < chunk.children.size; i++) {
			Chunk child = chunk.children.get(i);
			writeToStream(child, out);
		}
	} ##FSTMerge## private void writeToStream (Chunk chunk, DataOutputStream out) throws IOException {
		// write id, payload size in bytes and number of children
		out.writeInt(chunk.id);
		out.writeInt(chunk.payload.size());
		out.writeInt(chunk.children.size);

		// write payload
		out.write(chunk.payload.toByteArray());

		// recursively write children
		for (int i = 0; i < chunk.children.size; i++) {
			Chunk child = chunk.children.get(i);
			writeToStream(child, out);
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void writeBytes (byte[] v) {
		try {
			currChunk.out.writeInt(v.length);
			for (int i = 0; i < v.length; i++) {
				currChunk.out.writeByte(v[i]);
			}
		} catch (IOException e) {
		}
	} ##FSTMerge## public void writeBytes (byte[] v) {
		try {
			currChunk.out.writeInt(v.length);
			for (int i = 0; i < v.length; i++) {
				currChunk.out.writeByte(v[i]);
			}
		} catch (IOException e) {
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void writeShorts (short[] v) {
		try {
			currChunk.out.writeInt(v.length);
			for (int i = 0; i < v.length; i++) {
				currChunk.out.writeShort(v[i]);
			}
		} catch (IOException e) {
		}
	} ##FSTMerge## public void writeShorts (short[] v) {
		try {
			currChunk.out.writeInt(v.length);
			for (int i = 0; i < v.length; i++) {
				currChunk.out.writeShort(v[i]);
			}
		} catch (IOException e) {
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void writeInts (int[] v) {
		try {
			currChunk.out.writeInt(v.length);
			for (int i = 0; i < v.length; i++) {
				currChunk.out.writeInt(v[i]);
			}
		} catch (IOException e) {
		}
	} ##FSTMerge## public void writeInts (int[] v) {
		try {
			currChunk.out.writeInt(v.length);
			for (int i = 0; i < v.length; i++) {
				currChunk.out.writeInt(v[i]);
			}
		} catch (IOException e) {
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void writeLongs (long[] v) {
		try {
			currChunk.out.writeInt(v.length);
			for (int i = 0; i < v.length; i++) {
				currChunk.out.writeLong(v[i]);
			}
		} catch (IOException e) {
		}
	} ##FSTMerge## public void writeLongs (long[] v) {
		try {
			currChunk.out.writeInt(v.length);
			for (int i = 0; i < v.length; i++) {
				currChunk.out.writeLong(v[i]);
			}
		} catch (IOException e) {
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void writeFloats (float[] v) {
		try {
			currChunk.out.writeInt(v.length);
			for (int i = 0; i < v.length; i++) {
				currChunk.out.writeFloat(v[i]);
			}
		} catch (IOException e) {
		}
	} ##FSTMerge## public void writeFloats (float[] v) {
		try {
			currChunk.out.writeInt(v.length);
			for (int i = 0; i < v.length; i++) {
				currChunk.out.writeFloat(v[i]);
			}
		} catch (IOException e) {
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void writeDoubles (double[] v) {
		try {
			currChunk.out.writeInt(v.length);
			for (int i = 0; i < v.length; i++) {
				currChunk.out.writeDouble(v[i]);
			}
		} catch (IOException e) {
		}
	} ##FSTMerge## public void writeDoubles (double[] v) {
		try {
			currChunk.out.writeInt(v.length);
			for (int i = 0; i < v.length; i++) {
				currChunk.out.writeDouble(v[i]);
			}
		} catch (IOException e) {
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkWriter.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static ##FSTMerge## public static
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## int id; ##FSTMerge## int id;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## Chunk parent; ##FSTMerge## Chunk parent;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## Array<Chunk> children = new Array<Chunk>(); ##FSTMerge## Array<Chunk> children = new Array<Chunk>();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## ByteArrayInputStream payload; ##FSTMerge## ByteArrayInputStream payload;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## byte[] payloadBytes; ##FSTMerge## byte[] payloadBytes;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## int offset = 0; ##FSTMerge## int offset = 0;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## CountingDataInputStream in; ##FSTMerge## CountingDataInputStream in;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## protected Chunk (int id, Chunk parent, byte[] bytes, int offset, int size) throws IOException {
			this.id = id;
			this.parent = parent;
			this.payload = new ByteArrayInputStream(bytes, offset, size);
			this.payloadBytes = bytes;
			this.offset = offset;
			this.in = new CountingDataInputStream(payload);
		} ##FSTMerge## protected Chunk (int id, Chunk parent, byte[] bytes, int offset, int size) throws IOException {
			this.id = id;
			this.parent = parent;
			this.payload = new ByteArrayInputStream(bytes, offset, size);
			this.payloadBytes = bytes;
			this.offset = offset;
			this.in = new CountingDataInputStream(payload);
		}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int getId () {
			return id;
		} ##FSTMerge## public int getId () {
			return id;
		}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Chunk getParent () {
			return parent;
		} ##FSTMerge## public Chunk getParent () {
			return parent;
		}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Array<Chunk> getChildren () {
			return children;
		} ##FSTMerge## public Array<Chunk> getChildren () {
			return children;
		}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int readByte () {
			try {
				return in.readByte();
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		} ##FSTMerge## public int readByte () {
			try {
				return in.readByte();
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public short readShort () {
			try {
				return in.readShort();
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		} ##FSTMerge## public short readShort () {
			try {
				return in.readShort();
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int readInt () {
			try {
				return in.readInt();
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		} ##FSTMerge## public int readInt () {
			try {
				return in.readInt();
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public long readLong () {
			try {
				return in.readLong();
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		} ##FSTMerge## public long readLong () {
			try {
				return in.readLong();
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public float readFloat () {
			try {
				return in.readFloat();
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		} ##FSTMerge## public float readFloat () {
			try {
				return in.readFloat();
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public double readDouble () {
			try {
				return in.readDouble();
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		} ##FSTMerge## public double readDouble () {
			try {
				return in.readDouble();
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public byte[] readBytes () {
			try {
				int len = in.readInt();
				byte[] v = new byte[len];
				for (int i = 0; i < len; i++) {
					v[i] = in.readByte();
				}
				return v;
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		} ##FSTMerge## public byte[] readBytes () {
			try {
				int len = in.readInt();
				byte[] v = new byte[len];
				for (int i = 0; i < len; i++) {
					v[i] = in.readByte();
				}
				return v;
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public short[] readShorts () {
			try {
				int len = in.readInt();
				short[] v = new short[len];
				for (int i = 0; i < len; i++) {
					v[i] = in.readShort();
				}
				return v;
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		} ##FSTMerge## public short[] readShorts () {
			try {
				int len = in.readInt();
				short[] v = new short[len];
				for (int i = 0; i < len; i++) {
					v[i] = in.readShort();
				}
				return v;
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public int[] readInts () {
			try {
				int len = in.readInt();
				int[] v = new int[len];
				for (int i = 0; i < len; i++) {
					v[i] = in.readInt();
				}
				return v;
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		} ##FSTMerge## public int[] readInts () {
			try {
				int len = in.readInt();
				int[] v = new int[len];
				for (int i = 0; i < len; i++) {
					v[i] = in.readInt();
				}
				return v;
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public long[] readLongs () {
			try {
				int len = in.readInt();
				long[] v = new long[len];
				for (int i = 0; i < len; i++) {
					v[i] = in.readLong();
				}
				return v;
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		} ##FSTMerge## public long[] readLongs () {
			try {
				int len = in.readInt();
				long[] v = new long[len];
				for (int i = 0; i < len; i++) {
					v[i] = in.readLong();
				}
				return v;
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public float[] readFloats () {
			try {
				int len = in.readInt();
				float[] v = new float[len];
				for (int i = 0; i < len; i++) {
					v[i] = in.readFloat();
				}
				return v;
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		} ##FSTMerge## public float[] readFloats () {
			try {
				int len = in.readInt();
				float[] v = new float[len];
				for (int i = 0; i < len; i++) {
					v[i] = in.readFloat();
				}
				return v;
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public double[] readDoubles () {
			try {
				int len = in.readInt();
				double[] v = new double[len];
				for (int i = 0; i < len; i++) {
					v[i] = in.readDouble();
				}
				return v;
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		} ##FSTMerge## public double[] readDoubles () {
			try {
				int len = in.readInt();
				double[] v = new double[len];
				for (int i = 0; i < len; i++) {
					v[i] = in.readDouble();
				}
				return v;
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public String readString () {
			try {
				int len = in.readInt();
				byte[] bytes = new byte[len];
				in.readFully(bytes);
				return new String(bytes, "UTF-8");
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		} ##FSTMerge## public String readString () {
			try {
				int len = in.readInt();
				byte[] bytes = new byte[len];
				in.readFully(bytes);
				return new String(bytes, "UTF-8");
			} catch (IOException e) {
				throw new GdxRuntimeException("Couldn't read payload, " + e.getMessage(), e);
			}
		}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Chunk getChild (int id) {
			for (int i = 0; i < children.size; i++) {
				Chunk child = children.get(i);
				if (child.getId() == id) return child;
			}
			return null;
		} ##FSTMerge## public Chunk getChild (int id) {
			for (int i = 0; i < children.size; i++) {
				Chunk child = children.get(i);
				if (child.getId() == id) return child;
			}
			return null;
		}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public Chunk[] getChildren (int id) {
			Array<Chunk> meshes = new Array<Chunk>(true, 16, Chunk.class);
			for (int i = 0; i < children.size; i++) {
				Chunk child = children.get(i);
				if (child.getId() == id) meshes.add(child);
			}
			meshes.shrink();
			return meshes.items;
		} ##FSTMerge## public Chunk[] getChildren (int id) {
			Array<Chunk> meshes = new Array<Chunk>(true, 16, Chunk.class);
			for (int i = 0; i < children.size; i++) {
				Chunk child = children.get(i);
				if (child.getId() == id) meshes.add(child);
			}
			meshes.shrink();
			return meshes.items;
		}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static Chunk readChunks (InputStream in) throws IOException {
		return loadChunks(in, 0);
	} ##FSTMerge## public static Chunk readChunks (InputStream in) throws IOException {
		return loadChunks(in, 0);
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static Chunk loadChunks (InputStream in, int fileSize) throws IOException {
		byte[] bytes = readStream(in, fileSize);
		CountingDataInputStream din = new CountingDataInputStream(new ByteArrayInputStream(bytes));
		return loadChunk(din, bytes);
	} ##FSTMerge## private static Chunk loadChunks (InputStream in, int fileSize) throws IOException {
		byte[] bytes = readStream(in, fileSize);
		CountingDataInputStream din = new CountingDataInputStream(new ByteArrayInputStream(bytes));
		return loadChunk(din, bytes);
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static Chunk loadChunk (CountingDataInputStream din, byte[] bytes) throws IOException {
		int id = din.readInt();
		int payloadSize = din.readInt();
		int numChildren = din.readInt();
		int offset = din.getReadBytes();
		din.skipBytes(payloadSize);
		Chunk chunk = new Chunk(id, null, bytes, offset, payloadSize);
		for (int i = 0; i < numChildren; i++) {
			Chunk child = loadChunk(din, bytes);
			child.parent = chunk;
			chunk.children.add(child);
		}
		return chunk;
	} ##FSTMerge## private static Chunk loadChunk (CountingDataInputStream din, byte[] bytes) throws IOException {
		int id = din.readInt();
		int payloadSize = din.readInt();
		int numChildren = din.readInt();
		int offset = din.getReadBytes();
		din.skipBytes(payloadSize);
		Chunk chunk = new Chunk(id, null, bytes, offset, payloadSize);
		for (int i = 0; i < numChildren; i++) {
			Chunk child = loadChunk(din, bytes);
			child.parent = chunk;
			chunk.children.add(child);
		}
		return chunk;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static byte[] readStream (InputStream in, int size) throws IOException {
		if (size == 0) {
			ByteArrayOutputStream bytes = new ByteArrayOutputStream();
			byte[] buffer = new byte[10 * 1024];
			int readBytes = 0;
			while ((readBytes = in.read(buffer)) != -1) {
				bytes.write(buffer, 0, readBytes);
			}
			return bytes.toByteArray();
		} else {
			byte[] bytes = new byte[size];
			DataInputStream din = new DataInputStream(in);
			din.readFully(bytes);
			return bytes;
		}
	} ##FSTMerge## private static byte[] readStream (InputStream in, int size) throws IOException {
		if (size == 0) {
			ByteArrayOutputStream bytes = new ByteArrayOutputStream();
			byte[] buffer = new byte[10 * 1024];
			int readBytes = 0;
			while ((readBytes = in.read(buffer)) != -1) {
				bytes.write(buffer, 0, readBytes);
			}
			return bytes.toByteArray();
		} else {
			byte[] bytes = new byte[size];
			DataInputStream din = new DataInputStream(in);
			din.readFully(bytes);
			return bytes;
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public static void printChunks (Chunk chunk) {
		printChunks(chunk, 0);
	} ##FSTMerge## public static void printChunks (Chunk chunk) {
		printChunks(chunk, 0);
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static void printChunks (Chunk chunk, int level) {
		String id = null;
		String payload = null;
		switch (chunk.getId()) {
		case G3D_ROOT:
			id = "G3D_ROOT";
			break;
		case VERSION_INFO:
			id = "VERSION_INFO";
			int major = chunk.readByte();
			int minor = chunk.readByte();
			payload = rep("   ", level + 1) + "major: " + major + ", minor: " + minor;
			break;
		case STILL_MODEL:
			id = "STILL_MODEL";
			int subMeshes = chunk.readInt();
			payload = rep("   ", level + 1) + "#submeshes: " + subMeshes;
			break;
		case STILL_SUBMESH:
			id = "STILL_SUBMESH";
			payload = rep("   ", level + 1) + "name: " + chunk.readString() + ", primitive type: " + chunk.readInt();
			break;
		case VERTEX_ATTRIBUTE:
			id = "VERTEX_ATTRIBUTE";
			int usage = chunk.readInt();
			int components = chunk.readInt();
			String name = chunk.readString();
			payload = rep("   ", level + 1) + "usage: " + usage + ", components: " + components + ", name: " + name;
			break;
		case VERTEX_ATTRIBUTES:
			id = "VERTEX_ATTRIBUTES";
			int numAttributes = chunk.readInt();
			payload = rep("   ", level + 1) + "#attributes: " + numAttributes;
			break;
		case VERTEX_LIST:
			id = "VERTEX_LIST";
			int numVertices = chunk.readInt();
			float[] vertices = chunk.readFloats();
			payload = rep("   ", level + 1) + "#vertices: " + numVertices + ": " + Arrays.toString(vertices).substring(0, 400);
			break;
		case INDEX_LIST:
			id = "INDEX_LIST";
			int numIndices = chunk.readInt();
			short[] indices = chunk.readShorts();
			payload = rep("   ", level + 1) + "#indices: " + numIndices + ": " + Arrays.toString(indices).substring(0, 400);
			break;
		default:
			id = "unknown [" + id + "]";
			payload = rep("   ", level + 1) + "unknown";
			break;
		}

		System.out.println(rep("   ", level) + id + " {");
		if (payload != null) System.out.println(payload);
		for (Chunk child : chunk.getChildren()) {
			printChunks(child, level + 1);
		}
		System.out.println(rep("   ", level) + "}");
	} ##FSTMerge## private static void printChunks (Chunk chunk, int level) {
		String id = null;
		String payload = null;
		switch (chunk.getId()) {
		case G3D_ROOT:
			id = "G3D_ROOT";
			break;
		case VERSION_INFO:
			id = "VERSION_INFO";
			int major = chunk.readByte();
			int minor = chunk.readByte();
			payload = rep("   ", level + 1) + "major: " + major + ", minor: " + minor;
			break;
		case STILL_MODEL:
			id = "STILL_MODEL";
			int subMeshes = chunk.readInt();
			payload = rep("   ", level + 1) + "#submeshes: " + subMeshes;
			break;
		case STILL_SUBMESH:
			id = "STILL_SUBMESH";
			payload = rep("   ", level + 1) + "name: " + chunk.readString() + ", primitive type: " + chunk.readInt();
			break;
		case VERTEX_ATTRIBUTE:
			id = "VERTEX_ATTRIBUTE";
			int usage = chunk.readInt();
			int components = chunk.readInt();
			String name = chunk.readString();
			payload = rep("   ", level + 1) + "usage: " + usage + ", components: " + components + ", name: " + name;
			break;
		case VERTEX_ATTRIBUTES:
			id = "VERTEX_ATTRIBUTES";
			int numAttributes = chunk.readInt();
			payload = rep("   ", level + 1) + "#attributes: " + numAttributes;
			break;
		case VERTEX_LIST:
			id = "VERTEX_LIST";
			int numVertices = chunk.readInt();
			float[] vertices = chunk.readFloats();
			payload = rep("   ", level + 1) + "#vertices: " + numVertices + ": " + Arrays.toString(vertices).substring(0, 400);
			break;
		case INDEX_LIST:
			id = "INDEX_LIST";
			int numIndices = chunk.readInt();
			short[] indices = chunk.readShorts();
			payload = rep("   ", level + 1) + "#indices: " + numIndices + ": " + Arrays.toString(indices).substring(0, 400);
			break;
		default:
			id = "unknown [" + id + "]";
			payload = rep("   ", level + 1) + "unknown";
			break;
		}

		System.out.println(rep("   ", level) + id + " {");
		if (payload != null) System.out.println(payload);
		for (Chunk child : chunk.getChildren()) {
			printChunks(child, level + 1);
		}
		System.out.println(rep("   ", level) + "}");
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private static String rep (String c, int n) {
		StringBuffer buf = new StringBuffer();
		for (int i = 0; i < n; i++)
			buf.append(c);
		return buf.toString();
	} ##FSTMerge## private static String rep (String c, int n) {
		StringBuffer buf = new StringBuffer();
		for (int i = 0; i < n; i++)
			buf.append(c);
		return buf.toString();
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/gdx/src/com/badlogic/gdx/graphics/g3d/loaders/g3d/chunks/ChunkReader.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements Renderer ##FSTMerge## implements Renderer
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private SpriteBatch spriteBatch; ##FSTMerge## private SpriteBatch spriteBatch;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private StillModel shipMesh; ##FSTMerge## private StillModel shipMesh;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Texture shipTexture; ##FSTMerge## private Texture shipTexture;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private StillModel invaderMesh; ##FSTMerge## private StillModel invaderMesh;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Texture invaderTexture; ##FSTMerge## private Texture invaderTexture;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private StillModel blockMesh; ##FSTMerge## private StillModel blockMesh;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private StillModel shotMesh; ##FSTMerge## private StillModel shotMesh;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Texture backgroundTexture; ##FSTMerge## private Texture backgroundTexture;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Mesh explosionMesh; ##FSTMerge## private Mesh explosionMesh;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Texture explosionTexture; ##FSTMerge## private Texture explosionTexture;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private BitmapFont font; ##FSTMerge## private BitmapFont font;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private float invaderAngle = 0; ##FSTMerge## private float invaderAngle = 0;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private String status = ""; ##FSTMerge## private String status = "";
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private int lastScore = 0; ##FSTMerge## private int lastScore = 0;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private int lastLives = 0; ##FSTMerge## private int lastLives = 0;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private int lastWave = 0; ##FSTMerge## private int lastWave = 0;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final Matrix4 viewMatrix = new Matrix4(); ##FSTMerge## private final Matrix4 viewMatrix = new Matrix4();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final Matrix4 transform = new Matrix4(); ##FSTMerge## private final Matrix4 transform = new Matrix4();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final Matrix4 normal = new Matrix4(); ##FSTMerge## private final Matrix4 normal = new Matrix4();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final Matrix3 normal3 = new Matrix3(); ##FSTMerge## private final Matrix3 normal3 = new Matrix3();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private PerspectiveCamera camera; ##FSTMerge## private PerspectiveCamera camera;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## ShaderProgram texShader; ##FSTMerge## ShaderProgram texShader;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## ShaderProgram colorShader; ##FSTMerge## ShaderProgram colorShader;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## ShaderProgram lightTexShader; ##FSTMerge## ShaderProgram lightTexShader;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public RendererGL20 () {
		try {
			spriteBatch = new SpriteBatch();

			texShader = new ShaderProgram(Gdx.files.internal("data/shaders/tex-vs.glsl"),
				Gdx.files.internal("data/shaders/tex-fs.glsl"));
			colorShader = new ShaderProgram(Gdx.files.internal("data/shaders/color-vs.glsl"),
				Gdx.files.internal("data/shaders/color-fs.glsl"));
			lightTexShader = new ShaderProgram(Gdx.files.internal("data/shaders/light-tex-vs.glsl"),
				Gdx.files.internal("data/shaders/light-tex-fs.glsl"));

			if (!texShader.isCompiled()) throw new GdxRuntimeException("Couldn't compile tex shader");
			if (!colorShader.isCompiled()) throw new GdxRuntimeException("Couldn't compile color shader");
			if (!lightTexShader.isCompiled()) throw new GdxRuntimeException("Couldn't compile light/tex shader");

			shipMesh = ModelLoaderRegistry.loadStillModel(Gdx.files.internal("data/ship.obj"));
			invaderMesh = ModelLoaderRegistry.loadStillModel(Gdx.files.internal("data/invader.obj"));
			blockMesh = ModelLoaderRegistry.loadStillModel(Gdx.files.internal("data/block.obj"));
			shotMesh = ModelLoaderRegistry.loadStillModel(Gdx.files.internal("data/shot.obj"));

			shipTexture = new Texture(Gdx.files.internal("data/ship.png"), Format.RGB565, true);
			shipTexture.setFilter(TextureFilter.MipMap, TextureFilter.Linear);
			invaderTexture = new Texture(Gdx.files.internal("data/invader.png"), Format.RGB565, true);
			invaderTexture.setFilter(TextureFilter.MipMap, TextureFilter.Linear);
			backgroundTexture = new Texture(Gdx.files.internal("data/planet.jpg"), Format.RGB565, true);
			backgroundTexture.setFilter(TextureFilter.MipMap, TextureFilter.Linear);
			explosionTexture = new Texture(Gdx.files.internal("data/explode.png"), Format.RGBA4444, true);
			explosionTexture.setFilter(TextureFilter.MipMap, TextureFilter.Linear);

			explosionMesh = new Mesh(true, 4 * 16, 0, new VertexAttribute(Usage.Position, 3, "a_position"), new VertexAttribute(
				Usage.TextureCoordinates, 2, "a_texCoord0"));

			float[] vertices = new float[4 * 16 * (3 + 2)];
			int idx = 0;
			for (int row = 0; row < 4; row++) {
				for (int column = 0; column < 4; column++) {
					vertices[idx++] = 1;
					vertices[idx++] = 1;
					vertices[idx++] = 0;
					vertices[idx++] = 0.25f + column * 0.25f;
					vertices[idx++] = 0 + row * 0.25f;

					vertices[idx++] = -1;
					vertices[idx++] = 1;
					vertices[idx++] = 0;
					vertices[idx++] = 0 + column * 0.25f;
					vertices[idx++] = 0 + row * 0.25f;

					vertices[idx++] = -1;
					vertices[idx++] = -1;
					vertices[idx++] = 0;
					vertices[idx++] = 0f + column * 0.25f;
					vertices[idx++] = 0.25f + row * 0.25f;

					vertices[idx++] = 1;
					vertices[idx++] = -1;
					vertices[idx++] = 0;
					vertices[idx++] = 0.25f + column * 0.25f;
					vertices[idx++] = 0.25f + row * 0.25f;
				}
			}

			explosionMesh.setVertices(vertices);
			font = new BitmapFont(Gdx.files.internal("data/font10.fnt"), Gdx.files.internal("data/font10.png"), false);

			camera = new PerspectiveCamera(67, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
		} catch (Exception ex) {
			ex.printStackTrace();
		}
	} ##FSTMerge## public RendererGL20 () {
		try {
			spriteBatch = new SpriteBatch();

			texShader = new ShaderProgram(Gdx.files.internal("data/shaders/tex-vs.glsl"),
				Gdx.files.internal("data/shaders/tex-fs.glsl"));
			colorShader = new ShaderProgram(Gdx.files.internal("data/shaders/color-vs.glsl"),
				Gdx.files.internal("data/shaders/color-fs.glsl"));
			lightTexShader = new ShaderProgram(Gdx.files.internal("data/shaders/light-tex-vs.glsl"),
				Gdx.files.internal("data/shaders/light-tex-fs.glsl"));

			if (!texShader.isCompiled()) throw new GdxRuntimeException("Couldn't compile tex shader");
			if (!colorShader.isCompiled()) throw new GdxRuntimeException("Couldn't compile color shader");
			if (!lightTexShader.isCompiled()) throw new GdxRuntimeException("Couldn't compile light/tex shader");

			shipMesh = ModelLoaderRegistry.loadStillModel(Gdx.files.internal("data/ship.obj"));
			invaderMesh = ModelLoaderRegistry.loadStillModel(Gdx.files.internal("data/invader.obj"));
			blockMesh = ModelLoaderRegistry.loadStillModel(Gdx.files.internal("data/block.obj"));
			shotMesh = ModelLoaderRegistry.loadStillModel(Gdx.files.internal("data/shot.obj"));

			shipTexture = new Texture(Gdx.files.internal("data/ship.png"), Format.RGB565, true);
			shipTexture.setFilter(TextureFilter.MipMap, TextureFilter.Linear);
			invaderTexture = new Texture(Gdx.files.internal("data/invader.png"), Format.RGB565, true);
			invaderTexture.setFilter(TextureFilter.MipMap, TextureFilter.Linear);
			backgroundTexture = new Texture(Gdx.files.internal("data/planet.jpg"), Format.RGB565, true);
			backgroundTexture.setFilter(TextureFilter.MipMap, TextureFilter.Linear);
			explosionTexture = new Texture(Gdx.files.internal("data/explode.png"), Format.RGBA4444, true);
			explosionTexture.setFilter(TextureFilter.MipMap, TextureFilter.Linear);

			explosionMesh = new Mesh(true, 4 * 16, 0, new VertexAttribute(Usage.Position, 3, "a_position"), new VertexAttribute(
				Usage.TextureCoordinates, 2, "a_texCoord0"));

			float[] vertices = new float[4 * 16 * (3 + 2)];
			int idx = 0;
			for (int row = 0; row < 4; row++) {
				for (int column = 0; column < 4; column++) {
					vertices[idx++] = 1;
					vertices[idx++] = 1;
					vertices[idx++] = 0;
					vertices[idx++] = 0.25f + column * 0.25f;
					vertices[idx++] = 0 + row * 0.25f;

					vertices[idx++] = -1;
					vertices[idx++] = 1;
					vertices[idx++] = 0;
					vertices[idx++] = 0 + column * 0.25f;
					vertices[idx++] = 0 + row * 0.25f;

					vertices[idx++] = -1;
					vertices[idx++] = -1;
					vertices[idx++] = 0;
					vertices[idx++] = 0f + column * 0.25f;
					vertices[idx++] = 0.25f + row * 0.25f;

					vertices[idx++] = 1;
					vertices[idx++] = -1;
					vertices[idx++] = 0;
					vertices[idx++] = 0.25f + column * 0.25f;
					vertices[idx++] = 0.25f + row * 0.25f;
				}
			}

			explosionMesh.setVertices(vertices);
			font = new BitmapFont(Gdx.files.internal("data/font10.fnt"), Gdx.files.internal("data/font10.png"), false);

			camera = new PerspectiveCamera(67, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
		} catch (Exception ex) {
			ex.printStackTrace();
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void render (Simulation simulation, float delta) {
		// We explicitly require GL10, otherwise we could've used the GLCommon
		// interface via Gdx.gl
		GLCommon gl = Gdx.gl;
		gl.glClear(GL10.GL_COLOR_BUFFER_BIT | GL10.GL_DEPTH_BUFFER_BIT);
		renderBackground();
		gl.glEnable(GL10.GL_DEPTH_TEST);
		gl.glEnable(GL10.GL_CULL_FACE);
		setProjectionAndCamera(simulation.ship);
		renderShip(simulation.ship);
		renderInvaders(simulation.invaders);
		renderBlocks(simulation.blocks);
		renderShots(simulation.shots);
		renderExplosions(simulation.explosions);
		gl.glDisable(GL10.GL_CULL_FACE);
		gl.glDisable(GL10.GL_DEPTH_TEST);

		spriteBatch.setProjectionMatrix(viewMatrix);
		spriteBatch.begin();
		if (simulation.ship.lives != lastLives || simulation.score != lastScore || simulation.wave != lastWave) {
			status = "lives: " + simulation.ship.lives + " wave: " + simulation.wave + " score: " + simulation.score;
			lastLives = simulation.ship.lives;
			lastScore = simulation.score;
			lastWave = simulation.wave;
		}
		spriteBatch.enableBlending();
		font.draw(spriteBatch, status, 0, 320);
		spriteBatch.end();

		invaderAngle += delta * 90;
		if (invaderAngle > 360) invaderAngle -= 360;
	} ##FSTMerge## public void render (Simulation simulation, float delta) {
		// We explicitly require GL10, otherwise we could've used the GLCommon
		// interface via Gdx.gl
		GLCommon gl = Gdx.gl;
		gl.glClear(GL10.GL_COLOR_BUFFER_BIT | GL10.GL_DEPTH_BUFFER_BIT);
		renderBackground();
		gl.glEnable(GL10.GL_DEPTH_TEST);
		gl.glEnable(GL10.GL_CULL_FACE);
		setProjectionAndCamera(simulation.ship);
		renderShip(simulation.ship);
		renderInvaders(simulation.invaders);
		renderBlocks(simulation.blocks);
		renderShots(simulation.shots);
		renderExplosions(simulation.explosions);
		gl.glDisable(GL10.GL_CULL_FACE);
		gl.glDisable(GL10.GL_DEPTH_TEST);

		spriteBatch.setProjectionMatrix(viewMatrix);
		spriteBatch.begin();
		if (simulation.ship.lives != lastLives || simulation.score != lastScore || simulation.wave != lastWave) {
			status = "lives: " + simulation.ship.lives + " wave: " + simulation.wave + " score: " + simulation.score;
			lastLives = simulation.ship.lives;
			lastScore = simulation.score;
			lastWave = simulation.wave;
		}
		spriteBatch.enableBlending();
		font.draw(spriteBatch, status, 0, 320);
		spriteBatch.end();

		invaderAngle += delta * 90;
		if (invaderAngle > 360) invaderAngle -= 360;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void renderBackground () {
		viewMatrix.setToOrtho2D(0, 0, 400, 320);
		spriteBatch.setProjectionMatrix(viewMatrix);
		spriteBatch.begin();
		spriteBatch.disableBlending();
		spriteBatch.setColor(Color.WHITE);
		spriteBatch.draw(backgroundTexture, 0, 0, 480, 320, 0, 0, 512, 512, false, false);
		spriteBatch.end();
	} ##FSTMerge## private void renderBackground () {
		viewMatrix.setToOrtho2D(0, 0, 400, 320);
		spriteBatch.setProjectionMatrix(viewMatrix);
		spriteBatch.begin();
		spriteBatch.disableBlending();
		spriteBatch.setColor(Color.WHITE);
		spriteBatch.draw(backgroundTexture, 0, 0, 480, 320, 0, 0, 512, 512, false, false);
		spriteBatch.end();
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final Vector3 dir = new Vector3(); ##FSTMerge## final Vector3 dir = new Vector3();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void setProjectionAndCamera (Ship ship) {
		camera.position.set(ship.position.x, 6, 2);
		camera.direction.set(ship.position.x, 0, -4).sub(camera.position).nor();
		camera.update();
	} ##FSTMerge## private void setProjectionAndCamera (Ship ship) {
		camera.position.set(ship.position.x, 6, 2);
		camera.direction.set(ship.position.x, 0, -4).sub(camera.position).nor();
		camera.update();
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void renderShip (Ship ship) {
		if (ship.isExploding) return;

		shipTexture.bind();
		lightTexShader.begin();
		lightTexShader.setUniformi("u_diffuse", 0);
		transform.set(camera.combined);
		transform.translate(ship.position.x, ship.position.y, ship.position.z);
		transform.rotate(0, 0, 1, 45 * (-Gdx.input.getAccelerometerY() / 5));
		transform.rotate(0, 1, 0, 180);
		lightTexShader.setUniformMatrix("u_projView", transform);
		normal.idt();
		normal.rotate(0, 1, 0, 180);
		normal3.set(normal.toNormalMatrix());
		lightTexShader.setUniformMatrix("u_normal", normal3);
		shipMesh.render(lightTexShader);
		lightTexShader.end();
	} ##FSTMerge## private void renderShip (Ship ship) {
		if (ship.isExploding) return;

		shipTexture.bind();
		lightTexShader.begin();
		lightTexShader.setUniformi("u_diffuse", 0);
		transform.set(camera.combined);
		transform.translate(ship.position.x, ship.position.y, ship.position.z);
		transform.rotate(0, 0, 1, 45 * (-Gdx.input.getAccelerometerY() / 5));
		transform.rotate(0, 1, 0, 180);
		lightTexShader.setUniformMatrix("u_projView", transform);
		normal.idt();
		normal.rotate(0, 1, 0, 180);
		normal3.set(normal.toNormalMatrix());
		lightTexShader.setUniformMatrix("u_normal", normal3);
		shipMesh.render(lightTexShader);
		lightTexShader.end();
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void renderInvaders (ArrayList<Invader> invaders) {
		lightTexShader.begin();
		normal.idt();
		normal.rotate(0, 1, 0, invaderAngle);
		normal3.set(normal.toNormalMatrix());
		lightTexShader.setUniformMatrix("u_normal", normal3);
		invaderTexture.bind();
		for (int i = 0; i < invaders.size(); i++) {
			Invader invader = invaders.get(i);
			transform.set(camera.combined);
			transform.translate(invader.position.x, invader.position.y, invader.position.z);
			transform.rotate(0, 1, 0, invaderAngle);
			lightTexShader.setUniformMatrix("u_projView", transform);
			invaderMesh.render(lightTexShader);
		}
		lightTexShader.end();
	} ##FSTMerge## private void renderInvaders (ArrayList<Invader> invaders) {
		lightTexShader.begin();
		normal.idt();
		normal.rotate(0, 1, 0, invaderAngle);
		normal3.set(normal.toNormalMatrix());
		lightTexShader.setUniformMatrix("u_normal", normal3);
		invaderTexture.bind();
		for (int i = 0; i < invaders.size(); i++) {
			Invader invader = invaders.get(i);
			transform.set(camera.combined);
			transform.translate(invader.position.x, invader.position.y, invader.position.z);
			transform.rotate(0, 1, 0, invaderAngle);
			lightTexShader.setUniformMatrix("u_projView", transform);
			invaderMesh.render(lightTexShader);
		}
		lightTexShader.end();
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void renderBlocks (ArrayList<Block> blocks) {
		Gdx.gl.glEnable(GL10.GL_BLEND);
		Gdx.gl.glBlendFunc(GL10.GL_SRC_ALPHA, GL10.GL_ONE_MINUS_SRC_ALPHA);
		colorShader.begin();
		colorShader.setUniformf("u_color", 0, 0, 1, 0.5f);
		for (int i = 0; i < blocks.size(); i++) {
			Block block = blocks.get(i);
			transform.set(camera.combined);
			transform.translate(block.position.x, block.position.y, block.position.z);
			colorShader.setUniformMatrix("u_projView", transform);
			blockMesh.render(colorShader);
		}
		colorShader.end();
		Gdx.gl.glDisable(GL10.GL_BLEND);
	} ##FSTMerge## private void renderBlocks (ArrayList<Block> blocks) {
		Gdx.gl.glEnable(GL10.GL_BLEND);
		Gdx.gl.glBlendFunc(GL10.GL_SRC_ALPHA, GL10.GL_ONE_MINUS_SRC_ALPHA);
		colorShader.begin();
		colorShader.setUniformf("u_color", 0, 0, 1, 0.5f);
		for (int i = 0; i < blocks.size(); i++) {
			Block block = blocks.get(i);
			transform.set(camera.combined);
			transform.translate(block.position.x, block.position.y, block.position.z);
			colorShader.setUniformMatrix("u_projView", transform);
			blockMesh.render(colorShader);
		}
		colorShader.end();
		Gdx.gl.glDisable(GL10.GL_BLEND);
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void renderShots (ArrayList<Shot> shots) {
		colorShader.begin();
		colorShader.setUniformf("u_color", 1, 1, 0, 1f);
		for (int i = 0; i < shots.size(); i++) {
			Shot shot = shots.get(i);
			transform.set(camera.combined);
			transform.translate(shot.position.x, shot.position.y, shot.position.z);
			colorShader.setUniformMatrix("u_projView", transform);
			shotMesh.render(colorShader);
		}
		colorShader.end();
	} ##FSTMerge## private void renderShots (ArrayList<Shot> shots) {
		colorShader.begin();
		colorShader.setUniformf("u_color", 1, 1, 0, 1f);
		for (int i = 0; i < shots.size(); i++) {
			Shot shot = shots.get(i);
			transform.set(camera.combined);
			transform.translate(shot.position.x, shot.position.y, shot.position.z);
			colorShader.setUniformMatrix("u_projView", transform);
			shotMesh.render(colorShader);
		}
		colorShader.end();
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void renderExplosions (ArrayList<Explosion> explosions) {
		Gdx.gl.glEnable(GL10.GL_BLEND);
		Gdx.gl.glBlendFunc(GL10.GL_SRC_ALPHA, GL10.GL_ONE_MINUS_SRC_ALPHA);
		explosionTexture.bind();
		texShader.begin();
		texShader.setUniformi("u_diffuse", 0);
		for (int i = 0; i < explosions.size(); i++) {
			Explosion explosion = explosions.get(i);
			transform.set(camera.combined);
			transform.translate(explosion.position.x, explosion.position.y, explosion.position.z);
			texShader.setUniformMatrix("u_projView", transform);
			explosionMesh.render(texShader, GL10.GL_TRIANGLE_FAN,
				(int)(explosion.aliveTime / Explosion.EXPLOSION_LIVE_TIME * 15) * 4, 4);
		}
		texShader.end();
		Gdx.gl.glDisable(GL10.GL_BLEND);
	} ##FSTMerge## private void renderExplosions (ArrayList<Explosion> explosions) {
		Gdx.gl.glEnable(GL10.GL_BLEND);
		Gdx.gl.glBlendFunc(GL10.GL_SRC_ALPHA, GL10.GL_ONE_MINUS_SRC_ALPHA);
		explosionTexture.bind();
		texShader.begin();
		texShader.setUniformi("u_diffuse", 0);
		for (int i = 0; i < explosions.size(); i++) {
			Explosion explosion = explosions.get(i);
			transform.set(camera.combined);
			transform.translate(explosion.position.x, explosion.position.y, explosion.position.z);
			texShader.setUniformMatrix("u_projView", transform);
			explosionMesh.render(texShader, GL10.GL_TRIANGLE_FAN,
				(int)(explosion.aliveTime / Explosion.EXPLOSION_LIVE_TIME * 15) * 4, 4);
		}
		texShader.end();
		Gdx.gl.glDisable(GL10.GL_BLEND);
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void dispose () {
		spriteBatch.dispose();
		shipTexture.dispose();
		invaderTexture.dispose();
		backgroundTexture.dispose();
		explosionTexture.dispose();
		font.dispose();
		explosionMesh.dispose();
		shipMesh.dispose();
		invaderMesh.dispose();
		shotMesh.dispose();
		blockMesh.dispose();
	} ##FSTMerge## public void dispose () {
		spriteBatch.dispose();
		shipTexture.dispose();
		invaderTexture.dispose();
		backgroundTexture.dispose();
		explosionTexture.dispose();
		font.dispose();
		explosionMesh.dispose();
		shipMesh.dispose();
		invaderMesh.dispose();
		shotMesh.dispose();
		blockMesh.dispose();
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL20.java
############## CONFLICT ##############
Conflict type: ModifierList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ##FSTMerge## public
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: ImplementList
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## implements Renderer ##FSTMerge## implements Renderer
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private SpriteBatch spriteBatch; ##FSTMerge## private SpriteBatch spriteBatch;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private StillModel shipMesh; ##FSTMerge## private StillModel shipMesh;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Texture shipTexture; ##FSTMerge## private Texture shipTexture;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private StillModel invaderMesh; ##FSTMerge## private StillModel invaderMesh;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Texture invaderTexture; ##FSTMerge## private Texture invaderTexture;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private StillModel blockMesh; ##FSTMerge## private StillModel blockMesh;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private StillModel shotMesh; ##FSTMerge## private StillModel shotMesh;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Texture backgroundTexture; ##FSTMerge## private Texture backgroundTexture;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Mesh explosionMesh; ##FSTMerge## private Mesh explosionMesh;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private Texture explosionTexture; ##FSTMerge## private Texture explosionTexture;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private BitmapFont font; ##FSTMerge## private BitmapFont font;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private float invaderAngle = 0; ##FSTMerge## private float invaderAngle = 0;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private String status = ""; ##FSTMerge## private String status = "";
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private int lastScore = 0; ##FSTMerge## private int lastScore = 0;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private int lastLives = 0; ##FSTMerge## private int lastLives = 0;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private int lastWave = 0; ##FSTMerge## private int lastWave = 0;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final Matrix4 viewMatrix = new Matrix4(); ##FSTMerge## private final Matrix4 viewMatrix = new Matrix4();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private final Matrix4 transformMatrix = new Matrix4(); ##FSTMerge## private final Matrix4 transformMatrix = new Matrix4();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private PerspectiveCamera camera; ##FSTMerge## private PerspectiveCamera camera;
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public RendererGL10 () {
		try {
			spriteBatch = new SpriteBatch();

			shipMesh = ModelLoaderRegistry.loadStillModel(Gdx.files.internal("data/ship.obj"));
			invaderMesh = ModelLoaderRegistry.loadStillModel(Gdx.files.internal("data/invader.obj"));
			blockMesh = ModelLoaderRegistry.loadStillModel(Gdx.files.internal("data/block.obj"));
			shotMesh = ModelLoaderRegistry.loadStillModel(Gdx.files.internal("data/shot.obj"));

			shipTexture = new Texture(Gdx.files.internal("data/ship.png"), Format.RGB565, true);
			shipTexture.setFilter(TextureFilter.MipMap, TextureFilter.Linear);
			invaderTexture = new Texture(Gdx.files.internal("data/invader.png"), Format.RGB565, true);
			invaderTexture.setFilter(TextureFilter.MipMap, TextureFilter.Linear);
			backgroundTexture = new Texture(Gdx.files.internal("data/planet.jpg"), Format.RGB565, true);
			backgroundTexture.setFilter(TextureFilter.MipMap, TextureFilter.Linear);
			explosionTexture = new Texture(Gdx.files.internal("data/explode.png"), Format.RGBA4444, true);
			explosionTexture.setFilter(TextureFilter.MipMap, TextureFilter.Linear);

			explosionMesh = new Mesh(true, 4 * 16, 0, new VertexAttribute(Usage.Position, 3, "a_position"), new VertexAttribute(
				Usage.TextureCoordinates, 2, "a_texCoord"));

			float[] vertices = new float[4 * 16 * (3 + 2)];
			int idx = 0;
			for (int row = 0; row < 4; row++) {
				for (int column = 0; column < 4; column++) {
					vertices[idx++] = 1;
					vertices[idx++] = 1;
					vertices[idx++] = 0;
					vertices[idx++] = 0.25f + column * 0.25f;
					vertices[idx++] = 0 + row * 0.25f;

					vertices[idx++] = -1;
					vertices[idx++] = 1;
					vertices[idx++] = 0;
					vertices[idx++] = 0 + column * 0.25f;
					vertices[idx++] = 0 + row * 0.25f;

					vertices[idx++] = -1;
					vertices[idx++] = -1;
					vertices[idx++] = 0;
					vertices[idx++] = 0f + column * 0.25f;
					vertices[idx++] = 0.25f + row * 0.25f;

					vertices[idx++] = 1;
					vertices[idx++] = -1;
					vertices[idx++] = 0;
					vertices[idx++] = 0.25f + column * 0.25f;
					vertices[idx++] = 0.25f + row * 0.25f;
				}
			}

			explosionMesh.setVertices(vertices);
			font = new BitmapFont(Gdx.files.internal("data/font10.fnt"), Gdx.files.internal("data/font10.png"), false);

			camera = new PerspectiveCamera(67, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
		} catch (Exception ex) {
			ex.printStackTrace();
		}
	} ##FSTMerge## public RendererGL10 () {
		try {
			spriteBatch = new SpriteBatch();

			shipMesh = ModelLoaderRegistry.loadStillModel(Gdx.files.internal("data/ship.obj"));
			invaderMesh = ModelLoaderRegistry.loadStillModel(Gdx.files.internal("data/invader.obj"));
			blockMesh = ModelLoaderRegistry.loadStillModel(Gdx.files.internal("data/block.obj"));
			shotMesh = ModelLoaderRegistry.loadStillModel(Gdx.files.internal("data/shot.obj"));

			shipTexture = new Texture(Gdx.files.internal("data/ship.png"), Format.RGB565, true);
			shipTexture.setFilter(TextureFilter.MipMap, TextureFilter.Linear);
			invaderTexture = new Texture(Gdx.files.internal("data/invader.png"), Format.RGB565, true);
			invaderTexture.setFilter(TextureFilter.MipMap, TextureFilter.Linear);
			backgroundTexture = new Texture(Gdx.files.internal("data/planet.jpg"), Format.RGB565, true);
			backgroundTexture.setFilter(TextureFilter.MipMap, TextureFilter.Linear);
			explosionTexture = new Texture(Gdx.files.internal("data/explode.png"), Format.RGBA4444, true);
			explosionTexture.setFilter(TextureFilter.MipMap, TextureFilter.Linear);

			explosionMesh = new Mesh(true, 4 * 16, 0, new VertexAttribute(Usage.Position, 3, "a_position"), new VertexAttribute(
				Usage.TextureCoordinates, 2, "a_texCoord"));

			float[] vertices = new float[4 * 16 * (3 + 2)];
			int idx = 0;
			for (int row = 0; row < 4; row++) {
				for (int column = 0; column < 4; column++) {
					vertices[idx++] = 1;
					vertices[idx++] = 1;
					vertices[idx++] = 0;
					vertices[idx++] = 0.25f + column * 0.25f;
					vertices[idx++] = 0 + row * 0.25f;

					vertices[idx++] = -1;
					vertices[idx++] = 1;
					vertices[idx++] = 0;
					vertices[idx++] = 0 + column * 0.25f;
					vertices[idx++] = 0 + row * 0.25f;

					vertices[idx++] = -1;
					vertices[idx++] = -1;
					vertices[idx++] = 0;
					vertices[idx++] = 0f + column * 0.25f;
					vertices[idx++] = 0.25f + row * 0.25f;

					vertices[idx++] = 1;
					vertices[idx++] = -1;
					vertices[idx++] = 0;
					vertices[idx++] = 0.25f + column * 0.25f;
					vertices[idx++] = 0.25f + row * 0.25f;
				}
			}

			explosionMesh.setVertices(vertices);
			font = new BitmapFont(Gdx.files.internal("data/font10.fnt"), Gdx.files.internal("data/font10.png"), false);

			camera = new PerspectiveCamera(67, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
		} catch (Exception ex) {
			ex.printStackTrace();
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void render (Simulation simulation, float delta) {
		// We explicitly require GL10, otherwise we could've used the GLCommon
		// interface via Gdx.gl
		GL10 gl = Gdx.graphics.getGL10();
		gl.glClear(GL10.GL_COLOR_BUFFER_BIT | GL10.GL_DEPTH_BUFFER_BIT);
		gl.glViewport(0, 0, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());

		renderBackground();

		gl.glDisable(GL10.GL_DITHER);
		gl.glEnable(GL10.GL_DEPTH_TEST);
		gl.glEnable(GL10.GL_CULL_FACE);

		setProjectionAndCamera(gl, simulation.ship);
		setLighting(gl);

		gl.glEnable(GL10.GL_TEXTURE_2D);

		renderShip(gl, simulation.ship);
		renderInvaders(gl, simulation.invaders);

		gl.glDisable(GL10.GL_TEXTURE_2D);
		renderBlocks(gl, simulation.blocks);

		gl.glDisable(GL10.GL_LIGHTING);
		renderShots(gl, simulation.shots);

		gl.glEnable(GL10.GL_TEXTURE_2D);
		renderExplosions(gl, simulation.explosions);

		gl.glDisable(GL10.GL_CULL_FACE);
		gl.glDisable(GL10.GL_DEPTH_TEST);

		spriteBatch.setProjectionMatrix(viewMatrix);
		spriteBatch.setTransformMatrix(transformMatrix);
		spriteBatch.begin();
		if (simulation.ship.lives != lastLives || simulation.score != lastScore || simulation.wave != lastWave) {
			status = "lives: " + simulation.ship.lives + " wave: " + simulation.wave + " score: " + simulation.score;
			lastLives = simulation.ship.lives;
			lastScore = simulation.score;
			lastWave = simulation.wave;
		}
		spriteBatch.enableBlending();
		spriteBatch.setBlendFunction(GL10.GL_ONE, GL10.GL_ONE_MINUS_SRC_ALPHA);
		font.draw(spriteBatch, status, 0, 320);
		spriteBatch.end();

		invaderAngle += delta * 90;
		if (invaderAngle > 360) invaderAngle -= 360;
	} ##FSTMerge## public void render (Simulation simulation, float delta) {
		// We explicitly require GL10, otherwise we could've used the GLCommon
		// interface via Gdx.gl
		GL10 gl = Gdx.graphics.getGL10();
		gl.glClear(GL10.GL_COLOR_BUFFER_BIT | GL10.GL_DEPTH_BUFFER_BIT);
		gl.glViewport(0, 0, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());

		renderBackground();

		gl.glDisable(GL10.GL_DITHER);
		gl.glEnable(GL10.GL_DEPTH_TEST);
		gl.glEnable(GL10.GL_CULL_FACE);

		setProjectionAndCamera(gl, simulation.ship);
		setLighting(gl);

		gl.glEnable(GL10.GL_TEXTURE_2D);

		renderShip(gl, simulation.ship);
		renderInvaders(gl, simulation.invaders);

		gl.glDisable(GL10.GL_TEXTURE_2D);
		renderBlocks(gl, simulation.blocks);

		gl.glDisable(GL10.GL_LIGHTING);
		renderShots(gl, simulation.shots);

		gl.glEnable(GL10.GL_TEXTURE_2D);
		renderExplosions(gl, simulation.explosions);

		gl.glDisable(GL10.GL_CULL_FACE);
		gl.glDisable(GL10.GL_DEPTH_TEST);

		spriteBatch.setProjectionMatrix(viewMatrix);
		spriteBatch.setTransformMatrix(transformMatrix);
		spriteBatch.begin();
		if (simulation.ship.lives != lastLives || simulation.score != lastScore || simulation.wave != lastWave) {
			status = "lives: " + simulation.ship.lives + " wave: " + simulation.wave + " score: " + simulation.score;
			lastLives = simulation.ship.lives;
			lastScore = simulation.score;
			lastWave = simulation.wave;
		}
		spriteBatch.enableBlending();
		spriteBatch.setBlendFunction(GL10.GL_ONE, GL10.GL_ONE_MINUS_SRC_ALPHA);
		font.draw(spriteBatch, status, 0, 320);
		spriteBatch.end();

		invaderAngle += delta * 90;
		if (invaderAngle > 360) invaderAngle -= 360;
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void renderBackground () {
		viewMatrix.setToOrtho2D(0, 0, 400, 320);
		spriteBatch.setProjectionMatrix(viewMatrix);
		spriteBatch.setTransformMatrix(transformMatrix);
		spriteBatch.begin();
		spriteBatch.disableBlending();
		spriteBatch.setColor(Color.WHITE);
		spriteBatch.draw(backgroundTexture, 0, 0, 480, 320, 0, 0, 512, 512, false, false);
		spriteBatch.end();
	} ##FSTMerge## private void renderBackground () {
		viewMatrix.setToOrtho2D(0, 0, 400, 320);
		spriteBatch.setProjectionMatrix(viewMatrix);
		spriteBatch.setTransformMatrix(transformMatrix);
		spriteBatch.begin();
		spriteBatch.disableBlending();
		spriteBatch.setColor(Color.WHITE);
		spriteBatch.draw(backgroundTexture, 0, 0, 480, 320, 0, 0, 512, 512, false, false);
		spriteBatch.end();
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## final Vector3 dir = new Vector3(); ##FSTMerge## final Vector3 dir = new Vector3();
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void setProjectionAndCamera (GL10 gl, Ship ship) {
		camera.position.set(ship.position.x, 6, 2);
		camera.direction.set(ship.position.x, 0, -4).sub(camera.position).nor();
		camera.update();
		camera.apply(gl);
	} ##FSTMerge## private void setProjectionAndCamera (GL10 gl, Ship ship) {
		camera.position.set(ship.position.x, 6, 2);
		camera.direction.set(ship.position.x, 0, -4).sub(camera.position).nor();
		camera.update();
		camera.apply(gl);
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## float[] direction = {1, 0.5f, 0, 0}; ##FSTMerge## float[] direction = {1, 0.5f, 0, 0};
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void setLighting (GL10 gl) {
		gl.glEnable(GL10.GL_LIGHTING);
		gl.glEnable(GL10.GL_LIGHT0);
		gl.glLightfv(GL10.GL_LIGHT0, GL10.GL_POSITION, direction, 0);
		gl.glEnable(GL10.GL_COLOR_MATERIAL);
	} ##FSTMerge## private void setLighting (GL10 gl) {
		gl.glEnable(GL10.GL_LIGHTING);
		gl.glEnable(GL10.GL_LIGHT0);
		gl.glLightfv(GL10.GL_LIGHT0, GL10.GL_POSITION, direction, 0);
		gl.glEnable(GL10.GL_COLOR_MATERIAL);
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void renderShip (GL10 gl, Ship ship) {
		if (ship.isExploding) return;

		shipTexture.bind();
		gl.glPushMatrix();
		gl.glTranslatef(ship.position.x, ship.position.y, ship.position.z);
		gl.glRotatef(45 * (-Gdx.input.getAccelerometerY() / 5), 0, 0, 1);
		gl.glRotatef(180, 0, 1, 0);
		shipMesh.render();
		gl.glPopMatrix();
	} ##FSTMerge## private void renderShip (GL10 gl, Ship ship) {
		if (ship.isExploding) return;

		shipTexture.bind();
		gl.glPushMatrix();
		gl.glTranslatef(ship.position.x, ship.position.y, ship.position.z);
		gl.glRotatef(45 * (-Gdx.input.getAccelerometerY() / 5), 0, 0, 1);
		gl.glRotatef(180, 0, 1, 0);
		shipMesh.render();
		gl.glPopMatrix();
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void renderInvaders (GL10 gl, ArrayList<Invader> invaders) {
		invaderTexture.bind();
		Mesh mesh = invaderMesh.getSubMeshes()[0].mesh;
		for (int i = 0; i < invaders.size(); i++) {
			Invader invader = invaders.get(i);
			gl.glPushMatrix();
			gl.glTranslatef(invader.position.x, invader.position.y, invader.position.z);
			gl.glRotatef(invaderAngle, 0, 1, 0);
			mesh.render(GL10.GL_TRIANGLES);
			gl.glPopMatrix();
		}
	} ##FSTMerge## private void renderInvaders (GL10 gl, ArrayList<Invader> invaders) {
		invaderTexture.bind();
		Mesh mesh = invaderMesh.getSubMeshes()[0].mesh;
		for (int i = 0; i < invaders.size(); i++) {
			Invader invader = invaders.get(i);
			gl.glPushMatrix();
			gl.glTranslatef(invader.position.x, invader.position.y, invader.position.z);
			gl.glRotatef(invaderAngle, 0, 1, 0);
			mesh.render(GL10.GL_TRIANGLES);
			gl.glPopMatrix();
		}
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void renderBlocks (GL10 gl, ArrayList<Block> blocks) {
		gl.glEnable(GL10.GL_BLEND);
		gl.glBlendFunc(GL10.GL_SRC_ALPHA, GL10.GL_ONE_MINUS_SRC_ALPHA);
		gl.glColor4f(0.2f, 0.2f, 1, 0.7f);
		for (int i = 0; i < blocks.size(); i++) {
			Block block = blocks.get(i);
			gl.glPushMatrix();
			gl.glTranslatef(block.position.x, block.position.y, block.position.z);
			blockMesh.render();
			gl.glPopMatrix();
		}
		gl.glColor4f(1, 1, 1, 1);
		gl.glDisable(GL10.GL_BLEND);
	} ##FSTMerge## private void renderBlocks (GL10 gl, ArrayList<Block> blocks) {
		gl.glEnable(GL10.GL_BLEND);
		gl.glBlendFunc(GL10.GL_SRC_ALPHA, GL10.GL_ONE_MINUS_SRC_ALPHA);
		gl.glColor4f(0.2f, 0.2f, 1, 0.7f);
		for (int i = 0; i < blocks.size(); i++) {
			Block block = blocks.get(i);
			gl.glPushMatrix();
			gl.glTranslatef(block.position.x, block.position.y, block.position.z);
			blockMesh.render();
			gl.glPopMatrix();
		}
		gl.glColor4f(1, 1, 1, 1);
		gl.glDisable(GL10.GL_BLEND);
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void renderShots (GL10 gl, ArrayList<Shot> shots) {
		gl.glColor4f(1, 1, 0, 1);
		for (int i = 0; i < shots.size(); i++) {
			Shot shot = shots.get(i);
			gl.glPushMatrix();
			gl.glTranslatef(shot.position.x, shot.position.y, shot.position.z);
			shotMesh.render();
			gl.glPopMatrix();
		}
		gl.glColor4f(1, 1, 1, 1);
	} ##FSTMerge## private void renderShots (GL10 gl, ArrayList<Shot> shots) {
		gl.glColor4f(1, 1, 0, 1);
		for (int i = 0; i < shots.size(); i++) {
			Shot shot = shots.get(i);
			gl.glPushMatrix();
			gl.glTranslatef(shot.position.x, shot.position.y, shot.position.z);
			shotMesh.render();
			gl.glPopMatrix();
		}
		gl.glColor4f(1, 1, 1, 1);
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## private void renderExplosions (GL10 gl, ArrayList<Explosion> explosions) {
		gl.glEnable(GL10.GL_BLEND);
		gl.glBlendFunc(GL10.GL_SRC_ALPHA, GL10.GL_ONE_MINUS_SRC_ALPHA);
		explosionTexture.bind();
		for (int i = 0; i < explosions.size(); i++) {
			Explosion explosion = explosions.get(i);
			gl.glPushMatrix();
			gl.glTranslatef(explosion.position.x, explosion.position.y, explosion.position.z);
			explosionMesh.render(GL10.GL_TRIANGLE_FAN, (int)(explosion.aliveTime / Explosion.EXPLOSION_LIVE_TIME * 15) * 4, 4);
			gl.glPopMatrix();
		}
		gl.glDisable(GL10.GL_BLEND);
	} ##FSTMerge## private void renderExplosions (GL10 gl, ArrayList<Explosion> explosions) {
		gl.glEnable(GL10.GL_BLEND);
		gl.glBlendFunc(GL10.GL_SRC_ALPHA, GL10.GL_ONE_MINUS_SRC_ALPHA);
		explosionTexture.bind();
		for (int i = 0; i < explosions.size(); i++) {
			Explosion explosion = explosions.get(i);
			gl.glPushMatrix();
			gl.glTranslatef(explosion.position.x, explosion.position.y, explosion.position.z);
			explosionMesh.render(GL10.GL_TRIANGLE_FAN, (int)(explosion.aliveTime / Explosion.EXPLOSION_LIVE_TIME * 15) * 4, 4);
			gl.glPopMatrix();
		}
		gl.glDisable(GL10.GL_BLEND);
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 0b91847439918e97ecd2d01e758ab0a0df159986
Parent1 SHA-1: 6b0b12784a8611d4383bae631cfa4e8f977b6ae3
Parent2 SHA-1: 98396751a57d264752db78820e5273187ef272de
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public void dispose () {
		spriteBatch.dispose();
		shipTexture.dispose();
		invaderTexture.dispose();
		backgroundTexture.dispose();
		explosionTexture.dispose();
		font.dispose();
		explosionMesh.dispose();
		shipMesh.dispose();
		invaderMesh.dispose();
		shotMesh.dispose();
		blockMesh.dispose();
	} ##FSTMerge## public void dispose () {
		spriteBatch.dispose();
		shipTexture.dispose();
		invaderTexture.dispose();
		backgroundTexture.dispose();
		explosionTexture.dispose();
		font.dispose();
		explosionMesh.dispose();
		shipMesh.dispose();
		invaderMesh.dispose();
		shotMesh.dispose();
		blockMesh.dispose();
	}
File path: /tmp/downloads/libgdx/revisions/rev_6b0b1_98396/rev_6b0b1-98396/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/RendererGL10.java

==================================================================================================================
Revision: /tmp/downloads/libgdx/revisions/rev_87639_a5605/rev_87639-a5605.revisions
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 6dfe33e5a8e1f421084e0610835c98f4b94b2ab4
Parent1 SHA-1: 87639b906545fc69ecd4b06281ef9bd185b759c9
Parent2 SHA-1: a56051526663e657cb6131d4007205ffd9c2b1fc
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ protected Json getJsonLoader (final FileHandle skinFile) {
		final Skin skin = this;

		final Json json = new Json() {
			@Override
			public <T> T readValue (Class<T> type, Class elementType, JsonValue jsonData) {
				// If the JSON is a string but the type is not, look up the actual value by name.
				if (jsonData.isString()
					&& !ReflectionCache.getType(type).isAssignableFrom(ReflectionCache.getType(CharSequence.class)))
					return get(jsonData.asString(), type);
				return super.readValue(type, elementType, jsonData);
			}
		};
		json.setTypeName(null);
		json.setUsePrototypes(false);

		json.setSerializer(Skin.class, new ReadOnlySerializer<Skin>() {
			public Skin read (Json json, JsonValue typeToValueMap, Class ignored) {
				for (JsonValue valueMap = typeToValueMap.child(); valueMap != null; valueMap = valueMap.next()) {
					try {
						readNamedObjects(json, ReflectionCache.forName(valueMap.name()).getClassOfType(), valueMap);
					} catch (ClassNotFoundException ex) {
						throw new SerializationException(ex);
					}
				}
				return skin;
			}

			private void readNamedObjects (Json json, Class type, JsonValue valueMap) {
				Class addType = type == TintedDrawable.class ? Drawable.class : type;
				for (JsonValue valueEntry = valueMap.child(); valueEntry != null; valueEntry = valueEntry.next()) {
					Object object = json.readValue(type, valueEntry);
					if (object == null) continue;
					try {
						add(valueEntry.name(), object, addType);
					} catch (Exception ex) {
						throw new SerializationException("Error reading " + type.getSimpleName() + ": " + valueEntry.name(), ex);
					}
				}
			}
		});

		json.setSerializer(BitmapFont.class, new ReadOnlySerializer<BitmapFont>() {
			public BitmapFont read (Json json, JsonValue jsonData, Class type) {
				String path = json.readValue("file", String.class, jsonData);

				FileHandle fontFile = skinFile.parent().child(path);
				if (!fontFile.exists()) fontFile = Gdx.files.internal(path);
				if (!fontFile.exists()) throw new SerializationException("Font file not found: " + fontFile);

				// Use a region with the same name as the font, else use a PNG file in the same directory as the FNT file.
				String regionName = fontFile.nameWithoutExtension();
				try {
					TextureRegion region = skin.optional(regionName, TextureRegion.class);
					if (region != null)
						return new BitmapFont(fontFile, region, false);
					else {
						FileHandle imageFile = fontFile.parent().child(regionName + ".png");
						if (imageFile.exists())
							return new BitmapFont(fontFile, imageFile, false);
						else
							return new BitmapFont(fontFile, false);
					}
				} catch (RuntimeException ex) {
					throw new SerializationException("Error loading bitmap font: " + fontFile, ex);
				}
			}
		});

		json.setSerializer(Color.class, new ReadOnlySerializer<Color>() {
			public Color read (Json json, JsonValue jsonData, Class type) {
				if (jsonData.isString()) return get(jsonData.asString(), Color.class);
				String hex = json.readValue("hex", String.class, (String)null, jsonData);
				if (hex != null) return Color.valueOf(hex);
				float r = json.readValue("r", float.class, 0f, jsonData);
				float g = json.readValue("g", float.class, 0f, jsonData);
				float b = json.readValue("b", float.class, 0f, jsonData);
				float a = json.readValue("a", float.class, 1f, jsonData);
				return new Color(r, g, b, a);
			}
		});

		json.setSerializer(TintedDrawable.class, new ReadOnlySerializer() {
			public Object read (Json json, JsonValue jsonData, Class type) {
				String name = json.readValue("name", String.class, jsonData);
				Color color = json.readValue("color", Color.class, jsonData);
				return newDrawable(name, color);
			}
		});

		return json;
	} ##FSTMerge## protected Json getJsonLoader (final FileHandle skinFile) {
		final Skin skin = this;

		final Json json = new Json() {
			@Override
			public <T> T readValue (Class<T> type, Class elementType, Object jsonData) {
				// If the JSON is a string but the type is not, look up the actual value by name.
				if (jsonData instanceof String
					&& !ReflectionCache.getType(type).isAssignableFrom(ReflectionCache.getType(CharSequence.class)))
					return get((String)jsonData, type);
				return super.readValue(type, elementType, jsonData);
			}
		};
		json.setTypeName(null);
		json.setUsePrototypes(false);

		json.setSerializer(Skin.class, new ReadOnlySerializer<Skin>() {
			public Skin read (Json json, Object jsonData, Class ignored) {
				ObjectMap<String, ObjectMap> typeToValueMap = (ObjectMap)jsonData;
				for (Entry<String, ObjectMap> typeEntry : typeToValueMap.entries()) {
					String className = typeEntry.key;
					ObjectMap<String, ObjectMap> valueMap = (ObjectMap)typeEntry.value;
					try {
						readNamedObjects(json, ReflectionCache.forName(className).getClassOfType(), valueMap);
					} catch (ClassNotFoundException ex) {
						throw new SerializationException(ex);
					}
				}
				return skin;
			}

			private void readNamedObjects (Json json, Class type, ObjectMap<String, ObjectMap> valueMap) {
				Class addType = type == TintedDrawable.class ? Drawable.class : type;
				for (Entry<String, ObjectMap> valueEntry : valueMap.entries()) {
					String name = valueEntry.key;
					Object object = json.readValue(type, valueEntry.value);
					if (object == null) continue;
					try {
						add(name, object, addType);
					} catch (Exception ex) {
						throw new SerializationException("Error reading " + type.getName() + ": " + valueEntry.key, ex);
					}
				}
			}
		});

		json.setSerializer(BitmapFont.class, new ReadOnlySerializer<BitmapFont>() {
			public BitmapFont read (Json json, Object jsonData, Class type) {
				String path = json.readValue("file", String.class, jsonData);

				FileHandle fontFile = skinFile.parent().child(path);
				if (!fontFile.exists()) fontFile = Gdx.files.internal(path);
				if (!fontFile.exists()) throw new SerializationException("Font file not found: " + fontFile);

				// Use a region with the same name as the font, else use a PNG file in the same directory as the FNT file.
				String regionName = fontFile.nameWithoutExtension();
				try {
					TextureRegion region = skin.optional(regionName, TextureRegion.class);
					if (region != null)
						return new BitmapFont(fontFile, region, false);
					else {
						FileHandle imageFile = fontFile.parent().child(regionName + ".png");
						if (imageFile.exists())
							return new BitmapFont(fontFile, imageFile, false);
						else
							return new BitmapFont(fontFile, false);
					}
				} catch (RuntimeException ex) {
					throw new SerializationException("Error loading bitmap font: " + fontFile, ex);
				}
			}
		});

		json.setSerializer(Color.class, new ReadOnlySerializer<Color>() {
			public Color read (Json json, Object jsonData, Class type) {
				if (jsonData instanceof String) return get((String)jsonData, Color.class);
				ObjectMap map = (ObjectMap)jsonData;
				float r = json.readValue("r", float.class, 0f, jsonData);
				float g = json.readValue("g", float.class, 0f, jsonData);
				float b = json.readValue("b", float.class, 0f, jsonData);
				float a = json.readValue("a", float.class, 1f, jsonData);
				return new Color(r, g, b, a);
			}
		});

		json.setSerializer(TintedDrawable.class, new ReadOnlySerializer() {
			public Object read (Json json, Object jsonData, Class type) {
				String name = json.readValue("name", String.class, jsonData);
				Color color = json.readValue("color", Color.class, jsonData);
				return newDrawable(name, color);
			}
		});

		return json;
	} ##FSTMerge## protected Json getJsonLoader (final FileHandle skinFile) {
		final Skin skin = this;

		final Json json = new Json() {
			@Override
			public <T> T readValue (Class<T> type, Class elementType, JsonValue jsonData) {
				// If the JSON is a string but the type is not, look up the actual value by name.
				if (jsonData.isString()
					&& !ReflectionCache.getType(type).isAssignableFrom(ReflectionCache.getType(CharSequence.class)))
					return get((String)jsonData.asString(), type);
				return super.readValue(type, elementType, jsonData);
			}
		};
		json.setTypeName(null);
		json.setUsePrototypes(false);

		json.setSerializer(Skin.class, new ReadOnlySerializer<Skin>() {
			public Skin read (Json json, JsonValue jsonData, Class ignored) {
				ObjectMap<String, ObjectMap> typeToValueMap = (ObjectMap)jsonData;
				for (Entry<String, ObjectMap> typeEntry : typeToValueMap.entries()) {
					String className = typeEntry.key;
					ObjectMap<String, ObjectMap> valueMap = (ObjectMap)typeEntry.value;
					try {
						readNamedObjects(json, ReflectionCache.forName(className).getClassOfType(), valueMap);
					} catch (ClassNotFoundException ex) {
						throw new SerializationException(ex);
					}
				}
				return skin;
			}

			private void readNamedObjects (Json json, Class type, ObjectMap<String, ObjectMap> valueMap) {
				Class addType = type == TintedDrawable.class ? Drawable.class : type;
				for (Entry<String, ObjectMap> valueEntry : valueMap.entries()) {
					String name = valueEntry.key;
					Object object = json.readValue(type, valueEntry.value);
					if (object == null) continue;
					try {
						add(name, object, addType);
					} catch (Exception ex) {
						throw new SerializationException("Error reading " + type.getName() + ": " + valueEntry.key, ex);
					}
				}
			}
		});

		json.setSerializer(BitmapFont.class, new ReadOnlySerializer<BitmapFont>() {
			@Override
			public BitmapFont read (Json json, JsonValue jsonData, Class type) {
				String path = json.readValue("file", String.class, jsonData);

				FileHandle fontFile = skinFile.parent().child(path);
				if (!fontFile.exists()) fontFile = Gdx.files.internal(path);
				if (!fontFile.exists()) throw new SerializationException("Font file not found: " + fontFile);

				// Use a region with the same name as the font, else use a PNG file in the same directory as the FNT file.
				String regionName = fontFile.nameWithoutExtension();
				try {
					TextureRegion region = skin.optional(regionName, TextureRegion.class);
					if (region != null)
						return new BitmapFont(fontFile, region, false);
					else {
						FileHandle imageFile = fontFile.parent().child(regionName + ".png");
						if (imageFile.exists())
							return new BitmapFont(fontFile, imageFile, false);
						else
							return new BitmapFont(fontFile, false);
					}
				} catch (RuntimeException ex) {
					throw new SerializationException("Error loading bitmap font: " + fontFile, ex);
				}
			}
		});

		json.setSerializer(Color.class, new ReadOnlySerializer<Color>() {
			public Color read (Json json, JsonValue jsonData, Class type) {
				if (jsonData instanceof String) return get((String)jsonData, Color.class);
				ObjectMap map = (ObjectMap)jsonData;
				float r = json.readValue("r", float.class, 0f, jsonData);
				float g = json.readValue("g", float.class, 0f, jsonData);
				float b = json.readValue("b", float.class, 0f, jsonData);
				float a = json.readValue("a", float.class, 1f, jsonData);
				return new Color(r, g, b, a);
			}
		});

		json.setSerializer(TintedDrawable.class, new ReadOnlySerializer() {
			public Object read (Json json, JsonValue jsonData, Class type) {
				String name = json.readValue("name", String.class, jsonData);
				Color color = json.readValue("color", Color.class, jsonData);
				return newDrawable(name, color);
			}
		});

		return json;
	}
File path: /tmp/downloads/libgdx/revisions/rev_87639_a5605/rev_87639-a5605/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/scenes/scene2d/ui/Skin.java

==================================================================================================================
Revision: /tmp/downloads/libgdx/revisions/rev_249d3_c2f92/rev_249d3-c2f92.revisions
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 29e3b54290cc97e34363a270649e9d1e5ac03c0b
Parent1 SHA-1: 249d375bbb85e68e0a0deac40f26e80d7cdcea59
Parent2 SHA-1: c2f92ec6712126822d211b3c5e5052d6aee3be84
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public Model model; ##FSTMerge## public NewModel model; ##FSTMerge## public NewModel model;
File path: /tmp/downloads/libgdx/revisions/rev_249d3_c2f92/rev_249d3-c2f92/tests/gdx-tests/src/com/badlogic/gdx/tests/g3d/BatchRenderTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 29e3b54290cc97e34363a270649e9d1e5ac03c0b
Parent1 SHA-1: 249d375bbb85e68e0a0deac40f26e80d7cdcea59
Parent2 SHA-1: c2f92ec6712126822d211b3c5e5052d6aee3be84
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ##FSTMerge## public ModelInstance(NewModel model, Matrix4 transform) {
			this.model = model;
			this.transform = transform;
		} ##FSTMerge## public ModelInstance(NewModel model, Matrix4 transform) {
			this.model = model;
			this.transform = transform;
		}
File path: /tmp/downloads/libgdx/revisions/rev_249d3_c2f92/rev_249d3-c2f92/tests/gdx-tests/src/com/badlogic/gdx/tests/g3d/BatchRenderTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 29e3b54290cc97e34363a270649e9d1e5ac03c0b
Parent1 SHA-1: 249d375bbb85e68e0a0deac40f26e80d7cdcea59
Parent2 SHA-1: c2f92ec6712126822d211b3c5e5052d6aee3be84
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ Model sphereModel; ##FSTMerge## NewModel sphereModel; ##FSTMerge## NewModel sphereModel;
File path: /tmp/downloads/libgdx/revisions/rev_249d3_c2f92/rev_249d3-c2f92/tests/gdx-tests/src/com/badlogic/gdx/tests/g3d/BatchRenderTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 29e3b54290cc97e34363a270649e9d1e5ac03c0b
Parent1 SHA-1: 249d375bbb85e68e0a0deac40f26e80d7cdcea59
Parent2 SHA-1: c2f92ec6712126822d211b3c5e5052d6aee3be84
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ Model sceneModel; ##FSTMerge## NewModel sceneModel; ##FSTMerge## NewModel sceneModel;
File path: /tmp/downloads/libgdx/revisions/rev_249d3_c2f92/rev_249d3-c2f92/tests/gdx-tests/src/com/badlogic/gdx/tests/g3d/BatchRenderTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 29e3b54290cc97e34363a270649e9d1e5ac03c0b
Parent1 SHA-1: 249d375bbb85e68e0a0deac40f26e80d7cdcea59
Parent2 SHA-1: c2f92ec6712126822d211b3c5e5052d6aee3be84
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ Model cubeModel; ##FSTMerge## StillModel cubeModel; ##FSTMerge## StillModel cubeModel;
File path: /tmp/downloads/libgdx/revisions/rev_249d3_c2f92/rev_249d3-c2f92/tests/gdx-tests/src/com/badlogic/gdx/tests/g3d/BatchRenderTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 29e3b54290cc97e34363a270649e9d1e5ac03c0b
Parent1 SHA-1: 249d375bbb85e68e0a0deac40f26e80d7cdcea59
Parent2 SHA-1: c2f92ec6712126822d211b3c5e5052d6aee3be84
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ Model carModel; ##FSTMerge## NewModel carModel; ##FSTMerge## NewModel carModel;
File path: /tmp/downloads/libgdx/revisions/rev_249d3_c2f92/rev_249d3-c2f92/tests/gdx-tests/src/com/badlogic/gdx/tests/g3d/BatchRenderTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 29e3b54290cc97e34363a270649e9d1e5ac03c0b
Parent1 SHA-1: 249d375bbb85e68e0a0deac40f26e80d7cdcea59
Parent2 SHA-1: c2f92ec6712126822d211b3c5e5052d6aee3be84
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ Model testModel; ##FSTMerge## NewModel testModel; ##FSTMerge## NewModel testModel;
File path: /tmp/downloads/libgdx/revisions/rev_249d3_c2f92/rev_249d3-c2f92/tests/gdx-tests/src/com/badlogic/gdx/tests/g3d/BatchRenderTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 29e3b54290cc97e34363a270649e9d1e5ac03c0b
Parent1 SHA-1: 249d375bbb85e68e0a0deac40f26e80d7cdcea59
Parent2 SHA-1: c2f92ec6712126822d211b3c5e5052d6aee3be84
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ Array<Model> cubes = new Array<Model>(); ##FSTMerge## Array<NewModel> cubes = new Array<NewModel>(); ##FSTMerge## Array<NewModel> cubes = new Array<NewModel>();
File path: /tmp/downloads/libgdx/revisions/rev_249d3_c2f92/rev_249d3-c2f92/tests/gdx-tests/src/com/badlogic/gdx/tests/g3d/BatchRenderTest.java
############## CONFLICT ##############
Conflict type: EditSameFd
Merge Commit SHA-1: 29e3b54290cc97e34363a270649e9d1e5ac03c0b
Parent1 SHA-1: 249d375bbb85e68e0a0deac40f26e80d7cdcea59
Parent2 SHA-1: c2f92ec6712126822d211b3c5e5052d6aee3be84
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ ModelBatch renderBatch; ##FSTMerge## RenderBatch renderBatch; ##FSTMerge## RenderBatch renderBatch;
File path: /tmp/downloads/libgdx/revisions/rev_249d3_c2f92/rev_249d3-c2f92/tests/gdx-tests/src/com/badlogic/gdx/tests/g3d/BatchRenderTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 29e3b54290cc97e34363a270649e9d1e5ac03c0b
Parent1 SHA-1: 249d375bbb85e68e0a0deac40f26e80d7cdcea59
Parent2 SHA-1: c2f92ec6712126822d211b3c5e5052d6aee3be84
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public void create () {
		TestShader.ignoreUnimplemented = true;
		
		final JsonModelLoader loader = new JsonModelLoader();

		// need more higher resolution textures for this test...
		String[] TEXTURES = {"data/badlogic.jpg", "data/egg.png", "data/particle-fire.png", "data/planet_earth.png", "data/planet_heavyclouds.jpg",
			"data/resource1.jpg", "data/stones.jpg", "data/sys.png", "data/wheel.png"};
		
		for (int i = 0; i < TEXTURE_COUNT; i++)
			textures.add(new Texture(Gdx.files.internal(TEXTURES[i%TEXTURES.length])));
		
		ObjLoader objLoader = new ObjLoader();
		sphereModel = objLoader.loadObj(Gdx.files.internal("data/sphere.obj"));
		sceneModel = objLoader.loadObj(Gdx.files.internal("data/scene.obj"));
		cubeModel = objLoader.loadObj(Gdx.files.internal("data/cube.obj"));
		carModel = objLoader.loadObj(Gdx.files.internal("data/car.obj"));
		testModel = new Model(loader.parseModel(Gdx.files.internal("data/g3d/head.g3dj"),  null));
		
		//StillSubMesh mesh = (StillSubMesh)(cubeModel.subMeshes[0]);
		for (int i = 0; i < textures.size; i++)
			cubes.add(cubeModel);
			// cubes.add(new InterimModel(new StillModel(new StillSubMesh(mesh.name, mesh.mesh, mesh.primitiveType, new Material("mat", new TextureAttribute(textures.get(i), 0, TextureAttribute.diffuseTexture))))));
		
		createScene2();
		
		cam = new PerspectiveCamera(67, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
		cam.near = 1f;
		cam.far = 100f;
		cam.position.set(10f, 10f, 10f);
		cam.lookAt(0, 0, 0);
		cam.update();
		
		renderBatch = new ModelBatch();
		
		lights = new Light[] {
			new Light(Color.WHITE, Vector3.tmp.set(-10f, 10f, -10f), 15f),
			new Light(Color.BLUE, Vector3.tmp.set(10f, 5f, 0f), 10f),
			new Light(Color.GREEN, Vector3.tmp.set(0f, 10f, 5f), 5f)
		};
		
		Gdx.input.setInputProcessor(this);
	} ##FSTMerge## @Override
	public void create () {
		final JsonModelLoader loader = new JsonModelLoader();

		// need more higher resolution textures for this test...
		String[] TEXTURES = {"data/badlogic.jpg", "data/egg.png", "data/particle-fire.png", "data/planet_earth.png", "data/planet_heavyclouds.jpg",
			"data/resource1.jpg", "data/stones.jpg", "data/sys.png", "data/wheel.png"};
		
		for (int i = 0; i < TEXTURE_COUNT; i++)
			textures.add(new Texture(Gdx.files.internal(TEXTURES[i%TEXTURES.length])));
		
		sphereModel = new InterimModel(ModelLoaderRegistry.loadStillModel(Gdx.files.internal("data/sphere.obj")));
		sceneModel = new InterimModel(ModelLoaderRegistry.loadStillModel(Gdx.files.internal("data/scene.obj")));
		cubeModel = ModelLoaderRegistry.loadStillModel(Gdx.files.internal("data/cube.obj"));
		carModel = new InterimModel(ModelLoaderRegistry.loadStillModel(Gdx.files.internal("data/car.obj")));
		testModel = new InterimModel(loader.load(Gdx.files.internal("data/g3d/test.g3dj"), null));
		
		StillSubMesh mesh = (StillSubMesh)(cubeModel.subMeshes[0]);
		for (int i = 0; i < textures.size; i++)
			cubes.add(new InterimModel(new StillModel(new StillSubMesh(mesh.name, mesh.mesh, mesh.primitiveType, new Material("mat", new TextureAttribute(textures.get(i), 0, TextureAttribute.diffuseTexture))))));
		
		createScene2();
		
		cam = new PerspectiveCamera(67, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
		cam.near = 1f;
		cam.far = 100f;
		cam.position.set(10f, 10f, 10f);
		cam.lookAt(0, 0, 0);
		cam.update();
		
		renderBatch = new RenderBatch();
		
		lights = new Light[] {
			new Light(Color.WHITE, Vector3.tmp.set(-10f, 10f, -10f), 15f),
			new Light(Color.BLUE, Vector3.tmp.set(10f, 5f, 0f), 10f),
			new Light(Color.GREEN, Vector3.tmp.set(0f, 10f, 5f), 5f)
		};
		
		Gdx.input.setInputProcessor(this);
	} ##FSTMerge## @Override
	public void create () {
		final JsonModelLoader loader = new JsonModelLoader();

		// need more higher resolution textures for this test...
		String[] TEXTURES = {"data/badlogic.jpg", "data/egg.png", "data/particle-fire.png", "data/planet_earth.png", "data/planet_heavyclouds.jpg",
			"data/resource1.jpg", "data/stones.jpg", "data/sys.png", "data/wheel.png"};
		
		for (int i = 0; i < TEXTURE_COUNT; i++)
			textures.add(new Texture(Gdx.files.internal(TEXTURES[i%TEXTURES.length])));
		
		sphereModel = new InterimModel(ModelLoaderRegistry.loadStillModel(Gdx.files.internal("data/sphere.obj")));
		sceneModel = new InterimModel(ModelLoaderRegistry.loadStillModel(Gdx.files.internal("data/scene.obj")));
		cubeModel = ModelLoaderRegistry.loadStillModel(Gdx.files.internal("data/cube.obj"));
		carModel = new InterimModel(ModelLoaderRegistry.loadStillModel(Gdx.files.internal("data/car.obj")));
		testModel = new InterimModel(loader.load(Gdx.files.internal("data/g3d/test.g3dj"), null));
		
		StillSubMesh mesh = (StillSubMesh)(cubeModel.subMeshes[0]);
		for (int i = 0; i < textures.size; i++)
			cubes.add(new InterimModel(new StillModel(new StillSubMesh(mesh.name, mesh.mesh, mesh.primitiveType, new Material("mat", new TextureAttribute(textures.get(i), 0, TextureAttribute.diffuseTexture))))));
		
		createScene2();
		
		cam = new PerspectiveCamera(67, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
		cam.near = 1f;
		cam.far = 100f;
		cam.position.set(10f, 10f, 10f);
		cam.lookAt(0, 0, 0);
		cam.update();
		
		renderBatch = new RenderBatch();
		
		lights = new Light[] {
			new Light(Color.WHITE, Vector3.tmp.set(-10f, 10f, -10f), 15f),
			new Light(Color.BLUE, Vector3.tmp.set(10f, 5f, 0f), 10f),
			new Light(Color.GREEN, Vector3.tmp.set(0f, 10f, 5f), 5f)
		};
		
		Gdx.input.setInputProcessor(this);
	}
File path: /tmp/downloads/libgdx/revisions/rev_249d3_c2f92/rev_249d3-c2f92/tests/gdx-tests/src/com/badlogic/gdx/tests/g3d/BatchRenderTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 29e3b54290cc97e34363a270649e9d1e5ac03c0b
Parent1 SHA-1: 249d375bbb85e68e0a0deac40f26e80d7cdcea59
Parent2 SHA-1: c2f92ec6712126822d211b3c5e5052d6aee3be84
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ @Override
	public void render () {
		if ((dbgTimer += Gdx.graphics.getDeltaTime()) >= 1f) {
			dbgTimer -= 1f;
			// Gdx.app.log("Test", "FPS: "+Gdx.graphics.getFramesPerSecond()+", binds: "+exclusiveTextures.getBindCount()+", reused: "+exclusiveTextures.getReuseCount());
			// exclusiveTextures.resetCounts();
		}
		GL20 gl = Gdx.gl20;
		gl.glViewport(0, 0, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
		Gdx.gl.glClearColor(0, 0, 0, 0);
		gl.glClear(GL10.GL_COLOR_BUFFER_BIT | GL10.GL_DEPTH_BUFFER_BIT);
		Gdx.gl.glDisable(GL20.GL_CULL_FACE);
		
		renderBatch.begin(cam);
		for (int i = 0; i < instances.size; i++) {
			if (instances.get(i).model == null)
				Gdx.app.log("Test", "Model "+i+" is null");
			else
				renderBatch.addModel(instances.get(i).model, instances.get(i).transform, lights);
		}
		renderBatch.end();		
	} ##FSTMerge## @Override
	public void render () {
		if ((dbgTimer += Gdx.graphics.getDeltaTime()) >= 1f) {
			dbgTimer -= 1f;
			Gdx.app.log("Test", "FPS: "+Gdx.graphics.getFramesPerSecond()+", binds: "+exclusiveTextures.getBindCount()+", reused: "+exclusiveTextures.getReuseCount());
			exclusiveTextures.resetCounts();
		}
		GL20 gl = Gdx.gl20;
		gl.glViewport(0, 0, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
		Gdx.gl.glClearColor(0, 0, 0, 0);
		gl.glClear(GL10.GL_COLOR_BUFFER_BIT | GL10.GL_DEPTH_BUFFER_BIT);
		Gdx.gl.glDisable(GL20.GL_CULL_FACE);
		
		renderBatch.begin(cam);
		for (int i = 0; i < instances.size; i++)
			renderBatch.addModel(instances.get(i).model, instances.get(i).transform, lights);
		renderBatch.end();		
	} ##FSTMerge## @Override
	public void render () {
		if ((dbgTimer += Gdx.graphics.getDeltaTime()) >= 1f) {
			dbgTimer -= 1f;
			Gdx.app.log("Test", "FPS: "+Gdx.graphics.getFramesPerSecond()+", binds: "+exclusiveTextures.getBindCount()+", reused: "+exclusiveTextures.getReuseCount());
			exclusiveTextures.resetCounts();
		}
		GL20 gl = Gdx.gl20;
		gl.glViewport(0, 0, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
		Gdx.gl.glClearColor(0, 0, 0, 0);
		gl.glClear(GL10.GL_COLOR_BUFFER_BIT | GL10.GL_DEPTH_BUFFER_BIT);
		Gdx.gl.glDisable(GL20.GL_CULL_FACE);
		
		renderBatch.begin(cam);
		for (int i = 0; i < instances.size; i++)
			renderBatch.render(instances.get(i).model, instances.get(i).transform, lights);
		renderBatch.end();		
	}
File path: /tmp/downloads/libgdx/revisions/rev_249d3_c2f92/rev_249d3-c2f92/tests/gdx-tests/src/com/badlogic/gdx/tests/g3d/BatchRenderTest.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 29e3b54290cc97e34363a270649e9d1e5ac03c0b
Parent1 SHA-1: 249d375bbb85e68e0a0deac40f26e80d7cdcea59
Parent2 SHA-1: c2f92ec6712126822d211b3c5e5052d6aee3be84
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public TestShader(final String vertexShader, final String fragmentShader, final long mask) {
		String prefix = "";
		this.mask = mask;
		
		if (!ignoreUnimplemented && (implementedFlags & mask) != mask)
			throw new GdxRuntimeException("Some attributes not implemented yet ("+mask+")");
		
		if (lightsCount > 0)
			prefix += "#define lightsCount "+lightsCount+"\n";
		if ((mask & BlendingAttribute.Type) == BlendingAttribute.Type)
			prefix += "#define "+BlendingAttribute.Alias+"Flag\n";
		if ((mask & TextureAttribute.Diffuse) == TextureAttribute.Diffuse)
			prefix += "#define "+TextureAttribute.DiffuseAlias+"Flag\n";
		if ((mask & ColorAttribute.Diffuse) == ColorAttribute.Diffuse)
			prefix += "#define "+ColorAttribute.DiffuseAlias+"Flag\n";

		program = new ShaderProgram(prefix + vertexShader, prefix + fragmentShader);
		if (!program.isCompiled())
			throw new GdxRuntimeException(program.getLog());
		
		projTransLoc = program.getUniformLocation(PROJECTION_TRANSFORM);
		modelTransLoc = program.getUniformLocation(MODEL_TRANSFORM);
		normalTransLoc = program.getUniformLocation(NORMAL_TRANSFORM);
		diffuseTextureLoc = ((mask & TextureAttribute.Diffuse) != TextureAttribute.Diffuse) ? -1 : program.getUniformLocation(TextureAttribute.DiffuseAlias);
		diffuseColorLoc = ((mask & ColorAttribute.Diffuse) != ColorAttribute.Diffuse) ? -1 : program.getUniformLocation(ColorAttribute.DiffuseAlias);
		lightsLoc = lightsCount > 0 ? program.getUniformLocation("lights[0].color") : -1;
		lightSize = (lightsLoc >= 0 && lightsCount > 1) ? (program.getUniformLocation("lights[1].color") - lightsLoc) : -1;
		lightPositionOffset = lightsLoc >= 0 ? program.getUniformLocation("lights[0].position") - lightsLoc : -1;
		lightPowerOffset = lightsLoc >= 0 ? program.getUniformLocation("lights[0].power") - lightsLoc : -1;
	} ##FSTMerge## public TestShader(final String vertexShader, final String fragmentShader, final long mask) {
		String prefix = "";
		this.mask = mask;
		
		if (!ignoreUnimplemented && (implementedFlags & mask) != mask)
			throw new GdxRuntimeException("Some attributes not implemented yet ("+mask+")");
		
		if (lightsCount > 0)
			prefix += "#define lightsCount "+lightsCount+"\n";
		if ((mask & BlendingAttribute.Type) == BlendingAttribute.Type)
			prefix += "#define "+BlendingAttribute.Alias+"Flag\n";
		if ((mask & TextureAttribute.Diffuse) == TextureAttribute.Diffuse)
			prefix += "#define "+TextureAttribute.DiffuseAlias+"Flag\n";
		if ((mask & ColorAttribute.Diffuse) == ColorAttribute.Diffuse)
			prefix += "#define "+ColorAttribute.DiffuseAlias+"Flag\n";
		
		program = new ShaderProgram(prefix + vertexShader, prefix + fragmentShader);
		if (!program.isCompiled())
			throw new GdxRuntimeException(program.getLog());
		
		projTransLoc = program.getUniformLocation(PROJECTION_TRANSFORM);
		modelTransLoc = program.getUniformLocation(MODEL_TRANSFORM);
		normalTransLoc = program.getUniformLocation(NORMAL_TRANSFORM);
		diffuseTextureLoc = ((mask & TextureAttribute.Diffuse) != TextureAttribute.Diffuse) ? -1 : program.getUniformLocation(TextureAttribute.DiffuseAlias);
		diffuseColorLoc = ((mask & ColorAttribute.Diffuse) != ColorAttribute.Diffuse) ? -1 : program.getUniformLocation(ColorAttribute.DiffuseAlias);
		lightsLoc = lightsCount > 0 ? program.getUniformLocation("lights[0].color") : -1;
		lightSize = (lightsLoc >= 0 && lightsCount > 1) ? (program.getUniformLocation("lights[1].color") - lightsLoc) : -1;
		lightPositionOffset = lightsLoc >= 0 ? program.getUniformLocation("lights[0].position") - lightsLoc : -1;
		lightPowerOffset = lightsLoc >= 0 ? program.getUniformLocation("lights[0].power") - lightsLoc : -1;
	} ##FSTMerge## public TestShader(final String vertexShader, final String fragmentShader, final long mask) {
		String prefix = "";
		this.mask = mask;
		
		if (!ignoreUnimplemented && (implementedFlags & mask) != mask)
			throw new GdxRuntimeException("Some attributes not implemented yet ("+mask+")");
		
		if (lightsCount > 0)
			prefix += "#define lightsCount "+lightsCount+"\n";
		if ((mask & BlendingAttribute.Type) == BlendingAttribute.Type)
			prefix += "#define "+BlendingAttribute.Alias+"Flag\n";
		if ((mask & TextureAttribute.Diffuse) == TextureAttribute.Diffuse)
			prefix += "#define "+TextureAttribute.DiffuseAlias+"Flag\n";
		if ((mask & ColorAttribute.Diffuse) == ColorAttribute.Diffuse)
			prefix += "#define "+ColorAttribute.DiffuseAlias+"Flag\n";
		
		program = new ShaderProgram(prefix + vertexShader, prefix + fragmentShader);
		if (!program.isCompiled())
			throw new GdxRuntimeException(program.getLog());
		
		projTransLoc = program.getUniformLocation(PROJECTION_TRANSFORM);
		modelTransLoc = program.getUniformLocation(MODEL_TRANSFORM);
		normalTransLoc = program.getUniformLocation(NORMAL_TRANSFORM);
		diffuseTextureLoc = ((mask & TextureAttribute.Diffuse) != TextureAttribute.Diffuse) ? -1 : program.getUniformLocation(TextureAttribute.DiffuseAlias);
		diffuseColorLoc = ((mask & ColorAttribute.Diffuse) != ColorAttribute.Diffuse) ? -1 : program.getUniformLocation(ColorAttribute.DiffuseAlias);
		lightsLoc = lightsCount > 0 ? program.getUniformLocation("lights[0].color") : -1;
		lightSize = (lightsLoc >= 0 && lightsCount > 1) ? (program.getUniformLocation("lights[1].color") - lightsLoc) : -1;
		lightPositionOffset = lightsLoc >= 0 ? program.getUniformLocation("lights[0].position") - lightsLoc : -1;
		lightPowerOffset = lightsLoc >= 0 ? program.getUniformLocation("lights[0].power") - lightsLoc : -1;
	}
File path: /tmp/downloads/libgdx/revisions/rev_249d3_c2f92/rev_249d3-c2f92/gdx/src/com/badlogic/gdx/graphics/g3d/test/TestShader.java
############## CONFLICT ##############
Conflict type: EditSameMC
Merge Commit SHA-1: 29e3b54290cc97e34363a270649e9d1e5ac03c0b
Parent1 SHA-1: 249d375bbb85e68e0a0deac40f26e80d7cdcea59
Parent2 SHA-1: c2f92ec6712126822d211b3c5e5052d6aee3be84
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
Conflict body: 
~~FSTMerge~~ public void addModel(final Model model, final Matrix4 transform, final Light[] lights, final Shader shader) {
		int offset = renderables.size;
		model.getRenderables(renderables, renderablesPool);
		for (int i = offset; i < renderables.size; i++) {
			Renderable renderable = renderables.get(i);
			renderable.lights = lights;
			renderable.shader = shader;
			renderable.transform.set(transform);
//			renderable.transform; FIXME multiply transform!
			reuseableRenderables.add(renderable);
		}
	} ##FSTMerge## public void addModel(final Model model, final Matrix4 transform, final Light[] lights, final Shader shader) {
		int offset = renderables.size;
		model.getRenderables(renderables, renderablesPool);
		for (int i = offset; i < renderables.size; i++) {
			Renderable renderable = renderables.get(i);
			renderable.lights = lights;
			renderable.shader = shader;
			renderable.shader = shader;
//			renderable.transform; FIXME multiply transform!
			reuseableRenderables.add(renderable);
		}
	} ##FSTMerge##
File path: /tmp/downloads/libgdx/revisions/rev_249d3_c2f92/rev_249d3-c2f92/gdx/src/com/badlogic/gdx/graphics/g3d/ModelBatch.java

=========================================================