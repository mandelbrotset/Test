diff --git a/.gitignore b/.gitignore
index 6302018..a163f5d 100644
--- a/.gitignore
+++ b/.gitignore
@@ -2,42 +2,212 @@
 *~
 .*.swp
 .DS_STORE
+*.mdb
+# per project ignores, it's cumbersome, but reduces the risk of missing something
 
-bin/
-target/
-obj/
-.gwt/
-gwt-unitCache/
-war/
-gen/
-armeabi/
-armeabi-v7a/
-linux32/
-linux64/
-windows32/
-windows64/
-macosx32/
-ios32/
-Debug/
-Release/
-x64/
-ipch/
-/dist
+# target directories:
+/backends/gdx-backend-android/target/
+/backends/gdx-backends-gwt/target/
+/extensions/gdx-audio/target/
+/extensions/gdx-freetype/target/
+/extensions/gdx-image/target/
+/extensions/gdx-tiled-preprocessor/target/
+/extensions/gdx-tools/target/
+/extensions/gdx-bullet/target/
 
-*.a
-*.dll
-*.dll.mdb
-*.userprefs
-*.sdf
-*.class
+/backends/gdx-backend-android/bin
+/backends/gdx-backend-iosmonotouch/bin
+/backends/gdx-backend-iosmonotouch/libs/gdx-backend-ios.*
+/backends/gdx-backend-iosmonotouch/libs/gdx.*
+/backends/gdx-backend-iosmonotouch/libs/libgdx.a
+/backends/gdx-backend-iosmonotouch/mono/mono.userprefs
+/backends/gdx-backend-iosmonotouch/mono/mono/bin
+/backends/gdx-backend-iosmonotouch/mono/mono/obj
+/backends/gdx-backend-iosmonotouch/natives/build
+/backends/gdx-backend-iosmonotouch/target/
 
-libgdx-*.zip
+/backends/gdx-backend-jogl/bin
+
+/backends/gdx-backend-lwjgl/bin
+/backends/gdx-backend-lwjgl/target
+
+/backends/gdx-backends-gwt/.gwt
+/backends/gdx-backends-gwt/gwt-unitCache
+/backends/gdx-backends-gwt/war
+
+/backends/gdx-openal/bin
+/backends/gdx-openal/target
+
+/demos/cuboc/cuboc-android/bin
+/demos/cuboc/cuboc-android/gen
+/demos/cuboc/cuboc-html/.gwt
+/demos/cuboc/cuboc-html/gwt-unitCache
+/demos/cuboc/cuboc-html/war
+/demos/cuboc/cuboc/bin
+
+/demos/invaders/gdx-invaders-android/bin
+/demos/invaders/gdx-invaders-android/gen
+/demos/invaders/gdx-invaders-html5/.gwt
+/demos/invaders/gdx-invaders-html5/gwt-unitCache
+/demos/invaders/gdx-invaders-html5/war
+/demos/invaders/gdx-invaders/bin
+/demos/invaders/gdx-invaders-ios/gdx-invaders-ios/bin
+/demos/invaders/gdx-invaders-ios/gdx-invaders-ios/obj
+/demos/invaders/gdx-invaders-ios/gdx-invaders-ios/target
+/demos/invaders/gdx-invaders-ios/gdx-invaders-ios/invaders.dll
+
+/demos/metagun/metagun-android/bin
+/demos/metagun/metagun-android/gen
+/demos/metagun/metagun-desktop/bin
+
+/demos/superjumper/superjumper-android/bin
+/demos/superjumper/superjumper-android/gen
+/demos/superjumper/superjumper-html/.gwt
+/demos/superjumper/superjumper-html/gwt-unitCache
+/demos/superjumper/superjumper-html/war
+/demos/superjumper/superjumper/bin
+/demos/superjumper/superjumper-ios/superjumper-ios/bin
+/demos/superjumper/superjumper-ios/superjumper-ios/obj
+/demos/superjumper/superjumper-ios/superjumper-ios/target
+/demos/superjumper/superjumper-ios/superjumper-ios/superjumper.dll
+
+/demos/vector-pinball/gdx-vectorpinball-android/bin
+/demos/vector-pinball/gdx-vectorpinball-android/gen
+/demos/vector-pinball/gdx-vectorpinball-html5/.gwt
+/demos/vector-pinball/gdx-vectorpinball-html5/gwt-unitCache
+/demos/vector-pinball/gdx-vectorpinball-html5/war
+/demos/vector-pinball/gdx-vectorpinball/bin
+/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/bin
+/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/obj
+/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/target
+/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/vectorpinball.dll
+
+/demos/very-angry-robots/very-angry-robots-android/bin
+/demos/very-angry-robots/very-angry-robots-android/gen
+/demos/very-angry-robots/very-angry-robots/bin
+
+/demos/pax-britannica/pax-britannica-android/bin
+/demos/pax-britannica/pax-britannica-android/gen
+/demos/pax-britannica/pax-britannica-html/.gwt
+/demos/pax-britannica/pax-britannica-html/gwt-unitCache
+/demos/pax-britannica/pax-britannica-html/war
+/demos/pax-britannica/pax-britannica/bin
+/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch/bin
+/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch/obj
+/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch/target
+/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch/paxbritannica.dll
+
+/extensions/gdx-jnigen/target
+
+/extensions/gdx-audio/bin
+/extensions/gdx-audio/jni/target
+/extensions/gdx-audio/libs/armeabi
+/extensions/gdx-audio/libs/armeabi-v7a
+/extensions/gdx-audio/libs/linux32
+/extensions/gdx-audio/libs/linux64
+/extensions/gdx-audio/libs/windows32
+/extensions/gdx-audio/libs/windows64
+
+/extensions/gdx-bullet/bin
+/extensions/gdx-bullet/jni/target
+/extensions/gdx-bullet/obj/local
+/extensions/gdx-bullet/libs/armeabi
+/extensions/gdx-bullet/libs/armeabi-v7a
+/extensions/gdx-bullet/libs/linux32
+/extensions/gdx-bullet/libs/linux64
+/extensions/gdx-bullet/libs/windows32
+/extensions/gdx-bullet/libs/windows64
+/extensions/gdx-bullet/jni/vs/gdxBullet/gdxBullet.sdf
+/extensions/gdx-bullet/jni/vs/gdxBullet/x64
+/extensions/gdx-bullet/jni/vs/gdxBullet/Debug
+/extensions/gdx-bullet/jni/vs/gdxBullet/ipch
+/extensions/gdx-bullet/jni/vs/gdxBullet/gdxBullet/Debug
+/extensions/gdx-bullet/jni/vs/gdxBullet/gdxBullet/x64
+
+/extensions/gdx-freetype/bin
+/extensions/gdx-freetype/jni/target
+/extensions/gdx-freetype/libs/armeabi
+/extensions/gdx-freetype/libs/armeabi-v7a
+/extensions/gdx-freetype/libs/linux32
+/extensions/gdx-freetype/libs/linux64
+/extensions/gdx-freetype/libs/windows32
+/extensions/gdx-freetype/libs/windows64
+
+/extensions/gdx-image/bin
+/extensions/gdx-image/jni/target
+/extensions/gdx-image/libs/armeabi
+/extensions/gdx-image/libs/armeabi-v7a
+/extensions/gdx-image/libs/linux32
+/extensions/gdx-image/libs/linux64
+/extensions/gdx-image/libs/windows32
+/extensions/gdx-image/libs/windows64
+
+/extensions/gdx-jnigen/bin
 
-#core & extension libs/ folders that have no 3rd party dependencies in them
-/gdx/libs
-/backends/gdx-backend-jglfw/libs/
-/extensions/gdx-audio/libs/
-/extensions/gdx-bullet/libs/
-/extensions/gdx-controllers/gdx-controllers-desktop/libs/
-/extensions/gdx-freetype/libs/
-/extensions/gdx-image/libs/
+/extensions/gdx-remote/bin
+/extensions/gdx-remote/gen
+
+/extensions/gdx-setup-ui/bin
+
+/extensions/gdx-tiled-preprocessor/bin
+
+/extensions/gdx-tokamak/bin
+/extensions/gdx-tokamak/libs/armeabi
+/extensions/gdx-tokamak/libs/armeabi-v7a
+/extensions/gdx-tokamak/libs/linux32
+/extensions/gdx-tokamak/libs/linux64
+/extensions/gdx-tokamak/libs/windows32
+/extensions/gdx-tokamak/libs/windows64
+
+/extensions/gdx-tools/bin
+
+/extensions/model-loaders/model-loaders-android/bin
+/extensions/model-loaders/model-loaders-android/gen
+/extensions/model-loaders/model-loaders/bin
+
+/extensions/gdx-controllers/gdx-controllers/bin
+/extensions/gdx-controllers/gdx-controllers/target
+/extensions/gdx-controllers/gdx-controllers-desktop/bin
+/extensions/gdx-controllers/gdx-controllers-desktop/target
+/extensions/gdx-controllers/gdx-controllers-desktop/jni/target
+/extensions/gdx-controllers/gdx-controllers-desktop/libs/windows32
+/extensions/gdx-controllers/gdx-controllers-desktop/libs/windows64
+/extensions/gdx-controllers/gdx-controllers-desktop/libs/linux32
+/extensions/gdx-controllers/gdx-controllers-desktop/libs/linux64
+/extensions/gdx-controllers/gdx-controllers-desktop/libs/macosx32
+/extensions/gdx-controllers/gdx-controllers-android/bin
+/extensions/gdx-controllers/gdx-controllers-android/target
+/extensions/gdx-controllers/gdx-controllers-gwt/bin
+/extensions/gdx-controllers/gdx-controllers-gwt/target
+
+/gdx/target
+/gdx/obj
+/gdx/bin
+/gdx/libs/armeabi
+/gdx/libs/armeabi-v7a
+/gdx/libs/linux32
+/gdx/libs/linux64
+/gdx/libs/windows32
+/gdx/libs/windows64
+
+/tests/gdx-tests-android/bin
+/tests/gdx-tests-android/gen
+
+/tests/gdx-tests-gwt/.gwt
+/tests/gdx-tests-gwt/gwt-unitCache
+/tests/gdx-tests-gwt/war
+
+/tests/gdx-tests-iosmonotouch/gdx-tests-iosmonotouch/bin
+/tests/gdx-tests-iosmonotouch/gdx-tests-iosmonotouch/target
+/tests/gdx-tests-iosmonotouch/gdx-tests-iosmonotouch/obj
+/tests/gdx-tests-iosmonotouch/gdx-tests-iosmonotouch/gdx-tests.dll
+
+/tests/gdx-tests-jogl/bin
+
+/tests/gdx-tests-lwjgl/bin
+
+/tests/gdx-tests/bin
+
+/dist
+
+libgdx-*.zip
diff --git a/CHANGES b/CHANGES
deleted file mode 100644
index 12125eb..0000000
--- a/CHANGES
+++ /dev/null
@@ -1,20 +0,0 @@
-[0.9.9]
-- TmxMapLoader has a flag in Parameters that lets you specify whether to generate mipmaps
-- Animation#isAnimationFinished was fixed to behave as per javadocs (ignores looping)
-- remove GLU interface and implementations. Use Matrix4 et al instead. see http://www.badlogicgames.com/wordpress/?p=2886
-- new maps API, see http://www.badlogicgames.com/wordpress/?p=2870
-- removed static public tmp Vector2 instances, manage such temporary vars yourself, see http://www.badlogicgames.com/wordpress/?p=2840
-- changed Scene2D Group#clear(), see http://www.badlogicgames.com/wordpress/?p=2837
-- changed the build system, natives are now fetched from the build server, see http://www.badlogicgames.com/wordpress/?p=2821
-- freetype extension supported on iOS, see http://www.badlogicgames.com/wordpress/?p=2819
-- changed ShapeRenderer API, see http://www.badlogicgames.com/wordpress/?p=2809
-- changed Actions.add to addAction, changed parameter order, and added removeAction, addListener, removeListener
-
-[0.9.8]
-- see http://www.badlogicgames.com/wordpress/?p=2664
-
-[0.9.7]
-- see http://www.badlogicgames.com/wordpress/?p=2664
-
-[0.9.6]
-- see http://www.badlogicgames.com/wordpress/?p=2513
diff --git a/CLA.txt b/CLA.txt
index 48835c7..3cb2c41 100644
--- a/CLA.txt
+++ b/CLA.txt
@@ -11,7 +11,7 @@ not change your rights to use your own Contributions for any other purpose.
 If you have not already done so, please complete and sign, then scan and 
 email a pdf file of this Agreement to contact@badlogicgames.com. If 
 necessary, send an original signed Agreement to
-Mario Zechner, Engelsdorferstrasse 35. 8041 Graz, Styria, Austria.
+Mario Zechner, Dr. Robert Graf Strasse 17. 8010, Graz, Styria, Austria.
 Please read this document carefully before signing and keep a copy for your records.
 
   Full name: ______________________________________________________
@@ -128,4 +128,4 @@ and interest in and to Your Contributions.
    inaccurate in any respect.
 
 
-Please sign: __________________________________ Date: ________________
+Please sign: __________________________________ Date: ________________
\ No newline at end of file
diff --git a/README.md b/README.md
index 9958785..d9d14b9 100644
--- a/README.md
+++ b/README.md
@@ -2,45 +2,38 @@
 
 Libgdx is a cross-platform Java game development framework based on 
 OpenGL (ES) that works on Windows, Linux, Mac OS X, Android, your
-WebGL enabled browser and iOS.
+WebGL enabled browser and soon iOS.
 
-#### Learn [how to contribute][B]
-#### The [Libgdx Official Site][1] hosts downloads, documentation and contains useful links
-#### The [community-maintained wiki][4] hosted at Google Code will explain much of Libgdx
-#### Use the [Badlogic Forum][5] to ask questions about Libgdx
-#### Follow the [Badlogic Blog][2] for the latest Libgdx news
-#### Use the [Issue Tracker][3] to post concrete bug reports (with a pull request if possible)
-#### Chat with us on IRC at irc.freenode.net, #libgdx
-#### Follow [@badlogicgames][6] on Twitter
+#### [Official Site][1]
+#### [Issues Tracker (Google Code)][3], include a link to your pull request if applicable
+#### [Wiki (Google Code)][4]
 
-## Compiling the Code
+#### [Forum][5] Come here to ask questions about Libgdx
+#### Join us on irc.freenode.net, #libgdx
+#### Follow us on Twitter [@badlogicgames][6]
+#### Follow our [blog][2] for the latest updates
 
-Be sure to understand the [prerequisites][7] required for Libgdx.
+## Compiling the Code
 
-See [Running Demos &
-Tests][8] for
-instructions on getting the basics working with the source tree.
+This project has a few [prerequisites][7] but primarily uses the ant build tool. If you wish to compile the code then just check it out and:
 
-See the [Source Building wiki page][9] for instructions on building
-native code and building distribution images.
+    cd /path/to/libgdx
+    ant
 
-You do not have to compile Libgdx, you can [download][A] official
-releases and nightly build snapshots from [libgdx.badlogicgames.com][A].
+And it should compile.
 
-## Libgdx Usage Examples
+## Examples
 
-There are a number of example games included in the source. Some of them include:
+There are a number of example games in the source. Some of them include:
 
  - metagun
  - superjumper
  - gdx-vertorpinball
  - rtm
  - very angry robots
- - pax-britannica
 
 To see how to use libgdx you can either go to the [wiki][4] (which has plenty of good information) or read through
-these example projects.  The test cases in `tests/gdx-tests/` are another good source of sample code.
-Once again, if you get stuck just drop in to the friendly [forums][5].
+these example projects. Once again, if you get stuck just drop in to the friendly [forums][5].
 
  [1]: http://libgdx.badlogicgames.com
  [2]: http://www.badlogicgames.com
@@ -49,7 +42,3 @@ Once again, if you get stuck just drop in to the friendly [forums][5].
  [5]: http://www.badlogicgames.com/forum
  [6]: http://www.twitter.com/badlogicgames
  [7]: http://code.google.com/p/libgdx/wiki/Prerequisits
- [8]: http://code.google.com/p/libgdx/wiki/SourceRunningDemos
- [9]: http://code.google.com/p/libgdx/wiki/SourceBuilding
- [A]: http://libgdx.badlogicgames.com/download.html
- [B]: https://code.google.com/p/libgdx/wiki/Contributing?ts=1363359071&updated=Contributing
diff --git a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidApplication.java b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidApplication.java
index b46c56f..8687f32 100644
--- a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidApplication.java
+++ b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidApplication.java
@@ -265,26 +265,25 @@ public class AndroidApplication extends Activity implements Application {
 		super.onDestroy();
 	}
 
-	@Override
-	public ApplicationListener getApplicationListener () {
-		return listener;
-	}
-	
+	/** {@inheritDoc} */
 	@Override
 	public Audio getAudio () {
 		return audio;
 	}
 
+	/** {@inheritDoc} */
 	@Override
 	public Files getFiles () {
 		return files;
 	}
 
+	/** {@inheritDoc} */
 	@Override
 	public Graphics getGraphics () {
 		return graphics;
 	}
 
+	/** {@inheritDoc} */
 	@Override
 	public Input getInput () {
 		return input;
@@ -295,11 +294,13 @@ public class AndroidApplication extends Activity implements Application {
 		return net;
 	}
 
+	/** {@inheritDoc} */
 	@Override
 	public ApplicationType getType () {
 		return ApplicationType.Android;
 	}
 
+	/** {@inheritDoc} */
 	@Override
 	public int getVersion () {
 		return Integer.parseInt(android.os.Build.VERSION.SDK);
diff --git a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidDaydream.java b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidDaydream.java
index 256bfda..8cf3082 100644
--- a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidDaydream.java
+++ b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidDaydream.java
@@ -51,7 +51,7 @@ import com.badlogic.gdx.utils.Clipboard;
 import com.badlogic.gdx.utils.GdxNativesLoader;
 
 /** An implementation of the {@link Application} interface for Android. Create an {@link Activity} that derives from this class. In
- * the Activity#onCreate(Bundle) method call the {@link #initialize(ApplicationListener, boolean)} method specifying the
+ * the {@link Activity#onCreate(Bundle)} method call the {@link #initialize(ApplicationListener, boolean)} method specifying the
  * configuration for the GLSurfaceView.
  * 
  * @author mzechner */
@@ -74,11 +74,11 @@ public class AndroidDaydream extends DreamService implements Application {
 	protected WakeLock wakeLock = null;
 	protected int logLevel = LOG_INFO;
 
-	/** This method has to be called in the Activity#onCreate(Bundle) method. It sets up all the things necessary to get input,
-	 * render via OpenGL and so on. If useGL20IfAvailable is set the AndroidApplication will try to create an OpenGL ES 2.0 context
-	 * which can then be used via {@link Graphics#getGL20()}. The {@link GL10} and {@link GL11} interfaces should not be used when
-	 * OpenGL ES 2.0 is enabled. To query whether enabling OpenGL ES 2.0 was successful use the {@link Graphics#isGL20Available()}
-	 * method. Uses a default {@link AndroidApplicationConfiguration}.
+	/** This method has to be called in the {@link Activity#onCreate(Bundle)} method. It sets up all the things necessary to get
+	 * input, render via OpenGL and so on. If useGL20IfAvailable is set the AndroidApplication will try to create an OpenGL ES 2.0
+	 * context which can then be used via {@link Graphics#getGL20()}. The {@link GL10} and {@link GL11} interfaces should not be
+	 * used when OpenGL ES 2.0 is enabled. To query whether enabling OpenGL ES 2.0 was successful use the
+	 * {@link Graphics#isGL20Available()} method. Uses a default {@link AndroidApplicationConfiguration}.
 	 * 
 	 * @param listener the {@link ApplicationListener} implementing the program logic
 	 * @param useGL2IfAvailable whether to use OpenGL ES 2.0 if its available. */
@@ -88,12 +88,12 @@ public class AndroidDaydream extends DreamService implements Application {
 		initialize(listener, config);
 	}
 
-	/** This method has to be called in the Activity#onCreate(Bundle) method. It sets up all the things necessary to get input,
-	 * render via OpenGL and so on. If config.useGL20 is set the AndroidApplication will try to create an OpenGL ES 2.0 context
-	 * which can then be used via {@link Graphics#getGL20()}. The {@link GL10} and {@link GL11} interfaces should not be used when
-	 * OpenGL ES 2.0 is enabled. To query whether enabling OpenGL ES 2.0 was successful use the {@link Graphics#isGL20Available()}
-	 * method. You can configure other aspects of the application with the rest of the fields in the
-	 * {@link AndroidApplicationConfiguration} instance.
+	/** This method has to be called in the {@link Activity#onCreate(Bundle)} method. It sets up all the things necessary to get
+	 * input, render via OpenGL and so on. If config.useGL20 is set the AndroidApplication will try to create an OpenGL ES 2.0
+	 * context which can then be used via {@link Graphics#getGL20()}. The {@link GL10} and {@link GL11} interfaces should not be
+	 * used when OpenGL ES 2.0 is enabled. To query whether enabling OpenGL ES 2.0 was successful use the
+	 * {@link Graphics#isGL20Available()} method. You can configure other aspects of the application with the rest of the fields in
+	 * the {@link AndroidApplicationConfiguration} instance.
 	 * 
 	 * @param listener the {@link ApplicationListener} implementing the program logic
 	 * @param config the {@link AndroidApplicationConfiguration}, defining various settings of the application (use accelerometer,
@@ -104,7 +104,7 @@ public class AndroidDaydream extends DreamService implements Application {
 		input = AndroidInputFactory.newAndroidInput(this, this, graphics.view, config);
 		audio = new AndroidAudio(this, config);
 		files = new AndroidFiles(this.getAssets(), this.getFilesDir().getAbsolutePath());
-		net = new AndroidNet(null);
+//		net = new AndroidNet(this);
 		this.listener = listener;
 		this.handler = new Handler();
 
@@ -116,7 +116,7 @@ public class AndroidDaydream extends DreamService implements Application {
 		Gdx.net = this.getNet();
 
 		setFullscreen(true);
-
+		
 		setContentView(graphics.getView(), createLayoutParams());
 		createWakeLock(config);
 		hideStatusBar(config);
@@ -137,7 +137,8 @@ public class AndroidDaydream extends DreamService implements Application {
 	}
 
 	protected void hideStatusBar (AndroidApplicationConfiguration config) {
-		if (!config.hideStatusBar || getVersion() < 11) return;
+		if (!config.hideStatusBar || getVersion() < 11)
+			return;
 
 		View rootView = getWindow().getDecorView();
 
@@ -150,11 +151,11 @@ public class AndroidDaydream extends DreamService implements Application {
 		}
 	}
 
-	/** This method has to be called in the Activity#onCreate(Bundle) method. It sets up all the things necessary to get input,
-	 * render via OpenGL and so on. If useGL20IfAvailable is set the AndroidApplication will try to create an OpenGL ES 2.0 context
-	 * which can then be used via {@link Graphics#getGL20()}. The {@link GL10} and {@link GL11} interfaces should not be used when
-	 * OpenGL ES 2.0 is enabled. To query whether enabling OpenGL ES 2.0 was successful use the {@link Graphics#isGL20Available()}
-	 * method. Uses a default {@link AndroidApplicationConfiguration}.
+	/** This method has to be called in the {@link Activity#onCreate(Bundle)} method. It sets up all the things necessary to get
+	 * input, render via OpenGL and so on. If useGL20IfAvailable is set the AndroidApplication will try to create an OpenGL ES 2.0
+	 * context which can then be used via {@link Graphics#getGL20()}. The {@link GL10} and {@link GL11} interfaces should not be
+	 * used when OpenGL ES 2.0 is enabled. To query whether enabling OpenGL ES 2.0 was successful use the
+	 * {@link Graphics#isGL20Available()} method. Uses a default {@link AndroidApplicationConfiguration}.
 	 * <p/>
 	 * Note: you have to add the returned view to your layout!
 	 * 
@@ -167,12 +168,12 @@ public class AndroidDaydream extends DreamService implements Application {
 		return initializeForView(listener, config);
 	}
 
-	/** This method has to be called in the Activity#onCreate(Bundle) method. It sets up all the things necessary to get input,
-	 * render via OpenGL and so on. If config.useGL20 is set the AndroidApplication will try to create an OpenGL ES 2.0 context
-	 * which can then be used via {@link Graphics#getGL20()}. The {@link GL10} and {@link GL11} interfaces should not be used when
-	 * OpenGL ES 2.0 is enabled. To query whether enabling OpenGL ES 2.0 was successful use the {@link Graphics#isGL20Available()}
-	 * method. You can configure other aspects of the application with the rest of the fields in the
-	 * {@link AndroidApplicationConfiguration} instance.
+	/** This method has to be called in the {@link Activity#onCreate(Bundle)} method. It sets up all the things necessary to get
+	 * input, render via OpenGL and so on. If config.useGL20 is set the AndroidApplication will try to create an OpenGL ES 2.0
+	 * context which can then be used via {@link Graphics#getGL20()}. The {@link GL10} and {@link GL11} interfaces should not be
+	 * used when OpenGL ES 2.0 is enabled. To query whether enabling OpenGL ES 2.0 was successful use the
+	 * {@link Graphics#isGL20Available()} method. You can configure other aspects of the application with the rest of the fields in
+	 * the {@link AndroidApplicationConfiguration} instance.
 	 * <p/>
 	 * Note: you have to add the returned view to your layout!
 	 * 
@@ -186,7 +187,7 @@ public class AndroidDaydream extends DreamService implements Application {
 		input = AndroidInputFactory.newAndroidInput(this, this, graphics.view, config);
 		audio = new AndroidAudio(this, config);
 		files = new AndroidFiles(this.getAssets(), this.getFilesDir().getAbsolutePath());
-		net = new AndroidNet(null);
+//		net = new AndroidNet(this);
 		this.listener = listener;
 		this.handler = new Handler();
 
@@ -252,45 +253,46 @@ public class AndroidDaydream extends DreamService implements Application {
 	}
 
 	@Override
-	public void onDetachedFromWindow () {
+	public void onDetachedFromWindow() {
 		super.onDetachedFromWindow();
 	}
 
-	@Override
-	public ApplicationListener getApplicationListener () {
-		return listener;
-	}
-
+	/** {@inheritDoc} */
 	@Override
 	public Audio getAudio () {
 		return audio;
 	}
 
+	/** {@inheritDoc} */
 	@Override
 	public Files getFiles () {
 		return files;
 	}
 
+	/** {@inheritDoc} */
 	@Override
 	public Graphics getGraphics () {
 		return graphics;
 	}
 
+	/** {@inheritDoc} */
 	@Override
 	public Input getInput () {
 		return input;
 	}
-
+	
 	@Override
 	public Net getNet () {
 		return net;
 	}
 
+	/** {@inheritDoc} */
 	@Override
 	public ApplicationType getType () {
 		return ApplicationType.Android;
 	}
 
+	/** {@inheritDoc} */
 	@Override
 	public int getVersion () {
 		return Integer.parseInt(android.os.Build.VERSION.SDK);
@@ -312,15 +314,15 @@ public class AndroidDaydream extends DreamService implements Application {
 	}
 
 	AndroidClipboard clipboard;
-
+	
 	@Override
-	public Clipboard getClipboard () {
+	public Clipboard getClipboard() {
 		if (clipboard == null) {
 			clipboard = new AndroidClipboard(this);
 		}
 		return clipboard;
 	}
-
+	
 	@Override
 	public void postRunnable (Runnable runnable) {
 		synchronized (runnables) {
@@ -385,18 +387,18 @@ public class AndroidDaydream extends DreamService implements Application {
 	public void setLogLevel (int logLevel) {
 		this.logLevel = logLevel;
 	}
-
+	
 	@Override
 	public void addLifecycleListener (LifecycleListener listener) {
-		synchronized (lifecycleListeners) {
+		synchronized(lifecycleListeners) {
 			lifecycleListeners.add(listener);
 		}
 	}
 
 	@Override
 	public void removeLifecycleListener (LifecycleListener listener) {
-		synchronized (lifecycleListeners) {
+		synchronized(lifecycleListeners) {
 			lifecycleListeners.removeValue(listener, true);
-		}
+		}		
 	}
-}
+}
\ No newline at end of file
diff --git a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidFileHandle.java b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidFileHandle.java
index b54c2b1..233316f 100644
--- a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidFileHandle.java
+++ b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidFileHandle.java
@@ -20,7 +20,6 @@ import java.io.File;
 import java.io.IOException;
 import java.io.InputStream;
 
-import android.content.res.AssetFileDescriptor;
 import android.content.res.AssetManager;
 
 import com.badlogic.gdx.Files.FileType;
@@ -114,7 +113,7 @@ public class AndroidFileHandle extends FileHandle {
 				throw new GdxRuntimeException("Error listing children: " + file + " (" + type + ")", ex);
 			}
 		}
-		return super.list(suffix);
+		return super.list();
 	}
 
 	public boolean isDirectory () {
@@ -148,15 +147,9 @@ public class AndroidFileHandle extends FileHandle {
 
 	public long length () {
 		if (type == FileType.Internal) {
-			AssetFileDescriptor fileDescriptor = null;
 			try {
-				fileDescriptor = assets.openFd(file.getPath());
-				return fileDescriptor.getLength();
+				return assets.openFd(file.getPath()).getLength();
 			} catch (IOException ignored) {
-			} finally {
-				if (fileDescriptor != null) {
-					try { fileDescriptor.close(); } catch(IOException e) { };
-				}
 			}
 		}
 		return super.length();
diff --git a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidGLU.java b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidGLU.java
new file mode 100644
index 0000000..bea7c5f
--- /dev/null
+++ b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidGLU.java
@@ -0,0 +1,56 @@
+/*******************************************************************************
+ * Copyright 2011 See AUTHORS file.
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/
+
+package com.badlogic.gdx.backends.android;
+
+import com.badlogic.gdx.graphics.GL10;
+import com.badlogic.gdx.graphics.GLU;
+
+public class AndroidGLU implements GLU {
+
+	@Override
+	public void gluLookAt (GL10 gl, float eyeX, float eyeY, float eyeZ, float centerX, float centerY, float centerZ, float upX,
+		float upY, float upZ) {
+		android.opengl.GLU.gluLookAt(((AndroidGL10)gl).gl, eyeX, eyeY, eyeZ, centerX, centerY, centerZ, upX, upY, upZ);
+	}
+
+	@Override
+	public void gluOrtho2D (GL10 gl, float left, float right, float bottom, float top) {
+		android.opengl.GLU.gluOrtho2D(((AndroidGL10)gl).gl, left, right, bottom, top);
+	}
+
+	@Override
+	public void gluPerspective (GL10 gl, float fovy, float aspect, float zNear, float zFar) {
+		android.opengl.GLU.gluPerspective(((AndroidGL10)gl).gl, fovy, aspect, zNear, zFar);
+	}
+
+	@Override
+	public boolean gluProject (float objX, float objY, float objZ, float[] model, int modelOffset, float[] project,
+		int projectOffset, int[] view, int viewOffset, float[] win, int winOffset) {
+		int result = android.opengl.GLU.gluProject(objX, objY, objZ, model, modelOffset, project, projectOffset, view, viewOffset,
+			win, winOffset);
+		return result == GL10.GL_TRUE;
+	}
+
+	@Override
+	public boolean gluUnProject (float winX, float winY, float winZ, float[] model, int modelOffset, float[] project,
+		int projectOffset, int[] view, int viewOffset, float[] obj, int objOffset) {
+		int result = android.opengl.GLU.gluUnProject(winX, winY, winZ, model, modelOffset, project, projectOffset, view,
+			viewOffset, obj, objOffset);
+		return result == GL10.GL_TRUE;
+	}
+
+}
diff --git a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidGraphics.java b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidGraphics.java
index 87be2ac..6738c65 100644
--- a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidGraphics.java
+++ b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidGraphics.java
@@ -16,19 +16,20 @@
 
 package com.badlogic.gdx.backends.android;
 
+import java.lang.reflect.Method;
+
+import javax.microedition.khronos.egl.EGL10;
+import javax.microedition.khronos.egl.EGLConfig;
+import javax.microedition.khronos.egl.EGLContext;
+import javax.microedition.khronos.egl.EGLDisplay;
+
 import android.app.Activity;
 import android.opengl.GLSurfaceView;
 import android.opengl.GLSurfaceView.EGLConfigChooser;
 import android.opengl.GLSurfaceView.Renderer;
-import android.os.SystemClock;
 import android.util.DisplayMetrics;
 import android.view.Display;
-import android.view.KeyCharacterMap;
-import android.view.KeyEvent;
 import android.view.View;
-import android.view.inputmethod.BaseInputConnection;
-import android.view.inputmethod.EditorInfo;
-import android.view.inputmethod.InputConnection;
 
 import com.badlogic.gdx.Gdx;
 import com.badlogic.gdx.Graphics;
@@ -41,6 +42,7 @@ import com.badlogic.gdx.graphics.GL10;
 import com.badlogic.gdx.graphics.GL11;
 import com.badlogic.gdx.graphics.GL20;
 import com.badlogic.gdx.graphics.GLCommon;
+import com.badlogic.gdx.graphics.GLU;
 import com.badlogic.gdx.graphics.Mesh;
 import com.badlogic.gdx.graphics.Texture;
 import com.badlogic.gdx.graphics.glutils.FrameBuffer;
@@ -48,13 +50,6 @@ import com.badlogic.gdx.graphics.glutils.ShaderProgram;
 import com.badlogic.gdx.math.WindowedMean;
 import com.badlogic.gdx.utils.Array;
 
-import java.lang.reflect.Method;
-
-import javax.microedition.khronos.egl.EGL10;
-import javax.microedition.khronos.egl.EGLConfig;
-import javax.microedition.khronos.egl.EGLContext;
-import javax.microedition.khronos.egl.EGLDisplay;
-
 /** An implementation of {@link Graphics} for Android.
  * 
  * @author mzechner */
@@ -67,6 +62,7 @@ public final class AndroidGraphics implements Graphics, Renderer {
 	GL10 gl10;
 	GL11 gl11;
 	GL20 gl20;
+	GLU glu;
 	EGLContext eglContext;
 	String extensions;
 
@@ -146,35 +142,6 @@ public final class AndroidGraphics implements Graphics, Renderer {
 							heightMeasureSpec);
 						setMeasuredDimension(measures.width, measures.height);
 					}
-
-					@Override
-					public InputConnection onCreateInputConnection (EditorInfo outAttrs) {
-						BaseInputConnection connection = new BaseInputConnection(this, false) {
-							@Override
-							public boolean deleteSurroundingText (int beforeLength, int afterLength) {
-								int sdkVersion = Integer.parseInt(android.os.Build.VERSION.SDK);
-								if (sdkVersion >= 16) {
-									/* In Jelly Bean, they don't send key events for delete.
-									 *  Instead, they send beforeLength = 1, afterLength = 0.
-									 *  So, we'll just simulate what it used to do. */
-									if (beforeLength == 1 && afterLength == 0) {
-										sendDownUpKeyEventForBackwardCompatibility(KeyEvent.KEYCODE_DEL);
-										return true;
-									}
-								}
-								return super.deleteSurroundingText(beforeLength, afterLength);
-							}
-							private void sendDownUpKeyEventForBackwardCompatibility (final int code) {
-								final long eventTime = SystemClock.uptimeMillis();
-								super.sendKeyEvent(new KeyEvent(eventTime, eventTime, KeyEvent.ACTION_DOWN, code, 0, 0,
-									KeyCharacterMap.VIRTUAL_KEYBOARD, 0, KeyEvent.FLAG_SOFT_KEYBOARD | KeyEvent.FLAG_KEEP_TOUCH_MODE));
-								super.sendKeyEvent(new KeyEvent(SystemClock.uptimeMillis(), eventTime, KeyEvent.ACTION_UP, code, 0, 0,
-									KeyCharacterMap.VIRTUAL_KEYBOARD, 0, KeyEvent.FLAG_SOFT_KEYBOARD | KeyEvent.FLAG_KEEP_TOUCH_MODE));
-							}
-						};
-						return connection;
-					}
-
 				};
 				if (configChooser != null)
 					view.setEGLConfigChooser(configChooser);
@@ -301,10 +268,13 @@ public final class AndroidGraphics implements Graphics, Renderer {
 			}
 		}
 
+		this.glu = new AndroidGLU();
+
 		Gdx.gl = this.gl;
 		Gdx.gl10 = gl10;
 		Gdx.gl11 = gl11;
 		Gdx.gl20 = gl20;
+		Gdx.glu = glu;
 
 		Gdx.app.log("AndroidGraphics", "OGL renderer: " + gl.glGetString(GL10.GL_RENDERER));
 		Gdx.app.log("AndroidGraphics", "OGL vendor: " + gl.glGetString(GL10.GL_VENDOR));
@@ -591,6 +561,11 @@ public final class AndroidGraphics implements Graphics, Renderer {
 	}
 
 	@Override
+	public GLU getGLU () {
+		return glu;
+	}
+
+	@Override
 	public boolean supportsDisplayModeChange () {
 		return false;
 	}
diff --git a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidGraphicsDaydream.java b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidGraphicsDaydream.java
index 0fb8316..3df8bd8 100644
--- a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidGraphicsDaydream.java
+++ b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidGraphicsDaydream.java
@@ -57,6 +57,7 @@ import com.badlogic.gdx.graphics.GL10;
 import com.badlogic.gdx.graphics.GL11;
 import com.badlogic.gdx.graphics.GL20;
 import com.badlogic.gdx.graphics.GLCommon;
+import com.badlogic.gdx.graphics.GLU;
 import com.badlogic.gdx.graphics.Mesh;
 import com.badlogic.gdx.graphics.Texture;
 import com.badlogic.gdx.graphics.glutils.FrameBuffer;
@@ -76,6 +77,7 @@ public final class AndroidGraphicsDaydream implements Graphics, Renderer {
 	GL10 gl10;
 	GL11 gl11;
 	GL20 gl20;
+	GLU glu;
 	EGLContext eglContext;
 	String extensions;
 
@@ -281,10 +283,13 @@ public final class AndroidGraphicsDaydream implements Graphics, Renderer {
 			}
 		}
 
+		this.glu = new AndroidGLU();
+
 		Gdx.gl = this.gl;
 		Gdx.gl10 = gl10;
 		Gdx.gl11 = gl11;
 		Gdx.gl20 = gl20;
+		Gdx.glu = glu;
 
 		Gdx.app.log("AndroidGraphics", "OGL renderer: " + gl.glGetString(GL10.GL_RENDERER));
 		Gdx.app.log("AndroidGraphics", "OGL vendor: " + gl.glGetString(GL10.GL_VENDOR));
@@ -571,6 +576,11 @@ public final class AndroidGraphicsDaydream implements Graphics, Renderer {
 	}
 
 	@Override
+	public GLU getGLU () {
+		return glu;
+	}
+
+	@Override
 	public boolean supportsDisplayModeChange () {
 		return false;
 	}
diff --git a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidGraphicsLiveWallpaper.java b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidGraphicsLiveWallpaper.java
index 134cdd7..8df698b 100755
--- a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidGraphicsLiveWallpaper.java
+++ b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidGraphicsLiveWallpaper.java
@@ -2,6 +2,7 @@
  * Copyright 2010 Mario Zechner (contact@badlogicgames.com), Nathan Sweet (admin@esotericsoftware.com)
  * 
  * Modified by Elijah Cornell
+ * 2013.01 Modified by Jaroslaw Wisniewski <j.wisniewski@appsisle.com>
  * 
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the
  * License. You may obtain a copy of the License at
@@ -15,11 +16,14 @@
 
 package com.badlogic.gdx.backends.android;
 
+import java.lang.reflect.Method;
+
 import javax.microedition.khronos.egl.EGL10;
 import javax.microedition.khronos.egl.EGLConfig;
 import javax.microedition.khronos.egl.EGLContext;
 import javax.microedition.khronos.egl.EGLDisplay;
 
+import android.app.Activity;
 import android.content.Context;
 import android.opengl.GLSurfaceView;
 import android.opengl.GLSurfaceView.EGLConfigChooser;
@@ -27,48 +31,53 @@ import android.opengl.GLSurfaceView.Renderer;
 import android.os.Build;
 import android.util.DisplayMetrics;
 import android.view.Display;
+import android.view.SurfaceHolder;
 import android.view.View;
 import android.view.WindowManager;
 
 import com.badlogic.gdx.Gdx;
 import com.badlogic.gdx.Graphics;
-import com.badlogic.gdx.LifecycleListener;
 import com.badlogic.gdx.Graphics.BufferFormat;
 import com.badlogic.gdx.Graphics.DisplayMode;
 import com.badlogic.gdx.Graphics.GraphicsType;
 import com.badlogic.gdx.backends.android.surfaceview.DefaultGLSurfaceViewLW;
 import com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW;
+import com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20;
 import com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW;
+import com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake;
+import com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewInterface;
 import com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser;
 import com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy;
 import com.badlogic.gdx.graphics.GL10;
 import com.badlogic.gdx.graphics.GL11;
 import com.badlogic.gdx.graphics.GL20;
 import com.badlogic.gdx.graphics.GLCommon;
+import com.badlogic.gdx.graphics.GLU;
 import com.badlogic.gdx.graphics.Mesh;
 import com.badlogic.gdx.graphics.Pixmap;
 import com.badlogic.gdx.graphics.Texture;
 import com.badlogic.gdx.graphics.glutils.FrameBuffer;
 import com.badlogic.gdx.graphics.glutils.ShaderProgram;
 import com.badlogic.gdx.math.WindowedMean;
-import com.badlogic.gdx.utils.Array;
 
 /** An implementation of {@link Graphics} for Android.
  * 
  * @author mzechner */
 public final class AndroidGraphicsLiveWallpaper implements Graphics, Renderer {
-
-	final GLBaseSurfaceViewLW view;
-
-	AndroidLiveWallpaper app;
-
+	
+	// jw: changed
+	//final GLBaseSurfaceViewLW view;
+	final View view;
+	
 	int width;
 	int height;
-
+	AndroidLiveWallpaper app;
+	
 	protected GLCommon gl;
 	protected GL10 gl10;
 	protected GL11 gl11;
 	protected GL20 gl20;
+	protected GLU glu;
 	protected EGLContext eglContext;
 	protected String extensions;
 
@@ -90,263 +99,168 @@ public final class AndroidGraphicsLiveWallpaper implements Graphics, Renderer {
 	protected float ppcX = 0;
 	protected float ppcY = 0;
 	protected float density = 1;
-	
+
 	private final AndroidApplicationConfiguration config;
 	private BufferFormat bufferFormat = new BufferFormat(5, 6, 5, 0, 16, 0, 0, false);
 	protected boolean isContinuous = true;
 
-	protected boolean checkGL20 () {
-		EGL10 egl = (EGL10)EGLContext.getEGL();
-		EGLDisplay display = egl.eglGetDisplay(EGL10.EGL_DEFAULT_DISPLAY);
-
-		int[] version = new int[2];
-		egl.eglInitialize(display, version);
-
-		int EGL_OPENGL_ES2_BIT = 4;
-		int[] configAttribs = {EGL10.EGL_RED_SIZE, 4, EGL10.EGL_GREEN_SIZE, 4, EGL10.EGL_BLUE_SIZE, 4, EGL10.EGL_RENDERABLE_TYPE,
-			EGL_OPENGL_ES2_BIT, EGL10.EGL_NONE};
-
-		EGLConfig[] configs = new EGLConfig[10];
-		int[] num_config = new int[1];
-		egl.eglChooseConfig(display, configAttribs, configs, 10, num_config);
-		egl.eglTerminate(display);
-		return num_config[0] > 0;
-	}
-
-	@Override
-	public GL10 getGL10 () {
-		return gl10;
-	}
-
-	@Override
-	public GL11 getGL11 () {
-		return gl11;
-	}
-
-	@Override
-	public GL20 getGL20 () {
-		return gl20;
-	}
-
-	@Override
-	public int getHeight () {
-		return height;
-	}
-
-	@Override
-	public int getWidth () {
-		return width;
-	}
-
-	@Override
-	public boolean isGL11Available () {
-		return gl11 != null;
-	}
-
-	@Override
-	public boolean isGL20Available () {
-		return gl20 != null;
-	}
-
-	protected void logConfig (EGLConfig config) {
-		EGL10 egl = (EGL10)EGLContext.getEGL();
-		EGLDisplay display = egl.eglGetDisplay(EGL10.EGL_DEFAULT_DISPLAY);
-		int r = getAttrib(egl, display, config, EGL10.EGL_RED_SIZE, 0);
-		int g = getAttrib(egl, display, config, EGL10.EGL_GREEN_SIZE, 0);
-		int b = getAttrib(egl, display, config, EGL10.EGL_BLUE_SIZE, 0);
-		int a = getAttrib(egl, display, config, EGL10.EGL_ALPHA_SIZE, 0);
-		int d = getAttrib(egl, display, config, EGL10.EGL_DEPTH_SIZE, 0);
-		int s = getAttrib(egl, display, config, EGL10.EGL_STENCIL_SIZE, 0);
-		int samples = Math.max(getAttrib(egl, display, config, EGL10.EGL_SAMPLES, 0),
-			getAttrib(egl, display, config, GdxEglConfigChooser.EGL_COVERAGE_SAMPLES_NV, 0));
-		boolean coverageSample = getAttrib(egl, display, config, GdxEglConfigChooser.EGL_COVERAGE_SAMPLES_NV, 0) != 0;
-
-		Gdx.app.log("AndroidGraphics", "framebuffer: (" + r + ", " + g + ", " + b + ", " + a + ")");
-		Gdx.app.log("AndroidGraphics", "depthbuffer: (" + d + ")");
-		Gdx.app.log("AndroidGraphics", "stencilbuffer: (" + s + ")");
-		Gdx.app.log("AndroidGraphics", "samples: (" + samples + ")");
-		Gdx.app.log("AndroidGraphics", "coverage sampling: (" + coverageSample + ")");
-
-		bufferFormat = new BufferFormat(r, g, b, a, d, s, samples, coverageSample);
+	
+	public AndroidGraphicsLiveWallpaper (AndroidLiveWallpaper app, AndroidApplicationConfiguration config, ResolutionStrategy resolutionStrategy) {
+		this.config = config;
+		this.app = app;
+		view = createGLSurfaceView(app.service, config.useGL20, resolutionStrategy);
+		setPreserveContext(view);
 	}
-
-	private int getAttrib (EGL10 egl, EGLDisplay display, EGLConfig config, int attrib, int defValue) {
-		if (egl.eglGetConfigAttrib(display, config, attrib, value)) {
-			return value[0];
+	
+	// jw: it will be called only after current GLSurfaceViewLW family of methods 
+	// will be replaced by subclass of original GLSurfaceView, i'm working on it:)
+	// <- ok it is in use now
+	private void setPreserveContext (Object view) {
+		int sdkVersion = Integer.parseInt(android.os.Build.VERSION.SDK);
+		if (sdkVersion >= 11 && view instanceof GLSurfaceView) {
+			try {
+				Method method = null;
+				for (Method m : view.getClass().getMethods()) {
+					if (m.getName().equals("setPreserveEGLContextOnPause")) {
+						method = m;
+						break;
+					}
+				}
+				if (method != null) {
+					method.invoke((GLSurfaceView)view, true);
+				}
+			} catch (Exception e) {
+			}
 		}
-		return defValue;
 	}
 
-	void resume () {
-		synchronized (synch) {
-			running = true;
-			resume = true;
+	
+	// jw: I replaced GL..SurfaceViewLW classes with them original counterparts, if it will work 
+	// on known devices, on opengl 1.0 and 2.0, and all possible SDK versions.. You can remove 
+	// GL..SurfaceViewLW family of classes completely (there is no use for them).
+	
+	// -> specific for live wallpapers
+	// jw: synchronized access to current wallpaper surface holder
+	SurfaceHolder getSurfaceHolder() {
+		synchronized (app.service.sync) {
+			return app.service.getSurfaceHolder();
 		}
 	}
+	// <- specific for live wallpapers
+	
+	// Grabbed from original AndroidGraphics class, with modifications:
+	//	+ overrided getHolder in created GLSurfaceView instances
+	// + Activity changed to Context (as it should be in AndroidGraphics I think;p)
+	private View createGLSurfaceView (Context context, boolean useGL2, final ResolutionStrategy resolutionStrategy) {
+		EGLConfigChooser configChooser = getEglConfigChooser();
 
-	void pause () {
-		synchronized (synch) {
-			if (!running) return;
-			running = false;
-			pause = true;
-			while (pause) {
-				try {
-					synch.wait();
-				} catch (InterruptedException ignored) {
-					Gdx.app.log("AndroidGraphics", "waiting for pause synchronization failed!");
+		if (useGL2 && checkGL20()) {
+			GLSurfaceView20 view = new GLSurfaceView20(context, resolutionStrategy) {
+				// -> specific for live wallpapers
+				@Override
+				public SurfaceHolder getHolder () {
+					return getSurfaceHolder();
 				}
-			}
-		}
-	}
-
-	void destroy () {
-		synchronized (synch) {
-			running = false;
-			destroy = true;
-
-			while (destroy) {
-				try {
-					synch.wait();
-				} catch (InterruptedException ex) {
-					Gdx.app.log("AndroidGraphics", "waiting for destroy synchronization failed!");
+				public void onDestroy () {
+					onDetachedFromWindow();	// calls GLSurfaceView.mGLThread.requestExitAndWait();
 				}
+				// <- specific for live wallpapers
+			};
+			
+			if (configChooser != null)
+				view.setEGLConfigChooser(configChooser);
+			else
+				view.setEGLConfigChooser(config.r, config.g, config.b, config.a, config.depth, config.stencil);
+			view.setRenderer(this);
+			return view;
+		} else {
+			config.useGL20 = false;
+			configChooser = getEglConfigChooser();
+			int sdkVersion = Integer.parseInt(android.os.Build.VERSION.SDK);
+
+			if (sdkVersion >= 11) {
+				GLSurfaceView view = new GLSurfaceView(context) {
+					@Override
+					protected void onMeasure (int widthMeasureSpec, int heightMeasureSpec) {
+						ResolutionStrategy.MeasuredDimension measures = resolutionStrategy.calcMeasures(widthMeasureSpec,
+							heightMeasureSpec);
+						setMeasuredDimension(measures.width, measures.height);
+					}
+					// -> specific for live wallpapers
+					@Override
+					public SurfaceHolder getHolder () {
+						return getSurfaceHolder();
+					}
+					public void onDestroy () {
+						onDetachedFromWindow();	// calls GLSurfaceView.mGLThread.requestExitAndWait();
+					}
+					// <- specific for live wallpapers
+				};
+				if (configChooser != null)
+					view.setEGLConfigChooser(configChooser);
+				else
+					view.setEGLConfigChooser(config.r, config.g, config.b, config.a, config.depth, config.stencil);
+				view.setRenderer(this);
+				return view;
+			} else {
+				GLSurfaceViewCupcake view = new GLSurfaceViewCupcake(context, resolutionStrategy) {
+					// -> specific for live wallpapers
+					@Override
+					public SurfaceHolder getHolder () {
+						return getSurfaceHolder();
+					}
+					// <- specific for live wallpapers
+				};
+				if (configChooser != null)
+					view.setEGLConfigChooser(configChooser);
+				else
+					view.setEGLConfigChooser(config.r, config.g, config.b, config.a, config.depth, config.stencil);
+				view.setRenderer(this);
+				return view;
 			}
 		}
 	}
-
-	/** {@inheritDoc} */
-	@Override
-	public float getDeltaTime () {
-		return mean.getMean() == 0 ? deltaTime : mean.getMean();
-	}
-
-	@Override
-	public float getRawDeltaTime () {
-		return deltaTime;
-	}
-
-	/** {@inheritDoc} */
-	@Override
-	public GraphicsType getType () {
-		return GraphicsType.AndroidGL;
-	}
-
-	/** {@inheritDoc} */
-	@Override
-	public int getFramesPerSecond () {
-		return fps;
-	}
-
-	/** {@inheritDoc} */
-	@Override
-	public GLCommon getGLCommon () {
-		return gl;
-	}
-
-	@Override
-	public float getPpiX () {
-		return ppiX;
-	}
-
-	@Override
-	public float getPpiY () {
-		return ppiY;
-	}
-
-	@Override
-	public float getPpcX () {
-		return ppcX;
-	}
-
-	@Override
-	public float getPpcY () {
-		return ppcY;
-	}
-
-	@Override
-	public boolean supportsDisplayModeChange () {
-		return false;
-	}
-
-	@Override
-	public boolean setDisplayMode (DisplayMode displayMode) {
-		return false;
-	}
-
-	@Override
-	public void setTitle (String title) {
-
-	}
-
-	class AndroidDisplayMode extends DisplayMode {
-		protected AndroidDisplayMode (int width, int height, int refreshRate, int bitsPerPixel) {
-			super(width, height, refreshRate, bitsPerPixel);
-		}
-	}
-
-	@Override
-	public BufferFormat getBufferFormat () {
-		return bufferFormat;
-	}
-
-	@Override
-	public void setVSync (boolean vsync) {
-	}
-
-	@Override
-	public boolean supportsExtension (String extension) {
-		if (extensions == null) extensions = Gdx.gl.glGetString(GL10.GL_EXTENSIONS);
-		return extensions.contains(extension);
-	}
-
-	public boolean isContinuousRendering () {
-		return isContinuous;
-	}
-
-	@Override
-	public boolean isFullscreen () {
-		return true;
-	}
-
-	public AndroidGraphicsLiveWallpaper (AndroidLiveWallpaper app, AndroidApplicationConfiguration config, ResolutionStrategy resolutionStrategy) {
-		this.config = config;
-		view = createGLSurfaceView(app, config.useGL20, resolutionStrategy);
-		this.app = app;
-
-	}
-
+	
+	
+	// jw: old implementation, makes use of GL..SurfaceViewLW
+	/*
 	private GLBaseSurfaceViewLW createGLSurfaceView (AndroidLiveWallpaper app, boolean useGL2,
 		ResolutionStrategy resolutionStrategy) {
+
+		// jw: synchronized with original AndroidGraphics 
 		EGLConfigChooser configChooser = getEglConfigChooser();
 
 		if (useGL2 && checkGL20()) {
-			GLSurfaceView20LW view = new GLSurfaceView20LW(app.getEngine(), resolutionStrategy);
-			if (configChooser != null) 
+			GLSurfaceView20LW view = new GLSurfaceView20LW(app.getService(), resolutionStrategy);
+			if (configChooser != null)
 				view.setEGLConfigChooser(configChooser);
 			else
 				view.setEGLConfigChooser(config.r, config.g, config.b, config.a, config.depth, config.stencil);
 			view.setRenderer(this);
 			return view;
 		} else {
-			//GL1
 			config.useGL20 = false;
 			configChooser = getEglConfigChooser();
 
-			GLBaseSurfaceViewLW view = new DefaultGLSurfaceViewLW(app.getEngine(), resolutionStrategy);
-			if (configChooser != null) 
+			GLBaseSurfaceViewLW view = new DefaultGLSurfaceViewLW(app.getService(), resolutionStrategy);
+			if (configChooser != null)
 				view.setEGLConfigChooser(configChooser);
 			else
 				view.setEGLConfigChooser(config.r, config.g, config.b, config.a, config.depth, config.stencil);
-
 			view.setRenderer(this);
 			return view;
 		}
-	}
-
+	}*/
+	
+	
+	// jw: changed, method replaced with implementation from original AndroidGraphics
 	private EGLConfigChooser getEglConfigChooser () {
-	return new GdxEglConfigChooser(config.r, config.g, config.b, config.a, config.depth, config.stencil, config.numSamples,
+		return new GdxEglConfigChooser(config.r, config.g, config.b, config.a, config.depth, config.stencil, config.numSamples,
 			config.useGL20);
+	}
+	
 	/*
+	private EGLConfigChooser getEglConfigChooser () {
 		if (!Build.DEVICE.equalsIgnoreCase("GT-I7500"))
 			return null;
 		else
@@ -363,14 +277,16 @@ public final class AndroidGraphicsLiveWallpaper implements Graphics, Renderer {
 					egl.eglChooseConfig(display, attributes, configs, 1, result);
 					return configs[0];
 				}
-			};*/
-	}
+			};
+	}*/
 
 	private void updatePpi () {
 		DisplayMetrics metrics = new DisplayMetrics();
 
-		final Display display = ((WindowManager)app.getService().getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay();
-		display.getMetrics(metrics);
+		// jw: changed
+		app.getWindowManager().getDefaultDisplay().getMetrics(metrics);
+		//final Display display = ((WindowManager)app.getService().getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay();
+		//display.getMetrics(metrics);
 
 		ppiX = metrics.xdpi;
 		ppiY = metrics.ydpi;
@@ -378,11 +294,71 @@ public final class AndroidGraphicsLiveWallpaper implements Graphics, Renderer {
 		ppcY = metrics.ydpi / 2.54f;
 		density = metrics.density;
 	}
+	
+	protected boolean checkGL20 () {
+		EGL10 egl = (EGL10)EGLContext.getEGL();
+		EGLDisplay display = egl.eglGetDisplay(EGL10.EGL_DEFAULT_DISPLAY);
+
+		int[] version = new int[2];
+		egl.eglInitialize(display, version);
+
+		int EGL_OPENGL_ES2_BIT = 4;
+		int[] configAttribs = {EGL10.EGL_RED_SIZE, 4, EGL10.EGL_GREEN_SIZE, 4, EGL10.EGL_BLUE_SIZE, 4, EGL10.EGL_RENDERABLE_TYPE,
+			EGL_OPENGL_ES2_BIT, EGL10.EGL_NONE};
+
+		EGLConfig[] configs = new EGLConfig[10];
+		int[] num_config = new int[1];
+		egl.eglChooseConfig(display, configAttribs, configs, 10, num_config);
+		egl.eglTerminate(display);
+		return num_config[0] > 0;
+	}
+
+	/** {@inheritDoc} */
+	@Override
+	public GL10 getGL10 () {
+		return gl10;
+	}
 
-	// private static boolean isPowerOfTwo(int value) {
-	// return ((value != 0) && (value & (value - 1)) == 0);
-	// }
+	/** {@inheritDoc} */
+	@Override
+	public GL11 getGL11 () {
+		return gl11;
+	}
 
+	/** {@inheritDoc} */
+	@Override
+	public GL20 getGL20 () {
+		return gl20;
+	}
+
+	/** {@inheritDoc} */
+	@Override
+	public int getHeight () {
+		return height;
+	}
+
+	/** {@inheritDoc} */
+	@Override
+	public int getWidth () {
+		return width;
+	}
+
+	/** {@inheritDoc} */
+	@Override
+	public boolean isGL11Available () {
+		return gl11 != null;
+	}
+
+	/** {@inheritDoc} */
+	@Override
+	public boolean isGL20Available () {
+		return gl20 != null;
+	}
+	
+	private static boolean isPowerOfTwo(int value) {
+		return ((value != 0) && (value & (value - 1)) == 0);
+	}
+	
 	/** This instantiates the GL10, GL11 and GL20 instances. Includes the check for certain devices that pretend to support GL11 but
 	 * fuck up vertex buffer objects. This includes the pixelflinger which segfaults when buffers are deleted as well as the
 	 * Motorola CLIQ and the Samsung Behold II.
@@ -391,10 +367,13 @@ public final class AndroidGraphicsLiveWallpaper implements Graphics, Renderer {
 	private void setupGL (javax.microedition.khronos.opengles.GL10 gl) {
 		if (gl10 != null || gl20 != null) return;
 
-		boolean isGL20 = checkGL20();
-		Gdx.app.log("AndroidGraphics", "GL20: " + isGL20);
+		// jw: disabled
+		//boolean isGL20 = checkGL20();
+		//Gdx.app.log("AndroidGraphics", "GL20: " + isGL20);
 
-		if (view instanceof GLSurfaceView20LW) {
+		// jw: changed
+		//if (view instanceof GLSurfaceView20LW) {
+		if (view instanceof GLSurfaceView20) {
 			gl20 = new AndroidGL20();
 			this.gl = gl20;
 		} else {
@@ -402,7 +381,7 @@ public final class AndroidGraphicsLiveWallpaper implements Graphics, Renderer {
 			this.gl = gl10;
 			if (gl instanceof javax.microedition.khronos.opengles.GL11) {
 				String renderer = gl.glGetString(GL10.GL_RENDERER);
-				if(renderer != null) {
+				if (renderer != null) { // silly GT-I7500
 					if (!renderer.toLowerCase().contains("pixelflinger")
 						&& !(android.os.Build.MODEL.equals("MB200") || android.os.Build.MODEL.equals("MB220") || android.os.Build.MODEL
 							.contains("Behold"))) {
@@ -413,15 +392,19 @@ public final class AndroidGraphicsLiveWallpaper implements Graphics, Renderer {
 			}
 		}
 
+		this.glu = new AndroidGLU();
+
 		Gdx.gl = this.gl;
 		Gdx.gl10 = gl10;
 		Gdx.gl11 = gl11;
 		Gdx.gl20 = gl20;
+		Gdx.glu = glu;
 
-		Gdx.app.log("AndroidGraphics", "OGL renderer: " + gl.glGetString(GL10.GL_RENDERER));
-		Gdx.app.log("AndroidGraphics", "OGL vendor: " + gl.glGetString(GL10.GL_VENDOR));
-		Gdx.app.log("AndroidGraphics", "OGL version: " + gl.glGetString(GL10.GL_VERSION));
-		Gdx.app.log("AndroidGraphics", "OGL extensions: " + gl.glGetString(GL10.GL_EXTENSIONS));
+		// moved to logConfig
+		//Gdx.app.log("AndroidGraphics", "OGL renderer: " + gl.glGetString(GL10.GL_RENDERER));
+		//Gdx.app.log("AndroidGraphics", "OGL vendor: " + gl.glGetString(GL10.GL_VENDOR));
+		//Gdx.app.log("AndroidGraphics", "OGL version: " + gl.glGetString(GL10.GL_VERSION));
+		//Gdx.app.log("AndroidGraphics", "OGL extensions: " + gl.glGetString(GL10.GL_EXTENSIONS));
 	}
 
 	@Override
@@ -430,11 +413,21 @@ public final class AndroidGraphicsLiveWallpaper implements Graphics, Renderer {
 		this.height = height;
 		updatePpi();
 		gl.glViewport(0, 0, this.width, this.height);
-		app.getListener().resize(width, height);
+		
+		// jw: moved from onSurfaceCreated (as in AndroidGraphics class)
+		if (created == false) {
+			app.listener.create();
+			created = true;
+			synchronized (this) {
+				running = true;
+			}
+		}
+		app.listener.resize(width, height);
 	}
 
 	@Override
 	public void onSurfaceCreated (javax.microedition.khronos.opengles.GL10 gl, EGLConfig config) {
+		eglContext = ((EGL10)EGLContext.getEGL()).eglGetCurrentContext();	// jw: added
 		setupGL(gl);
 		logConfig(config);
 		updatePpi();
@@ -444,8 +437,14 @@ public final class AndroidGraphicsLiveWallpaper implements Graphics, Renderer {
 		ShaderProgram.invalidateAllShaderPrograms(app);
 		FrameBuffer.invalidateAllFrameBuffers(app);
 
-		final Display display = ((WindowManager)app.getService().getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay();
-
+		if (AndroidLiveWallpaperService.DEBUG) {	// to prevent creating too many string buffers in live wallpapers
+			Gdx.app.debug("AndroidGraphics", Mesh.getManagedStatus());
+			Gdx.app.debug("AndroidGraphics", Texture.getManagedStatus());
+			Gdx.app.debug("AndroidGraphics", ShaderProgram.getManagedStatus());
+			Gdx.app.debug("AndroidGraphics", FrameBuffer.getManagedStatus());
+		}
+		
+		Display display = app.getWindowManager().getDefaultDisplay();
 		this.width = display.getWidth();
 		this.height = display.getHeight();
 		mean = new WindowedMean(5);
@@ -453,41 +452,124 @@ public final class AndroidGraphicsLiveWallpaper implements Graphics, Renderer {
 
 		gl.glViewport(0, 0, this.width, this.height);
 
-		if (created == false) {
+		// jw: moved to onSurfaceChanged (as in AndroidGraphics class)
+		/*if (created == false) {
 			app.getListener().create();
 			created = true;
 			synchronized (this) {
 				running = true;
 			}
+		}*/
+	}
+
+	private void logConfig (EGLConfig config) {
+		EGL10 egl = (EGL10)EGLContext.getEGL();
+		EGLDisplay display = egl.eglGetDisplay(EGL10.EGL_DEFAULT_DISPLAY);
+		int r = getAttrib(egl, display, config, EGL10.EGL_RED_SIZE, 0);
+		int g = getAttrib(egl, display, config, EGL10.EGL_GREEN_SIZE, 0);
+		int b = getAttrib(egl, display, config, EGL10.EGL_BLUE_SIZE, 0);
+		int a = getAttrib(egl, display, config, EGL10.EGL_ALPHA_SIZE, 0);
+		int d = getAttrib(egl, display, config, EGL10.EGL_DEPTH_SIZE, 0);
+		int s = getAttrib(egl, display, config, EGL10.EGL_STENCIL_SIZE, 0);
+		int samples = Math.max(getAttrib(egl, display, config, EGL10.EGL_SAMPLES, 0),
+			getAttrib(egl, display, config, GdxEglConfigChooser.EGL_COVERAGE_SAMPLES_NV, 0));
+		boolean coverageSample = getAttrib(egl, display, config, GdxEglConfigChooser.EGL_COVERAGE_SAMPLES_NV, 0) != 0;
+
+		// print configuration just one time (on some devices gl context is recreated every time when device is locked / unlocked - every time when screen turns on and off)
+		if (!configLogged)
+		{
+			
+			if (gl != null)
+			{
+				Gdx.app.log("AndroidGraphics", "OGL renderer: " + gl.glGetString(GL10.GL_RENDERER));
+				Gdx.app.log("AndroidGraphics", "OGL vendor: " + gl.glGetString(GL10.GL_VENDOR));
+				Gdx.app.log("AndroidGraphics", "OGL version: " + gl.glGetString(GL10.GL_VERSION));
+				Gdx.app.log("AndroidGraphics", "OGL extensions: " + gl.glGetString(GL10.GL_EXTENSIONS));
+				configLogged = true;
+			}
+			
+			Gdx.app.log("AndroidGraphics", "framebuffer: (" + r + ", " + g + ", " + b + ", " + a + ")");
+			Gdx.app.log("AndroidGraphics", "depthbuffer: (" + d + ")");
+			Gdx.app.log("AndroidGraphics", "stencilbuffer: (" + s + ")");
+			Gdx.app.log("AndroidGraphics", "samples: (" + samples + ")");
+			Gdx.app.log("AndroidGraphics", "coverage sampling: (" + coverageSample + ")");
 		}
+		
+		bufferFormat = new BufferFormat(r, g, b, a, d, s, samples, coverageSample);
 	}
 
+	boolean configLogged = false;
+	
 	int[] value = new int[1];
 
+	private int getAttrib (EGL10 egl, EGLDisplay display, EGLConfig config, int attrib, int defValue) {
+		if (egl.eglGetConfigAttrib(display, config, attrib, value)) {
+			return value[0];
+		}
+		return defValue;
+	}
+
 	Object synch = new Object();
 
-// public void destroy() {
-// synchronized (synch) {
-// running = false;
-// destroy = true;
-//
-// // TODO: Why was the wait here? Causes deadlock!?!
-// // while (destroy) {
-// // try {
-// // synch.wait();
-// // } catch (InterruptedException ex) {
-// // }
-// // }
-// }
-// }
+	void resume () {
+		synchronized (synch) {
+			running = true;
+			resume = true;
+			
+			// by jw: added synchronization, there was nothing before
+			while (resume) {
+				try {
+					synch.wait();
+				} catch (InterruptedException ignored) {
+					Gdx.app.log("AndroidGraphics", "waiting for resume synchronization failed!");
+				}
+			}
+		}
+	}
+
+	// jw: never called on lvp, why? see description in AndroidLiveWallpaper.onPause
+	void pause () {
+		synchronized (synch) {
+			if (!running) return;
+			running = false;
+			pause = true;
+			
+			while (pause) {
+				try {
+					synch.wait();
+				} catch (InterruptedException ignored) {
+					Gdx.app.log("AndroidGraphics", "waiting for pause synchronization failed!");
+				}
+			}
+		}
+	}
+
+	// jw: never called on lvp
+	void destroy () {
+		synchronized (synch) {
+			running = false;
+			destroy = true;
+
+			while (destroy) {
+				try {
+					synch.wait();
+				} catch (InterruptedException ex) {
+					Gdx.app.log("AndroidGraphics", "waiting for destroy synchronization failed!");
+				}
+			}
+		}
+	}
+
 
 	@Override
 	public void onDrawFrame (javax.microedition.khronos.opengles.GL10 gl) {
-
 		long time = System.nanoTime();
 		deltaTime = (time - lastFrameTime) / 1000000000.0f;
 		lastFrameTime = time;
-		mean.addValue(deltaTime);
+		
+		// jw: after pause deltaTime can have somewhat huge value and it destabilize mean, so I propose to just cut it of
+		mean.addValue(resume ? 0.0f : deltaTime);
+		//mean.addValue(deltaTime);
 
 		boolean lrunning = false;
 		boolean lpause = false;
@@ -502,6 +584,8 @@ public final class AndroidGraphicsLiveWallpaper implements Graphics, Renderer {
 
 			if (resume) {
 				resume = false;
+				// by jw: originally was not synchronized
+				synch.notifyAll();
 			}
 
 			if (pause) {
@@ -516,52 +600,56 @@ public final class AndroidGraphicsLiveWallpaper implements Graphics, Renderer {
 		}
 
 		if (lresume) {
-			Array<LifecycleListener> listeners = app.lifecycleListeners;
-			synchronized(listeners) {
-				for(LifecycleListener listener: listeners) {
-					listener.resume();
-				}
-			}
-			app.getListener().resume();
+			//((AndroidAudio)app.getAudio()).resume();	// jw: moved to AndroidLiveWallpaper.onResume
+			app.listener.resume();
 			Gdx.app.log("AndroidGraphics", "resumed");
 		}
 
 		// HACK: added null check to handle set wallpaper from preview null
 		// error in renderer
+		// jw: this hack is not working always, renderer ends with error for some devices - because of uninitialized gl context
+		// jw: now it shouldn't be necessary - after wallpaper backend refactoring:)
 		if (lrunning && (Gdx.graphics.getGL10() != null || Gdx.graphics.getGL11() != null || Gdx.graphics.getGL20() != null)) {
 
+			// jw: changed
+			synchronized (app.runnables) {
+				app.executedRunnables.clear();
+				app.executedRunnables.addAll(app.runnables);
+				app.runnables.clear();
+
+				for (int i = 0; i < app.executedRunnables.size; i++) {
+					try {
+						app.executedRunnables.get(i).run();
+					} catch (Throwable t) {
+						t.printStackTrace();
+					}
+				}
+			}
+			/*
 			synchronized (app.runnables) {
 				for (int i = 0; i < app.runnables.size; i++) {
 					app.runnables.get(i).run();
 				}
 				app.runnables.clear();
 			}
+			*/
+			
 
 			app.input.processEvents();
-			app.getListener().render();
+			app.listener.render();
 		}
 
+		// jw: never called on lvp, why? see description in AndroidLiveWallpaper.onPause
 		if (lpause) {
-			Array<LifecycleListener> listeners = app.lifecycleListeners;
-			synchronized(listeners) {
-				for(LifecycleListener listener: listeners) {
-					listener.pause();
-				}
-			}
-			app.getListener().pause();
-			((AndroidAudio)app.getAudio()).pause();
+			app.listener.pause();
+			//((AndroidAudio)app.getAudio()).pause();		jw: moved to AndroidLiveWallpaper.onPause
 			Gdx.app.log("AndroidGraphics", "paused");
 		}
 
+		// jw: never called on lwp, why? see description in AndroidLiveWallpaper.onPause
 		if (ldestroy) {
-			Array<LifecycleListener> listeners = app.lifecycleListeners;
-			synchronized(listeners) {
-				for(LifecycleListener listener: listeners) {
-					listener.dispose();
-				}
-			}
-			app.getListener().dispose();
-			((AndroidAudio)app.getAudio()).dispose();
+			app.listener.dispose();
+			//((AndroidAudio)app.getAudio()).dispose();	 jw: moved to AndroidLiveWallpaper.onDestroy
 			Gdx.app.log("AndroidGraphics", "destroyed");
 		}
 
@@ -573,25 +661,73 @@ public final class AndroidGraphicsLiveWallpaper implements Graphics, Renderer {
 		frames++;
 	}
 
-	protected void clearManagedCaches () {
+	/** {@inheritDoc} */
+	@Override
+	public float getDeltaTime () {
+		return mean.getMean() == 0 ? deltaTime : mean.getMean();
+	}
+
+	@Override
+	public float getRawDeltaTime () {
+		return deltaTime;
+	}
+
+	/** {@inheritDoc} */
+	@Override
+	public GraphicsType getType () {
+		return GraphicsType.AndroidGL;
+	}
+
+	/** {@inheritDoc} */
+	@Override
+	public int getFramesPerSecond () {
+		return fps;
+	}
+	
+	public void clearManagedCaches () {
 		Mesh.clearAllMeshes(app);
 		Texture.clearAllTextures(app);
 		ShaderProgram.clearAllShaderPrograms(app);
 		FrameBuffer.clearAllFrameBuffers(app);
 
-		Gdx.app.log("AndroidGraphics", Mesh.getManagedStatus());
-		Gdx.app.log("AndroidGraphics", Texture.getManagedStatus());
-		Gdx.app.log("AndroidGraphics", ShaderProgram.getManagedStatus());
-		Gdx.app.log("AndroidGraphics", FrameBuffer.getManagedStatus());
+		if (AndroidLiveWallpaperService.DEBUG) {	// to prevent creating too many string buffers in live wallpapers
+			Gdx.app.debug("AndroidGraphics", Mesh.getManagedStatus());
+			Gdx.app.debug("AndroidGraphics", Texture.getManagedStatus());
+			Gdx.app.debug("AndroidGraphics", ShaderProgram.getManagedStatus());
+			Gdx.app.debug("AndroidGraphics", FrameBuffer.getManagedStatus());
+		}
 	}
 
-	public GLBaseSurfaceViewLW getView () {
+	// jw: changed this
+	//public GLBaseSurfaceViewLW getView () {
+	public View getView () {
 		return view;
 	}
 
+	/** {@inheritDoc} */
 	@Override
-	public DisplayMode[] getDisplayModes () {
-		return new DisplayMode[0];
+	public GLCommon getGLCommon () {
+		return gl;
+	}
+
+	@Override
+	public float getPpiX () {
+		return ppiX;
+	}
+
+	@Override
+	public float getPpiY () {
+		return ppiY;
+	}
+
+	@Override
+	public float getPpcX () {
+		return ppcX;
+	}
+
+	@Override
+	public float getPpcY () {
+		return ppcY;
 	}
 
 	@Override
@@ -600,13 +736,23 @@ public final class AndroidGraphicsLiveWallpaper implements Graphics, Renderer {
 	}
 
 	@Override
-	public DisplayMode getDesktopDisplayMode () {
-		DisplayMetrics metrics = new DisplayMetrics();
+	public GLU getGLU () {
+		return glu;
+	}
+
+	@Override
+	public boolean supportsDisplayModeChange () {
+		return false;
+	}
 
-		final Display display = ((WindowManager)app.getService().getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay();
-		display.getMetrics(metrics);
+	@Override
+	public boolean setDisplayMode (DisplayMode displayMode) {
+		return false;
+	}
 
-		return new AndroidDisplayMode(metrics.widthPixels, metrics.heightPixels, 0, 0);
+	@Override
+	public DisplayMode[] getDisplayModes () {
+		return new DisplayMode[] {getDesktopDisplayMode()};
 	}
 
 	@Override
@@ -615,19 +761,69 @@ public final class AndroidGraphicsLiveWallpaper implements Graphics, Renderer {
 	}
 
 	@Override
+	public void setTitle (String title) {
+
+	}
+
+	private class AndroidDisplayMode extends DisplayMode {
+		protected AndroidDisplayMode (int width, int height, int refreshRate, int bitsPerPixel) {
+			super(width, height, refreshRate, bitsPerPixel);
+		}
+	}
+
+	@Override
+	public DisplayMode getDesktopDisplayMode () {
+		DisplayMetrics metrics = new DisplayMetrics();
+		app.getWindowManager().getDefaultDisplay().getMetrics(metrics);
+		return new AndroidDisplayMode(metrics.widthPixels, metrics.heightPixels, 0, 0);
+	}
+
+	@Override
+	public BufferFormat getBufferFormat () {
+		return bufferFormat;
+	}
+
+	@Override
+	public void setVSync (boolean vsync) {
+	}
+
+	@Override
+	public boolean supportsExtension (String extension) {
+		if (extensions == null) extensions = Gdx.gl.glGetString(GL10.GL_EXTENSIONS);
+		return extensions.contains(extension);
+	}
+
+	@Override
 	public void setContinuousRendering (boolean isContinuous) {
 		if (view != null) {
 			this.isContinuous = isContinuous;
 			int renderMode = isContinuous ? GLSurfaceView.RENDERMODE_CONTINUOUSLY : GLSurfaceView.RENDERMODE_WHEN_DIRTY;
-			view.setRenderMode(renderMode);
+			// jw: changed
+			//view.setRenderMode(renderMode);
+			if (view instanceof GLSurfaceViewCupcake) ((GLSurfaceViewCupcake)view).setRenderMode(renderMode);
+			else if (view instanceof GLSurfaceView) ((GLSurfaceView)view).setRenderMode(renderMode);
+			else throw new RuntimeException("unimplemented");
+			mean.clear();
 		}
 	}
 
+	public boolean isContinuousRendering () {
+		return isContinuous;
+	}
+
 	@Override
 	public void requestRendering () {
 		if (view != null) {
-			view.requestRender();
+			// jw: changed
+			//view.requestRender();
+			if (view instanceof GLSurfaceViewCupcake) ((GLSurfaceViewCupcake)view).requestRender();
+			else if (view instanceof GLSurfaceView) ((GLSurfaceView)view).requestRender();
+			else throw new RuntimeException("unimplemented");
 		}
+	}
 
+	@Override
+	public boolean isFullscreen () {
+		return true;
 	}
 }
diff --git a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidInput.java b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidInput.java
index dd60d59..2b9e878 100644
--- a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidInput.java
+++ b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidInput.java
@@ -452,25 +452,11 @@ public class AndroidInput implements Input, OnKeyListener, OnTouchListener {
 			if(keyListeners.get(i).onKey(v, keyCode, e)) return true;
 
 		synchronized (this) {
-			KeyEvent event = null;
-			
-			if(e.getKeyCode() == android.view.KeyEvent.KEYCODE_UNKNOWN &&
-				e.getAction() == android.view.KeyEvent.ACTION_MULTIPLE) {
-					String chars = e.getCharacters();
-					for(int i = 0; i < chars.length(); i++) {
-						event = usedKeyEvents.obtain();
-						event.keyCode = 0;
-						event.keyChar = chars.charAt(i);
-						event.type = KeyEvent.KEY_TYPED;
-						keyEvents.add(event);
-					}
-					return false;
-			}
-			
 			char character = (char)e.getUnicodeChar();
 			// Android doesn't report a unicode char for back space. hrm...
 			if (keyCode == 67) character = '\b';
 
+			KeyEvent event = null;
 			switch (e.getAction()) {
 			case android.view.KeyEvent.ACTION_DOWN:
 				event = usedKeyEvents.obtain();
diff --git a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidLiveWallpaper.java b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidLiveWallpaper.java
index 3db7ea8..2dc1efb 100755
--- a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidLiveWallpaper.java
+++ b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidLiveWallpaper.java
@@ -2,6 +2,7 @@
  * Copyright 2010 Mario Zechner (contact@badlogicgames.com), Nathan Sweet (admin@esotericsoftware.com)
  * 
  * Modified by Elijah Cornell
+ * 2013.01 Modified by Jaroslaw Wisniewski <j.wisniewski@appsisle.com>
  * 
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the
  * License. You may obtain a copy of the License at
@@ -16,12 +17,14 @@
 
 package com.badlogic.gdx.backends.android;
 
+import java.lang.reflect.Method;
 import java.util.ArrayList;
 import java.util.List;
 
 import android.app.Activity;
 import android.content.Context;
 import android.content.res.Configuration;
+import android.opengl.GLSurfaceView;
 import android.os.Build;
 import android.os.Bundle;
 import android.os.Debug;
@@ -30,6 +33,7 @@ import android.service.wallpaper.WallpaperService;
 import android.service.wallpaper.WallpaperService.Engine;
 import android.util.Log;
 import android.view.View;
+import android.view.WindowManager;
 import android.widget.FrameLayout.LayoutParams;
 
 import com.badlogic.gdx.Application;
@@ -44,6 +48,10 @@ import com.badlogic.gdx.Net;
 import com.badlogic.gdx.Preferences;
 import com.badlogic.gdx.Application.ApplicationType;
 import com.badlogic.gdx.backends.android.surfaceview.FillResolutionStrategy;
+import com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW;
+import com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20;
+import com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW;
+import com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake;
 import com.badlogic.gdx.graphics.GL10;
 import com.badlogic.gdx.graphics.GL11;
 import com.badlogic.gdx.utils.Array;
@@ -57,13 +65,13 @@ import com.badlogic.gdx.utils.GdxNativesLoader;
  * 
  * @author mzechner
  */
-class AndroidLiveWallpaper implements Application {
+public class AndroidLiveWallpaper implements Application {
 	static {
 		GdxNativesLoader.load();
 	}
+	
+	protected AndroidLiveWallpaperService service;
 
-	protected WallpaperService service;
-	private Engine engine;
 	protected AndroidGraphicsLiveWallpaper graphics;
 	protected AndroidInput input;
 	protected AndroidAudio audio;
@@ -76,72 +84,155 @@ class AndroidLiveWallpaper implements Application {
 	protected final Array<LifecycleListener> lifecycleListeners = new Array<LifecycleListener>();
 	protected int logLevel = LOG_INFO;
 
-	public AndroidLiveWallpaper(WallpaperService service, Engine engine) {
+	public AndroidLiveWallpaper(AndroidLiveWallpaperService service) {
 		this.service = service;
-		this.engine = engine;
 	}
 	
 	public void initialize(ApplicationListener listener, AndroidApplicationConfiguration config) {
 		graphics = new AndroidGraphicsLiveWallpaper(this, config, config.resolutionStrategy==null?new FillResolutionStrategy():config.resolutionStrategy);
-		input = AndroidInputFactory.newAndroidInput(this, this.getService(), null, config);
+		
+		// factory in use, but note: AndroidInputFactory causes exceptions when obfuscated: java.lang.RuntimeException: Couldn't construct AndroidInput, this should never happen, proguard deletes constructor used only by reflection
+		input = AndroidInputFactory.newAndroidInput(this, this.getService(), graphics.view, config);
+		//input = new AndroidInput(this, this.getService(), null, config);
+
 		audio = new AndroidAudio(this.getService(), config);
+		
+		// added initialization of android local storage: /data/data/<app package>/files/
 		files = new AndroidFiles(this.getService().getAssets(), this.getService().getFilesDir().getAbsolutePath());
-		net = new AndroidNet(null);
+		
 		this.listener = listener;
 		
 		Gdx.app = this;
-		Gdx.input = this.getInput();
-		Gdx.audio = this.getAudio();
-		Gdx.files = this.getFiles();
-		Gdx.net = this.getNet();
-		Gdx.graphics = this.getGraphics();
+		Gdx.input = input;
+		Gdx.audio = audio;
+		Gdx.files = files;
+		Gdx.graphics = graphics;
 	}
 
 	public void onPause() {
-		graphics.pause();
-		if (audio != null) audio.pause();
+		if (AndroidLiveWallpaperService.DEBUG) Log.d(AndroidLiveWallpaperService.TAG, " > AndroidLiveWallpaper - onPause()");
+
+		// IMPORTANT!
+		// jw: graphics.pause is never called, graphics.pause works on most devices but not on all.. 
+		// for example on Samsung Galaxy Tab (GT-P6800) on android 4.0.4 invoking graphics.pause causes "Fatal Signal 11" 
+		// near mEglHelper.swap() in GLSurfaceView while processing next onPause event.
+		// See related issue: 
+		// http://code.google.com/p/libgdx/issues/detail?id=541
+		// the problem with graphics.pause occurs while using OpenGL 2.0 and original GLSurfaceView while rotating device in lwp preview
+		// in my opinion it is a bug of android not libgdx, even example Cubic live wallpaper from
+		// Android SDK crashes on affected devices.......... and on some configurations of android emulator too.
+		// 
+		// My wallpaper was rejected on Samsung Apps because of this issue, so I decided to disable graphics.pause.. 
+		// also I moved audio lifecycle methods from AndroidGraphicsLiveWallpaper into this class
+		
+		//graphics.pause();
+		//if (AndroidLiveWallpaperService.DEBUG) Log.d(AndroidLiveWallpaperService.TAG, " > AndroidLiveWallpaper - onPause() application paused!");
+		audio.pause();
+
 		input.unregisterSensorListeners();
+		
+		if (graphics != null && graphics.view != null) {
+			if (graphics.view instanceof GLSurfaceViewCupcake) ((GLSurfaceViewCupcake)graphics.view).onPause();
+			else if (graphics.view instanceof android.opengl.GLSurfaceView) ((android.opengl.GLSurfaceView)graphics.view).onPause();
+			else throw new RuntimeException("unimplemented");
+		}
+		
+		if (AndroidLiveWallpaperService.DEBUG) Log.d(AndroidLiveWallpaperService.TAG, " > AndroidLiveWallpaper - onPause() done!");
 	}
 
 	public void onResume() {
 		Gdx.app = this;
-		Gdx.input = this.getInput();
-		Gdx.audio = this.getAudio();
-		Gdx.files = this.getFiles();
-		Gdx.net = this.getNet();
-		Gdx.graphics = this.getGraphics();
+		Gdx.input = input;
+		Gdx.audio = audio;
+		Gdx.files = files;
+		Gdx.graphics = graphics;
 
-		((AndroidInput)getInput()).registerSensorListeners();
+		input.registerSensorListeners();
+		
+		// FIXME restore conditional execution if lifecycle errors will occur when GLSurfaceView used. 
+		// GLSurfaceView is guaranteed to work with this condition on, but GLSurfaceViewCupcake requires it off,
+		// so I disabled it.
+		//if (!firstResume)	// mentioned condition
+		if (graphics != null && graphics.view != null) {
+			if (graphics.view instanceof GLSurfaceViewCupcake) ((GLSurfaceViewCupcake)graphics.view).onResume();
+			else if (graphics.view instanceof android.opengl.GLSurfaceView) ((android.opengl.GLSurfaceView)graphics.view).onResume();
+			else throw new RuntimeException("unimplemented");
+		}
 		
-		if (audio != null) audio.resume();		
 		if (!firstResume)
+		{
+			audio.resume();
 			graphics.resume();
+		}
 		else
 			firstResume = false;
 	}
 	
 	public void onDestroy() {
-		graphics.clearManagedCaches();
-		// graphics.destroy();
-	}
 
-	public WallpaperService getService() {
-		return service;
+		// it is too late to call graphics.destroy - it needs live gl GLThread and gl context, otherwise it will cause of deadlock
+		//if (graphics != null) {
+		//	graphics.clearManagedCaches();
+		//	graphics.destroy();
+		//}
+		
+		// so we do what we can..
+		if (graphics != null)
+		{
+			// not necessary - already called in AndroidLiveWallpaperService.onDeepPauseApplication
+			// app.graphics.clearManagedCaches();
+			
+			// kill the GLThread managed by GLSurfaceView (only for GLSurfaceView because GLSurffaceViewCupcake stops thread in onPause events - which is not as easy and safe for GLSurfaceView)
+			if (graphics.view != null && (graphics.view instanceof GLSurfaceView))
+			{
+				GLSurfaceView glSurfaceView = (GLSurfaceView)graphics.view;
+				try {
+					Method method = null;
+					for (Method m : glSurfaceView.getClass().getMethods()) 
+					{
+						if (m.getName().equals("onDestroy"))	// implemented in AndroidGraphicsLiveWallpaper, redirects to onDetachedFromWindow - which stops GLThread by calling mGLThread.requestExitAndWait()
+						{
+							method = m;
+							break;
+						}
+					}
+					
+					if (method != null)
+					{
+						method.invoke(glSurfaceView);
+						if (AndroidLiveWallpaperService.DEBUG) Log.d(AndroidLiveWallpaperService.TAG, " > AndroidLiveWallpaper - onDestroy() stopped GLThread managed by GLSurfaceView");
+					}
+					else
+						throw new Exception("method not found!");
+				} 
+				catch (Throwable t)
+				{
+					// error while scheduling exit of GLThread, GLThread will remain live and wallpaper service wouldn't be able to shutdown completely
+					Log.e(AndroidLiveWallpaperService.TAG, "failed to destroy GLSurfaceView's thread! GLSurfaceView.onDetachedFromWindow impl changed since API lvl 16!");
+					t.printStackTrace();
+				}
+			}
+		}
+		
+		if (audio != null)
+		{
+			// dispose audio and free native resources, mandatory since graphics.pause is never called in live wallpaper
+			audio.dispose();
+		}
 	}
 
-	public Engine getEngine() {
-		return engine;
+	public WindowManager getWindowManager() {
+		return service.getWindowManager();
+	}
+	
+	public AndroidLiveWallpaperService getService() {
+		return service;
 	}
 
-	/** @deprecated Use {@link #getApplicationListener()} instead */
 	public ApplicationListener getListener() {
 		return listener;
 	}
 
-	public ApplicationListener getApplicationListener() {
-		return listener;
-	}
-	
 	@Override 
 	public void postRunnable (Runnable runnable) {
 		synchronized(runnables) {
diff --git a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidLiveWallpaperService.java b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidLiveWallpaperService.java
index 4524882..2397264 100755
--- a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidLiveWallpaperService.java
+++ b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidLiveWallpaperService.java
@@ -1,5 +1,5 @@
 /*
- * Copyright 2010 Elijah Cornell
+ * Copyright 2013 Jaroslaw Wisniewski <j.wisniewski@appsisle.com>
  * 
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the
  * License. You may obtain a copy of the License at
@@ -14,182 +14,644 @@
 
 package com.badlogic.gdx.backends.android;
 
+import java.lang.reflect.Method;
+import java.util.concurrent.locks.ReentrantLock;
+
+import com.badlogic.gdx.Application;
 import com.badlogic.gdx.ApplicationListener;
+import com.badlogic.gdx.Gdx;
+import com.badlogic.gdx.Graphics;
+import com.badlogic.gdx.android.AndroidWallpaperListener;
+import com.badlogic.gdx.backends.android.surfaceview.FillResolutionStrategy;
 import com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW;
+import com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake;
+import com.badlogic.gdx.graphics.GL10;
+import com.badlogic.gdx.graphics.GL11;
+import com.badlogic.gdx.utils.GdxNativesLoader;
 
+import android.app.Activity;
 import android.app.WallpaperManager;
+import android.content.Context;
+import android.opengl.GLSurfaceView;
 import android.os.Bundle;
+import android.os.Handler;
+import android.provider.LiveFolders;
 import android.service.wallpaper.WallpaperService;
 import android.service.wallpaper.WallpaperService.Engine;
 import android.util.Log;
 import android.view.MotionEvent;
 import android.view.SurfaceHolder;
+import android.view.WindowManager;
 
 
+/** 
+ * An implementation of the {@link Application} interface dedicated for android live wallpapers.
+ * 
+ * Derive from this class. In the {@link AndroidLiveWallpaperService#onCreateApplication} method call the {@link AndroidLiveWallpaperService#initialize(ApplicationListener, boolean)} 
+ * method specifying the configuration for the GLSurfaceView. You can also use {@link AndroidWallpaperListener} 
+ * along with {@link ApplicationListener} to respond for wallpaper specific events in your app listener:
+ * 
+ * MyAppListener implements ApplicationListener, AndroidWallpaperListener
+ * 
+ * Notice:
+ * Following methods are not called for live wallpapers:
+ * {@link ApplicationListener#pause()}
+ * {@link ApplicationListener#dispose()}
+ * TODO add callbacks to AndroidWallpaperListener allowing to notify app listener about changed visibility
+ * state of live wallpaper but called from main thread, not from GL thread:
+ * for example:
+ * AndroidWallpaperListener.visibilityChanged(boolean)
+ * 
+ * //obsoleted:
+ * //Notice!
+ * //You have to kill all not daemon threads you created in {@link ApplicationListener#pause()} method.
+ * //{@link ApplicationListener#dispose()} is never called!
+ * //If you leave live non daemon threads, wallpaper service wouldn't be able to close, 
+ * //this can cause problems with wallpaper lifecycle.
+ * 
+ * Notice #2!
+ * On some devices wallpaper service is not killed immediately after exiting from preview. Service object 
+ * is destroyed (onDestroy called) but process on which it runs remains alive. When user comes back to wallpaper
+ * preview, new wallpaper service object is created, but in the same process. It is important if you plan to
+ * use static variables / objects - they will be shared between living instances of wallpaper services'!
+ * And depending on your implementation - it can cause problems you were not prepared to.
+ * 
+ * @author Jaroslaw Wisniewski <j.wisniewski@appsisle.com>
+ */
 public abstract class AndroidLiveWallpaperService extends WallpaperService {
-	final String TAG = "AndroidLiveWallpaperService";
-	static boolean DEBUG = false;
-	protected static volatile int runningEngines = 0;
+	static {
+		GdxNativesLoader.load();
+	}
+	
+	static final String TAG = "WallpaperService";
+	static boolean DEBUG	= false;	// TODO remember to disable this
+
+	
+	// instance of libGDX Application, acts as singleton - one instance per application (per WallpaperService)
+	protected volatile AndroidLiveWallpaper app = null;	// can be accessed from GL render thread
+	protected SurfaceHolder.Callback view = null;
+	
+	// current format of surface (one GLSurfaceView is shared between all engines)
+	protected int viewFormat;
+	protected int viewWidth;
+	protected int viewHeight;
+	
+	// app is initialized when engines == 1 first time, app is destroyed in WallpaperService.onDestroy, but ApplicationListener.dispose is not called for wallpapers
+	protected int engines = 0;
+	protected int visibleEngines = 0;
+	
+	// engine currently associated with app instance, linked engine serves surface handler for GLSurfaceView
+	protected volatile AndroidWallpaperEngine linkedEngine = null;		// can be accessed from GL render thread by getSurfaceHolder
+	
+	protected void setLinkedEngine (AndroidWallpaperEngine linkedEngine) {
+		synchronized (sync) {
+			this.linkedEngine = linkedEngine;
+		}
+	}
+	
+	
+	// if preview state notified ever
+	protected volatile boolean isPreviewNotified = false;
+	
+	// the value of last preview state notified to app listener
+	protected volatile boolean notifiedPreviewState = false;
 
+
+	volatile int[] sync = new int[0];
+	//volatile ReentrantLock lock = new ReentrantLock();
+	
+	
+	// lifecycle methods - the order of calling (flow) is maintained ///////////////
+	
 	public AndroidLiveWallpaperService () {
 		super();
 	}
 
+	
+	/**
+	 * Service is starting, libGDX application is shutdown now
+	 */
 	@Override
 	public void onCreate () {
-		if (DEBUG) Log.d(TAG, " > LibdgxWallpaperService - onCreate()");
-		super.onCreate();
-	}
+		if (DEBUG) Log.d(TAG, " > AndroidLiveWallpaperService - onCreate() " + hashCode());
+		Log.i(TAG, "service created");
 
+		super.onCreate();		
+	}
+	
+	
+	/**
+	 * One of wallpaper engines is starting. 
+	 * Do not override this method, service manages them internally.
+	 */
 	@Override
 	public Engine onCreateEngine () {
+		if (DEBUG) Log.d(TAG, " > AndroidLiveWallpaperService - onCreateEngine()");
+		Log.i(TAG, "engine created");
+		
 		return new AndroidWallpaperEngine();
 	}
 	
+	
 	/**
-	 * @return a new {@link ApplicationListener} that implements the live wallpaper
+	 * libGDX application is starting, it occurs after first wallpaper engine had started.
+	 * Override this method an invoke {@link AndroidLiveWallpaperService#initialize(ApplicationListener, AndroidApplicationConfiguration)} from there.
 	 */
-	public abstract ApplicationListener createListener(boolean isPreview); 
+	public void onCreateApplication () {
+		if (DEBUG) Log.d(TAG, " > AndroidLiveWallpaperService - onCreateApplication()");
+	}
+	
+	
+	/** 
+	 * Look at {@link AndroidLiveWallpaperService#initialize(ApplicationListener, AndroidApplicationConfiguration)}}
+	 * @param listener
+	 * @param useGL2IfAvailable
+	 */
+	public void initialize (ApplicationListener listener, boolean useGL2IfAvailable) {
+		AndroidApplicationConfiguration config = new AndroidApplicationConfiguration();
+		config.useGL20 = useGL2IfAvailable;
+		initialize(listener, config);
+	}
+
+	/** 
+	 * This method has to be called in the {@link AndroidLiveWallpaperService#onCreateApplication} method. It sets up all the things necessary to get
+	 * input, render via OpenGL and so on. If config.useGL20 is set the AndroidApplication will try to create an OpenGL ES 2.0
+	 * context which can then be used via {@link Graphics#getGL20()}. The {@link GL10} and {@link GL11} interfaces should not be
+	 * used when OpenGL ES 2.0 is enabled. To query whether enabling OpenGL ES 2.0 was successful use the
+	 * {@link Graphics#isGL20Available()} method. You can configure other aspects of the application with the rest of the fields in
+	 * the {@link AndroidApplicationConfiguration} instance.
+	 * 
+	 * @param listener the {@link ApplicationListener} implementing the program logic
+	 * @param config the {@link AndroidApplicationConfiguration}, defining various settings of the application (use accelerometer,
+	 *           etc.). Do not change contents of this object after passing to this method!
+	 */
+	public void initialize (ApplicationListener listener, AndroidApplicationConfiguration config) {
+		if (DEBUG) Log.d(TAG, " > AndroidLiveWallpaperService - initialize()");
+		
+		app.initialize(listener, config);
+		
+		if (config.getTouchEventsForLiveWallpaper && Integer.parseInt(android.os.Build.VERSION.SDK) < 9)
+			linkedEngine.setTouchEventsEnabled(true);
+		
+		//onResume(); do not call it there
+	}
+	
 	
 	/**
-	 * @return a new {@link AndroidApplicationConfiguration} that specifies the config to be used for the live wall paper
+	 * Getter for SurfaceHolder object, surface holder is required to restore gl context in GLSurfaceView
 	 */
-	public abstract AndroidApplicationConfiguration createConfig();
+	public SurfaceHolder getSurfaceHolder() {
+		if (DEBUG) Log.d(TAG, " > AndroidLiveWallpaperService - getSurfaceHolder()");
+		
+		synchronized (sync) {
+			if (linkedEngine == null)
+				return null;
+			else 
+				return linkedEngine.getSurfaceHolder();
+		}
+	}
+	
+	
+	// engines live there
+	
 	
 	/**
-	 * Called when the live wallpaper's offset changed. This method will be called
-	 * on the rendering thread.
-	 * @param xOffset
-	 * @param yOffset
-	 * @param xOffsetStep
-	 * @param yOffsetStep
-	 * @param xPixelOffset
-	 * @param yPixelOffset
+	 * Called when the last engine is ending its live, it can occur when:
+	 * 1. service is dying
+	 * 2. service is switching from one engine to another
+	 * 3. [only my assumption] when wallpaper is not visible and system is going to restore some memory 
+	 * 	for foreground processing by disposing not used wallpaper engine
+	 * We can't destroy app there, because:
+	 * 1. in won't work - gl context is disposed right now and after app.onDestroy() app would stuck somewhere in gl thread synchronizing code
+	 * 2. we don't know if service create more engines, app is shared between them and should stay initialized waiting for new engines
 	 */
-	public abstract void offsetChange (ApplicationListener listener, float xOffset, float yOffset, float xOffsetStep, float yOffsetStep, int xPixelOffset, int yPixelOffset);
+	public void onDeepPauseApplication () {
+		if (DEBUG) Log.d(TAG, " > AndroidLiveWallpaperService - onDeepPauseApplication()");
+		
+		// free native resources consuming runtime memory, note that it can cause some lag when resuming wallpaper
+		if (app != null) {
+			app.graphics.clearManagedCaches();
+		}
+	}
+	
 	
+	/**
+	 * Service is dying, and will not be used again.
+	 * You have to finish execution off all living threads there or short after there, 
+	 * besides the new wallpaper service wouldn't be able to start.
+	 */
 	@Override
 	public void onDestroy () {
-		if (DEBUG) Log.d(TAG, " > LibdgxWallpaperService - onDestroy()");
-		super.onDestroy();
+		if (DEBUG) Log.d(TAG, " > AndroidLiveWallpaperService - onDestroy() " + hashCode());
+		Log.i(TAG, "service destroyed");
+		
+		super.onDestroy();	// can call engine.onSurfaceDestroyed, must be before bellow code:
+		
+		if (app != null) {
+			app.onDestroy();
+			
+			app = null;
+			view = null;
+		}
 	}
 	
+	
+	@Override
+	protected void finalize () throws Throwable {
+		Log.i(TAG, "service finalized");
+		super.finalize();
+	}
+	
+	// end of lifecycle methods ////////////////////////////////////////////////////////
+	
+	
+	
+	public AndroidLiveWallpaper getLiveWallpaper() {
+		return app;
+	}
+	
+	
+	public WindowManager getWindowManager() {
+		return (WindowManager)getSystemService(Context.WINDOW_SERVICE);
+	}
+	
+	
+	/**
+	 * Bridge between surface on which wallpaper is rendered and the wallpaper service. 
+	 * The problem is that there can be a group of Engines at one time and we must share libGDX application between them.
+	 * 
+	 * @author libGDX team and Jaroslaw Wisniewski <j.wisniewski@appsisle.com>
+	 *
+	 */
 	public class AndroidWallpaperEngine extends Engine {
-		protected AndroidLiveWallpaper app;
-		protected ApplicationListener listener;
-		protected GLBaseSurfaceViewLW view;
 
+		protected boolean engineIsVisible = false;
+		
+		// destination format of surface when this engine is active (updated in onSurfaceChanged)
+		protected int engineFormat;
+		protected int engineWidth;
+		protected int engineHeight;
+		
+		
+		// lifecycle methods - the order of calling (flow) is maintained /////////////////
+		
 		public AndroidWallpaperEngine () {
-			if (AndroidLiveWallpaperService.DEBUG) Log.d(AndroidLiveWallpaperService.this.TAG, " > MyEngine() " + hashCode());
+			if (DEBUG) Log.d(TAG, " > AndroidWallpaperEngine() " + hashCode());
 		}
 
+		
 		@Override
-		public Bundle onCommand (final String pAction, final int pX, final int pY, final int pZ, final Bundle pExtras,
-			final boolean pResultRequested) {
+		public void onCreate (final SurfaceHolder surfaceHolder) {
+			if (DEBUG) Log.d(TAG, " > AndroidWallpaperEngine - onCreate() " + hashCode() + " running: " + engines + ", linked: " + (linkedEngine == this) + ", thread: " + Thread.currentThread().toString());
+			super.onCreate(surfaceHolder);
+		}
+		
+		
+		/**
+		 * Called before surface holder callbacks (ex for GLSurfaceView)!
+		 * This is called immediately after the surface is first created. Implementations of this should start 
+		 * up whatever rendering code they desire. Note that only one thread can ever draw into a Surface, 
+		 * so you should not draw into the Surface here if your normal rendering will be in another thread.
+		 */
+		@Override
+		public void onSurfaceCreated (final SurfaceHolder holder) {
+			engines ++;
+			setLinkedEngine(this);
+			
+			if (DEBUG) Log.d(TAG, " > AndroidWallpaperEngine - onSurfaceCreated() " + hashCode() + ", running: " + engines + ", linked: " + (linkedEngine == this));
+			Log.i(TAG, "engine surface created");
+			
+			super.onSurfaceCreated(holder);
+	
+			if (engines == 1) {
+				// safeguard: recover attributes that could suffered by unexpected surfaceDestroy event
+				visibleEngines = 0;
+			}
+			
+			if (engines == 1 && app == null) {
+				viewFormat = 0;	// must be initialized with zeroes
+				viewWidth = 0;
+				viewHeight = 0;
+				
+				app = new AndroidLiveWallpaper(AndroidLiveWallpaperService.this);
+				
+				onCreateApplication();
+				if (app.graphics == null)
+					throw new Error("You must override 'AndroidLiveWallpaperService.onCreateApplication' method and call 'initialize' from its body.");
+				
+				view = (SurfaceHolder.Callback)app.graphics.view;
+				this.getSurfaceHolder().removeCallback(view);	// we are going to call this events manually
+			}
 
-			if (AndroidLiveWallpaperService.DEBUG)
-				Log.d(TAG, " > onCommand(" + pAction + " " + pX + " " + pY + " " + pZ + " " + pExtras + " "
-					+ pResultRequested + ")");
+			// inherit format from shared surface view
+			engineFormat = viewFormat;
+			engineWidth = viewWidth;
+			engineHeight = viewHeight;
 
-			// FIXME
-//			if (pAction.equals(WallpaperManager.COMMAND_TAP)) {
-//				app.input.onTap(pX, pY);
-//			} else if (pAction.equals(WallpaperManager.COMMAND_DROP)) {
-//				app.input.onDrop(pX, pY);
-//			}
-			return super.onCommand(pAction, pX, pY, pZ, pExtras, pResultRequested);
+			if (engines == 1) {
+				view.surfaceCreated(holder);
+			}
+			else {
+				// this combination of methods is described in AndroidWallpaperEngine.onResume
+				view.surfaceDestroyed(holder);
+				notifySurfaceChanged(engineFormat, engineWidth, engineHeight, false);
+				view.surfaceCreated(holder);
+			}
+			
+			notifyPreviewState();
+			notifyOffsetsChanged();
 		}
-
+		
+		
+		/**
+		 * This is called immediately after any structural changes (format or size) have been made to the surface. 
+		 * You should at this point update the imagery in the surface. This method is always called at least once, 
+		 * after surfaceCreated(SurfaceHolder).
+		 */
 		@Override
-		public void onCreate (final SurfaceHolder surfaceHolder) {
-			runningEngines++;
-			if (AndroidLiveWallpaperService.DEBUG) Log.d(TAG, " > onCreate() " + hashCode() + ", running: " + runningEngines);
-			super.onCreate(surfaceHolder);
-			this.app = new AndroidLiveWallpaper(AndroidLiveWallpaperService.this, this);
-			AndroidApplicationConfiguration config = createConfig();
-			listener = createListener(isPreview());
-			this.app.initialize(listener, config);
-			this.view = ((AndroidGraphicsLiveWallpaper)app.getGraphics()).getView();
+		public void onSurfaceChanged (final SurfaceHolder holder, final int format, final int width, final int height) {
+			if (DEBUG) Log.d(TAG, " > AndroidWallpaperEngine - onSurfaceChanged() isPreview: " + isPreview() + ", " + hashCode() + ", running: " + engines + ", linked: " + (linkedEngine == this) + ", sufcace valid: " + getSurfaceHolder().getSurface().isValid());
+			Log.i(TAG, "engine surface changed");
+			
+			super.onSurfaceChanged(holder, format, width, height);
+			
+			notifySurfaceChanged(format, width, height, true);
+			
+			// it shouldn't be required there (as I understand android.service.wallpaper.WallpaperService impl)
+			//notifyPreviewState();
+		}
 
-			if (config.getTouchEventsForLiveWallpaper && Integer.parseInt(android.os.Build.VERSION.SDK) < 9)
-				this.setTouchEventsEnabled(true);
+		
+		/**
+		 * Notifies shared GLSurfaceView about changed surface format.
+		 * @param format
+		 * @param width
+		 * @param height
+		 * @param forceUpdate if false, surface view will be notified only if currently contains expired information
+		 */
+		private void notifySurfaceChanged(final int format, final int width, final int height, boolean forceUpdate)
+		{
+			if (!forceUpdate && format == viewFormat && width == viewWidth && height == viewHeight) {
+				// skip if didn't changed
+				if (DEBUG) Log.d(TAG, " > surface is current, skipping surfaceChanged event");
+			}
+			else {
+				// update engine desired surface format
+				engineFormat = format;
+				engineWidth = width;
+				engineHeight = height;
+				
+				// update surface view if engine is linked with it already
+				if (linkedEngine == this) {
+					viewFormat = engineFormat;
+					viewWidth = engineWidth;
+					viewHeight = engineHeight;
+					view.surfaceChanged(this.getSurfaceHolder(), viewFormat, viewWidth, viewHeight);
+				}
+				else {
+					if (DEBUG) Log.d(TAG, " > engine is not active, skipping surfaceChanged event");
+				}
+			}
 		}
+		
 
+		/**
+		 * Called to inform you of the wallpaper becoming visible or hidden. It is very important that 
+		 * a wallpaper only use CPU while it is visible..
+		 */
 		@Override
-		public void onDestroy () {
-			runningEngines--;
-			if (AndroidLiveWallpaperService.DEBUG) Log.d(AndroidLiveWallpaperService.this.TAG, " > onDestroy() " + hashCode() + ", running: " + runningEngines);
-			view.onDestroy();
-			if (listener != null)
-				listener.dispose();
-			app.onDestroy();
-			super.onDestroy();
-		}
+		public void onVisibilityChanged (final boolean visible) {
+			boolean reportedVisible = isVisible();
 
-		public void onPause () {
-			if (AndroidLiveWallpaperService.DEBUG) Log.d(AndroidLiveWallpaperService.this.TAG, " > onPause() " + hashCode() + ", running: " + runningEngines);
-			app.onPause();
-			view.onPause();
-		}
+			if (DEBUG) Log.d(TAG, " > AndroidWallpaperEngine - onVisibilityChanged(paramVisible: " + visible + " reportedVisible: " + reportedVisible + ") " + hashCode()  + ", sufcace valid: " + getSurfaceHolder().getSurface().isValid());
+			super.onVisibilityChanged(visible);
 
-		public void onResume () {
-			if (AndroidLiveWallpaperService.DEBUG) Log.d(AndroidLiveWallpaperService.this.TAG, " > onResume() " + hashCode() + ", running: " + runningEngines);
-			app.onResume();
-			view.onResume();
+			// Android WallpaperService sends fake visibility changed events to force some buggy live wallpapers to shut down after onSurfaceChanged when they aren't visible, it can cause problems in current implementation and it is not necessary
+			if (reportedVisible == false && visible == true) {
+				if (DEBUG) Log.d(TAG, " > fake visibilityChanged event! Android WallpaperService likes do that!");
+				return;
+			}
+
+			notifyVisibilityChanged(visible);
 		}
 
-		@Override
-		public void onSurfaceChanged (final SurfaceHolder holder, final int format, final int width, final int height) {
-			if (AndroidLiveWallpaperService.DEBUG)
-				Log.d(AndroidLiveWallpaperService.this.TAG, " > onSurfaceChanged() " + isPreview() + " " + hashCode() + ", running: " + runningEngines);
-			super.onSurfaceChanged(holder, format, width, height);
+		
+		private void notifyVisibilityChanged(final boolean visible)
+		{
+			if (this.engineIsVisible != visible) {
+				this.engineIsVisible = visible;
+				
+				if (this.engineIsVisible)
+					onResume();
+				else
+					onPause();
+			}
+			else {
+				if (DEBUG) Log.d(TAG, " > visible state is current, skipping visibilityChanged event!");
+			}
 		}
+		
+		
+		public void onResume () {
+			visibleEngines ++;
+			if (DEBUG) Log.d(TAG, " > AndroidWallpaperEngine - onResume() " + hashCode() + ", running: " + engines + ", linked: " + (linkedEngine == this) + ", visible: " + visibleEngines);
+			Log.i(TAG, "engine resumed");
+			
+			if (linkedEngine != null) {
+				if (linkedEngine != this) {
+					setLinkedEngine(this);
+					
+					// disconnect surface view from previous window
+					view.surfaceDestroyed(this.getSurfaceHolder());	// force gl surface reload, new instance will be created on current surface holder
+					
+					// resize surface to match window associated with current engine
+					notifySurfaceChanged(engineFormat, engineWidth, engineHeight, false);
 
-		@Override
-		public void onSurfaceCreated (final SurfaceHolder holder) {
-			if (AndroidLiveWallpaperService.DEBUG) Log.d(AndroidLiveWallpaperService.this.TAG, " > onSurfaceCreated() " + hashCode() + ", running: " + runningEngines);
-			super.onSurfaceCreated(holder);
+					// connect surface view to current engine
+					view.surfaceCreated(this.getSurfaceHolder());
+				}
+				else {
+					// update if surface changed when engine wasn't active
+					notifySurfaceChanged(engineFormat, engineWidth, engineHeight, false);
+				}
+				
+				if (visibleEngines == 1)
+					app.onResume();
+
+				notifyPreviewState();
+				notifyOffsetsChanged();
+			}
+		}
+		
+		
+		public void onPause () {
+			visibleEngines --;
+			if (DEBUG) Log.d(TAG, " > AndroidWallpaperEngine - onPause() " + hashCode() + ", running: " + engines + ", linked: " + (linkedEngine == this) + ", visible: " + visibleEngines);
+			Log.i(TAG, "engine paused");
+			
+			// this shouldn't never happen, but if it will.. live wallpaper will not be stopped when device will pause and lwp will drain battery.. shortly!
+			if (visibleEngines >= engines) {
+				Log.e(AndroidLiveWallpaperService.TAG, "wallpaper lifecycle error, counted too many visible engines! repairing..");
+				visibleEngines = Math.max(engines - 1, 0);
+			}
+			
+			if (linkedEngine != null) {
+				if (visibleEngines == 0)
+					app.onPause();
+			}
+			
+			if (DEBUG) Log.d(TAG, " > AndroidWallpaperEngine - onPause() done!");
 		}
 
+		
+		/**
+		 * Called after surface holder callbacks (ex for GLSurfaceView)!
+		 * This is called immediately before a surface is being destroyed. After returning from this call, 
+		 * you should no longer try to access this surface. If you have a rendering thread that directly 
+		 * accesses the surface, you must ensure that thread is no longer touching the Surface before 
+		 * returning from this function.
+		 * 
+		 * Attention!
+		 * In some cases GL context may be shutdown right now! and SurfaceHolder.Surface.isVaild = false
+		 */
 		@Override
 		public void onSurfaceDestroyed (final SurfaceHolder holder) {
-			if (AndroidLiveWallpaperService.DEBUG) Log.d(AndroidLiveWallpaperService.this.TAG, " > onSurfaceDestroyed() " + hashCode()  + ", running: " + runningEngines);
+			engines --;
+			if (DEBUG) Log.d(TAG, " > AndroidWallpaperEngine - onSurfaceDestroyed() " + hashCode()  + ", running: " + engines + " ,linked: " + (linkedEngine == this) + ", isVisible: " + engineIsVisible);
+			Log.i(TAG, "engine surface destroyed");
+			
+			// application can be in resumed state at this moment if app surface had been lost just after it was created (wallpaper selected too fast from preview mode etc)
+			// it is too late probably - calling on pause causes deadlock
+			//notifyVisibilityChanged(false);
+			
+			// it is too late to call app.onDispose, just free native resources
+			if (engines == 0)
+				onDeepPauseApplication();
+			
+			// free surface if it belongs to this engine and if it was initialized
+			if (linkedEngine == this && view != null)
+				view.surfaceDestroyed(holder);
+		
+			//waitingSurfaceChangedEvent = null;
+			engineFormat = 0;
+			engineWidth = 0;
+			engineHeight = 0;
+			
+			// safeguard for other engine callbacks
+			if (engines == 0)
+				linkedEngine = null;
+			
 			super.onSurfaceDestroyed(holder);
 		}
-
+		
+		
 		@Override
-		public void onVisibilityChanged (final boolean visible) {
-			if (AndroidLiveWallpaperService.DEBUG)
-				Log.d(AndroidLiveWallpaperService.this.TAG, " > onVisibilityChanged(" + visible + ") " + hashCode());
-			if (visible) {
-				onResume();
-			} else {
-				onPause();
-			}
-
-			super.onVisibilityChanged(visible);
+		public void onDestroy () {
+			super.onDestroy();
 		}
 
+		// end of lifecycle methods ////////////////////////////////////////////////////////
+		
+		
+		// input
+		
+		@Override
+		public Bundle onCommand (final String pAction, final int pX, final int pY, final int pZ, final Bundle pExtras,
+			final boolean pResultRequested) {
+			if (DEBUG) Log.d(TAG, " > AndroidWallpaperEngine - onCommand(" + pAction + " " + pX + " " + pY + " " + pZ + " " + pExtras + " " + pResultRequested + ")" + ", linked: " + (linkedEngine == this));
+			
+			return super.onCommand(pAction, pX, pY, pZ, pExtras, pResultRequested);
+		}
+		
+		
 		@Override
 		public void onTouchEvent (MotionEvent event) {
-			app.input.onTouch(null, event);
+			if (linkedEngine == this) {
+				app.input.onTouch(null, event);
+			}
 		}
+		
+		
+		// offsets from last onOffsetsChanged
+		boolean offsetsConsumed = true;
+		float xOffset = 0.0f;
+		float yOffset = 0.0f;
+		float xOffsetStep = 0.0f;
+		float yOffsetStep = 0.0f;
+		int xPixelOffset = 0;
+		int yPixelOffset = 0;
 
 		@Override
 		public void onOffsetsChanged (final float xOffset, final float yOffset, final float xOffsetStep, final float yOffsetStep, final int xPixelOffset,
 			final int yPixelOffset) {
 
-			if (AndroidLiveWallpaperService.DEBUG)
-				Log.d(AndroidLiveWallpaperService.this.TAG, " > onOffsetChanged(" + xOffset + " " + yOffset + " " + xOffsetStep + " "
-					+ yOffsetStep + " " + xPixelOffset + " " + yPixelOffset + ") " + hashCode());
+			// it spawns too frequent on some devices - its annoying!
+			//if (DEBUG)
+			//	Log.d(TAG, " > AndroidWallpaperEngine - onOffsetChanged(" + xOffset + " " + yOffset + " " + xOffsetStep + " "
+			//		+ yOffsetStep + " " + xPixelOffset + " " + yPixelOffset + ") " + hashCode() + ", linkedApp: " + (linkedApp != null));
 
-			app.postRunnable(new Runnable() {
-				@Override
-				public void run () {
-					AndroidLiveWallpaperService.this.offsetChange(listener, xOffset, yOffset, xOffsetStep, yOffsetStep, xPixelOffset, yPixelOffset);	
-				}
-			});
+			this.offsetsConsumed = false;
+			this.xOffset = xOffset;
+			this.yOffset = yOffset;
+			this.xOffsetStep = xOffsetStep;
+			this.yOffsetStep = yOffsetStep;
+			this.xPixelOffset = xPixelOffset;
+			this.yPixelOffset = yPixelOffset;
+			
+			// can fail if linkedApp == null, so we repeat it in Engine.onResume
+			notifyOffsetsChanged();
+			
 			super.onOffsetsChanged(xOffset, yOffset, xOffsetStep, yOffsetStep, xPixelOffset, yPixelOffset);
 		}
+		
+		
+		protected void notifyOffsetsChanged()
+		{
+			if (linkedEngine == this && app.listener instanceof AndroidWallpaperListener) {
+				if (!offsetsConsumed) {		// no need for more sophisticated synchronization - offsetsChanged can be called multiple times and with various patterns on various devices - user application must be prepared for that
+					offsetsConsumed = true;
+					
+					app.postRunnable(new Runnable() {
+						@Override
+						public void run () {
+							boolean isCurrent = false;
+							synchronized (sync) {
+								isCurrent = (linkedEngine == AndroidWallpaperEngine.this);		// without this app can crash when fast switching between engines (tested!)
+							}
+							if (isCurrent)
+								((AndroidWallpaperListener)app.listener).offsetChange(xOffset, yOffset, xOffsetStep, yOffsetStep, xPixelOffset, yPixelOffset);	
+						}
+					});
+				}
+			}
+		}
+		
+		
+		protected void notifyPreviewState()
+		{
+			// notify preview state to app listener
+			if (linkedEngine == this && app.listener instanceof AndroidWallpaperListener) {
+				final boolean currentPreviewState = linkedEngine.isPreview();
+				app.postRunnable(new Runnable() {
+					@Override
+					public void run () {
+						boolean shouldNotify = false;
+						synchronized (sync) {
+							if (!isPreviewNotified || notifiedPreviewState != currentPreviewState) {
+								notifiedPreviewState = currentPreviewState;
+								isPreviewNotified = true;
+								shouldNotify = true;
+							}
+						}
+						
+						if (shouldNotify) {
+							AndroidLiveWallpaper currentApp = app;		// without this app can crash when fast switching between engines (tested!)
+							if (currentApp != null)
+								((AndroidWallpaperListener)currentApp.listener).previewStateChange(currentPreviewState);
+						}
+					}
+				});
+			}
+		}
 	}	
 }
diff --git a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidNet.java b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidNet.java
index 953e2e3..1c7a261 100755
--- a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidNet.java
+++ b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidNet.java
@@ -62,7 +62,7 @@ import com.badlogic.gdx.utils.JsonWriter;
  * @author acoppes */
 public class AndroidNet implements Net {
 
-	// IMPORTANT: The Gdx.net classes are a currently duplicated for JGLFW/LWJGL + Android!
+	// IMPORTANT: The Gdx.net classes are a currently duplicated for LWJGL + Android!
 	// If you make changes here, make changes in the other backend as well.
 	final AndroidApplication app;
 	NetJavaImpl netJavaImpl;
@@ -89,10 +89,6 @@ public class AndroidNet implements Net {
 
 	@Override
 	public void openURI (String URI) {
-		if(app == null) {
-			Gdx.app.log("AndroidNet", "Can't open browser activity from livewallpaper");
-			return;
-		}
 		final Uri uri = Uri.parse(URI);
 		app.runOnUiThread(new Runnable() {
 			@Override
diff --git a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/surfaceview/GLBaseSurfaceViewLW.java b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/surfaceview/GLBaseSurfaceViewLW.java
index 0d8c549..a64187d 100755
--- a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/surfaceview/GLBaseSurfaceViewLW.java
+++ b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/surfaceview/GLBaseSurfaceViewLW.java
@@ -506,7 +506,7 @@ public class GLBaseSurfaceViewLW
 	 * An interface for customizing the eglCreateContext and eglDestroyContext calls.
 	 * <p>
 	 * This interface must be implemented by clients wishing to call
-	 * GLBaseSurfaceViewLW#setEGLContextFactory(EGLContextFactory)
+	 * {@link GLBaseSurfaceViewLW#setEGLContextFactory(EGLContextFactory)}
 	 */
 	public interface EGLContextFactory {
 		EGLContext createContext (EGL10 egl, EGLDisplay display, EGLConfig eglConfig);
@@ -529,7 +529,7 @@ public class GLBaseSurfaceViewLW
 	 * An interface for customizing the eglCreateWindowSurface and eglDestroySurface calls.
 	 * <p>
 	 * This interface must be implemented by clients wishing to call
-	 * GLBaseSurfaceViewLW#setEGLWindowSurfaceFactory(EGLWindowSurfaceFactory)
+	 * {@link GLBaseSurfaceViewLW#setEGLWindowSurfaceFactory(EGLWindowSurfaceFactory)}
 	 */
 	public interface EGLWindowSurfaceFactory {
 		EGLSurface createWindowSurface (EGL10 egl, EGLDisplay display, EGLConfig config, Object nativeWindow);
diff --git a/backends/gdx-backend-iosmonotouch/.settings/org.eclipse.core.resources.prefs b/backends/gdx-backend-iosmonotouch/.settings/org.eclipse.core.resources.prefs
new file mode 100644
index 0000000..8f33249
--- /dev/null
+++ b/backends/gdx-backend-iosmonotouch/.settings/org.eclipse.core.resources.prefs
@@ -0,0 +1,3 @@
+#Sat Jun 09 00:54:49 CEST 2012
+eclipse.preferences.version=1
+encoding//natives/iosgles20.cpp=UTF-8
diff --git a/backends/gdx-backend-iosmonotouch/README b/backends/gdx-backend-iosmonotouch/README
new file mode 100644
index 0000000..0368444
--- /dev/null
+++ b/backends/gdx-backend-iosmonotouch/README
@@ -0,0 +1,39 @@
+== folders ==
+libs/ikvm-monotouch   ... contains the MonoTouch comaptible IVKM binaries
+libs/monotouch-jars   ... contains the jar files for the MonoTouch APIs
+          
+
+
+== IKVM ==
+The libs/ folder contains precompiled assemblies and executables for mono. These can be build
+by following the instructions at https://github.com/samskivert/ikvm-monotouch. The one's in
+SVN should be good enough for now.
+
+== How to develop for the backend ==
+After checking out the libgdx source, execute ant in gdx-backends-iosmonotouch/. This will
+generate libs/gdx.dll and libs/gdx-backend-ios.dll and libgdx.a necessary for the MonoTouch project in mono/.
+
+The development cycle should look like this from now on:
+
+1) Open Eclipse and import the gdx, gdx-jnigen and gdx-backends-iosmonotouch projects.
+2) Open MonoDevelop and open the solution in the gdx-backens-iosmonotouch/mono folder.
+3) Change your code in Eclipse
+4) Build and run in MonoDevelop. The mono project has a custom build step that invokes ant to build
+the backend and create an assembly.
+   
+== How should the process for users look like? ==
+Insead of another Eclipse project, we'll have a MonoTouch project. That will use an assembly generated
+from the core project and symlink to the android project's assets folder. All it does it fire up
+an IOSApplication, passing the ApplicationListener to it. We can add a custom build step in the Monotouch
+project that compiles the core projects Java files and creates a new Mono assembly. That should just work :)
+   
+== Native code ==
+Is contained in the XCode project in the natives folder. We only compile core at the moment.
+
+TODO:
+- add wrapper for GLES 1.x?  (we have 2.0 working)
+- audio
+  - use AVMediaPlayerSomethingSomething for Music
+  - use OpenAL for Sound
+  - maybe expose all of OpenAL similar to GL?
+- figure out retina stuff, wow, this is really horrible, to much magic
diff --git a/backends/gdx-backend-iosmonotouch/build-natives.sh b/backends/gdx-backend-iosmonotouch/build-natives.sh
new file mode 100755
index 0000000..02299b2
--- /dev/null
+++ b/backends/gdx-backend-iosmonotouch/build-natives.sh
@@ -0,0 +1,10 @@
+rm lib*.a
+xcodebuild -project natives.xcodeproj -target natives -sdk iphonesimulator -configuration Release clean build
+cp build/Release-iphonesimulator/libnatives.a libnatives-i386.a
+xcodebuild -project natives.xcodeproj -target natives -sdk iphoneos -arch armv7 -configuration Release clean build
+cp build/Release-iphoneos/libnatives.a libnatives-arm7.a
+lipo -create -output libnatives.a libnatives-i386.a libnatives-arm7.a
+cp libnatives.a ../libs/libgdx.a
+cp libnatives.a ../mono/mono/libgdx.a
+cp ../libs/libikvm-natives.a ../mono/mono/
+rm libnatives*
diff --git a/backends/gdx-backend-iosmonotouch/build.xml b/backends/gdx-backend-iosmonotouch/build.xml
new file mode 100644
index 0000000..69b0f67
--- /dev/null
+++ b/backends/gdx-backend-iosmonotouch/build.xml
@@ -0,0 +1,49 @@
+<project name="gdx" default="compile" basedir="">
+	<description>Compiles the gdx core and gdx ios backend Java classes and creates a dlls via ikvm. The resulting assemblies are placed in libs/.</description>
+	<property environment="env" />
+		
+	<target name="compile-core">
+		<delete dir="target/core"/>
+		<delete file="libs/gdx.dll"/>
+		<delete file="libs/libgdx.a"/>
+		<mkdir dir="target/core" />
+		<javac sourcepath="" debug="on" srcdir="../../gdx/src" destdir="target/core" >
+			<include name="**/*.java"/>
+			<exclude name="**/*Build.java"/>
+			<exclude name="**/Remote*.java"/>
+			<exclude name="**/Desktop*.java"/>
+		</javac>
+		<ant antfile="convert.xml" dir=".">
+			<property name="IN" value="-srcpath:../../gdx/src -recurse:target/core/*.class"/>
+			<property name="OUT" value="libs/gdx.dll"/>
+		</ant>
+		<exec executable="sh" dir="natives">
+			<arg value="../build-natives.sh"/>
+		</exec>
+	</target>
+	
+	<target name="compile-backend">
+		<delete dir="target/backend"/>
+		<mkdir dir="target/backend" />
+		<javac sourcepath="" debug="on" srcdir="src" destdir="target/backend" >
+			<include name="**/*.java"/>		
+			<classpath>
+			<fileset dir="libs/monotouch-jars">
+				<include name="**/*.jar"/>
+			</fileset>
+			<fileset dir="libs/objectal">
+				<include name="**/*.jar"/>
+			</fileset>
+			<pathelement path="target/core"/>
+			</classpath>
+		</javac>
+		<jar destfile="libs/gdx-backend-ios.jar" basedir="target/backend" />
+		<ant antfile="convert.xml" dir=".">
+			<property name="IN" value="-srcpath:src -r:libs/gdx.dll -recurse:target/backend/*.class"/>
+			<property name="OUT" value="libs/gdx-backend-ios.dll"/>
+		</ant>
+	</target>
+	
+	<target name="compile" depends="compile-core, compile-backend">
+	</target>
+</project>
diff --git a/backends/gdx-backend-iosmonotouch/convert.xml b/backends/gdx-backend-iosmonotouch/convert.xml
new file mode 100644
index 0000000..03ac521
--- /dev/null
+++ b/backends/gdx-backend-iosmonotouch/convert.xml
@@ -0,0 +1,38 @@
+<project name="gdx" default="convert" basedir=".">
+	<property environment="env"/>
+	<property name="IKVM_HOME" value="${env.IKVM_HOME}"/>
+	<property name="MONO_HOME" value="/Developer/MonoTouch/usr/lib/mono/2.1"/>
+	<property name="IN" value="-recurse:target/core/*.class"/>
+	<property name="OUT" value="gdx.dll"/>
+	<property name="SRC" value="src/"/>
+	<property name="CLASSPATH" value=""/>
+	<property name="EXCLUDE" value=""/>
+
+	<target name="compile">
+		<delete dir="target"/>
+		<mkdir dir="target"/>
+		<javac srcdir="${SRC}" destdir="target" classpath="${CLASSPATH}">
+			<include name="**/*.java"/>
+			<exclude name="${EXCLUDE}"/>
+		</javac>
+	</target>
+
+	<target name="convert">
+		<exec executable="mono">
+			<arg value="${IKVM_HOME}/bin/ikvmc.exe"/>
+			<arg value="-nostdlib"/>
+			<arg value="-target:library"/>
+			<arg value="-debug"/>
+			<arg value="-out:${OUT}"/>
+			<arg value="-r:libs/objectal/libObjectAL.dll"/>
+			<arg value="-r:${MONO_HOME}/mscorlib.dll"/>
+			<arg value="-r:${MONO_HOME}/System.dll"/>
+			<arg value="-r:${MONO_HOME}/System.Core.dll"/>
+			<arg value="-r:${MONO_HOME}/System.Data.dll"/>
+			<arg value="-r:${MONO_HOME}/OpenTK-1.0.dll"/>
+			<arg value="-r:${MONO_HOME}/monotouch.dll"/>
+			<arg value="-r:${MONO_HOME}/Mono.Data.Sqlite.dll"/>
+			<arg line="${IN}"/>
+		</exec>
+	</target>
+</project>
diff --git a/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/IKVM.OpenJDK.Beans.dll b/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/IKVM.OpenJDK.Beans.dll
index 34b536d..11a7225 100755
Binary files a/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/IKVM.OpenJDK.Beans.dll and b/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/IKVM.OpenJDK.Beans.dll differ
diff --git a/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/IKVM.OpenJDK.Charsets.dll b/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/IKVM.OpenJDK.Charsets.dll
index f401ee3..f9bb039 100755
Binary files a/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/IKVM.OpenJDK.Charsets.dll and b/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/IKVM.OpenJDK.Charsets.dll differ
diff --git a/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/IKVM.OpenJDK.Core.dll b/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/IKVM.OpenJDK.Core.dll
index 4d07600..d7f390c 100755
Binary files a/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/IKVM.OpenJDK.Core.dll and b/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/IKVM.OpenJDK.Core.dll differ
diff --git a/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/IKVM.OpenJDK.Misc.dll b/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/IKVM.OpenJDK.Misc.dll
index d52ac74..586e0ec 100755
Binary files a/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/IKVM.OpenJDK.Misc.dll and b/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/IKVM.OpenJDK.Misc.dll differ
diff --git a/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/IKVM.OpenJDK.Text.dll b/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/IKVM.OpenJDK.Text.dll
index a749f25..1332efc 100755
Binary files a/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/IKVM.OpenJDK.Text.dll and b/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/IKVM.OpenJDK.Text.dll differ
diff --git a/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/IKVM.OpenJDK.Util.dll b/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/IKVM.OpenJDK.Util.dll
index f7fb356..a5f2e58 100755
Binary files a/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/IKVM.OpenJDK.Util.dll and b/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/IKVM.OpenJDK.Util.dll differ
diff --git a/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/IKVM.Reflection.dll b/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/IKVM.Reflection.dll
index 3397a34..6bd771b 100755
Binary files a/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/IKVM.Reflection.dll and b/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/IKVM.Reflection.dll differ
diff --git a/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/IKVM.Runtime.JNI.dll b/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/IKVM.Runtime.JNI.dll
index 8937ed2..69315ed 100755
Binary files a/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/IKVM.Runtime.JNI.dll and b/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/IKVM.Runtime.JNI.dll differ
diff --git a/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/IKVM.Runtime.dll b/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/IKVM.Runtime.dll
index 14c5b9e..d2e9bd4 100755
Binary files a/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/IKVM.Runtime.dll and b/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/IKVM.Runtime.dll differ
diff --git a/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/ikvm.exe b/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/ikvm.exe
index 45fc27e..11fcab2 100755
Binary files a/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/ikvm.exe and b/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/ikvm.exe differ
diff --git a/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/ikvmc.exe b/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/ikvmc.exe
index 5c87238..bbeb34e 100755
Binary files a/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/ikvmc.exe and b/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/ikvmc.exe differ
diff --git a/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/ikvmstub.exe b/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/ikvmstub.exe
index 49f0823..2bc8f87 100755
Binary files a/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/ikvmstub.exe and b/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/ikvmstub.exe differ
diff --git a/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/libikvm-natives.a b/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/libikvm-natives.a
index fc6abdb..ded74f7 100644
Binary files a/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/libikvm-natives.a and b/backends/gdx-backend-iosmonotouch/libs/ikvm/bin/libikvm-natives.a differ
diff --git a/backends/gdx-backend-iosmonotouch/libs/objectal/libObjectAL.dll b/backends/gdx-backend-iosmonotouch/libs/objectal/libObjectAL.dll
index 6a646bd..54bf846 100755
Binary files a/backends/gdx-backend-iosmonotouch/libs/objectal/libObjectAL.dll and b/backends/gdx-backend-iosmonotouch/libs/objectal/libObjectAL.dll differ
diff --git a/backends/gdx-backend-iosmonotouch/libs/objectal/libObjectAL.jar b/backends/gdx-backend-iosmonotouch/libs/objectal/libObjectAL.jar
index d43654c..17f8b98 100644
Binary files a/backends/gdx-backend-iosmonotouch/libs/objectal/libObjectAL.jar and b/backends/gdx-backend-iosmonotouch/libs/objectal/libObjectAL.jar differ
diff --git a/backends/gdx-backend-iosmonotouch/mono/mono.sln b/backends/gdx-backend-iosmonotouch/mono/mono.sln
new file mode 100644
index 0000000..5bc1cec
--- /dev/null
+++ b/backends/gdx-backend-iosmonotouch/mono/mono.sln
@@ -0,0 +1,32 @@
+﻿
+Microsoft Visual Studio Solution File, Format Version 11.00
+# Visual Studio 2010
+Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "mono", "mono\mono.csproj", "{267FB81A-5032-4628-BB02-6434829331C3}"
+EndProject
+Global
+	GlobalSection(SolutionConfigurationPlatforms) = preSolution
+		Debug|iPhoneSimulator = Debug|iPhoneSimulator
+		Release|iPhoneSimulator = Release|iPhoneSimulator
+		Debug|iPhone = Debug|iPhone
+		Release|iPhone = Release|iPhone
+		Ad-Hoc|iPhone = Ad-Hoc|iPhone
+		AppStore|iPhone = AppStore|iPhone
+	EndGlobalSection
+	GlobalSection(ProjectConfigurationPlatforms) = postSolution
+		{267FB81A-5032-4628-BB02-6434829331C3}.Ad-Hoc|iPhone.ActiveCfg = Ad-Hoc|iPhone
+		{267FB81A-5032-4628-BB02-6434829331C3}.Ad-Hoc|iPhone.Build.0 = Ad-Hoc|iPhone
+		{267FB81A-5032-4628-BB02-6434829331C3}.AppStore|iPhone.ActiveCfg = AppStore|iPhone
+		{267FB81A-5032-4628-BB02-6434829331C3}.AppStore|iPhone.Build.0 = AppStore|iPhone
+		{267FB81A-5032-4628-BB02-6434829331C3}.Debug|iPhone.ActiveCfg = Debug|iPhone
+		{267FB81A-5032-4628-BB02-6434829331C3}.Debug|iPhone.Build.0 = Debug|iPhone
+		{267FB81A-5032-4628-BB02-6434829331C3}.Debug|iPhoneSimulator.ActiveCfg = Debug|iPhoneSimulator
+		{267FB81A-5032-4628-BB02-6434829331C3}.Debug|iPhoneSimulator.Build.0 = Debug|iPhoneSimulator
+		{267FB81A-5032-4628-BB02-6434829331C3}.Release|iPhone.ActiveCfg = Release|iPhone
+		{267FB81A-5032-4628-BB02-6434829331C3}.Release|iPhone.Build.0 = Release|iPhone
+		{267FB81A-5032-4628-BB02-6434829331C3}.Release|iPhoneSimulator.ActiveCfg = Release|iPhoneSimulator
+		{267FB81A-5032-4628-BB02-6434829331C3}.Release|iPhoneSimulator.Build.0 = Release|iPhoneSimulator
+	EndGlobalSection
+	GlobalSection(MonoDevelopProperties) = preSolution
+		StartupItem = mono\mono.csproj
+	EndGlobalSection
+EndGlobal
diff --git a/backends/gdx-backend-iosmonotouch/mono/mono/Info.plist b/backends/gdx-backend-iosmonotouch/mono/mono/Info.plist
new file mode 100644
index 0000000..ca9cb62
--- /dev/null
+++ b/backends/gdx-backend-iosmonotouch/mono/mono/Info.plist
@@ -0,0 +1,19 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+	<key>MinimumOSVersion</key>
+	<string>3.2</string>
+	<key>UIDeviceFamily</key>
+	<array>
+		<integer>1</integer>
+		<integer>2</integer>
+	</array>
+	<key>UIStatusBarHidden</key>
+	<true/>
+	<key>UISupportedInterfaceOrientations</key>
+	<array/>
+	<key>UISupportedInterfaceOrientations~ipad</key>
+	<array/>
+</dict>
+</plist>
diff --git a/backends/gdx-backend-iosmonotouch/mono/mono/Main.cs b/backends/gdx-backend-iosmonotouch/mono/mono/Main.cs
new file mode 100644
index 0000000..f24eeba
--- /dev/null
+++ b/backends/gdx-backend-iosmonotouch/mono/mono/Main.cs
@@ -0,0 +1,77 @@
+using System;
+using System.Collections.Generic;
+using System.Linq;
+
+using MonoTouch.Foundation;
+using MonoTouch.UIKit;
+using com.badlogic.gdx;
+using com.badlogic.gdx.math;
+using com.badlogic.gdx.graphics;
+using com.badlogic.gdx.graphics.g2d;
+using com.badlogic.gdx.graphics.glutils;
+using java.io;
+using java.nio;
+using System.IO;
+using com.badlogic.gdx.backends.ios;
+using com.badlogic.gdx.physics.box2d;
+
+namespace mono
+{
+	class MyInputAdapter: InputAdapter {
+		public override bool touchUp (int x, int y, int pointer, int button) {
+			Gdx.app.log ("Touch", "touch up " + x + ", " + y + ", " + pointer);
+			return true;
+		}
+
+		public override bool touchDown (int x, int y, int pointer, int button) {
+			Gdx.app.log ("Touch", "touch down " + x + ", " + y + ", " + pointer);
+			return true;
+		}
+
+		public override bool touchDragged (int x, int y, int pointer) {
+			Gdx.app.log ("Touch", "touch dragged " + x + ", " + y + ", " + pointer);
+			return true;
+		}
+	}
+
+	public class TestListener: com.badlogic.gdx.ApplicationListener {
+		public void create () {
+			Gdx.input.setInputProcessor(new MyInputAdapter());
+			World world = new World(new Vector2(0, -10), true);
+		}
+	
+		public void render () {
+			if(Gdx.input.justTouched()) {
+				Gdx.app.log ("Touch", "just touched");
+			}
+
+		}
+		
+		public void dispose () {
+		}
+		
+		public void resume() {
+		}
+		
+		public void pause() {
+		}
+		
+		public void resize(int width, int height) {
+		}
+	}
+	
+	
+	public class Application
+	{
+		[Register ("AppDelegate")]
+		public class IOSStarter : IOSApplication {
+			public IOSStarter() : base(new TestListener(), new IOSApplicationConfiguration()) {
+			}
+		}
+		
+		static void Main (string[] args)
+		{
+			UIApplication.Main (args, null, "AppDelegate");
+		}
+	}
+}
\ No newline at end of file
diff --git a/backends/gdx-backend-iosmonotouch/mono/mono/data/test.txt b/backends/gdx-backend-iosmonotouch/mono/mono/data/test.txt
new file mode 100644
index 0000000..ffe85a7
--- /dev/null
+++ b/backends/gdx-backend-iosmonotouch/mono/mono/data/test.txt
@@ -0,0 +1,2 @@
+This is a test
+hurray i guess
\ No newline at end of file
diff --git a/backends/gdx-backend-iosmonotouch/mono/mono/libgdx.a b/backends/gdx-backend-iosmonotouch/mono/mono/libgdx.a
new file mode 100644
index 0000000..12f6e6c
Binary files /dev/null and b/backends/gdx-backend-iosmonotouch/mono/mono/libgdx.a differ
diff --git a/backends/gdx-backend-iosmonotouch/mono/mono/libikvm-natives.a b/backends/gdx-backend-iosmonotouch/mono/mono/libikvm-natives.a
new file mode 100644
index 0000000..29296a2
Binary files /dev/null and b/backends/gdx-backend-iosmonotouch/mono/mono/libikvm-natives.a differ
diff --git a/backends/gdx-backend-iosmonotouch/mono/mono/mono.csproj b/backends/gdx-backend-iosmonotouch/mono/mono/mono.csproj
new file mode 100644
index 0000000..c4ebbe1
--- /dev/null
+++ b/backends/gdx-backend-iosmonotouch/mono/mono/mono.csproj
@@ -0,0 +1,521 @@
+<?xml version="1.0" encoding="utf-8"?>
+<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <PropertyGroup>
+    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
+    <Platform Condition=" '$(Platform)' == '' ">iPhoneSimulator</Platform>
+    <ProductVersion>10.0.0</ProductVersion>
+    <SchemaVersion>2.0</SchemaVersion>
+    <ProjectGuid>{267FB81A-5032-4628-BB02-6434829331C3}</ProjectGuid>
+    <ProjectTypeGuids>{6BC8ED88-2882-458C-8E55-DFD12B67127B};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
+    <OutputType>Exe</OutputType>
+    <RootNamespace>mono</RootNamespace>
+    <AssemblyName>mono</AssemblyName>
+  </PropertyGroup>
+  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|iPhoneSimulator' ">
+    <DebugSymbols>True</DebugSymbols>
+    <DebugType>full</DebugType>
+    <Optimize>False</Optimize>
+    <OutputPath>bin\iPhoneSimulator\Debug</OutputPath>
+    <DefineConstants>DEBUG;</DefineConstants>
+    <ErrorReport>prompt</ErrorReport>
+    <WarningLevel>4</WarningLevel>
+    <ConsolePause>False</ConsolePause>
+    <MtouchDebug>True</MtouchDebug>
+    <MtouchProfiling>True</MtouchProfiling>
+    <MtouchLink>None</MtouchLink>
+    <CustomCommands>
+      <CustomCommands>
+        <Command type="BeforeBuild" command="ant -f build.xml compile-backend" workingdir="../.." />
+      </CustomCommands>
+    </CustomCommands>
+    <MtouchExtraArgs>-nosymbolstrip -nostrip -cxx -gcc_flags "-L${ProjectDir} -likvm-natives -lgdx -force_load ${ProjectDir}/libgdx.a -force_load ${ProjectDir}/libikvm-natives.a"</MtouchExtraArgs>
+    <MtouchI18n>west</MtouchI18n>
+  </PropertyGroup>
+  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|iPhoneSimulator' ">
+    <DebugType>none</DebugType>
+    <Optimize>True</Optimize>
+    <OutputPath>bin\iPhoneSimulator\Release</OutputPath>
+    <ErrorReport>prompt</ErrorReport>
+    <WarningLevel>4</WarningLevel>
+    <ConsolePause>False</ConsolePause>
+    <MtouchLink>None</MtouchLink>
+    <CustomCommands>
+      <CustomCommands>
+        <Command type="BeforeBuild" command="ant -f build.xml compile-backend" workingdir="../.." />
+      </CustomCommands>
+    </CustomCommands>
+    <MtouchI18n>west</MtouchI18n>
+    <MtouchExtraArgs>-nosymbolstrip -nostrip -cxx -gcc_flags "-L${ProjectDir} -likvm-natives -lgdx -force_load ${ProjectDir}/libgdx.a -force_load ${ProjectDir}/libikvm-natives.a"</MtouchExtraArgs>
+  </PropertyGroup>
+  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|iPhone' ">
+    <DebugSymbols>True</DebugSymbols>
+    <DebugType>full</DebugType>
+    <Optimize>False</Optimize>
+    <OutputPath>bin\iPhone\Debug</OutputPath>
+    <DefineConstants>DEBUG;</DefineConstants>
+    <ErrorReport>prompt</ErrorReport>
+    <WarningLevel>4</WarningLevel>
+    <ConsolePause>False</ConsolePause>
+    <CodesignKey>iPhone Developer</CodesignKey>
+    <MtouchDebug>True</MtouchDebug>
+    <MtouchProfiling>True</MtouchProfiling>
+    <CustomCommands>
+      <CustomCommands>
+        <Command type="BeforeBuild" command="ant -f build.xml compile-backend" workingdir="../../" />
+      </CustomCommands>
+    </CustomCommands>
+    <IpaPackageName />
+    <MtouchI18n />
+  </PropertyGroup>
+  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|iPhone' ">
+    <DebugType>none</DebugType>
+    <Optimize>True</Optimize>
+    <OutputPath>bin\iPhone\Release</OutputPath>
+    <ErrorReport>prompt</ErrorReport>
+    <WarningLevel>4</WarningLevel>
+    <ConsolePause>False</ConsolePause>
+    <CodesignKey>iPhone Developer</CodesignKey>
+    <MtouchI18n />
+  </PropertyGroup>
+  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Ad-Hoc|iPhone' ">
+    <DebugType>none</DebugType>
+    <Optimize>True</Optimize>
+    <OutputPath>bin\iPhone\Ad-Hoc</OutputPath>
+    <ErrorReport>prompt</ErrorReport>
+    <WarningLevel>4</WarningLevel>
+    <ConsolePause>False</ConsolePause>
+    <BuildIpa>True</BuildIpa>
+    <CodesignKey>iPhone Distribution</CodesignKey>
+    <MtouchI18n />
+  </PropertyGroup>
+  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'AppStore|iPhone' ">
+    <DebugType>none</DebugType>
+    <Optimize>True</Optimize>
+    <OutputPath>bin\iPhone\AppStore</OutputPath>
+    <ErrorReport>prompt</ErrorReport>
+    <WarningLevel>4</WarningLevel>
+    <ConsolePause>False</ConsolePause>
+    <CodesignKey>iPhone Distribution</CodesignKey>
+  </PropertyGroup>
+  <ItemGroup>
+    <Reference Include="System" />
+    <Reference Include="System.Xml" />
+    <Reference Include="System.Core" />
+    <Reference Include="monotouch" />
+    <Reference Include="OpenTK" />
+    <Reference Include="gdx">
+      <HintPath>..\..\libs\gdx.dll</HintPath>
+    </Reference>
+    <Reference Include="gdx-backend-ios">
+      <HintPath>..\..\libs\gdx-backend-ios.dll</HintPath>
+    </Reference>
+    <Reference Include="ICSharpCode.SharpZipLib">
+      <HintPath>..\..\libs\ikvm\bin\ICSharpCode.SharpZipLib.dll</HintPath>
+    </Reference>
+    <Reference Include="IKVM.OpenJDK.Beans">
+      <HintPath>..\..\libs\ikvm\bin\IKVM.OpenJDK.Beans.dll</HintPath>
+    </Reference>
+    <Reference Include="IKVM.OpenJDK.Charsets">
+      <HintPath>..\..\libs\ikvm\bin\IKVM.OpenJDK.Charsets.dll</HintPath>
+    </Reference>
+    <Reference Include="IKVM.OpenJDK.Core">
+      <HintPath>..\..\libs\ikvm\bin\IKVM.OpenJDK.Core.dll</HintPath>
+    </Reference>
+    <Reference Include="IKVM.OpenJDK.Misc">
+      <HintPath>..\..\libs\ikvm\bin\IKVM.OpenJDK.Misc.dll</HintPath>
+    </Reference>
+    <Reference Include="IKVM.OpenJDK.Text">
+      <HintPath>..\..\libs\ikvm\bin\IKVM.OpenJDK.Text.dll</HintPath>
+    </Reference>
+    <Reference Include="IKVM.OpenJDK.Util">
+      <HintPath>..\..\libs\ikvm\bin\IKVM.OpenJDK.Util.dll</HintPath>
+    </Reference>
+    <Reference Include="IKVM.Reflection">
+      <HintPath>..\..\libs\ikvm\bin\IKVM.Reflection.dll</HintPath>
+    </Reference>
+    <Reference Include="IKVM.Runtime.JNI">
+      <HintPath>..\..\libs\ikvm\bin\IKVM.Runtime.JNI.dll</HintPath>
+    </Reference>
+    <Reference Include="IKVM.Runtime">
+      <HintPath>..\..\libs\ikvm\bin\IKVM.Runtime.dll</HintPath>
+    </Reference>
+  </ItemGroup>
+  <ItemGroup>
+    <None Include="Info.plist" />
+    <None Include="libgdx.a" />
+    <None Include="libikvm-natives.a" />
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\8.12.mp3">
+      <Link>data\8.12.mp3</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\DroidSansJapanese.ttf">
+      <Link>data\DroidSansJapanese.ttf</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\DroidSerif-Bold.ttf">
+      <Link>data\DroidSerif-Bold.ttf</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\DroidSerif-Italic.ttf">
+      <Link>data\DroidSerif-Italic.ttf</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\DroidSerif-Regular.ttf">
+      <Link>data\DroidSerif-Regular.ttf</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\arial-15.fnt">
+      <Link>data\arial-15.fnt</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\arial.ttf">
+      <Link>data\arial.ttf</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\bubblepop.ogg">
+      <Link>data\bubblepop.ogg</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\cloudconnected.ogg">
+      <Link>data\cloudconnected.ogg</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\cube.obj">
+      <Link>data\cube.obj</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\default.fnt">
+      <Link>data\default.fnt</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\engine-2.ogg">
+      <Link>data\engine-2.ogg</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\font.fnt">
+      <Link>data\font.fnt</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\gwttestparams.txt">
+      <Link>data\gwttestparams.txt</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\issue_pack">
+      <Link>data\issue_pack</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\jump.txt">
+      <Link>data\jump.txt</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\pack">
+      <Link>data\pack</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\scene.obj">
+      <Link>data\scene.obj</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\scene2.obj">
+      <Link>data\scene2.obj</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\sell_buy_item.wav">
+      <Link>data\sell_buy_item.wav</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\shotgun.mp3">
+      <Link>data\shotgun.mp3</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\shotgun.ogg">
+      <Link>data\shotgun.ogg</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\shotgun.wav">
+      <Link>data\shotgun.wav</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\sphere.obj">
+      <Link>data\sphere.obj</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\test.etc1">
+      <Link>data\test.etc1</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\test.p">
+      <Link>data\test.p</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\test2_notwork.wav">
+      <Link>data\test2_notwork.wav</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\testpack">
+      <Link>data\testpack</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\uiskin.json">
+      <Link>data\uiskin.json</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\verdana39.fnt">
+      <Link>data\verdana39.fnt</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\walk1.md5anim">
+      <Link>data\walk1.md5anim</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\zfat.md5mesh">
+      <Link>data\zfat.md5mesh</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\shaders\batch.frag">
+      <Link>data\shaders\batch.frag</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\shaders\batch.vert">
+      <Link>data\shaders\batch.vert</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\shaders\convolution.frag">
+      <Link>data\shaders\convolution.frag</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\shaders\default.frag">
+      <Link>data\shaders\default.frag</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\shaders\default.vert">
+      <Link>data\shaders\default.vert</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\shaders\depthtocolor.frag">
+      <Link>data\shaders\depthtocolor.frag</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\shaders\flat-frag.glsl">
+      <Link>data\shaders\flat-frag.glsl</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\shaders\flat-vert.glsl">
+      <Link>data\shaders\flat-vert.glsl</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\shaders\flattex-frag.glsl">
+      <Link>data\shaders\flattex-frag.glsl</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\shaders\flattex-vert.glsl">
+      <Link>data\shaders\flattex-vert.glsl</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\shaders\projtex-frag.glsl">
+      <Link>data\shaders\projtex-frag.glsl</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\shaders\projtex-vert.glsl">
+      <Link>data\shaders\projtex-vert.glsl</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\shaders\shader-fs.glsl">
+      <Link>data\shaders\shader-fs.glsl</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\shaders\shader-vs.glsl">
+      <Link>data\shaders\shader-vs.glsl</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\shaders\shadowgen-frag.glsl">
+      <Link>data\shaders\shadowgen-frag.glsl</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\shaders\shadowgen-vert.glsl">
+      <Link>data\shaders\shadowgen-vert.glsl</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\shaders\shadowmap-frag.glsl">
+      <Link>data\shaders\shadowmap-frag.glsl</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\shaders\shadowmap-vert.glsl">
+      <Link>data\shaders\shadowmap-vert.glsl</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\tiledmap\alignment test.tmx">
+      <Link>data\tiledmap\alignment test.tmx</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\tiledmap\margin spacing doctype test.tmx">
+      <Link>data\tiledmap\margin spacing doctype test.tmx</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\tiledmap\perspective walls packfile">
+      <Link>data\tiledmap\perspective walls packfile</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\tiledmap\perspective walls test packfile">
+      <Link>data\tiledmap\perspective walls test packfile</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\tiledmap\perspective walls.tmx">
+      <Link>data\tiledmap\perspective walls.tmx</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\tiledmap\tilemap csv.tmx">
+      <Link>data\tiledmap\tilemap csv.tmx</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\tiledmap\tilemap gzip.tmx">
+      <Link>data\tiledmap\tilemap gzip.tmx</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\tiledmap\tilemap uncompressed.tmx">
+      <Link>data\tiledmap\tilemap uncompressed.tmx</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\tiledmap\tilemap xml.tmx">
+      <Link>data\tiledmap\tilemap xml.tmx</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\tiledmap\tilemap zlib.tmx">
+      <Link>data\tiledmap\tilemap zlib.tmx</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\tiledmap\tileset packfile">
+      <Link>data\tiledmap\tileset packfile</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\tiledmap\tileset2 packfile">
+      <Link>data\tiledmap\tileset2 packfile</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\tiledmap\tileset3 packfile">
+      <Link>data\tiledmap\tileset3 packfile</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\tiledmap\tileset4 packfile">
+      <Link>data\tiledmap\tileset4 packfile</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\tiledmap\tmw-desert-spacing packfile">
+      <Link>data\tiledmap\tmw-desert-spacing packfile</Link>
+    </None>
+  </ItemGroup>
+  <ItemGroup>
+    <Compile Include="Main.cs" />
+  </ItemGroup>
+  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
+  <ItemGroup>
+    <Folder Include="data\" />
+  </ItemGroup>
+  <ItemGroup>
+    <Content Include="data\test.txt" />
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\badlogic.jpg">
+      <Link>data\badlogic.jpg</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\43kJgl.jpg">
+      <Link>data\43kJgl.jpg</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\Textures1.png">
+      <Link>data\Textures1.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\alpha.png">
+      <Link>data\alpha.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\animation.png">
+      <Link>data\animation.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\arial-15_00.png">
+      <Link>data\arial-15_00.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\badlogicsmall.jpg">
+      <Link>data\badlogicsmall.jpg</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\black_marked_0.png">
+      <Link>data\black_marked_0.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\bobargb8888-32x32.png">
+      <Link>data\bobargb8888-32x32.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\bobrgb888-32x32.png">
+      <Link>data\bobrgb888-32x32.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\border_corner_a.png">
+      <Link>data\border_corner_a.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\debug.png">
+      <Link>data\debug.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\default.png">
+      <Link>data\default.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\default_00.png">
+      <Link>data\default_00.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\egg.png">
+      <Link>data\egg.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\font.png">
+      <Link>data\font.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\group-debug.png">
+      <Link>data\group-debug.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\isotile.png">
+      <Link>data\isotile.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\jump.png">
+      <Link>data\jump.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\layers.png">
+      <Link>data\layers.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\pack1.png">
+      <Link>data\pack1.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\particle-cloud.png">
+      <Link>data\particle-cloud.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\particle-fire.png">
+      <Link>data\particle-fire.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\particle-star.png">
+      <Link>data\particle-star.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\particle.png">
+      <Link>data\particle.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\planet_earth.png">
+      <Link>data\planet_earth.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\planet_heavyclouds.jpg">
+      <Link>data\planet_heavyclouds.jpg</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\playback.png">
+      <Link>data\playback.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\ps-bobargb8888-32x32.png">
+      <Link>data\ps-bobargb8888-32x32.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\ps-bobrgb888-32x32.png">
+      <Link>data\ps-bobrgb888-32x32.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\resource1.jpg">
+      <Link>data\resource1.jpg</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\rgb.png">
+      <Link>data\rgb.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\shiptexture.png">
+      <Link>data\shiptexture.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\stone2.png">
+      <Link>data\stone2.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\stones.jpg">
+      <Link>data\stones.jpg</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\sys.png">
+      <Link>data\sys.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\t8890.png">
+      <Link>data\t8890.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\test.png">
+      <Link>data\test.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\test3.png">
+      <Link>data\test3.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\test4.png">
+      <Link>data\test4.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\testbar.png">
+      <Link>data\testbar.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\testdot.png">
+      <Link>data\testdot.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\tile.png">
+      <Link>data\tile.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\tiles.png">
+      <Link>data\tiles.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\ui.png">
+      <Link>data\ui.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\uiskin.png">
+      <Link>data\uiskin.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\verdana39.png">
+      <Link>data\verdana39.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\walkanim.png">
+      <Link>data\walkanim.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\wheel.png">
+      <Link>data\wheel.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\tiledmap\perspective walls test1.png">
+      <Link>data\tiledmap\perspective walls test1.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\tiledmap\perspective walls1.png">
+      <Link>data\tiledmap\perspective walls1.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\tiledmap\tileset1.png">
+      <Link>data\tiledmap\tileset1.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\tiledmap\tileset21.png">
+      <Link>data\tiledmap\tileset21.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\tiledmap\tileset31.png">
+      <Link>data\tiledmap\tileset31.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\tiledmap\tileset41.png">
+      <Link>data\tiledmap\tileset41.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\tiledmap\tmw-desert-spacing1.png">
+      <Link>data\tiledmap\tmw-desert-spacing1.png</Link>
+    </Content>
+  </ItemGroup>
+</Project>
diff --git a/backends/gdx-backend-iosmonotouch/natives/iosgles20.cpp b/backends/gdx-backend-iosmonotouch/natives/iosgles20.cpp
new file mode 100644
index 0000000..7aafe9e
--- /dev/null
+++ b/backends/gdx-backend-iosmonotouch/natives/iosgles20.cpp
@@ -0,0 +1,1765 @@
+#include <iosgles20.h>
+#include <OpenGLES/ES2/gl.h>
+#include <OpenGLES/ES2/glext.h>
+#include <stdio.h>
+
+static jclass bufferClass;
+static jclass byteBufferClass;
+static jclass charBufferClass;
+static jclass shortBufferClass;
+static jclass intBufferClass;
+static jclass longBufferClass;
+static jclass floatBufferClass;
+static jclass doubleBufferClass;
+static jclass OOMEClass;
+static jclass UOEClass;
+static jclass IAEClass;
+
+static jmethodID positionID;
+
+
+static void
+nativeClassInitBuffer(JNIEnv *_env)
+{
+    jclass bufferClassLocal = _env->FindClass("java/nio/Buffer");
+    bufferClass = (jclass) _env->NewGlobalRef(bufferClassLocal);
+
+    byteBufferClass = (jclass) _env->NewGlobalRef(_env->FindClass("java/nio/ByteBuffer"));
+    charBufferClass = (jclass) _env->NewGlobalRef(_env->FindClass("java/nio/CharBuffer"));
+    shortBufferClass = (jclass) _env->NewGlobalRef(_env->FindClass("java/nio/ShortBuffer"));
+    intBufferClass = (jclass) _env->NewGlobalRef(_env->FindClass("java/nio/IntBuffer"));
+    longBufferClass = (jclass) _env->NewGlobalRef(_env->FindClass("java/nio/LongBuffer"));
+    floatBufferClass = (jclass) _env->NewGlobalRef(_env->FindClass("java/nio/FloatBuffer"));
+    doubleBufferClass = (jclass) _env->NewGlobalRef(_env->FindClass("java/nio/DoubleBuffer"));
+
+    positionID = _env->GetMethodID(bufferClass, "position","()I");
+    if(positionID == 0) _env->ThrowNew(IAEClass, "Couldn't fetch position() method");
+}
+
+static void
+nativeClassInit(JNIEnv *_env)
+{
+    nativeClassInitBuffer(_env);
+
+    jclass IAEClassLocal =
+        _env->FindClass("java/lang/IllegalArgumentException");
+    jclass OOMEClassLocal =
+         _env->FindClass("java/lang/OutOfMemoryError");
+    jclass UOEClassLocal =
+         _env->FindClass("java/lang/UnsupportedOperationException");
+
+    IAEClass = (jclass) _env->NewGlobalRef(IAEClassLocal);
+    OOMEClass = (jclass) _env->NewGlobalRef(OOMEClassLocal);
+    UOEClass = (jclass) _env->NewGlobalRef(UOEClassLocal);
+}
+
+static jint getElementSizeShift(JNIEnv *_env, jobject buffer) {
+	/*if(_env->IsInstanceOf(buffer, byteBufferClass)) return 0;
+	if(_env->IsInstanceOf(buffer, floatBufferClass)) return 2;
+	if(_env->IsInstanceOf(buffer, shortBufferClass)) return 1;
+
+	if(_env->IsInstanceOf(buffer, charBufferClass)) return 1;
+	if(_env->IsInstanceOf(buffer, intBufferClass)) return 2;
+	if(_env->IsInstanceOf(buffer, longBufferClass)) return 3;
+	if(_env->IsInstanceOf(buffer, doubleBufferClass)) return 3;
+
+	_env->ThrowNew(IAEClass, "buffer type unkown! (Not a ByteBuffer, ShortBuffer, etc.)");*/
+	return 0;
+}
+
+inline jint getBufferPosition(JNIEnv *env, jobject buffer)
+{
+	jint ret = env->CallIntMethodA(buffer, positionID, 0);
+	return  ret;
+}
+
+static void *
+getDirectBufferPointer(JNIEnv *_env, jobject buffer) {
+    if (!buffer) {
+        return NULL;
+    }
+    void* buf = _env->GetDirectBufferAddress(buffer);
+    if (buf) {
+        jint position = getBufferPosition(_env, buffer);
+        jint elementSizeShift = getElementSizeShift(_env, buffer);
+        buf = ((char*) buf) + (position << elementSizeShift);
+    } else {
+        _env->ThrowNew(IAEClass, "Must use a native order direct Buffer");
+    }
+    return buf;
+}
+
+static const char* getString( JNIEnv *env, jstring string )
+{
+	return (const char*)env->GetStringUTFChars(string, NULL);
+}
+
+static void releaseString( JNIEnv *env, jstring string, const char* cString )
+{
+	env->ReleaseStringUTFChars(string, cString);
+}
+
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_init
+  (JNIEnv *env, jclass)
+{
+	nativeClassInit( env );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glActiveTexture
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glActiveTexture
+  (JNIEnv *, jobject, jint texture)
+{
+	glActiveTexture( texture );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glAttachShader
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glAttachShader
+  (JNIEnv *, jobject, jint program, jint shader)
+{
+	glAttachShader( program, shader );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glBindAttribLocation
+ * Signature: (IILjava/lang/String;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glBindAttribLocation
+  (JNIEnv *env, jobject, jint program, jint index, jstring name)
+{
+	const char* namePtr = getString( env, name );
+	glBindAttribLocation( program, index, namePtr );
+	releaseString( env, name, namePtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glBindBuffer
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glBindBuffer
+  (JNIEnv *env, jobject, jint target, jint buffer)
+{
+	glBindBuffer( target, buffer );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glBindFramebuffer
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glBindFramebuffer
+  (JNIEnv *env, jobject, jint target, jint framebuffer)
+{
+	glBindFramebuffer( target, framebuffer );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glBindRenderbuffer
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glBindRenderbuffer
+  (JNIEnv *env, jobject, jint target, jint renderbuffer)
+{
+	glBindRenderbuffer( target, renderbuffer );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glBindTexture
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glBindTexture
+  (JNIEnv *env, jobject, jint target, jint texture)
+{
+	glBindTexture( target, texture );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glBlendColor
+ * Signature: (FFFF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glBlendColor
+  (JNIEnv *env, jobject, jfloat red, jfloat green, jfloat blue, jfloat alpha)
+{
+	glBlendColor( red, green, blue, alpha );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glBlendEquation
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glBlendEquation
+  (JNIEnv *env, jobject, jint mode)
+{
+	glBlendEquation( mode );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glBlendEquationSeparate
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glBlendEquationSeparate
+  (JNIEnv *env, jobject, jint modeRGB, jint modeAlpha)
+{
+	glBlendEquationSeparate( modeRGB, modeAlpha );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glBlendFunc
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glBlendFunc
+  (JNIEnv *env, jobject, jint sfactor, jint dfactor)
+{
+	glBlendFunc( sfactor, dfactor );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glBlendFuncSeparate
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glBlendFuncSeparate
+  (JNIEnv *env, jobject, jint srcRGB, jint dstRGB, jint srcAlpha, jint dstAlpha)
+{
+	glBlendFuncSeparate( srcRGB, dstRGB, srcAlpha, dstAlpha);
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glBufferData
+ * Signature: (IILjava/nio/Buffer;I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glBufferData
+  (JNIEnv * env, jobject, jint target, jint size, jobject data, jint usage)
+{
+	void* dataPtr = getDirectBufferPointer( env, data );
+	glBufferData( target, size, dataPtr, usage );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glBufferSubData
+ * Signature: (IIILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glBufferSubData
+  (JNIEnv *env, jobject, jint target, jint offset, jint size, jobject data)
+{
+	void* dataPtr = getDirectBufferPointer( env, data );
+	glBufferSubData( target, offset, size, dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glCheckFramebufferStatus
+ * Signature: (I)I
+ */
+JNIEXPORT jint JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glCheckFramebufferStatus
+  (JNIEnv *env, jobject, jint target)
+{
+	return glCheckFramebufferStatus( target );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glClear
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glClear
+  (JNIEnv *env, jobject, jint mask)
+{
+	glClear( mask );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glClearColor
+ * Signature: (FFFF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glClearColor
+  (JNIEnv *env, jobject, jfloat red, jfloat green, jfloat blue, jfloat alpha)
+{
+	glClearColor( red, green, blue, alpha );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glClearDepthf
+ * Signature: (F)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glClearDepthf
+  (JNIEnv *env, jobject, jfloat depth)
+{
+	glClearDepthf( depth );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glClearStencil
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glClearStencil
+  (JNIEnv *env, jobject, jint s)
+{
+	glClearStencil( s );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glColorMask
+ * Signature: (ZZZZ)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glColorMask
+  (JNIEnv *env, jobject, jboolean red, jboolean green, jboolean blue, jboolean alpha)
+{
+	glColorMask( red, green, blue, alpha );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glCompileShader
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glCompileShader
+  (JNIEnv *env, jobject, jint shader)
+{
+	glCompileShader( shader );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glCompressedTexImage2D
+ * Signature: (IIIIIIILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glCompressedTexImage2D
+  (JNIEnv *env, jobject, jint target, jint level, jint internalFormat, jint width, jint height, jint border, jint imageSize, jobject data)
+{
+	void* dataPtr = getDirectBufferPointer( env, data );
+	glCompressedTexImage2D( target, level, internalFormat, width, height, border, imageSize, dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glCompressedTexSubImage2D
+ * Signature: (IIIIIIIILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glCompressedTexSubImage2D
+  (JNIEnv *env, jobject, jint target, jint level, jint xoffset, jint yoffset, jint width, jint height, jint format, jint imageSize, jobject data)
+{
+	void* dataPtr = getDirectBufferPointer( env, data );
+	glCompressedTexSubImage2D( target, level, xoffset, yoffset, width, height, format, imageSize, dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glCopyTexImage2D
+ * Signature: (IIIIIIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glCopyTexImage2D
+  (JNIEnv *env, jobject, jint target, jint level, jint  internalFormat, jint x, jint y, jint width, jint height, jint border)
+{
+	glCopyTexImage2D( target, level, internalFormat, x, y, width, height, border );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glCopyTexSubImage2D
+ * Signature: (IIIIIIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glCopyTexSubImage2D
+  (JNIEnv *env, jobject, jint target, jint level, jint xoffset, jint yoffset, jint x, jint y, jint width, jint height)
+{
+	glCopyTexSubImage2D( target, level, xoffset, yoffset, x, y, width, height );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glCreateProgram
+ * Signature: ()I
+ */
+JNIEXPORT jint JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glCreateProgram
+  (JNIEnv *env, jobject)
+{
+	return glCreateProgram( );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glCreateShader
+ * Signature: (I)I
+ */
+JNIEXPORT jint JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glCreateShader
+  (JNIEnv *env, jobject, jint type)
+{
+	return glCreateShader( type );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glCullFace
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glCullFace
+  (JNIEnv *env, jobject, jint mode)
+{
+	glCullFace( mode );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDeleteBuffers
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDeleteBuffers
+  (JNIEnv *env, jobject, jint n, jobject buffers)
+{
+	void* dataPtr = getDirectBufferPointer( env, buffers );
+	glDeleteBuffers( n, (GLuint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDeleteFramebuffers
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDeleteFramebuffers
+  (JNIEnv *env, jobject, jint n, jobject framebuffers)
+{
+	void* dataPtr = getDirectBufferPointer( env, framebuffers );
+	glDeleteFramebuffers( n, (GLuint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDeleteProgram
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDeleteProgram
+  (JNIEnv *env, jobject, jint program)
+{
+	glDeleteProgram( program );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDeleteRenderbuffers
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDeleteRenderbuffers
+  (JNIEnv *env, jobject, jint n, jobject renderbuffers)
+{
+	void* dataPtr = getDirectBufferPointer( env, renderbuffers );
+	glDeleteRenderbuffers( n, (GLuint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDeleteShader
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDeleteShader
+  (JNIEnv *env, jobject, jint shader)
+{
+	glDeleteShader( shader );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDeleteTextures
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDeleteTextures
+  (JNIEnv *env, jobject, jint n, jobject textures)
+{
+	void* dataPtr = getDirectBufferPointer( env, textures );
+	glDeleteTextures( n, (GLuint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDepthFunc
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDepthFunc
+  (JNIEnv *env, jobject, jint func)
+{
+	glDepthFunc( func );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDepthMask
+ * Signature: (Z)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDepthMask
+  (JNIEnv *env, jobject, jboolean flag)
+{
+	glDepthMask( flag );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDepthRangef
+ * Signature: (FF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDepthRangef
+  (JNIEnv *env, jobject, jfloat zNear, jfloat zFar)
+{
+	glDepthRangef( zNear, zFar );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDetachShader
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDetachShader
+  (JNIEnv *env, jobject, jint program, jint shader)
+{
+	glDetachShader( program, shader );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDisable
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDisable
+  (JNIEnv *env, jobject, jint cap)
+{
+	glDisable( cap );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDisableVertexAttribArray
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDisableVertexAttribArray
+  (JNIEnv *env, jobject, jint index)
+{
+	glDisableVertexAttribArray( index );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDrawArrays
+ * Signature: (III)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDrawArrays
+  (JNIEnv *env, jobject, jint mode, jint first, jint count)
+{
+	glDrawArrays( mode, first, count );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDrawElements
+ * Signature: (IIILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDrawElements__IIILjava_nio_Buffer_2
+(JNIEnv *env, jobject, jint mode, jint count, jint type, jobject indices)
+{
+	void* dataPtr = getDirectBufferPointer( env, indices );
+	//__android_log_print(ANDROID_LOG_INFO, "GL2", "drawelements");
+	glDrawElements( mode, count, type, dataPtr );
+}
+
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDrawElements__IIII
+  (JNIEnv *, jobject, jint mode, jint count, jint type, jint indices)
+{
+	glDrawElements( mode, count, type, (const void*)indices );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glEnable
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glEnable
+  (JNIEnv *env, jobject, jint cap)
+{
+	glEnable( cap );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glEnableVertexAttribArray
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glEnableVertexAttribArray
+  (JNIEnv *env, jobject, jint index)
+{
+	glEnableVertexAttribArray( index );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glFinish
+ * Signature: ()V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glFinish
+  (JNIEnv *env, jobject)
+{
+	glFinish();
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glFlush
+ * Signature: ()V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glFlush
+  (JNIEnv *env, jobject)
+{
+	glFlush();
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glFramebufferRenderbuffer
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glFramebufferRenderbuffer
+  (JNIEnv *env, jobject, jint target, jint attachment, jint renderbuffertarget, jint renderbuffer)
+{
+	glFramebufferRenderbuffer( target, attachment, renderbuffertarget, renderbuffer );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glFramebufferTexture2D
+ * Signature: (IIIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glFramebufferTexture2D
+  (JNIEnv *env, jobject, jint target, jint attachment, jint textarget, jint texture, jint level)
+{
+	glFramebufferTexture2D( target, attachment, textarget, texture, level );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glFrontFace
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glFrontFace
+  (JNIEnv *env, jobject, jint mode)
+{ //XXXX
+	glFrontFace( mode );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGenBuffers
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGenBuffers
+  (JNIEnv *env, jobject, jint n, jobject buffers)
+{
+	void* dataPtr = getDirectBufferPointer( env, buffers );
+	glGenBuffers( n, (GLuint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGenerateMipmap
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGenerateMipmap
+  (JNIEnv *env, jobject, jint target)
+{
+	glGenerateMipmap( target );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGenFramebuffers
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGenFramebuffers
+  (JNIEnv *env, jobject, jint n, jobject framebuffers)
+{
+	void* dataPtr = getDirectBufferPointer( env, framebuffers );
+	glGenFramebuffers( n, (GLuint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGenRenderbuffers
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGenRenderbuffers
+  (JNIEnv *env, jobject, jint n, jobject renderbuffers)
+{
+	void* dataPtr = getDirectBufferPointer( env, renderbuffers );
+	glGenRenderbuffers( n, (GLuint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGenTextures
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGenTextures
+  (JNIEnv *env, jobject, jint n, jobject textures)
+{
+	void* dataPtr = getDirectBufferPointer( env, textures );
+	glGenTextures( n, (GLuint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetActiveAttrib
+ * Signature: (IIILjava/nio/Buffer;Ljava/nio/IntBuffer;Ljava/nio/Buffer;Ljava/lang/String;)V
+ */
+JNIEXPORT jstring JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetActiveAttrib
+  (JNIEnv *env, jobject, jint program, jint index, jobject size, jobject type )
+{
+	// FIXME is this wrong?
+	char cname[2048];
+	void* sizePtr = getDirectBufferPointer( env, size );
+	void* typePtr = getDirectBufferPointer( env, type );
+	glGetActiveAttrib( program, index, 2048, NULL, (GLint*)sizePtr, (GLenum*)typePtr, cname );
+
+	return env->NewStringUTF( cname );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetActiveUniform
+ * Signature: (IIILjava/nio/Buffer;Ljava/nio/IntBuffer;Ljava/nio/Buffer;Ljava/lang/String;)V
+ */
+JNIEXPORT jstring JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetActiveUniform
+  (JNIEnv *env, jobject, jint program, jint index, jobject size, jobject type)
+{
+	// FIXME is this wrong?
+	char cname[2048];
+	void* sizePtr = getDirectBufferPointer( env, size );
+	void* typePtr = getDirectBufferPointer( env, type );
+	glGetActiveUniform( program, index, 2048, NULL, (GLint*)sizePtr, (GLenum*)typePtr, cname );
+
+	return env->NewStringUTF( cname );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetAttachedShaders
+ * Signature: (IILjava/nio/Buffer;Ljava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetAttachedShaders
+  (JNIEnv *env, jobject, jint program, jint maxcount, jobject count, jobject shaders)
+{
+	void* countPtr = getDirectBufferPointer( env, count );
+	void* shaderPtr = getDirectBufferPointer( env, shaders );
+	glGetAttachedShaders( program, maxcount, (GLsizei*)countPtr, (GLuint*)shaderPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetAttribLocation
+ * Signature: (ILjava/lang/String;)I
+ */
+JNIEXPORT jint JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetAttribLocation
+  (JNIEnv *env, jobject, jint program, jstring name)
+{
+	const char* cname = getString( env, name );
+	int loc = glGetAttribLocation( program, cname );
+	releaseString( env, name, cname );
+	return loc;
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetBooleanv
+ * Signature: (ILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetBooleanv
+  (JNIEnv *env, jobject, jint program, jobject params)
+{
+	void* dataPtr = getDirectBufferPointer( env, params );
+	glGetBooleanv( program, (GLboolean*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetBufferParameteriv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetBufferParameteriv
+  (JNIEnv *env, jobject, jint target, jint pname, jobject params)
+{
+	void* dataPtr = getDirectBufferPointer( env, params );
+	glGetBufferParameteriv( target, pname, (GLint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetError
+ * Signature: ()I
+ */
+JNIEXPORT jint JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetError
+  (JNIEnv *env, jobject)
+{
+	return glGetError();
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetFloatv
+ * Signature: (ILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetFloatv
+  (JNIEnv *env, jobject, jint pname, jobject params)
+{
+	void* dataPtr = getDirectBufferPointer( env, params );
+	glGetFloatv( pname, (GLfloat*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetFramebufferAttachmentParameteriv
+ * Signature: (IIILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetFramebufferAttachmentParameteriv
+  (JNIEnv *env, jobject, jint target, jint attachment, jint pname, jobject params)
+{
+	void* dataPtr = getDirectBufferPointer( env, params );
+	glGetFramebufferAttachmentParameteriv( target, attachment, pname, (GLint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetIntegerv
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetIntegerv
+  (JNIEnv *env, jobject, jint pname, jobject params)
+{
+	void* dataPtr = getDirectBufferPointer( env, params );
+	glGetIntegerv( pname, (GLint*)dataPtr);
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetProgramiv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetProgramiv
+  (JNIEnv *env, jobject, jint program, jint pname, jobject params)
+{
+	void *dataPtr = getDirectBufferPointer( env, params );
+	glGetProgramiv( program, pname, (GLint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetProgramInfoLog
+ * Signature: (IILjava/nio/Buffer;Ljava/lang/String;)V
+ */
+JNIEXPORT jstring JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetProgramInfoLog
+  (JNIEnv *env, jobject, jint program )
+{
+	char info[1024*10]; // FIXME 10k limit should suffice
+	int length = 0;
+	glGetProgramInfoLog( program, 1024*10, &length, info );
+	return env->NewStringUTF( info );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetRenderbufferParameteriv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetRenderbufferParameteriv
+  (JNIEnv *env, jobject, jint target, jint pname, jobject params)
+{
+	void* dataPtr = getDirectBufferPointer( env, params );
+	glGetRenderbufferParameteriv( target, pname, (GLint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetShaderiv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetShaderiv
+  (JNIEnv *env, jobject, jint shader, jint pname, jobject params)
+{
+	void* dataPtr = getDirectBufferPointer( env, params );
+	glGetShaderiv( shader, pname, (GLint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetShaderInfoLog
+ * Signature: (IILjava/nio/Buffer;Ljava/lang/String;)V
+ */
+JNIEXPORT jstring JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetShaderInfoLog
+  (JNIEnv *env, jobject, jint shader )
+{
+	char info[1024*10]; // FIXME 10k limit should suffice
+	int length = 0;
+	glGetShaderInfoLog( shader, 1024*10, &length, info );
+	return env->NewStringUTF( info );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetShaderPrecisionFormat
+ * Signature: (IILjava/nio/IntBuffer;Ljava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetShaderPrecisionFormat
+  (JNIEnv *env, jobject, jint shadertype, jint precisiontype, jobject range, jobject precision)
+{
+	void* rangePtr = getDirectBufferPointer( env, range );
+	void* precisionPtr = getDirectBufferPointer( env, precision );
+	glGetShaderPrecisionFormat( shadertype, precisiontype, (GLint*)rangePtr, (GLint*)precisionPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetShaderSource
+ * Signature: (IILjava/nio/Buffer;Ljava/lang/String;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetShaderSource
+  (JNIEnv *env, jobject, jint shader, jint bufsize, jobject length, jstring source)
+{
+	env->ThrowNew(UOEClass, "This method is not supported"); // FIXME won't implement this shit.
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetString
+ * Signature: (I)Ljava/lang/String;
+ */
+JNIEXPORT jstring JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetString
+  (JNIEnv *env, jobject, jint name)
+{
+	const char * chars = (const char *)glGetString((GLenum)name);
+	jstring output = env->NewStringUTF(chars);
+	return output;
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetTexParameterfv
+ * Signature: (IILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetTexParameterfv
+  (JNIEnv *env, jobject, jint target, jint pname, jobject params)
+{
+	void* dataPtr = getDirectBufferPointer( env, params );
+	glGetTexParameterfv( target, pname, (GLfloat*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetTexParameteriv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetTexParameteriv
+  (JNIEnv *env, jobject, jint target, jint pname, jobject params)
+{
+	void* dataPtr = getDirectBufferPointer( env, params );
+	glGetTexParameteriv( target, pname, (GLint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetUniformfv
+ * Signature: (IILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetUniformfv
+  (JNIEnv *env, jobject, jint program, jint location, jobject params)
+{
+	void* dataPtr = getDirectBufferPointer( env, params );
+	glGetUniformfv( program, location, (GLfloat*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetUniformiv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetUniformiv
+  (JNIEnv *env, jobject, jint program, jint location, jobject params)
+{
+	void* dataPtr = getDirectBufferPointer( env, params );
+	glGetUniformiv( program, location, (GLint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetUniformLocation
+ * Signature: (ILjava/lang/String;)I
+ */
+JNIEXPORT jint JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetUniformLocation
+  (JNIEnv *env, jobject, jint program, jstring name)
+{
+	const char* cname = getString( env, name );
+	int location = glGetUniformLocation( program, cname );
+	releaseString( env, name, cname );
+	return location;
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetVertexAttribfv
+ * Signature: (IILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetVertexAttribfv
+  (JNIEnv *env, jobject, jint index, jint pname, jobject params)
+{
+	void* dataPtr = getDirectBufferPointer( env, params );
+	glGetVertexAttribfv( index, pname, (GLfloat*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetVertexAttribiv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetVertexAttribiv
+  (JNIEnv *env, jobject, jint index, jint pname, jobject params)
+{
+	void* dataPtr = getDirectBufferPointer( env, params );
+	glGetVertexAttribiv( index, pname, (GLint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetVertexAttribPointerv
+ * Signature: (IILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetVertexAttribPointerv
+  (JNIEnv *env, jobject, jint index, jint pname, jobject pointer)
+{
+	env->ThrowNew(UOEClass, "This method is not supported"); // FIXME won't implement this shit
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glHint
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glHint
+  (JNIEnv *env, jobject, jint target, jint mode)
+{
+	glHint( target, mode );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glIsBuffer
+ * Signature: (I)C
+ */
+JNIEXPORT jboolean JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glIsBuffer
+  (JNIEnv *env, jobject, jint buffer)
+{
+	return glIsBuffer( buffer );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glIsEnabled
+ * Signature: (I)C
+ */
+JNIEXPORT jboolean JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glIsEnabled
+  (JNIEnv *env, jobject, jint cap)
+{
+	return glIsEnabled( cap );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glIsFramebuffer
+ * Signature: (I)C
+ */
+JNIEXPORT jboolean JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glIsFramebuffer
+  (JNIEnv *env, jobject, jint framebuffer)
+{
+	return glIsFramebuffer( framebuffer );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glIsProgram
+ * Signature: (I)C
+ */
+JNIEXPORT jboolean JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glIsProgram
+  (JNIEnv *env, jobject, jint program)
+{
+	return glIsProgram( program );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glIsRenderbuffer
+ * Signature: (I)C
+ */
+JNIEXPORT jboolean JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glIsRenderbuffer
+  (JNIEnv *env, jobject, jint renderbuffer)
+{
+	return glIsRenderbuffer( renderbuffer );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glIsShader
+ * Signature: (I)C
+ */
+JNIEXPORT jboolean JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glIsShader
+  (JNIEnv *env, jobject, jint shader)
+{
+	return glIsShader( shader );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glIsTexture
+ * Signature: (I)C
+ */
+JNIEXPORT jboolean JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glIsTexture
+  (JNIEnv *env, jobject, jint texture)
+{
+	return glIsTexture( texture );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glLineWidth
+ * Signature: (F)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glLineWidth
+  (JNIEnv *env, jobject, jfloat width)
+{
+	glLineWidth( width );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glLinkProgram
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glLinkProgram
+  (JNIEnv *env, jobject, jint program)
+{
+	glLinkProgram( program );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glPixelStorei
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glPixelStorei
+  (JNIEnv *env, jobject, jint pname, jint param)
+{
+	glPixelStorei( pname, param );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glPolygonOffset
+ * Signature: (FF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glPolygonOffset
+  (JNIEnv *env, jobject, jfloat factor, jfloat units)
+{
+	glPolygonOffset( factor, units );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glReadPixels
+ * Signature: (IIIIIILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glReadPixels
+  (JNIEnv *env, jobject, jint x, jint y, jint width, jint height, jint format, jint type, jobject pixels)
+{
+	void* dataPtr = getDirectBufferPointer( env, pixels );
+	glReadPixels( x, y, width, height, format, type, dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glReleaseShaderCompiler
+ * Signature: ()V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glReleaseShaderCompiler
+  (JNIEnv *env, jobject)
+{
+	glReleaseShaderCompiler();
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glRenderbufferStorage
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glRenderbufferStorage
+  (JNIEnv *env, jobject, jint target, jint internalFormat, jint width, jint height)
+{
+	glRenderbufferStorage( target, internalFormat, width, height );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glSampleCoverage
+ * Signature: (FZ)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glSampleCoverage
+  (JNIEnv *env, jobject, jfloat value, jboolean inver)
+{
+	glSampleCoverage( value, inver );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glScissor
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glScissor
+  (JNIEnv *env, jobject, jint x, jint y, jint width, jint height)
+{
+	glScissor( x, y, width, height );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glShaderBinary
+ * Signature: (ILjava/nio/IntBuffer;ILjava/nio/Buffer;I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glShaderBinary
+  (JNIEnv *env, jobject, jint n, jobject shaders, jint binaryformat, jobject binary, jint length)
+{
+	void* shaderPtr = getDirectBufferPointer( env, shaders );
+	void* binaryPtr = getDirectBufferPointer( env, binary );
+	glShaderBinary( n, (GLuint*)shaderPtr, binaryformat, binaryPtr, length );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glShaderSource
+ * Signature: (IILjava/lang/String;Ljava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glShaderSource
+  (JNIEnv *env, jobject, jint shader, jstring string )
+{
+	const char* cstring = getString( env, string );
+	glShaderSource( shader, 1, &cstring, NULL );
+	releaseString( env, string, cstring );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glStencilFunc
+ * Signature: (III)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glStencilFunc
+  (JNIEnv *env, jobject, jint func, jint ref, jint mask)
+{
+	glStencilFunc( func, ref, mask );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glStencilFuncSeparate
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glStencilFuncSeparate
+  (JNIEnv *env, jobject, jint face, jint func, jint ref, jint mask)
+{
+	glStencilFuncSeparate( face, func, ref, mask );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glStencilMask
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glStencilMask
+  (JNIEnv *env, jobject, jint mask)
+{
+	glStencilMask( mask );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glStencilMaskSeparate
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glStencilMaskSeparate
+  (JNIEnv *env, jobject, jint face, jint mask)
+{
+	glStencilMaskSeparate( face, mask );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glStencilOp
+ * Signature: (III)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glStencilOp
+  (JNIEnv *env, jobject, jint fail, jint zFail, jint zpass)
+{
+	glStencilOp( fail, zFail, zpass );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glStencilOpSeparate
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glStencilOpSeparate
+  (JNIEnv *env, jobject, jint face, jint fail, jint zFail, jint zPass)
+{
+	glStencilOpSeparate( face, fail, zFail, zPass );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glTexImage2D
+ * Signature: (IIIIIIIILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glTexImage2D
+  (JNIEnv *env, jobject, jint target, jint level, jint internalformat, jint width, jint height, jint border, jint format, jint type, jobject pixels)
+{
+	void* dataPtr = getDirectBufferPointer( env, pixels );
+	glTexImage2D( target, level, internalformat, width, height, border, format, type, dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glTexParameterf
+ * Signature: (IIF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glTexParameterf
+  (JNIEnv *env, jobject, jint target, jint pname, jfloat param)
+{
+	glTexParameterf( target, pname, param );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glTexParameterfv
+ * Signature: (IILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glTexParameterfv
+  (JNIEnv *env, jobject, jint target, jint pname, jobject params)
+{
+	void* dataPtr = getDirectBufferPointer( env, params );
+	glTexParameterfv( target, pname, (GLfloat*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glTexParameteri
+ * Signature: (III)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glTexParameteri
+  (JNIEnv *env, jobject, jint target, jint pname, jint param)
+{
+	glTexParameteri( target, pname, param );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glTexParameteriv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glTexParameteriv
+  (JNIEnv *env, jobject, jint target, jint pname, jobject params)
+{
+	void* dataPtr = getDirectBufferPointer( env, params );
+	glTexParameteriv( target, pname, (GLint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glTexSubImage2D
+ * Signature: (IIIIIIIILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glTexSubImage2D
+  (JNIEnv *env, jobject, jint target, jint level, jint xoffset, jint yoffset, jint width, jint height, jint format, jint type, jobject pixels)
+{
+	void* dataPtr = getDirectBufferPointer( env, pixels );
+	glTexSubImage2D( target, level, xoffset, yoffset, width, height, format, type, dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform1f
+ * Signature: (IF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform1f
+  (JNIEnv *env, jobject, jint location, jfloat x)
+{
+	glUniform1f( location, x );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform1fv
+ * Signature: (IILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform1fv
+  (JNIEnv *env, jobject, jint location, jint count, jobject v)
+{
+	void* dataPtr = getDirectBufferPointer( env, v );
+	glUniform1fv( location, count, (GLfloat*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform1i
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform1i
+  (JNIEnv *env, jobject, jint location, jint x)
+{
+	glUniform1i( location, x );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform1iv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform1iv
+  (JNIEnv *env, jobject, jint location, jint count, jobject v)
+{
+	void* dataPtr = getDirectBufferPointer( env, v );
+	glUniform1iv( location, count, (GLint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform2f
+ * Signature: (IFF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform2f
+  (JNIEnv *env, jobject, jint location, jfloat x, jfloat y)
+{
+	glUniform2f( location, x, y );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform2fv
+ * Signature: (IILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform2fv
+  (JNIEnv *env, jobject, jint location, jint count, jobject v)
+{
+	void* dataPtr = getDirectBufferPointer( env, v );
+	glUniform2fv( location, count, (GLfloat*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform2i
+ * Signature: (III)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform2i
+  (JNIEnv *env, jobject, jint location, jint x, jint y)
+{
+	glUniform2i( location, x, y );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform2iv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform2iv
+  (JNIEnv *env, jobject, jint location, jint count, jobject v)
+{
+	void* dataPtr = getDirectBufferPointer( env, v );
+	glUniform2iv( location, count, (GLint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform3f
+ * Signature: (IFFF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform3f
+  (JNIEnv *env, jobject, jint location, jfloat x, jfloat y, jfloat z)
+{
+	glUniform3f( location, x, y, z );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform3fv
+ * Signature: (IILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform3fv
+  (JNIEnv *env, jobject, jint location, jint count, jobject v)
+{
+	void* dataPtr = getDirectBufferPointer( env, v );
+	glUniform3fv( location, count, (GLfloat*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform3i
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform3i
+  (JNIEnv *env, jobject, jint location, jint x, jint y, jint z)
+{
+	glUniform3i( location, x, y, z );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform3iv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform3iv
+  (JNIEnv *env, jobject, jint location, jint count, jobject v)
+{
+	void* dataPtr = getDirectBufferPointer( env, v );
+	glUniform3iv( location, count, (GLint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform4f
+ * Signature: (IFFFF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform4f
+  (JNIEnv *env, jobject, jint location, jfloat x, jfloat y, jfloat z, jfloat w)
+{
+	glUniform4f( location, x, y, z, w );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform4fv
+ * Signature: (IILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform4fv
+  (JNIEnv *env, jobject, jint location, jint count, jobject v)
+{
+	void* dataPtr = getDirectBufferPointer( env, v );
+	glUniform4fv( location, count, (GLfloat*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform4i
+ * Signature: (IIIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform4i
+  (JNIEnv *env, jobject, jint location, jint x, jint y, jint z, jint w)
+{
+	glUniform4i( location, x, y, z, w );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform4iv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform4iv
+  (JNIEnv *env, jobject, jint location, jint count, jobject v)
+{
+	void* dataPtr = getDirectBufferPointer( env, v );
+	glUniform4iv( location, count, (GLint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniformMatrix2fv
+ * Signature: (IIZLjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniformMatrix2fv
+  (JNIEnv *env, jobject, jint location, jint count, jboolean transpose, jobject value)
+{
+	void* dataPtr = getDirectBufferPointer( env, value );
+	glUniformMatrix2fv( location, count, transpose, (GLfloat*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniformMatrix3fv
+ * Signature: (IIZLjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniformMatrix3fv
+  (JNIEnv *env, jobject, jint location, jint count, jboolean transpose, jobject value)
+{
+	void* dataPtr = getDirectBufferPointer( env, value );
+	glUniformMatrix3fv( location, count, transpose, (GLfloat*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniformMatrix4fv
+ * Signature: (IIZLjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniformMatrix4fv
+  (JNIEnv *env, jobject, jint location, jint count, jboolean transpose, jobject value)
+{
+	void* dataPtr = getDirectBufferPointer( env, value );
+	glUniformMatrix4fv( location, count, transpose, (GLfloat*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUseProgram
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUseProgram
+  (JNIEnv *env, jobject, jint program)
+{
+	glUseProgram( program );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glValidateProgram
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glValidateProgram
+  (JNIEnv *env, jobject, jint program)
+{
+	glValidateProgram( program );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glVertexAttrib1f
+ * Signature: (IF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glVertexAttrib1f
+  (JNIEnv *env, jobject, jint indx, jfloat x)
+{
+	glVertexAttrib1f( indx, x );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glVertexAttrib1fv
+ * Signature: (ILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glVertexAttrib1fv
+  (JNIEnv *env, jobject, jint indx, jobject values)
+{
+	void* dataPtr = getDirectBufferPointer( env, values );
+	glVertexAttrib1fv( indx, (GLfloat*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glVertexAttrib2f
+ * Signature: (IFF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glVertexAttrib2f
+  (JNIEnv *env, jobject, jint indx, jfloat x, jfloat y)
+{
+	glVertexAttrib2f( indx, x, y );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glVertexAttrib2fv
+ * Signature: (ILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glVertexAttrib2fv
+  (JNIEnv *env, jobject, jint indx, jobject values)
+{
+	void* dataPtr = getDirectBufferPointer( env, values );
+	glVertexAttrib2fv( indx, (GLfloat*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glVertexAttrib3f
+ * Signature: (IFFF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glVertexAttrib3f
+  (JNIEnv *env, jobject, jint indx, jfloat x, jfloat y, jfloat z)
+{
+	glVertexAttrib3f( indx, x, y, z );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glVertexAttrib3fv
+ * Signature: (ILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glVertexAttrib3fv
+  (JNIEnv *env, jobject, jint indx, jobject values)
+{
+	void* dataPtr = getDirectBufferPointer( env, values );
+	glVertexAttrib3fv( indx, (GLfloat*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glVertexAttrib4f
+ * Signature: (IFFFF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glVertexAttrib4f
+  (JNIEnv *env, jobject, jint indx, jfloat x, jfloat y, jfloat z, jfloat w)
+{
+	glVertexAttrib4f( indx, x, y, z, w );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glVertexAttrib4fv
+ * Signature: (ILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glVertexAttrib4fv
+  (JNIEnv *env, jobject, jint indx, jobject values)
+{
+	void* dataPtr = getDirectBufferPointer( env, values );
+	glVertexAttrib4fv( indx, (GLfloat*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glVertexAttribPointer
+ * Signature: (IIIZILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glVertexAttribPointer__IIIZILjava_nio_Buffer_2
+  (JNIEnv *env, jobject, jint indx, jint size, jint type, jboolean normalized, jint stride, jobject ptr)
+{
+	void* dataPtr = getDirectBufferPointer( env, ptr );
+	glVertexAttribPointer( indx, size, type, normalized, stride, dataPtr );
+}
+
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glVertexAttribPointer__IIIZII
+  (JNIEnv *, jobject, jint indx, jint size, jint type, jboolean normalized, jint stride, jint ptr)
+{
+	glVertexAttribPointer( indx, size, type, normalized, stride, (const void*)ptr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glViewport
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glViewport
+  (JNIEnv *env, jobject, jint x, jint y, jint width, jint height)
+{
+	glViewport( x, y, width, height );
+}
diff --git a/backends/gdx-backend-iosmonotouch/natives/iosgles20.h b/backends/gdx-backend-iosmonotouch/natives/iosgles20.h
new file mode 100644
index 0000000..98d3885
--- /dev/null
+++ b/backends/gdx-backend-iosmonotouch/natives/iosgles20.h
@@ -0,0 +1,1173 @@
+/* DO NOT EDIT THIS FILE - it is machine generated */
+#include <jni.h>
+/* Header for class com_badlogic_gdx_backends_ios_IOSGLES20 */
+
+#ifndef _Included_com_badlogic_gdx_backends_ios_IOSGLES20
+#define _Included_com_badlogic_gdx_backends_ios_IOSGLES20
+#ifdef __cplusplus
+extern "C" {
+#endif
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    init
+ * Signature: ()V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_init
+  (JNIEnv *, jclass);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glActiveTexture
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glActiveTexture
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glAttachShader
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glAttachShader
+  (JNIEnv *, jobject, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glBindAttribLocation
+ * Signature: (IILjava/lang/String;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glBindAttribLocation
+  (JNIEnv *, jobject, jint, jint, jstring);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glBindBuffer
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glBindBuffer
+  (JNIEnv *, jobject, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glBindFramebuffer
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glBindFramebuffer
+  (JNIEnv *, jobject, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glBindRenderbuffer
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glBindRenderbuffer
+  (JNIEnv *, jobject, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glBindTexture
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glBindTexture
+  (JNIEnv *, jobject, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glBlendColor
+ * Signature: (FFFF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glBlendColor
+  (JNIEnv *, jobject, jfloat, jfloat, jfloat, jfloat);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glBlendEquation
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glBlendEquation
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glBlendEquationSeparate
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glBlendEquationSeparate
+  (JNIEnv *, jobject, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glBlendFunc
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glBlendFunc
+  (JNIEnv *, jobject, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glBlendFuncSeparate
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glBlendFuncSeparate
+  (JNIEnv *, jobject, jint, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glBufferData
+ * Signature: (IILjava/nio/Buffer;I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glBufferData
+  (JNIEnv *, jobject, jint, jint, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glBufferSubData
+ * Signature: (IIILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glBufferSubData
+  (JNIEnv *, jobject, jint, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glCheckFramebufferStatus
+ * Signature: (I)I
+ */
+JNIEXPORT jint JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glCheckFramebufferStatus
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glClear
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glClear
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glClearColor
+ * Signature: (FFFF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glClearColor
+  (JNIEnv *, jobject, jfloat, jfloat, jfloat, jfloat);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glClearDepthf
+ * Signature: (F)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glClearDepthf
+  (JNIEnv *, jobject, jfloat);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glClearStencil
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glClearStencil
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glColorMask
+ * Signature: (ZZZZ)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glColorMask
+  (JNIEnv *, jobject, jboolean, jboolean, jboolean, jboolean);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glCompileShader
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glCompileShader
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glCompressedTexImage2D
+ * Signature: (IIIIIIILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glCompressedTexImage2D
+  (JNIEnv *, jobject, jint, jint, jint, jint, jint, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glCompressedTexSubImage2D
+ * Signature: (IIIIIIIILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glCompressedTexSubImage2D
+  (JNIEnv *, jobject, jint, jint, jint, jint, jint, jint, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glCopyTexImage2D
+ * Signature: (IIIIIIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glCopyTexImage2D
+  (JNIEnv *, jobject, jint, jint, jint, jint, jint, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glCopyTexSubImage2D
+ * Signature: (IIIIIIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glCopyTexSubImage2D
+  (JNIEnv *, jobject, jint, jint, jint, jint, jint, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glCreateProgram
+ * Signature: ()I
+ */
+JNIEXPORT jint JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glCreateProgram
+  (JNIEnv *, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glCreateShader
+ * Signature: (I)I
+ */
+JNIEXPORT jint JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glCreateShader
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glCullFace
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glCullFace
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDeleteBuffers
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDeleteBuffers
+  (JNIEnv *, jobject, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDeleteFramebuffers
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDeleteFramebuffers
+  (JNIEnv *, jobject, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDeleteProgram
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDeleteProgram
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDeleteRenderbuffers
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDeleteRenderbuffers
+  (JNIEnv *, jobject, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDeleteShader
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDeleteShader
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDeleteTextures
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDeleteTextures
+  (JNIEnv *, jobject, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDepthFunc
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDepthFunc
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDepthMask
+ * Signature: (Z)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDepthMask
+  (JNIEnv *, jobject, jboolean);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDepthRangef
+ * Signature: (FF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDepthRangef
+  (JNIEnv *, jobject, jfloat, jfloat);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDetachShader
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDetachShader
+  (JNIEnv *, jobject, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDisable
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDisable
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDisableVertexAttribArray
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDisableVertexAttribArray
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDrawArrays
+ * Signature: (III)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDrawArrays
+  (JNIEnv *, jobject, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDrawElements
+ * Signature: (IIILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDrawElements__IIILjava_nio_Buffer_2
+  (JNIEnv *, jobject, jint, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDrawElements
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDrawElements__IIII
+  (JNIEnv *, jobject, jint, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glEnable
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glEnable
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glEnableVertexAttribArray
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glEnableVertexAttribArray
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glFinish
+ * Signature: ()V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glFinish
+  (JNIEnv *, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glFlush
+ * Signature: ()V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glFlush
+  (JNIEnv *, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glFramebufferRenderbuffer
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glFramebufferRenderbuffer
+  (JNIEnv *, jobject, jint, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glFramebufferTexture2D
+ * Signature: (IIIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glFramebufferTexture2D
+  (JNIEnv *, jobject, jint, jint, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glFrontFace
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glFrontFace
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGenBuffers
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGenBuffers
+  (JNIEnv *, jobject, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGenerateMipmap
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGenerateMipmap
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGenFramebuffers
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGenFramebuffers
+  (JNIEnv *, jobject, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGenRenderbuffers
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGenRenderbuffers
+  (JNIEnv *, jobject, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGenTextures
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGenTextures
+  (JNIEnv *, jobject, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetActiveAttrib
+ * Signature: (IILjava/nio/IntBuffer;Ljava/nio/Buffer;)Ljava/lang/String;
+ */
+JNIEXPORT jstring JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetActiveAttrib
+  (JNIEnv *, jobject, jint, jint, jobject, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetActiveUniform
+ * Signature: (IILjava/nio/IntBuffer;Ljava/nio/Buffer;)Ljava/lang/String;
+ */
+JNIEXPORT jstring JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetActiveUniform
+  (JNIEnv *, jobject, jint, jint, jobject, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetAttachedShaders
+ * Signature: (IILjava/nio/Buffer;Ljava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetAttachedShaders
+  (JNIEnv *, jobject, jint, jint, jobject, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetAttribLocation
+ * Signature: (ILjava/lang/String;)I
+ */
+JNIEXPORT jint JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetAttribLocation
+  (JNIEnv *, jobject, jint, jstring);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetBooleanv
+ * Signature: (ILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetBooleanv
+  (JNIEnv *, jobject, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetBufferParameteriv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetBufferParameteriv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetError
+ * Signature: ()I
+ */
+JNIEXPORT jint JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetError
+  (JNIEnv *, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetFloatv
+ * Signature: (ILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetFloatv
+  (JNIEnv *, jobject, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetFramebufferAttachmentParameteriv
+ * Signature: (IIILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetFramebufferAttachmentParameteriv
+  (JNIEnv *, jobject, jint, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetIntegerv
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetIntegerv
+  (JNIEnv *, jobject, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetProgramiv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetProgramiv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetProgramInfoLog
+ * Signature: (I)Ljava/lang/String;
+ */
+JNIEXPORT jstring JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetProgramInfoLog
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetRenderbufferParameteriv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetRenderbufferParameteriv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetShaderiv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetShaderiv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetShaderInfoLog
+ * Signature: (I)Ljava/lang/String;
+ */
+JNIEXPORT jstring JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetShaderInfoLog
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetShaderPrecisionFormat
+ * Signature: (IILjava/nio/IntBuffer;Ljava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetShaderPrecisionFormat
+  (JNIEnv *, jobject, jint, jint, jobject, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetShaderSource
+ * Signature: (IILjava/nio/Buffer;Ljava/lang/String;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetShaderSource
+  (JNIEnv *, jobject, jint, jint, jobject, jstring);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetString
+ * Signature: (I)Ljava/lang/String;
+ */
+JNIEXPORT jstring JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetString
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetTexParameterfv
+ * Signature: (IILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetTexParameterfv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetTexParameteriv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetTexParameteriv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetUniformfv
+ * Signature: (IILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetUniformfv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetUniformiv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetUniformiv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetUniformLocation
+ * Signature: (ILjava/lang/String;)I
+ */
+JNIEXPORT jint JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetUniformLocation
+  (JNIEnv *, jobject, jint, jstring);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetVertexAttribfv
+ * Signature: (IILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetVertexAttribfv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetVertexAttribiv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetVertexAttribiv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetVertexAttribPointerv
+ * Signature: (IILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetVertexAttribPointerv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glHint
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glHint
+  (JNIEnv *, jobject, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glIsBuffer
+ * Signature: (I)Z
+ */
+JNIEXPORT jboolean JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glIsBuffer
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glIsEnabled
+ * Signature: (I)Z
+ */
+JNIEXPORT jboolean JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glIsEnabled
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glIsFramebuffer
+ * Signature: (I)Z
+ */
+JNIEXPORT jboolean JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glIsFramebuffer
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glIsProgram
+ * Signature: (I)Z
+ */
+JNIEXPORT jboolean JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glIsProgram
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glIsRenderbuffer
+ * Signature: (I)Z
+ */
+JNIEXPORT jboolean JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glIsRenderbuffer
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glIsShader
+ * Signature: (I)Z
+ */
+JNIEXPORT jboolean JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glIsShader
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glIsTexture
+ * Signature: (I)Z
+ */
+JNIEXPORT jboolean JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glIsTexture
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glLineWidth
+ * Signature: (F)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glLineWidth
+  (JNIEnv *, jobject, jfloat);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glLinkProgram
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glLinkProgram
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glPixelStorei
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glPixelStorei
+  (JNIEnv *, jobject, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glPolygonOffset
+ * Signature: (FF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glPolygonOffset
+  (JNIEnv *, jobject, jfloat, jfloat);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glReadPixels
+ * Signature: (IIIIIILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glReadPixels
+  (JNIEnv *, jobject, jint, jint, jint, jint, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glReleaseShaderCompiler
+ * Signature: ()V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glReleaseShaderCompiler
+  (JNIEnv *, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glRenderbufferStorage
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glRenderbufferStorage
+  (JNIEnv *, jobject, jint, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glSampleCoverage
+ * Signature: (FZ)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glSampleCoverage
+  (JNIEnv *, jobject, jfloat, jboolean);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glScissor
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glScissor
+  (JNIEnv *, jobject, jint, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glShaderBinary
+ * Signature: (ILjava/nio/IntBuffer;ILjava/nio/Buffer;I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glShaderBinary
+  (JNIEnv *, jobject, jint, jobject, jint, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glShaderSource
+ * Signature: (ILjava/lang/String;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glShaderSource
+  (JNIEnv *, jobject, jint, jstring);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glStencilFunc
+ * Signature: (III)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glStencilFunc
+  (JNIEnv *, jobject, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glStencilFuncSeparate
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glStencilFuncSeparate
+  (JNIEnv *, jobject, jint, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glStencilMask
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glStencilMask
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glStencilMaskSeparate
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glStencilMaskSeparate
+  (JNIEnv *, jobject, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glStencilOp
+ * Signature: (III)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glStencilOp
+  (JNIEnv *, jobject, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glStencilOpSeparate
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glStencilOpSeparate
+  (JNIEnv *, jobject, jint, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glTexImage2D
+ * Signature: (IIIIIIIILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glTexImage2D
+  (JNIEnv *, jobject, jint, jint, jint, jint, jint, jint, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glTexParameterf
+ * Signature: (IIF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glTexParameterf
+  (JNIEnv *, jobject, jint, jint, jfloat);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glTexParameterfv
+ * Signature: (IILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glTexParameterfv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glTexParameteri
+ * Signature: (III)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glTexParameteri
+  (JNIEnv *, jobject, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glTexParameteriv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glTexParameteriv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glTexSubImage2D
+ * Signature: (IIIIIIIILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glTexSubImage2D
+  (JNIEnv *, jobject, jint, jint, jint, jint, jint, jint, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform1f
+ * Signature: (IF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform1f
+  (JNIEnv *, jobject, jint, jfloat);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform1fv
+ * Signature: (IILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform1fv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform1i
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform1i
+  (JNIEnv *, jobject, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform1iv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform1iv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform2f
+ * Signature: (IFF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform2f
+  (JNIEnv *, jobject, jint, jfloat, jfloat);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform2fv
+ * Signature: (IILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform2fv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform2i
+ * Signature: (III)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform2i
+  (JNIEnv *, jobject, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform2iv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform2iv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform3f
+ * Signature: (IFFF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform3f
+  (JNIEnv *, jobject, jint, jfloat, jfloat, jfloat);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform3fv
+ * Signature: (IILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform3fv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform3i
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform3i
+  (JNIEnv *, jobject, jint, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform3iv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform3iv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform4f
+ * Signature: (IFFFF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform4f
+  (JNIEnv *, jobject, jint, jfloat, jfloat, jfloat, jfloat);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform4fv
+ * Signature: (IILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform4fv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform4i
+ * Signature: (IIIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform4i
+  (JNIEnv *, jobject, jint, jint, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform4iv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform4iv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniformMatrix2fv
+ * Signature: (IIZLjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniformMatrix2fv
+  (JNIEnv *, jobject, jint, jint, jboolean, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniformMatrix3fv
+ * Signature: (IIZLjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniformMatrix3fv
+  (JNIEnv *, jobject, jint, jint, jboolean, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniformMatrix4fv
+ * Signature: (IIZLjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniformMatrix4fv
+  (JNIEnv *, jobject, jint, jint, jboolean, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUseProgram
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUseProgram
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glValidateProgram
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glValidateProgram
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glVertexAttrib1f
+ * Signature: (IF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glVertexAttrib1f
+  (JNIEnv *, jobject, jint, jfloat);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glVertexAttrib1fv
+ * Signature: (ILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glVertexAttrib1fv
+  (JNIEnv *, jobject, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glVertexAttrib2f
+ * Signature: (IFF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glVertexAttrib2f
+  (JNIEnv *, jobject, jint, jfloat, jfloat);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glVertexAttrib2fv
+ * Signature: (ILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glVertexAttrib2fv
+  (JNIEnv *, jobject, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glVertexAttrib3f
+ * Signature: (IFFF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glVertexAttrib3f
+  (JNIEnv *, jobject, jint, jfloat, jfloat, jfloat);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glVertexAttrib3fv
+ * Signature: (ILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glVertexAttrib3fv
+  (JNIEnv *, jobject, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glVertexAttrib4f
+ * Signature: (IFFFF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glVertexAttrib4f
+  (JNIEnv *, jobject, jint, jfloat, jfloat, jfloat, jfloat);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glVertexAttrib4fv
+ * Signature: (ILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glVertexAttrib4fv
+  (JNIEnv *, jobject, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glVertexAttribPointer
+ * Signature: (IIIZILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glVertexAttribPointer__IIIZILjava_nio_Buffer_2
+  (JNIEnv *, jobject, jint, jint, jint, jboolean, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glVertexAttribPointer
+ * Signature: (IIIZII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glVertexAttribPointer__IIIZII
+  (JNIEnv *, jobject, jint, jint, jint, jboolean, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glViewport
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glViewport
+  (JNIEnv *, jobject, jint, jint, jint, jint);
+
+#ifdef __cplusplus
+}
+#endif
+#endif
diff --git a/backends/gdx-backend-iosmonotouch/natives/jni.h b/backends/gdx-backend-iosmonotouch/natives/jni.h
new file mode 100644
index 0000000..f235288
--- /dev/null
+++ b/backends/gdx-backend-iosmonotouch/natives/jni.h
@@ -0,0 +1,401 @@
+/*
+  Copyright (C) 2004, 2005 Jeroen Frijters
+
+  This software is provided 'as-is', without any express or implied
+  warranty.  In no event will the authors be held liable for any damages
+  arising from the use of this software.
+
+  Permission is granted to anyone to use this software for any purpose,
+  including commercial applications, and to alter it and redistribute it
+  freely, subject to the following restrictions:
+
+  1. The origin of this software must not be misrepresented; you must not
+     claim that you wrote the original software. If you use this software
+     in a product, an acknowledgment in the product documentation would be
+     appreciated but is not required.
+  2. Altered source versions must be plainly marked as such, and must not be
+     misrepresented as being the original software.
+  3. This notice may not be removed or altered from any source distribution.
+
+  Jeroen Frijters
+  jeroen@frijters.net
+  
+*/
+#ifndef __JNI_H__
+#define __JNI_H__
+
+#ifdef _WIN32
+	#define JNICALL __stdcall
+	#ifdef __cplusplus
+		#define JNIEXPORT extern "C" __declspec(dllexport)
+	#else
+		#define JNIEXPORT __declspec(dllexport)
+	#endif
+#else
+	#define JNICALL
+	#ifdef __cplusplus
+		#define JNIEXPORT extern "C"
+	#else
+		#define JNIEXPORT
+	#endif
+	#include <stdarg.h>
+#endif
+
+typedef void* jobject;
+typedef void* jstring;
+typedef void* jweak;
+typedef void* jthrowable;
+typedef void* jclass;
+typedef void* jmethodID;
+typedef void* jfieldID;
+typedef void* jarray;
+typedef void* jobjectArray;
+typedef void* jbooleanArray;
+typedef void* jbyteArray;
+typedef void* jcharArray;
+typedef void* jshortArray;
+typedef void* jintArray;
+typedef void* jlongArray;
+typedef void* jfloatArray;
+typedef void* jdoubleArray;
+
+typedef unsigned char jboolean;
+typedef signed char jbyte;
+typedef unsigned short jchar;
+typedef short jshort;
+typedef int jint;
+#ifdef _MSC_VER
+	typedef __int64 jlong;
+#else
+	typedef long long int jlong;
+#endif
+typedef float jfloat;
+typedef double jdouble;
+typedef jint jsize;
+
+typedef struct
+{
+	char *name;
+	char *signature;
+	void *fnPtr;
+} JNINativeMethod;
+
+typedef union jvalue
+{
+    jboolean z;
+    jbyte    b;
+    jchar    c;
+    jshort   s;
+    jint     i;
+    jlong    j;
+    jfloat   f;
+    jdouble  d;
+    jobject  l;
+} jvalue;
+
+typedef void* JavaVM;
+typedef struct JNIEnv_methods *JNIEnv;
+
+struct JNIEnv_methods
+{
+	jint (JNICALL *GetMethodArgs)(JNIEnv* pEnv, jmethodID method, jbyte* sig);
+	void (JNICALL *reserved1)(JNIEnv* pEnv);
+	void (JNICALL *reserved2)(JNIEnv* pEnv);
+	void (JNICALL *reserved3)(JNIEnv* pEnv);
+
+	jint (JNICALL *GetVersion)(JNIEnv* pEnv);
+
+	jclass (JNICALL *DefineClass)(JNIEnv* pEnv, const char *name, jobject loader, const jbyte *buf, jsize len);
+	jclass (JNICALL *FindClass)(JNIEnv* pEnv, const char *name);
+
+	jmethodID (JNICALL *FromReflectedMethod)(JNIEnv* pEnv, jobject method);
+	jfieldID (JNICALL *FromReflectedField)(JNIEnv* pEnv, jobject field);
+	jobject (JNICALL *ToReflectedMethod)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, jboolean isStatic);
+
+	jclass (JNICALL *GetSuperclass)(JNIEnv* pEnv, jclass sub);
+	jboolean (JNICALL *IsAssignableFrom)(JNIEnv* pEnv, jclass sub, jclass sup);
+
+	jobject (JNICALL *ToReflectedField)(JNIEnv* pEnv, jclass clazz, jfieldID fieldID, jboolean isStatic);
+
+	jint (JNICALL *Throw)(JNIEnv* pEnv, jthrowable obj);
+	jint (JNICALL *ThrowNew)(JNIEnv* pEnv, jclass clazz, const char *msg);
+	jthrowable (JNICALL *ExceptionOccurred)(JNIEnv* pEnv);
+	void (JNICALL *ExceptionDescribe)(JNIEnv* pEnv);
+	void (JNICALL *ExceptionClear)(JNIEnv* pEnv);
+	void (JNICALL *FatalError)(JNIEnv* pEnv, const char *msg);
+
+	jint (JNICALL *PushLocalFrame)(JNIEnv* pEnv, jint capacity); 
+	jobject (JNICALL *PopLocalFrame)(JNIEnv* pEnv, jobject result);
+
+	jobject (JNICALL *NewGlobalRef)(JNIEnv* pEnv, jobject lobj);
+	void (JNICALL *DeleteGlobalRef)(JNIEnv* pEnv, jobject gref);
+	void (JNICALL *DeleteLocalRef)(JNIEnv* pEnv, jobject obj);
+	jboolean (JNICALL *IsSameObject)(JNIEnv* pEnv, jobject obj1, jobject obj2);
+
+	jobject (JNICALL *NewLocalRef)(JNIEnv* pEnv, jobject ref);
+	jint (JNICALL *EnsureLocalCapacity)(JNIEnv* pEnv, jint capacity); 
+
+	jobject (JNICALL *AllocObject)(JNIEnv* pEnv, jclass clazz);
+	jobject (JNICALL *NewObject)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, ...);
+	jobject (JNICALL *NewObjectV)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, va_list args);
+	jobject (JNICALL *NewObjectA)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, jvalue *args);
+
+	jclass (JNICALL *GetObjectClass)(JNIEnv* pEnv, jobject obj);
+	jboolean (JNICALL *IsInstanceOf)(JNIEnv* pEnv, jobject obj, jclass clazz);
+
+	jmethodID (JNICALL *GetMethodID)(JNIEnv* pEnv, jclass clazz, const char *name, const char *sig);
+
+	jobject (JNICALL *CallObjectMethod)(JNIEnv* pEnv, jobject obj, jmethodID methodID, ...);
+	jobject (JNICALL *CallObjectMethodV)(JNIEnv* pEnv, jobject obj, jmethodID methodID, va_list args);
+	jobject (JNICALL *CallObjectMethodA)(JNIEnv* pEnv, jobject obj, jmethodID methodID, jvalue * args);
+
+	jboolean (JNICALL *CallBooleanMethod)(JNIEnv* pEnv, jobject obj, jmethodID methodID, ...);
+	jboolean (JNICALL *CallBooleanMethodV)(JNIEnv* pEnv, jobject obj, jmethodID methodID, va_list args);
+	jboolean (JNICALL *CallBooleanMethodA)(JNIEnv* pEnv, jobject obj, jmethodID methodID, jvalue * args);
+
+	jbyte (JNICALL *CallByteMethod)(JNIEnv* pEnv, jobject obj, jmethodID methodID, ...);
+	jbyte (JNICALL *CallByteMethodV)(JNIEnv* pEnv, jobject obj, jmethodID methodID, va_list args);
+	jbyte (JNICALL *CallByteMethodA)(JNIEnv* pEnv, jobject obj, jmethodID methodID, jvalue *args);
+
+	jchar (JNICALL *CallCharMethod)(JNIEnv* pEnv, jobject obj, jmethodID methodID, ...);
+	jchar (JNICALL *CallCharMethodV)(JNIEnv* pEnv, jobject obj, jmethodID methodID, va_list args);
+	jchar (JNICALL *CallCharMethodA)(JNIEnv* pEnv, jobject obj, jmethodID methodID, jvalue *args);
+
+	jshort (JNICALL *CallShortMethod)(JNIEnv* pEnv, jobject obj, jmethodID methodID, ...);
+	jshort (JNICALL *CallShortMethodV)(JNIEnv* pEnv, jobject obj, jmethodID methodID, va_list args);
+	jshort (JNICALL *CallShortMethodA)(JNIEnv* pEnv, jobject obj, jmethodID methodID, jvalue *args);
+
+	jint (JNICALL *CallIntMethod)(JNIEnv* pEnv, jobject obj, jmethodID methodID, ...);
+	jint (JNICALL *CallIntMethodV)(JNIEnv* pEnv, jobject obj, jmethodID methodID, va_list args);
+	jint (JNICALL *CallIntMethodA)(JNIEnv* pEnv, jobject obj, jmethodID methodID, jvalue *args);
+
+	jlong (JNICALL *CallLongMethod)(JNIEnv* pEnv, jobject obj, jmethodID methodID, ...);
+	jlong (JNICALL *CallLongMethodV)(JNIEnv* pEnv, jobject obj, jmethodID methodID, va_list args);
+	jlong (JNICALL *CallLongMethodA)(JNIEnv* pEnv, jobject obj, jmethodID methodID, jvalue *args);
+
+	jfloat (JNICALL *CallFloatMethod)(JNIEnv* pEnv, jobject obj, jmethodID methodID, ...);
+	jfloat (JNICALL *CallFloatMethodV)(JNIEnv* pEnv, jobject obj, jmethodID methodID, va_list args);
+	jfloat (JNICALL *CallFloatMethodA)(JNIEnv* pEnv, jobject obj, jmethodID methodID, jvalue *args);
+
+	jdouble (JNICALL *CallDoubleMethod)(JNIEnv* pEnv, jobject obj, jmethodID methodID, ...);
+	jdouble (JNICALL *CallDoubleMethodV)(JNIEnv* pEnv, jobject obj, jmethodID methodID, va_list args);
+	jdouble (JNICALL *CallDoubleMethodA)(JNIEnv* pEnv, jobject obj, jmethodID methodID, jvalue *args);
+
+	void (JNICALL *CallVoidMethod)(JNIEnv* pEnv, jobject obj, jmethodID methodID, ...);
+	void (JNICALL *CallVoidMethodV)(JNIEnv* pEnv, jobject obj, jmethodID methodID, va_list args);
+	void (JNICALL *CallVoidMethodA)(JNIEnv* pEnv, jobject obj, jmethodID methodID, jvalue * args);
+
+	jobject (JNICALL *CallNonvirtualObjectMethod)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, ...);
+	jobject (JNICALL *CallNonvirtualObjectMethodV)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, va_list args);
+	jobject (JNICALL *CallNonvirtualObjectMethodA)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, jvalue * args);
+
+	jboolean (JNICALL *CallNonvirtualBooleanMethod)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, ...);
+	jboolean (JNICALL *CallNonvirtualBooleanMethodV)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, va_list args);
+	jboolean (JNICALL *CallNonvirtualBooleanMethodA)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, jvalue * args);
+
+	jbyte (JNICALL *CallNonvirtualByteMethod)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, ...);
+	jbyte (JNICALL *CallNonvirtualByteMethodV)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, va_list args);
+	jbyte (JNICALL *CallNonvirtualByteMethodA)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, jvalue *args);
+
+	jchar (JNICALL *CallNonvirtualCharMethod)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, ...);
+	jchar (JNICALL *CallNonvirtualCharMethodV)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, va_list args);
+	jchar (JNICALL *CallNonvirtualCharMethodA)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, jvalue *args);
+
+	jshort (JNICALL *CallNonvirtualShortMethod)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, ...);
+	jshort (JNICALL *CallNonvirtualShortMethodV)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, va_list args);
+	jshort (JNICALL *CallNonvirtualShortMethodA)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, jvalue *args);
+
+	jint (JNICALL *CallNonvirtualIntMethod)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, ...);
+	jint (JNICALL *CallNonvirtualIntMethodV)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, va_list args);
+	jint (JNICALL *CallNonvirtualIntMethodA)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, jvalue *args);
+
+	jlong (JNICALL *CallNonvirtualLongMethod)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, ...);
+	jlong (JNICALL *CallNonvirtualLongMethodV)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, va_list args);
+	jlong (JNICALL *CallNonvirtualLongMethodA)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, jvalue *args);
+
+	jfloat (JNICALL *CallNonvirtualFloatMethod)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, ...);
+	jfloat (JNICALL *CallNonvirtualFloatMethodV)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, va_list args);
+	jfloat (JNICALL *CallNonvirtualFloatMethodA)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, jvalue *args);
+
+	jdouble (JNICALL *CallNonvirtualDoubleMethod)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, ...);
+	jdouble (JNICALL *CallNonvirtualDoubleMethodV)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, va_list args);
+	jdouble (JNICALL *CallNonvirtualDoubleMethodA)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, jvalue *args);
+
+	void (JNICALL *CallNonvirtualVoidMethod)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, ...);
+	void (JNICALL *CallNonvirtualVoidMethodV)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, va_list args);
+	void (JNICALL *CallNonvirtualVoidMethodA)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, jvalue * args);
+
+	jfieldID (JNICALL *GetFieldID)(JNIEnv* pEnv, jclass clazz, const char *name, const char *sig);
+
+	jobject (JNICALL *GetObjectField)(JNIEnv* pEnv, jobject obj, jfieldID fieldID);
+	jboolean (JNICALL *GetBooleanField)(JNIEnv* pEnv, jobject obj, jfieldID fieldID);
+	jbyte (JNICALL *GetByteField)(JNIEnv* pEnv, jobject obj, jfieldID fieldID);
+	jchar (JNICALL *GetCharField)(JNIEnv* pEnv, jobject obj, jfieldID fieldID);
+	jshort (JNICALL *GetShortField)(JNIEnv* pEnv, jobject obj, jfieldID fieldID);
+	jint (JNICALL *GetIntField)(JNIEnv* pEnv, jobject obj, jfieldID fieldID);
+	jlong (JNICALL *GetLongField)(JNIEnv* pEnv, jobject obj, jfieldID fieldID);
+	jfloat (JNICALL *GetFloatField)(JNIEnv* pEnv, jobject obj, jfieldID fieldID);
+	jdouble (JNICALL *GetDoubleField)(JNIEnv* pEnv, jobject obj, jfieldID fieldID);
+
+	void (JNICALL *SetObjectField)(JNIEnv* pEnv, jobject obj, jfieldID fieldID, jobject val);
+	void (JNICALL *SetBooleanField)(JNIEnv* pEnv, jobject obj, jfieldID fieldID, jboolean val);
+	void (JNICALL *SetByteField)(JNIEnv* pEnv, jobject obj, jfieldID fieldID, jbyte val);
+	void (JNICALL *SetCharField)(JNIEnv* pEnv, jobject obj, jfieldID fieldID, jchar val);
+	void (JNICALL *SetShortField)(JNIEnv* pEnv, jobject obj, jfieldID fieldID, jshort val);
+	void (JNICALL *SetIntField)(JNIEnv* pEnv, jobject obj, jfieldID fieldID, jint val);
+	void (JNICALL *SetLongField)(JNIEnv* pEnv, jobject obj, jfieldID fieldID, jlong val);
+	void (JNICALL *SetFloatField)(JNIEnv* pEnv, jobject obj, jfieldID fieldID, jfloat val);
+	void (JNICALL *SetDoubleField)(JNIEnv* pEnv, jobject obj, jfieldID fieldID, jdouble val);
+
+	jmethodID (JNICALL *GetStaticMethodID)(JNIEnv* pEnv, jclass clazz, const char *name, const char *sig);
+
+	jobject (JNICALL *CallStaticObjectMethod)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, ...);
+	jobject (JNICALL *CallStaticObjectMethodV)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, va_list args);
+	jobject (JNICALL *CallStaticObjectMethodA)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, jvalue *args);
+
+	jboolean (JNICALL *CallStaticBooleanMethod)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, ...);
+	jboolean (JNICALL *CallStaticBooleanMethodV)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, va_list args);
+	jboolean (JNICALL *CallStaticBooleanMethodA)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, jvalue *args);
+
+	jbyte (JNICALL *CallStaticByteMethod)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, ...);
+	jbyte (JNICALL *CallStaticByteMethodV)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, va_list args);
+	jbyte (JNICALL *CallStaticByteMethodA)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, jvalue *args);
+
+	jchar (JNICALL *CallStaticCharMethod)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, ...);
+	jchar (JNICALL *CallStaticCharMethodV)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, va_list args);
+	jchar (JNICALL *CallStaticCharMethodA)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, jvalue *args);
+
+	jshort (JNICALL *CallStaticShortMethod)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, ...);
+	jshort (JNICALL *CallStaticShortMethodV)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, va_list args);
+	jshort (JNICALL *CallStaticShortMethodA)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, jvalue *args);
+
+	jint (JNICALL *CallStaticIntMethod)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, ...);
+	jint (JNICALL *CallStaticIntMethodV)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, va_list args);
+	jint (JNICALL *CallStaticIntMethodA)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, jvalue *args);
+
+	jlong (JNICALL *CallStaticLongMethod)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, ...);
+	jlong (JNICALL *CallStaticLongMethodV)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, va_list args);
+	jlong (JNICALL *CallStaticLongMethodA)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, jvalue *args);
+
+	jfloat (JNICALL *CallStaticFloatMethod)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, ...);
+	jfloat (JNICALL *CallStaticFloatMethodV)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, va_list args);
+	jfloat (JNICALL *CallStaticFloatMethodA)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, jvalue *args);
+
+	jdouble (JNICALL *CallStaticDoubleMethod)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, ...);
+	jdouble (JNICALL *CallStaticDoubleMethodV)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, va_list args);
+	jdouble (JNICALL *CallStaticDoubleMethodA)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, jvalue *args);
+
+	void (JNICALL *CallStaticVoidMethod)(JNIEnv* pEnv, jclass cls, jmethodID methodID, ...);
+	void (JNICALL *CallStaticVoidMethodV)(JNIEnv* pEnv, jclass cls, jmethodID methodID, va_list args);
+	void (JNICALL *CallStaticVoidMethodA)(JNIEnv* pEnv, jclass cls, jmethodID methodID, jvalue * args);
+
+	jfieldID (JNICALL *GetStaticFieldID)(JNIEnv* pEnv, jclass clazz, const char *name, const char *sig);
+	jobject (JNICALL *GetStaticObjectField)(JNIEnv* pEnv, jclass clazz, jfieldID fieldID);
+	jboolean (JNICALL *GetStaticBooleanField)(JNIEnv* pEnv, jclass clazz, jfieldID fieldID);
+	jbyte (JNICALL *GetStaticByteField)(JNIEnv* pEnv, jclass clazz, jfieldID fieldID);
+	jchar (JNICALL *GetStaticCharField)(JNIEnv* pEnv, jclass clazz, jfieldID fieldID);
+	jshort (JNICALL *GetStaticShortField)(JNIEnv* pEnv, jclass clazz, jfieldID fieldID);
+	jint (JNICALL *GetStaticIntField)(JNIEnv* pEnv, jclass clazz, jfieldID fieldID);
+	jlong (JNICALL *GetStaticLongField)(JNIEnv* pEnv, jclass clazz, jfieldID fieldID);
+	jfloat (JNICALL *GetStaticFloatField)(JNIEnv* pEnv, jclass clazz, jfieldID fieldID);
+	jdouble (JNICALL *GetStaticDoubleField)(JNIEnv* pEnv, jclass clazz, jfieldID fieldID);
+
+	void (JNICALL *SetStaticObjectField)(JNIEnv* pEnv, jclass clazz, jfieldID fieldID, jobject value);
+	void (JNICALL *SetStaticBooleanField)(JNIEnv* pEnv, jclass clazz, jfieldID fieldID, jboolean value);
+	void (JNICALL *SetStaticByteField)(JNIEnv* pEnv, jclass clazz, jfieldID fieldID, jbyte value);
+	void (JNICALL *SetStaticCharField)(JNIEnv* pEnv, jclass clazz, jfieldID fieldID, jchar value);
+	void (JNICALL *SetStaticShortField)(JNIEnv* pEnv, jclass clazz, jfieldID fieldID, jshort value);
+	void (JNICALL *SetStaticIntField)(JNIEnv* pEnv, jclass clazz, jfieldID fieldID, jint value);
+	void (JNICALL *SetStaticLongField)(JNIEnv* pEnv, jclass clazz, jfieldID fieldID, jlong value);
+	void (JNICALL *SetStaticFloatField)(JNIEnv* pEnv, jclass clazz, jfieldID fieldID, jfloat value);
+	void (JNICALL *SetStaticDoubleField)(JNIEnv* pEnv, jclass clazz, jfieldID fieldID, jdouble value);
+
+	jstring (JNICALL *NewString)(JNIEnv* pEnv, const jchar *unicode, jsize len);
+	jsize (JNICALL *GetStringLength)(JNIEnv* pEnv, jstring str);
+	const jchar *(JNICALL *GetStringChars)(JNIEnv* pEnv, jstring str, jboolean *isCopy);
+	void (JNICALL *ReleaseStringChars)(JNIEnv* pEnv, jstring str, const jchar *chars);
+
+	jstring (JNICALL *NewStringUTF)(JNIEnv* pEnv, const char *utf);
+	jsize (JNICALL *GetStringUTFLength)(JNIEnv* pEnv, jstring str);
+	const char* (JNICALL *GetStringUTFChars)(JNIEnv* pEnv, jstring str, jboolean *isCopy);
+	void (JNICALL *ReleaseStringUTFChars)(JNIEnv* pEnv, jstring str, const char* chars);
+
+	jsize (JNICALL *GetArrayLength)(JNIEnv* pEnv, jarray array);
+
+	jobjectArray (JNICALL *NewObjectArray)(JNIEnv* pEnv, jsize len, jclass clazz, jobject init);
+	jobject (JNICALL *GetObjectArrayElement)(JNIEnv* pEnv, jobjectArray array, jsize index);
+	void (JNICALL *SetObjectArrayElement)(JNIEnv* pEnv, jobjectArray array, jsize index, jobject val);
+
+	jbooleanArray (JNICALL *NewBooleanArray)(JNIEnv* pEnv, jsize len);
+	jbyteArray (JNICALL *NewByteArray)(JNIEnv* pEnv, jsize len);
+	jcharArray (JNICALL *NewCharArray)(JNIEnv* pEnv, jsize len);
+	jshortArray (JNICALL *NewShortArray)(JNIEnv* pEnv, jsize len);
+	jintArray (JNICALL *NewIntArray)(JNIEnv* pEnv, jsize len);
+	jlongArray (JNICALL *NewLongArray)(JNIEnv* pEnv, jsize len);
+	jfloatArray (JNICALL *NewFloatArray)(JNIEnv* pEnv, jsize len);
+	jdoubleArray (JNICALL *NewDoubleArray)(JNIEnv* pEnv, jsize len);
+
+	jboolean * (JNICALL *GetBooleanArrayElements)(JNIEnv* pEnv, jbooleanArray array, jboolean *isCopy);
+	jbyte * (JNICALL *GetByteArrayElements)(JNIEnv* pEnv, jbyteArray array, jboolean *isCopy);
+	jchar * (JNICALL *GetCharArrayElements)(JNIEnv* pEnv, jcharArray array, jboolean *isCopy);
+	jshort * (JNICALL *GetShortArrayElements)(JNIEnv* pEnv, jshortArray array, jboolean *isCopy);
+	jint * (JNICALL *GetIntArrayElements)(JNIEnv* pEnv, jintArray array, jboolean *isCopy);
+	jlong * (JNICALL *GetLongArrayElements)(JNIEnv* pEnv, jlongArray array, jboolean *isCopy);
+	jfloat * (JNICALL *GetFloatArrayElements)(JNIEnv* pEnv, jfloatArray array, jboolean *isCopy);
+	jdouble * (JNICALL *GetDoubleArrayElements)(JNIEnv* pEnv, jdoubleArray array, jboolean *isCopy);
+
+	void (JNICALL *ReleaseBooleanArrayElements)(JNIEnv* pEnv, jbooleanArray array, jboolean *elems, jint mode);
+	void (JNICALL *ReleaseByteArrayElements)(JNIEnv* pEnv, jbyteArray array, jbyte *elems, jint mode);
+	void (JNICALL *ReleaseCharArrayElements)(JNIEnv* pEnv, jcharArray array, jchar *elems, jint mode);
+	void (JNICALL *ReleaseShortArrayElements)(JNIEnv* pEnv, jshortArray array, jshort *elems, jint mode);
+	void (JNICALL *ReleaseIntArrayElements)(JNIEnv* pEnv, jintArray array, jint *elems, jint mode);
+	void (JNICALL *ReleaseLongArrayElements)(JNIEnv* pEnv, jlongArray array, jlong *elems, jint mode);
+	void (JNICALL *ReleaseFloatArrayElements)(JNIEnv* pEnv, jfloatArray array, jfloat *elems, jint mode);
+	void (JNICALL *ReleaseDoubleArrayElements)(JNIEnv* pEnv, jdoubleArray array, jdouble *elems, jint mode);
+
+	void (JNICALL *GetBooleanArrayRegion)(JNIEnv* pEnv, jbooleanArray array, jsize start, jsize l, jboolean *buf);
+	void (JNICALL *GetByteArrayRegion)(JNIEnv* pEnv, jbyteArray array, jsize start, jsize len, jbyte *buf);
+	void (JNICALL *GetCharArrayRegion)(JNIEnv* pEnv, jcharArray array, jsize start, jsize len, jchar *buf);
+	void (JNICALL *GetShortArrayRegion)(JNIEnv* pEnv, jshortArray array, jsize start, jsize len, jshort *buf);
+	void (JNICALL *GetIntArrayRegion)(JNIEnv* pEnv, jintArray array, jsize start, jsize len, jint *buf);
+	void (JNICALL *GetLongArrayRegion)(JNIEnv* pEnv, jlongArray array, jsize start, jsize len, jlong *buf);
+	void (JNICALL *GetFloatArrayRegion)(JNIEnv* pEnv, jfloatArray array, jsize start, jsize len, jfloat *buf);
+	void (JNICALL *GetDoubleArrayRegion)(JNIEnv* pEnv, jdoubleArray array, jsize start, jsize len, jdouble *buf);
+
+	void (JNICALL *SetBooleanArrayRegion)(JNIEnv* pEnv, jbooleanArray array, jsize start, jsize l, jboolean *buf);
+	void (JNICALL *SetByteArrayRegion)(JNIEnv* pEnv, jbyteArray array, jsize start, jsize len, jbyte *buf);
+	void (JNICALL *SetCharArrayRegion)(JNIEnv* pEnv, jcharArray array, jsize start, jsize len, jchar *buf);
+	void (JNICALL *SetShortArrayRegion)(JNIEnv* pEnv, jshortArray array, jsize start, jsize len, jshort *buf);
+	void (JNICALL *SetIntArrayRegion)(JNIEnv* pEnv, jintArray array, jsize start, jsize len, jint *buf);
+	void (JNICALL *SetLongArrayRegion)(JNIEnv* pEnv, jlongArray array, jsize start, jsize len, jlong *buf);
+	void (JNICALL *SetFloatArrayRegion)(JNIEnv* pEnv, jfloatArray array, jsize start, jsize len, jfloat *buf);
+	void (JNICALL *SetDoubleArrayRegion)(JNIEnv* pEnv, jdoubleArray array, jsize start, jsize len, jdouble *buf);
+
+	jint (JNICALL *RegisterNatives)(JNIEnv* pEnv, jclass clazz, const JNINativeMethod *methods, jint nMethods);
+	jint (JNICALL *UnregisterNatives)(JNIEnv* pEnv, jclass clazz);
+
+	jint (JNICALL *MonitorEnter)(JNIEnv* pEnv, jobject obj);
+	jint (JNICALL *MonitorExit)(JNIEnv* pEnv, jobject obj);
+
+	jint (JNICALL *GetJavaVM)(JNIEnv* pEnv, JavaVM **vm);
+
+	void (JNICALL *GetStringRegion)(JNIEnv* pEnv, jstring str, jsize start, jsize len, jchar *buf);
+	void (JNICALL *GetStringUTFRegion)(JNIEnv* pEnv, jstring str, jsize start, jsize len, char *buf);
+
+	void* (JNICALL *GetPrimitiveArrayCritical)(JNIEnv* pEnv, jarray array, jboolean *isCopy);
+	void (JNICALL *ReleasePrimitiveArrayCritical)(JNIEnv* pEnv, jarray array, void *carray, jint mode);
+
+	const jchar* (JNICALL *GetStringCritical)(JNIEnv* pEnv, jstring string, jboolean *isCopy);
+	void (JNICALL *ReleaseStringCritical)(JNIEnv* pEnv, jstring string, const jchar *cstring);
+
+	jweak (JNICALL *NewWeakGlobalRef)(JNIEnv* pEnv, jobject obj);
+	void (JNICALL *DeleteWeakGlobalRef)(JNIEnv* pEnv, jweak ref);
+
+	jboolean (JNICALL *ExceptionCheck)(JNIEnv* pEnv);
+
+	jobject (JNICALL *NewDirectByteBuffer)(JNIEnv* pEnv, void* address, jlong capacity);
+	void* (JNICALL *GetDirectBufferAddress)(JNIEnv* pEnv, jobject buf);
+	jlong (JNICALL *GetDirectBufferCapacity)(JNIEnv* pEnv, jobject buf);
+};
+
+#endif //__JNI_H__
diff --git a/backends/gdx-backend-iosmonotouch/natives/natives.xcodeproj/project.pbxproj b/backends/gdx-backend-iosmonotouch/natives/natives.xcodeproj/project.pbxproj
new file mode 100644
index 0000000..fbafe39
--- /dev/null
+++ b/backends/gdx-backend-iosmonotouch/natives/natives.xcodeproj/project.pbxproj
@@ -0,0 +1,964 @@
+// !$*UTF8*$!
+{
+	archiveVersion = 1;
+	classes = {
+	};
+	objectVersion = 46;
+	objects = {
+
+/* Begin PBXBuildFile section */
+		76056F79157C140D004CE04B /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 76056F78157C140D004CE04B /* Foundation.framework */; };
+		7605713E157C15EF004CE04B /* Box2D.h in Headers */ = {isa = PBXBuildFile; fileRef = 760570DB157C15EF004CE04B /* Box2D.h */; };
+		7605713F157C15EF004CE04B /* b2BroadPhase.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760570DE157C15EF004CE04B /* b2BroadPhase.cpp */; };
+		76057140157C15EF004CE04B /* b2BroadPhase.h in Headers */ = {isa = PBXBuildFile; fileRef = 760570DF157C15EF004CE04B /* b2BroadPhase.h */; };
+		76057141157C15EF004CE04B /* b2CollideCircle.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760570E0157C15EF004CE04B /* b2CollideCircle.cpp */; };
+		76057142157C15EF004CE04B /* b2CollideEdge.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760570E1157C15EF004CE04B /* b2CollideEdge.cpp */; };
+		76057143157C15EF004CE04B /* b2CollidePolygon.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760570E2157C15EF004CE04B /* b2CollidePolygon.cpp */; };
+		76057144157C15EF004CE04B /* b2Collision.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760570E3157C15EF004CE04B /* b2Collision.cpp */; };
+		76057145157C15EF004CE04B /* b2Collision.h in Headers */ = {isa = PBXBuildFile; fileRef = 760570E4157C15EF004CE04B /* b2Collision.h */; };
+		76057146157C15EF004CE04B /* b2Distance.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760570E5157C15EF004CE04B /* b2Distance.cpp */; };
+		76057147157C15EF004CE04B /* b2Distance.h in Headers */ = {isa = PBXBuildFile; fileRef = 760570E6157C15EF004CE04B /* b2Distance.h */; };
+		76057148157C15EF004CE04B /* b2DynamicTree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760570E7157C15EF004CE04B /* b2DynamicTree.cpp */; };
+		76057149157C15EF004CE04B /* b2DynamicTree.h in Headers */ = {isa = PBXBuildFile; fileRef = 760570E8157C15EF004CE04B /* b2DynamicTree.h */; };
+		7605714A157C15EF004CE04B /* b2TimeOfImpact.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760570E9157C15EF004CE04B /* b2TimeOfImpact.cpp */; };
+		7605714B157C15EF004CE04B /* b2TimeOfImpact.h in Headers */ = {isa = PBXBuildFile; fileRef = 760570EA157C15EF004CE04B /* b2TimeOfImpact.h */; };
+		7605714C157C15EF004CE04B /* b2ChainShape.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760570EC157C15EF004CE04B /* b2ChainShape.cpp */; };
+		7605714D157C15EF004CE04B /* b2ChainShape.h in Headers */ = {isa = PBXBuildFile; fileRef = 760570ED157C15EF004CE04B /* b2ChainShape.h */; };
+		7605714E157C15EF004CE04B /* b2CircleShape.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760570EE157C15EF004CE04B /* b2CircleShape.cpp */; };
+		7605714F157C15EF004CE04B /* b2CircleShape.h in Headers */ = {isa = PBXBuildFile; fileRef = 760570EF157C15EF004CE04B /* b2CircleShape.h */; };
+		76057150157C15EF004CE04B /* b2EdgeShape.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760570F0157C15EF004CE04B /* b2EdgeShape.cpp */; };
+		76057151157C15EF004CE04B /* b2EdgeShape.h in Headers */ = {isa = PBXBuildFile; fileRef = 760570F1157C15EF004CE04B /* b2EdgeShape.h */; };
+		76057152157C15EF004CE04B /* b2PolygonShape.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760570F2157C15EF004CE04B /* b2PolygonShape.cpp */; };
+		76057153157C15EF004CE04B /* b2PolygonShape.h in Headers */ = {isa = PBXBuildFile; fileRef = 760570F3157C15EF004CE04B /* b2PolygonShape.h */; };
+		76057154157C15EF004CE04B /* b2Shape.h in Headers */ = {isa = PBXBuildFile; fileRef = 760570F4157C15EF004CE04B /* b2Shape.h */; };
+		76057155157C15EF004CE04B /* b2BlockAllocator.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760570F6157C15EF004CE04B /* b2BlockAllocator.cpp */; };
+		76057156157C15EF004CE04B /* b2BlockAllocator.h in Headers */ = {isa = PBXBuildFile; fileRef = 760570F7157C15EF004CE04B /* b2BlockAllocator.h */; };
+		76057157157C15EF004CE04B /* b2Draw.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760570F8157C15EF004CE04B /* b2Draw.cpp */; };
+		76057158157C15EF004CE04B /* b2Draw.h in Headers */ = {isa = PBXBuildFile; fileRef = 760570F9157C15EF004CE04B /* b2Draw.h */; };
+		76057159157C15EF004CE04B /* b2GrowableStack.h in Headers */ = {isa = PBXBuildFile; fileRef = 760570FA157C15EF004CE04B /* b2GrowableStack.h */; };
+		7605715A157C15EF004CE04B /* b2Math.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760570FB157C15EF004CE04B /* b2Math.cpp */; };
+		7605715B157C15EF004CE04B /* b2Math.h in Headers */ = {isa = PBXBuildFile; fileRef = 760570FC157C15EF004CE04B /* b2Math.h */; };
+		7605715C157C15EF004CE04B /* b2Settings.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760570FD157C15EF004CE04B /* b2Settings.cpp */; };
+		7605715D157C15EF004CE04B /* b2Settings.h in Headers */ = {isa = PBXBuildFile; fileRef = 760570FE157C15EF004CE04B /* b2Settings.h */; };
+		7605715E157C15EF004CE04B /* b2StackAllocator.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760570FF157C15EF004CE04B /* b2StackAllocator.cpp */; };
+		7605715F157C15EF004CE04B /* b2StackAllocator.h in Headers */ = {isa = PBXBuildFile; fileRef = 76057100157C15EF004CE04B /* b2StackAllocator.h */; };
+		76057160157C15EF004CE04B /* b2Timer.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 76057101157C15EF004CE04B /* b2Timer.cpp */; };
+		76057161157C15EF004CE04B /* b2Timer.h in Headers */ = {isa = PBXBuildFile; fileRef = 76057102157C15EF004CE04B /* b2Timer.h */; };
+		76057162157C15EF004CE04B /* b2Body.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 76057104157C15EF004CE04B /* b2Body.cpp */; };
+		76057163157C15EF004CE04B /* b2Body.h in Headers */ = {isa = PBXBuildFile; fileRef = 76057105157C15EF004CE04B /* b2Body.h */; };
+		76057164157C15EF004CE04B /* b2ContactManager.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 76057106157C15EF004CE04B /* b2ContactManager.cpp */; };
+		76057165157C15EF004CE04B /* b2ContactManager.h in Headers */ = {isa = PBXBuildFile; fileRef = 76057107157C15EF004CE04B /* b2ContactManager.h */; };
+		76057166157C15EF004CE04B /* b2Fixture.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 76057108157C15EF004CE04B /* b2Fixture.cpp */; };
+		76057167157C15EF004CE04B /* b2Fixture.h in Headers */ = {isa = PBXBuildFile; fileRef = 76057109157C15EF004CE04B /* b2Fixture.h */; };
+		76057168157C15EF004CE04B /* b2Island.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 7605710A157C15EF004CE04B /* b2Island.cpp */; };
+		76057169157C15EF004CE04B /* b2Island.h in Headers */ = {isa = PBXBuildFile; fileRef = 7605710B157C15EF004CE04B /* b2Island.h */; };
+		7605716A157C15EF004CE04B /* b2TimeStep.h in Headers */ = {isa = PBXBuildFile; fileRef = 7605710C157C15EF004CE04B /* b2TimeStep.h */; };
+		7605716B157C15EF004CE04B /* b2World.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 7605710D157C15EF004CE04B /* b2World.cpp */; };
+		7605716C157C15EF004CE04B /* b2World.h in Headers */ = {isa = PBXBuildFile; fileRef = 7605710E157C15EF004CE04B /* b2World.h */; };
+		7605716D157C15EF004CE04B /* b2WorldCallbacks.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 7605710F157C15EF004CE04B /* b2WorldCallbacks.cpp */; };
+		7605716E157C15EF004CE04B /* b2WorldCallbacks.h in Headers */ = {isa = PBXBuildFile; fileRef = 76057110157C15EF004CE04B /* b2WorldCallbacks.h */; };
+		7605716F157C15EF004CE04B /* b2ChainAndCircleContact.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 76057112157C15EF004CE04B /* b2ChainAndCircleContact.cpp */; };
+		76057170157C15EF004CE04B /* b2ChainAndCircleContact.h in Headers */ = {isa = PBXBuildFile; fileRef = 76057113157C15EF004CE04B /* b2ChainAndCircleContact.h */; };
+		76057171157C15EF004CE04B /* b2ChainAndPolygonContact.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 76057114157C15EF004CE04B /* b2ChainAndPolygonContact.cpp */; };
+		76057172157C15EF004CE04B /* b2ChainAndPolygonContact.h in Headers */ = {isa = PBXBuildFile; fileRef = 76057115157C15EF004CE04B /* b2ChainAndPolygonContact.h */; };
+		76057173157C15EF004CE04B /* b2CircleContact.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 76057116157C15EF004CE04B /* b2CircleContact.cpp */; };
+		76057174157C15EF004CE04B /* b2CircleContact.h in Headers */ = {isa = PBXBuildFile; fileRef = 76057117157C15EF004CE04B /* b2CircleContact.h */; };
+		76057175157C15EF004CE04B /* b2Contact.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 76057118157C15EF004CE04B /* b2Contact.cpp */; };
+		76057176157C15EF004CE04B /* b2Contact.h in Headers */ = {isa = PBXBuildFile; fileRef = 76057119157C15EF004CE04B /* b2Contact.h */; };
+		76057177157C15EF004CE04B /* b2ContactSolver.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 7605711A157C15EF004CE04B /* b2ContactSolver.cpp */; };
+		76057178157C15EF004CE04B /* b2ContactSolver.h in Headers */ = {isa = PBXBuildFile; fileRef = 7605711B157C15EF004CE04B /* b2ContactSolver.h */; };
+		76057179157C15EF004CE04B /* b2EdgeAndCircleContact.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 7605711C157C15EF004CE04B /* b2EdgeAndCircleContact.cpp */; };
+		7605717A157C15EF004CE04B /* b2EdgeAndCircleContact.h in Headers */ = {isa = PBXBuildFile; fileRef = 7605711D157C15EF004CE04B /* b2EdgeAndCircleContact.h */; };
+		7605717B157C15EF004CE04B /* b2EdgeAndPolygonContact.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 7605711E157C15EF004CE04B /* b2EdgeAndPolygonContact.cpp */; };
+		7605717C157C15EF004CE04B /* b2EdgeAndPolygonContact.h in Headers */ = {isa = PBXBuildFile; fileRef = 7605711F157C15EF004CE04B /* b2EdgeAndPolygonContact.h */; };
+		7605717D157C15EF004CE04B /* b2PolygonAndCircleContact.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 76057120157C15EF004CE04B /* b2PolygonAndCircleContact.cpp */; };
+		7605717E157C15EF004CE04B /* b2PolygonAndCircleContact.h in Headers */ = {isa = PBXBuildFile; fileRef = 76057121157C15EF004CE04B /* b2PolygonAndCircleContact.h */; };
+		7605717F157C15EF004CE04B /* b2PolygonContact.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 76057122157C15EF004CE04B /* b2PolygonContact.cpp */; };
+		76057180157C15EF004CE04B /* b2PolygonContact.h in Headers */ = {isa = PBXBuildFile; fileRef = 76057123157C15EF004CE04B /* b2PolygonContact.h */; };
+		76057181157C15EF004CE04B /* b2DistanceJoint.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 76057125157C15EF004CE04B /* b2DistanceJoint.cpp */; };
+		76057182157C15EF004CE04B /* b2DistanceJoint.h in Headers */ = {isa = PBXBuildFile; fileRef = 76057126157C15EF004CE04B /* b2DistanceJoint.h */; };
+		76057183157C15EF004CE04B /* b2FrictionJoint.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 76057127157C15EF004CE04B /* b2FrictionJoint.cpp */; };
+		76057184157C15EF004CE04B /* b2FrictionJoint.h in Headers */ = {isa = PBXBuildFile; fileRef = 76057128157C15EF004CE04B /* b2FrictionJoint.h */; };
+		76057185157C15EF004CE04B /* b2GearJoint.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 76057129157C15EF004CE04B /* b2GearJoint.cpp */; };
+		76057186157C15EF004CE04B /* b2GearJoint.h in Headers */ = {isa = PBXBuildFile; fileRef = 7605712A157C15EF004CE04B /* b2GearJoint.h */; };
+		76057187157C15EF004CE04B /* b2Joint.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 7605712B157C15EF004CE04B /* b2Joint.cpp */; };
+		76057188157C15EF004CE04B /* b2Joint.h in Headers */ = {isa = PBXBuildFile; fileRef = 7605712C157C15EF004CE04B /* b2Joint.h */; };
+		76057189157C15EF004CE04B /* b2MouseJoint.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 7605712D157C15EF004CE04B /* b2MouseJoint.cpp */; };
+		7605718A157C15EF004CE04B /* b2MouseJoint.h in Headers */ = {isa = PBXBuildFile; fileRef = 7605712E157C15EF004CE04B /* b2MouseJoint.h */; };
+		7605718B157C15EF004CE04B /* b2PrismaticJoint.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 7605712F157C15EF004CE04B /* b2PrismaticJoint.cpp */; };
+		7605718C157C15EF004CE04B /* b2PrismaticJoint.h in Headers */ = {isa = PBXBuildFile; fileRef = 76057130157C15EF004CE04B /* b2PrismaticJoint.h */; };
+		7605718D157C15EF004CE04B /* b2PulleyJoint.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 76057131157C15EF004CE04B /* b2PulleyJoint.cpp */; };
+		7605718E157C15EF004CE04B /* b2PulleyJoint.h in Headers */ = {isa = PBXBuildFile; fileRef = 76057132157C15EF004CE04B /* b2PulleyJoint.h */; };
+		7605718F157C15EF004CE04B /* b2RevoluteJoint.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 76057133157C15EF004CE04B /* b2RevoluteJoint.cpp */; };
+		76057190157C15EF004CE04B /* b2RevoluteJoint.h in Headers */ = {isa = PBXBuildFile; fileRef = 76057134157C15EF004CE04B /* b2RevoluteJoint.h */; };
+		76057191157C15EF004CE04B /* b2RopeJoint.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 76057135157C15EF004CE04B /* b2RopeJoint.cpp */; };
+		76057192157C15EF004CE04B /* b2RopeJoint.h in Headers */ = {isa = PBXBuildFile; fileRef = 76057136157C15EF004CE04B /* b2RopeJoint.h */; };
+		76057193157C15EF004CE04B /* b2WeldJoint.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 76057137157C15EF004CE04B /* b2WeldJoint.cpp */; };
+		76057194157C15EF004CE04B /* b2WeldJoint.h in Headers */ = {isa = PBXBuildFile; fileRef = 76057138157C15EF004CE04B /* b2WeldJoint.h */; };
+		76057195157C15EF004CE04B /* b2WheelJoint.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 76057139157C15EF004CE04B /* b2WheelJoint.cpp */; };
+		76057196157C15EF004CE04B /* b2WheelJoint.h in Headers */ = {isa = PBXBuildFile; fileRef = 7605713A157C15EF004CE04B /* b2WheelJoint.h */; };
+		76057197157C15EF004CE04B /* b2Rope.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 7605713C157C15EF004CE04B /* b2Rope.cpp */; };
+		76057198157C15EF004CE04B /* b2Rope.h in Headers */ = {isa = PBXBuildFile; fileRef = 7605713D157C15EF004CE04B /* b2Rope.h */; };
+		760571E1157C1713004CE04B /* com.badlogic.gdx.graphics.g2d.Gdx2DPixmap.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 76057199157C1713004CE04B /* com.badlogic.gdx.graphics.g2d.Gdx2DPixmap.cpp */; };
+		760571E2157C1713004CE04B /* com.badlogic.gdx.graphics.g2d.Gdx2DPixmap.h in Headers */ = {isa = PBXBuildFile; fileRef = 7605719A157C1713004CE04B /* com.badlogic.gdx.graphics.g2d.Gdx2DPixmap.h */; };
+		760571E3157C1713004CE04B /* com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Jni.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 7605719B157C1713004CE04B /* com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Jni.cpp */; };
+		760571E4157C1713004CE04B /* com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Jni.h in Headers */ = {isa = PBXBuildFile; fileRef = 7605719C157C1713004CE04B /* com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Jni.h */; };
+		760571E5157C1713004CE04B /* com.badlogic.gdx.graphics.glutils.ETC1.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 7605719D157C1713004CE04B /* com.badlogic.gdx.graphics.glutils.ETC1.cpp */; };
+		760571E6157C1713004CE04B /* com.badlogic.gdx.graphics.glutils.ETC1.h in Headers */ = {isa = PBXBuildFile; fileRef = 7605719E157C1713004CE04B /* com.badlogic.gdx.graphics.glutils.ETC1.h */; };
+		760571E7157C1713004CE04B /* com.badlogic.gdx.math.Matrix4.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 7605719F157C1713004CE04B /* com.badlogic.gdx.math.Matrix4.cpp */; };
+		760571E8157C1713004CE04B /* com.badlogic.gdx.math.Matrix4.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571A0157C1713004CE04B /* com.badlogic.gdx.math.Matrix4.h */; };
+		760571E9157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Body.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760571A1157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Body.cpp */; };
+		760571EA157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Body.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571A2157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Body.h */; };
+		760571EB157C1713004CE04B /* com.badlogic.gdx.physics.box2d.ChainShape.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760571A3157C1713004CE04B /* com.badlogic.gdx.physics.box2d.ChainShape.cpp */; };
+		760571EC157C1713004CE04B /* com.badlogic.gdx.physics.box2d.ChainShape.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571A4157C1713004CE04B /* com.badlogic.gdx.physics.box2d.ChainShape.h */; };
+		760571ED157C1713004CE04B /* com.badlogic.gdx.physics.box2d.CircleShape.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760571A5157C1713004CE04B /* com.badlogic.gdx.physics.box2d.CircleShape.cpp */; };
+		760571EE157C1713004CE04B /* com.badlogic.gdx.physics.box2d.CircleShape.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571A6157C1713004CE04B /* com.badlogic.gdx.physics.box2d.CircleShape.h */; };
+		760571EF157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Contact.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760571A7157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Contact.cpp */; };
+		760571F0157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Contact.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571A8157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Contact.h */; };
+		760571F1157C1713004CE04B /* com.badlogic.gdx.physics.box2d.ContactImpulse.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760571A9157C1713004CE04B /* com.badlogic.gdx.physics.box2d.ContactImpulse.cpp */; };
+		760571F2157C1713004CE04B /* com.badlogic.gdx.physics.box2d.ContactImpulse.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571AA157C1713004CE04B /* com.badlogic.gdx.physics.box2d.ContactImpulse.h */; };
+		760571F3157C1713004CE04B /* com.badlogic.gdx.physics.box2d.EdgeShape.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760571AB157C1713004CE04B /* com.badlogic.gdx.physics.box2d.EdgeShape.cpp */; };
+		760571F4157C1713004CE04B /* com.badlogic.gdx.physics.box2d.EdgeShape.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571AC157C1713004CE04B /* com.badlogic.gdx.physics.box2d.EdgeShape.h */; };
+		760571F5157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Fixture.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760571AD157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Fixture.cpp */; };
+		760571F6157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Fixture.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571AE157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Fixture.h */; };
+		760571F7157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Joint.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760571AF157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Joint.cpp */; };
+		760571F8157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Joint.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571B0157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Joint.h */; };
+		760571F9157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.DistanceJoint.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760571B1157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.DistanceJoint.cpp */; };
+		760571FA157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.DistanceJoint.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571B2157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.DistanceJoint.h */; };
+		760571FB157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.FrictionJoint.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760571B3157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.FrictionJoint.cpp */; };
+		760571FC157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.FrictionJoint.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571B4157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.FrictionJoint.h */; };
+		760571FD157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.GearJoint.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760571B5157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.GearJoint.cpp */; };
+		760571FE157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.GearJoint.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571B6157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.GearJoint.h */; };
+		760571FF157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.MouseJoint.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760571B7157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.MouseJoint.cpp */; };
+		76057200157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.MouseJoint.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571B8157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.MouseJoint.h */; };
+		76057201157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.PrismaticJoint.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760571B9157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.PrismaticJoint.cpp */; };
+		76057202157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.PrismaticJoint.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571BA157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.PrismaticJoint.h */; };
+		76057203157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.PulleyJoint.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760571BB157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.PulleyJoint.cpp */; };
+		76057204157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.PulleyJoint.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571BC157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.PulleyJoint.h */; };
+		76057205157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.RevoluteJoint.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760571BD157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.RevoluteJoint.cpp */; };
+		76057206157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.RevoluteJoint.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571BE157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.RevoluteJoint.h */; };
+		76057207157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.RopeJoint.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760571BF157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.RopeJoint.cpp */; };
+		76057208157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.RopeJoint.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571C0157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.RopeJoint.h */; };
+		76057209157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.WheelJoint.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760571C1157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.WheelJoint.cpp */; };
+		7605720A157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.WheelJoint.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571C2157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.WheelJoint.h */; };
+		7605720B157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Manifold.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760571C3157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Manifold.cpp */; };
+		7605720C157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Manifold.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571C4157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Manifold.h */; };
+		7605720D157C1713004CE04B /* com.badlogic.gdx.physics.box2d.PolygonShape.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760571C5157C1713004CE04B /* com.badlogic.gdx.physics.box2d.PolygonShape.cpp */; };
+		7605720E157C1713004CE04B /* com.badlogic.gdx.physics.box2d.PolygonShape.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571C6157C1713004CE04B /* com.badlogic.gdx.physics.box2d.PolygonShape.h */; };
+		7605720F157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Shape.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760571C7157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Shape.cpp */; };
+		76057210157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Shape.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571C8157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Shape.h */; };
+		76057211157C1713004CE04B /* com.badlogic.gdx.physics.box2d.World.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760571C9157C1713004CE04B /* com.badlogic.gdx.physics.box2d.World.cpp */; };
+		76057212157C1713004CE04B /* com.badlogic.gdx.physics.box2d.World.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571CA157C1713004CE04B /* com.badlogic.gdx.physics.box2d.World.h */; };
+		76057213157C1713004CE04B /* com.badlogic.gdx.utils.BufferUtils.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760571CB157C1713004CE04B /* com.badlogic.gdx.utils.BufferUtils.cpp */; };
+		76057214157C1713004CE04B /* com.badlogic.gdx.utils.BufferUtils.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571CC157C1713004CE04B /* com.badlogic.gdx.utils.BufferUtils.h */; };
+		76057215157C1713004CE04B /* etc1_utils.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760571CE157C1713004CE04B /* etc1_utils.cpp */; };
+		76057216157C1713004CE04B /* etc1_utils.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571CF157C1713004CE04B /* etc1_utils.h */; };
+		76057217157C1713004CE04B /* gdx2d.c in Sources */ = {isa = PBXBuildFile; fileRef = 760571D1157C1713004CE04B /* gdx2d.c */; };
+		76057218157C1713004CE04B /* gdx2d.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571D2157C1713004CE04B /* gdx2d.h */; };
+		76057219157C1713004CE04B /* stb_image.c in Sources */ = {isa = PBXBuildFile; fileRef = 760571D3157C1713004CE04B /* stb_image.c */; };
+		7605721A157C1713004CE04B /* classfile_constants.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571D5157C1713004CE04B /* classfile_constants.h */; };
+		7605721B157C1713004CE04B /* jawt.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571D6157C1713004CE04B /* jawt.h */; };
+		7605721C157C1713004CE04B /* jdwpTransport.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571D7157C1713004CE04B /* jdwpTransport.h */; };
+		7605721D157C1713004CE04B /* jni.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571D8157C1713004CE04B /* jni.h */; };
+		7605721E157C1713004CE04B /* jawt_md.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571DA157C1713004CE04B /* jawt_md.h */; };
+		7605721F157C1713004CE04B /* jni_md.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571DB157C1713004CE04B /* jni_md.h */; };
+		76057220157C1713004CE04B /* jni_md.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571DD157C1713004CE04B /* jni_md.h */; };
+		76057221157C1713004CE04B /* jawt_md.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571DF157C1713004CE04B /* jawt_md.h */; };
+		76057222157C1713004CE04B /* jni_md.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571E0157C1713004CE04B /* jni_md.h */; };
+		7657C33E1582B4FF0067030A /* iosgles20.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 7657C33C1582B4FF0067030A /* iosgles20.cpp */; };
+		7657C33F1582B4FF0067030A /* iosgles20.h in Headers */ = {isa = PBXBuildFile; fileRef = 7657C33D1582B4FF0067030A /* iosgles20.h */; };
+/* End PBXBuildFile section */
+
+/* Begin PBXFileReference section */
+		76056F75157C140D004CE04B /* libnatives.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = libnatives.a; sourceTree = BUILT_PRODUCTS_DIR; };
+		76056F78157C140D004CE04B /* Foundation.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = Foundation.framework; path = System/Library/Frameworks/Foundation.framework; sourceTree = SDKROOT; };
+		760570DB157C15EF004CE04B /* Box2D.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = Box2D.h; sourceTree = "<group>"; };
+		760570DC157C15EF004CE04B /* CHANGES */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = CHANGES; sourceTree = "<group>"; };
+		760570DE157C15EF004CE04B /* b2BroadPhase.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2BroadPhase.cpp; sourceTree = "<group>"; };
+		760570DF157C15EF004CE04B /* b2BroadPhase.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2BroadPhase.h; sourceTree = "<group>"; };
+		760570E0157C15EF004CE04B /* b2CollideCircle.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2CollideCircle.cpp; sourceTree = "<group>"; };
+		760570E1157C15EF004CE04B /* b2CollideEdge.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2CollideEdge.cpp; sourceTree = "<group>"; };
+		760570E2157C15EF004CE04B /* b2CollidePolygon.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2CollidePolygon.cpp; sourceTree = "<group>"; };
+		760570E3157C15EF004CE04B /* b2Collision.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2Collision.cpp; sourceTree = "<group>"; };
+		760570E4157C15EF004CE04B /* b2Collision.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2Collision.h; sourceTree = "<group>"; };
+		760570E5157C15EF004CE04B /* b2Distance.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2Distance.cpp; sourceTree = "<group>"; };
+		760570E6157C15EF004CE04B /* b2Distance.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2Distance.h; sourceTree = "<group>"; };
+		760570E7157C15EF004CE04B /* b2DynamicTree.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2DynamicTree.cpp; sourceTree = "<group>"; };
+		760570E8157C15EF004CE04B /* b2DynamicTree.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2DynamicTree.h; sourceTree = "<group>"; };
+		760570E9157C15EF004CE04B /* b2TimeOfImpact.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2TimeOfImpact.cpp; sourceTree = "<group>"; };
+		760570EA157C15EF004CE04B /* b2TimeOfImpact.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2TimeOfImpact.h; sourceTree = "<group>"; };
+		760570EC157C15EF004CE04B /* b2ChainShape.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2ChainShape.cpp; sourceTree = "<group>"; };
+		760570ED157C15EF004CE04B /* b2ChainShape.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2ChainShape.h; sourceTree = "<group>"; };
+		760570EE157C15EF004CE04B /* b2CircleShape.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2CircleShape.cpp; sourceTree = "<group>"; };
+		760570EF157C15EF004CE04B /* b2CircleShape.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2CircleShape.h; sourceTree = "<group>"; };
+		760570F0157C15EF004CE04B /* b2EdgeShape.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2EdgeShape.cpp; sourceTree = "<group>"; };
+		760570F1157C15EF004CE04B /* b2EdgeShape.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2EdgeShape.h; sourceTree = "<group>"; };
+		760570F2157C15EF004CE04B /* b2PolygonShape.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2PolygonShape.cpp; sourceTree = "<group>"; };
+		760570F3157C15EF004CE04B /* b2PolygonShape.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2PolygonShape.h; sourceTree = "<group>"; };
+		760570F4157C15EF004CE04B /* b2Shape.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2Shape.h; sourceTree = "<group>"; };
+		760570F6157C15EF004CE04B /* b2BlockAllocator.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2BlockAllocator.cpp; sourceTree = "<group>"; };
+		760570F7157C15EF004CE04B /* b2BlockAllocator.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2BlockAllocator.h; sourceTree = "<group>"; };
+		760570F8157C15EF004CE04B /* b2Draw.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2Draw.cpp; sourceTree = "<group>"; };
+		760570F9157C15EF004CE04B /* b2Draw.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2Draw.h; sourceTree = "<group>"; };
+		760570FA157C15EF004CE04B /* b2GrowableStack.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2GrowableStack.h; sourceTree = "<group>"; };
+		760570FB157C15EF004CE04B /* b2Math.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2Math.cpp; sourceTree = "<group>"; };
+		760570FC157C15EF004CE04B /* b2Math.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2Math.h; sourceTree = "<group>"; };
+		760570FD157C15EF004CE04B /* b2Settings.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2Settings.cpp; sourceTree = "<group>"; };
+		760570FE157C15EF004CE04B /* b2Settings.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2Settings.h; sourceTree = "<group>"; };
+		760570FF157C15EF004CE04B /* b2StackAllocator.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2StackAllocator.cpp; sourceTree = "<group>"; };
+		76057100157C15EF004CE04B /* b2StackAllocator.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2StackAllocator.h; sourceTree = "<group>"; };
+		76057101157C15EF004CE04B /* b2Timer.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2Timer.cpp; sourceTree = "<group>"; };
+		76057102157C15EF004CE04B /* b2Timer.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2Timer.h; sourceTree = "<group>"; };
+		76057104157C15EF004CE04B /* b2Body.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2Body.cpp; sourceTree = "<group>"; };
+		76057105157C15EF004CE04B /* b2Body.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2Body.h; sourceTree = "<group>"; };
+		76057106157C15EF004CE04B /* b2ContactManager.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2ContactManager.cpp; sourceTree = "<group>"; };
+		76057107157C15EF004CE04B /* b2ContactManager.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2ContactManager.h; sourceTree = "<group>"; };
+		76057108157C15EF004CE04B /* b2Fixture.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2Fixture.cpp; sourceTree = "<group>"; };
+		76057109157C15EF004CE04B /* b2Fixture.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2Fixture.h; sourceTree = "<group>"; };
+		7605710A157C15EF004CE04B /* b2Island.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2Island.cpp; sourceTree = "<group>"; };
+		7605710B157C15EF004CE04B /* b2Island.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2Island.h; sourceTree = "<group>"; };
+		7605710C157C15EF004CE04B /* b2TimeStep.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2TimeStep.h; sourceTree = "<group>"; };
+		7605710D157C15EF004CE04B /* b2World.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2World.cpp; sourceTree = "<group>"; };
+		7605710E157C15EF004CE04B /* b2World.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2World.h; sourceTree = "<group>"; };
+		7605710F157C15EF004CE04B /* b2WorldCallbacks.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2WorldCallbacks.cpp; sourceTree = "<group>"; };
+		76057110157C15EF004CE04B /* b2WorldCallbacks.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2WorldCallbacks.h; sourceTree = "<group>"; };
+		76057112157C15EF004CE04B /* b2ChainAndCircleContact.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2ChainAndCircleContact.cpp; sourceTree = "<group>"; };
+		76057113157C15EF004CE04B /* b2ChainAndCircleContact.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2ChainAndCircleContact.h; sourceTree = "<group>"; };
+		76057114157C15EF004CE04B /* b2ChainAndPolygonContact.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2ChainAndPolygonContact.cpp; sourceTree = "<group>"; };
+		76057115157C15EF004CE04B /* b2ChainAndPolygonContact.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2ChainAndPolygonContact.h; sourceTree = "<group>"; };
+		76057116157C15EF004CE04B /* b2CircleContact.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2CircleContact.cpp; sourceTree = "<group>"; };
+		76057117157C15EF004CE04B /* b2CircleContact.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2CircleContact.h; sourceTree = "<group>"; };
+		76057118157C15EF004CE04B /* b2Contact.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2Contact.cpp; sourceTree = "<group>"; };
+		76057119157C15EF004CE04B /* b2Contact.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2Contact.h; sourceTree = "<group>"; };
+		7605711A157C15EF004CE04B /* b2ContactSolver.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2ContactSolver.cpp; sourceTree = "<group>"; };
+		7605711B157C15EF004CE04B /* b2ContactSolver.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2ContactSolver.h; sourceTree = "<group>"; };
+		7605711C157C15EF004CE04B /* b2EdgeAndCircleContact.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2EdgeAndCircleContact.cpp; sourceTree = "<group>"; };
+		7605711D157C15EF004CE04B /* b2EdgeAndCircleContact.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2EdgeAndCircleContact.h; sourceTree = "<group>"; };
+		7605711E157C15EF004CE04B /* b2EdgeAndPolygonContact.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2EdgeAndPolygonContact.cpp; sourceTree = "<group>"; };
+		7605711F157C15EF004CE04B /* b2EdgeAndPolygonContact.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2EdgeAndPolygonContact.h; sourceTree = "<group>"; };
+		76057120157C15EF004CE04B /* b2PolygonAndCircleContact.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2PolygonAndCircleContact.cpp; sourceTree = "<group>"; };
+		76057121157C15EF004CE04B /* b2PolygonAndCircleContact.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2PolygonAndCircleContact.h; sourceTree = "<group>"; };
+		76057122157C15EF004CE04B /* b2PolygonContact.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2PolygonContact.cpp; sourceTree = "<group>"; };
+		76057123157C15EF004CE04B /* b2PolygonContact.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2PolygonContact.h; sourceTree = "<group>"; };
+		76057125157C15EF004CE04B /* b2DistanceJoint.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2DistanceJoint.cpp; sourceTree = "<group>"; };
+		76057126157C15EF004CE04B /* b2DistanceJoint.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2DistanceJoint.h; sourceTree = "<group>"; };
+		76057127157C15EF004CE04B /* b2FrictionJoint.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2FrictionJoint.cpp; sourceTree = "<group>"; };
+		76057128157C15EF004CE04B /* b2FrictionJoint.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2FrictionJoint.h; sourceTree = "<group>"; };
+		76057129157C15EF004CE04B /* b2GearJoint.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2GearJoint.cpp; sourceTree = "<group>"; };
+		7605712A157C15EF004CE04B /* b2GearJoint.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2GearJoint.h; sourceTree = "<group>"; };
+		7605712B157C15EF004CE04B /* b2Joint.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2Joint.cpp; sourceTree = "<group>"; };
+		7605712C157C15EF004CE04B /* b2Joint.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2Joint.h; sourceTree = "<group>"; };
+		7605712D157C15EF004CE04B /* b2MouseJoint.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2MouseJoint.cpp; sourceTree = "<group>"; };
+		7605712E157C15EF004CE04B /* b2MouseJoint.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2MouseJoint.h; sourceTree = "<group>"; };
+		7605712F157C15EF004CE04B /* b2PrismaticJoint.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2PrismaticJoint.cpp; sourceTree = "<group>"; };
+		76057130157C15EF004CE04B /* b2PrismaticJoint.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2PrismaticJoint.h; sourceTree = "<group>"; };
+		76057131157C15EF004CE04B /* b2PulleyJoint.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2PulleyJoint.cpp; sourceTree = "<group>"; };
+		76057132157C15EF004CE04B /* b2PulleyJoint.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2PulleyJoint.h; sourceTree = "<group>"; };
+		76057133157C15EF004CE04B /* b2RevoluteJoint.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2RevoluteJoint.cpp; sourceTree = "<group>"; };
+		76057134157C15EF004CE04B /* b2RevoluteJoint.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2RevoluteJoint.h; sourceTree = "<group>"; };
+		76057135157C15EF004CE04B /* b2RopeJoint.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2RopeJoint.cpp; sourceTree = "<group>"; };
+		76057136157C15EF004CE04B /* b2RopeJoint.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2RopeJoint.h; sourceTree = "<group>"; };
+		76057137157C15EF004CE04B /* b2WeldJoint.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2WeldJoint.cpp; sourceTree = "<group>"; };
+		76057138157C15EF004CE04B /* b2WeldJoint.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2WeldJoint.h; sourceTree = "<group>"; };
+		76057139157C15EF004CE04B /* b2WheelJoint.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2WheelJoint.cpp; sourceTree = "<group>"; };
+		7605713A157C15EF004CE04B /* b2WheelJoint.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2WheelJoint.h; sourceTree = "<group>"; };
+		7605713C157C15EF004CE04B /* b2Rope.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2Rope.cpp; sourceTree = "<group>"; };
+		7605713D157C15EF004CE04B /* b2Rope.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2Rope.h; sourceTree = "<group>"; };
+		76057199157C1713004CE04B /* com.badlogic.gdx.graphics.g2d.Gdx2DPixmap.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.graphics.g2d.Gdx2DPixmap.cpp; path = ../../../gdx/jni/com.badlogic.gdx.graphics.g2d.Gdx2DPixmap.cpp; sourceTree = "<group>"; };
+		7605719A157C1713004CE04B /* com.badlogic.gdx.graphics.g2d.Gdx2DPixmap.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.graphics.g2d.Gdx2DPixmap.h; path = ../../../gdx/jni/com.badlogic.gdx.graphics.g2d.Gdx2DPixmap.h; sourceTree = "<group>"; };
+		7605719B157C1713004CE04B /* com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Jni.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Jni.cpp; path = ../../../gdx/jni/com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Jni.cpp; sourceTree = "<group>"; };
+		7605719C157C1713004CE04B /* com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Jni.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Jni.h; path = ../../../gdx/jni/com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Jni.h; sourceTree = "<group>"; };
+		7605719D157C1713004CE04B /* com.badlogic.gdx.graphics.glutils.ETC1.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.graphics.glutils.ETC1.cpp; path = ../../../gdx/jni/com.badlogic.gdx.graphics.glutils.ETC1.cpp; sourceTree = "<group>"; };
+		7605719E157C1713004CE04B /* com.badlogic.gdx.graphics.glutils.ETC1.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.graphics.glutils.ETC1.h; path = ../../../gdx/jni/com.badlogic.gdx.graphics.glutils.ETC1.h; sourceTree = "<group>"; };
+		7605719F157C1713004CE04B /* com.badlogic.gdx.math.Matrix4.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.math.Matrix4.cpp; path = ../../../gdx/jni/com.badlogic.gdx.math.Matrix4.cpp; sourceTree = "<group>"; };
+		760571A0157C1713004CE04B /* com.badlogic.gdx.math.Matrix4.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.math.Matrix4.h; path = ../../../gdx/jni/com.badlogic.gdx.math.Matrix4.h; sourceTree = "<group>"; };
+		760571A1157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Body.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.physics.box2d.Body.cpp; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.Body.cpp; sourceTree = "<group>"; };
+		760571A2157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Body.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.physics.box2d.Body.h; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.Body.h; sourceTree = "<group>"; };
+		760571A3157C1713004CE04B /* com.badlogic.gdx.physics.box2d.ChainShape.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.physics.box2d.ChainShape.cpp; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.ChainShape.cpp; sourceTree = "<group>"; };
+		760571A4157C1713004CE04B /* com.badlogic.gdx.physics.box2d.ChainShape.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.physics.box2d.ChainShape.h; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.ChainShape.h; sourceTree = "<group>"; };
+		760571A5157C1713004CE04B /* com.badlogic.gdx.physics.box2d.CircleShape.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.physics.box2d.CircleShape.cpp; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.CircleShape.cpp; sourceTree = "<group>"; };
+		760571A6157C1713004CE04B /* com.badlogic.gdx.physics.box2d.CircleShape.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.physics.box2d.CircleShape.h; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.CircleShape.h; sourceTree = "<group>"; };
+		760571A7157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Contact.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.physics.box2d.Contact.cpp; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.Contact.cpp; sourceTree = "<group>"; };
+		760571A8157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Contact.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.physics.box2d.Contact.h; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.Contact.h; sourceTree = "<group>"; };
+		760571A9157C1713004CE04B /* com.badlogic.gdx.physics.box2d.ContactImpulse.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.physics.box2d.ContactImpulse.cpp; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.ContactImpulse.cpp; sourceTree = "<group>"; };
+		760571AA157C1713004CE04B /* com.badlogic.gdx.physics.box2d.ContactImpulse.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.physics.box2d.ContactImpulse.h; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.ContactImpulse.h; sourceTree = "<group>"; };
+		760571AB157C1713004CE04B /* com.badlogic.gdx.physics.box2d.EdgeShape.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.physics.box2d.EdgeShape.cpp; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.EdgeShape.cpp; sourceTree = "<group>"; };
+		760571AC157C1713004CE04B /* com.badlogic.gdx.physics.box2d.EdgeShape.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.physics.box2d.EdgeShape.h; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.EdgeShape.h; sourceTree = "<group>"; };
+		760571AD157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Fixture.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.physics.box2d.Fixture.cpp; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.Fixture.cpp; sourceTree = "<group>"; };
+		760571AE157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Fixture.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.physics.box2d.Fixture.h; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.Fixture.h; sourceTree = "<group>"; };
+		760571AF157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Joint.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.physics.box2d.Joint.cpp; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.Joint.cpp; sourceTree = "<group>"; };
+		760571B0157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Joint.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.physics.box2d.Joint.h; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.Joint.h; sourceTree = "<group>"; };
+		760571B1157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.DistanceJoint.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.physics.box2d.joints.DistanceJoint.cpp; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.joints.DistanceJoint.cpp; sourceTree = "<group>"; };
+		760571B2157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.DistanceJoint.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.physics.box2d.joints.DistanceJoint.h; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.joints.DistanceJoint.h; sourceTree = "<group>"; };
+		760571B3157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.FrictionJoint.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.physics.box2d.joints.FrictionJoint.cpp; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.joints.FrictionJoint.cpp; sourceTree = "<group>"; };
+		760571B4157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.FrictionJoint.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.physics.box2d.joints.FrictionJoint.h; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.joints.FrictionJoint.h; sourceTree = "<group>"; };
+		760571B5157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.GearJoint.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.physics.box2d.joints.GearJoint.cpp; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.joints.GearJoint.cpp; sourceTree = "<group>"; };
+		760571B6157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.GearJoint.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.physics.box2d.joints.GearJoint.h; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.joints.GearJoint.h; sourceTree = "<group>"; };
+		760571B7157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.MouseJoint.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.physics.box2d.joints.MouseJoint.cpp; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.joints.MouseJoint.cpp; sourceTree = "<group>"; };
+		760571B8157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.MouseJoint.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.physics.box2d.joints.MouseJoint.h; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.joints.MouseJoint.h; sourceTree = "<group>"; };
+		760571B9157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.PrismaticJoint.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.physics.box2d.joints.PrismaticJoint.cpp; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.joints.PrismaticJoint.cpp; sourceTree = "<group>"; };
+		760571BA157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.PrismaticJoint.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.physics.box2d.joints.PrismaticJoint.h; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.joints.PrismaticJoint.h; sourceTree = "<group>"; };
+		760571BB157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.PulleyJoint.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.physics.box2d.joints.PulleyJoint.cpp; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.joints.PulleyJoint.cpp; sourceTree = "<group>"; };
+		760571BC157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.PulleyJoint.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.physics.box2d.joints.PulleyJoint.h; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.joints.PulleyJoint.h; sourceTree = "<group>"; };
+		760571BD157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.RevoluteJoint.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.physics.box2d.joints.RevoluteJoint.cpp; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.joints.RevoluteJoint.cpp; sourceTree = "<group>"; };
+		760571BE157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.RevoluteJoint.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.physics.box2d.joints.RevoluteJoint.h; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.joints.RevoluteJoint.h; sourceTree = "<group>"; };
+		760571BF157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.RopeJoint.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.physics.box2d.joints.RopeJoint.cpp; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.joints.RopeJoint.cpp; sourceTree = "<group>"; };
+		760571C0157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.RopeJoint.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.physics.box2d.joints.RopeJoint.h; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.joints.RopeJoint.h; sourceTree = "<group>"; };
+		760571C1157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.WheelJoint.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.physics.box2d.joints.WheelJoint.cpp; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.joints.WheelJoint.cpp; sourceTree = "<group>"; };
+		760571C2157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.WheelJoint.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.physics.box2d.joints.WheelJoint.h; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.joints.WheelJoint.h; sourceTree = "<group>"; };
+		760571C3157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Manifold.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.physics.box2d.Manifold.cpp; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.Manifold.cpp; sourceTree = "<group>"; };
+		760571C4157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Manifold.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.physics.box2d.Manifold.h; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.Manifold.h; sourceTree = "<group>"; };
+		760571C5157C1713004CE04B /* com.badlogic.gdx.physics.box2d.PolygonShape.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.physics.box2d.PolygonShape.cpp; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.PolygonShape.cpp; sourceTree = "<group>"; };
+		760571C6157C1713004CE04B /* com.badlogic.gdx.physics.box2d.PolygonShape.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.physics.box2d.PolygonShape.h; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.PolygonShape.h; sourceTree = "<group>"; };
+		760571C7157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Shape.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.physics.box2d.Shape.cpp; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.Shape.cpp; sourceTree = "<group>"; };
+		760571C8157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Shape.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.physics.box2d.Shape.h; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.Shape.h; sourceTree = "<group>"; };
+		760571C9157C1713004CE04B /* com.badlogic.gdx.physics.box2d.World.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.physics.box2d.World.cpp; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.World.cpp; sourceTree = "<group>"; };
+		760571CA157C1713004CE04B /* com.badlogic.gdx.physics.box2d.World.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.physics.box2d.World.h; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.World.h; sourceTree = "<group>"; };
+		760571CB157C1713004CE04B /* com.badlogic.gdx.utils.BufferUtils.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.utils.BufferUtils.cpp; path = ../../../gdx/jni/com.badlogic.gdx.utils.BufferUtils.cpp; sourceTree = "<group>"; };
+		760571CC157C1713004CE04B /* com.badlogic.gdx.utils.BufferUtils.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.utils.BufferUtils.h; path = ../../../gdx/jni/com.badlogic.gdx.utils.BufferUtils.h; sourceTree = "<group>"; };
+		760571CE157C1713004CE04B /* etc1_utils.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = etc1_utils.cpp; sourceTree = "<group>"; };
+		760571CF157C1713004CE04B /* etc1_utils.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = etc1_utils.h; sourceTree = "<group>"; };
+		760571D1157C1713004CE04B /* gdx2d.c */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.c; path = gdx2d.c; sourceTree = "<group>"; };
+		760571D2157C1713004CE04B /* gdx2d.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = gdx2d.h; sourceTree = "<group>"; };
+		760571D3157C1713004CE04B /* stb_image.c */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.c; path = stb_image.c; sourceTree = "<group>"; };
+		760571D5157C1713004CE04B /* classfile_constants.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = classfile_constants.h; sourceTree = "<group>"; };
+		760571D6157C1713004CE04B /* jawt.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = jawt.h; sourceTree = "<group>"; };
+		760571D7157C1713004CE04B /* jdwpTransport.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = jdwpTransport.h; sourceTree = "<group>"; };
+		760571D8157C1713004CE04B /* jni.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = jni.h; sourceTree = "<group>"; };
+		760571DA157C1713004CE04B /* jawt_md.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = jawt_md.h; sourceTree = "<group>"; };
+		760571DB157C1713004CE04B /* jni_md.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = jni_md.h; sourceTree = "<group>"; };
+		760571DD157C1713004CE04B /* jni_md.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = jni_md.h; sourceTree = "<group>"; };
+		760571DF157C1713004CE04B /* jawt_md.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = jawt_md.h; sourceTree = "<group>"; };
+		760571E0157C1713004CE04B /* jni_md.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = jni_md.h; sourceTree = "<group>"; };
+		7657C33C1582B4FF0067030A /* iosgles20.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = iosgles20.cpp; sourceTree = "<group>"; };
+		7657C33D1582B4FF0067030A /* iosgles20.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = iosgles20.h; sourceTree = "<group>"; };
+/* End PBXFileReference section */
+
+/* Begin PBXFrameworksBuildPhase section */
+		76056F72157C140D004CE04B /* Frameworks */ = {
+			isa = PBXFrameworksBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+				76056F79157C140D004CE04B /* Foundation.framework in Frameworks */,
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+		};
+/* End PBXFrameworksBuildPhase section */
+
+/* Begin PBXGroup section */
+		76056F6A157C140D004CE04B = {
+			isa = PBXGroup;
+			children = (
+				7657C33C1582B4FF0067030A /* iosgles20.cpp */,
+				7657C33D1582B4FF0067030A /* iosgles20.h */,
+				76057199157C1713004CE04B /* com.badlogic.gdx.graphics.g2d.Gdx2DPixmap.cpp */,
+				7605719A157C1713004CE04B /* com.badlogic.gdx.graphics.g2d.Gdx2DPixmap.h */,
+				7605719B157C1713004CE04B /* com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Jni.cpp */,
+				7605719C157C1713004CE04B /* com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Jni.h */,
+				7605719D157C1713004CE04B /* com.badlogic.gdx.graphics.glutils.ETC1.cpp */,
+				7605719E157C1713004CE04B /* com.badlogic.gdx.graphics.glutils.ETC1.h */,
+				7605719F157C1713004CE04B /* com.badlogic.gdx.math.Matrix4.cpp */,
+				760571A0157C1713004CE04B /* com.badlogic.gdx.math.Matrix4.h */,
+				760571A1157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Body.cpp */,
+				760571A2157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Body.h */,
+				760571A3157C1713004CE04B /* com.badlogic.gdx.physics.box2d.ChainShape.cpp */,
+				760571A4157C1713004CE04B /* com.badlogic.gdx.physics.box2d.ChainShape.h */,
+				760571A5157C1713004CE04B /* com.badlogic.gdx.physics.box2d.CircleShape.cpp */,
+				760571A6157C1713004CE04B /* com.badlogic.gdx.physics.box2d.CircleShape.h */,
+				760571A7157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Contact.cpp */,
+				760571A8157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Contact.h */,
+				760571A9157C1713004CE04B /* com.badlogic.gdx.physics.box2d.ContactImpulse.cpp */,
+				760571AA157C1713004CE04B /* com.badlogic.gdx.physics.box2d.ContactImpulse.h */,
+				760571AB157C1713004CE04B /* com.badlogic.gdx.physics.box2d.EdgeShape.cpp */,
+				760571AC157C1713004CE04B /* com.badlogic.gdx.physics.box2d.EdgeShape.h */,
+				760571AD157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Fixture.cpp */,
+				760571AE157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Fixture.h */,
+				760571AF157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Joint.cpp */,
+				760571B0157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Joint.h */,
+				760571B1157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.DistanceJoint.cpp */,
+				760571B2157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.DistanceJoint.h */,
+				760571B3157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.FrictionJoint.cpp */,
+				760571B4157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.FrictionJoint.h */,
+				760571B5157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.GearJoint.cpp */,
+				760571B6157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.GearJoint.h */,
+				760571B7157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.MouseJoint.cpp */,
+				760571B8157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.MouseJoint.h */,
+				760571B9157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.PrismaticJoint.cpp */,
+				760571BA157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.PrismaticJoint.h */,
+				760571BB157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.PulleyJoint.cpp */,
+				760571BC157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.PulleyJoint.h */,
+				760571BD157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.RevoluteJoint.cpp */,
+				760571BE157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.RevoluteJoint.h */,
+				760571BF157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.RopeJoint.cpp */,
+				760571C0157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.RopeJoint.h */,
+				760571C1157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.WheelJoint.cpp */,
+				760571C2157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.WheelJoint.h */,
+				760571C3157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Manifold.cpp */,
+				760571C4157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Manifold.h */,
+				760571C5157C1713004CE04B /* com.badlogic.gdx.physics.box2d.PolygonShape.cpp */,
+				760571C6157C1713004CE04B /* com.badlogic.gdx.physics.box2d.PolygonShape.h */,
+				760571C7157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Shape.cpp */,
+				760571C8157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Shape.h */,
+				760571C9157C1713004CE04B /* com.badlogic.gdx.physics.box2d.World.cpp */,
+				760571CA157C1713004CE04B /* com.badlogic.gdx.physics.box2d.World.h */,
+				760571CB157C1713004CE04B /* com.badlogic.gdx.utils.BufferUtils.cpp */,
+				760571CC157C1713004CE04B /* com.badlogic.gdx.utils.BufferUtils.h */,
+				760571CD157C1713004CE04B /* etc1 */,
+				760571D0157C1713004CE04B /* gdx2d */,
+				760571D4157C1713004CE04B /* jni-headers */,
+				760570DA157C15EF004CE04B /* Box2D */,
+				76056F77157C140D004CE04B /* Frameworks */,
+				76056F76157C140D004CE04B /* Products */,
+			);
+			sourceTree = "<group>";
+		};
+		76056F76157C140D004CE04B /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				76056F75157C140D004CE04B /* libnatives.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		76056F77157C140D004CE04B /* Frameworks */ = {
+			isa = PBXGroup;
+			children = (
+				76056F78157C140D004CE04B /* Foundation.framework */,
+			);
+			name = Frameworks;
+			sourceTree = "<group>";
+		};
+		760570DA157C15EF004CE04B /* Box2D */ = {
+			isa = PBXGroup;
+			children = (
+				760570DB157C15EF004CE04B /* Box2D.h */,
+				760570DC157C15EF004CE04B /* CHANGES */,
+				760570DD157C15EF004CE04B /* Collision */,
+				760570F5157C15EF004CE04B /* Common */,
+				76057103157C15EF004CE04B /* Dynamics */,
+				7605713B157C15EF004CE04B /* Rope */,
+			);
+			name = Box2D;
+			path = ../../../gdx/jni/Box2D;
+			sourceTree = "<group>";
+		};
+		760570DD157C15EF004CE04B /* Collision */ = {
+			isa = PBXGroup;
+			children = (
+				760570DE157C15EF004CE04B /* b2BroadPhase.cpp */,
+				760570DF157C15EF004CE04B /* b2BroadPhase.h */,
+				760570E0157C15EF004CE04B /* b2CollideCircle.cpp */,
+				760570E1157C15EF004CE04B /* b2CollideEdge.cpp */,
+				760570E2157C15EF004CE04B /* b2CollidePolygon.cpp */,
+				760570E3157C15EF004CE04B /* b2Collision.cpp */,
+				760570E4157C15EF004CE04B /* b2Collision.h */,
+				760570E5157C15EF004CE04B /* b2Distance.cpp */,
+				760570E6157C15EF004CE04B /* b2Distance.h */,
+				760570E7157C15EF004CE04B /* b2DynamicTree.cpp */,
+				760570E8157C15EF004CE04B /* b2DynamicTree.h */,
+				760570E9157C15EF004CE04B /* b2TimeOfImpact.cpp */,
+				760570EA157C15EF004CE04B /* b2TimeOfImpact.h */,
+				760570EB157C15EF004CE04B /* Shapes */,
+			);
+			path = Collision;
+			sourceTree = "<group>";
+		};
+		760570EB157C15EF004CE04B /* Shapes */ = {
+			isa = PBXGroup;
+			children = (
+				760570EC157C15EF004CE04B /* b2ChainShape.cpp */,
+				760570ED157C15EF004CE04B /* b2ChainShape.h */,
+				760570EE157C15EF004CE04B /* b2CircleShape.cpp */,
+				760570EF157C15EF004CE04B /* b2CircleShape.h */,
+				760570F0157C15EF004CE04B /* b2EdgeShape.cpp */,
+				760570F1157C15EF004CE04B /* b2EdgeShape.h */,
+				760570F2157C15EF004CE04B /* b2PolygonShape.cpp */,
+				760570F3157C15EF004CE04B /* b2PolygonShape.h */,
+				760570F4157C15EF004CE04B /* b2Shape.h */,
+			);
+			path = Shapes;
+			sourceTree = "<group>";
+		};
+		760570F5157C15EF004CE04B /* Common */ = {
+			isa = PBXGroup;
+			children = (
+				760570F6157C15EF004CE04B /* b2BlockAllocator.cpp */,
+				760570F7157C15EF004CE04B /* b2BlockAllocator.h */,
+				760570F8157C15EF004CE04B /* b2Draw.cpp */,
+				760570F9157C15EF004CE04B /* b2Draw.h */,
+				760570FA157C15EF004CE04B /* b2GrowableStack.h */,
+				760570FB157C15EF004CE04B /* b2Math.cpp */,
+				760570FC157C15EF004CE04B /* b2Math.h */,
+				760570FD157C15EF004CE04B /* b2Settings.cpp */,
+				760570FE157C15EF004CE04B /* b2Settings.h */,
+				760570FF157C15EF004CE04B /* b2StackAllocator.cpp */,
+				76057100157C15EF004CE04B /* b2StackAllocator.h */,
+				76057101157C15EF004CE04B /* b2Timer.cpp */,
+				76057102157C15EF004CE04B /* b2Timer.h */,
+			);
+			path = Common;
+			sourceTree = "<group>";
+		};
+		76057103157C15EF004CE04B /* Dynamics */ = {
+			isa = PBXGroup;
+			children = (
+				76057104157C15EF004CE04B /* b2Body.cpp */,
+				76057105157C15EF004CE04B /* b2Body.h */,
+				76057106157C15EF004CE04B /* b2ContactManager.cpp */,
+				76057107157C15EF004CE04B /* b2ContactManager.h */,
+				76057108157C15EF004CE04B /* b2Fixture.cpp */,
+				76057109157C15EF004CE04B /* b2Fixture.h */,
+				7605710A157C15EF004CE04B /* b2Island.cpp */,
+				7605710B157C15EF004CE04B /* b2Island.h */,
+				7605710C157C15EF004CE04B /* b2TimeStep.h */,
+				7605710D157C15EF004CE04B /* b2World.cpp */,
+				7605710E157C15EF004CE04B /* b2World.h */,
+				7605710F157C15EF004CE04B /* b2WorldCallbacks.cpp */,
+				76057110157C15EF004CE04B /* b2WorldCallbacks.h */,
+				76057111157C15EF004CE04B /* Contacts */,
+				76057124157C15EF004CE04B /* Joints */,
+			);
+			path = Dynamics;
+			sourceTree = "<group>";
+		};
+		76057111157C15EF004CE04B /* Contacts */ = {
+			isa = PBXGroup;
+			children = (
+				76057112157C15EF004CE04B /* b2ChainAndCircleContact.cpp */,
+				76057113157C15EF004CE04B /* b2ChainAndCircleContact.h */,
+				76057114157C15EF004CE04B /* b2ChainAndPolygonContact.cpp */,
+				76057115157C15EF004CE04B /* b2ChainAndPolygonContact.h */,
+				76057116157C15EF004CE04B /* b2CircleContact.cpp */,
+				76057117157C15EF004CE04B /* b2CircleContact.h */,
+				76057118157C15EF004CE04B /* b2Contact.cpp */,
+				76057119157C15EF004CE04B /* b2Contact.h */,
+				7605711A157C15EF004CE04B /* b2ContactSolver.cpp */,
+				7605711B157C15EF004CE04B /* b2ContactSolver.h */,
+				7605711C157C15EF004CE04B /* b2EdgeAndCircleContact.cpp */,
+				7605711D157C15EF004CE04B /* b2EdgeAndCircleContact.h */,
+				7605711E157C15EF004CE04B /* b2EdgeAndPolygonContact.cpp */,
+				7605711F157C15EF004CE04B /* b2EdgeAndPolygonContact.h */,
+				76057120157C15EF004CE04B /* b2PolygonAndCircleContact.cpp */,
+				76057121157C15EF004CE04B /* b2PolygonAndCircleContact.h */,
+				76057122157C15EF004CE04B /* b2PolygonContact.cpp */,
+				76057123157C15EF004CE04B /* b2PolygonContact.h */,
+			);
+			path = Contacts;
+			sourceTree = "<group>";
+		};
+		76057124157C15EF004CE04B /* Joints */ = {
+			isa = PBXGroup;
+			children = (
+				76057125157C15EF004CE04B /* b2DistanceJoint.cpp */,
+				76057126157C15EF004CE04B /* b2DistanceJoint.h */,
+				76057127157C15EF004CE04B /* b2FrictionJoint.cpp */,
+				76057128157C15EF004CE04B /* b2FrictionJoint.h */,
+				76057129157C15EF004CE04B /* b2GearJoint.cpp */,
+				7605712A157C15EF004CE04B /* b2GearJoint.h */,
+				7605712B157C15EF004CE04B /* b2Joint.cpp */,
+				7605712C157C15EF004CE04B /* b2Joint.h */,
+				7605712D157C15EF004CE04B /* b2MouseJoint.cpp */,
+				7605712E157C15EF004CE04B /* b2MouseJoint.h */,
+				7605712F157C15EF004CE04B /* b2PrismaticJoint.cpp */,
+				76057130157C15EF004CE04B /* b2PrismaticJoint.h */,
+				76057131157C15EF004CE04B /* b2PulleyJoint.cpp */,
+				76057132157C15EF004CE04B /* b2PulleyJoint.h */,
+				76057133157C15EF004CE04B /* b2RevoluteJoint.cpp */,
+				76057134157C15EF004CE04B /* b2RevoluteJoint.h */,
+				76057135157C15EF004CE04B /* b2RopeJoint.cpp */,
+				76057136157C15EF004CE04B /* b2RopeJoint.h */,
+				76057137157C15EF004CE04B /* b2WeldJoint.cpp */,
+				76057138157C15EF004CE04B /* b2WeldJoint.h */,
+				76057139157C15EF004CE04B /* b2WheelJoint.cpp */,
+				7605713A157C15EF004CE04B /* b2WheelJoint.h */,
+			);
+			path = Joints;
+			sourceTree = "<group>";
+		};
+		7605713B157C15EF004CE04B /* Rope */ = {
+			isa = PBXGroup;
+			children = (
+				7605713C157C15EF004CE04B /* b2Rope.cpp */,
+				7605713D157C15EF004CE04B /* b2Rope.h */,
+			);
+			path = Rope;
+			sourceTree = "<group>";
+		};
+		760571CD157C1713004CE04B /* etc1 */ = {
+			isa = PBXGroup;
+			children = (
+				760571CE157C1713004CE04B /* etc1_utils.cpp */,
+				760571CF157C1713004CE04B /* etc1_utils.h */,
+			);
+			name = etc1;
+			path = ../../../gdx/jni/etc1;
+			sourceTree = "<group>";
+		};
+		760571D0157C1713004CE04B /* gdx2d */ = {
+			isa = PBXGroup;
+			children = (
+				760571D1157C1713004CE04B /* gdx2d.c */,
+				760571D2157C1713004CE04B /* gdx2d.h */,
+				760571D3157C1713004CE04B /* stb_image.c */,
+			);
+			name = gdx2d;
+			path = ../../../gdx/jni/gdx2d;
+			sourceTree = "<group>";
+		};
+		760571D4157C1713004CE04B /* jni-headers */ = {
+			isa = PBXGroup;
+			children = (
+				760571D5157C1713004CE04B /* classfile_constants.h */,
+				760571D6157C1713004CE04B /* jawt.h */,
+				760571D7157C1713004CE04B /* jdwpTransport.h */,
+				760571D8157C1713004CE04B /* jni.h */,
+				760571D9157C1713004CE04B /* linux */,
+				760571DC157C1713004CE04B /* mac */,
+				760571DE157C1713004CE04B /* win32 */,
+			);
+			name = "jni-headers";
+			path = "../../../gdx/jni/jni-headers";
+			sourceTree = "<group>";
+		};
+		760571D9157C1713004CE04B /* linux */ = {
+			isa = PBXGroup;
+			children = (
+				760571DA157C1713004CE04B /* jawt_md.h */,
+				760571DB157C1713004CE04B /* jni_md.h */,
+			);
+			path = linux;
+			sourceTree = "<group>";
+		};
+		760571DC157C1713004CE04B /* mac */ = {
+			isa = PBXGroup;
+			children = (
+				760571DD157C1713004CE04B /* jni_md.h */,
+			);
+			path = mac;
+			sourceTree = "<group>";
+		};
+		760571DE157C1713004CE04B /* win32 */ = {
+			isa = PBXGroup;
+			children = (
+				760571DF157C1713004CE04B /* jawt_md.h */,
+				760571E0157C1713004CE04B /* jni_md.h */,
+			);
+			path = win32;
+			sourceTree = "<group>";
+		};
+/* End PBXGroup section */
+
+/* Begin PBXHeadersBuildPhase section */
+		76056F73157C140D004CE04B /* Headers */ = {
+			isa = PBXHeadersBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+				7605713E157C15EF004CE04B /* Box2D.h in Headers */,
+				76057140157C15EF004CE04B /* b2BroadPhase.h in Headers */,
+				76057145157C15EF004CE04B /* b2Collision.h in Headers */,
+				76057147157C15EF004CE04B /* b2Distance.h in Headers */,
+				76057149157C15EF004CE04B /* b2DynamicTree.h in Headers */,
+				7605714B157C15EF004CE04B /* b2TimeOfImpact.h in Headers */,
+				7605714D157C15EF004CE04B /* b2ChainShape.h in Headers */,
+				7605714F157C15EF004CE04B /* b2CircleShape.h in Headers */,
+				76057151157C15EF004CE04B /* b2EdgeShape.h in Headers */,
+				76057153157C15EF004CE04B /* b2PolygonShape.h in Headers */,
+				76057154157C15EF004CE04B /* b2Shape.h in Headers */,
+				76057156157C15EF004CE04B /* b2BlockAllocator.h in Headers */,
+				76057158157C15EF004CE04B /* b2Draw.h in Headers */,
+				76057159157C15EF004CE04B /* b2GrowableStack.h in Headers */,
+				7605715B157C15EF004CE04B /* b2Math.h in Headers */,
+				7605715D157C15EF004CE04B /* b2Settings.h in Headers */,
+				7605715F157C15EF004CE04B /* b2StackAllocator.h in Headers */,
+				76057161157C15EF004CE04B /* b2Timer.h in Headers */,
+				76057163157C15EF004CE04B /* b2Body.h in Headers */,
+				76057165157C15EF004CE04B /* b2ContactManager.h in Headers */,
+				76057167157C15EF004CE04B /* b2Fixture.h in Headers */,
+				76057169157C15EF004CE04B /* b2Island.h in Headers */,
+				7605716A157C15EF004CE04B /* b2TimeStep.h in Headers */,
+				7605716C157C15EF004CE04B /* b2World.h in Headers */,
+				7605716E157C15EF004CE04B /* b2WorldCallbacks.h in Headers */,
+				76057170157C15EF004CE04B /* b2ChainAndCircleContact.h in Headers */,
+				76057172157C15EF004CE04B /* b2ChainAndPolygonContact.h in Headers */,
+				76057174157C15EF004CE04B /* b2CircleContact.h in Headers */,
+				76057176157C15EF004CE04B /* b2Contact.h in Headers */,
+				76057178157C15EF004CE04B /* b2ContactSolver.h in Headers */,
+				7605717A157C15EF004CE04B /* b2EdgeAndCircleContact.h in Headers */,
+				7605717C157C15EF004CE04B /* b2EdgeAndPolygonContact.h in Headers */,
+				7605717E157C15EF004CE04B /* b2PolygonAndCircleContact.h in Headers */,
+				76057180157C15EF004CE04B /* b2PolygonContact.h in Headers */,
+				76057182157C15EF004CE04B /* b2DistanceJoint.h in Headers */,
+				76057184157C15EF004CE04B /* b2FrictionJoint.h in Headers */,
+				76057186157C15EF004CE04B /* b2GearJoint.h in Headers */,
+				76057188157C15EF004CE04B /* b2Joint.h in Headers */,
+				7605718A157C15EF004CE04B /* b2MouseJoint.h in Headers */,
+				7605718C157C15EF004CE04B /* b2PrismaticJoint.h in Headers */,
+				7605718E157C15EF004CE04B /* b2PulleyJoint.h in Headers */,
+				76057190157C15EF004CE04B /* b2RevoluteJoint.h in Headers */,
+				76057192157C15EF004CE04B /* b2RopeJoint.h in Headers */,
+				76057194157C15EF004CE04B /* b2WeldJoint.h in Headers */,
+				76057196157C15EF004CE04B /* b2WheelJoint.h in Headers */,
+				76057198157C15EF004CE04B /* b2Rope.h in Headers */,
+				760571E2157C1713004CE04B /* com.badlogic.gdx.graphics.g2d.Gdx2DPixmap.h in Headers */,
+				760571E4157C1713004CE04B /* com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Jni.h in Headers */,
+				760571E6157C1713004CE04B /* com.badlogic.gdx.graphics.glutils.ETC1.h in Headers */,
+				760571E8157C1713004CE04B /* com.badlogic.gdx.math.Matrix4.h in Headers */,
+				760571EA157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Body.h in Headers */,
+				760571EC157C1713004CE04B /* com.badlogic.gdx.physics.box2d.ChainShape.h in Headers */,
+				760571EE157C1713004CE04B /* com.badlogic.gdx.physics.box2d.CircleShape.h in Headers */,
+				760571F0157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Contact.h in Headers */,
+				760571F2157C1713004CE04B /* com.badlogic.gdx.physics.box2d.ContactImpulse.h in Headers */,
+				760571F4157C1713004CE04B /* com.badlogic.gdx.physics.box2d.EdgeShape.h in Headers */,
+				760571F6157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Fixture.h in Headers */,
+				760571F8157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Joint.h in Headers */,
+				760571FA157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.DistanceJoint.h in Headers */,
+				760571FC157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.FrictionJoint.h in Headers */,
+				760571FE157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.GearJoint.h in Headers */,
+				76057200157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.MouseJoint.h in Headers */,
+				76057202157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.PrismaticJoint.h in Headers */,
+				76057204157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.PulleyJoint.h in Headers */,
+				76057206157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.RevoluteJoint.h in Headers */,
+				76057208157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.RopeJoint.h in Headers */,
+				7605720A157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.WheelJoint.h in Headers */,
+				7605720C157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Manifold.h in Headers */,
+				7605720E157C1713004CE04B /* com.badlogic.gdx.physics.box2d.PolygonShape.h in Headers */,
+				76057210157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Shape.h in Headers */,
+				76057212157C1713004CE04B /* com.badlogic.gdx.physics.box2d.World.h in Headers */,
+				76057214157C1713004CE04B /* com.badlogic.gdx.utils.BufferUtils.h in Headers */,
+				76057216157C1713004CE04B /* etc1_utils.h in Headers */,
+				76057218157C1713004CE04B /* gdx2d.h in Headers */,
+				7605721A157C1713004CE04B /* classfile_constants.h in Headers */,
+				7605721B157C1713004CE04B /* jawt.h in Headers */,
+				7605721C157C1713004CE04B /* jdwpTransport.h in Headers */,
+				7605721D157C1713004CE04B /* jni.h in Headers */,
+				7605721E157C1713004CE04B /* jawt_md.h in Headers */,
+				7605721F157C1713004CE04B /* jni_md.h in Headers */,
+				76057220157C1713004CE04B /* jni_md.h in Headers */,
+				76057221157C1713004CE04B /* jawt_md.h in Headers */,
+				76057222157C1713004CE04B /* jni_md.h in Headers */,
+				7657C33F1582B4FF0067030A /* iosgles20.h in Headers */,
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+		};
+/* End PBXHeadersBuildPhase section */
+
+/* Begin PBXNativeTarget section */
+		76056F74157C140D004CE04B /* natives */ = {
+			isa = PBXNativeTarget;
+			buildConfigurationList = 76056F82157C140D004CE04B /* Build configuration list for PBXNativeTarget "natives" */;
+			buildPhases = (
+				76056F71157C140D004CE04B /* Sources */,
+				76056F72157C140D004CE04B /* Frameworks */,
+				76056F73157C140D004CE04B /* Headers */,
+			);
+			buildRules = (
+			);
+			dependencies = (
+			);
+			name = natives;
+			productName = natives;
+			productReference = 76056F75157C140D004CE04B /* libnatives.a */;
+			productType = "com.apple.product-type.library.static";
+		};
+/* End PBXNativeTarget section */
+
+/* Begin PBXProject section */
+		76056F6C157C140D004CE04B /* Project object */ = {
+			isa = PBXProject;
+			attributes = {
+				LastUpgradeCheck = 0420;
+			};
+			buildConfigurationList = 76056F6F157C140D004CE04B /* Build configuration list for PBXProject "natives" */;
+			compatibilityVersion = "Xcode 3.2";
+			developmentRegion = English;
+			hasScannedForEncodings = 0;
+			knownRegions = (
+				en,
+			);
+			mainGroup = 76056F6A157C140D004CE04B;
+			productRefGroup = 76056F76157C140D004CE04B /* Products */;
+			projectDirPath = "";
+			projectRoot = "";
+			targets = (
+				76056F74157C140D004CE04B /* natives */,
+			);
+		};
+/* End PBXProject section */
+
+/* Begin PBXSourcesBuildPhase section */
+		76056F71157C140D004CE04B /* Sources */ = {
+			isa = PBXSourcesBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+				7605713F157C15EF004CE04B /* b2BroadPhase.cpp in Sources */,
+				76057141157C15EF004CE04B /* b2CollideCircle.cpp in Sources */,
+				76057142157C15EF004CE04B /* b2CollideEdge.cpp in Sources */,
+				76057143157C15EF004CE04B /* b2CollidePolygon.cpp in Sources */,
+				76057144157C15EF004CE04B /* b2Collision.cpp in Sources */,
+				76057146157C15EF004CE04B /* b2Distance.cpp in Sources */,
+				76057148157C15EF004CE04B /* b2DynamicTree.cpp in Sources */,
+				7605714A157C15EF004CE04B /* b2TimeOfImpact.cpp in Sources */,
+				7605714C157C15EF004CE04B /* b2ChainShape.cpp in Sources */,
+				7605714E157C15EF004CE04B /* b2CircleShape.cpp in Sources */,
+				76057150157C15EF004CE04B /* b2EdgeShape.cpp in Sources */,
+				76057152157C15EF004CE04B /* b2PolygonShape.cpp in Sources */,
+				76057155157C15EF004CE04B /* b2BlockAllocator.cpp in Sources */,
+				76057157157C15EF004CE04B /* b2Draw.cpp in Sources */,
+				7605715A157C15EF004CE04B /* b2Math.cpp in Sources */,
+				7605715C157C15EF004CE04B /* b2Settings.cpp in Sources */,
+				7605715E157C15EF004CE04B /* b2StackAllocator.cpp in Sources */,
+				76057160157C15EF004CE04B /* b2Timer.cpp in Sources */,
+				76057162157C15EF004CE04B /* b2Body.cpp in Sources */,
+				76057164157C15EF004CE04B /* b2ContactManager.cpp in Sources */,
+				76057166157C15EF004CE04B /* b2Fixture.cpp in Sources */,
+				76057168157C15EF004CE04B /* b2Island.cpp in Sources */,
+				7605716B157C15EF004CE04B /* b2World.cpp in Sources */,
+				7605716D157C15EF004CE04B /* b2WorldCallbacks.cpp in Sources */,
+				7605716F157C15EF004CE04B /* b2ChainAndCircleContact.cpp in Sources */,
+				76057171157C15EF004CE04B /* b2ChainAndPolygonContact.cpp in Sources */,
+				76057173157C15EF004CE04B /* b2CircleContact.cpp in Sources */,
+				76057175157C15EF004CE04B /* b2Contact.cpp in Sources */,
+				76057177157C15EF004CE04B /* b2ContactSolver.cpp in Sources */,
+				76057179157C15EF004CE04B /* b2EdgeAndCircleContact.cpp in Sources */,
+				7605717B157C15EF004CE04B /* b2EdgeAndPolygonContact.cpp in Sources */,
+				7605717D157C15EF004CE04B /* b2PolygonAndCircleContact.cpp in Sources */,
+				7605717F157C15EF004CE04B /* b2PolygonContact.cpp in Sources */,
+				76057181157C15EF004CE04B /* b2DistanceJoint.cpp in Sources */,
+				76057183157C15EF004CE04B /* b2FrictionJoint.cpp in Sources */,
+				76057185157C15EF004CE04B /* b2GearJoint.cpp in Sources */,
+				76057187157C15EF004CE04B /* b2Joint.cpp in Sources */,
+				76057189157C15EF004CE04B /* b2MouseJoint.cpp in Sources */,
+				7605718B157C15EF004CE04B /* b2PrismaticJoint.cpp in Sources */,
+				7605718D157C15EF004CE04B /* b2PulleyJoint.cpp in Sources */,
+				7605718F157C15EF004CE04B /* b2RevoluteJoint.cpp in Sources */,
+				76057191157C15EF004CE04B /* b2RopeJoint.cpp in Sources */,
+				76057193157C15EF004CE04B /* b2WeldJoint.cpp in Sources */,
+				76057195157C15EF004CE04B /* b2WheelJoint.cpp in Sources */,
+				76057197157C15EF004CE04B /* b2Rope.cpp in Sources */,
+				760571E1157C1713004CE04B /* com.badlogic.gdx.graphics.g2d.Gdx2DPixmap.cpp in Sources */,
+				760571E3157C1713004CE04B /* com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Jni.cpp in Sources */,
+				760571E5157C1713004CE04B /* com.badlogic.gdx.graphics.glutils.ETC1.cpp in Sources */,
+				760571E7157C1713004CE04B /* com.badlogic.gdx.math.Matrix4.cpp in Sources */,
+				760571E9157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Body.cpp in Sources */,
+				760571EB157C1713004CE04B /* com.badlogic.gdx.physics.box2d.ChainShape.cpp in Sources */,
+				760571ED157C1713004CE04B /* com.badlogic.gdx.physics.box2d.CircleShape.cpp in Sources */,
+				760571EF157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Contact.cpp in Sources */,
+				760571F1157C1713004CE04B /* com.badlogic.gdx.physics.box2d.ContactImpulse.cpp in Sources */,
+				760571F3157C1713004CE04B /* com.badlogic.gdx.physics.box2d.EdgeShape.cpp in Sources */,
+				760571F5157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Fixture.cpp in Sources */,
+				760571F7157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Joint.cpp in Sources */,
+				760571F9157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.DistanceJoint.cpp in Sources */,
+				760571FB157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.FrictionJoint.cpp in Sources */,
+				760571FD157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.GearJoint.cpp in Sources */,
+				760571FF157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.MouseJoint.cpp in Sources */,
+				76057201157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.PrismaticJoint.cpp in Sources */,
+				76057203157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.PulleyJoint.cpp in Sources */,
+				76057205157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.RevoluteJoint.cpp in Sources */,
+				76057207157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.RopeJoint.cpp in Sources */,
+				76057209157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.WheelJoint.cpp in Sources */,
+				7605720B157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Manifold.cpp in Sources */,
+				7605720D157C1713004CE04B /* com.badlogic.gdx.physics.box2d.PolygonShape.cpp in Sources */,
+				7605720F157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Shape.cpp in Sources */,
+				76057211157C1713004CE04B /* com.badlogic.gdx.physics.box2d.World.cpp in Sources */,
+				76057213157C1713004CE04B /* com.badlogic.gdx.utils.BufferUtils.cpp in Sources */,
+				76057215157C1713004CE04B /* etc1_utils.cpp in Sources */,
+				76057217157C1713004CE04B /* gdx2d.c in Sources */,
+				76057219157C1713004CE04B /* stb_image.c in Sources */,
+				7657C33E1582B4FF0067030A /* iosgles20.cpp in Sources */,
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+		};
+/* End PBXSourcesBuildPhase section */
+
+/* Begin XCBuildConfiguration section */
+		76056F80157C140D004CE04B /* Debug */ = {
+			isa = XCBuildConfiguration;
+			buildSettings = {
+				ALWAYS_SEARCH_USER_PATHS = NO;
+				ARCHS = "$(ARCHS_STANDARD_32_BIT)";
+				COPY_PHASE_STRIP = NO;
+				GCC_C_LANGUAGE_STANDARD = gnu99;
+				GCC_DYNAMIC_NO_PIC = NO;
+				GCC_OPTIMIZATION_LEVEL = 0;
+				GCC_PREPROCESSOR_DEFINITIONS = (
+					"DEBUG=1",
+					"$(inherited)",
+				);
+				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
+				GCC_VERSION = com.apple.compilers.llvm.clang.1_0;
+				GCC_WARN_ABOUT_MISSING_PROTOTYPES = YES;
+				GCC_WARN_ABOUT_RETURN_TYPE = YES;
+				GCC_WARN_UNUSED_VARIABLE = YES;
+				IPHONEOS_DEPLOYMENT_TARGET = 5.0;
+				SDKROOT = iphoneos;
+			};
+			name = Debug;
+		};
+		76056F81157C140D004CE04B /* Release */ = {
+			isa = XCBuildConfiguration;
+			buildSettings = {
+				ALWAYS_SEARCH_USER_PATHS = NO;
+				ARCHS = "$(ARCHS_STANDARD_32_BIT)";
+				COPY_PHASE_STRIP = YES;
+				GCC_C_LANGUAGE_STANDARD = gnu99;
+				GCC_VERSION = com.apple.compilers.llvm.clang.1_0;
+				GCC_WARN_ABOUT_MISSING_PROTOTYPES = YES;
+				GCC_WARN_ABOUT_RETURN_TYPE = YES;
+				GCC_WARN_UNUSED_VARIABLE = YES;
+				IPHONEOS_DEPLOYMENT_TARGET = 5.0;
+				SDKROOT = iphoneos;
+				VALIDATE_PRODUCT = YES;
+			};
+			name = Release;
+		};
+		76056F83157C140D004CE04B /* Debug */ = {
+			isa = XCBuildConfiguration;
+			buildSettings = {
+				DSTROOT = /tmp/natives.dst;
+				GCC_PRECOMPILE_PREFIX_HEADER = NO;
+				GCC_PREFIX_HEADER = "";
+				HEADER_SEARCH_PATHS = ../../../gdx/jni/;
+				OTHER_LDFLAGS = "-ObjC";
+				PRODUCT_NAME = "$(TARGET_NAME)";
+				SKIP_INSTALL = YES;
+			};
+			name = Debug;
+		};
+		76056F84157C140D004CE04B /* Release */ = {
+			isa = XCBuildConfiguration;
+			buildSettings = {
+				DSTROOT = /tmp/natives.dst;
+				GCC_PRECOMPILE_PREFIX_HEADER = NO;
+				GCC_PREFIX_HEADER = "";
+				HEADER_SEARCH_PATHS = ../../../gdx/jni/;
+				OTHER_LDFLAGS = "-ObjC";
+				PRODUCT_NAME = "$(TARGET_NAME)";
+				SKIP_INSTALL = YES;
+			};
+			name = Release;
+		};
+/* End XCBuildConfiguration section */
+
+/* Begin XCConfigurationList section */
+		76056F6F157C140D004CE04B /* Build configuration list for PBXProject "natives" */ = {
+			isa = XCConfigurationList;
+			buildConfigurations = (
+				76056F80157C140D004CE04B /* Debug */,
+				76056F81157C140D004CE04B /* Release */,
+			);
+			defaultConfigurationIsVisible = 0;
+			defaultConfigurationName = Release;
+		};
+		76056F82157C140D004CE04B /* Build configuration list for PBXNativeTarget "natives" */ = {
+			isa = XCConfigurationList;
+			buildConfigurations = (
+				76056F83157C140D004CE04B /* Debug */,
+				76056F84157C140D004CE04B /* Release */,
+			);
+			defaultConfigurationIsVisible = 0;
+			defaultConfigurationName = Release;
+		};
+/* End XCConfigurationList section */
+	};
+	rootObject = 76056F6C157C140D004CE04B /* Project object */;
+}
diff --git a/backends/gdx-backend-iosmonotouch/natives/natives.xcodeproj/project.xcworkspace/contents.xcworkspacedata b/backends/gdx-backend-iosmonotouch/natives/natives.xcodeproj/project.xcworkspace/contents.xcworkspacedata
new file mode 100644
index 0000000..e9a74e8
--- /dev/null
+++ b/backends/gdx-backend-iosmonotouch/natives/natives.xcodeproj/project.xcworkspace/contents.xcworkspacedata
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<Workspace
+   version = "1.0">
+   <FileRef
+      location = "self:natives.xcodeproj">
+   </FileRef>
+</Workspace>
diff --git a/backends/gdx-backend-iosmonotouch/natives/natives.xcodeproj/project.xcworkspace/xcuserdata/badlogic.xcuserdatad/UserInterfaceState.xcuserstate b/backends/gdx-backend-iosmonotouch/natives/natives.xcodeproj/project.xcworkspace/xcuserdata/badlogic.xcuserdatad/UserInterfaceState.xcuserstate
new file mode 100644
index 0000000..af7626c
Binary files /dev/null and b/backends/gdx-backend-iosmonotouch/natives/natives.xcodeproj/project.xcworkspace/xcuserdata/badlogic.xcuserdatad/UserInterfaceState.xcuserstate differ
diff --git a/backends/gdx-backend-iosmonotouch/natives/natives.xcodeproj/xcuserdata/badlogic.xcuserdatad/xcschemes/natives.xcscheme b/backends/gdx-backend-iosmonotouch/natives/natives.xcodeproj/xcuserdata/badlogic.xcuserdatad/xcschemes/natives.xcscheme
new file mode 100644
index 0000000..2dbbc0c
--- /dev/null
+++ b/backends/gdx-backend-iosmonotouch/natives/natives.xcodeproj/xcuserdata/badlogic.xcuserdatad/xcschemes/natives.xcscheme
@@ -0,0 +1,57 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<Scheme
+   version = "1.3">
+   <BuildAction
+      parallelizeBuildables = "YES"
+      buildImplicitDependencies = "YES">
+      <BuildActionEntries>
+         <BuildActionEntry
+            buildForTesting = "YES"
+            buildForRunning = "YES"
+            buildForProfiling = "YES"
+            buildForArchiving = "YES"
+            buildForAnalyzing = "YES">
+            <BuildableReference
+               BuildableIdentifier = "primary"
+               BlueprintIdentifier = "76056F74157C140D004CE04B"
+               BuildableName = "libnatives.a"
+               BlueprintName = "natives"
+               ReferencedContainer = "container:natives.xcodeproj">
+            </BuildableReference>
+         </BuildActionEntry>
+      </BuildActionEntries>
+   </BuildAction>
+   <TestAction
+      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.GDB"
+      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.GDB"
+      shouldUseLaunchSchemeArgsEnv = "YES"
+      buildConfiguration = "Debug">
+      <Testables>
+      </Testables>
+   </TestAction>
+   <LaunchAction
+      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.GDB"
+      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.GDB"
+      launchStyle = "0"
+      useCustomWorkingDirectory = "NO"
+      buildConfiguration = "Debug"
+      debugDocumentVersioning = "YES"
+      allowLocationSimulation = "YES">
+      <AdditionalOptions>
+      </AdditionalOptions>
+   </LaunchAction>
+   <ProfileAction
+      shouldUseLaunchSchemeArgsEnv = "YES"
+      savedToolIdentifier = ""
+      useCustomWorkingDirectory = "NO"
+      buildConfiguration = "Release"
+      debugDocumentVersioning = "YES">
+   </ProfileAction>
+   <AnalyzeAction
+      buildConfiguration = "Debug">
+   </AnalyzeAction>
+   <ArchiveAction
+      buildConfiguration = "Release"
+      revealArchiveInOrganizer = "YES">
+   </ArchiveAction>
+</Scheme>
diff --git a/backends/gdx-backend-iosmonotouch/natives/natives.xcodeproj/xcuserdata/badlogic.xcuserdatad/xcschemes/xcschememanagement.plist b/backends/gdx-backend-iosmonotouch/natives/natives.xcodeproj/xcuserdata/badlogic.xcuserdatad/xcschemes/xcschememanagement.plist
new file mode 100644
index 0000000..ba5921e
--- /dev/null
+++ b/backends/gdx-backend-iosmonotouch/natives/natives.xcodeproj/xcuserdata/badlogic.xcuserdatad/xcschemes/xcschememanagement.plist
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+	<key>SchemeUserState</key>
+	<dict>
+		<key>natives.xcscheme</key>
+		<dict>
+			<key>orderHint</key>
+			<integer>0</integer>
+		</dict>
+	</dict>
+	<key>SuppressBuildableAutocreation</key>
+	<dict>
+		<key>76056F74157C140D004CE04B</key>
+		<dict>
+			<key>primary</key>
+			<true/>
+		</dict>
+	</dict>
+</dict>
+</plist>
diff --git a/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSApplication.java b/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSApplication.java
index abada66..754745b 100644
--- a/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSApplication.java
+++ b/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSApplication.java
@@ -168,14 +168,6 @@ public class IOSApplication extends UIApplicationDelegate implements Application
 		Gdx.app.debug("IOSApplication", "created");
 		return true;
 	}
-	
-	/**
-	 * Return the UI view controller of IOSApplication
-	 * @return the view controller of IOSApplication
-	 */
-	public UIViewController getUIViewController(){
-		return uiViewController;
-	}
 
 	/** Returns our real display dimension based on screen orientation.
 	 * 
@@ -248,11 +240,6 @@ public class IOSApplication extends UIApplicationDelegate implements Application
 	}
 
 	@Override
-	public ApplicationListener getApplicationListener () {
-		return listener;
-	}
-	
-	@Override
 	public Graphics getGraphics () {
 		return graphics;
 	}
diff --git a/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSGraphics.java b/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSGraphics.java
index e5bb872..58e3817 100644
--- a/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSGraphics.java
+++ b/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSGraphics.java
@@ -39,6 +39,7 @@ import com.badlogic.gdx.graphics.GL10;
 import com.badlogic.gdx.graphics.GL11;
 import com.badlogic.gdx.graphics.GL20;
 import com.badlogic.gdx.graphics.GLCommon;
+import com.badlogic.gdx.graphics.GLU;
 import com.badlogic.gdx.graphics.Pixmap;
 import com.badlogic.gdx.utils.Array;
 
@@ -237,6 +238,12 @@ public class IOSGraphics extends iPhoneOSGameView implements Graphics {
 	}
 
 	@Override
+	public GLU getGLU () {
+		// FIXME implement this
+		return null;
+	}
+
+	@Override
 	public int getWidth () {
 		return width;
 	}
diff --git a/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSInput.java b/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSInput.java
index ee96f4a..28725ef 100644
--- a/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSInput.java
+++ b/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSInput.java
@@ -417,14 +417,14 @@ public class IOSInput implements Input {
 		}
 	});
 	
-	int getFreePointer() {
+	private int getFreePointer() {
 		for(int i = 0; i < touchDown.length; i++) {
 			if(touchDown[i] == 0) return i;
 		}
 		throw new GdxRuntimeException("Couldn't find free pointer id!");
 	}
 	
-	int findPointer(UITouch touch) {
+	private int findPointer(UITouch touch) {
 		int ptr = touch.get_Handle().ToInt32();
 		for(int i = 0; i < touchDown.length; i++) {
 			if(touchDown[i] == ptr) return i;
diff --git a/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSNet.java b/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSNet.java
index ba2f71e..8098edd 100755
--- a/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSNet.java
+++ b/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSNet.java
@@ -19,24 +19,33 @@ package com.badlogic.gdx.backends.ios;
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.OutputStream;
+import java.net.URL;
 import java.util.Map;
 import java.util.concurrent.ExecutorService;
 import java.util.concurrent.Executors;
 import java.util.concurrent.Future;
 
+import sun.awt.SunToolkit.InfiniteLoop;
+
 import cli.MonoTouch.Foundation.NSUrl;
 import cli.MonoTouch.UIKit.UIApplication;
+import cli.System.Uri;
 import cli.System.IO.Stream;
 import cli.System.IO.StreamReader;
+import cli.System.IO.StreamWriter;
 import cli.System.Net.HttpWebRequest;
 import cli.System.Net.HttpWebResponse;
 import cli.System.Net.WebHeaderCollection;
 import cli.System.Net.WebRequest;
+import cli.System.Net.WebResponse;
+import cli.System.Text.Encoding;
+import cli.System.Text.UTF8Encoding;
 
 import com.badlogic.gdx.Gdx;
 import com.badlogic.gdx.Net;
 import com.badlogic.gdx.StreamUtils;
-import com.badlogic.gdx.net.HttpStatus;
+import com.badlogic.gdx.Net.HttpMethods;
+import com.badlogic.gdx.Net.HttpStatus;
 import com.badlogic.gdx.net.ServerSocket;
 import com.badlogic.gdx.net.ServerSocketHints;
 import com.badlogic.gdx.net.Socket;
@@ -151,24 +160,16 @@ public class IOSNet implements Net {
 					httpWebRequest.set_Headers(webHeaderCollection);
 
 					if (method.equalsIgnoreCase(HttpMethods.POST)) {
+						Stream stream = httpWebRequest.GetRequestStream();
+
 						InputStream contentAsStream = httpRequest.getContentStream();
 						String contentAsString = httpRequest.getContent();
 
 						if (contentAsStream != null) {
-							httpWebRequest.set_ContentLength(contentAsStream.available());
-							
-							Stream stream = httpWebRequest.GetRequestStream();
 							StreamUtils.copyStream(contentAsStream, new OutputStreamNetStreamImpl(stream));
-							stream.Close();
 						} else if (contentAsString != null) {
-							byte[] data = contentAsString.getBytes();
-							httpWebRequest.set_ContentLength(data.length);
-							
-							Stream stream = httpWebRequest.GetRequestStream();
-							stream.Write(data, 0, data.length);
-							stream.Close();
+							new StreamWriter(stream).Write(contentAsString);
 						}
-						
 					}
 
 					final HttpWebResponse httpWebResponse = (HttpWebResponse)httpWebRequest.GetResponse();
diff --git a/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSSocket.java b/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSSocket.java
index cc21fa5..484dc61 100644
--- a/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSSocket.java
+++ b/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSSocket.java
@@ -52,14 +52,7 @@ public class IOSSocket implements Socket {
 				// create and connect the socket
 				// NOTE: there is no connection timeout setting available - will assume there is some sort of default!?
 				client = new TcpClient(host, port);
-				setupConnection(hints);
-				
-			   // Hack to catch socket exception
-			   // Keep compiler happy and catch the Mono SocketException explicitly.
-			   // This Mono exception is not caught by the java Exception catch.
-			    if (false) throw new cli.System.Net.Sockets.SocketException();
-			  } catch(cli.System.Net.Sockets.SocketException e) {
-			    throw new GdxRuntimeException("Error making a socket connection to " + host + ":" + port, e);
+				setupConnection(hints); 
 			}
 			catch (Exception e) {
 				throw new GdxRuntimeException("Error making a socket connection to " + host + ":" + port, e);
diff --git a/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSSound.java b/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSSound.java
index de00d22..236b5f9 100644
--- a/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSSound.java
+++ b/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSSound.java
@@ -48,7 +48,7 @@ public class IOSSound implements Sound {
 	private int playerIndex;
 	
 	// one single thread will play sounds outside the rendering low (otherwise our FPS drops!)
-	static class PlayThread extends Thread {
+	private static class PlayThread extends Thread {
 		@Override
 		public void run () {
 			Gdx.app.debug("IOSSound", "Sound player is running.");
@@ -67,7 +67,7 @@ public class IOSSound implements Sound {
 	}
 	private static PlayThread playThread = null;
 	private static int soundCounter = 0;
-	static final LinkedBlockingQueue<AVAudioPlayer> playQueue = new LinkedBlockingQueue<AVAudioPlayer>();
+	private static final LinkedBlockingQueue<AVAudioPlayer> playQueue = new LinkedBlockingQueue<AVAudioPlayer>();
 	
 	/**
 	 * Creates a new sound object. We are creating several AVAudioPlayer objects to
diff --git a/backends/gdx-backend-jglfw/.classpath b/backends/gdx-backend-jglfw/.classpath
deleted file mode 100644
index f09ca1d..0000000
--- a/backends/gdx-backend-jglfw/.classpath
+++ /dev/null
@@ -1,10 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<classpath>
-	<classpathentry excluding="**/.svn/*" kind="src" path="src"/>
-	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6"/>
-	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx"/>
-	<classpathentry exported="true" kind="lib" path="/gdx/libs/gdx-natives.jar"/>
-	<classpathentry exported="true" kind="lib" path="libs/gdx-backend-jglfw-natives.jar"/>
-	<classpathentry exported="true" kind="lib" path="libs/jglfw.jar" sourcepath="/jglfw"/>
-	<classpathentry kind="output" path="bin"/>
-</classpath>
diff --git a/backends/gdx-backend-jglfw/.project b/backends/gdx-backend-jglfw/.project
deleted file mode 100644
index 80c954e..0000000
--- a/backends/gdx-backend-jglfw/.project
+++ /dev/null
@@ -1,17 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<projectDescription>
-	<name>gdx-backend-jglfw</name>
-	<comment></comment>
-	<projects>
-	</projects>
-	<buildSpec>
-		<buildCommand>
-			<name>org.eclipse.jdt.core.javabuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-	</buildSpec>
-	<natures>
-		<nature>org.eclipse.jdt.core.javanature</nature>
-	</natures>
-</projectDescription>
diff --git a/backends/gdx-backend-jglfw/.settings/org.eclipse.jdt.core.prefs b/backends/gdx-backend-jglfw/.settings/org.eclipse.jdt.core.prefs
deleted file mode 100644
index cc51644..0000000
--- a/backends/gdx-backend-jglfw/.settings/org.eclipse.jdt.core.prefs
+++ /dev/null
@@ -1,369 +0,0 @@
-eclipse.preferences.version=1
-org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
-org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.6
-org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
-org.eclipse.jdt.core.compiler.compliance=1.6
-org.eclipse.jdt.core.compiler.debug.lineNumber=generate
-org.eclipse.jdt.core.compiler.debug.localVariable=generate
-org.eclipse.jdt.core.compiler.debug.sourceFile=generate
-org.eclipse.jdt.core.compiler.doc.comment.support=enabled
-org.eclipse.jdt.core.compiler.problem.annotationSuperInterface=warning
-org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
-org.eclipse.jdt.core.compiler.problem.autoboxing=ignore
-org.eclipse.jdt.core.compiler.problem.comparingIdentical=warning
-org.eclipse.jdt.core.compiler.problem.deadCode=ignore
-org.eclipse.jdt.core.compiler.problem.deprecation=ignore
-org.eclipse.jdt.core.compiler.problem.deprecationInDeprecatedCode=disabled
-org.eclipse.jdt.core.compiler.problem.deprecationWhenOverridingDeprecatedMethod=disabled
-org.eclipse.jdt.core.compiler.problem.discouragedReference=warning
-org.eclipse.jdt.core.compiler.problem.emptyStatement=ignore
-org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
-org.eclipse.jdt.core.compiler.problem.fallthroughCase=ignore
-org.eclipse.jdt.core.compiler.problem.fatalOptionalError=disabled
-org.eclipse.jdt.core.compiler.problem.fieldHiding=ignore
-org.eclipse.jdt.core.compiler.problem.finalParameterBound=warning
-org.eclipse.jdt.core.compiler.problem.finallyBlockNotCompletingNormally=warning
-org.eclipse.jdt.core.compiler.problem.forbiddenReference=warning
-org.eclipse.jdt.core.compiler.problem.hiddenCatchBlock=warning
-org.eclipse.jdt.core.compiler.problem.incompatibleNonInheritedInterfaceMethod=warning
-org.eclipse.jdt.core.compiler.problem.incompleteEnumSwitch=ignore
-org.eclipse.jdt.core.compiler.problem.indirectStaticAccess=ignore
-org.eclipse.jdt.core.compiler.problem.invalidJavadoc=warning
-org.eclipse.jdt.core.compiler.problem.invalidJavadocTags=enabled
-org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsDeprecatedRef=enabled
-org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsNotVisibleRef=enabled
-org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsVisibility=private
-org.eclipse.jdt.core.compiler.problem.localVariableHiding=ignore
-org.eclipse.jdt.core.compiler.problem.methodWithConstructorName=warning
-org.eclipse.jdt.core.compiler.problem.missingDeprecatedAnnotation=ignore
-org.eclipse.jdt.core.compiler.problem.missingHashCodeMethod=ignore
-org.eclipse.jdt.core.compiler.problem.missingJavadocComments=ignore
-org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsOverriding=enabled
-org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsVisibility=public
-org.eclipse.jdt.core.compiler.problem.missingJavadocTagDescription=return_tag
-org.eclipse.jdt.core.compiler.problem.missingJavadocTags=ignore
-org.eclipse.jdt.core.compiler.problem.missingJavadocTagsOverriding=enabled
-org.eclipse.jdt.core.compiler.problem.missingJavadocTagsVisibility=private
-org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotation=ignore
-org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotationForInterfaceMethodImplementation=enabled
-org.eclipse.jdt.core.compiler.problem.missingSerialVersion=ignore
-org.eclipse.jdt.core.compiler.problem.missingSynchronizedOnInheritedMethod=ignore
-org.eclipse.jdt.core.compiler.problem.noEffectAssignment=warning
-org.eclipse.jdt.core.compiler.problem.noImplicitStringConversion=warning
-org.eclipse.jdt.core.compiler.problem.nonExternalizedStringLiteral=ignore
-org.eclipse.jdt.core.compiler.problem.nullReference=warning
-org.eclipse.jdt.core.compiler.problem.overridingPackageDefaultMethod=warning
-org.eclipse.jdt.core.compiler.problem.parameterAssignment=ignore
-org.eclipse.jdt.core.compiler.problem.possibleAccidentalBooleanAssignment=warning
-org.eclipse.jdt.core.compiler.problem.potentialNullReference=ignore
-org.eclipse.jdt.core.compiler.problem.rawTypeReference=ignore
-org.eclipse.jdt.core.compiler.problem.redundantNullCheck=ignore
-org.eclipse.jdt.core.compiler.problem.redundantSuperinterface=ignore
-org.eclipse.jdt.core.compiler.problem.specialParameterHidingField=disabled
-org.eclipse.jdt.core.compiler.problem.staticAccessReceiver=warning
-org.eclipse.jdt.core.compiler.problem.suppressOptionalErrors=disabled
-org.eclipse.jdt.core.compiler.problem.suppressWarnings=enabled
-org.eclipse.jdt.core.compiler.problem.syntheticAccessEmulation=warning
-org.eclipse.jdt.core.compiler.problem.typeParameterHiding=warning
-org.eclipse.jdt.core.compiler.problem.uncheckedTypeOperation=ignore
-org.eclipse.jdt.core.compiler.problem.undocumentedEmptyBlock=ignore
-org.eclipse.jdt.core.compiler.problem.unhandledWarningToken=warning
-org.eclipse.jdt.core.compiler.problem.unnecessaryElse=ignore
-org.eclipse.jdt.core.compiler.problem.unnecessaryTypeCheck=ignore
-org.eclipse.jdt.core.compiler.problem.unqualifiedFieldAccess=ignore
-org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownException=ignore
-org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionExemptExceptionAndThrowable=enabled
-org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionIncludeDocCommentReference=enabled
-org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionWhenOverriding=enabled
-org.eclipse.jdt.core.compiler.problem.unusedImport=ignore
-org.eclipse.jdt.core.compiler.problem.unusedLabel=warning
-org.eclipse.jdt.core.compiler.problem.unusedLocal=ignore
-org.eclipse.jdt.core.compiler.problem.unusedObjectAllocation=ignore
-org.eclipse.jdt.core.compiler.problem.unusedParameter=ignore
-org.eclipse.jdt.core.compiler.problem.unusedParameterIncludeDocCommentReference=enabled
-org.eclipse.jdt.core.compiler.problem.unusedParameterWhenImplementingAbstract=enabled
-org.eclipse.jdt.core.compiler.problem.unusedParameterWhenOverridingConcrete=enabled
-org.eclipse.jdt.core.compiler.problem.unusedPrivateMember=ignore
-org.eclipse.jdt.core.compiler.problem.unusedWarningToken=warning
-org.eclipse.jdt.core.compiler.problem.varargsArgumentNeedCast=warning
-org.eclipse.jdt.core.compiler.source=1.6
-org.eclipse.jdt.core.formatter.align_type_members_on_columns=false
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression=16
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_annotation=0
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant=16
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call=16
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation=16
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression=16
-org.eclipse.jdt.core.formatter.alignment_for_assignment=0
-org.eclipse.jdt.core.formatter.alignment_for_binary_expression=16
-org.eclipse.jdt.core.formatter.alignment_for_compact_if=16
-org.eclipse.jdt.core.formatter.alignment_for_conditional_expression=80
-org.eclipse.jdt.core.formatter.alignment_for_enum_constants=0
-org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer=16
-org.eclipse.jdt.core.formatter.alignment_for_method_declaration=0
-org.eclipse.jdt.core.formatter.alignment_for_multiple_fields=16
-org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_resources_in_try=80
-org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation=16
-org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_union_type_in_multicatch=16
-org.eclipse.jdt.core.formatter.blank_lines_after_imports=1
-org.eclipse.jdt.core.formatter.blank_lines_after_package=1
-org.eclipse.jdt.core.formatter.blank_lines_before_field=0
-org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration=0
-org.eclipse.jdt.core.formatter.blank_lines_before_imports=1
-org.eclipse.jdt.core.formatter.blank_lines_before_member_type=1
-org.eclipse.jdt.core.formatter.blank_lines_before_method=1
-org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk=1
-org.eclipse.jdt.core.formatter.blank_lines_before_package=1
-org.eclipse.jdt.core.formatter.blank_lines_between_import_groups=1
-org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations=1
-org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_array_initializer=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_block=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_block_in_case=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_enum_constant=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_method_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_switch=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_type_declaration=end_of_line
-org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_block_comment=false
-org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment=false
-org.eclipse.jdt.core.formatter.comment.format_block_comments=true
-org.eclipse.jdt.core.formatter.comment.format_header=false
-org.eclipse.jdt.core.formatter.comment.format_html=true
-org.eclipse.jdt.core.formatter.comment.format_javadoc_comments=true
-org.eclipse.jdt.core.formatter.comment.format_line_comments=true
-org.eclipse.jdt.core.formatter.comment.format_source_code=true
-org.eclipse.jdt.core.formatter.comment.indent_parameter_description=true
-org.eclipse.jdt.core.formatter.comment.indent_root_tags=true
-org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags=do not insert
-org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter=do not insert
-org.eclipse.jdt.core.formatter.comment.line_length=130
-org.eclipse.jdt.core.formatter.comment.new_lines_at_block_boundaries=true
-org.eclipse.jdt.core.formatter.comment.new_lines_at_javadoc_boundaries=false
-org.eclipse.jdt.core.formatter.comment.preserve_white_space_between_code_and_line_comments=false
-org.eclipse.jdt.core.formatter.compact_else_if=true
-org.eclipse.jdt.core.formatter.continuation_indentation=1
-org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer=1
-org.eclipse.jdt.core.formatter.disabling_tag=@off
-org.eclipse.jdt.core.formatter.enabling_tag=@on
-org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line=false
-org.eclipse.jdt.core.formatter.format_line_comment_starting_on_first_column=true
-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header=true
-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header=true
-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header=true
-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header=true
-org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases=true
-org.eclipse.jdt.core.formatter.indent_empty_lines=false
-org.eclipse.jdt.core.formatter.indent_statements_compare_to_block=true
-org.eclipse.jdt.core.formatter.indent_statements_compare_to_body=true
-org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases=true
-org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch=false
-org.eclipse.jdt.core.formatter.indentation.size=4
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_field=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_local_variable=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_method=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_package=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_parameter=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_type=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_label=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing=insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_annotation_declaration=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_anonymous_type_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_block=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_constant=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_declaration=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_method_body=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter=insert
-org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator=insert
-org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_binary_operator=insert
-org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters=insert
-org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block=insert
-org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters=insert
-org.eclipse.jdt.core.formatter.insert_space_after_ellipsis=insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_try=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional=insert
-org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for=insert
-org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_try_resources=insert
-org.eclipse.jdt.core.formatter.insert_space_after_unary_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter=insert
-org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator=insert
-org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_binary_operator=insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_try=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert=insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional=insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for=insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_ellipsis=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_try=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while=insert
-org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_return=insert
-org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw=insert
-org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional=insert
-org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_semicolon=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_try_resources=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_unary_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation=do not insert
-org.eclipse.jdt.core.formatter.join_lines_in_comments=true
-org.eclipse.jdt.core.formatter.join_wrapped_lines=true
-org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line=false
-org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line=false
-org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line=true
-org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line=false
-org.eclipse.jdt.core.formatter.lineSplit=130
-org.eclipse.jdt.core.formatter.never_indent_block_comments_on_first_column=true
-org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column=true
-org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body=0
-org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve=1
-org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line=true
-org.eclipse.jdt.core.formatter.tabulation.char=tab
-org.eclipse.jdt.core.formatter.tabulation.size=3
-org.eclipse.jdt.core.formatter.use_on_off_tags=true
-org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations=false
-org.eclipse.jdt.core.formatter.wrap_before_binary_operator=true
-org.eclipse.jdt.core.formatter.wrap_before_or_operator_multicatch=true
-org.eclipse.jdt.core.formatter.wrap_outer_expressions_when_nested=true
diff --git a/backends/gdx-backend-jglfw/.settings/org.eclipse.jdt.ui.prefs b/backends/gdx-backend-jglfw/.settings/org.eclipse.jdt.ui.prefs
deleted file mode 100644
index 12ca759..0000000
--- a/backends/gdx-backend-jglfw/.settings/org.eclipse.jdt.ui.prefs
+++ /dev/null
@@ -1,3 +0,0 @@
-eclipse.preferences.version=1
-formatter_profile=_libgdx
-formatter_settings_version=12
diff --git a/backends/gdx-backend-jglfw/AUTHORS b/backends/gdx-backend-jglfw/AUTHORS
deleted file mode 100644
index e55a032..0000000
--- a/backends/gdx-backend-jglfw/AUTHORS
+++ /dev/null
@@ -1,10 +0,0 @@
-# This is the official list of the AUTHORS of libgdx
-# for copyright purposes.
-# This file is distinct from the CONTRIBUTORS files.
-# See the latter for an explanation.
-
-# Names should be added to this file as
-#	Name or Organization <email address>
-# The email address is not required for organizations.
-Mario Zechner <badlogicgames@gmail.com>
-Nathan Sweet <nathan.sweet@gmail.com> 
\ No newline at end of file
diff --git a/backends/gdx-backend-jglfw/CC-LICENSE b/backends/gdx-backend-jglfw/CC-LICENSE
deleted file mode 100644
index 7252d9c..0000000
--- a/backends/gdx-backend-jglfw/CC-LICENSE
+++ /dev/null
@@ -1,63 +0,0 @@
-License
-
-THE WORK (AS DEFINED BELOW) IS PROVIDED UNDER THE TERMS OF THIS CREATIVE COMMONS PUBLIC LICENSE ("CCPL" OR "LICENSE"). THE WORK IS PROTECTED BY COPYRIGHT AND/OR OTHER APPLICABLE LAW. ANY USE OF THE WORK OTHER THAN AS AUTHORIZED UNDER THIS LICENSE OR COPYRIGHT LAW IS PROHIBITED.
-
-BY EXERCISING ANY RIGHTS TO THE WORK PROVIDED HERE, YOU ACCEPT AND AGREE TO BE BOUND BY THE TERMS OF THIS LICENSE. TO THE EXTENT THIS LICENSE MAY BE CONSIDERED TO BE A CONTRACT, THE LICENSOR GRANTS YOU THE RIGHTS CONTAINED HERE IN CONSIDERATION OF YOUR ACCEPTANCE OF SUCH TERMS AND CONDITIONS.
-
-1. Definitions
-
-   1. "Adaptation" means a work based upon the Work, or upon the Work and other pre-existing works, such as a translation, adaptation, derivative work, arrangement of music or other alterations of a literary or artistic work, or phonogram or performance and includes cinematographic adaptations or any other form in which the Work may be recast, transformed, or adapted including in any form recognizably derived from the original, except that a work that constitutes a Collection will not be considered an Adaptation for the purpose of this License. For the avoidance of doubt, where the Work is a musical work, performance or phonogram, the synchronization of the Work in timed-relation with a moving image ("synching") will be considered an Adaptation for the purpose of this License.
-   2. "Collection" means a collection of literary or artistic works, such as encyclopedias and anthologies, or performances, phonograms or broadcasts, or other works or subject matter other than works listed in Section 1(f) below, which, by reason of the selection and arrangement of their contents, constitute intellectual creations, in which the Work is included in its entirety in unmodified form along with one or more other contributions, each constituting separate and independent works in themselves, which together are assembled into a collective whole. A work that constitutes a Collection will not be considered an Adaptation (as defined below) for the purposes of this License.
-   3. "Creative Commons Compatible License" means a license that is listed at http://creativecommons.org/compatiblelicenses that has been approved by Creative Commons as being essentially equivalent to this License, including, at a minimum, because that license: (i) contains terms that have the same purpose, meaning and effect as the License Elements of this License; and, (ii) explicitly permits the relicensing of adaptations of works made available under that license under this License or a Creative Commons jurisdiction license with the same License Elements as this License.
-   4. "Distribute" means to make available to the public the original and copies of the Work or Adaptation, as appropriate, through sale or other transfer of ownership.
-   5. "License Elements" means the following high-level license attributes as selected by Licensor and indicated in the title of this License: Attribution, ShareAlike.
-   6. "Licensor" means the individual, individuals, entity or entities that offer(s) the Work under the terms of this License.
-   7. "Original Author" means, in the case of a literary or artistic work, the individual, individuals, entity or entities who created the Work or if no individual or entity can be identified, the publisher; and in addition (i) in the case of a performance the actors, singers, musicians, dancers, and other persons who act, sing, deliver, declaim, play in, interpret or otherwise perform literary or artistic works or expressions of folklore; (ii) in the case of a phonogram the producer being the person or legal entity who first fixes the sounds of a performance or other sounds; and, (iii) in the case of broadcasts, the organization that transmits the broadcast.
-   8. "Work" means the literary and/or artistic work offered under the terms of this License including without limitation any production in the literary, scientific and artistic domain, whatever may be the mode or form of its expression including digital form, such as a book, pamphlet and other writing; a lecture, address, sermon or other work of the same nature; a dramatic or dramatico-musical work; a choreographic work or entertainment in dumb show; a musical composition with or without words; a cinematographic work to which are assimilated works expressed by a process analogous to cinematography; a work of drawing, painting, architecture, sculpture, engraving or lithography; a photographic work to which are assimilated works expressed by a process analogous to photography; a work of applied art; an illustration, map, plan, sketch or three-dimensional work relative to geography, topography, architecture or science; a performance; a broadcast; a phonogram; a compilation of data to the extent it is protected as a copyrightable work; or a work performed by a variety or circus performer to the extent it is not otherwise considered a literary or artistic work.
-   9. "You" means an individual or entity exercising rights under this License who has not previously violated the terms of this License with respect to the Work, or who has received express permission from the Licensor to exercise rights under this License despite a previous violation.
-  10. "Publicly Perform" means to perform public recitations of the Work and to communicate to the public those public recitations, by any means or process, including by wire or wireless means or public digital performances; to make available to the public Works in such a way that members of the public may access these Works from a place and at a place individually chosen by them; to perform the Work to the public by any means or process and the communication to the public of the performances of the Work, including by public digital performance; to broadcast and rebroadcast the Work by any means including signs, sounds or images.
-  11. "Reproduce" means to make copies of the Work by any means including without limitation by sound or visual recordings and the right of fixation and reproducing fixations of the Work, including storage of a protected performance or phonogram in digital form or other electronic medium.
-
-2. Fair Dealing Rights. Nothing in this License is intended to reduce, limit, or restrict any uses free from copyright or rights arising from limitations or exceptions that are provided for in connection with the copyright protection under copyright law or other applicable laws.
-
-3. License Grant. Subject to the terms and conditions of this License, Licensor hereby grants You a worldwide, royalty-free, non-exclusive, perpetual (for the duration of the applicable copyright) license to exercise the rights in the Work as stated below:
-
-   1. to Reproduce the Work, to incorporate the Work into one or more Collections, and to Reproduce the Work as incorporated in the Collections;
-   2. to create and Reproduce Adaptations provided that any such Adaptation, including any translation in any medium, takes reasonable steps to clearly label, demarcate or otherwise identify that changes were made to the original Work. For example, a translation could be marked "The original work was translated from English to Spanish," or a modification could indicate "The original work has been modified.";
-   3. to Distribute and Publicly Perform the Work including as incorporated in Collections; and,
-   4. to Distribute and Publicly Perform Adaptations.
-   5.
-
-      For the avoidance of doubt:
-         1. Non-waivable Compulsory License Schemes. In those jurisdictions in which the right to collect royalties through any statutory or compulsory licensing scheme cannot be waived, the Licensor reserves the exclusive right to collect such royalties for any exercise by You of the rights granted under this License;
-         2. Waivable Compulsory License Schemes. In those jurisdictions in which the right to collect royalties through any statutory or compulsory licensing scheme can be waived, the Licensor waives the exclusive right to collect such royalties for any exercise by You of the rights granted under this License; and,
-         3. Voluntary License Schemes. The Licensor waives the right to collect royalties, whether individually or, in the event that the Licensor is a member of a collecting society that administers voluntary licensing schemes, via that society, from any exercise by You of the rights granted under this License.
-
-The above rights may be exercised in all media and formats whether now known or hereafter devised. The above rights include the right to make such modifications as are technically necessary to exercise the rights in other media and formats. Subject to Section 8(f), all rights not expressly granted by Licensor are hereby reserved.
-
-4. Restrictions. The license granted in Section 3 above is expressly made subject to and limited by the following restrictions:
-
-   1. You may Distribute or Publicly Perform the Work only under the terms of this License. You must include a copy of, or the Uniform Resource Identifier (URI) for, this License with every copy of the Work You Distribute or Publicly Perform. You may not offer or impose any terms on the Work that restrict the terms of this License or the ability of the recipient of the Work to exercise the rights granted to that recipient under the terms of the License. You may not sublicense the Work. You must keep intact all notices that refer to this License and to the disclaimer of warranties with every copy of the Work You Distribute or Publicly Perform. When You Distribute or Publicly Perform the Work, You may not impose any effective technological measures on the Work that restrict the ability of a recipient of the Work from You to exercise the rights granted to that recipient under the terms of the License. This Section 4(a) applies to the Work as incorporated in a Collection, but this does not require the Collection apart from the Work itself to be made subject to the terms of this License. If You create a Collection, upon notice from any Licensor You must, to the extent practicable, remove from the Collection any credit as required by Section 4(c), as requested. If You create an Adaptation, upon notice from any Licensor You must, to the extent practicable, remove from the Adaptation any credit as required by Section 4(c), as requested.
-   2. You may Distribute or Publicly Perform an Adaptation only under the terms of: (i) this License; (ii) a later version of this License with the same License Elements as this License; (iii) a Creative Commons jurisdiction license (either this or a later license version) that contains the same License Elements as this License (e.g., Attribution-ShareAlike 3.0 US)); (iv) a Creative Commons Compatible License. If you license the Adaptation under one of the licenses mentioned in (iv), you must comply with the terms of that license. If you license the Adaptation under the terms of any of the licenses mentioned in (i), (ii) or (iii) (the "Applicable License"), you must comply with the terms of the Applicable License generally and the following provisions: (I) You must include a copy of, or the URI for, the Applicable License with every copy of each Adaptation You Distribute or Publicly Perform; (II) You may not offer or impose any terms on the Adaptation that restrict the terms of the Applicable License or the ability of the recipient of the Adaptation to exercise the rights granted to that recipient under the terms of the Applicable License; (III) You must keep intact all notices that refer to the Applicable License and to the disclaimer of warranties with every copy of the Work as included in the Adaptation You Distribute or Publicly Perform; (IV) when You Distribute or Publicly Perform the Adaptation, You may not impose any effective technological measures on the Adaptation that restrict the ability of a recipient of the Adaptation from You to exercise the rights granted to that recipient under the terms of the Applicable License. This Section 4(b) applies to the Adaptation as incorporated in a Collection, but this does not require the Collection apart from the Adaptation itself to be made subject to the terms of the Applicable License.
-   3. If You Distribute, or Publicly Perform the Work or any Adaptations or Collections, You must, unless a request has been made pursuant to Section 4(a), keep intact all copyright notices for the Work and provide, reasonable to the medium or means You are utilizing: (i) the name of the Original Author (or pseudonym, if applicable) if supplied, and/or if the Original Author and/or Licensor designate another party or parties (e.g., a sponsor institute, publishing entity, journal) for attribution ("Attribution Parties") in Licensor's copyright notice, terms of service or by other reasonable means, the name of such party or parties; (ii) the title of the Work if supplied; (iii) to the extent reasonably practicable, the URI, if any, that Licensor specifies to be associated with the Work, unless such URI does not refer to the copyright notice or licensing information for the Work; and (iv) , consistent with Ssection 3(b), in the case of an Adaptation, a credit identifying the use of the Work in the Adaptation (e.g., "French translation of the Work by Original Author," or "Screenplay based on original Work by Original Author"). The credit required by this Section 4(c) may be implemented in any reasonable manner; provided, however, that in the case of a Adaptation or Collection, at a minimum such credit will appear, if a credit for all contributing authors of the Adaptation or Collection appears, then as part of these credits and in a manner at least as prominent as the credits for the other contributing authors. For the avoidance of doubt, You may only use the credit required by this Section for the purpose of attribution in the manner set out above and, by exercising Your rights under this License, You may not implicitly or explicitly assert or imply any connection with, sponsorship or endorsement by the Original Author, Licensor and/or Attribution Parties, as appropriate, of You or Your use of the Work, without the separate, express prior written permission of the Original Author, Licensor and/or Attribution Parties.
-   4. Except as otherwise agreed in writing by the Licensor or as may be otherwise permitted by applicable law, if You Reproduce, Distribute or Publicly Perform the Work either by itself or as part of any Adaptations or Collections, You must not distort, mutilate, modify or take other derogatory action in relation to the Work which would be prejudicial to the Original Author's honor or reputation. Licensor agrees that in those jurisdictions (e.g. Japan), in which any exercise of the right granted in Section 3(b) of this License (the right to make Adaptations) would be deemed to be a distortion, mutilation, modification or other derogatory action prejudicial to the Original Author's honor and reputation, the Licensor will waive or not assert, as appropriate, this Section, to the fullest extent permitted by the applicable national law, to enable You to reasonably exercise Your right under Section 3(b) of this License (right to make Adaptations) but not otherwise.
-
-5. Representations, Warranties and Disclaimer
-
-UNLESS OTHERWISE MUTUALLY AGREED TO BY THE PARTIES IN WRITING, LICENSOR OFFERS THE WORK AS-IS AND MAKES NO REPRESENTATIONS OR WARRANTIES OF ANY KIND CONCERNING THE WORK, EXPRESS, IMPLIED, STATUTORY OR OTHERWISE, INCLUDING, WITHOUT LIMITATION, WARRANTIES OF TITLE, MERCHANTIBILITY, FITNESS FOR A PARTICULAR PURPOSE, NONINFRINGEMENT, OR THE ABSENCE OF LATENT OR OTHER DEFECTS, ACCURACY, OR THE PRESENCE OF ABSENCE OF ERRORS, WHETHER OR NOT DISCOVERABLE. SOME JURISDICTIONS DO NOT ALLOW THE EXCLUSION OF IMPLIED WARRANTIES, SO SUCH EXCLUSION MAY NOT APPLY TO YOU.
-
-6. Limitation on Liability. EXCEPT TO THE EXTENT REQUIRED BY APPLICABLE LAW, IN NO EVENT WILL LICENSOR BE LIABLE TO YOU ON ANY LEGAL THEORY FOR ANY SPECIAL, INCIDENTAL, CONSEQUENTIAL, PUNITIVE OR EXEMPLARY DAMAGES ARISING OUT OF THIS LICENSE OR THE USE OF THE WORK, EVEN IF LICENSOR HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
-
-7. Termination
-
-   1. This License and the rights granted hereunder will terminate automatically upon any breach by You of the terms of this License. Individuals or entities who have received Adaptations or Collections from You under this License, however, will not have their licenses terminated provided such individuals or entities remain in full compliance with those licenses. Sections 1, 2, 5, 6, 7, and 8 will survive any termination of this License.
-   2. Subject to the above terms and conditions, the license granted here is perpetual (for the duration of the applicable copyright in the Work). Notwithstanding the above, Licensor reserves the right to release the Work under different license terms or to stop distributing the Work at any time; provided, however that any such election will not serve to withdraw this License (or any other license that has been, or is required to be, granted under the terms of this License), and this License will continue in full force and effect unless terminated as stated above.
-
-8. Miscellaneous
-
-   1. Each time You Distribute or Publicly Perform the Work or a Collection, the Licensor offers to the recipient a license to the Work on the same terms and conditions as the license granted to You under this License.
-   2. Each time You Distribute or Publicly Perform an Adaptation, Licensor offers to the recipient a license to the original Work on the same terms and conditions as the license granted to You under this License.
-   3. If any provision of this License is invalid or unenforceable under applicable law, it shall not affect the validity or enforceability of the remainder of the terms of this License, and without further action by the parties to this agreement, such provision shall be reformed to the minimum extent necessary to make such provision valid and enforceable.
-   4. No term or provision of this License shall be deemed waived and no breach consented to unless such waiver or consent shall be in writing and signed by the party to be charged with such waiver or consent.
-   5. This License constitutes the entire agreement between the parties with respect to the Work licensed here. There are no understandings, agreements or representations with respect to the Work not specified here. Licensor shall not be bound by any additional provisions that may appear in any communication from You. This License may not be modified without the mutual written agreement of the Licensor and You.
-   6. The rights granted under, and the subject matter referenced, in this License were drafted utilizing the terminology of the Berne Convention for the Protection of Literary and Artistic Works (as amended on September 28, 1979), the Rome Convention of 1961, the WIPO Copyright Treaty of 1996, the WIPO Performances and Phonograms Treaty of 1996 and the Universal Copyright Convention (as revised on July 24, 1971). These rights and subject matter take effect in the relevant jurisdiction in which the License terms are sought to be enforced according to the corresponding provisions of the implementation of those treaty provisions in the applicable national law. If the standard suite of rights granted under applicable copyright law includes additional rights not granted under this License, such additional rights are deemed to be included in the License; this License is not intended to restrict the license of any rights under applicable law.
diff --git a/backends/gdx-backend-jglfw/CONTRIBUTORS b/backends/gdx-backend-jglfw/CONTRIBUTORS
deleted file mode 100644
index 31f9947..0000000
--- a/backends/gdx-backend-jglfw/CONTRIBUTORS
+++ /dev/null
@@ -1,13 +0,0 @@
-# This is the official list of people who can contribute
-# (and who have contributed) code to the libgdx project
-# repository.
-# The AUTHORS file lists the copyright holders; this file
-# lists people. Contributors must sign the CLA to grant
-# the AUTHORS copyright within the terms of the Apache 2 license.
-#
-Tony Wang manifaust@gmail.com, 
-Christoph Widulle christoph.widulle@googlemail.com, 
-Dave Clayton davedx@gmail.com, 
-David Fraska dfraska@gmail.com, 
-Moritz Post moritzpost@gmail.com, 
-Eric Spitz eric.spitz2000@gmail.com
\ No newline at end of file
diff --git a/backends/gdx-backend-jglfw/LICENSE b/backends/gdx-backend-jglfw/LICENSE
deleted file mode 100644
index 4947287..0000000
--- a/backends/gdx-backend-jglfw/LICENSE
+++ /dev/null
@@ -1,177 +0,0 @@
-
-                                 Apache License
-                           Version 2.0, January 2004
-                        http://www.apache.org/licenses/
-
-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
-
-   1. Definitions.
-
-      "License" shall mean the terms and conditions for use, reproduction,
-      and distribution as defined by Sections 1 through 9 of this document.
-
-      "Licensor" shall mean the copyright owner or entity authorized by
-      the copyright owner that is granting the License.
-
-      "Legal Entity" shall mean the union of the acting entity and all
-      other entities that control, are controlled by, or are under common
-      control with that entity. For the purposes of this definition,
-      "control" means (i) the power, direct or indirect, to cause the
-      direction or management of such entity, whether by contract or
-      otherwise, or (ii) ownership of fifty percent (50%) or more of the
-      outstanding shares, or (iii) beneficial ownership of such entity.
-
-      "You" (or "Your") shall mean an individual or Legal Entity
-      exercising permissions granted by this License.
-
-      "Source" form shall mean the preferred form for making modifications,
-      including but not limited to software source code, documentation
-      source, and configuration files.
-
-      "Object" form shall mean any form resulting from mechanical
-      transformation or translation of a Source form, including but
-      not limited to compiled object code, generated documentation,
-      and conversions to other media types.
-
-      "Work" shall mean the work of authorship, whether in Source or
-      Object form, made available under the License, as indicated by a
-      copyright notice that is included in or attached to the work
-      (an example is provided in the Appendix below).
-
-      "Derivative Works" shall mean any work, whether in Source or Object
-      form, that is based on (or derived from) the Work and for which the
-      editorial revisions, annotations, elaborations, or other modifications
-      represent, as a whole, an original work of authorship. For the purposes
-      of this License, Derivative Works shall not include works that remain
-      separable from, or merely link (or bind by name) to the interfaces of,
-      the Work and Derivative Works thereof.
-
-      "Contribution" shall mean any work of authorship, including
-      the original version of the Work and any modifications or additions
-      to that Work or Derivative Works thereof, that is intentionally
-      submitted to Licensor for inclusion in the Work by the copyright owner
-      or by an individual or Legal Entity authorized to submit on behalf of
-      the copyright owner. For the purposes of this definition, "submitted"
-      means any form of electronic, verbal, or written communication sent
-      to the Licensor or its representatives, including but not limited to
-      communication on electronic mailing lists, source code control systems,
-      and issue tracking systems that are managed by, or on behalf of, the
-      Licensor for the purpose of discussing and improving the Work, but
-      excluding communication that is conspicuously marked or otherwise
-      designated in writing by the copyright owner as "Not a Contribution."
-
-      "Contributor" shall mean Licensor and any individual or Legal Entity
-      on behalf of whom a Contribution has been received by Licensor and
-      subsequently incorporated within the Work.
-
-   2. Grant of Copyright License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      copyright license to reproduce, prepare Derivative Works of,
-      publicly display, publicly perform, sublicense, and distribute the
-      Work and such Derivative Works in Source or Object form.
-
-   3. Grant of Patent License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      (except as stated in this section) patent license to make, have made,
-      use, offer to sell, sell, import, and otherwise transfer the Work,
-      where such license applies only to those patent claims licensable
-      by such Contributor that are necessarily infringed by their
-      Contribution(s) alone or by combination of their Contribution(s)
-      with the Work to which such Contribution(s) was submitted. If You
-      institute patent litigation against any entity (including a
-      cross-claim or counterclaim in a lawsuit) alleging that the Work
-      or a Contribution incorporated within the Work constitutes direct
-      or contributory patent infringement, then any patent licenses
-      granted to You under this License for that Work shall terminate
-      as of the date such litigation is filed.
-
-   4. Redistribution. You may reproduce and distribute copies of the
-      Work or Derivative Works thereof in any medium, with or without
-      modifications, and in Source or Object form, provided that You
-      meet the following conditions:
-
-      (a) You must give any other recipients of the Work or
-          Derivative Works a copy of this License; and
-
-      (b) You must cause any modified files to carry prominent notices
-          stating that You changed the files; and
-
-      (c) You must retain, in the Source form of any Derivative Works
-          that You distribute, all copyright, patent, trademark, and
-          attribution notices from the Source form of the Work,
-          excluding those notices that do not pertain to any part of
-          the Derivative Works; and
-
-      (d) If the Work includes a "NOTICE" text file as part of its
-          distribution, then any Derivative Works that You distribute must
-          include a readable copy of the attribution notices contained
-          within such NOTICE file, excluding those notices that do not
-          pertain to any part of the Derivative Works, in at least one
-          of the following places: within a NOTICE text file distributed
-          as part of the Derivative Works; within the Source form or
-          documentation, if provided along with the Derivative Works; or,
-          within a display generated by the Derivative Works, if and
-          wherever such third-party notices normally appear. The contents
-          of the NOTICE file are for informational purposes only and
-          do not modify the License. You may add Your own attribution
-          notices within Derivative Works that You distribute, alongside
-          or as an addendum to the NOTICE text from the Work, provided
-          that such additional attribution notices cannot be construed
-          as modifying the License.
-
-      You may add Your own copyright statement to Your modifications and
-      may provide additional or different license terms and conditions
-      for use, reproduction, or distribution of Your modifications, or
-      for any such Derivative Works as a whole, provided Your use,
-      reproduction, and distribution of the Work otherwise complies with
-      the conditions stated in this License.
-
-   5. Submission of Contributions. Unless You explicitly state otherwise,
-      any Contribution intentionally submitted for inclusion in the Work
-      by You to the Licensor shall be under the terms and conditions of
-      this License, without any additional terms or conditions.
-      Notwithstanding the above, nothing herein shall supersede or modify
-      the terms of any separate license agreement you may have executed
-      with Licensor regarding such Contributions.
-
-   6. Trademarks. This License does not grant permission to use the trade
-      names, trademarks, service marks, or product names of the Licensor,
-      except as required for reasonable and customary use in describing the
-      origin of the Work and reproducing the content of the NOTICE file.
-
-   7. Disclaimer of Warranty. Unless required by applicable law or
-      agreed to in writing, Licensor provides the Work (and each
-      Contributor provides its Contributions) on an "AS IS" BASIS,
-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
-      implied, including, without limitation, any warranties or conditions
-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
-      PARTICULAR PURPOSE. You are solely responsible for determining the
-      appropriateness of using or redistributing the Work and assume any
-      risks associated with Your exercise of permissions under this License.
-
-   8. Limitation of Liability. In no event and under no legal theory,
-      whether in tort (including negligence), contract, or otherwise,
-      unless required by applicable law (such as deliberate and grossly
-      negligent acts) or agreed to in writing, shall any Contributor be
-      liable to You for damages, including any direct, indirect, special,
-      incidental, or consequential damages of any character arising as a
-      result of this License or out of the use or inability to use the
-      Work (including but not limited to damages for loss of goodwill,
-      work stoppage, computer failure or malfunction, or any and all
-      other commercial damages or losses), even if such Contributor
-      has been advised of the possibility of such damages.
-
-   9. Accepting Warranty or Additional Liability. While redistributing
-      the Work or Derivative Works thereof, You may choose to offer,
-      and charge a fee for, acceptance of support, warranty, indemnity,
-      or other liability obligations and/or rights consistent with this
-      License. However, in accepting such obligations, You may act only
-      on Your own behalf and on Your sole responsibility, not on behalf
-      of any other Contributor, and only if You agree to indemnify,
-      defend, and hold each Contributor harmless for any liability
-      incurred by, or claims asserted against, such Contributor by reason
-      of your accepting any such warranty or additional liability.
-
-   END OF TERMS AND CONDITIONS
\ No newline at end of file
diff --git a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwApplication.java b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwApplication.java
deleted file mode 100644
index cd7cdb4..0000000
--- a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwApplication.java
+++ /dev/null
@@ -1,385 +0,0 @@
-
-package com.badlogic.gdx.backends.jglfw;
-
-import static com.badlogic.gdx.utils.SharedLibraryLoader.*;
-import static com.badlogic.jglfw.Glfw.*;
-
-import com.badlogic.gdx.Application;
-import com.badlogic.gdx.ApplicationListener;
-import com.badlogic.gdx.Audio;
-import com.badlogic.gdx.Gdx;
-import com.badlogic.gdx.LifecycleListener;
-import com.badlogic.gdx.Preferences;
-import com.badlogic.gdx.utils.Array;
-import com.badlogic.gdx.utils.Clipboard;
-import com.badlogic.gdx.utils.GdxNativesLoader;
-import com.badlogic.gdx.utils.GdxRuntimeException;
-import com.badlogic.jglfw.GlfwCallbackAdapter;
-import com.badlogic.jglfw.GlfwCallbacks;
-
-import java.awt.EventQueue;
-import java.util.HashMap;
-import java.util.Map;
-
-/** An OpenGL surface fullscreen or in a lightweight window using GLFW.
- * @author mzechner
- * @author Nathan Sweet */
-public class JglfwApplication implements Application {
-	JglfwGraphics graphics;
-	JglfwFiles files;
-	JglfwInput input;
-	JglfwNet net;
-	final ApplicationListener listener;
-	private final Array<Runnable> runnables = new Array();
-	private final Array<Runnable> executedRunnables = new Array();
-	private final Array<LifecycleListener> lifecycleListeners = new Array();
-	private final Map<String, Preferences> preferences = new HashMap();
-	private final JglfwClipboard clipboard = new JglfwClipboard();
-	private final GlfwCallbacks callbacks = new GlfwCallbacks();
-	private int logLevel = LOG_INFO;
-	volatile boolean running = true;
-	boolean isPaused;
-
-	private boolean forceExit, runOnEDT;
-	private int foregroundFPS, backgroundFPS, hiddenFPS;
-
-	public JglfwApplication (ApplicationListener listener) {
-		this(listener, listener.getClass().getSimpleName(), 640, 480, false);
-	}
-
-	public JglfwApplication (ApplicationListener listener, String title, int width, int height, boolean useGL2) {
-		this(listener, createConfig(title, width, height, useGL2));
-	}
-
-	static private JglfwApplicationConfiguration createConfig (String title, int width, int height, boolean useGL2) {
-		JglfwApplicationConfiguration config = new JglfwApplicationConfiguration();
-		config.title = title;
-		config.width = width;
-		config.height = height;
-		config.useGL20 = useGL2;
-		return config;
-	}
-
-	public JglfwApplication (final ApplicationListener listener, final JglfwApplicationConfiguration config) {
-		if (listener == null) throw new IllegalArgumentException("listener cannot be null.");
-		if (config == null) throw new IllegalArgumentException("config cannot be null.");
-
-		this.listener = listener;
-
-		Runnable runnable = new Runnable() {
-			public void run () {
-				try {
-					initialize(config);
-				} catch (Throwable ex) {
-					exception(ex);
-				}
-			}
-		};
-		if (config.runOnEDT)
-			EventQueue.invokeLater(runnable);
-		else
-			new Thread(runnable, "MainLoop").start();
-	}
-
-	/** Called when an uncaught exception happens in the game loop. Default implementation prints the exception and calls
-	 * System.exit(0). */
-	protected void exception (Throwable ex) {
-		ex.printStackTrace();
-		System.exit(0);
-	}
-
-	void initialize (JglfwApplicationConfiguration config) {
-		forceExit = config.forceExit;
-		runOnEDT = config.runOnEDT;
-		foregroundFPS = config.foregroundFPS;
-		backgroundFPS = config.backgroundFPS;
-		hiddenFPS = config.hiddenFPS;
-
-		final Thread glThread = Thread.currentThread();
-
-		GdxNativesLoader.load();
-
-		boolean inputCallbacksOnAppKitThread = isMac;
-		if (inputCallbacksOnAppKitThread) java.awt.Toolkit.getDefaultToolkit(); // Ensure AWT is initialized before GLFW.
-
-		if (!glfwInit()) throw new GdxRuntimeException("Unable to initialize GLFW.");
-
-		Gdx.app = this;
-		Gdx.graphics = graphics = new JglfwGraphics(config);
-		Gdx.files = files = new JglfwFiles();
-		Gdx.input = input = new JglfwInput(this, inputCallbacksOnAppKitThread);
-		Gdx.net = net = new JglfwNet();
-
-		callbacks.add(new GlfwCallbackAdapter() {
-			public void windowSize (long window, final int width, final int height) {
-				Runnable runnable = new Runnable() {
-					public void run () {
-						graphics.sizeChanged(width, height);
-					}
-				};
-				if (Thread.currentThread() != glThread)
-					postRunnable(runnable);
-				else
-					runnable.run();
-			}
-
-			public void windowPos (long window, final int x, final int y) {
-				Runnable runnable = new Runnable() {
-					public void run () {
-						graphics.positionChanged(x, y);
-					}
-				};
-				if (Thread.currentThread() != glThread)
-					postRunnable(runnable);
-				else
-					runnable.run();
-			}
-
-			public void windowRefresh (long window) {
-				if (Thread.currentThread() == glThread) render(System.nanoTime());
-			}
-
-			public void windowFocus (long window, boolean focused) {
-				graphics.foreground = focused;
-			}
-
-			public void windowIconify (long window, boolean iconified) {
-				graphics.minimized = iconified;
-			}
-
-			public void error (int error, String description) {
-				throw new GdxRuntimeException("GLFW error " + error + ": " + description);
-			}
-		});
-		glfwSetCallback(callbacks);
-
-		start();
-	}
-
-	/** Starts the game loop after the application internals have been initialized. */
-	protected void start () {
-		listener.create();
-		listener.resize(graphics.getWidth(), graphics.getHeight());
-
-		if (runOnEDT) {
-			new Runnable() {
-				public void run () {
-					frame();
-					if (running)
-						EventQueue.invokeLater(this);
-					else
-						end();
-				}
-			}.run();
-		} else {
-			while (running)
-				frame();
-			end();
-		}
-	}
-
-	/** Handles posted runnables, input, and rendering for each frame. */
-	protected void frame () {
-		if (glfwWindowShouldClose(graphics.window)) {
-			exit();
-			return;
-		}
-
-		synchronized (runnables) {
-			executedRunnables.clear();
-			executedRunnables.addAll(runnables);
-			runnables.clear();
-		}
-		if (executedRunnables.size > 0) {
-			for (int i = 0; i < executedRunnables.size; i++)
-				executedRunnables.get(i).run();
-			if (!running) return;
-			graphics.requestRendering();
-		}
-
-		input.update();
-
-		long frameStartTime = System.nanoTime();
-		int targetFPS = (graphics.isHidden() || graphics.isMinimized()) ? hiddenFPS : //
-			(graphics.isForeground() ? foregroundFPS : backgroundFPS);
-
-		if (targetFPS == -1) { // Rendering is paused.
-			if (!isPaused) listener.pause();
-			isPaused = true;
-		} else {
-			if (isPaused) listener.resume();
-			isPaused = false;
-			if (graphics.shouldRender()) render(frameStartTime);
-		}
-
-		if (targetFPS != 0)
-			sleep(targetFPS == -1 ? 100 : (int)(1000f / targetFPS - (System.nanoTime() - frameStartTime) / 1000000f));
-	}
-
-	void sleep (int millis) {
-		try {
-			if (millis > 0) Thread.sleep(millis);
-		} catch (InterruptedException ignored) {
-		}
-	}
-
-	void render (long time) {
-		graphics.frameStart(time);
-		listener.render();
-		glfwSwapBuffers(graphics.window);
-	}
-
-	/** Called when the game loop has exited. */
-	protected void end () {
-		synchronized (lifecycleListeners) {
-			for (LifecycleListener listener : lifecycleListeners) {
-				listener.pause();
-				listener.dispose();
-			}
-		}
-		listener.pause();
-		listener.dispose();
-		glfwTerminate();
-		if (forceExit) System.exit(-1);
-	}
-
-	public ApplicationListener getApplicationListener () {
-		return listener;
-	}
-
-	public JglfwGraphics getGraphics () {
-		return graphics;
-	}
-
-	public Audio getAudio () {
-		return null;
-	}
-
-	public JglfwInput getInput () {
-		return input;
-	}
-
-	public JglfwFiles getFiles () {
-		return files;
-	}
-
-	public JglfwNet getNet () {
-		return net;
-	}
-
-	public ApplicationType getType () {
-		return ApplicationType.Desktop;
-	}
-
-	public int getVersion () {
-		return 0;
-	}
-
-	public long getJavaHeap () {
-		return Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
-	}
-
-	public long getNativeHeap () {
-		return getJavaHeap();
-	}
-
-	public Preferences getPreferences (String name) {
-		if (preferences.containsKey(name))
-			return preferences.get(name);
-		else {
-			Preferences prefs = new JglfwPreferences(name);
-			preferences.put(name, prefs);
-			return prefs;
-		}
-	}
-
-	public Clipboard getClipboard () {
-		return clipboard;
-	}
-
-	public void postRunnable (Runnable runnable) {
-		synchronized (runnables) {
-			runnables.add(runnable);
-			graphics.requestRendering();
-		}
-	}
-
-	public boolean isPaused () {
-		return isPaused;
-	}
-
-	public void setForegroundFPS (int foregroundFPS) {
-		this.foregroundFPS = foregroundFPS;
-	}
-
-	public void setBackgroundFPS (int backgroundFPS) {
-		this.backgroundFPS = backgroundFPS;
-	}
-
-	public void setHiddenFPS (int hiddenFPS) {
-		this.hiddenFPS = hiddenFPS;
-	}
-
-	public void exit () {
-		running = false;
-	}
-
-	public void setLogLevel (int logLevel) {
-		this.logLevel = logLevel;
-	}
-
-	public void debug (String tag, String message) {
-		if (logLevel >= LOG_DEBUG) {
-			System.out.println(tag + ": " + message);
-		}
-	}
-
-	public void debug (String tag, String message, Throwable exception) {
-		if (logLevel >= LOG_DEBUG) {
-			System.out.println(tag + ": " + message);
-			exception.printStackTrace(System.out);
-		}
-	}
-
-	public void log (String tag, String message) {
-		if (logLevel >= LOG_INFO) {
-			System.out.println(tag + ": " + message);
-		}
-	}
-
-	public void log (String tag, String message, Exception exception) {
-		if (logLevel >= LOG_INFO) {
-			System.out.println(tag + ": " + message);
-			exception.printStackTrace(System.out);
-		}
-	}
-
-	public void error (String tag, String message) {
-		if (logLevel >= LOG_ERROR) {
-			System.err.println(tag + ": " + message);
-		}
-	}
-
-	public void error (String tag, String message, Throwable exception) {
-		if (logLevel >= LOG_ERROR) {
-			System.err.println(tag + ": " + message);
-			exception.printStackTrace(System.err);
-		}
-	}
-
-	public void addLifecycleListener (LifecycleListener listener) {
-		synchronized (lifecycleListeners) {
-			lifecycleListeners.add(listener);
-		}
-	}
-
-	public void removeLifecycleListener (LifecycleListener listener) {
-		synchronized (lifecycleListeners) {
-			lifecycleListeners.removeValue(listener, true);
-		}
-	}
-
-	public GlfwCallbacks getCallbacks () {
-		return callbacks;
-	}
-}
diff --git a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwApplicationConfiguration.java b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwApplicationConfiguration.java
deleted file mode 100644
index 9e6c665..0000000
--- a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwApplicationConfiguration.java
+++ /dev/null
@@ -1,80 +0,0 @@
-
-package com.badlogic.gdx.backends.jglfw;
-
-import com.badlogic.gdx.Gdx;
-import com.badlogic.gdx.Graphics.DisplayMode;
-import com.badlogic.gdx.backends.jglfw.JglfwGraphics.JglfwDisplayMode;
-import com.badlogic.gdx.graphics.Color;
-import com.badlogic.gdx.utils.Array;
-
-import java.awt.GraphicsDevice;
-import java.awt.GraphicsEnvironment;
-
-/** @author Nathan Sweet */
-public class JglfwApplicationConfiguration {
-	/** Title of application window. **/
-	public String title = "";
-	/** Initial width of the application window. **/
-	public int width = 640;
-	/** Initial height of the application window. **/
-	public int height = 480;
-	/** Intial x coordinate of the application window, -1 for center. **/
-	public int x = -1;
-	/** Intial x coordinate of the application window, -1 for center. **/
-	public int y = -1;
-	/** True to start in fullscreen. **/
-	public boolean fullscreen;
-	/** Monitor index to use for fullscreen. **/
-	public int fullscreenMonitorIndex = -1;
-	/** Number of bits per color channel. **/
-	public int r = 8, g = 8, b = 8, a = 8;
-	/** Number of bits for the depth buffer. **/
-	public int depth = 16;
-	/** Number of bits for the stencil buffer. **/
-	public int stencil = 0;
-	/** Number of samples for MSAA **/
-	public int samples = 0;
-	/** True to enable vsync. **/
-	public boolean vSync = true;
-	/** True if the window is resizable. **/
-	public boolean resizable = true;
-	/** True to attempt to use OpenGL ES 2.0. Note {@link Gdx#gl20} may be null even when this is true. **/
-	public boolean useGL20;
-	/** True to call System.exit() when the main loop is complete. **/
-	public boolean forceExit = true;
-	/** True to have a title and border around the window. **/
-	public boolean undecorated;
-	/** Causes the main loop to run on the EDT instead of a new thread, for easier interoperability with AWT/Swing. Broken on Linux. **/
-	public boolean runOnEDT;
-	/** The color to clear the window immediately after creation. **/
-	public Color initialBackgroundColor = Color.BLACK;
-	/** True to hide the window when it is created. The window must be shown with {@link JglfwGraphics#show()}. **/
-	public boolean hidden;
-	/** Target framerate when the window is in the foreground. The CPU sleeps as needed. Use 0 to never sleep. **/
-	public int foregroundFPS;
-	/** Target framerate when the window is in the background. The CPU sleeps as needed. Use 0 to never sleep, -1 to not render. **/
-	public int backgroundFPS;
-	/** Target framerate when the window is hidden or minimized. The CPU sleeps as needed. Use 0 to never sleep, -1 to not render. **/
-	public int hiddenFPS = -1;
-
-	static public DisplayMode[] getDisplayModes () {
-		GraphicsDevice device = GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice();
-		java.awt.DisplayMode desktopMode = device.getDisplayMode();
-		java.awt.DisplayMode[] displayModes = device.getDisplayModes();
-		Array<DisplayMode> modes = new Array();
-		outer:
-		for (java.awt.DisplayMode mode : displayModes) {
-			for (DisplayMode other : modes)
-				if (other.width == mode.getWidth() && other.height == mode.getHeight() && other.bitsPerPixel == mode.getBitDepth())
-					continue outer; // Duplicate.
-			if (mode.getBitDepth() != desktopMode.getBitDepth()) continue;
-			modes.add(new JglfwDisplayMode(mode.getWidth(), mode.getHeight(), mode.getRefreshRate(), mode.getBitDepth()));
-		}
-		return modes.toArray(DisplayMode.class);
-	}
-
-	static public DisplayMode getDesktopDisplayMode () {
-		java.awt.DisplayMode mode = GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice().getDisplayMode();
-		return new JglfwDisplayMode(mode.getWidth(), mode.getHeight(), mode.getRefreshRate(), mode.getBitDepth());
-	}
-}
diff --git a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwClipboard.java b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwClipboard.java
deleted file mode 100644
index 21370be..0000000
--- a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwClipboard.java
+++ /dev/null
@@ -1,49 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-
-package com.badlogic.gdx.backends.jglfw;
-
-import com.badlogic.gdx.utils.Clipboard;
-
-import java.awt.Toolkit;
-import java.awt.datatransfer.ClipboardOwner;
-import java.awt.datatransfer.DataFlavor;
-import java.awt.datatransfer.StringSelection;
-import java.awt.datatransfer.Transferable;
-
-/** Clipboard implementation for desktop that uses the system clipboard via the default AWT {@link Toolkit}.
- * @author mzechner */
-public class JglfwClipboard implements Clipboard, ClipboardOwner {
-	public String getContents () {
-		java.awt.datatransfer.Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
-		Transferable contents = clipboard.getContents(null);
-		if (contents != null && contents.isDataFlavorSupported(DataFlavor.stringFlavor)) {
-			try {
-				return (String)contents.getTransferData(DataFlavor.stringFlavor);
-			} catch (Exception ignored) {
-			}
-		}
-		return "";
-	}
-
-	public void setContents (String content) {
-		java.awt.datatransfer.Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
-		clipboard.setContents(new StringSelection(content), this);
-	}
-
-	public void lostOwnership (java.awt.datatransfer.Clipboard clipboard, Transferable transferable) {
-	}
-}
diff --git a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwFileHandle.java b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwFileHandle.java
deleted file mode 100644
index 0ae4c53..0000000
--- a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwFileHandle.java
+++ /dev/null
@@ -1,61 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-
-package com.badlogic.gdx.backends.jglfw;
-
-import java.io.File;
-
-import com.badlogic.gdx.Files.FileType;
-import com.badlogic.gdx.files.FileHandle;
-import com.badlogic.gdx.utils.GdxRuntimeException;
-
-/** @author mzechner
- * @author Nathan Sweet */
-public final class JglfwFileHandle extends FileHandle {
-	public JglfwFileHandle (String fileName, FileType type) {
-		super(fileName, type);
-	}
-
-	public JglfwFileHandle (File file, FileType type) {
-		super(file, type);
-	}
-
-	public FileHandle child (String name) {
-		if (file.getPath().length() == 0) return new JglfwFileHandle(new File(name), type);
-		return new JglfwFileHandle(new File(file, name), type);
-	}
-
-	public FileHandle sibling (String name) {
-		if (file.getPath().length() == 0) throw new GdxRuntimeException("Cannot get the sibling of the root.");
-		return new JglfwFileHandle(new File(file.getParent(), name), type);
-	}
-
-	public FileHandle parent () {
-		File parent = file.getParentFile();
-		if (parent == null) {
-			if (type == FileType.Absolute)
-				parent = new File("/");
-			else
-				parent = new File("");
-		}
-		return new JglfwFileHandle(parent, type);
-	}
-
-	public File file () {
-		if (type == FileType.External) return new File(JglfwFiles.externalPath, file.getPath());
-		return file;
-	}
-}
diff --git a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwFiles.java b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwFiles.java
deleted file mode 100644
index 4fd59cc..0000000
--- a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwFiles.java
+++ /dev/null
@@ -1,66 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-
-package com.badlogic.gdx.backends.jglfw;
-
-import com.badlogic.gdx.Files;
-import com.badlogic.gdx.files.FileHandle;
-
-/** @author mzechner
- * @author Nathan Sweet */
-public final class JglfwFiles implements Files {
-	static public final String externalPath = System.getProperty("user.home") + "/";
-
-	public FileHandle getFileHandle (String fileName, FileType type) {
-		return new JglfwFileHandle(fileName, type);
-	}
-
-	public FileHandle classpath (String path) {
-		return new JglfwFileHandle(path, FileType.Classpath);
-	}
-
-	public FileHandle internal (String path) {
-		return new JglfwFileHandle(path, FileType.Internal);
-	}
-
-	public FileHandle external (String path) {
-		return new JglfwFileHandle(path, FileType.External);
-	}
-
-	public FileHandle absolute (String path) {
-		return new JglfwFileHandle(path, FileType.Absolute);
-	}
-
-	public FileHandle local (String path) {
-		return new JglfwFileHandle(path, FileType.Local);
-	}
-
-	public String getExternalStoragePath () {
-		return externalPath;
-	}
-
-	public boolean isExternalStorageAvailable () {
-		return true;
-	}
-
-	public String getLocalStoragePath () {
-		return "";
-	}
-
-	public boolean isLocalStorageAvailable () {
-		return true;
-	}
-}
diff --git a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java
deleted file mode 100644
index 02bc1c7..0000000
--- a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java
+++ /dev/null
@@ -1,374 +0,0 @@
-
-package com.badlogic.gdx.backends.jglfw;
-
-import static com.badlogic.gdx.backends.jglfw.JglfwUtil.*;
-import static com.badlogic.jglfw.utils.Memory.*;
-
-import com.badlogic.gdx.graphics.GL10;
-import com.badlogic.jglfw.gl.GL;
-
-import java.nio.Buffer;
-import java.nio.FloatBuffer;
-import java.nio.IntBuffer;
-
-public class JglfwGL10 implements GL10 {
-	public void glActiveTexture (int texture) {
-		GL.glActiveTexture(texture);
-	}
-
-	public void glBindTexture (int target, int texture) {
-		GL.glBindTexture(target, texture);
-	}
-
-	public void glBlendFunc (int sfactor, int dfactor) {
-		GL.glBlendFunc(sfactor, dfactor);
-	}
-
-	public void glClear (int mask) {
-		GL.glClear(mask);
-	}
-
-	public void glClearColor (float red, float green, float blue, float alpha) {
-		GL.glClearColor(red, green, blue, alpha);
-	}
-
-	public void glClearDepthf (float depth) {
-		GL.glClearDepthf(depth);
-	}
-
-	public void glClearStencil (int s) {
-		GL.glClearStencil(s);
-	}
-
-	public void glColorMask (boolean red, boolean green, boolean blue, boolean alpha) {
-		GL.glColorMask(red, green, blue, alpha);
-	}
-
-	public void glCompressedTexImage2D (int target, int level, int internalformat, int width, int height, int border,
-		int imageSize, Buffer data) {
-		GL.glCompressedTexImage2D(target, level, internalformat, width, height, border, imageSize, data, getPosition(data));
-	}
-
-	public void glCompressedTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format,
-		int imageSize, Buffer data) {
-		GL.glCompressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, imageSize, data, getPosition(data));
-	}
-
-	public void glCopyTexImage2D (int target, int level, int internalformat, int x, int y, int width, int height, int border) {
-		GL.glCopyTexImage2D(target, level, internalformat, x, y, width, height, border);
-	}
-
-	public void glCopyTexSubImage2D (int target, int level, int xoffset, int yoffset, int x, int y, int width, int height) {
-		GL.glCopyTexSubImage2D(target, level, xoffset, yoffset, x, y, width, height);
-	}
-
-	public void glCullFace (int mode) {
-		GL.glCullFace(mode);
-	}
-
-	public void glDeleteTextures (int n, IntBuffer textures) {
-		GL.glDeleteTextures(n, textures, getPosition(textures));
-	}
-
-	public void glDepthFunc (int func) {
-		GL.glDepthFunc(func);
-	}
-
-	public void glDepthMask (boolean flag) {
-		GL.glDepthMask(flag);
-	}
-
-	public void glDepthRangef (float zNear, float zFar) {
-		GL.glDepthRangef(zNear, zFar);
-	}
-
-	public void glDisable (int cap) {
-		GL.glDisable(cap);
-	}
-
-	public void glDrawArrays (int mode, int first, int count) {
-		GL.glDrawArrays(mode, first, count);
-	}
-
-	public void glDrawElements (int mode, int count, int type, Buffer indices) {
-		GL.glDrawElements(mode, count, type, indices, getPosition(indices));
-	}
-
-	public void glEnable (int cap) {
-		GL.glEnable(cap);
-	}
-
-	public void glFinish () {
-		GL.glFinish();
-	}
-
-	public void glFlush () {
-		GL.glFlush();
-	}
-
-	public void glFrontFace (int mode) {
-		GL.glFrontFace(mode);
-	}
-
-	public void glGenTextures (int n, IntBuffer textures) {
-		GL.glGenTextures(n, textures, getPosition(textures));
-	}
-
-	public int glGetError () {
-		return GL.glGetError();
-	}
-
-	public void glGetIntegerv (int pname, IntBuffer params) {
-		GL.glGetIntegerv(pname, params, getPosition(params));
-	}
-
-	public String glGetString (int name) {
-		return GL.glGetString(name);
-	}
-
-	public void glHint (int target, int mode) {
-		GL.glHint(target, mode);
-	}
-
-	public void glLineWidth (float width) {
-		GL.glLineWidth(width);
-	}
-
-	public void glPixelStorei (int pname, int param) {
-		GL.glPixelStorei(pname, param);
-	}
-
-	public void glPolygonOffset (float factor, float units) {
-		GL.glPolygonOffset(factor, units);
-	}
-
-	public void glReadPixels (int x, int y, int width, int height, int format, int type, Buffer pixels) {
-		GL.glReadPixels(x, y, width, height, format, type, pixels, getPosition(pixels));
-	}
-
-	public void glScissor (int x, int y, int width, int height) {
-		GL.glScissor(x, y, width, height);
-	}
-
-	public void glStencilFunc (int func, int ref, int mask) {
-		GL.glStencilFunc(func, ref, mask);
-	}
-
-	public void glStencilMask (int mask) {
-		GL.glStencilMask(mask);
-	}
-
-	public void glStencilOp (int fail, int zfail, int zpass) {
-		GL.glStencilOp(fail, zfail, zpass);
-	}
-
-	public void glTexImage2D (int target, int level, int internalFormat, int width, int height, int border, int format, int type,
-		Buffer pixels) {
-		GL.glTexImage2D(target, level, internalFormat, width, height, border, format, type, pixels, getPosition(pixels));
-	}
-
-	public void glTexParameterf (int target, int pname, float param) {
-		GL.glTexParameterf(target, pname, param);
-	}
-
-	public void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,
-		Buffer pixels) {
-		GL.glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels, getPosition(pixels));
-	}
-
-	public void glViewport (int x, int y, int width, int height) {
-		GL.glViewport(x, y, width, height);
-	}
-
-	public void glAlphaFunc (int func, float ref) {
-		GL.glAlphaFunc(func, ref);
-	}
-
-	public void glClientActiveTexture (int texture) {
-		GL.glClientActiveTexture(texture);
-	}
-
-	public void glColor4f (float red, float green, float blue, float alpha) {
-		GL.glColor4f(red, green, blue, alpha);
-	}
-
-	public void glColorPointer (int size, int type, int stride, Buffer pointer) {
-		GL.glColorPointer(size, type, stride, pointer, getPosition(pointer));
-	}
-
-	public void glDeleteTextures (int n, int[] textures, int offset) {
-		GL.glDeleteTextures(n, toBuffer(textures, offset), 0);
-	}
-
-	public void glDisableClientState (int array) {
-		GL.glDisableClientState(array);
-	}
-
-	public void glEnableClientState (int array) {
-		GL.glEnableClientState(array);
-	}
-
-	public void glFogf (int pname, float param) {
-		GL.glFogf(pname, param);
-	}
-
-	public void glFogfv (int pname, float[] params, int offset) {
-		GL.glFogfv(pname, toBuffer(params, offset), 0);
-	}
-
-	public void glFogfv (int pname, FloatBuffer params) {
-		GL.glFogfv(pname, params, getPosition(params));
-	}
-
-	public void glFrustumf (float left, float right, float bottom, float top, float zNear, float zFar) {
-		GL.glFrustum(left, right, bottom, top, zNear, zFar);
-	}
-
-	public void glGenTextures (int n, int[] textures, int offset) {
-		IntBuffer buffer = toBuffer(textures, offset);
-		GL.glGenTextures(n, buffer, 0);
-		toArray(buffer, textures, offset);
-	}
-
-	public void glGetIntegerv (int pname, int[] params, int offset) {
-		IntBuffer buffer = toBuffer(params, offset);
-		GL.glGetIntegerv(pname, buffer, 0);
-		toArray(buffer, params, offset);
-	}
-
-	public void glLightModelf (int pname, float param) {
-		GL.glLightModelf(pname, param);
-	}
-
-	public void glLightModelfv (int pname, float[] params, int offset) {
-		GL.glLightModelfv(pname, toBuffer(params, offset), 0);
-	}
-
-	public void glLightModelfv (int pname, FloatBuffer params) {
-		GL.glLightModelfv(pname, params, getPosition(params));
-	}
-
-	public void glLightf (int light, int pname, float param) {
-		GL.glLightf(light, pname, param);
-	}
-
-	public void glLightfv (int light, int pname, float[] params, int offset) {
-		GL.glLightfv(light, pname, toBuffer(params, offset), 0);
-	}
-
-	public void glLightfv (int light, int pname, FloatBuffer params) {
-		GL.glLightfv(light, pname, params, getPosition(params));
-	}
-
-	public void glLoadIdentity () {
-		GL.glLoadIdentity();
-	}
-
-	public void glLoadMatrixf (float[] m, int offset) {
-		GL.glLoadMatrixf(toBuffer(m, offset), 0);
-	}
-
-	public void glLoadMatrixf (FloatBuffer m) {
-		GL.glLoadMatrixf(m, getPosition(m));
-	}
-
-	public void glLogicOp (int opcode) {
-		GL.glLogicOp(opcode);
-	}
-
-	public void glMaterialf (int face, int pname, float param) {
-		GL.glMaterialf(face, pname, param);
-	}
-
-	public void glMaterialfv (int face, int pname, float[] params, int offset) {
-		GL.glMaterialfv(face, pname, toBuffer(params, offset), 0);
-	}
-
-	public void glMaterialfv (int face, int pname, FloatBuffer params) {
-		GL.glMaterialfv(face, pname, params, getPosition(params));
-	}
-
-	public void glMatrixMode (int mode) {
-		GL.glMatrixMode(mode);
-	}
-
-	public void glMultMatrixf (float[] m, int offset) {
-		GL.glMultMatrixf(toBuffer(m, offset), 0);
-	}
-
-	public void glMultMatrixf (FloatBuffer m) {
-		GL.glMultMatrixf(m, getPosition(m));
-	}
-
-	public void glMultiTexCoord4f (int target, float s, float t, float r, float q) {
-		GL.glMultiTexCoord4f(target, s, t, r, q);
-	}
-
-	public void glNormal3f (float nx, float ny, float nz) {
-		GL.glNormal3f(nx, ny, nz);
-	}
-
-	public void glNormalPointer (int type, int stride, Buffer pointer) {
-		GL.glNormalPointer(type, stride, pointer, getPosition(pointer));
-	}
-
-	public void glOrthof (float left, float right, float bottom, float top, float zNear, float zFar) {
-		GL.glOrtho(left, right, bottom, top, zNear, zFar);
-	}
-
-	public void glPointSize (float size) {
-		GL.glPointSize(size);
-	}
-
-	public void glPopMatrix () {
-		GL.glPopMatrix();
-	}
-
-	public void glPushMatrix () {
-		GL.glPushMatrix();
-	}
-
-	public void glRotatef (float angle, float x, float y, float z) {
-		GL.glRotatef(angle, x, y, z);
-	}
-
-	public void glSampleCoverage (float value, boolean invert) {
-		GL.glSampleCoverage(value, invert);
-	}
-
-	public void glScalef (float x, float y, float z) {
-		GL.glScalef(x, y, z);
-	}
-
-	public void glShadeModel (int mode) {
-		GL.glShadeModel(mode);
-	}
-
-	public void glTexCoordPointer (int size, int type, int stride, Buffer pointer) {
-		GL.glTexCoordPointer(size, type, stride, pointer, getPosition(pointer));
-	}
-
-	public void glTexEnvf (int target, int pname, float param) {
-		GL.glTexEnvf(target, pname, param);
-	}
-
-	public void glTexEnvfv (int target, int pname, float[] params, int offset) {
-		GL.glTexEnvfv(target, pname, toBuffer(params, offset), 0);
-	}
-
-	public void glTexEnvfv (int target, int pname, FloatBuffer params) {
-		GL.glTexEnvfv(target, pname, params, getPosition(params));
-	}
-
-	public void glTranslatef (float x, float y, float z) {
-		GL.glTranslatef(x, y, z);
-	}
-
-	public void glVertexPointer (int size, int type, int stride, Buffer buffer) {
-		GL.glVertexPointer(size, type, stride, buffer, getPosition(buffer));
-	}
-
-	public void glPolygonMode (int face, int mode) {
-		GL.glPolygonMode(face, mode);
-	}
-}
diff --git a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL11.java b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL11.java
deleted file mode 100644
index 19a09c1..0000000
--- a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL11.java
+++ /dev/null
@@ -1,235 +0,0 @@
-
-package com.badlogic.gdx.backends.jglfw;
-
-import static com.badlogic.gdx.backends.jglfw.JglfwUtil.*;
-import static com.badlogic.jglfw.utils.Memory.*;
-
-import com.badlogic.gdx.graphics.GL11;
-import com.badlogic.jglfw.gl.GL;
-
-import java.nio.Buffer;
-import java.nio.ByteBuffer;
-import java.nio.FloatBuffer;
-import java.nio.IntBuffer;
-
-public class JglfwGL11 extends JglfwGL10 implements GL11 {
-	public void glClipPlanef (int plane, float[] equation, int offset) {
-		GL.glClipPlane(plane, toBuffer(equation, offset), 0);
-	}
-
-	public void glClipPlanef (int plane, FloatBuffer equation) {
-		GL.glClipPlane(plane, equation, getPosition(equation));
-	}
-
-	public void glGetClipPlanef (int pname, float[] eqn, int offset) {
-		FloatBuffer buffer = toBuffer(eqn, offset);
-		GL.glGetClipPlane(pname, buffer, 0);
-		toArray(buffer, eqn, offset);
-	}
-
-	public void glGetClipPlanef (int pname, FloatBuffer eqn) {
-		GL.glGetClipPlane(pname, eqn, getPosition(eqn));
-	}
-
-	public void glGetFloatv (int pname, float[] params, int offset) {
-		FloatBuffer buffer = toBuffer(params, offset);
-		GL.glGetFloatv(pname, buffer, 0);
-		toArray(buffer, params, offset);
-	}
-
-	public void glGetFloatv (int pname, FloatBuffer params) {
-		GL.glGetFloatv(pname, params, getPosition(params));
-	}
-
-	public void glGetLightfv (int light, int pname, float[] params, int offset) {
-		FloatBuffer buffer = toBuffer(params, offset);
-		GL.glGetLightfv(light, pname, buffer, 0);
-		toArray(buffer, params, offset);
-	}
-
-	public void glGetLightfv (int light, int pname, FloatBuffer params) {
-		GL.glGetLightfv(light, pname, params, getPosition(params));
-	}
-
-	public void glGetMaterialfv (int face, int pname, float[] params, int offset) {
-		FloatBuffer buffer = toBuffer(params, offset);
-		GL.glGetMaterialfv(face, pname, buffer, 0);
-		toArray(buffer, params, offset);
-	}
-
-	public void glGetMaterialfv (int face, int pname, FloatBuffer params) {
-		GL.glGetMaterialfv(face, pname, params, getPosition(params));
-	}
-
-	public void glGetTexParameterfv (int target, int pname, float[] params, int offset) {
-		FloatBuffer buffer = toBuffer(params, offset);
-		GL.glGetTexParameterfv(target, pname, buffer, 0);
-		toArray(buffer, params, offset);
-	}
-
-	public void glGetTexParameterfv (int target, int pname, FloatBuffer params) {
-		GL.glGetTexParameterfv(target, pname, params, getPosition(params));
-	}
-
-	public void glPointParameterf (int pname, float param) {
-		GL.glPointParameterf(pname, param);
-	}
-
-	public void glPointParameterfv (int pname, float[] params, int offset) {
-		GL.glPointParameterfv(pname, toBuffer(params, offset), 0);
-	}
-
-	public void glPointParameterfv (int pname, FloatBuffer params) {
-		GL.glPointParameterfv(pname, params, getPosition(params));
-	}
-
-	public void glTexParameterfv (int target, int pname, float[] params, int offset) {
-		GL.glTexParameterfv(target, pname, toBuffer(params, offset), 0);
-	}
-
-	public void glTexParameterfv (int target, int pname, FloatBuffer params) {
-		GL.glTexParameterfv(target, pname, params, getPosition(params));
-	}
-
-	public void glBindBuffer (int target, int buffer) {
-		GL.glBindBuffer(target, buffer);
-	}
-
-	public void glBufferData (int target, int size, Buffer data, int usage) {
-		GL.glBufferData(target, size, data, getPosition(data), usage);
-	}
-
-	public void glBufferSubData (int target, int offset, int size, Buffer data) {
-		GL.glBufferSubData(target, offset, size, data, getPosition(data));
-	}
-
-	public void glColor4ub (byte red, byte green, byte blue, byte alpha) {
-		GL.glColor4ub(red, green, blue, alpha);
-	}
-
-	public void glDeleteBuffers (int n, int[] buffers, int offset) {
-		GL.glDeleteBuffers(n, toBuffer(buffers, offset), 0);
-	}
-
-	public void glDeleteBuffers (int n, IntBuffer buffers) {
-		GL.glDeleteBuffers(n, buffers, getPosition(buffers));
-	}
-
-	public void glGetBooleanv (int pname, boolean[] params, int offset) {
-		ByteBuffer buffer = toBuffer(params, offset);
-		GL.glGetBooleanv(pname, buffer, 0);
-		toArray(buffer, params, offset);
-	}
-
-	public void glGetBooleanv (int pname, IntBuffer params) {
-		GL.glGetBooleanv(pname, params, getPosition(params));
-	}
-
-	public void glGetBufferParameteriv (int target, int pname, int[] params, int offset) {
-		IntBuffer buffer = toBuffer(params, offset);
-		GL.glGetBufferParameteriv(target, pname, buffer, 0);
-		toArray(buffer, params, offset);
-	}
-
-	public void glGetBufferParameteriv (int target, int pname, IntBuffer params) {
-		GL.glGetBufferParameteriv(target, pname, params, getPosition(params));
-	}
-
-	public void glGenBuffers (int n, int[] buffers, int offset) {
-		IntBuffer buffer = toBuffer(buffers, offset);
-		GL.glGenBuffers(n, buffer, 0);
-		toArray(buffer, buffers, offset);
-	}
-
-	public void glGenBuffers (int n, IntBuffer buffers) {
-		GL.glGenBuffers(n, buffers, getPosition(buffers));
-	}
-
-	public void glGetPointerv (int pname, Buffer[] params) {
-		// FIXME
-		throw new UnsupportedOperationException();
-	}
-
-	public void glGetTexEnviv (int env, int pname, int[] params, int offset) {
-		IntBuffer buffer = toBuffer(params, offset);
-		GL.glGetTexEnviv(env, pname, buffer, 0);
-		toArray(buffer, params, offset);
-	}
-
-	public void glGetTexEnviv (int env, int pname, IntBuffer params) {
-		GL.glGetTexEnviv(env, pname, params, getPosition(params));
-	}
-
-	public void glGetTexParameteriv (int target, int pname, int[] params, int offset) {
-		IntBuffer buffer = toBuffer(params, offset);
-		GL.glGetTexParameteriv(target, pname, buffer, 0);
-		toArray(buffer, params, offset);
-	}
-
-	public void glGetTexParameteriv (int target, int pname, IntBuffer params) {
-		GL.glGetTexParameteriv(target, pname, params, getPosition(params));
-	}
-
-	public boolean glIsBuffer (int buffer) {
-		return GL.glIsBuffer(buffer);
-	}
-
-	public boolean glIsEnabled (int cap) {
-		return GL.glIsEnabled(cap);
-	}
-
-	public boolean glIsTexture (int texture) {
-		return GL.glIsTexture(texture);
-	}
-
-	public void glTexEnvi (int target, int pname, int param) {
-		GL.glTexEnvi(target, pname, param);
-	}
-
-	public void glTexEnviv (int target, int pname, int[] params, int offset) {
-		IntBuffer buffer = toBuffer(params, offset);
-		GL.glTexEnviv(target, pname, buffer, 0);
-		toArray(buffer, params, offset);
-	}
-
-	public void glTexEnviv (int target, int pname, IntBuffer params) {
-		GL.glTexEnviv(target, pname, params, getPosition(params));
-	}
-
-	public void glTexParameteri (int target, int pname, int param) {
-		GL.glTexParameteri(target, pname, param);
-	}
-
-	public void glTexParameteriv (int target, int pname, int[] params, int offset) {
-		GL.glTexParameteriv(target, pname, toBuffer(params, offset), 0);
-	}
-
-	public void glTexParameteriv (int target, int pname, IntBuffer params) {
-		GL.glTexParameteriv(target, pname, params, getPosition(params));
-	}
-
-	public void glPointSizePointerOES (int type, int stride, Buffer pointer) {
-		// FIXME
-		throw new UnsupportedOperationException();
-	}
-
-	public void glVertexPointer (int size, int type, int stride, int pointer) {
-		GL.glVertexPointer(size, type, stride, pointer);
-	}
-
-	public void glColorPointer (int size, int type, int stride, int pointer) {
-		GL.glColorPointer(size, type, stride, pointer);
-	}
-
-	public void glNormalPointer (int type, int stride, int pointer) {
-		GL.glNormalPointer(type, stride, pointer);
-	}
-
-	public void glTexCoordPointer (int size, int type, int stride, int pointer) {
-		GL.glTexCoordPointer(size, type, stride, pointer);
-	}
-
-	public void glDrawElements (int mode, int count, int type, int indices) {
-		GL.glDrawElements(mode, count, type, indices);
-	}
-}
diff --git a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL20.java b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL20.java
deleted file mode 100644
index 1283a71..0000000
--- a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL20.java
+++ /dev/null
@@ -1,593 +0,0 @@
-
-package com.badlogic.gdx.backends.jglfw;
-
-import static com.badlogic.jglfw.utils.Memory.*;
-
-import com.badlogic.gdx.graphics.GL20;
-import com.badlogic.jglfw.gl.GL;
-
-import java.nio.Buffer;
-import java.nio.FloatBuffer;
-import java.nio.IntBuffer;
-
-public class JglfwGL20 implements GL20 {
-	public void glActiveTexture (int texture) {
-		GL.glActiveTexture(texture);
-	}
-
-	public void glBindTexture (int target, int texture) {
-		GL.glBindTexture(target, texture);
-	}
-
-	public void glBlendFunc (int sfactor, int dfactor) {
-		GL.glBlendFunc(sfactor, dfactor);
-	}
-
-	public void glClear (int mask) {
-		GL.glClear(mask);
-	}
-
-	public void glClearColor (float red, float green, float blue, float alpha) {
-		GL.glClearColor(red, green, blue, alpha);
-	}
-
-	public void glClearDepthf (float depth) {
-		GL.glClearDepthf(depth);
-	}
-
-	public void glClearStencil (int s) {
-		GL.glClearStencil(s);
-	}
-
-	public void glColorMask (boolean red, boolean green, boolean blue, boolean alpha) {
-		GL.glColorMask(red, green, blue, alpha);
-	}
-
-	public void glCompressedTexImage2D (int target, int level, int internalformat, int width, int height, int border,
-		int imageSize, Buffer data) {
-		GL.glCompressedTexImage2D(target, level, internalformat, width, height, border, imageSize, data, getPosition(data));
-	}
-
-	public void glCompressedTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format,
-		int imageSize, Buffer data) {
-		GL.glCompressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, imageSize, data, getPosition(data));
-	}
-
-	public void glCopyTexImage2D (int target, int level, int internalformat, int x, int y, int width, int height, int border) {
-		GL.glCopyTexImage2D(target, level, internalformat, x, y, width, height, border);
-	}
-
-	public void glCopyTexSubImage2D (int target, int level, int xoffset, int yoffset, int x, int y, int width, int height) {
-		GL.glCopyTexSubImage2D(target, level, xoffset, yoffset, x, y, width, height);
-	}
-
-	public void glCullFace (int mode) {
-		GL.glCullFace(mode);
-	}
-
-	public void glDeleteTextures (int n, IntBuffer textures) {
-		GL.glDeleteTextures(n, textures, getPosition(textures));
-	}
-
-	public void glDepthFunc (int func) {
-		GL.glDepthFunc(func);
-	}
-
-	public void glDepthMask (boolean flag) {
-		GL.glDepthMask(flag);
-	}
-
-	public void glDepthRangef (float zNear, float zFar) {
-		GL.glDepthRangef(zNear, zFar);
-	}
-
-	public void glDisable (int cap) {
-		GL.glDisable(cap);
-	}
-
-	public void glDrawArrays (int mode, int first, int count) {
-		GL.glDrawArrays(mode, first, count);
-	}
-
-	public void glDrawElements (int mode, int count, int type, Buffer indices) {
-		GL.glDrawElements(mode, count, type, indices, getPosition(indices));
-	}
-
-	public void glEnable (int cap) {
-		GL.glEnable(cap);
-	}
-
-	public void glFinish () {
-		GL.glFinish();
-	}
-
-	public void glFlush () {
-		GL.glFlush();
-	}
-
-	public void glFrontFace (int mode) {
-		GL.glFrontFace(mode);
-	}
-
-	public void glGenTextures (int n, IntBuffer textures) {
-		GL.glGenTextures(n, textures, getPosition(textures));
-	}
-
-	public int glGetError () {
-		return GL.glGetError();
-	}
-
-	public void glGetIntegerv (int pname, IntBuffer params) {
-		GL.glGetIntegerv(pname, params, getPosition(params));
-	}
-
-	public String glGetString (int name) {
-		return GL.glGetString(name);
-	}
-
-	public void glHint (int target, int mode) {
-		GL.glHint(target, mode);
-	}
-
-	public void glLineWidth (float width) {
-		GL.glLineWidth(width);
-	}
-
-	public void glPixelStorei (int pname, int param) {
-		GL.glPixelStorei(pname, param);
-	}
-
-	public void glPolygonOffset (float factor, float units) {
-		GL.glPolygonOffset(factor, units);
-	}
-
-	public void glReadPixels (int x, int y, int width, int height, int format, int type, Buffer pixels) {
-		GL.glReadPixels(x, y, width, height, format, type, pixels, getPosition(pixels));
-	}
-
-	public void glScissor (int x, int y, int width, int height) {
-		GL.glScissor(x, y, width, height);
-	}
-
-	public void glStencilFunc (int func, int ref, int mask) {
-		GL.glStencilFunc(func, ref, mask);
-	}
-
-	public void glStencilMask (int mask) {
-		GL.glStencilMask(mask);
-	}
-
-	public void glStencilOp (int fail, int zfail, int zpass) {
-		GL.glStencilOp(fail, zfail, zpass);
-	}
-
-	public void glTexImage2D (int target, int level, int internalFormat, int width, int height, int border, int format, int type,
-		Buffer pixels) {
-		GL.glTexImage2D(target, level, internalFormat, width, height, border, format, type, pixels, getPosition(pixels));
-	}
-
-	public void glTexParameterf (int target, int pname, float param) {
-		GL.glTexParameterf(target, pname, param);
-	}
-
-	public void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,
-		Buffer pixels) {
-		GL.glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels, getPosition(pixels));
-	}
-
-	public void glViewport (int x, int y, int width, int height) {
-		GL.glViewport(x, y, width, height);
-	}
-
-	public void glGetFloatv (int pname, FloatBuffer params) {
-		GL.glGetFloatv(pname, params, getPosition(params));
-	}
-
-	public void glGetTexParameterfv (int target, int pname, FloatBuffer params) {
-		GL.glGetTexParameterfv(target, pname, params, getPosition(params));
-	}
-
-	public void glTexParameterfv (int target, int pname, FloatBuffer params) {
-		GL.glTexParameterfv(target, pname, params, getPosition(params));
-	}
-
-	public void glBindBuffer (int target, int buffer) {
-		GL.glBindBuffer(target, buffer);
-	}
-
-	public void glBufferData (int target, int size, Buffer data, int usage) {
-		GL.glBufferData(target, size, data, getPosition(data), usage);
-	}
-
-	public void glBufferSubData (int target, int offset, int size, Buffer data) {
-		GL.glBufferSubData(target, offset, size, data, getPosition(data));
-	}
-
-	public void glDeleteBuffers (int n, IntBuffer buffers) {
-		GL.glDeleteBuffers(n, buffers, getPosition(buffers));
-	}
-
-	public void glGetBufferParameteriv (int target, int pname, IntBuffer params) {
-		GL.glGetBufferParameteriv(target, pname, params, getPosition(params));
-	}
-
-	public void glGenBuffers (int n, IntBuffer buffers) {
-		GL.glGenBuffers(n, buffers, getPosition(buffers));
-	}
-
-	public void glGetTexParameteriv (int target, int pname, IntBuffer params) {
-		GL.glGetTexParameteriv(target, pname, params, getPosition(params));
-	}
-
-	public boolean glIsBuffer (int buffer) {
-		return GL.glIsBuffer(buffer);
-	}
-
-	public boolean glIsEnabled (int cap) {
-		return GL.glIsEnabled(cap);
-	}
-
-	public boolean glIsTexture (int texture) {
-		return GL.glIsTexture(texture);
-	}
-
-	public void glTexParameteri (int target, int pname, int param) {
-		GL.glTexParameteri(target, pname, param);
-	}
-
-	public void glTexParameteriv (int target, int pname, IntBuffer params) {
-		GL.glTexParameteriv(target, pname, params, getPosition(params));
-	}
-
-	public void glDrawElements (int mode, int count, int type, int indices) {
-		GL.glDrawElements(mode, count, type, indices);
-	}
-
-	public void glAttachShader (int program, int shader) {
-		GL.glAttachShader(program, shader);
-	}
-
-	public void glBindAttribLocation (int program, int index, String name) {
-		GL.glBindAttribLocation(program, index, name);
-	}
-
-	public void glBindFramebuffer (int target, int framebuffer) {
-		GL.glBindFramebufferEXT(target, framebuffer);
-	}
-
-	public void glBindRenderbuffer (int target, int renderbuffer) {
-		GL.glBindRenderbufferEXT(target, renderbuffer);
-	}
-
-	public void glBlendColor (float red, float green, float blue, float alpha) {
-		GL.glBlendColor(red, green, blue, alpha);
-	}
-
-	public void glBlendEquation (int mode) {
-		GL.glBlendEquation(mode);
-	}
-
-	public void glBlendEquationSeparate (int modeRGB, int modeAlpha) {
-		GL.glBlendEquationSeparate(modeRGB, modeAlpha);
-	}
-
-	public void glBlendFuncSeparate (int srcRGB, int dstRGB, int srcAlpha, int dstAlpha) {
-		GL.glBlendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha);
-	}
-
-	public int glCheckFramebufferStatus (int target) {
-		return GL.glCheckFramebufferStatusEXT(target);
-	}
-
-	public void glCompileShader (int shader) {
-		GL.glCompileShader(shader);
-	}
-
-	public int glCreateProgram () {
-		return GL.glCreateProgram();
-	}
-
-	public int glCreateShader (int type) {
-		return GL.glCreateShader(type);
-	}
-
-	public void glDeleteFramebuffers (int n, IntBuffer framebuffers) {
-		GL.glDeleteFramebuffersEXT(n, framebuffers, getPosition(framebuffers));
-	}
-
-	public void glDeleteProgram (int program) {
-		GL.glDeleteProgram(program);
-	}
-
-	public void glDeleteRenderbuffers (int n, IntBuffer renderbuffers) {
-		GL.glDeleteRenderbuffersEXT(n, renderbuffers, getPosition(renderbuffers));
-	}
-
-	public void glDeleteShader (int shader) {
-		GL.glDeleteShader(shader);
-	}
-
-	public void glDetachShader (int program, int shader) {
-		GL.glDetachShader(program, shader);
-	}
-
-	public void glDisableVertexAttribArray (int index) {
-		GL.glDisableVertexAttribArray(index);
-	}
-
-	public void glEnableVertexAttribArray (int index) {
-		GL.glEnableVertexAttribArray(index);
-	}
-
-	public void glFramebufferRenderbuffer (int target, int attachment, int renderbuffertarget, int renderbuffer) {
-		GL.glFramebufferRenderbufferEXT(target, attachment, renderbuffertarget, renderbuffer);
-	}
-
-	public void glFramebufferTexture2D (int target, int attachment, int textarget, int texture, int level) {
-		GL.glFramebufferTexture2DEXT(target, attachment, textarget, texture, level);
-	}
-
-	public void glGenerateMipmap (int target) {
-		GL.glGenerateMipmapEXT(target);
-	}
-
-	public void glGenFramebuffers (int n, IntBuffer framebuffers) {
-		GL.glGenFramebuffersEXT(n, framebuffers, getPosition(framebuffers));
-	}
-
-	public void glGenRenderbuffers (int n, IntBuffer renderbuffers) {
-		GL.glGenRenderbuffersEXT(n, renderbuffers, getPosition(renderbuffers));
-	}
-
-	public String glGetActiveAttrib (int program, int index, IntBuffer size, Buffer type) {
-		return GL.glGetActiveAttrib(program, index, size, getPosition(size), type, getPosition(type));
-	}
-
-	public String glGetActiveUniform (int program, int index, IntBuffer size, Buffer type) {
-		return GL.glGetActiveUniform(program, index, size, getPosition(size), type, getPosition(type));
-	}
-
-	public void glGetAttachedShaders (int program, int maxcount, Buffer count, IntBuffer shaders) {
-		GL.glGetAttachedShaders(program, maxcount, count, getPosition(count), shaders, getPosition(shaders));
-	}
-
-	public int glGetAttribLocation (int program, String name) {
-		return GL.glGetAttribLocation(program, name);
-	}
-
-	public void glGetBooleanv (int pname, Buffer params) {
-		GL.glGetBooleanv(pname, params, getPosition(params));
-	}
-
-	public void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {
-		GL.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params, getPosition(params));
-	}
-
-	public void glGetProgramiv (int program, int pname, IntBuffer params) {
-		GL.glGetProgramiv(program, pname, params, getPosition(params));
-	}
-
-	public String glGetProgramInfoLog (int program) {
-		return GL.glGetProgramInfoLog(program);
-	}
-
-	public void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {
-		GL.glGetRenderbufferParameterivEXT(target, pname, params, getPosition(params));
-	}
-
-	public void glGetShaderiv (int shader, int pname, IntBuffer params) {
-		GL.glGetShaderiv(shader, pname, params, getPosition(params));
-	}
-
-	public String glGetShaderInfoLog (int shader) {
-		return GL.glGetShaderInfoLog(shader);
-	}
-
-	public void glGetShaderPrecisionFormat (int shadertype, int precisiontype, IntBuffer range, IntBuffer precision) {
-		GL.glGetShaderPrecisionFormat(shadertype, precisiontype, range, getPosition(range), precision, getPosition(precision));
-	}
-
-	public void glGetShaderSource (int shader, int bufsize, Buffer length, String source) {
-		throw new UnsupportedOperationException("Not implemented");
-	}
-
-	public void glGetUniformfv (int program, int location, FloatBuffer params) {
-		GL.glGetUniformfv(program, location, params, getPosition(params));
-	}
-
-	public void glGetUniformiv (int program, int location, IntBuffer params) {
-		GL.glGetUniformiv(program, location, params, getPosition(params));
-	}
-
-	public int glGetUniformLocation (int program, String name) {
-		return GL.glGetUniformLocation(program, name);
-	}
-
-	public void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {
-		GL.glGetVertexAttribfv(index, pname, params, getPosition(params));
-	}
-
-	public void glGetVertexAttribiv (int index, int pname, IntBuffer params) {
-		GL.glGetVertexAttribiv(index, pname, params, getPosition(params));
-	}
-
-	public void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {
-		GL.glGetVertexAttribPointerv(index, pname, pointer, getPosition(pointer));
-	}
-
-	public boolean glIsFramebuffer (int framebuffer) {
-		return GL.glIsFramebufferEXT(framebuffer);
-	}
-
-	public boolean glIsProgram (int program) {
-		return GL.glIsProgram(program);
-	}
-
-	public boolean glIsRenderbuffer (int renderbuffer) {
-		return GL.glIsRenderbufferEXT(renderbuffer);
-	}
-
-	public boolean glIsShader (int shader) {
-		return GL.glIsShader(shader);
-	}
-
-	public void glLinkProgram (int program) {
-		GL.glLinkProgram(program);
-	}
-
-	public void glReleaseShaderCompiler () {
-		GL.glReleaseShaderCompiler();
-	}
-
-	public void glRenderbufferStorage (int target, int internalformat, int width, int height) {
-		GL.glRenderbufferStorageEXT(target, internalformat, width, height);
-	}
-
-	public void glSampleCoverage (float value, boolean invert) {
-		GL.glSampleCoverage(value, invert);
-	}
-
-	public void glShaderBinary (int n, IntBuffer shaders, int binaryformat, Buffer binary, int length) {
-		GL.glShaderBinary(n, shaders, getPosition(shaders), binaryformat, binary, getPosition(binary), length);
-	}
-
-	public void glShaderSource (int shader, String string) {
-		GL.glShaderSource(shader, string);
-	}
-
-	public void glStencilFuncSeparate (int face, int func, int ref, int mask) {
-		GL.glStencilFuncSeparate(face, func, ref, mask);
-	}
-
-	public void glStencilMaskSeparate (int face, int mask) {
-		GL.glStencilMaskSeparate(face, mask);
-	}
-
-	public void glStencilOpSeparate (int face, int fail, int zfail, int zpass) {
-		GL.glStencilOpSeparate(face, fail, zfail, zpass);
-	}
-
-	public void glUniform1f (int location, float x) {
-		GL.glUniform1f(location, x);
-	}
-
-	public void glUniform1fv (int location, int count, FloatBuffer v) {
-		GL.glUniform1fv(location, count, v, getPosition(v));
-	}
-
-	public void glUniform1i (int location, int x) {
-		GL.glUniform1i(location, x);
-	}
-
-	public void glUniform1iv (int location, int count, IntBuffer v) {
-		GL.glUniform1iv(location, count, v, getPosition(v));
-	}
-
-	public void glUniform2f (int location, float x, float y) {
-		GL.glUniform2f(location, x, y);
-	}
-
-	public void glUniform2fv (int location, int count, FloatBuffer v) {
-		GL.glUniform2fv(location, count, v, getPosition(v));
-	}
-
-	public void glUniform2i (int location, int x, int y) {
-		GL.glUniform2i(location, x, y);
-	}
-
-	public void glUniform2iv (int location, int count, IntBuffer v) {
-		GL.glUniform2iv(location, count, v, getPosition(v));
-	}
-
-	public void glUniform3f (int location, float x, float y, float z) {
-		GL.glUniform3f(location, x, y, z);
-	}
-
-	public void glUniform3fv (int location, int count, FloatBuffer v) {
-		GL.glUniform3fv(location, count, v, getPosition(v));
-	}
-
-	public void glUniform3i (int location, int x, int y, int z) {
-		GL.glUniform3i(location, x, y, z);
-	}
-
-	public void glUniform3iv (int location, int count, IntBuffer v) {
-		GL.glUniform3iv(location, count, v, getPosition(v));
-	}
-
-	public void glUniform4f (int location, float x, float y, float z, float w) {
-		GL.glUniform4f(location, x, y, z, w);
-	}
-
-	public void glUniform4fv (int location, int count, FloatBuffer v) {
-		GL.glUniform4fv(location, count, v, getPosition(v));
-	}
-
-	public void glUniform4i (int location, int x, int y, int z, int w) {
-		GL.glUniform4i(location, x, y, z, w);
-	}
-
-	public void glUniform4iv (int location, int count, IntBuffer v) {
-		GL.glUniform4iv(location, count, v, getPosition(v));
-	}
-
-	public void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {
-		GL.glUniformMatrix2fv(location, count, transpose, value, getPosition(value));
-	}
-
-	public void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {
-		GL.glUniformMatrix3fv(location, count, transpose, value, getPosition(value));
-	}
-
-	public void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {
-		GL.glUniformMatrix4fv(location, count, transpose, value, getPosition(value));
-	}
-
-	public void glUseProgram (int program) {
-		GL.glUseProgram(program);
-	}
-
-	public void glValidateProgram (int program) {
-		GL.glValidateProgram(program);
-	}
-
-	public void glVertexAttrib1f (int indx, float x) {
-		GL.glVertexAttrib1f(indx, x);
-	}
-
-	public void glVertexAttrib1fv (int indx, FloatBuffer values) {
-		GL.glVertexAttrib1fv(indx, values, getPosition(values));
-	}
-
-	public void glVertexAttrib2f (int indx, float x, float y) {
-		GL.glVertexAttrib2f(indx, x, y);
-	}
-
-	public void glVertexAttrib2fv (int indx, FloatBuffer values) {
-		GL.glVertexAttrib2fv(indx, values, getPosition(values));
-	}
-
-	public void glVertexAttrib3f (int indx, float x, float y, float z) {
-		GL.glVertexAttrib3f(indx, x, y, z);
-	}
-
-	public void glVertexAttrib3fv (int indx, FloatBuffer values) {
-		GL.glVertexAttrib3fv(indx, values, getPosition(values));
-	}
-
-	public void glVertexAttrib4f (int indx, float x, float y, float z, float w) {
-		GL.glVertexAttrib4f(indx, x, y, z, w);
-	}
-
-	public void glVertexAttrib4fv (int indx, FloatBuffer values) {
-		GL.glVertexAttrib4fv(indx, values, getPosition(values));
-	}
-
-	public void glVertexAttribPointer (int indx, int size, int type, boolean normalized, int stride, Buffer ptr) {
-		GL.glVertexAttribPointer(indx, size, type, normalized, stride, ptr, getPosition(ptr));
-	}
-
-	public void glVertexAttribPointer (int indx, int size, int type, boolean normalized, int stride, int ptr) {
-		GL.glVertexAttribPointer(indx, size, type, normalized, stride, ptr);
-	}
-}
diff --git a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGraphics.java b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGraphics.java
deleted file mode 100644
index 232d1b7..0000000
--- a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGraphics.java
+++ /dev/null
@@ -1,393 +0,0 @@
-
-package com.badlogic.gdx.backends.jglfw;
-
-import static com.badlogic.jglfw.Glfw.*;
-
-import com.badlogic.gdx.ApplicationListener;
-import com.badlogic.gdx.Gdx;
-import com.badlogic.gdx.Graphics;
-import com.badlogic.gdx.graphics.Color;
-import com.badlogic.gdx.graphics.GL10;
-import com.badlogic.gdx.graphics.GL11;
-import com.badlogic.gdx.graphics.GL20;
-import com.badlogic.gdx.graphics.GLCommon;
-import com.badlogic.gdx.utils.Array;
-import com.badlogic.gdx.utils.GdxRuntimeException;
-import com.badlogic.jglfw.GlfwVideoMode;
-import com.badlogic.jglfw.gl.GL;
-
-import java.awt.Toolkit;
-
-/** An implementation of the {@link Graphics} interface based on GLFW.
- * @author Nathan Sweet */
-public class JglfwGraphics implements Graphics {
-	static int glMajorVersion, glMinorVersion;
-
-	long window;
-	private boolean fullscreen;
-	private long fullscreenMonitor;
-	private String title;
-	private boolean resizable, undecorated;
-	private BufferFormat bufferFormat;
-	private boolean vSync;
-	private int x, y, width, height;
-	private boolean visible;
-	private Color initialBackgroundColor;
-	private volatile boolean isContinuous = true, renderRequested;
-	volatile boolean foreground, minimized;
-
-	private float deltaTime;
-	private long frameStart, lastTime = -1;
-	private int frames, fps;
-
-	private GLCommon gl;
-	private JglfwGL10 gl10;
-	private JglfwGL11 gl11;
-	private JglfwGL20 gl20;
-
-	public JglfwGraphics (JglfwApplicationConfiguration config) {
-		// Store values from config.
-		bufferFormat = new BufferFormat(config.r, config.g, config.b, config.a, config.depth, config.stencil, config.samples, false);
-		title = config.title;
-		resizable = config.resizable;
-		undecorated = config.undecorated;
-		x = config.x;
-		y = config.y;
-		vSync = config.vSync;
-		initialBackgroundColor = config.initialBackgroundColor;
-		if (config.fullscreenMonitorIndex != -1) { // Use monitor specified in config if it is valid.
-			long[] monitors = glfwGetMonitors();
-			if (config.fullscreenMonitorIndex < monitors.length) fullscreenMonitor = monitors[config.fullscreenMonitorIndex];
-		}
-
-		// Create window.
-		if (!createWindow(config.width, config.height, config.fullscreen)) {
-			throw new GdxRuntimeException("Unable to create window: " + config.width + "x" + config.height + ", fullscreen: "
-				+ config.fullscreen);
-		}
-
-		// Create GL.
-		String version = GL.glGetString(GL11.GL_VERSION);
-		glMajorVersion = Integer.parseInt("" + version.charAt(0));
-		glMinorVersion = Integer.parseInt("" + version.charAt(2));
-		if (config.useGL20 && (glMajorVersion >= 2 || version.contains("2.1"))) { // special case for MESA, wtf...
-			gl20 = new JglfwGL20();
-			gl = gl20;
-		} else {
-			gl20 = null;
-			if (glMajorVersion == 1 && glMinorVersion < 5)
-				gl10 = new JglfwGL10();
-			else {
-				gl11 = new JglfwGL11();
-				gl10 = gl11;
-			}
-			gl = gl10;
-		}
-		Gdx.gl = gl;
-		Gdx.gl10 = gl10;
-		Gdx.gl11 = gl11;
-		Gdx.gl20 = gl20;
-
-		if (!config.hidden) show();
-	}
-
-	private boolean createWindow (int width, int height, boolean fullscreen) {
-		if (fullscreen && fullscreenMonitor == 0) fullscreenMonitor = getWindowMonitor();
-
-		glfwWindowHint(GLFW_VISIBLE, 0);
-		glfwWindowHint(GLFW_RESIZABLE, resizable ? 1 : 0);
-		glfwWindowHint(GLFW_UNDECORATED, undecorated ? 1 : 0);
-		glfwWindowHint(GLFW_RED_BITS, bufferFormat.r);
-		glfwWindowHint(GLFW_GREEN_BITS, bufferFormat.g);
-		glfwWindowHint(GLFW_BLUE_BITS, bufferFormat.b);
-		glfwWindowHint(GLFW_ALPHA_BITS, bufferFormat.a);
-		glfwWindowHint(GLFW_DEPTH_BITS, bufferFormat.depth);
-		glfwWindowHint(GLFW_STENCIL_BITS, bufferFormat.stencil);
-		glfwWindowHint(GLFW_SAMPLES, bufferFormat.samples);
-
-		boolean mouseCaptured = window != 0 && glfwGetInputMode(window, GLFW_CURSOR_MODE) == GLFW_CURSOR_CAPTURED;
-
-		long oldWindow = window;
-		long newWindow = glfwCreateWindow(width, height, title, fullscreen ? fullscreenMonitor : 0, oldWindow);
-		if (newWindow == 0) return false;
-		if (oldWindow != 0) glfwDestroyWindow(oldWindow);
-		window = newWindow;
-		this.width = Math.max(1, width);
-		this.height = Math.max(1, height);
-
-		this.fullscreen = fullscreen;
-		if (!fullscreen) {
-			if (x == -1 || y == -1) {
-				DisplayMode mode = getDesktopDisplayMode();
-				x = (mode.width - width) / 2;
-				y = (mode.height - height) / 2;
-			}
-			glfwSetWindowPos(window, x, y);
-		}
-
-		if (!mouseCaptured) glfwSetInputMode(window, GLFW_CURSOR_MODE, GLFW_CURSOR_NORMAL); // Prevent fullscreen from taking mouse.
-
-		glfwMakeContextCurrent(newWindow);
-		setVSync(vSync);
-		if (visible) glfwShowWindow(window);
-
-		return true;
-	}
-
-	void frameStart (long time) {
-		if (lastTime == -1) lastTime = time;
-		deltaTime = (time - lastTime) / 1000000000.0f;
-		lastTime = time;
-
-		if (time - frameStart >= 1000000000) {
-			fps = frames;
-			frames = 0;
-			frameStart = time;
-		}
-		frames++;
-	}
-
-	void sizeChanged (int width, int height) {
-		width = Math.max(1, width);
-		height = Math.max(1, height);
-		this.width = width;
-		this.height = height;
-		Gdx.gl.glViewport(0, 0, width, height);
-		ApplicationListener listener = Gdx.app.getApplicationListener();
-		if (listener != null) listener.resize(width, height);
-		requestRendering();
-	}
-
-	void positionChanged (int x, int y) {
-		this.x = x;
-		this.y = y;
-	}
-
-	public boolean isGL11Available () {
-		return gl11 != null;
-	}
-
-	public boolean isGL20Available () {
-		return gl20 != null;
-	}
-
-	public GLCommon getGLCommon () {
-		return gl;
-	}
-
-	public GL10 getGL10 () {
-		return gl10;
-	}
-
-	public GL11 getGL11 () {
-		return gl11;
-	}
-
-	public GL20 getGL20 () {
-		return gl20;
-	}
-
-	public int getWidth () {
-		return width;
-	}
-
-	public int getHeight () {
-		return height;
-	}
-
-	public float getDeltaTime () {
-		return deltaTime;
-	}
-
-	public float getRawDeltaTime () {
-		return deltaTime;
-	}
-
-	public int getFramesPerSecond () {
-		return fps;
-	}
-
-	public GraphicsType getType () {
-		return GraphicsType.JGLFW;
-	}
-
-	public float getPpiX () {
-		// return getWidth() / (glfwGetMonitorPhysicalWidth(getWindowMonitor()) * 0.03937f); // mm to inches
-		return Toolkit.getDefaultToolkit().getScreenResolution();
-	}
-
-	public float getPpiY () {
-		// return getHeight() / (glfwGetMonitorPhysicalHeight(getWindowMonitor()) * 0.03937f); // mm to inches
-		return Toolkit.getDefaultToolkit().getScreenResolution();
-	}
-
-	public float getPpcX () {
-		// return getWidth() / (glfwGetMonitorPhysicalWidth(getWindowMonitor()) / 10); // mm to cm
-		return Toolkit.getDefaultToolkit().getScreenResolution() / 2.54f;
-	}
-
-	public float getPpcY () {
-		// return getHeight() / (glfwGetMonitorPhysicalHeight(getWindowMonitor()) / 10); // mm to cm
-		return Toolkit.getDefaultToolkit().getScreenResolution() / 2.54f;
-	}
-
-	public float getDensity () {
-		// long monitor = getWindowMonitor();
-		// float mmWidth = glfwGetMonitorPhysicalWidth(monitor);
-		// float mmHeight = glfwGetMonitorPhysicalHeight(monitor);
-		// float inches = (float)Math.sqrt(mmWidth * mmWidth + mmHeight * mmHeight) * 0.03937f; // mm to inches
-		// float pixelWidth = getWidth();
-		// float pixelHeight = getHeight();
-		// float pixels = (float)Math.sqrt(pixelWidth * pixelWidth + pixelHeight * pixelHeight);
-		// float diagonalPpi = pixels / inches;
-		// return diagonalPpi / 160f;
-		return Toolkit.getDefaultToolkit().getScreenResolution() / 160f;
-	}
-
-	public boolean supportsDisplayModeChange () {
-		return true;
-	}
-
-	private long getWindowMonitor () {
-		if (window != 0) {
-			long monitor = glfwGetWindowMonitor(window);
-			if (monitor != 0) return monitor;
-		}
-		return glfwGetPrimaryMonitor();
-	}
-
-	public DisplayMode[] getDisplayModes () {
-		Array<DisplayMode> modes = new Array();
-		for (GlfwVideoMode mode : glfwGetVideoModes(getWindowMonitor()))
-			modes.add(new JglfwDisplayMode(mode.width, mode.height, 0, mode.redBits + mode.greenBits + mode.blueBits));
-		return modes.toArray(DisplayMode.class);
-	}
-
-	public DisplayMode getDesktopDisplayMode () {
-		GlfwVideoMode mode = glfwGetVideoMode(getWindowMonitor());
-		return new JglfwDisplayMode(mode.width, mode.height, 0, mode.redBits + mode.greenBits + mode.blueBits);
-	}
-
-	public boolean setDisplayMode (DisplayMode displayMode) {
-		bufferFormat = new BufferFormat( //
-			displayMode.bitsPerPixel == 16 ? 5 : 8, //
-			displayMode.bitsPerPixel == 16 ? 6 : 8, //
-			displayMode.bitsPerPixel == 16 ? 6 : 8, //
-			bufferFormat.a, bufferFormat.depth, bufferFormat.stencil, bufferFormat.samples, false);
-		boolean success = createWindow(displayMode.width, displayMode.height, fullscreen);
-		if (success && fullscreen) sizeChanged(displayMode.width, displayMode.height);
-		return success;
-	}
-
-	public boolean setDisplayMode (int width, int height, boolean fullscreen) {
-		if (fullscreen || this.fullscreen) {
-			boolean success = createWindow(width, height, fullscreen);
-			if (success && fullscreen) sizeChanged(width, height);
-			return success;
-		}
-
-		glfwSetWindowSize(window, width, height);
-		return true;
-	}
-
-	public void setTitle (String title) {
-		if (title == null) title = "";
-		glfwSetWindowTitle(window, title);
-		this.title = title;
-	}
-
-	public void setVSync (boolean vsync) {
-		this.vSync = vsync;
-		glfwSwapInterval(vsync ? 1 : 0);
-	}
-
-	public BufferFormat getBufferFormat () {
-		return bufferFormat;
-	}
-
-	public boolean supportsExtension (String extension) {
-		return glfwExtensionSupported(extension);
-	}
-
-	public void setContinuousRendering (boolean isContinuous) {
-		this.isContinuous = isContinuous;
-	}
-
-	public boolean isContinuousRendering () {
-		return isContinuous;
-	}
-
-	public void requestRendering () {
-		renderRequested = true;
-	}
-
-	public boolean isFullscreen () {
-		return fullscreen;
-	}
-
-	/** Returns the JGLFW window handle. Note this should not be stored externally as it may change if the window is recreated to
-	 * enter/exit fullscreen. */
-	public long getWindow () {
-		return window;
-	}
-
-	public int getX () {
-		return x;
-	}
-
-	public int getY () {
-		return y;
-	}
-
-	public void setPosition (int x, int y) {
-		glfwSetWindowPos(window, x, y);
-	}
-
-	public void hide () {
-		visible = false;
-		glfwHideWindow(window);
-	}
-
-	public void show () {
-		visible = true;
-		glfwShowWindow(window);
-
-		Gdx.gl.glClearColor(initialBackgroundColor.r, initialBackgroundColor.g, initialBackgroundColor.b, initialBackgroundColor.a);
-		Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
-		glfwSwapBuffers(window);
-	}
-
-	public boolean isHidden () {
-		return !visible;
-	}
-
-	public boolean isMinimized () {
-		return minimized;
-	}
-
-	public boolean isForeground () {
-		return foreground;
-	}
-
-	public void minimize () {
-		glfwIconifyWindow(window);
-	}
-
-	public void restore () {
-		glfwRestoreWindow(window);
-	}
-
-	boolean shouldRender () {
-		try {
-			return renderRequested || isContinuous;
-		} finally {
-			renderRequested = false;
-		}
-	}
-
-	static class JglfwDisplayMode extends DisplayMode {
-		protected JglfwDisplayMode (int width, int height, int refreshRate, int bitsPerPixel) {
-			super(width, height, refreshRate, bitsPerPixel);
-		}
-	}
-}
diff --git a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwInput.java b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwInput.java
deleted file mode 100644
index 71f2a1b..0000000
--- a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwInput.java
+++ /dev/null
@@ -1,781 +0,0 @@
-
-package com.badlogic.gdx.backends.jglfw;
-
-import static com.badlogic.jglfw.Glfw.*;
-
-import com.badlogic.gdx.Input;
-import com.badlogic.gdx.InputProcessor;
-import com.badlogic.gdx.InputProcessorQueue;
-import com.badlogic.jglfw.GlfwCallbackAdapter;
-
-import java.awt.Color;
-import java.awt.FlowLayout;
-import java.awt.event.WindowEvent;
-import java.awt.event.WindowFocusListener;
-
-import javax.swing.JDialog;
-import javax.swing.JLabel;
-import javax.swing.JOptionPane;
-import javax.swing.JPanel;
-import javax.swing.JTextField;
-import javax.swing.OverlayLayout;
-import javax.swing.SwingUtilities;
-import javax.swing.border.EmptyBorder;
-import javax.swing.event.DocumentEvent;
-import javax.swing.event.DocumentListener;
-
-/** An implementation of the {@link Input} interface hooking GLFW panel for input.
- * @author mzechner
- * @author Nathan Sweet */
-public class JglfwInput implements Input {
-	final JglfwApplication app;
-	final InputProcessorQueue processorQueue;
-	InputProcessor processor;
-	int pressedKeys = 0;
-	boolean justTouched;
-	int deltaX, deltaY;
-	long currentEventTime;
-
-	public JglfwInput (final JglfwApplication app, boolean queueEvents) {
-		this.app = app;
-
-		InputProcessor inputProcessor = new InputProcessor() {
-			private int mouseX, mouseY;
-
-			public boolean keyDown (int keycode) {
-				pressedKeys++;
-				app.graphics.requestRendering();
-				return processor != null ? processor.keyDown(keycode) : false;
-			}
-
-			public boolean keyUp (int keycode) {
-				pressedKeys--;
-				app.graphics.requestRendering();
-				return processor != null ? processor.keyUp(keycode) : false;
-			}
-
-			public boolean keyTyped (char character) {
-				app.graphics.requestRendering();
-				return processor != null ? processor.keyTyped(character) : false;
-			}
-
-			public boolean touchDown (int screenX, int screenY, int pointer, int button) {
-				justTouched = true;
-				app.graphics.requestRendering();
-				return processor != null ? processor.touchDown(screenX, screenY, pointer, button) : false;
-			}
-
-			public boolean touchUp (int screenX, int screenY, int pointer, int button) {
-				app.graphics.requestRendering();
-				return processor != null ? processor.touchUp(screenX, screenY, pointer, button) : false;
-			}
-
-			public boolean touchDragged (int screenX, int screenY, int pointer) {
-				deltaX = screenX - mouseX;
-				deltaY = screenY - mouseY;
-				mouseX = screenX;
-				mouseY = screenY;
-				app.graphics.requestRendering();
-				return processor != null ? processor.touchDragged(mouseX, mouseY, 0) : false;
-			}
-
-			public boolean mouseMoved (int screenX, int screenY) {
-				deltaX = screenX - mouseX;
-				deltaY = screenY - mouseX;
-				mouseX = screenX;
-				mouseY = screenY;
-				app.graphics.requestRendering();
-				return processor != null ? processor.mouseMoved(mouseX, mouseY) : false;
-			}
-
-			public boolean scrolled (int amount) {
-				app.graphics.requestRendering();
-				return processor != null ? processor.scrolled(amount) : false;
-			}
-		};
-
-		if (queueEvents)
-			inputProcessor = processorQueue = new InputProcessorQueue(inputProcessor);
-		else
-			processorQueue = null;
-
-		app.getCallbacks().add(new GlfwInputProcessor(inputProcessor));
-	}
-
-	public void update () {
-		justTouched = false;
-		if (processorQueue != null)
-			processorQueue.drain(); // Main loop is handled elsewhere and events are queued.
-		else {
-			currentEventTime = System.nanoTime();
-			glfwPollEvents(); // Use GLFW main loop to process events.
-		}
-	}
-
-	public float getAccelerometerX () {
-		return 0;
-	}
-
-	public float getAccelerometerY () {
-		return 0;
-	}
-
-	public float getAccelerometerZ () {
-		return 0;
-	}
-
-	public int getX () {
-		return glfwGetCursorPosX(app.graphics.window);
-	}
-
-	public int getX (int pointer) {
-		return pointer > 0 ? 0 : getX();
-	}
-
-	public int getY () {
-		return glfwGetCursorPosY(app.graphics.window);
-	}
-
-	public int getY (int pointer) {
-		return pointer > 0 ? 0 : getY();
-	}
-
-	public int getDeltaX () {
-		return deltaX;
-	}
-
-	public int getDeltaX (int pointer) {
-		return pointer > 0 ? 0 : deltaX;
-	}
-
-	public int getDeltaY () {
-		return deltaY;
-	}
-
-	public int getDeltaY (int pointer) {
-		return pointer > 0 ? 0 : deltaY;
-	}
-
-	public boolean isTouched () {
-		return glfwGetMouseButton(app.graphics.window, 0) || glfwGetMouseButton(app.graphics.window, 1)
-			|| glfwGetMouseButton(app.graphics.window, 2);
-	}
-
-	public boolean isTouched (int pointer) {
-		return pointer > 0 ? false : isTouched();
-	}
-
-	public boolean justTouched () {
-		return justTouched;
-	}
-
-	public boolean isButtonPressed (int button) {
-		return glfwGetMouseButton(app.graphics.window, button);
-	}
-
-	public boolean isKeyPressed (int key) {
-		if (key == Input.Keys.ANY_KEY) return pressedKeys > 0;
-		return glfwGetKey(app.graphics.window, getJglfwKeyCode(key));
-	}
-
-	public void setOnscreenKeyboardVisible (boolean visible) {
-	}
-
-	public void vibrate (int milliseconds) {
-	}
-
-	public void vibrate (long[] pattern, int repeat) {
-	}
-
-	public void cancelVibrate () {
-	}
-
-	public float getAzimuth () {
-		return 0;
-	}
-
-	public float getPitch () {
-		return 0;
-	}
-
-	public float getRoll () {
-		return 0;
-	}
-
-	public void getRotationMatrix (float[] matrix) {
-	}
-
-	public long getCurrentEventTime () {
-		return processorQueue != null ? processorQueue.getCurrentEventTime() : currentEventTime;
-	}
-
-	public void setCatchBackKey (boolean catchBack) {
-	}
-
-	public void setCatchMenuKey (boolean catchMenu) {
-	}
-
-	public void setInputProcessor (InputProcessor processor) {
-		this.processor = processor;
-	}
-
-	public InputProcessor getInputProcessor () {
-		return processor;
-	}
-
-	public boolean isPeripheralAvailable (Peripheral peripheral) {
-		return peripheral == Peripheral.HardwareKeyboard;
-	}
-
-	public int getRotation () {
-		return 0;
-	}
-
-	public Orientation getNativeOrientation () {
-		return Orientation.Landscape;
-	}
-
-	public void setCursorCatched (boolean captured) {
-		glfwSetInputMode(app.graphics.window, GLFW_CURSOR_MODE, captured ? GLFW_CURSOR_CAPTURED : GLFW_CURSOR_NORMAL);
-	}
-
-	public boolean isCursorCatched () {
-		return glfwGetInputMode(app.graphics.window, GLFW_CURSOR_MODE) == GLFW_CURSOR_CAPTURED;
-	}
-
-	public void setCursorPosition (int x, int y) {
-		glfwSetCursorPos(app.graphics.window, x, y);
-	}
-
-	public void getTextInput (final TextInputListener listener, final String title, final String text) {
-		SwingUtilities.invokeLater(new Runnable() {
-			public void run () {
-				final String output = JOptionPane.showInputDialog(null, title, text);
-				app.postRunnable(new Runnable() {
-					public void run () {
-						if (output != null)
-							listener.input(output);
-						else
-							listener.canceled();
-					}
-				});
-			}
-		});
-	}
-
-	public void getPlaceholderTextInput (final TextInputListener listener, final String title, final String placeholder) {
-		SwingUtilities.invokeLater(new Runnable() {
-			public void run () {
-				JPanel panel = new JPanel(new FlowLayout());
-
-				JPanel textPanel = new JPanel() {
-					public boolean isOptimizedDrawingEnabled () {
-						return false;
-					};
-				};
-				textPanel.setLayout(new OverlayLayout(textPanel));
-				panel.add(textPanel);
-
-				final JTextField textField = new JTextField(20);
-				textField.setAlignmentX(0.0f);
-				textPanel.add(textField);
-
-				final JLabel placeholderLabel = new JLabel(placeholder);
-				placeholderLabel.setForeground(Color.GRAY);
-				placeholderLabel.setAlignmentX(0.0f);
-				textPanel.add(placeholderLabel, 0);
-
-				textField.getDocument().addDocumentListener(new DocumentListener() {
-					public void removeUpdate (DocumentEvent event) {
-						this.updated();
-					}
-
-					public void insertUpdate (DocumentEvent event) {
-						this.updated();
-					}
-
-					public void changedUpdate (DocumentEvent event) {
-						this.updated();
-					}
-
-					private void updated () {
-						placeholderLabel.setVisible(textField.getText().length() == 0);
-					}
-				});
-
-				JOptionPane pane = new JOptionPane(panel, JOptionPane.QUESTION_MESSAGE, JOptionPane.OK_CANCEL_OPTION, null, null,
-					null);
-				pane.setComponentOrientation(JOptionPane.getRootFrame().getComponentOrientation());
-				pane.selectInitialValue();
-
-				placeholderLabel.setBorder(new EmptyBorder(textField.getBorder().getBorderInsets(textField)));
-
-				JDialog dialog = pane.createDialog(null, title);
-				dialog.addWindowFocusListener(new WindowFocusListener() {
-					public void windowLostFocus (WindowEvent arg0) {
-					}
-
-					public void windowGainedFocus (WindowEvent arg0) {
-						textField.requestFocusInWindow();
-					}
-				});
-				dialog.setVisible(true);
-				dialog.dispose();
-
-				Object selectedValue = pane.getValue();
-				if (selectedValue != null && (selectedValue instanceof Integer) && (Integer)selectedValue == JOptionPane.OK_OPTION)
-					listener.input(textField.getText());
-				else
-					listener.canceled();
-			}
-		});
-	}
-
-	static char characterForKeyCode (int key) {
-		// Map certain key codes to character codes.
-		switch (key) {
-		case Keys.BACKSPACE:
-			return 8;
-		case Keys.TAB:
-			return '\t';
-		case Keys.FORWARD_DEL:
-			return 127;
-		}
-		return 0;
-	}
-
-	static public int getGdxKeyCode (int lwjglKeyCode) {
-		switch (lwjglKeyCode) {
-		case GLFW_KEY_LEFT_BRACKET:
-			return Input.Keys.LEFT_BRACKET;
-		case GLFW_KEY_RIGHT_BRACKET:
-			return Input.Keys.RIGHT_BRACKET;
-		case GLFW_KEY_GRAVE_ACCENT:
-			return Input.Keys.GRAVE;
-		case GLFW_KEY_KP_MULTIPLY:
-			return Input.Keys.STAR;
-		case GLFW_KEY_NUM_LOCK:
-			return Input.Keys.NUM;
-		case GLFW_KEY_KP_DECIMAL:
-			return Input.Keys.PERIOD;
-		case GLFW_KEY_KP_DIVIDE:
-			return Input.Keys.SLASH;
-		case GLFW_KEY_MENU:
-			return Input.Keys.MENU;
-		case GLFW_KEY_RIGHT_SUPER:
-			return Input.Keys.SYM;
-		case GLFW_KEY_LEFT_SUPER:
-			return Input.Keys.SYM;
-		case GLFW_KEY_KP_EQUAL:
-			return Input.Keys.EQUALS;
-		case GLFW_KEY_EQUAL:
-			return Input.Keys.EQUALS;
-		case GLFW_KEY_KP_ENTER:
-			return Input.Keys.ENTER;
-		case GLFW_KEY_0:
-			return Input.Keys.NUM_0;
-		case GLFW_KEY_1:
-			return Input.Keys.NUM_1;
-		case GLFW_KEY_2:
-			return Input.Keys.NUM_2;
-		case GLFW_KEY_3:
-			return Input.Keys.NUM_3;
-		case GLFW_KEY_4:
-			return Input.Keys.NUM_4;
-		case GLFW_KEY_5:
-			return Input.Keys.NUM_5;
-		case GLFW_KEY_6:
-			return Input.Keys.NUM_6;
-		case GLFW_KEY_7:
-			return Input.Keys.NUM_7;
-		case GLFW_KEY_8:
-			return Input.Keys.NUM_8;
-		case GLFW_KEY_9:
-			return Input.Keys.NUM_9;
-		case GLFW_KEY_A:
-			return Input.Keys.A;
-		case GLFW_KEY_B:
-			return Input.Keys.B;
-		case GLFW_KEY_C:
-			return Input.Keys.C;
-		case GLFW_KEY_D:
-			return Input.Keys.D;
-		case GLFW_KEY_E:
-			return Input.Keys.E;
-		case GLFW_KEY_F:
-			return Input.Keys.F;
-		case GLFW_KEY_G:
-			return Input.Keys.G;
-		case GLFW_KEY_H:
-			return Input.Keys.H;
-		case GLFW_KEY_I:
-			return Input.Keys.I;
-		case GLFW_KEY_J:
-			return Input.Keys.J;
-		case GLFW_KEY_K:
-			return Input.Keys.K;
-		case GLFW_KEY_L:
-			return Input.Keys.L;
-		case GLFW_KEY_M:
-			return Input.Keys.M;
-		case GLFW_KEY_N:
-			return Input.Keys.N;
-		case GLFW_KEY_O:
-			return Input.Keys.O;
-		case GLFW_KEY_P:
-			return Input.Keys.P;
-		case GLFW_KEY_Q:
-			return Input.Keys.Q;
-		case GLFW_KEY_R:
-			return Input.Keys.R;
-		case GLFW_KEY_S:
-			return Input.Keys.S;
-		case GLFW_KEY_T:
-			return Input.Keys.T;
-		case GLFW_KEY_U:
-			return Input.Keys.U;
-		case GLFW_KEY_V:
-			return Input.Keys.V;
-		case GLFW_KEY_W:
-			return Input.Keys.W;
-		case GLFW_KEY_X:
-			return Input.Keys.X;
-		case GLFW_KEY_Y:
-			return Input.Keys.Y;
-		case GLFW_KEY_Z:
-			return Input.Keys.Z;
-		case GLFW_KEY_LALT:
-			return Input.Keys.ALT_LEFT;
-		case GLFW_KEY_RALT:
-			return Input.Keys.ALT_RIGHT;
-		case GLFW_KEY_BACKSLASH:
-			return Input.Keys.BACKSLASH;
-		case GLFW_KEY_COMMA:
-			return Input.Keys.COMMA;
-		case GLFW_KEY_DELETE:
-			return Input.Keys.FORWARD_DEL;
-		case GLFW_KEY_LEFT:
-			return Input.Keys.DPAD_LEFT;
-		case GLFW_KEY_RIGHT:
-			return Input.Keys.DPAD_RIGHT;
-		case GLFW_KEY_UP:
-			return Input.Keys.DPAD_UP;
-		case GLFW_KEY_DOWN:
-			return Input.Keys.DPAD_DOWN;
-		case GLFW_KEY_ENTER:
-			return Input.Keys.ENTER;
-		case GLFW_KEY_HOME:
-			return Input.Keys.HOME;
-		case GLFW_KEY_MINUS:
-			return Input.Keys.MINUS;
-		case GLFW_KEY_PERIOD:
-			return Input.Keys.PERIOD;
-		case GLFW_KEY_KP_ADD:
-			return Input.Keys.PLUS;
-		case GLFW_KEY_SEMICOLON:
-			return Input.Keys.SEMICOLON;
-		case GLFW_KEY_LSHIFT:
-			return Input.Keys.SHIFT_LEFT;
-		case GLFW_KEY_RSHIFT:
-			return Input.Keys.SHIFT_RIGHT;
-		case GLFW_KEY_SLASH:
-			return Input.Keys.SLASH;
-		case GLFW_KEY_SPACE:
-			return Input.Keys.SPACE;
-		case GLFW_KEY_TAB:
-			return Input.Keys.TAB;
-		case GLFW_KEY_LEFT_CONTROL:
-			return Input.Keys.CONTROL_LEFT;
-		case GLFW_KEY_RIGHT_CONTROL:
-			return Input.Keys.CONTROL_RIGHT;
-		case GLFW_KEY_ESCAPE:
-			return Input.Keys.ESCAPE;
-		case GLFW_KEY_END:
-			return Input.Keys.END;
-		case GLFW_KEY_INSERT:
-			return Input.Keys.INSERT;
-		case GLFW_KEY_BACKSPACE:
-			return Input.Keys.DEL;
-		case GLFW_KEY_KP_SUBTRACT:
-			return Input.Keys.MINUS;
-		case GLFW_KEY_APOSTROPHE:
-			return Input.Keys.APOSTROPHE;
-		case GLFW_KEY_F1:
-			return Input.Keys.F1;
-		case GLFW_KEY_F2:
-			return Input.Keys.F2;
-		case GLFW_KEY_F3:
-			return Input.Keys.F3;
-		case GLFW_KEY_F4:
-			return Input.Keys.F4;
-		case GLFW_KEY_F5:
-			return Input.Keys.F5;
-		case GLFW_KEY_F6:
-			return Input.Keys.F6;
-		case GLFW_KEY_F7:
-			return Input.Keys.F7;
-		case GLFW_KEY_F8:
-			return Input.Keys.F8;
-		case GLFW_KEY_F9:
-			return Input.Keys.F9;
-		case GLFW_KEY_F10:
-			return Input.Keys.F10;
-		case GLFW_KEY_F11:
-			return Input.Keys.F11;
-		case GLFW_KEY_F12:
-			return Input.Keys.F12;
-		case GLFW_KEY_KP_0:
-			return Input.Keys.NUM_0;
-		case GLFW_KEY_KP_1:
-			return Input.Keys.NUM_1;
-		case GLFW_KEY_KP_2:
-			return Input.Keys.NUM_2;
-		case GLFW_KEY_KP_3:
-			return Input.Keys.NUM_3;
-		case GLFW_KEY_KP_4:
-			return Input.Keys.NUM_4;
-		case GLFW_KEY_KP_5:
-			return Input.Keys.NUM_5;
-		case GLFW_KEY_KP_6:
-			return Input.Keys.NUM_6;
-		case GLFW_KEY_KP_7:
-			return Input.Keys.NUM_7;
-		case GLFW_KEY_KP_8:
-			return Input.Keys.NUM_8;
-		case GLFW_KEY_KP_9:
-			return Input.Keys.NUM_9;
-		default:
-			return Input.Keys.UNKNOWN;
-		}
-	}
-
-	static public int getJglfwKeyCode (int gdxKeyCode) {
-		switch (gdxKeyCode) {
-		case Input.Keys.LEFT_BRACKET:
-			return GLFW_KEY_LEFT_BRACKET;
-		case Input.Keys.RIGHT_BRACKET:
-			return GLFW_KEY_RIGHT_BRACKET;
-		case Input.Keys.GRAVE:
-			return GLFW_KEY_GRAVE_ACCENT;
-		case Input.Keys.STAR:
-			return GLFW_KEY_KP_MULTIPLY;
-		case Input.Keys.NUM:
-			return GLFW_KEY_NUM_LOCK;
-		case Input.Keys.EQUALS:
-			return GLFW_KEY_MENU;
-		case Input.Keys.MENU:
-			return GLFW_KEY_MENU;
-		case Input.Keys.SYM:
-			return GLFW_KEY_LEFT_SUPER;
-		case Input.Keys.NUM_0:
-			return GLFW_KEY_0;
-		case Input.Keys.NUM_1:
-			return GLFW_KEY_1;
-		case Input.Keys.NUM_2:
-			return GLFW_KEY_2;
-		case Input.Keys.NUM_3:
-			return GLFW_KEY_3;
-		case Input.Keys.NUM_4:
-			return GLFW_KEY_4;
-		case Input.Keys.NUM_5:
-			return GLFW_KEY_5;
-		case Input.Keys.NUM_6:
-			return GLFW_KEY_6;
-		case Input.Keys.NUM_7:
-			return GLFW_KEY_7;
-		case Input.Keys.NUM_8:
-			return GLFW_KEY_8;
-		case Input.Keys.NUM_9:
-			return GLFW_KEY_9;
-		case Input.Keys.A:
-			return GLFW_KEY_A;
-		case Input.Keys.B:
-			return GLFW_KEY_B;
-		case Input.Keys.C:
-			return GLFW_KEY_C;
-		case Input.Keys.D:
-			return GLFW_KEY_D;
-		case Input.Keys.E:
-			return GLFW_KEY_E;
-		case Input.Keys.F:
-			return GLFW_KEY_F;
-		case Input.Keys.G:
-			return GLFW_KEY_G;
-		case Input.Keys.H:
-			return GLFW_KEY_H;
-		case Input.Keys.I:
-			return GLFW_KEY_I;
-		case Input.Keys.J:
-			return GLFW_KEY_J;
-		case Input.Keys.K:
-			return GLFW_KEY_K;
-		case Input.Keys.L:
-			return GLFW_KEY_L;
-		case Input.Keys.M:
-			return GLFW_KEY_M;
-		case Input.Keys.N:
-			return GLFW_KEY_N;
-		case Input.Keys.O:
-			return GLFW_KEY_O;
-		case Input.Keys.P:
-			return GLFW_KEY_P;
-		case Input.Keys.Q:
-			return GLFW_KEY_Q;
-		case Input.Keys.R:
-			return GLFW_KEY_R;
-		case Input.Keys.S:
-			return GLFW_KEY_S;
-		case Input.Keys.T:
-			return GLFW_KEY_T;
-		case Input.Keys.U:
-			return GLFW_KEY_U;
-		case Input.Keys.V:
-			return GLFW_KEY_V;
-		case Input.Keys.W:
-			return GLFW_KEY_W;
-		case Input.Keys.X:
-			return GLFW_KEY_X;
-		case Input.Keys.Y:
-			return GLFW_KEY_Y;
-		case Input.Keys.Z:
-			return GLFW_KEY_Z;
-		case Input.Keys.ALT_LEFT:
-			return GLFW_KEY_LALT;
-		case Input.Keys.ALT_RIGHT:
-			return GLFW_KEY_RALT;
-		case Input.Keys.BACKSLASH:
-			return GLFW_KEY_BACKSLASH;
-		case Input.Keys.COMMA:
-			return GLFW_KEY_COMMA;
-		case Input.Keys.FORWARD_DEL:
-			return GLFW_KEY_DELETE;
-		case Input.Keys.DPAD_LEFT:
-			return GLFW_KEY_LEFT;
-		case Input.Keys.DPAD_RIGHT:
-			return GLFW_KEY_RIGHT;
-		case Input.Keys.DPAD_UP:
-			return GLFW_KEY_UP;
-		case Input.Keys.DPAD_DOWN:
-			return GLFW_KEY_DOWN;
-		case Input.Keys.ENTER:
-			return GLFW_KEY_ENTER;
-		case Input.Keys.HOME:
-			return GLFW_KEY_HOME;
-		case Input.Keys.MINUS:
-			return GLFW_KEY_MINUS;
-		case Input.Keys.PERIOD:
-			return GLFW_KEY_PERIOD;
-		case Input.Keys.PLUS:
-			return GLFW_KEY_KP_ADD;
-		case Input.Keys.SEMICOLON:
-			return GLFW_KEY_SEMICOLON;
-		case Input.Keys.SHIFT_LEFT:
-			return GLFW_KEY_LSHIFT;
-		case Input.Keys.SHIFT_RIGHT:
-			return GLFW_KEY_RSHIFT;
-		case Input.Keys.SLASH:
-			return GLFW_KEY_SLASH;
-		case Input.Keys.SPACE:
-			return GLFW_KEY_SPACE;
-		case Input.Keys.TAB:
-			return GLFW_KEY_TAB;
-		case Input.Keys.DEL:
-			return GLFW_KEY_BACKSPACE;
-		case Input.Keys.CONTROL_LEFT:
-			return GLFW_KEY_LEFT_CONTROL;
-		case Input.Keys.CONTROL_RIGHT:
-			return GLFW_KEY_RIGHT_CONTROL;
-		case Input.Keys.ESCAPE:
-			return GLFW_KEY_ESCAPE;
-		case Input.Keys.F1:
-			return GLFW_KEY_F1;
-		case Input.Keys.F2:
-			return GLFW_KEY_F2;
-		case Input.Keys.F3:
-			return GLFW_KEY_F3;
-		case Input.Keys.F4:
-			return GLFW_KEY_F4;
-		case Input.Keys.F5:
-			return GLFW_KEY_F5;
-		case Input.Keys.F6:
-			return GLFW_KEY_F6;
-		case Input.Keys.F7:
-			return GLFW_KEY_F7;
-		case Input.Keys.F8:
-			return GLFW_KEY_F8;
-		case Input.Keys.F9:
-			return GLFW_KEY_F9;
-		case Input.Keys.F10:
-			return GLFW_KEY_F10;
-		case Input.Keys.F11:
-			return GLFW_KEY_F11;
-		case Input.Keys.F12:
-			return GLFW_KEY_F12;
-		default:
-			return 0;
-		}
-	}
-
-	/** Receives GLFW input and calls InputProcessor methods.
-	 * @author Nathan Sweet */
-	static class GlfwInputProcessor extends GlfwCallbackAdapter {
-		private int mouseX, mouseY, mousePressed;
-		private char lastCharacter;
-		private InputProcessor processor;
-
-		public GlfwInputProcessor (InputProcessor processor) {
-			if (processor == null) throw new IllegalArgumentException("processor cannot be null.");
-			this.processor = processor;
-		}
-
-		public void key (long window, int key, int action) {
-			switch (action) {
-			case GLFW_PRESS:
-
-				key = getGdxKeyCode(key);
-				processor.keyDown(key);
-
-				lastCharacter = 0;
-				char character = characterForKeyCode(key);
-				if (character != 0) character(window, character);
-				break;
-
-			case GLFW_RELEASE:
-				processor.keyUp(getGdxKeyCode(key));
-				break;
-
-			case GLFW_REPEAT:
-				if (lastCharacter != 0) processor.keyTyped(lastCharacter);
-				break;
-			}
-		}
-
-		public void character (long window, char character) {
-			lastCharacter = character;
-			processor.keyTyped(character);
-		}
-
-		public void scroll (long window, double scrollX, double scrollY) {
-			processor.scrolled((int)-Math.signum(scrollY));
-		}
-
-		public void mouseButton (long window, int button, boolean pressed) {
-			if (pressed) {
-				mousePressed++;
-				processor.touchDown(mouseX, mouseY, 0, button);
-			} else {
-				mousePressed = Math.max(0, mousePressed - 1);
-				processor.touchUp(mouseX, mouseY, 0, button);
-			}
-		}
-
-		public void cursorPos (long window, int x, int y) {
-			mouseX = x;
-			mouseY = y;
-			if (mousePressed > 0)
-				processor.touchDragged(x, y, 0);
-			else
-				processor.mouseMoved(x, y);
-		}
-	}
-}
diff --git a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwNet.java b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwNet.java
deleted file mode 100644
index 1e6a01b..0000000
--- a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwNet.java
+++ /dev/null
@@ -1,59 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *	 http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-
-package com.badlogic.gdx.backends.jglfw;
-
-import com.badlogic.gdx.Net;
-import com.badlogic.gdx.net.NetJavaImpl;
-import com.badlogic.gdx.net.ServerSocket;
-import com.badlogic.gdx.net.ServerSocketHints;
-import com.badlogic.gdx.net.Socket;
-import com.badlogic.gdx.net.SocketHints;
-import com.badlogic.gdx.utils.GdxRuntimeException;
-
-import java.awt.Desktop;
-import java.net.URI;
-
-/** Desktop implementation of the {@link Net} API.
- * @author acoppes */
-public class JglfwNet implements Net {
-	NetJavaImpl netJavaImpl = new NetJavaImpl();
-
-	public void sendHttpRequest (HttpRequest httpRequest, HttpResponseListener httpResponseListener) {
-		netJavaImpl.sendHttpRequest(httpRequest, httpResponseListener);
-	}
-
-	public ServerSocket newServerSocket (Protocol protocol, int port, ServerSocketHints hints) {
-		return new JglfwServerSocket(protocol, port, hints);
-	}
-
-	public Socket newClientSocket (Protocol protocol, String host, int port, SocketHints hints) {
-		return new JglfwSocket(protocol, host, port, hints);
-	}
-
-	public void openURI (String uri) {
-		if (!Desktop.isDesktopSupported()) return;
-
-		Desktop desktop = Desktop.getDesktop();
-		if (!desktop.isSupported(Desktop.Action.BROWSE)) return;
-
-		try {
-			desktop.browse(new URI(uri));
-		} catch (Exception ex) {
-			throw new GdxRuntimeException(ex);
-		}
-	}
-}
diff --git a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwPreferences.java b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwPreferences.java
deleted file mode 100644
index 1f9918e..0000000
--- a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwPreferences.java
+++ /dev/null
@@ -1,175 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-
-package com.badlogic.gdx.backends.jglfw;
-
-import com.badlogic.gdx.Files.FileType;
-import com.badlogic.gdx.Preferences;
-import com.badlogic.gdx.files.FileHandle;
-import com.badlogic.gdx.utils.GdxRuntimeException;
-
-import java.io.BufferedInputStream;
-import java.io.BufferedOutputStream;
-import java.io.File;
-import java.io.InputStream;
-import java.io.OutputStream;
-import java.util.HashMap;
-import java.util.Map;
-import java.util.Map.Entry;
-import java.util.Properties;
-
-public class JglfwPreferences implements Preferences {
-	private final String name;
-	private final Properties properties = new Properties();
-	private final FileHandle file;
-
-	public JglfwPreferences (String name) {
-		this(new JglfwFileHandle(new File(".prefs/" + name), FileType.External));
-	}
-
-	public JglfwPreferences (FileHandle file) {
-		this.name = file.name();
-		this.file = file;
-		if (!file.exists()) return;
-		InputStream in = null;
-		try {
-			in = new BufferedInputStream(file.read());
-			properties.load(in);
-		} catch (Throwable ex) {
-			ex.printStackTrace();
-		} finally {
-			if (in != null) {
-				try {
-					in.close();
-				} catch (Exception ignored) {
-				}
-			}
-		}
-	}
-
-	public void putBoolean (String key, boolean val) {
-		properties.put(key, Boolean.toString(val));
-	}
-
-	public void putInteger (String key, int val) {
-		properties.put(key, Integer.toString(val));
-	}
-
-	public void putLong (String key, long val) {
-		properties.put(key, Long.toString(val));
-	}
-
-	public void putFloat (String key, float val) {
-		properties.put(key, Float.toString(val));
-	}
-
-	public void putString (String key, String val) {
-		properties.put(key, val);
-	}
-
-	public void put (Map<String, ?> vals) {
-		for (Entry<String, ?> val : vals.entrySet()) {
-			if (val.getValue() instanceof Boolean) putBoolean(val.getKey(), (Boolean)val.getValue());
-			if (val.getValue() instanceof Integer) putInteger(val.getKey(), (Integer)val.getValue());
-			if (val.getValue() instanceof Long) putLong(val.getKey(), (Long)val.getValue());
-			if (val.getValue() instanceof String) putString(val.getKey(), (String)val.getValue());
-			if (val.getValue() instanceof Float) putFloat(val.getKey(), (Float)val.getValue());
-		}
-	}
-
-	public boolean getBoolean (String key) {
-		return getBoolean(key, false);
-	}
-
-	public int getInteger (String key) {
-		return getInteger(key, 0);
-	}
-
-	public long getLong (String key) {
-		return getLong(key, 0);
-	}
-
-	public float getFloat (String key) {
-		return getFloat(key, 0);
-	}
-
-	public String getString (String key) {
-		return getString(key, "");
-	}
-
-	public boolean getBoolean (String key, boolean defValue) {
-		return Boolean.parseBoolean(properties.getProperty(key, Boolean.toString(defValue)));
-	}
-
-	public int getInteger (String key, int defValue) {
-		return Integer.parseInt(properties.getProperty(key, Integer.toString(defValue)));
-	}
-
-	public long getLong (String key, long defValue) {
-		return Long.parseLong(properties.getProperty(key, Long.toString(defValue)));
-	}
-
-	public float getFloat (String key, float defValue) {
-		return Float.parseFloat(properties.getProperty(key, Float.toString(defValue)));
-	}
-
-	public String getString (String key, String defValue) {
-		return properties.getProperty(key, defValue);
-	}
-
-	public Map<String, ?> get () {
-		Map<String, Object> map = new HashMap<String, Object>();
-		for (Entry<Object, Object> val : properties.entrySet()) {
-			if (val.getValue() instanceof Boolean)
-				map.put((String)val.getKey(), (Boolean)Boolean.parseBoolean((String)val.getValue()));
-			if (val.getValue() instanceof Integer) map.put((String)val.getKey(), (Integer)Integer.parseInt((String)val.getValue()));
-			if (val.getValue() instanceof Long) map.put((String)val.getKey(), (Long)Long.parseLong((String)val.getValue()));
-			if (val.getValue() instanceof String) map.put((String)val.getKey(), (String)val.getValue());
-			if (val.getValue() instanceof Float) map.put((String)val.getKey(), (Float)Float.parseFloat((String)val.getValue()));
-		}
-
-		return map;
-	}
-
-	public boolean contains (String key) {
-		return properties.containsKey(key);
-	}
-
-	public void clear () {
-		properties.clear();
-	}
-
-	public void flush () {
-		OutputStream out = null;
-		try {
-			out = new BufferedOutputStream(file.write(false));
-			properties.store(out, null);
-		} catch (Exception ex) {
-			throw new GdxRuntimeException("Error writing preferences: " + file, ex);
-		} finally {
-			if (out != null) {
-				try {
-					out.close();
-				} catch (Exception ignored) {
-				}
-			}
-		}
-	}
-
-	public void remove (String key) {
-		properties.remove(key);
-	}
-}
diff --git a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwServerSocket.java b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwServerSocket.java
deleted file mode 100644
index a13cfa0..0000000
--- a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwServerSocket.java
+++ /dev/null
@@ -1,85 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-
-package com.badlogic.gdx.backends.jglfw;
-
-import com.badlogic.gdx.Net.Protocol;
-import com.badlogic.gdx.net.ServerSocket;
-import com.badlogic.gdx.net.ServerSocketHints;
-import com.badlogic.gdx.net.Socket;
-import com.badlogic.gdx.net.SocketHints;
-import com.badlogic.gdx.utils.GdxRuntimeException;
-
-import java.net.InetSocketAddress;
-
-/** Server socket implementation using java.net.ServerSocket.
- * @author noblemaster */
-public class JglfwServerSocket implements ServerSocket {
-	private Protocol protocol;
-
-	/** Our server or null for disposed, aka closed. */
-	private java.net.ServerSocket server;
-
-	public JglfwServerSocket (Protocol protocol, int port, ServerSocketHints hints) {
-		this.protocol = protocol;
-
-		// create the server socket
-		try {
-			// initialize
-			server = new java.net.ServerSocket();
-			if (hints != null) {
-				server.setPerformancePreferences(hints.performancePrefConnectionTime, hints.performancePrefLatency,
-					hints.performancePrefBandwidth);
-				server.setReuseAddress(hints.reuseAddress);
-				server.setSoTimeout(hints.acceptTimeout);
-				server.setReceiveBufferSize(hints.receiveBufferSize);
-			}
-
-			// and bind the server...
-			InetSocketAddress address = new InetSocketAddress(port);
-			if (hints != null) {
-				server.bind(address, hints.backlog);
-			} else {
-				server.bind(address);
-			}
-		} catch (Exception e) {
-			throw new GdxRuntimeException("Cannot create a server socket at port " + port + ".", e);
-		}
-	}
-
-	public Protocol getProtocol () {
-		return protocol;
-	}
-
-	public Socket accept (SocketHints hints) {
-		try {
-			return new JglfwSocket(server.accept(), hints);
-		} catch (Exception e) {
-			throw new GdxRuntimeException("Error accepting socket.", e);
-		}
-	}
-
-	public void dispose () {
-		if (server != null) {
-			try {
-				server.close();
-				server = null;
-			} catch (Exception e) {
-				throw new GdxRuntimeException("Error closing server.", e);
-			}
-		}
-	}
-}
diff --git a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwSocket.java b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwSocket.java
deleted file mode 100644
index 4bd4dd2..0000000
--- a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwSocket.java
+++ /dev/null
@@ -1,109 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-
-package com.badlogic.gdx.backends.jglfw;
-
-import com.badlogic.gdx.Net.Protocol;
-import com.badlogic.gdx.net.Socket;
-import com.badlogic.gdx.net.SocketHints;
-import com.badlogic.gdx.utils.GdxRuntimeException;
-
-import java.io.InputStream;
-import java.io.OutputStream;
-import java.net.InetSocketAddress;
-
-/** Socket implementation using java.net.Socket.
- * @author noblemaster */
-public class JglfwSocket implements Socket {
-
-	/** Our socket or null for disposed, aka closed. */
-	private java.net.Socket socket;
-
-	public JglfwSocket (Protocol protocol, String host, int port, SocketHints hints) {
-		try {
-			// create the socket
-			socket = new java.net.Socket();
-			applyHints(hints); // better to call BEFORE socket is connected!
-
-			// and connect...
-			InetSocketAddress address = new InetSocketAddress(host, port);
-			if (hints != null) {
-				socket.connect(address, hints.connectTimeout);
-			} else {
-				socket.connect(address);
-			}
-		} catch (Exception e) {
-			throw new GdxRuntimeException("Error making a socket connection to " + host + ":" + port, e);
-		}
-	}
-
-	public JglfwSocket (java.net.Socket socket, SocketHints hints) {
-		this.socket = socket;
-		applyHints(hints);
-	}
-
-	private void applyHints (SocketHints hints) {
-		if (hints != null) {
-			try {
-				socket.setPerformancePreferences(hints.performancePrefConnectionTime, hints.performancePrefLatency,
-					hints.performancePrefBandwidth);
-				socket.setTrafficClass(hints.trafficClass);
-				socket.setTcpNoDelay(hints.tcpNoDelay);
-				socket.setKeepAlive(hints.keepAlive);
-				socket.setSendBufferSize(hints.sendBufferSize);
-				socket.setReceiveBufferSize(hints.receiveBufferSize);
-				socket.setSoLinger(hints.linger, hints.lingerDuration);
-			} catch (Exception e) {
-				throw new GdxRuntimeException("Error setting socket hints.", e);
-			}
-		}
-	}
-
-	public boolean isConnected () {
-		if (socket != null) {
-			return socket.isConnected();
-		} else {
-			return false;
-		}
-	}
-
-	public InputStream getInputStream () {
-		try {
-			return socket.getInputStream();
-		} catch (Exception e) {
-			throw new GdxRuntimeException("Error getting input stream from socket.", e);
-		}
-	}
-
-	public OutputStream getOutputStream () {
-		try {
-			return socket.getOutputStream();
-		} catch (Exception e) {
-			throw new GdxRuntimeException("Error getting output stream from socket.", e);
-		}
-	}
-
-	public void dispose () {
-		if (socket != null) {
-			try {
-				socket.close();
-				socket = null;
-			} catch (Exception e) {
-				throw new GdxRuntimeException("Error closing socket.", e);
-			}
-		}
-	}
-}
diff --git a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwUtil.java b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwUtil.java
deleted file mode 100644
index b1c4eaa..0000000
--- a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwUtil.java
+++ /dev/null
@@ -1,62 +0,0 @@
-
-package com.badlogic.gdx.backends.jglfw;
-
-import java.nio.ByteBuffer;
-import java.nio.ByteOrder;
-import java.nio.FloatBuffer;
-import java.nio.IntBuffer;
-
-class JglfwUtil {
-	static private ByteBuffer buffer = ByteBuffer.allocateDirect(8 * 4).order(ByteOrder.nativeOrder());
-	static private IntBuffer bufferInt = buffer.asIntBuffer();
-	static private FloatBuffer bufferFloat = buffer.asFloatBuffer();
-
-	static private void ensureSize (int n) {
-		if (buffer.capacity() < n) {
-			buffer = ByteBuffer.allocateDirect(n).order(ByteOrder.nativeOrder());
-			bufferInt = buffer.asIntBuffer();
-			bufferFloat = buffer.asFloatBuffer();
-		}
-	}
-
-	static ByteBuffer toBuffer (boolean[] src, int offset) {
-		int n = src.length - offset;
-		ensureSize(n);
-		buffer.position(0);
-		for (boolean value : src)
-			buffer.put(value ? (byte)1 : 0);
-		return buffer;
-	}
-
-	static IntBuffer toBuffer (int[] src, int offset) {
-		int n = src.length - offset;
-		ensureSize(n * 4);
-		bufferInt.position(0);
-		bufferInt.put(src, offset, n);
-		return bufferInt;
-	}
-
-	static FloatBuffer toBuffer (float[] src, int offset) {
-		int n = src.length - offset;
-		ensureSize(n * 4);
-		bufferFloat.position(0);
-		bufferFloat.put(src, offset, n);
-		return bufferFloat;
-	}
-
-	static void toArray (ByteBuffer src, boolean[] dst, int offset) {
-		for (int i = 0; i < dst.length - offset; i++) {
-			dst[i + offset] = src.get(i) != 0;
-		}
-	}
-
-	static void toArray (IntBuffer src, int[] dst, int offset) {
-		src.position(0);
-		src.get(dst, offset, dst.length - offset);
-	}
-
-	static void toArray (FloatBuffer src, float[] dst, int offset) {
-		src.position(0);
-		src.get(dst, offset, dst.length - offset);
-	}
-}
diff --git a/backends/gdx-backend-lwjgl/.classpath b/backends/gdx-backend-lwjgl/.classpath
index d0e9f88..606a7cd 100644
--- a/backends/gdx-backend-lwjgl/.classpath
+++ b/backends/gdx-backend-lwjgl/.classpath
@@ -3,7 +3,8 @@
 	<classpathentry excluding="**/.svn/*" kind="src" path="src"/>
 	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6"/>
 	<classpathentry exported="true" kind="lib" path="/gdx/libs/gdx-natives.jar"/>
-	<classpathentry exported="true" kind="lib" path="libs/gdx-backend-lwjgl-natives.jar"/>
+	<classpathentry kind="lib" path="libs/gdx-backend-lwjgl-natives.jar"/>
 	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx-openal"/>
+	<classpathentry kind="lib" path="libs/lwjgl_util.jar"/>
 	<classpathentry kind="output" path="bin"/>
 </classpath>
diff --git a/backends/gdx-backend-lwjgl/libs/lwjgl_util.jar b/backends/gdx-backend-lwjgl/libs/lwjgl_util.jar
new file mode 100644
index 0000000..b4fd4a6
Binary files /dev/null and b/backends/gdx-backend-lwjgl/libs/lwjgl_util.jar differ
diff --git a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglAWTCanvas.java b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglAWTCanvas.java
index 46fca94..e3c6429 100644
--- a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglAWTCanvas.java
+++ b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglAWTCanvas.java
@@ -149,11 +149,6 @@ public class LwjglAWTCanvas implements Application {
 
 	protected void setTitle (String title) {
 	}
-	
-	@Override
-	public ApplicationListener getApplicationListener () {
-		return listener;
-	}
 
 	public Canvas getCanvas () {
 		return canvas;
@@ -398,15 +393,6 @@ public class LwjglAWTCanvas implements Application {
 		}
 	}
 
-	/** Test whether the canvas' context is current. */
-	public boolean isCurrent() {
-		try {
-			return canvas.isCurrent();
-		} catch (LWJGLException ex) {
-			throw new GdxRuntimeException(ex);
-		}
-	}
-
 	/** @param cursor May be null. */
 	public void setCursor (Cursor cursor) {
 		this.cursor = cursor;
diff --git a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglApplication.java b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglApplication.java
index 3cafb5b..588cd09 100644
--- a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglApplication.java
+++ b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglApplication.java
@@ -57,7 +57,7 @@ public class LwjglApplication implements Application {
 	}
 
 	public LwjglApplication (ApplicationListener listener) {
-		this(listener, listener.getClass().getSimpleName(), 640, 480, false);
+		this(listener, new LwjglApplicationConfiguration());
 	}
 
 	public LwjglApplication (ApplicationListener listener, LwjglApplicationConfiguration config) {
@@ -110,10 +110,7 @@ public class LwjglApplication implements Application {
 					LwjglApplication.this.mainLoop();
 				} catch (Throwable t) {
 					if (audio != null) audio.dispose();
-					if (t instanceof RuntimeException)
-						throw (RuntimeException)t;
-					else
-						throw new GdxRuntimeException(t);
+					throw new GdxRuntimeException(t);
 				}
 			}
 		};
@@ -200,8 +197,8 @@ public class LwjglApplication implements Application {
 		}
 
 		Array<LifecycleListener> listeners = lifecycleListeners;
-		synchronized (listeners) {
-			for (LifecycleListener listener : listeners) {
+		synchronized(listeners) {
+			for(LifecycleListener listener: listeners) {
 				listener.pause();
 				listener.dispose();
 			}
@@ -214,11 +211,6 @@ public class LwjglApplication implements Application {
 	}
 
 	@Override
-	public ApplicationListener getApplicationListener () {
-		return listener;
-	}
-
-	@Override
 	public Audio getAudio () {
 		return audio;
 	}
@@ -355,18 +347,18 @@ public class LwjglApplication implements Application {
 			}
 		});
 	}
-
+	
 	@Override
 	public void addLifecycleListener (LifecycleListener listener) {
-		synchronized (lifecycleListeners) {
+		synchronized(lifecycleListeners) {
 			lifecycleListeners.add(listener);
 		}
 	}
 
 	@Override
 	public void removeLifecycleListener (LifecycleListener listener) {
-		synchronized (lifecycleListeners) {
+		synchronized(lifecycleListeners) {
 			lifecycleListeners.removeValue(listener, true);
-		}
+		}		
 	}
 }
diff --git a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglApplicationConfiguration.java b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglApplicationConfiguration.java
index 13e8658..72d2cea 100644
--- a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglApplicationConfiguration.java
+++ b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglApplicationConfiguration.java
@@ -41,13 +41,13 @@ public class LwjglApplicationConfiguration {
 	/** number of samples for MSAA **/
 	public int samples = 0;
 	/** width & height of application window **/
-	public int width = 640, height = 480;
+	public int width = 480, height = 320;
 	/** x & y of application window, -1 for center **/
 	public int x = -1, y = -1;
 	/** fullscreen **/
 	public boolean fullscreen = false;
 	/** whether to use CPU synching. If this is false display vsynching is used, which might not work in windowed mode **/
-	public boolean useCPUSynch = false;
+	public boolean useCPUSynch = true;
 	/** whether to enable vsync, can be changed at runtime via {@link Graphics#setVSync(boolean)} **/
 	public boolean vSyncEnabled = true;
 	/** title of application **/
diff --git a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglCanvas.java b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglCanvas.java
index d50b239..10390e1 100644
--- a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglCanvas.java
+++ b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglCanvas.java
@@ -64,7 +64,7 @@ public class LwjglCanvas implements Application {
 
 	public LwjglCanvas (ApplicationListener listener, boolean useGL2) {
 		LwjglApplicationConfiguration config = new LwjglApplicationConfiguration();
-		config.useGL20 = useGL2;
+		config.useGL20 = true;
 		initialize(listener, config);
 	}
 
@@ -76,7 +76,7 @@ public class LwjglCanvas implements Application {
 		LwjglNativesLoader.load();
 
 		canvas = new Canvas() {
-			private final Dimension minSize = new Dimension(1, 1);
+			private final Dimension minSize = new Dimension(0, 0);
 
 			public final void addNotify () {
 				super.addNotify();
@@ -99,7 +99,6 @@ public class LwjglCanvas implements Application {
 				return minSize;
 			}
 		};
-		canvas.setSize(1, 1);
 		canvas.setIgnoreRepaint(true);
 
 		graphics = new LwjglGraphics(canvas, config) {
@@ -140,11 +139,6 @@ public class LwjglCanvas implements Application {
 
 	protected void setTitle (String title) {
 	}
-	
-	@Override
-	public ApplicationListener getApplicationListener () {
-		return listener;
-	}
 
 	public Canvas getCanvas () {
 		return canvas;
@@ -196,7 +190,7 @@ public class LwjglCanvas implements Application {
 		} catch (Exception ex) {
 			stopped();
 			exception(ex);
-			return;
+			throw new GdxRuntimeException(ex);
 		}
 
 		EventQueue.invokeLater(new Runnable() {
diff --git a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGL20.java b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGL20.java
index 394ec92..6ea57e3 100644
--- a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGL20.java
+++ b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGL20.java
@@ -528,9 +528,7 @@ final class LwjglGL20 implements com.badlogic.gdx.graphics.GL20 {
 
 	public void glTexImage2D (int target, int level, int internalformat, int width, int height, int border, int format, int type,
 		Buffer pixels) {
-		if (pixels == null)
-			GL11.glTexImage2D(target, level, internalformat, width, height, border, format, type, (ByteBuffer)null);
-		else if (pixels instanceof ByteBuffer)
+		if (pixels instanceof ByteBuffer)
 			GL11.glTexImage2D(target, level, internalformat, width, height, border, format, type, (ByteBuffer)pixels);
 		else if (pixels instanceof ShortBuffer)
 			GL11.glTexImage2D(target, level, internalformat, width, height, border, format, type, (ShortBuffer)pixels);
diff --git a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGLU.java b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGLU.java
new file mode 100644
index 0000000..4ba33c8
--- /dev/null
+++ b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGLU.java
@@ -0,0 +1,98 @@
+/*******************************************************************************
+ * Copyright 2011 See AUTHORS file.
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/
+
+package com.badlogic.gdx.backends.lwjgl;
+
+import java.nio.FloatBuffer;
+import java.nio.IntBuffer;
+
+import org.lwjgl.BufferUtils;
+
+import com.badlogic.gdx.graphics.GL10;
+import com.badlogic.gdx.graphics.GLU;
+
+public class LwjglGLU implements GLU {
+
+	FloatBuffer modelb;
+	FloatBuffer projectb;
+	IntBuffer viewb;
+	FloatBuffer winb;
+
+	public LwjglGLU () {
+		modelb = BufferUtils.createFloatBuffer(16);
+		projectb = BufferUtils.createFloatBuffer(16);
+		viewb = BufferUtils.createIntBuffer(4);
+		winb = BufferUtils.createFloatBuffer(3);
+	}
+
+	@Override
+	public void gluLookAt (GL10 gl, float eyeX, float eyeY, float eyeZ, float centerX, float centerY, float centerZ, float upX,
+		float upY, float upZ) {
+		org.lwjgl.util.glu.GLU.gluLookAt(eyeX, eyeY, eyeZ, centerX, centerY, centerZ, upX, upY, upZ);
+	}
+
+	@Override
+	public void gluOrtho2D (GL10 gl, float left, float right, float bottom, float top) {
+		org.lwjgl.util.glu.GLU.gluOrtho2D(left, right, bottom, top);
+	}
+
+	@Override
+	public void gluPerspective (GL10 gl, float fovy, float aspect, float zNear, float zFar) {
+		org.lwjgl.util.glu.GLU.gluPerspective(fovy, aspect, zNear, zFar);
+	}
+
+	@Override
+	public boolean gluProject (float objX, float objY, float objZ, float[] model, int modelOffset, float[] project,
+		int projectOffset, int[] view, int viewOffset, float[] win, int winOffset) {
+		modelb.clear();
+		modelb.put(model, modelOffset, 16);
+		modelb.rewind();
+		projectb.clear();
+		projectb.put(project, projectOffset, 16);
+		projectb.rewind();
+		viewb.clear();
+		viewb.put(view, viewOffset, 4);
+		viewb.rewind();
+		winb.clear();
+
+		boolean result = org.lwjgl.util.glu.GLU.gluProject(objX, objY, objZ, modelb, projectb, viewb, winb);
+		win[winOffset] = winb.get(0);
+		win[winOffset + 1] = winb.get(1);
+		win[winOffset + 2] = winb.get(2);
+		return result;
+	}
+
+	@Override
+	public boolean gluUnProject (float winX, float winY, float winZ, float[] model, int modelOffset, float[] project,
+		int projectOffset, int[] view, int viewOffset, float[] obj, int objOffset) {
+		modelb.clear();
+		modelb.put(model, modelOffset, 16);
+		modelb.rewind();
+		projectb.clear();
+		projectb.put(project, projectOffset, 16);
+		projectb.rewind();
+		viewb.clear();
+		viewb.put(view, viewOffset, 4);
+		viewb.rewind();
+		winb.clear();
+
+		boolean result = org.lwjgl.util.glu.GLU.gluUnProject(winX, winY, winZ, modelb, projectb, viewb, winb);
+		obj[objOffset] = winb.get(0);
+		obj[objOffset + 1] = winb.get(1);
+		obj[objOffset + 2] = winb.get(2);
+		return result;
+	}
+}
diff --git a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGraphics.java b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGraphics.java
index e0f9423..706db4f 100644
--- a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGraphics.java
+++ b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGraphics.java
@@ -22,6 +22,7 @@ import com.badlogic.gdx.graphics.GL10;
 import com.badlogic.gdx.graphics.GL11;
 import com.badlogic.gdx.graphics.GL20;
 import com.badlogic.gdx.graphics.GLCommon;
+import com.badlogic.gdx.graphics.GLU;
 import com.badlogic.gdx.graphics.Pixmap;
 import com.badlogic.gdx.graphics.Pixmap.Format;
 import com.badlogic.gdx.utils.GdxRuntimeException;
@@ -43,6 +44,7 @@ public class LwjglGraphics implements Graphics {
 	GL10 gl10;
 	GL11 gl11;
 	GL20 gl20;
+	GLU glu;
 	float deltaTime = 0;
 	long frameStart = 0;
 	int frames = 0;
@@ -86,16 +88,20 @@ public class LwjglGraphics implements Graphics {
 		return gl20;
 	}
 
+	public GLU getGLU () {
+		return glu;
+	}
+
 	public int getHeight () {
 		if (canvas != null)
-			return Math.max(1, canvas.getHeight());
+			return canvas.getHeight();
 		else
 			return Display.getHeight();
 	}
 
 	public int getWidth () {
 		if (canvas != null)
-			return Math.max(1, canvas.getWidth());
+			return canvas.getWidth();
 		else
 			return Display.getWidth();
 	}
@@ -149,28 +155,28 @@ public class LwjglGraphics implements Graphics {
 			if (!setDisplayMode(config.width, config.height, config.fullscreen))
 				throw new GdxRuntimeException("Couldn't set display mode " + config.width + "x" + config.height + ", fullscreen: "
 					+ config.fullscreen);
-
-			if (config.iconPaths.size > 0) {
-				ByteBuffer[] icons = new ByteBuffer[config.iconPaths.size];
-				for (int i = 0, n = config.iconPaths.size; i < n; i++) {
-					Pixmap pixmap = new Pixmap(Gdx.files.getFileHandle(config.iconPaths.get(i), config.iconFileTypes.get(i)));
-					if (pixmap.getFormat() != Format.RGBA8888) {
-						Pixmap rgba = new Pixmap(pixmap.getWidth(), pixmap.getHeight(), Format.RGBA8888);
-						rgba.drawPixmap(pixmap, 0, 0);
-						pixmap = rgba;
-					}
-					icons[i] = ByteBuffer.allocateDirect(pixmap.getPixels().limit());
-					icons[i].put(pixmap.getPixels()).flip();
-					pixmap.dispose();
-				}
-				Display.setIcon(icons);
-			}
 		}
 		Display.setTitle(config.title);
 		Display.setResizable(config.resizable);
 		Display.setInitialBackground(config.initialBackgroundColor.r, config.initialBackgroundColor.g,
 			config.initialBackgroundColor.b);
 
+		if (config.iconPaths.size > 0) {
+			ByteBuffer[] icons = new ByteBuffer[config.iconPaths.size];
+			for (int i = 0, n = config.iconPaths.size; i < n; i++) {
+				Pixmap pixmap = new Pixmap(Gdx.files.getFileHandle(config.iconPaths.get(i), config.iconFileTypes.get(i)));
+				if (pixmap.getFormat() != Format.RGBA8888) {
+					Pixmap rgba = new Pixmap(pixmap.getWidth(), pixmap.getHeight(), Format.RGBA8888);
+					rgba.drawPixmap(pixmap, 0, 0);
+					pixmap = rgba;
+				}
+				icons[i] = ByteBuffer.allocateDirect(pixmap.getPixels().limit());
+				icons[i].put(pixmap.getPixels()).flip();
+				pixmap.dispose();
+			}
+			Display.setIcon(icons);
+		}
+
 		if (config.x != -1 && config.y != -1) Display.setLocation(config.x, config.y);
 		createDisplayPixelFormat();
 		config.x = Display.getX();
@@ -186,10 +192,6 @@ public class LwjglGraphics implements Graphics {
 		} catch (Exception ex) {
 			Display.destroy();
 			try {
-				Thread.sleep(200);
-			} catch (InterruptedException ignored) {
-			}
-			try {
 				Display.create(new PixelFormat(0, 16, 8));
 				if (getDesktopDisplayMode().bitsPerPixel == 16) {
 					bufferFormat = new BufferFormat(5, 6, 5, 0, 16, 8, 0, false);
@@ -203,10 +205,6 @@ public class LwjglGraphics implements Graphics {
 			} catch (Exception ex2) {
 				Display.destroy();
 				try {
-					Thread.sleep(200);
-				} catch (InterruptedException ignored) {
-				}
-				try {
 					Display.create(new PixelFormat());
 				} catch (Exception ex3) {
 					if (ex3.getMessage().contains("Pixel format not accelerated"))
@@ -246,6 +244,9 @@ public class LwjglGraphics implements Graphics {
 			gl = gl10;
 		}
 
+		glu = new LwjglGLU();
+
+		Gdx.glu = glu;
 		Gdx.gl = gl;
 		Gdx.gl10 = gl10;
 		Gdx.gl11 = gl11;
diff --git a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglNativesLoader.java b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglNativesLoader.java
index 55ba4f5..74336fb 100644
--- a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglNativesLoader.java
+++ b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglNativesLoader.java
@@ -52,15 +52,13 @@ public final class LwjglNativesLoader {
 		try {
 			if (isWindows) {
 				nativesDir = loader.extractFile(is64Bit ? "lwjgl64.dll" : "lwjgl.dll", null).getParentFile();
-				if (!LwjglApplicationConfiguration.disableAudio)
-					loader.extractFile(is64Bit ? "OpenAL64.dll" : "OpenAL32.dll", nativesDir.getName());
+				loader.extractFile(is64Bit ? "OpenAL64.dll" : "OpenAL32.dll", nativesDir.getName());
 			} else if (isMac) {
 				nativesDir = loader.extractFile("liblwjgl.jnilib", null).getParentFile();
-				if (!LwjglApplicationConfiguration.disableAudio) loader.extractFile("openal.dylib", nativesDir.getName());
+				loader.extractFile("openal.dylib", nativesDir.getName());
 			} else if (isLinux) {
 				nativesDir = loader.extractFile(is64Bit ? "liblwjgl64.so" : "liblwjgl.so", null).getParentFile();
-				if (!LwjglApplicationConfiguration.disableAudio)
-					loader.extractFile(is64Bit ? "libopenal64.so" : "libopenal.so", nativesDir.getName());
+				loader.extractFile(is64Bit ? "libopenal64.so" : "libopenal.so", nativesDir.getName());
 			}
 		} catch (Throwable ex) {
 			throw new GdxRuntimeException("Unable to extract LWJGL natives.", ex);
diff --git a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtApplication.java b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtApplication.java
index 9ec6470..fdd19ff 100644
--- a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtApplication.java
+++ b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtApplication.java
@@ -76,6 +76,9 @@ public abstract class GwtApplication implements EntryPoint, Application {
 	/** @return the configuration for the {@link GwtApplication}. */
 	public abstract GwtApplicationConfiguration getConfig ();
 
+	/** @return the {@link ApplicationListener} to be run by the {@link GwtApplication}. */
+	public abstract ApplicationListener getApplicationListener ();
+
 	@Override
 	public void onModuleLoad () {
 		this.agentInfo = computeAgentInfo();
diff --git a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtGraphics.java b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtGraphics.java
index 5d2b848..b58dec4 100644
--- a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtGraphics.java
+++ b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtGraphics.java
@@ -25,6 +25,7 @@ import com.badlogic.gdx.graphics.GL10;
 import com.badlogic.gdx.graphics.GL11;
 import com.badlogic.gdx.graphics.GL20;
 import com.badlogic.gdx.graphics.GLCommon;
+import com.badlogic.gdx.graphics.GLU;
 import com.badlogic.gdx.utils.GdxRuntimeException;
 import com.google.gwt.canvas.client.Canvas;
 import com.google.gwt.dom.client.CanvasElement;
@@ -100,6 +101,11 @@ public class GwtGraphics implements Graphics {
 	}
 
 	@Override
+	public GLU getGLU () {
+		return null;
+	}
+
+	@Override
 	public int getWidth () {
 		return canvas.getWidth();
 	}
@@ -269,15 +275,17 @@ public class GwtGraphics implements Graphics {
 
 	@Override
 	public void setContinuousRendering (boolean isContinuous) {
+		throw new GdxRuntimeException("No supported");
 	}
 
 	@Override
 	public boolean isContinuousRendering () {
-		return false;
+		throw new GdxRuntimeException("No supported");
 	}
 
 	@Override
 	public void requestRendering () {
+		throw new GdxRuntimeException("No supported");
 	}
 
 	@Override
diff --git a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtNet.java b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtNet.java
index 02fb524..5cb47c1 100755
--- a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtNet.java
+++ b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtNet.java
@@ -24,12 +24,12 @@ import java.util.concurrent.Executors;
 import com.badlogic.gdx.Gdx;
 import com.badlogic.gdx.Net;
 import com.badlogic.gdx.Net.HttpRequest;
-import com.badlogic.gdx.net.HttpStatus;
 import com.badlogic.gdx.net.ServerSocket;
 import com.badlogic.gdx.net.ServerSocketHints;
 import com.badlogic.gdx.net.Socket;
 import com.badlogic.gdx.net.SocketHints;
 import com.badlogic.gdx.utils.GdxRuntimeException;
+
 import com.google.gwt.core.client.EntryPoint;
 import com.google.gwt.http.client.Request;
 import com.google.gwt.http.client.RequestBuilder;
diff --git a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtPreferences.java b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtPreferences.java
index 4345b21..3f1a8b8 100644
--- a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtPreferences.java
+++ b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtPreferences.java
@@ -139,8 +139,7 @@ public class GwtPreferences implements Preferences {
 
 	@Override
 	public String getString (String key) {
-		String v = (String)values.get(key);
-		return v == null ? "" : v;
+		return (String)values.get(key);
 	}
 
 	@Override
diff --git a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/assets/AssetManager.java b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/assets/AssetManager.java
index 727be833..20d5aeb 100644
--- a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/assets/AssetManager.java
+++ b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/assets/AssetManager.java
@@ -47,7 +47,7 @@ public class AssetManager implements Disposable {
 	final ObjectMap<String, Class> assetTypes = new ObjectMap<String, Class>();
 	final ObjectMap<String, Array<String>> assetDependencies = new ObjectMap<String, Array<String>>();
 
-	final ObjectMap<Class, ObjectMap<String, AssetLoader>> loaders = new ObjectMap<Class, ObjectMap<String, AssetLoader>>();
+	final ObjectMap<Class, AssetLoader> loaders = new ObjectMap<Class, AssetLoader>();
 	final ArrayList<AssetDescriptor> loadQueue = new ArrayList<AssetDescriptor>();
 
 	Stack<AssetLoadingTask> tasks = new Stack<AssetLoadingTask>();
@@ -201,48 +201,19 @@ public class AssetManager implements Disposable {
 		return assetContainer.getObject(type) != null;
 	}
 
-	/** Returns the default loader for the given type
-	 * @param type The type of the loader to get
-	 * @return The loader capable of loading the type, or null if none exists
-	 */
-	public <T> AssetLoader getLoader(final Class<T> type) {
-		return getLoader(type, null);
-	}
-
-	/** Returns the loader for the given type and the specified filename. If no loader exists for the specific
-	 * filename, the default loader for that type is returned.
-	 * @param type The type of the loader to get
-	 * @param fileName The filename of the asset to get a loader for, or null to get the default loader
-	 * @return The loader capable of loading the type and filename, or null if none exists
-	 */
-	public <T> AssetLoader getLoader(final Class<T> type, final String fileName) {
-		final ObjectMap<String, AssetLoader> loaders = this.loaders.get(type);
-		if (loaders == null || loaders.size < 1) return null;
-		if (fileName == null) return loaders.get("");
-		AssetLoader result = null;
-		int l = -1;
-		for (ObjectMap.Entry<String, AssetLoader> entry : loaders.entries()) {
-			if (entry.key.length() > l && fileName.endsWith(entry.key)) {
-				result = entry.value;
-				l = entry.key.length();
-			}
-		}
-		return result;
-	}
-
 	/** Adds the given asset to the loading queue of the AssetManager.
 	 * @param fileName the file name (interpretation depends on {@link AssetLoader})
 	 * @param type the type of the asset. */
 	public synchronized <T> void load (String fileName, Class<T> type) {
 		load(fileName, type, null);
 	}
-	
+
 	/** Adds the given asset to the loading queue of the AssetManager.
 	 * @param fileName the file name (interpretation depends on {@link AssetLoader})
 	 * @param type the type of the asset.
 	 * @param parameter parameters for the AssetLoader. */
 	public synchronized <T> void load (String fileName, Class<T> type, AssetLoaderParameters<T> parameter) {
-		AssetLoader loader = getLoader(type, fileName);
+		AssetLoader loader = loaders.get(type);
 		if (loader == null) throw new GdxRuntimeException("No loader for type: " + type.getName());
 
 		if (loadQueue.size() == 0) {
@@ -376,32 +347,27 @@ public class AssetManager implements Disposable {
 	/** Adds a {@link AssetLoadingTask} to the task stack for the given asset.
 	 * @param assetDesc */
 	private void addTask (AssetDescriptor assetDesc) {
-		AssetLoader loader = getLoader(assetDesc.type, assetDesc.fileName);
+		AssetLoader loader = loaders.get(assetDesc.type);
 		if (loader == null) throw new GdxRuntimeException("No loader for type: " + assetDesc.type.getName());
 		tasks.push(new AssetLoadingTask(this, assetDesc, loader));
 	}
 
-	/** Adds an asset to this AssetManager */
-	protected <T> void addAsset(final String fileName, Class<T> type, T asset) {
-		// add the asset to the filename lookup
-		assetTypes.put(fileName, type);
-
-		// add the asset to the type lookup
-		ObjectMap<String, RefCountedContainer> typeToAssets = assets.get(type);
-		if (typeToAssets == null) {
-			typeToAssets = new ObjectMap<String, RefCountedContainer>();
-			assets.put(type, typeToAssets);
-		}
-		typeToAssets.put(fileName, new RefCountedContainer(asset));	
-	}
-	
 	/** Updates the current task on the top of the task stack.
 	 * @return true if the asset is loaded. */
 	private boolean updateTask () {
 		AssetLoadingTask task = tasks.peek();
 		// if the task has finished loading
 		if (task.update()) {
-			addAsset(task.assetDesc.fileName, task.assetDesc.type, task.getAsset());
+			// add the asset to the filename lookup
+			assetTypes.put(task.assetDesc.fileName, task.assetDesc.type);
+
+			// add the asset to the type lookup
+			ObjectMap<String, RefCountedContainer> typeToAssets = assets.get(task.assetDesc.type);
+			if (typeToAssets == null) {
+				typeToAssets = new ObjectMap<String, RefCountedContainer>();
+				assets.put(task.assetDesc.type, typeToAssets);
+			}
+			typeToAssets.put(task.assetDesc.fileName, new RefCountedContainer(task.getAsset()));
 
 			// increase the number of loaded assets and pop the task from the stack
 			if (tasks.size() == 1) loaded++;
@@ -471,21 +437,10 @@ public class AssetManager implements Disposable {
 	 * @param type the type of the asset
 	 * @param loader the loader */
 	public synchronized <T, P extends AssetLoaderParameters<T>> void setLoader (Class<T> type, AssetLoader<T, P> loader) {
-		setLoader(type, null, loader);
-	}
-	
-	/** Sets a new {@link AssetLoader} for the given type.
-	 * @param type the type of the asset
-	 * @param suffix the suffix the filename must have for this loader to be used or null to specify the default loader. 
-	 * @param loader the loader */
-	public synchronized <T, P extends AssetLoaderParameters<T>> void setLoader (Class<T> type, String suffix, AssetLoader<T, P> loader) {
 		if (type == null) throw new IllegalArgumentException("type cannot be null.");
 		if (loader == null) throw new IllegalArgumentException("loader cannot be null.");
 // log.debug("Loader set: " + type.getName() + " -> " + loader.getClass().getName());
-		ObjectMap<String, AssetLoader> loaders = this.loaders.get(type);
-		if (loaders == null)
-			this.loaders.put(type, loaders = new ObjectMap<String, AssetLoader>());
-		loaders.put(suffix == null ? "" : suffix, loader);
+		loaders.put(type, loader);
 	}
 
 	/** @return the number of loaded assets */
diff --git a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/graphics/Texture.java b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/graphics/Texture.java
index fbae817..425766b 100644
--- a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/graphics/Texture.java
+++ b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/graphics/Texture.java
@@ -170,10 +170,6 @@ public class Texture implements Disposable {
 			pixmap.getGLType(), pixmap.getPixels());
 	}
 
-	static public void setEnforcePotImages (boolean enforcePotImages) {
-		/* doesn't matter on GWT ... hopefully? */
-	}
-	
 	/** @return the width of the texture in pixels */
 	public int getWidth () {
 		return data.getWidth();
diff --git a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/maps/MapLayers.java b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/maps/MapLayers.java
deleted file mode 100644
index cb516c7..0000000
--- a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/maps/MapLayers.java
+++ /dev/null
@@ -1,92 +0,0 @@
-package com.badlogic.gdx.maps;
-
-import java.util.Iterator;
-
-import com.badlogic.gdx.utils.Array;
-
-/**
- * Ordered list of {@link MapLayer} instances owned by a {@link Map}
- */
-public class MapLayers implements Iterable<MapLayer> {
-	private Array<MapLayer> layers = new Array<MapLayer>();
-
-	/**
-	 * @param index
-	 * @return layer at index
-	 */
-	public MapLayer get(int index) {
-		return layers.get(index);
-	}
-	
-	/**
-	 * @param name
-	 * @return first layer matching the name, null otherwise
-	 */
-	public MapLayer get(String name) {
-		for (MapLayer layer : layers) {
-			if (name.equals(layer.getName())) {
-				return layer;
-			}
-		}
-		return null;
-	}
-	
-	/** @return number of layers in the collection */
-	public int getCount() {
-		return layers.size;
-	}
-
-	/**
-	 * @param layer layer to be added to the set
-	 */
-	public void add(MapLayer layer) {
-		this.layers.add(layer);
-	}
-	
-	/**
-	 * @param index removes layer at index
-	 */
-	public void remove(int index) {
-		layers.removeIndex(index);
-	}
-	
-	/**
-	 * @param layer layer to be removed
-	 */
-	public void remove(MapLayer layer) {
-		layers.removeValue(layer, true);
-	}
-
-	/**
-	 * @param type
-	 * @return array with all the layers matching type
-	 */
-	public <T extends MapLayer> Array<T> getByType(Class<T> type) {
-		return getByType(type, new Array<T>());
-	}
-	
-	/**
-	 * 
-	 * @param type
-	 * @param fill array to be filled with the matching layers
-	 * @return array with all the layers matching type
-	 */
-	public <T extends MapLayer> Array<T> getByType(Class<T> type, Array<T> fill) {
-		fill.clear();
-		for (MapLayer layer : layers) {
-			if (type.equals(layer.getClass())) {
-				fill.add((T) layer);
-			}
-		}
-		return fill;
-	}
-
-	/**
-	 * @return iterator to set of layers
-	 */
-	@Override
-	public Iterator<MapLayer> iterator() {
-		return layers.iterator();
-	}
-	
-}
\ No newline at end of file
diff --git a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/maps/MapObjects.java b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/maps/MapObjects.java
deleted file mode 100644
index cbfa686..0000000
--- a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/maps/MapObjects.java
+++ /dev/null
@@ -1,101 +0,0 @@
-package com.badlogic.gdx.maps;
-
-import java.util.Iterator;
-
-import com.badlogic.gdx.utils.Array;
-
-/**
- * @brief Collection of MapObject instances
- */
-public class MapObjects implements Iterable<MapObject> {
-
-	private Array<MapObject> objects;
-
-	/**
-	 * Creates and empty set of MapObject instances
-	 */
-	public MapObjects() {
-		objects = new Array<MapObject>();
-	}
-	
-	/**
-	 * @param index
-	 * @return MapObject at index
-	 */
-	public MapObject get(int index) {
-		return objects.get(index);
-	}
-	
-	/**
-	 * @param name
-	 * @return name matching object, null if it´s not in the set
-	 */
-	public MapObject get(String name) {
-		for (MapObject object : objects) {
-			if (name.equals(object.getName())) {
-				return object;
-			}
-		}
-		return null;
-	}
-	
-	/**
-	 * @param object instance to be added to the collection
-	 */
-	public void add(MapObject object) {
-		this.objects.add(object);
-	}
-	
-	/**
-	 * @param index removes MapObject instance at index
-	 */
-	public void remove(int index) {
-		objects.removeIndex(index);
-	}
-	
-	/**
-	 * @param object instance to be removed
-	 */
-	public void remove(MapObject object) {
-		objects.removeValue(object, true);
-	}
-	
-	/**
-	 * @return number of objects in the collection
-	 */
-	public int getCount() {
-		return objects.size;
-	}
-
-	/**
-	 * @param type class of the objects we want to retrieve
-	 * @return array filled with all the objects in the collection matching type
-	 */
-	public <T extends MapObject> Array<T> getByType(Class<T> type) {
-		return getByType(type, new Array<T>());
-	}
-	
-	/**
-	 * @param type class of the objects we want to retrieve
-	 * @param fill collection to put the returned objects in
-	 * @return array filled with all the objects in the collection matching type
-	 */
-	public <T extends MapObject> Array<T> getByType(Class<T> type, Array<T> fill) {
-		fill.clear();
-		for (MapObject object : objects) {
-			if (type.equals(object.getClass())) {
-				fill.add((T) object);
-			}
-		}
-		return fill;
-	}
-
-	/**
-	 * @return iterator for the objects within the collection
-	 */
-	@Override
-	public Iterator<MapObject> iterator() {
-		return objects.iterator();
-	}
-	
-}
\ No newline at end of file
diff --git a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/maps/tiled/TmxMapLoader.java b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/maps/tiled/TmxMapLoader.java
deleted file mode 100644
index bbfba6e..0000000
--- a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/maps/tiled/TmxMapLoader.java
+++ /dev/null
@@ -1,526 +0,0 @@
-package com.badlogic.gdx.maps.tiled;
-
-import java.io.ByteArrayInputStream;
-import java.io.IOException;
-import java.util.StringTokenizer;
-import java.util.zip.DataFormatException;
-import java.util.zip.GZIPInputStream;
-import java.util.zip.Inflater;
-
-import com.badlogic.gdx.assets.AssetDescriptor;
-import com.badlogic.gdx.assets.AssetLoaderParameters;
-import com.badlogic.gdx.assets.AssetManager;
-import com.badlogic.gdx.assets.loaders.FileHandleResolver;
-import com.badlogic.gdx.assets.loaders.SynchronousAssetLoader;
-import com.badlogic.gdx.assets.loaders.resolvers.InternalFileHandleResolver;
-import com.badlogic.gdx.files.FileHandle;
-import com.badlogic.gdx.graphics.Texture;
-import com.badlogic.gdx.graphics.g2d.TextureRegion;
-import com.badlogic.gdx.maps.ImageResolver;
-import com.badlogic.gdx.maps.ImageResolver.AssetManagerImageResolver;
-import com.badlogic.gdx.maps.ImageResolver.DirectImageResolver;
-import com.badlogic.gdx.maps.MapLayer;
-import com.badlogic.gdx.maps.MapObject;
-import com.badlogic.gdx.maps.MapProperties;
-import com.badlogic.gdx.maps.objects.EllipseMapObject;
-import com.badlogic.gdx.maps.objects.PolygonMapObject;
-import com.badlogic.gdx.maps.objects.PolylineMapObject;
-import com.badlogic.gdx.maps.objects.RectangleMapObject;
-import com.badlogic.gdx.maps.tiled.TiledMapTileLayer.Cell;
-import com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile;
-import com.badlogic.gdx.math.Polygon;
-import com.badlogic.gdx.math.Polyline;
-import com.badlogic.gdx.utils.Array;
-import com.badlogic.gdx.utils.Base64Coder;
-import com.badlogic.gdx.utils.GdxRuntimeException;
-import com.badlogic.gdx.utils.ObjectMap;
-import com.badlogic.gdx.utils.XmlReader;
-import com.badlogic.gdx.utils.XmlReader.Element;
-
-/**
- * @brief synchronous loader for TMX maps created with the Tiled tool
- */
-public class TmxMapLoader extends SynchronousAssetLoader<TiledMap, TmxMapLoader.Parameters> {
-
-	public static class Parameters extends AssetLoaderParameters<TiledMap> {
-		/** Whether to load the map for a y-up coordinate system */
-		boolean yUp = true;
-	}
-	
-	protected static final int FLAG_FLIP_HORIZONTALLY = 0x80000000;
-	protected static final int FLAG_FLIP_VERTICALLY = 0x40000000;
-	protected static final int FLAG_FLIP_DIAGONALLY = 0x20000000;
-	protected static final int MASK_CLEAR  = 0xE0000000;
-	
-	protected XmlReader xml = new XmlReader();
-	protected Element root;
-	protected boolean yUp;
-
-	protected int mapWidthInPixels;
-	protected int mapHeightInPixels;
-	
-	public TmxMapLoader() {
-		super(new InternalFileHandleResolver());
-	}
-	
-	/**
-	 * Creates loader 
-	 *  
-	 * @param resolver
-	 */
-	public TmxMapLoader(FileHandleResolver resolver) {
-		super(resolver);
-	}
-
-	/**
-	 * Loads the {@link TiledMap} from the given file. The file is
-	 * resolved via the {@link FileHandleResolver} set in the constructor
-	 * of this class. By default it will resolve to an internal file. The
-	 * map will be loaded for a y-up coordinate system.
-	 * @param fileName the filename
-	 * @return the TiledMap
-	 */
-	public TiledMap load(String fileName) {
-		return load(fileName, true);
-	}
-
-	/**
-	 * Loads the {@link TiledMap} from the given file. The file is
-	 * resolved via the {@link FileHandleResolver} set in the constructor
-	 * of this class. By default it will resolve to an internal file.
-	 * @param fileName the filename
-	 * @param yUp whether to load the map for a y-up coordinate system
-	 * @return the TiledMap
-	 */
-	public TiledMap load(String fileName, boolean yUp) {
-		try {
-			this.yUp = yUp;
-			FileHandle tmxFile = resolve(fileName);
-			root = xml.parse(tmxFile);
-			ObjectMap<String, Texture> textures = new ObjectMap<String, Texture>();
-			for(FileHandle textureFile: loadTilesets(root, tmxFile)) {
-				textures.put(textureFile.path(), new Texture(textureFile));
-			}
-			DirectImageResolver imageResolver = new DirectImageResolver(textures);
-			TiledMap map = loadTilemap(root, tmxFile, imageResolver);
-			map.setOwnedTextures(textures.values().toArray());
-			return map;
-		} catch(IOException e) {
-			throw new GdxRuntimeException("Couldn't load tilemap '" + fileName + "'", e);
-		}
-	}
-	
-	@Override
-	public TiledMap load(AssetManager assetManager, String fileName, Parameters parameter) {
-		FileHandle tmxFile = resolve(fileName);
-		if (parameter != null) {
-			yUp = parameter.yUp;
-		} else {
-			yUp = true;
-		}
-		try {
-			return loadTilemap(root, tmxFile, new AssetManagerImageResolver(assetManager));
-		} catch (Exception e) {
-			throw new GdxRuntimeException("Couldn't load tilemap '" + fileName + "'", e);
-		}
-	}
-
-	/**
-	 * Retrieves TiledMap resource dependencies
-	 * 
-	 * @param fileName
-	 * @param parameter not used for now
-	 * @return dependencies for the given .tmx file
-	 */
-	@Override
-	public Array<AssetDescriptor> getDependencies(String fileName, Parameters parameter) {
-		Array<AssetDescriptor> dependencies = new Array<AssetDescriptor>();
-		try {
-			FileHandle tmxFile = resolve(fileName);
-			root = xml.parse(tmxFile);
-			for(FileHandle image: loadTilesets(root, tmxFile)) {
-				dependencies.add(new AssetDescriptor(image.path(), Texture.class));
-			}
-			return dependencies;
-		} catch (IOException e) {
-			throw new GdxRuntimeException("Couldn't load tilemap '" + fileName + "'", e);
-		}
-	}
-	
-	/**
-	 * Loads the map data, given the XML root element and an {@link ImageResolver} used
-	 * to return the tileset Textures
-	 * @param root the XML root element 
-	 * @param tmxFile the Filehandle of the tmx file
-	 * @param imageResolver the {@link ImageResolver}
-	 * @return the {@link TiledMap}
-	 */
-	protected TiledMap loadTilemap(Element root, FileHandle tmxFile, ImageResolver imageResolver) {
-		TiledMap map = new TiledMap();
-		
-		String mapOrientation = root.getAttribute("orientation", null);
-		int mapWidth = root.getIntAttribute("width", 0);
-		int mapHeight = root.getIntAttribute("height", 0);
-		int tileWidth = root.getIntAttribute("tilewidth", 0);
-		int tileHeight = root.getIntAttribute("tileheight", 0);
-		String mapBackgroundColor = root.getAttribute("backgroundcolor", null);
-		
-		MapProperties mapProperties = map.getProperties();
-		if (mapOrientation != null) {
-			mapProperties.put("orientation", mapBackgroundColor);
-		}
-		mapProperties.put("width", mapWidth);
-		mapProperties.put("height", mapHeight);
-		mapProperties.put("tilewidth", tileWidth);
-		mapProperties.put("tileheight", tileHeight);
-		if (mapBackgroundColor != null) {
-			mapProperties.put("backgroundcolor", mapBackgroundColor);
-		}
-		mapWidthInPixels = mapWidth * tileWidth;
-		mapHeightInPixels = mapHeight * tileHeight;
-		
-		Element properties = root.getChildByName("properties");
-		if (properties != null) {
-			loadProperties(map.getProperties(), properties);
-		}
-		Array<Element> tilesets = root.getChildrenByName("tileset");
-		for (Element element : tilesets) {
-			loadTileSet(map, element, tmxFile, imageResolver);
-			root.removeChild(element);
-		}
-		for (int i = 0, j = root.getChildCount(); i < j; i++) {
-			Element element = root.getChild(i);
-			String name = element.getName();
-			if (name.equals("layer")) {
-				loadTileLayer(map, element);
-			} else if (name.equals("objectgroup")) {
-				loadObjectGroup(map, element);
-			}
-		}
-		return map;
-	}
-	
-	/**
-	 * Loads the tilesets
-	 * @param root the root XML element
-	 * @return a list of filenames for images containing tiles
-	 * @throws IOException 
-	 */
-	protected Array<FileHandle> loadTilesets(Element root, FileHandle tmxFile) throws IOException {
-		Array<FileHandle> images = new Array<FileHandle>();
-		for (Element tileset : root.getChildrenByName("tileset")) {
-			String source = tileset.getAttribute("source", null);
-			FileHandle image = null;
-			if (source != null) {
-				FileHandle tsx = getRelativeFileHandle(tmxFile, source);
-				tileset = xml.parse(tsx);
-				String imageSource = tileset.getChildByName("image").getAttribute("source");
-				image = getRelativeFileHandle(tsx, imageSource);
-			} else {
-				String imageSource = tileset.getChildByName("image").getAttribute("source");
-				image = getRelativeFileHandle(tmxFile, imageSource);
-			}
-			images.add(image);
-		}
-		return images;
-	}
-
-	protected void loadTileSet(TiledMap map, Element element, FileHandle tmxFile, ImageResolver imageResolver) {
-		if (element.getName().equals("tileset")) {
-			String name = element.get("name", null);
-			int firstgid = element.getIntAttribute("firstgid", 1);
-			int tilewidth = element.getIntAttribute("tilewidth", 0);
-			int tileheight = element.getIntAttribute("tileheight", 0);
-			int spacing = element.getIntAttribute("spacing", 0);
-			int margin = element.getIntAttribute("margin", 0);			
-			String source = element.getAttribute("source", null);
-			FileHandle image = null;
-			if (source != null) {
-				FileHandle tsx = getRelativeFileHandle(tmxFile, source);
-				try {
-					element = xml.parse(tsx);
-					name = element.get("name", null);
-					tilewidth = element.getIntAttribute("tilewidth", 0);
-					tileheight = element.getIntAttribute("tileheight", 0);
-					spacing = element.getIntAttribute("spacing", 0);
-					margin = element.getIntAttribute("margin", 0);
-					String imageSource = element.getChildByName("image").getAttribute("source");
-					image = getRelativeFileHandle(tsx, imageSource);
-				} catch (IOException e) {
-					throw new GdxRuntimeException("Error parsing external tileset.");
-				}
-			} else {
-				String imageSource = element.getChildByName("image").getAttribute("source");
-				image = getRelativeFileHandle(tmxFile, imageSource);
-			}
-
-			TextureRegion texture = imageResolver.getImage(image.path());
-
-			TiledMapTileSet tileset = new TiledMapTileSet();
-			tileset.setName(name);
-			
-			int stopWidth = texture.getRegionWidth() - tilewidth;
-			int stopHeight = texture.getRegionHeight() - tileheight;
-
-			int id = firstgid;
-			
-			for (int y = margin; y <= stopHeight; y += tileheight + spacing) {
-				for (int x = margin; x <= stopWidth; x += tilewidth + spacing) {
-					TextureRegion tileRegion = new TextureRegion(texture, x, y, tilewidth, tileheight);
-					if (!yUp) {
-						tileRegion.flip(false, true);
-					}
-					TiledMapTile tile = new StaticTiledMapTile(tileRegion);
-					tile.setId(id);
-					tileset.putTile(id++, tile);
-				}
-			}
-			
-			Array<Element> tileElements = element.getChildrenByName("tile");
-			
-			for (Element tileElement : tileElements) {
-				int localtid = tileElement.getIntAttribute("id", 0);
-				TiledMapTile tile = tileset.getTile(firstgid + localtid);
-				if (tile!= null) {
-					Element properties = tileElement.getChildByName("properties");
-					if (properties != null) {
-						loadProperties(tile.getProperties(), properties);
-					}
-				}
-			}
-			
-			Element properties = element.getChildByName("properties");
-			if (properties != null) {
-				loadProperties(tileset.getProperties(), properties);
-			}
-			map.getTileSets().addTileSet(tileset);
-		}		
-	}
-	
-	protected void loadTileLayer(TiledMap map, Element element) {
-		if (element.getName().equals("layer")) {
-			String name = element.getAttribute("name", null);
-			int width = element.getIntAttribute("width", 0);
-			int height = element.getIntAttribute("height", 0);
-			int tileWidth = element.getParent().getIntAttribute("tilewidth", 0);
-			int tileHeight = element.getParent().getIntAttribute("tileheight", 0);
-			boolean visible = element.getIntAttribute("visible", 1) == 1;
-			float opacity = element.getFloatAttribute("opacity", 1.0f);
-			TiledMapTileLayer layer = new TiledMapTileLayer(width, height, tileWidth, tileHeight);
-			layer.setVisible(visible);
-			layer.setOpacity(opacity);
-			layer.setName(name);
-			
-			TiledMapTileSets tilesets = map.getTileSets();
-			
-			Element data = element.getChildByName("data");
-			String encoding = data.getAttribute("encoding", null);
-			String compression = data.getAttribute("compression", null);
-			if (encoding.equals("csv")) {
-				String[] array = data.getText().split(",");
-				for (int y = 0; y < height; y++) {
-					for (int x = 0; x < width; x++) {
-						int id = (int) Long.parseLong(array[y * width + x].trim());
-						
-						final boolean flipHorizontally = ((id & FLAG_FLIP_HORIZONTALLY) != 0);
-						final boolean flipVertically = ((id & FLAG_FLIP_VERTICALLY) != 0);
-						final boolean flipDiagonally = ((id & FLAG_FLIP_DIAGONALLY) != 0);
-
-						id = id & ~MASK_CLEAR;
-						
-						tilesets.getTile(id);
-						TiledMapTile tile = tilesets.getTile(id);
-						if (tile != null) {
-							Cell cell = new Cell();
-							if (flipDiagonally) {
-								if (flipHorizontally && flipVertically) {
-									cell.setFlipHorizontally(true);
-									cell.setRotation(Cell.ROTATE_270);
-								} else if (flipHorizontally) {
-									cell.setRotation(Cell.ROTATE_270);
-								} else if (flipVertically) {
-									cell.setRotation(Cell.ROTATE_90);
-								} else {
-									cell.setFlipVertically(true);
-									cell.setRotation(Cell.ROTATE_270);
-								}
-							} else {
-								cell.setFlipHorizontally(flipHorizontally);
-								cell.setFlipVertically(flipVertically);
-							}
-							cell.setTile(tile);
-							layer.setCell(x, yUp ? height - 1 - y : y, cell);
-						}
-					}
-				}
-			} else {
-				if(encoding.equals("base64")) {
-					byte[] bytes = Base64Coder.decode(data.getText());
-					if (compression == null) {
-						int read = 0;
-						for (int y = 0; y < height; y++) {
-							for (int x = 0; x < width; x++) {
-								
-								int id =
-								unsignedByteToInt(bytes[read++]) |
-								unsignedByteToInt(bytes[read++]) << 8 |
-								unsignedByteToInt(bytes[read++]) << 16 |
-								unsignedByteToInt(bytes[read++]) << 24;
-								
-								final boolean flipHorizontally = ((id & FLAG_FLIP_HORIZONTALLY) != 0);
-								final boolean flipVertically = ((id & FLAG_FLIP_VERTICALLY) != 0);
-								final boolean flipDiagonally = ((id & FLAG_FLIP_DIAGONALLY) != 0);
-
-								id = id & ~MASK_CLEAR;
-								
-								tilesets.getTile(id);
-								TiledMapTile tile = tilesets.getTile(id);
-								if (tile != null) {
-									Cell cell = new Cell();
-									if (flipDiagonally) {
-										if (flipHorizontally && flipVertically) {
-											cell.setFlipHorizontally(true);
-											cell.setRotation(Cell.ROTATE_270);
-										} else if (flipHorizontally) {
-											cell.setRotation(Cell.ROTATE_270);
-										} else if (flipVertically) {
-											cell.setRotation(Cell.ROTATE_90);
-										} else {
-											cell.setFlipVertically(true);
-											cell.setRotation(Cell.ROTATE_270);
-										}
-									} else {
-										cell.setFlipHorizontally(flipHorizontally);
-										cell.setFlipVertically(flipVertically);
-									}
-									cell.setTile(tile);
-									layer.setCell(x, yUp ? height - 1 - y : y, cell);
-								}
-							}
-						}
-					} else if (compression.equals("gzip")) {
-						throw new GdxRuntimeException("GZIP compression not supported in GWT backend");
-					} else if (compression.equals("zlib")) {
-						throw new GdxRuntimeException("ZLIB compression not supported in GWT backend");
-					}
-				}
-			}
-			Element properties = element.getChildByName("properties");
-			if (properties != null) {
-				loadProperties(layer.getProperties(), properties);
-			}
-			map.getLayers().add(layer);
-		}		
-	}
-	
-	protected void loadObjectGroup(TiledMap map, Element element) {
-		if (element.getName().equals("objectgroup")) {
-			String name = element.getAttribute("name", null);
-			MapLayer layer = new MapLayer();
-			layer.setName(name);
-			Element properties = element.getChildByName("properties");
-			if (properties != null) {
-				loadProperties(layer.getProperties(), properties);
-			}
-			
-			for (Element objectElement : element.getChildrenByName("object")) {
-				loadObject(layer, objectElement);
-			}
-
-			map.getLayers().add(layer);
-		}
-	}
-	
-	protected void loadObject(MapLayer layer, Element element) {
-		if (element.getName().equals("object")) {
-			MapObject object = null;
-			
-			int x = element.getIntAttribute("x", 0);
-			int y = (yUp ? mapHeightInPixels - element.getIntAttribute("y", 0) : element.getIntAttribute("y", 0));
-
-			int width = element.getIntAttribute("width", 0);
-			int height = element.getIntAttribute("height", 0);
-			
-			if (element.getChildCount() > 0) {
-				Element child = null;
-				if ((child = element.getChildByName("polygon")) != null) {
-					String[] points = child.getAttribute("points").split(" ");
-					float[] vertices = new float[points.length * 2];
-					for (int i = 0; i < points.length; i++) {
-						String[] point = points[i].split(",");
-						vertices[i * 2] = Integer.parseInt(point[0]);
-						vertices[i * 2 + 1] = Integer.parseInt(point[1]);
-						if (yUp) {
-							vertices[i * 2 + 1] *= -1;
-						}
-					}
-					Polygon polygon = new Polygon(vertices);
-					polygon.setPosition(x, y);
-					object = new PolygonMapObject(polygon);
-				} else if ((child = element.getChildByName("polyline")) != null) {
-					String[] points = child.getAttribute("points").split(" ");
-					float[] vertices = new float[points.length * 2];
-					for (int i = 0; i < points.length; i++) {
-						String[] point = points[i].split(",");
-						vertices[i * 2] = Integer.parseInt(point[0]);
-						vertices[i * 2 + 1] = Integer.parseInt(point[1]);
-						if (yUp) {
-							vertices[i * 2 + 1] *= -1;
-						}
-					}
-					Polyline polyline = new Polyline(vertices);
-					polyline.setPosition(x, y);
-					object = new PolylineMapObject(polyline);
-				} else if ((child = element.getChildByName("ellipse")) != null) {
-					object = new EllipseMapObject(x, yUp ? y - height : y, width, height);
-				}
-			}
-			if (object == null) {
-				object = new RectangleMapObject(x, yUp ? y - height : y, width, height);
-			}
-			object.setName(element.getAttribute("name", null));
-			String type = element.getAttribute("type", null);
-			if (type != null) {
-				object.getProperties().put("type", type);
-			}
-			object.setVisible(element.getIntAttribute("visible", 1) == 1);
-			Element properties = element.getChildByName("properties");
-			if (properties != null) {
-				loadProperties(object.getProperties(), properties);
-			}
-			layer.getObjects().add(object);
-		}
-	}
-	
-	protected void loadProperties(MapProperties properties, Element element) {
-		if (element.getName().equals("properties")) {
-			for (Element property : element.getChildrenByName("property")) {
-				String name = property.getAttribute("name", null);
-				String value = property.getAttribute("value", null);
-				if (value == null) {
-					value = property.getText();
-				}
-				properties.put(name, value);
-			}
-		}
-	}
-	
-	protected static FileHandle getRelativeFileHandle(FileHandle file, String path) {
-		StringTokenizer tokenizer = new StringTokenizer(path, "\\/");
-		FileHandle result = file.parent();
-		while (tokenizer.hasMoreElements()) {
-			String token = tokenizer.nextToken();
-			if (token.equals(".."))
-				result = result.parent();
-			else {
-				result = result.child(token);
-			}
-		}
-		return result;		
-	}
-	
-	protected static int unsignedByteToInt (byte b) {
-		return (int) b & 0xFF;
-	}
-
-}
diff --git a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/java/lang/Thread.java b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/java/lang/Thread.java
index 43d3f47..e81c218 100644
--- a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/java/lang/Thread.java
+++ b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/java/lang/Thread.java
@@ -16,29 +16,8 @@
 
 package java.lang;
 
-import com.google.gwt.core.client.GWT;
-
 public class Thread {
 	public static void sleep (long millis) throws InterruptedException {
 		// noop emu
 	}
-	
-	public static void setDefaultUncaughtExceptionHandler(final Thread.UncaughtExceptionHandler javaHandler) {
-		GWT.setUncaughtExceptionHandler(new GWT.UncaughtExceptionHandler() {
-			@Override
-			public void onUncaughtException (Throwable e) {
-				final Thread th = new Thread() {
-					@Override
-					public String toString() {
-						return "The only thread";
-					}
-				};
-				javaHandler.uncaughtException(th, e);
-			}
-		});
-	}
-	
-	public static interface UncaughtExceptionHandler {
-		void uncaughtException(Thread t, Throwable e);
-	}
 }
diff --git a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/java/util/StringTokenizer.java b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/java/util/StringTokenizer.java
index c0e4273..0099ed2 100644
--- a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/java/util/StringTokenizer.java
+++ b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/java/util/StringTokenizer.java
@@ -44,10 +44,6 @@ public class StringTokenizer {
 		return result;
 	}
 
-	public boolean hasMoreElements() {
-		return hasMoreTokens();
-	}
-	
 	public boolean hasMoreTokens () {
 		if (next != null) {
 			return true;
diff --git a/build-mac-ios.xml b/build-mac-ios.xml
deleted file mode 100644
index 88e4da3..0000000
--- a/build-mac-ios.xml
+++ /dev/null
@@ -1,89 +0,0 @@
-<project name="gdx-ios-build" default="all" basedir=".">
-	<!-- compile the distribution so we have all jars we need, do not compile natives -->
-	<target name="compile-jars">		
-		<ant antfile="build.xml" dir=".">
-			<property name="compile-natives" value="false"/>
-		</ant>
-	</target>
-		
-    <target name="ios-java-only">
-        <ant antfile="build.xml" target="gdx-backend-iosmonotouch" dir=".">
-			<property name="compile-natives" value="false"/>
-		</ant>
-        <ant antfile="convert-ikvm.xml" dir=".">
-			<property name="IN" value="-srcpath:gdx/src/ dist/gdx.jar"/>
-			<property name="OUT" value="gdx/libs/ios32/gdx.dll"/>
-		</ant>
-        <ant antfile="convert-ikvm.xml" dir=".">
-			<property name="IN" value="-r:gdx/libs/ios32/gdx.dll -srcpath:backends/gdx-backend-iosmonotouch/src/ dist/gdx-backend-iosmonotouch.jar"/>
-			<property name="OUT" value="backends/gdx-backend-iosmonotouch/libs/ios32/gdx-backend-ios.dll"/>
-		</ant>
-    </target>
-    
-	<target name="core" depends="compile-jars">
-		<ant antfile="build-macosx32.xml" dir="gdx/jni">
-			<target name="clean"/>
-			<target name="postcompile"/>
-		</ant>
-		<ant antfile="build-ios32.xml" dir="gdx/jni"/>
-		<ant antfile="convert-ikvm.xml" dir=".">
-			<property name="IN" value="-srcpath:gdx/src/ dist/gdx.jar"/>
-			<property name="OUT" value="gdx/libs/ios32/gdx.dll"/>
-		</ant>
-	</target>
-	
-	<target name="backend-iosmonotouch" depends="core">
-		<ant antfile="convert-ikvm.xml" dir=".">
-			<property name="IN" value="-r:gdx/libs/ios32/gdx.dll -srcpath:backends/gdx-backend-iosmonotouch/src/ dist/gdx-backend-iosmonotouch.jar"/>
-			<property name="OUT" value="backends/gdx-backend-iosmonotouch/libs/ios32/gdx-backend-ios.dll"/>
-		</ant>
-	</target>
-	
-	<target name="freetype" depends="core">
-		<ant antfile="build-macosx32.xml" dir="extensions/gdx-freetype/jni">
-			<target name="clean"/>
-			<target name="postcompile"/>
-		</ant>
-		<ant antfile="build-ios32.xml" dir="extensions/gdx-freetype/jni"/>
-		<ant antfile="convert-ikvm.xml" dir=".">
-			<property name="IN" value="-r:gdx/libs/ios32/gdx.dll -srcpath:extensions/gdx-freetype/src/ dist/extensions/gdx-freetype/gdx-freetype.jar"/>
-			<property name="OUT" value="extensions/gdx-freetype/libs/ios32/gdx-freetype.dll"/>
-		</ant>
-	</target>
-	
-	<target name="bullet" depends="core">
-		<ant antfile="build-macosx32.xml" dir="extensions/gdx-bullet/jni">
-			<target name="clean"/>
-			<target name="postcompile"/>
-		</ant>
-		<!--<ant antfile="build-ios32.xml" dir="extensions/gdx-bullet/jni"/>
-		<ant antfile="convert-ikvm.xml" dir=".">
-			<property name="IN" value="-r:gdx/libs/ios32/gdx.dll -srcpath:extensions/gdx-bullet/src/ dist/extensions/gdx-bullet/gdx-bullet.jar"/>
-			<property name="OUT" value="extensions/gdx-bullet/libs/ios32/gdx-bullet.dll"/>
-		</ant>-->
-	</target>
-	
-	<target name="controllers" depends="core">
-		<ant antfile="build-macosx32.xml" dir="extensions/gdx-controllers/gdx-controllers-desktop/jni">
-			<target name="clean"/>
-			<target name="postcompile"/>
-		</ant>
-	</target>
-	
-	<target name="audio" depends="core">
-		<ant antfile="build-macosx32.xml" dir="extensions/gdx-audio/jni">
-			<target name="clean"/>
-			<target name="postcompile"/>
-		</ant>
-	</target>
-	
-	<target name="image" depends="core">
-		<ant antfile="build-macosx32.xml" dir="extensions/gdx-image/jni">
-			<target name="clean"/>
-			<target name="postcompile"/>
-		</ant>
-	</target>
-	
-	<target name="all" depends="core,backend-iosmonotouch,freetype,bullet,audio,image,controllers">	
-	</target>
-</project>
diff --git a/build-template-bullet.xml b/build-template-bullet.xml
new file mode 100644
index 0000000..06bbc2e
--- /dev/null
+++ b/build-template-bullet.xml
@@ -0,0 +1,137 @@
+<!-- 
+template Ant build file for all projects that should go into the distribution. 
+Fill out the properties at the beginning of the project definition.
+
+The following things have to be set from the outside:
+
+property name="jar" value="jar-name-without-suffix" -> the name of the resulting jar file
+property name="distDir" value="dist-directory" -> the output directory for the resulting jar
+path id="classpath" -> the filesets defining the classpath needed to compile the project
+zipfileset id="jarfiles" -> the jar files to be merged with the project's classes
+-->
+<project name="template" default="all" basedir=".">
+	<!-- default values -->
+	<property name="src" value="src"/>
+	<property name="jni" value="jni"/>
+	<property name="target" value="target" />
+	<property name="libs" value="libs" />
+	<path id="classpath"/>
+	<zipfileset id="jarfiles" dir="." excludes="**"/>
+	
+	<!-- clean output directories -->	
+	<target name="clean">		
+		<delete dir="${target}" />
+	</target>
+
+	<!-- init task, creates all necessary directories -->
+	<target name="init" depends="clean">
+		<mkdir dir="${libs}/android32" />
+		<mkdir dir="${libs}/armeabi" />
+		<mkdir dir="${libs}/armeabi-v7a" />
+		<mkdir dir="${libs}/linux32" />
+		<mkdir dir="${libs}/linux64" />
+		<mkdir dir="${libs}/macosx32" />
+		<mkdir dir="${libs}/windows32" />
+		<mkdir dir="${libs}/windows64" />
+		
+		<mkdir dir="${target}" />
+		<mkdir dir="${target}/java" />
+		<!-- need to copy the internal font to target if compiling the gdx core :/ -->
+		<copy failonerror="false" tofile="${target}/java/com/badlogic/gdx/utils/arial-15.png" file="src/com/badlogic/gdx/utils/arial-15.png" />
+		<copy failonerror="false" tofile="${target}/java/com/badlogic/gdx/utils/arial-15.fnt" file="src/com/badlogic/gdx/utils/arial-15.fnt" />
+		<!-- need to copy jni headers for gdx-jnigen -->
+		<copy failonerror="false" todir="${target}/java">
+			<fileset dir="src">
+				<include name="**/*.h"/>
+				<include name="**/*.template"/>
+			</fileset>
+		</copy>
+		<copy failonerror="false" todir="${target}/java">
+			<fileset dir="src">
+				<include name="**/*.gwt.xml"/>
+			</fileset>
+		</copy>
+	</target>
+
+	<!-- compiles the java code -->
+	<target name="compile" depends="init">
+		<javac debug="on" encoding="utf-8" srcdir="${src}" destdir="${target}/java">
+		    <src path="jni/swig-src"/> 
+			<classpath>
+				<path refid="classpath"/>
+				<fileset file="${libs}/*.jar">
+					<exclude name="*-natives.jar"/>
+				</fileset>
+			</classpath>
+			<exclude name="**/gwt/emu/java/lang/System.java"/>
+		</javac>
+	</target>
+
+
+	<!-- compile native code if available -->
+	<target name="check-natives">
+		<condition property="natives-present">
+			<and>
+				<available file="${jni}/build.xml"/>
+				<istrue value="${build-natives}"/>
+			</and>
+		</condition>
+	</target>
+	<target name="compile-natives" depends="init, check-natives" if="natives-present">
+		<echo message="compiling natives code"/>
+		<ant antfile="build.xml" target="clean" dir="${jni}"/>
+		<ant antfile="build.xml" target="all" dir="${jni}"/>
+		<!-- copy shared libs for android -->
+		<copy failonerror="false" todir="${distDir}/armeabi">
+			<fileset dir="${libs}/armeabi">
+				<include name="**/*.so"/>
+			</fileset>
+		</copy>
+		<copy failonerror="false" todir="${distDir}/armeabi-v7a">
+			<fileset dir="${libs}/armeabi-v7a">
+				<include name="**/*.so"/>
+			</fileset>
+		</copy>
+	</target>
+	
+	<!-- create source and class jar -->
+	<target name="all" depends="compile,compile-natives">
+		<!-- source jar -->
+		<mkdir dir="${distDir}/sources" />
+		<jar destfile="${distDir}/sources/${jar}-sources.jar" basedir="${src}" />
+		
+		<!-- copy shared libs for desktop -->
+		<copy failonerror="false" todir="${distDir}">
+			<fileset dir="${libs}">
+				<include name="**/*-natives.jar"/>
+				<exclude name="**/test-natives.jar"/>
+			</fileset>
+		</copy>
+		
+		<!-- copy shared libs for android -->
+		<copy failonerror="false" todir="${distDir}/armeabi">
+			<fileset dir="${libs}/armeabi">
+				<include name="**/*.so"/>
+			</fileset>
+		</copy>
+		<copy failonerror="false" todir="${distDir}/armeabi-v7a">
+			<fileset dir="${libs}/armeabi-v7a">
+				<include name="**/*.so"/>
+			</fileset>
+		</copy>
+		
+		<!-- class jar -->
+		<jar destfile="${distDir}/${jar}.jar">
+			<fileset dir="${target}/java"/>
+			<!-- merge dependencies found in libs/ folder, exclude native, debug and android/gwt jars -->
+			<zipgroupfileset file="${libs}/*.jar">
+				<exclude name="*-natives.jar"/>
+				<exclude name="*-debug.jar"/>
+				<exclude name="android-*.jar"/>
+				<exclude name="gwt*.jar"/>
+			</zipgroupfileset>
+			<!-- merge dependencies specified in parent build.xml -->
+			<zipfileset refid="jarfiles"/>
+		</jar>
+	</target>
+</project>
diff --git a/build-template.xml b/build-template.xml
index 9855b68..4f5d7d4 100644
--- a/build-template.xml
+++ b/build-template.xml
@@ -11,23 +11,29 @@ zipfileset id="jarfiles" -> the jar files to be merged with the project's classe
 -->
 <project name="template" default="all" basedir=".">
 	<!-- default values -->
-	<path id="src">
-		<pathelement location="src"/>
-	</path>
-	<path id="classpath"/>
+	<property name="src" value="src"/>
 	<property name="jni" value="jni"/>
 	<property name="target" value="target" />
 	<property name="libs" value="libs" />
+	<path id="classpath"/>
 	<zipfileset id="jarfiles" dir="." excludes="**"/>
 	
-	<!-- clean output directories, create libs directory -->	
+	<!-- clean output directories -->	
 	<target name="clean">		
-		<mkdir dir="${libs}" />
 		<delete dir="${target}" />
 	</target>
 
 	<!-- init task, creates all necessary directories -->
-	<target name="init" depends="clean">		
+	<target name="init" depends="clean">
+		<mkdir dir="${libs}/android32" />
+		<mkdir dir="${libs}/armeabi" />
+		<mkdir dir="${libs}/armeabi-v7a" />
+		<mkdir dir="${libs}/linux32" />
+		<mkdir dir="${libs}/linux64" />
+		<mkdir dir="${libs}/macosx32" />
+		<mkdir dir="${libs}/windows32" />
+		<mkdir dir="${libs}/windows64" />
+		
 		<mkdir dir="${target}" />
 		<mkdir dir="${target}/java" />
 		<!-- need to copy the internal font to target if compiling the gdx core :/ -->
@@ -49,10 +55,7 @@ zipfileset id="jarfiles" -> the jar files to be merged with the project's classe
 
 	<!-- compiles the java code -->
 	<target name="compile" depends="init">
-		<javac debug="on" encoding="utf-8" source="1.6" target="1.6" destdir="${target}/java" includeantruntime="false">
-			<src>
-				<path refid="src"/>
-			</src>
+		<javac debug="on" encoding="utf-8" srcdir="${src}" destdir="${target}/java">
 			<classpath>
 				<path refid="classpath"/>
 				<fileset file="${libs}/*.jar">
@@ -73,17 +76,7 @@ zipfileset id="jarfiles" -> the jar files to be merged with the project's classe
 			</and>
 		</condition>
 	</target>
-	
 	<target name="compile-natives" depends="init, check-natives" if="natives-present">
-		<mkdir dir="${libs}/android32" />
-		<mkdir dir="${libs}/armeabi" />
-		<mkdir dir="${libs}/armeabi-v7a" />
-		<mkdir dir="${libs}/linux32" />
-		<mkdir dir="${libs}/linux64" />
-		<mkdir dir="${libs}/macosx32" />
-		<mkdir dir="${libs}/windows32" />
-		<mkdir dir="${libs}/windows64" />
-		<mkdir dir="${libs}/ios32"/>
 		<echo message="compiling natives code"/>
 		<ant antfile="build.xml" target="clean" dir="${jni}"/>
 		<ant antfile="build.xml" target="all" dir="${jni}"/>
@@ -104,9 +97,7 @@ zipfileset id="jarfiles" -> the jar files to be merged with the project's classe
 	<target name="all" depends="compile,compile-natives">
 		<!-- source jar -->
 		<mkdir dir="${distDir}/sources" />
-		
-		<!-- FIXME doesn't work for bullet, as this only takes the src/ folder -->
-		<jar destfile="${distDir}/sources/${jar}-sources.jar" basedir="src"/>			
+		<jar destfile="${distDir}/sources/${jar}-sources.jar" basedir="${src}" />
 		
 		<!-- copy shared libs for desktop -->
 		<copy failonerror="false" todir="${distDir}">
diff --git a/build.xml b/build.xml
index 5320e29..59fadee 100644
--- a/build.xml
+++ b/build.xml
@@ -6,7 +6,7 @@
 	<property name="env.NDK_HOME" value="/home/mzechner/android-ndk-r5"/>
 	
 	<!-- library version -->
-	<property name="version" value="0.9.9-SNAPSHOT"/>
+	<property name="version" value="0.9.8"/>
 	
 	<!-- define distribution/output directory -->
 	<property name="distDir" value="${basedir}/dist"/>
@@ -61,7 +61,7 @@
 			<reference refid="classpath"/>
 		</ant>
 	</target>
-
+	
 	<!-- gdx lwjgl backend -->
 	<target name="gdx-backend-lwjgl" depends="gdx-core,gdx-openal">
 		<path id="classpath">
@@ -75,21 +75,7 @@
 			<reference refid="jarfiles"/>
 		</ant>
 	</target>
-
-	<!-- gdx jglfw backend -->
-	<target name="gdx-backend-jglfw" depends="gdx-core">
-		<mkdir dir="backends/gdx-backend-jglfw/libs"/>
-		<get src="http://libgdx.badlogicgames.com/jglfw/nightlies/dist/jglfw.jar" dest="backends/gdx-backend-jglfw/libs/jglfw.jar"/>
-		<get src="http://libgdx.badlogicgames.com/jglfw/nightlies/dist/jglfw-natives.jar" dest="backends/gdx-backend-jglfw/libs/gdx-backend-jglfw-natives.jar"/>
-		<path id="classpath">
-			<pathelement location="${distDir}/gdx.jar"/>
-		</path>
-		<ant antfile="../../build-template.xml" dir="backends/gdx-backend-jglfw">
-			<property name="jar" value="gdx-backend-jglfw"/>
-			<reference refid="classpath"/>
-		</ant>
-	</target>
-
+	
 	<!-- gdx android backend -->
 	<target name="gdx-backend-android" depends="gdx-core">
 		<path id="classpath">
@@ -109,24 +95,7 @@
 		<ant antfile="../../build-template.xml" dir="backends/gdx-backends-gwt">
 			<property name="jar" value="gdx-backend-gwt"/>
 			<reference refid="classpath"/>
-		</ant>
-	</target>
-	
-	<!-- gdx ios-monotouch backend -->
-	<target name="gdx-backend-iosmonotouch" depends="gdx-core">
-		<path id="classpath">
-			<pathelement location="${distDir}/gdx.jar"/>
-			<pathelement location="${basedir}/backends/gdx-backend-iosmonotouch/libs/monotouch-jars/monotouch-5.4.0.jar"/>
-			<pathelement location="${basedir}/backends/gdx-backend-iosmonotouch/libs/monotouch-jars/mscorlib-4.0.jar"/>
-			<pathelement location="${basedir}/backends/gdx-backend-iosmonotouch/libs/monotouch-jars/opentk-5.4.0.jar"/>
-			<pathelement location="${basedir}/backends/gdx-backend-iosmonotouch/libs/monotouch-jars/system-2.1.jar"/>
-			<pathelement location="${basedir}/backends/gdx-backend-iosmonotouch/libs/monotouch-jars/system-core-2.1.jar"/>
-			<pathelement location="${basedir}/backends/gdx-backend-iosmonotouch/libs/monotouch-jars/system-data-2.1.jar"/>
-			<pathelement location="${basedir}/backends/gdx-backend-iosmonotouch/libs/objectal/libObjectAL.jar"/>
-		</path>
-		<ant antfile="../../build-template.xml" dir="backends/gdx-backend-iosmonotouch">
-			<property name="jar" value="gdx-backend-iosmonotouch"/>
-			<reference refid="classpath"/>
+			<reference refid="jarfiles"/>
 		</ant>
 	</target>
 	
@@ -144,6 +113,20 @@
 		</ant>
 	</target>
 	
+	<!-- gdx tiled processor -->
+	<target name="gdx-tiled-preprocessor" depends="gdx-core">
+		<path id="classpath">
+			<pathelement location="${distDir}/gdx.jar"/>
+			<pathelement location="${distDir}/gdx-backend-lwjgl.jar"/>
+			<pathelement location="${distDir}/extensions/gdx-tools/gdx-tools.jar"/>
+		</path>
+		<ant antfile="../../build-template.xml" dir="extensions/gdx-tiled-preprocessor">
+			<property name="distDir" value="${distDir}/extensions/gdx-tiled-preprocessor"/>
+			<property name="jar" value="gdx-tiled-preprocessor"/>
+			<reference refid="classpath"/>
+		</ant>
+	</target>
+	
 	<!-- gdx controllers -->
 	<target name="gdx-controllers" depends="gdx-core">
 		<path id="classpath">
@@ -156,9 +139,10 @@
 		</ant>
 	</target>
 	
-	<target name="gdx-controllers-desktop" depends="gdx-core,gdx-jnigen,gdx-controllers">
+	<target name="gdx-controllers-desktop" depends="gdx-core,gdx-backend-lwjgl,gdx-jnigen,gdx-controllers">
 		<path id="classpath">
 			<pathelement location="${distDir}/gdx.jar"/>
+			<pathelement location="${distDir}/gdx-backend-lwjgl.jar"/>
 			<pathelement location="${distDir}/extensions/gdx-jnigen/gdx-jnigen.jar"/>
 			<pathelement location="${distDir}/extensions/gdx-controllers/gdx-controllers.jar"/>
 		</path>
@@ -241,15 +225,10 @@
 			<pathelement location="${distDir}/gdx.jar"/>
 			<pathelement location="${distDir}/extensions/gdx-jnigen/gdx-jnigen.jar"/>
 		</path>
-		<path id="src">
-				<pathelement location="extensions/gdx-bullet/src"/>
-				<pathelement location="extensions/gdx-bullet/jni/swig-src"/>
-		</path>
-		<ant antfile="../../build-template.xml" dir="extensions/gdx-bullet">
+		<ant antfile="../../build-template-bullet.xml" dir="extensions/gdx-bullet">
 			<property name="distDir" value="${distDir}/extensions/gdx-bullet"/>
 			<property name="jar" value="gdx-bullet"/>
 			<reference refid="classpath"/>
-			<reference refid="src"/>
 		</ant>
 	</target>
 	
@@ -275,7 +254,7 @@
 			]]></header>
 			<bottom><![CDATA[
 				<div style="font-size:9pt"><i>
-				Copyright &copy; 2010-2013 Mario Zechner (contact@badlogicgames.com), Nathan Sweet (admin@esotericsoftware.com)
+				Copyright 2010 Mario Zechner (contact@badlogicgames.com), Nathan Sweet (admin@esotericsoftware.com)
 				</i></div>
 			]]></bottom>
 			<fileset dir="gdx/src" defaultexcludes="yes">
@@ -285,30 +264,17 @@
 				<exclude name="com/badlogic/gdx/utils/XmlReader.rl" />
 				<exclude name="com/badlogic/gdx/utils/JsonReader.rl" />
 			</fileset>			
-			<fileset dir="backends" includes="gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwApplication.java"/>
 			<fileset dir="backends" includes="gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglApplication.java"/>
 			<fileset dir="backends" includes="gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglCanvas.java"/>
 			<fileset dir="backends" includes="gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglApplet.java"/>
 			<fileset dir="backends" includes="gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidApplication.java"/>
 			<fileset dir="backends" includes="gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidApplicationConfiguration.java"/>
-			<fileset dir="backends" includes="gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSApplication.java"/>
-			<fileset dir="backends" includes="gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSApplicationConfiguration.java"/>
-			<fileset dir="backends" includes="gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtApplication.java"/>
-			<fileset dir="backends" includes="gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtApplicationConfiguration.java"/>
 		</javadoc>
 	</target>
 	
-	<!-- assumes that all the .dll and .a files have been compiled on a Mac and copied on top 
-	of the current libgdx folder -->
 	<target name="copy-iosfiles">
-		<!-- copy dll and .a files as well as IKVM, monotouch and ObjectAL binaries to ios folder-->
 		<copy todir="${distDir}/ios" flatten="true" failonerror="false">
-			<fileset dir="gdx/libs/ios32/">
-				<include name="*.a"/>
-				<include name="*.dll"/>
-				<include name="*.dll.mdb"/>
-			</fileset>
-			<fileset dir="backends/gdx-backend-iosmonotouch/libs/ios32">
+			<fileset dir="backends/gdx-backend-iosmonotouch/libs/">
 				<include name="*.dll"/>
 				<include name="*.dll.mdb"/>
 				<include name="*.a"/>
@@ -322,29 +288,11 @@
 		</copy>
 		<copy todir="${distDir}/ios/objectal" failonerror="false">
 			<fileset dir="backends/gdx-backend-iosmonotouch/libs/objectal"/>
-		</copy>		
-		
-		<!-- copy freetype extension dll and .a files -->
-		<copy todir="${distDir}/extensions/gdx-freetype/ios" failonerror="false">
-			<fileset dir="extensions/gdx-freetype/libs/ios32">
-				<include name="*.a"/>
-				<include name="*.dll"/>
-				<include name="*.dll.mdb"/>
-			</fileset>
-		</copy>
-		
-		<!-- copy bullet extension dll and .a files -->
-		<copy todir="${distDir}/extensions/gdx-bullet/ios" failonerror="false">
-			<fileset dir="extensions/gdx-bullet/libs/ios32">
-				<include name="*.a"/>
-				<include name="*.dll"/>
-				<include name="*.dll.mdb"/>
-			</fileset>
 		</copy>
 	</target>
 
 	<target name="jars" 
-depends="clean,gdx-setup-ui,gdx-core,gdx-openal,gdx-backend-lwjgl,gdx-backend-jglfw,gdx-backend-android,gdx-backend-gwt,gdx-backend-iosmonotouch,gdx-tools,gdx-controllers,gdx-controllers-desktop,gdx-controllers-android,gdx-controllers-gwt,gdx-image,gdx-audio,gdx-freetype,gdx-bullet"/>
+depends="clean,gdx-setup-ui,gdx-core,gdx-openal,gdx-backend-lwjgl,gdx-backend-android,gdx-backend-gwt,gdx-tools,gdx-tiled-preprocessor,gdx-controllers,gdx-controllers-desktop,gdx-controllers-android,gdx-controllers-gwt,gdx-image,gdx-audio,gdx-freetype,gdx-bullet"/>
 
 	<target name="all" depends="jars,docs,copy-iosfiles">
 		<!-- copy distribution files (licences etc.) -->
diff --git a/compile-macosx.sh b/compile-macosx.sh
new file mode 100755
index 0000000..f2fe587
--- /dev/null
+++ b/compile-macosx.sh
@@ -0,0 +1,33 @@
+# compiles all the natives for mac os x and ios
+cd extensions/gdx-controllers/gdx-controllers-desktop/jni
+ant -f build-macosx32.xml clean
+ant -f build-macosx32.xml
+cd ../../../..
+cd gdx/jni
+ant -f build-macosx32.xml clean
+ant -f build-macosx32.xml
+cd ../..
+cd extensions
+cd gdx-freetype/jni
+ant -f build-macosx32.xml clean
+ant -f build-macosx32.xml
+cd ../..
+cd gdx-audio/jni
+ant -f build-macosx32.xml clean
+ant -f build-macosx32.xml
+cd ../..
+cd gdx-image/jni
+ant -f build-macosx32.xml clean
+ant -f build-macosx32.xml
+cd ../..
+cd gdx-bullet/jni
+ant -f build-macosx32.xml clean
+ant -f build-macosx32.xml
+cd ../../..
+
+# special iOS sauce, you need to have IKVM_HOME set in your environment
+# MonoTouch must be installed as well as XCode. You also need Ant 1.8.x
+# in your PATH 
+cd backends/gdx-backend-iosmonotouch
+ant
+cd ../..
diff --git a/convert-ikvm.xml b/convert-ikvm.xml
deleted file mode 100755
index 0fda2de..0000000
--- a/convert-ikvm.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<project name="gdx" default="convert" basedir=".">
- 	<property environment="env"/>
-	<property name="IKVM_HOME" value="${basedir}/backends/gdx-backend-iosmonotouch/libs/ikvm"/>
-	<property name="MONO_HOME" value="/Developer/MonoTouch/usr/lib/mono/2.1"/>
-
-	<target name="convert">
-		<exec executable="mono">
-			<arg value="${IKVM_HOME}/bin/ikvmc.exe"/>
-			<arg value="-nostdlib"/>
-			<arg value="-target:library"/>
-			<arg value="-debug"/>
-			<arg value="-out:${OUT}"/>
-			<arg value="-r:backends/gdx-backend-iosmonotouch/libs/objectal/libObjectAL.dll"/>
-			<arg value="-r:${MONO_HOME}/mscorlib.dll"/>
-			<arg value="-r:${MONO_HOME}/System.dll"/>
-			<arg value="-r:${MONO_HOME}/System.Core.dll"/>
-			<arg value="-r:${MONO_HOME}/System.Data.dll"/>
-			<arg value="-r:${MONO_HOME}/OpenTK-1.0.dll"/>
-			<arg value="-r:${MONO_HOME}/monotouch.dll"/>
-			<arg value="-r:${MONO_HOME}/Mono.Data.Sqlite.dll"/>
-			<arg line="${IN}"/>
-		</exec>
-	</target>
-</project>
diff --git a/demos/cuboc/cuboc-android/libs/armeabi-v7a/libandroidgl20.so b/demos/cuboc/cuboc-android/libs/armeabi-v7a/libandroidgl20.so
new file mode 100644
index 0000000..7a7cd7f
Binary files /dev/null and b/demos/cuboc/cuboc-android/libs/armeabi-v7a/libandroidgl20.so differ
diff --git a/demos/cuboc/cuboc-android/libs/armeabi-v7a/libgdx.so b/demos/cuboc/cuboc-android/libs/armeabi-v7a/libgdx.so
new file mode 100644
index 0000000..8d31a3e
Binary files /dev/null and b/demos/cuboc/cuboc-android/libs/armeabi-v7a/libgdx.so differ
diff --git a/demos/cuboc/cuboc-android/libs/armeabi/libandroidgl20.so b/demos/cuboc/cuboc-android/libs/armeabi/libandroidgl20.so
new file mode 100644
index 0000000..7a7cd7f
Binary files /dev/null and b/demos/cuboc/cuboc-android/libs/armeabi/libandroidgl20.so differ
diff --git a/demos/cuboc/cuboc-android/libs/armeabi/libgdx.so b/demos/cuboc/cuboc-android/libs/armeabi/libgdx.so
new file mode 100644
index 0000000..36f294f
Binary files /dev/null and b/demos/cuboc/cuboc-android/libs/armeabi/libgdx.so differ
diff --git a/demos/cuboc/cuboc-android/project.properties b/demos/cuboc/cuboc-android/project.properties
index c4f09d2..2cc58fa 100644
--- a/demos/cuboc/cuboc-android/project.properties
+++ b/demos/cuboc/cuboc-android/project.properties
@@ -8,4 +8,4 @@
 # project structure.
 
 # Project target.
-target=android-17
+target=android-12
diff --git a/demos/cuboc/cuboc/src/com/badlogic/cubocy/Map.java b/demos/cuboc/cuboc/src/com/badlogic/cubocy/Map.java
index 33ece3f..53689ce 100644
--- a/demos/cuboc/cuboc/src/com/badlogic/cubocy/Map.java
+++ b/demos/cuboc/cuboc/src/com/badlogic/cubocy/Map.java
@@ -36,6 +36,7 @@ public class Map {
 		for (int y = 0; y < 35; y++) {
 			for (int x = 0; x < 150; x++) {
 				int pix = (pixmap.getPixel(x, y) >>> 8) & 0xffffff;
+				Gdx.app.log("Map", x + ", " + y + ", " + Integer.toHexString(pix));
 				if (match(pix, START)) {
 					Dispenser dispenser = new Dispenser(x, pixmap.getHeight() - 1 - y);
 					dispensers.add(dispenser);
diff --git a/demos/cuboc/cuboc/src/com/badlogic/cubocy/MapRenderer.java b/demos/cuboc/cuboc/src/com/badlogic/cubocy/MapRenderer.java
index f497244..5a2f23d 100644
--- a/demos/cuboc/cuboc/src/com/badlogic/cubocy/MapRenderer.java
+++ b/demos/cuboc/cuboc/src/com/badlogic/cubocy/MapRenderer.java
@@ -134,6 +134,7 @@ public class MapRenderer {
 			}
 		}
 		cache.end();
+		Gdx.app.debug("Cubocy", "blocks: " + b);
 		stateTime += deltaTime;
 		batch.setProjectionMatrix(cam.combined);
 		batch.begin();
diff --git a/demos/invaders/gdx-invaders-android/libs/armeabi-v7a/libandroidgl20.so b/demos/invaders/gdx-invaders-android/libs/armeabi-v7a/libandroidgl20.so
new file mode 100644
index 0000000..7a7cd7f
Binary files /dev/null and b/demos/invaders/gdx-invaders-android/libs/armeabi-v7a/libandroidgl20.so differ
diff --git a/demos/invaders/gdx-invaders-android/libs/armeabi-v7a/libgdx.so b/demos/invaders/gdx-invaders-android/libs/armeabi-v7a/libgdx.so
new file mode 100644
index 0000000..8d31a3e
Binary files /dev/null and b/demos/invaders/gdx-invaders-android/libs/armeabi-v7a/libgdx.so differ
diff --git a/demos/invaders/gdx-invaders-android/libs/armeabi/libandroidgl20.so b/demos/invaders/gdx-invaders-android/libs/armeabi/libandroidgl20.so
new file mode 100644
index 0000000..7a7cd7f
Binary files /dev/null and b/demos/invaders/gdx-invaders-android/libs/armeabi/libandroidgl20.so differ
diff --git a/demos/invaders/gdx-invaders-android/libs/armeabi/libgdx.so b/demos/invaders/gdx-invaders-android/libs/armeabi/libgdx.so
new file mode 100644
index 0000000..36f294f
Binary files /dev/null and b/demos/invaders/gdx-invaders-android/libs/armeabi/libgdx.so differ
diff --git a/demos/invaders/gdx-invaders-android/project.properties b/demos/invaders/gdx-invaders-android/project.properties
index fd44ee5..c1fd41a 100644
--- a/demos/invaders/gdx-invaders-android/project.properties
+++ b/demos/invaders/gdx-invaders-android/project.properties
@@ -10,4 +10,4 @@
 # Indicates whether an apk should be generated for each density.
 split.density=false
 # Project target.
-target=android-17
+target=android-8
diff --git a/demos/invaders/gdx-invaders-android/res/layout/main.xml b/demos/invaders/gdx-invaders-android/res/layout/main.xml
new file mode 100644
index 0000000..3a5f117
--- /dev/null
+++ b/demos/invaders/gdx-invaders-android/res/layout/main.xml
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:orientation="vertical"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent"
+    >
+<TextView  
+    android:layout_width="fill_parent" 
+    android:layout_height="wrap_content" 
+    android:text="@string/hello"
+    />
+</LinearLayout>
diff --git a/demos/invaders/gdx-invaders-android/res/values/strings.xml b/demos/invaders/gdx-invaders-android/res/values/strings.xml
index e8447b0..8d612ad 100644
--- a/demos/invaders/gdx-invaders-android/res/values/strings.xml
+++ b/demos/invaders/gdx-invaders-android/res/values/strings.xml
@@ -1,4 +1,5 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
+    <string name="hello">Hello World, GdxInvadersAndroid!</string>
     <string name="app_name">Gdx Invaders</string>
 </resources>
diff --git a/demos/invaders/gdx-invaders-ios/gdx-invaders-ios.userprefs b/demos/invaders/gdx-invaders-ios/gdx-invaders-ios.userprefs
index 1de8c83..e3bbaf3 100644
--- a/demos/invaders/gdx-invaders-ios/gdx-invaders-ios.userprefs
+++ b/demos/invaders/gdx-invaders-ios/gdx-invaders-ios.userprefs
@@ -4,15 +4,6 @@
     <Files>
       <File FileName="gdx-invaders-ios/Main.cs" Line="9" Column="24" />
     </Files>
-    <Pads>
-      <Pad Id="ProjectPad">
-        <State expanded="True">
-          <Node name="gdx-invaders-ios" expanded="True">
-            <Node name="References" expanded="True" selected="True" />
-          </Node>
-        </State>
-      </Pad>
-    </Pads>
   </MonoDevelop.Ide.Workbench>
   <MonoDevelop.Ide.DebuggingService.Breakpoints>
     <BreakpointStore />
diff --git a/demos/invaders/gdx-invaders-ios/gdx-invaders-ios/gdx-invaders-ios.csproj b/demos/invaders/gdx-invaders-ios/gdx-invaders-ios/gdx-invaders-ios.csproj
index 90eedec..1eaf659 100644
--- a/demos/invaders/gdx-invaders-ios/gdx-invaders-ios/gdx-invaders-ios.csproj
+++ b/demos/invaders/gdx-invaders-ios/gdx-invaders-ios/gdx-invaders-ios.csproj
@@ -113,7 +113,7 @@
     <Reference Include="System.Core" />
     <Reference Include="monotouch" />
     <Reference Include="gdx">
-      <HintPath>..\..\..\..\gdx\libs\ios32\gdx.dll</HintPath>
+      <HintPath>..\..\..\..\backends\gdx-backend-iosmonotouch\libs\gdx.dll</HintPath>
     </Reference>
     <Reference Include="gdx-backend-ios">
       <HintPath>..\..\..\..\backends\gdx-backend-iosmonotouch\libs\gdx-backend-ios.dll</HintPath>
diff --git a/demos/invaders/gdx-invaders-ios/gdx-invaders-ios/libgdx.a b/demos/invaders/gdx-invaders-ios/gdx-invaders-ios/libgdx.a
new file mode 100644
index 0000000..a681686
Binary files /dev/null and b/demos/invaders/gdx-invaders-ios/gdx-invaders-ios/libgdx.a differ
diff --git a/demos/invaders/gdx-invaders-ios/gdx-invaders-ios/libikvm-natives.a b/demos/invaders/gdx-invaders-ios/gdx-invaders-ios/libikvm-natives.a
new file mode 100644
index 0000000..29296a2
Binary files /dev/null and b/demos/invaders/gdx-invaders-ios/gdx-invaders-ios/libikvm-natives.a differ
diff --git a/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/screens/GameLoop.java b/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/screens/GameLoop.java
index 489bee3..ad80cf4 100644
--- a/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/screens/GameLoop.java
+++ b/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/screens/GameLoop.java
@@ -16,10 +16,12 @@ package com.badlogic.gdxinvaders.screens;
 import com.badlogic.gdx.Gdx;
 import com.badlogic.gdx.Input.Keys;
 import com.badlogic.gdx.audio.Sound;
+import com.badlogic.gdx.controllers.ControlType;
 import com.badlogic.gdx.controllers.Controller;
 import com.badlogic.gdx.controllers.ControllerAdapter;
 import com.badlogic.gdx.controllers.ControllerListener;
 import com.badlogic.gdx.controllers.Controllers;
+import com.badlogic.gdx.controllers.PovDirection;
 import com.badlogic.gdx.controllers.mappings.Ouya;
 import com.badlogic.gdxinvaders.Renderer;
 import com.badlogic.gdxinvaders.RendererGL10;
diff --git a/demos/metagun/metagun-android/libs/armeabi-v7a/libandroidgl20.so b/demos/metagun/metagun-android/libs/armeabi-v7a/libandroidgl20.so
new file mode 100644
index 0000000..7a7cd7f
Binary files /dev/null and b/demos/metagun/metagun-android/libs/armeabi-v7a/libandroidgl20.so differ
diff --git a/demos/metagun/metagun-android/libs/armeabi-v7a/libgdx.so b/demos/metagun/metagun-android/libs/armeabi-v7a/libgdx.so
new file mode 100644
index 0000000..8d31a3e
Binary files /dev/null and b/demos/metagun/metagun-android/libs/armeabi-v7a/libgdx.so differ
diff --git a/demos/metagun/metagun-android/libs/armeabi/libandroidgl20.so b/demos/metagun/metagun-android/libs/armeabi/libandroidgl20.so
new file mode 100644
index 0000000..7a7cd7f
Binary files /dev/null and b/demos/metagun/metagun-android/libs/armeabi/libandroidgl20.so differ
diff --git a/demos/metagun/metagun-android/libs/armeabi/libgdx.so b/demos/metagun/metagun-android/libs/armeabi/libgdx.so
new file mode 100644
index 0000000..36f294f
Binary files /dev/null and b/demos/metagun/metagun-android/libs/armeabi/libgdx.so differ
diff --git a/demos/metagun/metagun-android/project.properties b/demos/metagun/metagun-android/project.properties
index c4f09d2..f049142 100644
--- a/demos/metagun/metagun-android/project.properties
+++ b/demos/metagun/metagun-android/project.properties
@@ -8,4 +8,4 @@
 # project structure.
 
 # Project target.
-target=android-17
+target=android-10
diff --git a/demos/pax-britannica/pax-britannica-android/libs/armeabi-v7a/libandroidgl20.so b/demos/pax-britannica/pax-britannica-android/libs/armeabi-v7a/libandroidgl20.so
new file mode 100755
index 0000000..7a7cd7f
Binary files /dev/null and b/demos/pax-britannica/pax-britannica-android/libs/armeabi-v7a/libandroidgl20.so differ
diff --git a/demos/pax-britannica/pax-britannica-android/libs/armeabi-v7a/libgdx.so b/demos/pax-britannica/pax-britannica-android/libs/armeabi-v7a/libgdx.so
new file mode 100755
index 0000000..8d31a3e
Binary files /dev/null and b/demos/pax-britannica/pax-britannica-android/libs/armeabi-v7a/libgdx.so differ
diff --git a/demos/pax-britannica/pax-britannica-android/libs/armeabi/libandroidgl20.so b/demos/pax-britannica/pax-britannica-android/libs/armeabi/libandroidgl20.so
new file mode 100755
index 0000000..7a7cd7f
Binary files /dev/null and b/demos/pax-britannica/pax-britannica-android/libs/armeabi/libandroidgl20.so differ
diff --git a/demos/pax-britannica/pax-britannica-android/libs/armeabi/libgdx.so b/demos/pax-britannica/pax-britannica-android/libs/armeabi/libgdx.so
new file mode 100755
index 0000000..36f294f
Binary files /dev/null and b/demos/pax-britannica/pax-britannica-android/libs/armeabi/libgdx.so differ
diff --git a/demos/pax-britannica/pax-britannica-android/project.properties b/demos/pax-britannica/pax-britannica-android/project.properties
index a3ee5ab..9b84a6b 100755
--- a/demos/pax-britannica/pax-britannica-android/project.properties
+++ b/demos/pax-britannica/pax-britannica-android/project.properties
@@ -11,4 +11,4 @@
 #proguard.config=${sdk.dir}/tools/proguard/proguard-android.txt:proguard-project.txt
 
 # Project target.
-target=android-17
+target=android-16
diff --git a/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch.userprefs b/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch.userprefs
index ec32389..2df5211 100644
--- a/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch.userprefs
+++ b/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch.userprefs
@@ -1,5 +1,5 @@
 ﻿<Properties>
-  <MonoDevelop.Ide.Workspace ActiveConfiguration="Debug|iPhone" />
+  <MonoDevelop.Ide.Workspace ActiveConfiguration="Debug|iPhoneSimulator" />
   <MonoDevelop.Ide.Workbench ActiveDocument="../pax-britannica/src/de/swagner/paxbritannica/settings/Settings.java">
     <Files>
       <File FileName="pax-britannica-iosmonotouch/Main.cs" Line="11" Column="2" />
@@ -9,15 +9,6 @@
       <File FileName="../pax-britannica/src/de/swagner/paxbritannica/settings/Settings.java" Line="101" Column="5" />
       <File FileName="../../../gdx/src/com/badlogic/gdx/Game.java" Line="59" Column="1" />
     </Files>
-    <Pads>
-      <Pad Id="ProjectPad">
-        <State expanded="True">
-          <Node name="pax-britannica-iosmonotouch" expanded="True" selected="True">
-            <Node name="References" expanded="True" />
-          </Node>
-        </State>
-      </Pad>
-    </Pads>
   </MonoDevelop.Ide.Workbench>
   <MonoDevelop.Ide.DebuggingService.Breakpoints>
     <BreakpointStore>
diff --git a/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch/convert.properties b/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch/convert.properties
deleted file mode 100644
index 0dc6846..0000000
--- a/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch/convert.properties
+++ /dev/null
@@ -1,6 +0,0 @@
-SRC =       ../../pax-britannica/src/
-CLASSPATH = ../../../../gdx/bin
-EXCLUDE   = **/*Desktop.java
-IN        = -r:../../../../gdx/libs/ios32/gdx.dll -recurse:target/*.class
-OUT       = paxbritannica.dll
-
diff --git a/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch/convert.xml b/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch/convert.xml
index 8848391..03d94e4 100644
--- a/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch/convert.xml
+++ b/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch/convert.xml
@@ -1,25 +1,28 @@
 <project name="gdx" default="convert" basedir=".">
 	<property environment="env"/>
-	<property file="convert.properties" />
-	<property name="IKVM_HOME" value="../../../../backends/gdx-backend-iosmonotouch/libs/ikvm"/>
+	<property name="IKVM_HOME" value="${env.IKVM_HOME}"/>
 	<property name="MONO_HOME" value="/Developer/MonoTouch/usr/lib/mono/2.1"/>
+	<property name="IN" value="-recurse:target/core/*.class"/>
+	<property name="OUT" value="gdx.dll"/>
+	<property name="SRC" value="src/"/>
+	<property name="CLASSPATH" value=""/>
+	<property name="EXCLUDE" value=""/>
 
 	<target name="compile">
 		<delete dir="target"/>
 		<mkdir dir="target"/>
-		<javac srcdir="${SRC}" debug="on" source="1.6" target="1.6" destdir="target" classpath="${CLASSPATH}">
+		<javac srcdir="${SRC}" debug="on" destdir="target" classpath="${CLASSPATH}">
 			<include name="**/*.java"/>
 			<exclude name="${EXCLUDE}"/>
 		</javac>
 	</target>
 
-	<target name="convert" depends="compile">
+	<target name="convert">
 		<exec executable="mono">
 			<arg value="${IKVM_HOME}/bin/ikvmc.exe"/>
 			<arg value="-nostdlib"/>
 			<arg value="-target:library"/>
 			<arg value="-debug"/>
-			<arg value="-srcpath:${SRC}"/>
 			<arg value="-out:${OUT}"/>
 			<arg value="-r:${MONO_HOME}/mscorlib.dll"/>
 			<arg value="-r:${MONO_HOME}/System.dll"/>
@@ -28,6 +31,7 @@
 			<arg value="-r:${MONO_HOME}/OpenTK.dll"/>
 			<arg value="-r:${MONO_HOME}/monotouch.dll"/>
 			<arg value="-r:${MONO_HOME}/Mono.Data.Sqlite.dll"/>
+			<arg value="-srcpath:${SRC}"/>
 			<arg line="${IN}"/>
 		</exec>
 	</target>
diff --git a/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch/libgdx.a b/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch/libgdx.a
new file mode 100644
index 0000000..a681686
Binary files /dev/null and b/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch/libgdx.a differ
diff --git a/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch/libikvm-natives.a b/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch/libikvm-natives.a
new file mode 100644
index 0000000..29296a2
Binary files /dev/null and b/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch/libikvm-natives.a differ
diff --git a/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch.csproj b/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch.csproj
index 0ead64d..abcfa92 100644
--- a/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch.csproj
+++ b/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch.csproj
@@ -26,7 +26,7 @@
     <MtouchLink>None</MtouchLink>
     <CustomCommands>
       <CustomCommands>
-        <Command type="BeforeBuild" command="ant -v -f convert.xml" workingdir="${ProjectDir}" />
+        <Command type="BeforeBuild" command="ant -f convert.xml compile convert -DSRC=&quot;../../pax-britannica/src&quot; -DCLASSPATH=&quot;../../../../gdx/bin/;../../../../backends/gdx-backend-lwjgl/bin&quot; -DIN=&quot;-r:../../../../backends/gdx-backend-iosmonotouch/libs/gdx.dll -recurse:target/*.class&quot;  -DOUT=&quot;paxbritannica.dll&quot; -DEXCLUDE=&quot;**/*Desktop.java&quot; -v" workingdir="${ProjectDir}" />
       </CustomCommands>
     </CustomCommands>
     <MtouchExtraArgs>-nosymbolstrip -nostrip -cxx -gcc_flags "-L${ProjectDir} -likvm-natives -lgdx -force_load ${ProjectDir}/libgdx.a -force_load ${ProjectDir}/libikvm-natives.a"</MtouchExtraArgs>
@@ -42,7 +42,7 @@
     <MtouchLink>None</MtouchLink>
     <CustomCommands>
       <CustomCommands>
-        <Command type="BeforeBuild" command="ant -v -f convert.xml" workingdir="${ProjectDir}" />
+        <Command type="BeforeBuild" command="ant -f convert.xml compile convert -DSRC=&quot;../../pax-britannica/src/&quot; -DCLASSPATH=&quot;../../../../gdx/bin/;../../../../backends/gdx-backend-lwjgl/bin&quot; -DIN=&quot;-r:../../../../backends/gdx-backend-iosmonotouch/libs/gdx.dll -recurse:target/*.class&quot;  -DOUT=&quot;paxbritannica.dll&quot; -DEXCLUDE=&quot;**/*Desktop.java&quot; -v" workingdir="${ProjectDir}" />
       </CustomCommands>
     </CustomCommands>
     <MtouchExtraArgs>-nosymbolstrip -nostrip -cxx -gcc_flags "-L${ProjectDir} -likvm-natives -lgdx -force_load ${ProjectDir}/libgdx.a -force_load ${ProjectDir}/libikvm-natives.a"</MtouchExtraArgs>
@@ -62,7 +62,7 @@
     <MtouchProfiling>True</MtouchProfiling>
     <CustomCommands>
       <CustomCommands>
-        <Command type="BeforeBuild" command="ant -v -f convert.xml" workingdir="${ProjectDir}" />
+        <Command type="BeforeBuild" command="ant -f convert.xml compile convert -DSRC=&quot;../../pax-britannica/src/&quot; -DCLASSPATH=&quot;../../../../gdx/bin/;../../../../backends/gdx-backend-lwjgl/bin&quot; -DIN=&quot;-r:../../../../backends/gdx-backend-iosmonotouch/libs/gdx.dll -recurse:target/*.class&quot;  -DOUT=&quot;paxbritannica.dll&quot; -DEXCLUDE=&quot;**/*Desktop.java&quot; -v" workingdir="${ProjectDir}" />
       </CustomCommands>
     </CustomCommands>
     <MtouchExtraArgs>-nosymbolstrip -nostrip -cxx -gcc_flags "-L${ProjectDir} -likvm-natives -lgdx -force_load ${ProjectDir}/libgdx.a -force_load ${ProjectDir}/libikvm-natives.a"</MtouchExtraArgs>
@@ -80,7 +80,7 @@
     <CodesignKey>iPhone Developer</CodesignKey>
     <CustomCommands>
       <CustomCommands>
-        <Command type="BeforeBuild" command="ant -v -f convert.xml" workingdir="${ProjectDir}" />
+        <Command type="BeforeBuild" command="ant -f convert.xml compile convert -DSRC=&quot;../../pax-britannica/src/&quot; -DCLASSPATH=&quot;../../../../gdx/bin/;../../../../backends/gdx-backend-lwjgl/bin&quot; -DIN=&quot;-r:../../../../backends/gdx-backend-iosmonotouch/libs/gdx.dll -recurse:target/*.class&quot;  -DOUT=&quot;paxbritannica.dll&quot; -DEXCLUDE=&quot;**/*Desktop.java&quot; -v" workingdir="${ProjectDir}" />
       </CustomCommands>
     </CustomCommands>
     <MtouchExtraArgs>-nosymbolstrip -nostrip -cxx -gcc_flags "-L${ProjectDir} -likvm-natives -lgdx -force_load ${ProjectDir}/libgdx.a -force_load ${ProjectDir}/libikvm-natives.a"</MtouchExtraArgs>
@@ -113,10 +113,10 @@
     <Reference Include="System.Core" />
     <Reference Include="monotouch" />
     <Reference Include="gdx">
-      <HintPath>..\..\..\..\gdx\libs\ios32\gdx.dll</HintPath>
+      <HintPath>..\..\..\..\backends\gdx-backend-iosmonotouch\libs\gdx.dll</HintPath>
     </Reference>
     <Reference Include="gdx-backend-ios">
-      <HintPath>..\..\..\..\backends\gdx-backend-iosmonotouch\libs\ios32\gdx-backend-ios.dll</HintPath>
+      <HintPath>..\..\..\..\backends\gdx-backend-iosmonotouch\libs\gdx-backend-ios.dll</HintPath>
     </Reference>
     <Reference Include="ICSharpCode.SharpZipLib">
       <HintPath>..\..\..\..\backends\gdx-backend-iosmonotouch\libs\ikvm\bin\ICSharpCode.SharpZipLib.dll</HintPath>
@@ -151,9 +151,6 @@
     <Reference Include="paxbritannica">
       <HintPath>paxbritannica.dll</HintPath>
     </Reference>
-    <Reference Include="libObjectAL">
-      <HintPath>..\..\..\..\backends\gdx-backend-iosmonotouch\libs\objectal\libObjectAL.dll</HintPath>
-    </Reference>
   </ItemGroup>
   <ItemGroup>
     <None Include="Info.plist" />
diff --git a/demos/pax-britannica/pax-britannica/src/de/swagner/paxbritannica/Ship.java b/demos/pax-britannica/pax-britannica/src/de/swagner/paxbritannica/Ship.java
index 8f658c1..f1ef9f7 100755
--- a/demos/pax-britannica/pax-britannica/src/de/swagner/paxbritannica/Ship.java
+++ b/demos/pax-britannica/pax-britannica/src/de/swagner/paxbritannica/Ship.java
@@ -66,7 +66,7 @@ public class Ship extends Sprite {
 		collisionPoints.get(2).set( this.getVertices()[10], this.getVertices()[11]);
 		collisionPoints.get(3).set( this.getVertices()[15], this.getVertices()[16]);
 		
-		collisionCenter.set(collisionPoints.get(2)).mul(0.5f).add(collisionPoints.get(0));
+		collisionCenter.set(collisionPoints.get(0).tmp().add(collisionPoints.get(2)).mul(0.5f));
 
 		velocity.mul( (float) Math.pow(0.97f, delta * 30.f));
 		position.add(velocity.x * delta, velocity.y * delta);
@@ -105,14 +105,8 @@ public class Ship extends Sprite {
 				+ MathUtils.random(-this.getHeight() / 2, this.getHeight() / 2));
 	}
 
-	/*
-	 * Scratch space for computing a target's direction. This is safe (as a static) because
-	 * its only used in goTowardsOrAway which is only called on the render thread (via update).
-	 */
-	private static final Vector2 target_direction = new Vector2(); 
-
 	public void goTowardsOrAway(Vector2 targetPos, boolean forceThrust, boolean isAway) {
-		target_direction.set(targetPos).sub(collisionCenter);
+		Vector2 target_direction = targetPos.tmp().sub(collisionCenter);
 		if (isAway) {
 			target_direction.mul(-1);
 		}
@@ -150,7 +144,7 @@ public class Ship extends Sprite {
 
 	public void factoryDestruct() {
 		delta = Math.min(0.06f, Gdx.graphics.getDeltaTime());
-
+		
 		if (deathCounter > 0) {
 			((FactoryProduction) this).production.halt_production = true;
 			this.setColor(1, 1, 1, Math.min(1, opacity));
diff --git a/demos/superjumper/superjumper-android/.classpath b/demos/superjumper/superjumper-android/.classpath
index 1f85b4e..bc35b2c 100644
--- a/demos/superjumper/superjumper-android/.classpath
+++ b/demos/superjumper/superjumper-android/.classpath
@@ -6,6 +6,5 @@
 	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx-backend-android"/>
 	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/superjumper"/>
 	<classpathentry kind="con" path="com.android.ide.eclipse.adt.ANDROID_FRAMEWORK"/>
-	<classpathentry exported="true" kind="con" path="com.android.ide.eclipse.adt.LIBRARIES"/>
 	<classpathentry kind="output" path="bin/classes"/>
 </classpath>
diff --git a/demos/superjumper/superjumper-android/libs/armeabi-v7a/libandroidgl20.so b/demos/superjumper/superjumper-android/libs/armeabi-v7a/libandroidgl20.so
new file mode 100644
index 0000000..7a7cd7f
Binary files /dev/null and b/demos/superjumper/superjumper-android/libs/armeabi-v7a/libandroidgl20.so differ
diff --git a/demos/superjumper/superjumper-android/libs/armeabi-v7a/libgdx.so b/demos/superjumper/superjumper-android/libs/armeabi-v7a/libgdx.so
new file mode 100644
index 0000000..8d31a3e
Binary files /dev/null and b/demos/superjumper/superjumper-android/libs/armeabi-v7a/libgdx.so differ
diff --git a/demos/superjumper/superjumper-android/libs/armeabi/libandroidgl20.so b/demos/superjumper/superjumper-android/libs/armeabi/libandroidgl20.so
new file mode 100644
index 0000000..7a7cd7f
Binary files /dev/null and b/demos/superjumper/superjumper-android/libs/armeabi/libandroidgl20.so differ
diff --git a/demos/superjumper/superjumper-android/libs/armeabi/libgdx.so b/demos/superjumper/superjumper-android/libs/armeabi/libgdx.so
new file mode 100644
index 0000000..36f294f
Binary files /dev/null and b/demos/superjumper/superjumper-android/libs/armeabi/libgdx.so differ
diff --git a/demos/superjumper/superjumper-android/project.properties b/demos/superjumper/superjumper-android/project.properties
index c4f09d2..f049142 100644
--- a/demos/superjumper/superjumper-android/project.properties
+++ b/demos/superjumper/superjumper-android/project.properties
@@ -8,4 +8,4 @@
 # project structure.
 
 # Project target.
-target=android-17
+target=android-10
diff --git a/demos/superjumper/superjumper-ios/superjumper-ios.userprefs b/demos/superjumper/superjumper-ios/superjumper-ios.userprefs
index 702e9e4..6bb98af 100644
--- a/demos/superjumper/superjumper-ios/superjumper-ios.userprefs
+++ b/demos/superjumper/superjumper-ios/superjumper-ios.userprefs
@@ -1,17 +1,13 @@
 ﻿<Properties>
-  <MonoDevelop.Ide.Workspace ActiveConfiguration="Debug|iPhoneSimulator" PreferredExecutionTarget="MonoDevelop.IPhone.IPhoneSimulatorTarget.IPhone.6.1" />
+  <MonoDevelop.Ide.Workspace ActiveConfiguration="Debug|iPhoneSimulator" />
   <MonoDevelop.Ide.Workbench ActiveDocument="superjumper-ios/Main.cs">
     <Files>
-      <File FileName="superjumper-ios/Main.cs" Line="8" Column="11" />
+      <File FileName="superjumper-ios/Main.cs" Line="11" Column="2" />
       <File FileName="superjumper-ios/Info.plist" />
     </Files>
     <Pads>
       <Pad Id="ProjectPad">
-        <State expanded="True">
-          <Node name="superjumper-ios" expanded="True">
-            <Node name="Main.cs" selected="True" />
-          </Node>
-        </State>
+        <State />
       </Pad>
     </Pads>
   </MonoDevelop.Ide.Workbench>
diff --git a/demos/superjumper/superjumper-ios/superjumper-ios/Main.cs b/demos/superjumper/superjumper-ios/superjumper-ios/Main.cs
index 09e8542..3c465c5 100644
--- a/demos/superjumper/superjumper-ios/superjumper-ios/Main.cs
+++ b/demos/superjumper/superjumper-ios/superjumper-ios/Main.cs
@@ -22,8 +22,6 @@ namespace superjumperios
 				config.orientationLandscape = false;
 				config.orientationPortrait = true;
 				config.useAccelerometer = true;
-				config.useMonotouchOpenTK = true;
-				config.useObjectAL = true;
 				return config;
 			}
 		}
diff --git a/demos/superjumper/superjumper-ios/superjumper-ios/convert.properties b/demos/superjumper/superjumper-ios/superjumper-ios/convert.properties
deleted file mode 100644
index 950faf7..0000000
--- a/demos/superjumper/superjumper-ios/superjumper-ios/convert.properties
+++ /dev/null
@@ -1,6 +0,0 @@
-SRC =       ../../superjumper/src/
-CLASSPATH = ../../../../gdx/bin
-EXCLUDE   = **/*Desktop.java
-IN        = -r:../../../../gdx/libs/ios32/gdx.dll -recurse:target/*.class
-OUT       = superjumper.dll
-
diff --git a/demos/superjumper/superjumper-ios/superjumper-ios/convert.xml b/demos/superjumper/superjumper-ios/superjumper-ios/convert.xml
index 8848391..339b588 100644
--- a/demos/superjumper/superjumper-ios/superjumper-ios/convert.xml
+++ b/demos/superjumper/superjumper-ios/superjumper-ios/convert.xml
@@ -1,19 +1,23 @@
 <project name="gdx" default="convert" basedir=".">
 	<property environment="env"/>
-	<property file="convert.properties" />
-	<property name="IKVM_HOME" value="../../../../backends/gdx-backend-iosmonotouch/libs/ikvm"/>
+	<property name="IKVM_HOME" value="${env.IKVM_HOME}"/>
 	<property name="MONO_HOME" value="/Developer/MonoTouch/usr/lib/mono/2.1"/>
+	<property name="IN" value="-recurse:target/core/*.class"/>
+	<property name="OUT" value="gdx.dll"/>
+	<property name="SRC" value="src/"/>
+	<property name="CLASSPATH" value=""/>
+	<property name="EXCLUDE" value=""/>
 
 	<target name="compile">
 		<delete dir="target"/>
 		<mkdir dir="target"/>
-		<javac srcdir="${SRC}" debug="on" source="1.6" target="1.6" destdir="target" classpath="${CLASSPATH}">
+		<javac srcdir="${SRC}" debug="on" destdir="target" classpath="${CLASSPATH}">
 			<include name="**/*.java"/>
 			<exclude name="${EXCLUDE}"/>
 		</javac>
 	</target>
 
-	<target name="convert" depends="compile">
+	<target name="convert">
 		<exec executable="mono">
 			<arg value="${IKVM_HOME}/bin/ikvmc.exe"/>
 			<arg value="-nostdlib"/>
@@ -31,4 +35,4 @@
 			<arg line="${IN}"/>
 		</exec>
 	</target>
-</project>
+</project>
\ No newline at end of file
diff --git a/demos/superjumper/superjumper-ios/superjumper-ios/libgdx.a b/demos/superjumper/superjumper-ios/superjumper-ios/libgdx.a
new file mode 100644
index 0000000..a681686
Binary files /dev/null and b/demos/superjumper/superjumper-ios/superjumper-ios/libgdx.a differ
diff --git a/demos/superjumper/superjumper-ios/superjumper-ios/libikvm-natives.a b/demos/superjumper/superjumper-ios/superjumper-ios/libikvm-natives.a
new file mode 100644
index 0000000..29296a2
Binary files /dev/null and b/demos/superjumper/superjumper-ios/superjumper-ios/libikvm-natives.a differ
diff --git a/demos/superjumper/superjumper-ios/superjumper-ios/superjumper-ios.csproj b/demos/superjumper/superjumper-ios/superjumper-ios/superjumper-ios.csproj
index 285241e..f4d58d8 100644
--- a/demos/superjumper/superjumper-ios/superjumper-ios/superjumper-ios.csproj
+++ b/demos/superjumper/superjumper-ios/superjumper-ios/superjumper-ios.csproj
@@ -27,7 +27,7 @@
     <MtouchI18n>west</MtouchI18n>
     <CustomCommands>
       <CustomCommands>
-        <Command type="BeforeBuild" command="ant -v -f convert.xml" workingdir="${ProjectDir}" />
+        <Command type="BeforeBuild" command="ant -f convert.xml compile convert -DSRC=&quot;../../superjumper/src/&quot; -DCLASSPATH=&quot;../../../../gdx/bin/;../../../../backends/gdx-backend-lwjgl/bin&quot; -DIN=&quot;-r:../../../../backends/gdx-backend-iosmonotouch/libs/gdx.dll -recurse:target/*.class&quot;  -DOUT=&quot;superjumper.dll&quot; -DEXCLUDE=&quot;**/SuperJumperDesktop.java&quot; -v" workingdir="${ProjectDir}" />
       </CustomCommands>
     </CustomCommands>
     <MtouchArch>ARMv7</MtouchArch>
@@ -45,7 +45,7 @@
     <MtouchUseLlvm>True</MtouchUseLlvm>
     <CustomCommands>
       <CustomCommands>
-        <Command type="BeforeBuild" command="ant -v -f convert.xml" workingdir="${ProjectDir}" />
+        <Command type="BeforeBuild" command="ant -f convert.xml compile convert -DSRC=&quot;../../superjumper/src/&quot; -DCLASSPATH=&quot;../../../../gdx/bin/;../../../../backends/gdx-backend-lwjgl/bin&quot; -DIN=&quot;-r:../../../../backends/gdx-backend-iosmonotouch/libs/gdx.dll -recurse:target/*.class&quot;  -DOUT=&quot;superjumper.dll&quot; -DEXCLUDE=&quot;**/SuperJumperDesktop.java&quot; -v" workingdir="${ProjectDir}" />
       </CustomCommands>
     </CustomCommands>
   </PropertyGroup>
@@ -67,7 +67,7 @@
     <IpaPackageName />
     <CustomCommands>
       <CustomCommands>
-        <Command type="BeforeBuild" command="ant -v -f convert.xml" workingdir="${ProjectDir}" />
+        <Command type="BeforeBuild" command="ant -f convert.xml compile convert -DSRC=&quot;../../superjumper/src/&quot; -DCLASSPATH=&quot;../../../../gdx/bin/;../../../../backends/gdx-backend-lwjgl/bin&quot; -DIN=&quot;-r:../../../../backends/gdx-backend-iosmonotouch/libs/gdx.dll -recurse:target/*.class&quot;  -DOUT=&quot;superjumper.dll&quot; -DEXCLUDE=&quot;**/SuperJumperDesktop.java&quot; -v" workingdir="${ProjectDir}" />
       </CustomCommands>
     </CustomCommands>
   </PropertyGroup>
@@ -83,7 +83,7 @@
     <MtouchI18n>west</MtouchI18n>
     <CustomCommands>
       <CustomCommands>
-        <Command type="BeforeBuild" command="ant -v -f convert.xml" workingdir="${ProjectDir}" />
+        <Command type="BeforeBuild" command="ant -f convert.xml compile convert -DSRC=&quot;../../superjumper/src/&quot; -DCLASSPATH=&quot;../../../../gdx/bin/;../../../../backends/gdx-backend-lwjgl/bin&quot; -DIN=&quot;-r:../../../../backends/gdx-backend-iosmonotouch/libs/gdx.dll -recurse:target/*.class&quot;  -DOUT=&quot;superjumper.dll&quot; -DEXCLUDE=&quot;**/SuperJumperDesktop.java&quot; -v" workingdir="${ProjectDir}" />
       </CustomCommands>
     </CustomCommands>
     <MtouchArch>ARMv7</MtouchArch>
@@ -118,8 +118,11 @@
     <Reference Include="superjumper">
       <HintPath>superjumper.dll</HintPath>
     </Reference>
+    <Reference Include="gdx">
+      <HintPath>..\..\..\..\backends\gdx-backend-iosmonotouch\libs\gdx.dll</HintPath>
+    </Reference>
     <Reference Include="gdx-backend-ios">
-      <HintPath>..\..\..\..\backends\gdx-backend-iosmonotouch\libs\ios32\gdx-backend-ios.dll</HintPath>
+      <HintPath>..\..\..\..\backends\gdx-backend-iosmonotouch\libs\gdx-backend-ios.dll</HintPath>
     </Reference>
     <Reference Include="ICSharpCode.SharpZipLib">
       <HintPath>..\..\..\..\backends\gdx-backend-iosmonotouch\libs\ikvm\bin\ICSharpCode.SharpZipLib.dll</HintPath>
@@ -151,12 +154,6 @@
     <Reference Include="IKVM.Runtime.JNI">
       <HintPath>..\..\..\..\backends\gdx-backend-iosmonotouch\libs\ikvm\bin\IKVM.Runtime.JNI.dll</HintPath>
     </Reference>
-    <Reference Include="libObjectAL">
-      <HintPath>..\..\..\..\backends\gdx-backend-iosmonotouch\libs\objectal\libObjectAL.dll</HintPath>
-    </Reference>
-    <Reference Include="gdx">
-      <HintPath>..\..\..\..\gdx\libs\ios32\gdx.dll</HintPath>
-    </Reference>
   </ItemGroup>
   <ItemGroup>
     <None Include="Info.plist" />
diff --git a/demos/vector-pinball/gdx-vectorpinball-android/.classpath b/demos/vector-pinball/gdx-vectorpinball-android/.classpath
index 5f162d4..9cf1937 100644
--- a/demos/vector-pinball/gdx-vectorpinball-android/.classpath
+++ b/demos/vector-pinball/gdx-vectorpinball-android/.classpath
@@ -6,6 +6,5 @@
 	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx"/>
 	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx-backend-android"/>
 	<classpathentry kind="con" path="com.android.ide.eclipse.adt.ANDROID_FRAMEWORK"/>
-	<classpathentry exported="true" kind="con" path="com.android.ide.eclipse.adt.LIBRARIES"/>
 	<classpathentry kind="output" path="bin/classes"/>
 </classpath>
diff --git a/demos/vector-pinball/gdx-vectorpinball-android/libs/armeabi-v7a/libandroidgl20.so b/demos/vector-pinball/gdx-vectorpinball-android/libs/armeabi-v7a/libandroidgl20.so
new file mode 100644
index 0000000..7a7cd7f
Binary files /dev/null and b/demos/vector-pinball/gdx-vectorpinball-android/libs/armeabi-v7a/libandroidgl20.so differ
diff --git a/demos/vector-pinball/gdx-vectorpinball-android/libs/armeabi-v7a/libgdx.so b/demos/vector-pinball/gdx-vectorpinball-android/libs/armeabi-v7a/libgdx.so
new file mode 100644
index 0000000..8d31a3e
Binary files /dev/null and b/demos/vector-pinball/gdx-vectorpinball-android/libs/armeabi-v7a/libgdx.so differ
diff --git a/demos/vector-pinball/gdx-vectorpinball-android/libs/armeabi/libandroidgl20.so b/demos/vector-pinball/gdx-vectorpinball-android/libs/armeabi/libandroidgl20.so
new file mode 100644
index 0000000..7a7cd7f
Binary files /dev/null and b/demos/vector-pinball/gdx-vectorpinball-android/libs/armeabi/libandroidgl20.so differ
diff --git a/demos/vector-pinball/gdx-vectorpinball-android/libs/armeabi/libgdx.so b/demos/vector-pinball/gdx-vectorpinball-android/libs/armeabi/libgdx.so
new file mode 100644
index 0000000..36f294f
Binary files /dev/null and b/demos/vector-pinball/gdx-vectorpinball-android/libs/armeabi/libgdx.so differ
diff --git a/demos/vector-pinball/gdx-vectorpinball-android/project.properties b/demos/vector-pinball/gdx-vectorpinball-android/project.properties
index c4f09d2..ea89160 100644
--- a/demos/vector-pinball/gdx-vectorpinball-android/project.properties
+++ b/demos/vector-pinball/gdx-vectorpinball-android/project.properties
@@ -8,4 +8,4 @@
 # project structure.
 
 # Project target.
-target=android-17
+target=android-8
diff --git a/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios.userprefs b/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios.userprefs
index 7a7d3f3..9416360 100644
--- a/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios.userprefs
+++ b/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios.userprefs
@@ -1,19 +1,10 @@
 ﻿<Properties>
-  <MonoDevelop.Ide.Workspace ActiveConfiguration="Debug|iPhoneSimulator" />
+  <MonoDevelop.Ide.Workspace ActiveConfiguration="Release|iPhone" />
   <MonoDevelop.Ide.Workbench ActiveDocument="gdx-vectorpinball-ios/Main.cs">
     <Files>
-      <File FileName="gdx-vectorpinball-ios/Main.cs" Line="11" Column="3" />
+      <File FileName="gdx-vectorpinball-ios/Main.cs" Line="16" Column="2" />
       <File FileName="gdx-vectorpinball-ios/Info.plist" />
     </Files>
-    <Pads>
-      <Pad Id="ProjectPad">
-        <State expanded="True">
-          <Node name="gdx-vectorpinball-ios" expanded="True" selected="True">
-            <Node name="References" expanded="True" />
-          </Node>
-        </State>
-      </Pad>
-    </Pads>
   </MonoDevelop.Ide.Workbench>
   <MonoDevelop.Ide.DebuggingService.Breakpoints>
     <BreakpointStore />
diff --git a/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/Main.cs b/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/Main.cs
index 0362b91..3d2b079 100644
--- a/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/Main.cs
+++ b/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/Main.cs
@@ -8,7 +8,7 @@ using com.badlogic.gdx.backends.ios;
 using com.dozingcatsoftware.bouncy;
 
 namespace bouncy
-{	
+{		
 	public class Application
 	{
 		[Register ("AppDelegate")]
diff --git a/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/convert.properties b/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/convert.properties
deleted file mode 100644
index 3e9ed36..0000000
--- a/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/convert.properties
+++ /dev/null
@@ -1,6 +0,0 @@
-SRC =       ../../gdx-vectorpinball/src/
-CLASSPATH = ../../../../gdx/bin
-EXCLUDE   = **/*Desktop.java
-IN        = -r:../../../../gdx/libs/ios32/gdx.dll -recurse:target/*.class
-OUT       = vectorpinball.dll
-
diff --git a/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/convert.xml b/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/convert.xml
index 8848391..339b588 100644
--- a/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/convert.xml
+++ b/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/convert.xml
@@ -1,19 +1,23 @@
 <project name="gdx" default="convert" basedir=".">
 	<property environment="env"/>
-	<property file="convert.properties" />
-	<property name="IKVM_HOME" value="../../../../backends/gdx-backend-iosmonotouch/libs/ikvm"/>
+	<property name="IKVM_HOME" value="${env.IKVM_HOME}"/>
 	<property name="MONO_HOME" value="/Developer/MonoTouch/usr/lib/mono/2.1"/>
+	<property name="IN" value="-recurse:target/core/*.class"/>
+	<property name="OUT" value="gdx.dll"/>
+	<property name="SRC" value="src/"/>
+	<property name="CLASSPATH" value=""/>
+	<property name="EXCLUDE" value=""/>
 
 	<target name="compile">
 		<delete dir="target"/>
 		<mkdir dir="target"/>
-		<javac srcdir="${SRC}" debug="on" source="1.6" target="1.6" destdir="target" classpath="${CLASSPATH}">
+		<javac srcdir="${SRC}" debug="on" destdir="target" classpath="${CLASSPATH}">
 			<include name="**/*.java"/>
 			<exclude name="${EXCLUDE}"/>
 		</javac>
 	</target>
 
-	<target name="convert" depends="compile">
+	<target name="convert">
 		<exec executable="mono">
 			<arg value="${IKVM_HOME}/bin/ikvmc.exe"/>
 			<arg value="-nostdlib"/>
@@ -31,4 +35,4 @@
 			<arg line="${IN}"/>
 		</exec>
 	</target>
-</project>
+</project>
\ No newline at end of file
diff --git a/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/gdx-vectorpinball-ios.csproj b/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/gdx-vectorpinball-ios.csproj
index cb7856b..8f7ed26 100644
--- a/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/gdx-vectorpinball-ios.csproj
+++ b/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/gdx-vectorpinball-ios.csproj
@@ -26,12 +26,11 @@
     <MtouchLink>None</MtouchLink>
     <CustomCommands>
       <CustomCommands>
-        <Command type="BeforeBuild" command="ant -v -f convert.xml" workingdir="${ProjectDir}" />
+        <Command type="BeforeBuild" command="ant -f convert.xml compile convert -DSRC=&quot;../../gdx-vectorpinball/src/&quot; -DCLASSPATH=&quot;../../../../gdx/bin/;../../../../backends/gdx-backend-lwjgl/bin&quot; -DIN=&quot;-r:../../../../backends/gdx-backend-iosmonotouch/libs/gdx.dll -recurse:target/*.class&quot;  -DOUT=&quot;vectorpinball.dll&quot; -DEXCLUDE=&quot;**/BouncyDesktop.java&quot; -v" workingdir="${ProjectDir}" />
       </CustomCommands>
     </CustomCommands>
     <MtouchExtraArgs>-nosymbolstrip -nostrip -cxx -gcc_flags "-L${ProjectDir} -likvm-natives -lgdx -force_load ${ProjectDir}/libgdx.a -force_load ${ProjectDir}/libikvm-natives.a"</MtouchExtraArgs>
     <MtouchI18n>west</MtouchI18n>
-    <MtouchArch>ARMv7</MtouchArch>
   </PropertyGroup>
   <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|iPhoneSimulator' ">
     <DebugType>none</DebugType>
@@ -43,7 +42,7 @@
     <MtouchLink>None</MtouchLink>
     <CustomCommands>
       <CustomCommands>
-        <Command type="BeforeBuild" command="ant -v -f convert.xml" workingdir="${ProjectDir}" />
+        <Command type="BeforeBuild" command="ant -f convert.xml compile convert -DSRC=&quot;../../gdx-vectorpinball/src/&quot; -DCLASSPATH=&quot;../../../../gdx/bin/;../../../../backends/gdx-backend-lwjgl/bin&quot; -DIN=&quot;-r:../../../../backends/gdx-backend-iosmonotouch/libs/gdx.dll -recurse:target/*.class&quot;  -DOUT=&quot;vectorpinball.dll&quot; -DEXCLUDE=&quot;**/BouncyDesktop.java&quot; -v" workingdir="${ProjectDir}" />
       </CustomCommands>
     </CustomCommands>
     <MtouchExtraArgs>-nosymbolstrip -nostrip -cxx -gcc_flags "-L${ProjectDir} -likvm-natives -lgdx -force_load ${ProjectDir}/libgdx.a -force_load ${ProjectDir}/libikvm-natives.a"</MtouchExtraArgs>
@@ -63,7 +62,7 @@
     <MtouchProfiling>True</MtouchProfiling>
     <CustomCommands>
       <CustomCommands>
-        <Command type="BeforeBuild" command="ant -v -f convert.xml" workingdir="${ProjectDir}" />
+        <Command type="BeforeBuild" command="ant -f convert.xml compile convert -DSRC=&quot;../../gdx-vectorpinball/src/&quot; -DCLASSPATH=&quot;../../../../gdx/bin/;../../../../backends/gdx-backend-lwjgl/bin&quot; -DIN=&quot;-r:../../../../backends/gdx-backend-iosmonotouch/libs/gdx.dll -recurse:target/*.class&quot;  -DOUT=&quot;vectorpinball.dll&quot; -DEXCLUDE=&quot;**/BouncyDesktop.java&quot; -v" workingdir="${ProjectDir}" />
       </CustomCommands>
     </CustomCommands>
     <MtouchExtraArgs>-nosymbolstrip -nostrip -cxx -gcc_flags "-L${ProjectDir} -likvm-natives -lgdx -force_load ${ProjectDir}/libgdx.a -force_load ${ProjectDir}/libikvm-natives.a"</MtouchExtraArgs>
@@ -81,7 +80,7 @@
     <CodesignKey>iPhone Developer</CodesignKey>
     <CustomCommands>
       <CustomCommands>
-        <Command type="BeforeBuild" command="ant -v -f convert.xml" workingdir="${ProjectDir}" />
+        <Command type="BeforeBuild" command="ant -f convert.xml compile convert -DSRC=&quot;../../gdx-vectorpinball/src/&quot; -DCLASSPATH=&quot;../../../../gdx/bin/;../../../../backends/gdx-backend-lwjgl/bin&quot; -DIN=&quot;-r:../../../../backends/gdx-backend-iosmonotouch/libs/gdx.dll -recurse:target/*.class&quot;  -DOUT=&quot;vectorpinball.dll&quot; -DEXCLUDE=&quot;**/BouncyDesktop.java&quot; -v" workingdir="${ProjectDir}" />
       </CustomCommands>
     </CustomCommands>
     <MtouchExtraArgs>-nosymbolstrip -nostrip -cxx -gcc_flags "-L${ProjectDir} -likvm-natives -lgdx -force_load ${ProjectDir}/libgdx.a -force_load ${ProjectDir}/libikvm-natives.a"</MtouchExtraArgs>
@@ -117,10 +116,10 @@
       <HintPath>vectorpinball.dll</HintPath>
     </Reference>
     <Reference Include="gdx">
-      <HintPath>..\..\..\..\gdx\libs\ios32\gdx.dll</HintPath>
+      <HintPath>..\..\..\..\backends\gdx-backend-iosmonotouch\libs\gdx.dll</HintPath>
     </Reference>
     <Reference Include="gdx-backend-ios">
-      <HintPath>..\..\..\..\backends\gdx-backend-iosmonotouch\libs\ios32\gdx-backend-ios.dll</HintPath>
+      <HintPath>..\..\..\..\backends\gdx-backend-iosmonotouch\libs\gdx-backend-ios.dll</HintPath>
     </Reference>
     <Reference Include="ICSharpCode.SharpZipLib">
       <HintPath>..\..\..\..\backends\gdx-backend-iosmonotouch\libs\ikvm\bin\ICSharpCode.SharpZipLib.dll</HintPath>
@@ -152,9 +151,6 @@
     <Reference Include="IKVM.Runtime">
       <HintPath>..\..\..\..\backends\gdx-backend-iosmonotouch\libs\ikvm\bin\IKVM.Runtime.dll</HintPath>
     </Reference>
-    <Reference Include="libObjectAL">
-      <HintPath>..\..\..\..\backends\gdx-backend-iosmonotouch\libs\objectal\libObjectAL.dll</HintPath>
-    </Reference>
   </ItemGroup>
   <ItemGroup>
     <None Include="Info.plist" />
diff --git a/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/libgdx.a b/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/libgdx.a
new file mode 100644
index 0000000..79e81af
Binary files /dev/null and b/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/libgdx.a differ
diff --git a/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/libikvm-natives.a b/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/libikvm-natives.a
new file mode 100644
index 0000000..29296a2
Binary files /dev/null and b/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/libikvm-natives.a differ
diff --git a/demos/vector-pinball/gdx-vectorpinball/src/com/dozingcatsoftware/bouncy/GLFieldRenderer.java b/demos/vector-pinball/gdx-vectorpinball/src/com/dozingcatsoftware/bouncy/GLFieldRenderer.java
index 4590927..1979f61 100644
--- a/demos/vector-pinball/gdx-vectorpinball/src/com/dozingcatsoftware/bouncy/GLFieldRenderer.java
+++ b/demos/vector-pinball/gdx-vectorpinball/src/com/dozingcatsoftware/bouncy/GLFieldRenderer.java
@@ -29,12 +29,12 @@ public class GLFieldRenderer implements IFieldRenderer {
 	@Override
 	public void fillCircle (float cx, float cy, float radius, int r, int g, int b) {
 		end();
-		renderer.begin(ShapeType.Filled);
+		renderer.begin(ShapeType.FilledCircle);
 		float fr = r / 255f;
 		float fg = g / 255f;
 		float fb = b / 255f;
 		renderer.setColor(fr, fg, fb, 1);
-		renderer.circle(cx, cy, radius, 20);
+		renderer.filledCircle(cx, cy, radius, 20);
 		end();
 		begin();
 	}
@@ -42,7 +42,7 @@ public class GLFieldRenderer implements IFieldRenderer {
 	@Override
 	public void frameCircle (float cx, float cy, float radius, int r, int g, int b) {
 		end();
-		renderer.begin(ShapeType.Line);
+		renderer.begin(ShapeType.Circle);
 		float fr = r / 255f;
 		float fg = g / 255f;
 		float fb = b / 255f;
diff --git a/demos/very-angry-robots/very-angry-robots-android/libs/armeabi-v7a/libandroidgl20.so b/demos/very-angry-robots/very-angry-robots-android/libs/armeabi-v7a/libandroidgl20.so
new file mode 100644
index 0000000..7a7cd7f
Binary files /dev/null and b/demos/very-angry-robots/very-angry-robots-android/libs/armeabi-v7a/libandroidgl20.so differ
diff --git a/demos/very-angry-robots/very-angry-robots-android/libs/armeabi-v7a/libgdx.so b/demos/very-angry-robots/very-angry-robots-android/libs/armeabi-v7a/libgdx.so
new file mode 100644
index 0000000..8d31a3e
Binary files /dev/null and b/demos/very-angry-robots/very-angry-robots-android/libs/armeabi-v7a/libgdx.so differ
diff --git a/demos/very-angry-robots/very-angry-robots-android/libs/armeabi/libandroidgl20.so b/demos/very-angry-robots/very-angry-robots-android/libs/armeabi/libandroidgl20.so
new file mode 100644
index 0000000..7a7cd7f
Binary files /dev/null and b/demos/very-angry-robots/very-angry-robots-android/libs/armeabi/libandroidgl20.so differ
diff --git a/demos/very-angry-robots/very-angry-robots-android/libs/armeabi/libgdx.so b/demos/very-angry-robots/very-angry-robots-android/libs/armeabi/libgdx.so
new file mode 100644
index 0000000..36f294f
Binary files /dev/null and b/demos/very-angry-robots/very-angry-robots-android/libs/armeabi/libgdx.so differ
diff --git a/demos/very-angry-robots/very-angry-robots-android/project.properties b/demos/very-angry-robots/very-angry-robots-android/project.properties
index c4f09d2..ea89160 100644
--- a/demos/very-angry-robots/very-angry-robots-android/project.properties
+++ b/demos/very-angry-robots/very-angry-robots-android/project.properties
@@ -8,4 +8,4 @@
 # project structure.
 
 # Project target.
-target=android-17
+target=android-8
diff --git a/extensions/gdx-audio/jni/Android.mk b/extensions/gdx-audio/jni/Android.mk
index ee40de0..1bf1c95 100644
--- a/extensions/gdx-audio/jni/Android.mk
+++ b/extensions/gdx-audio/jni/Android.mk
@@ -4,8 +4,8 @@ include $(CLEAR_VARS)
 LOCAL_MODULE    := gdx-audio
 LOCAL_C_INCLUDES := kissfft vorbis soundtouch/include soundtouch/source/SoundTouch/ 
  
-LOCAL_CFLAGS := $(LOCAL_C_INCLUDES:%=-I%) -O2 -Wall -D__ANDROID__ -DFIXED_POINT -D_ARM_ASSEM_ -D__ANDROID__ -DMPG123_NO_CONFIGURE -DOPT_GENERIC -DHAVE_STRERROR -DMPG123_NO_LARGENAME -DASMALIGN_BYTE
-LOCAL_CPPFLAGS := $(LOCAL_C_INCLUDES:%=-I%) -O2 -Wall -D__ANDROID__ -DFIXED_POINT -D_ARM_ASSEM_ -D__ANDROID__ -DMPG123_NO_CONFIGURE -DOPT_GENERIC -DHAVE_STRERROR -DMPG123_NO_LARGENAME -DASMALIGN_BYTE
+LOCAL_CFLAGS := $(LOCAL_C_INCLUDES:%=-I%) -O2 -Wall -D__ANDROID__ -DFIXED_POINT -D_ARM_ASSEM_ -D__ANDROID__ -DMPG123_NO_CONFIGURE -DOPT_GENERIC -DHAVE_STRERROR -DMPG123_NO_LARGENAME
+LOCAL_CPPFLAGS := $(LOCAL_C_INCLUDES:%=-I%) -O2 -Wall -D__ANDROID__ -DFIXED_POINT -D_ARM_ASSEM_ -D__ANDROID__ -DMPG123_NO_CONFIGURE -DOPT_GENERIC -DHAVE_STRERROR -DMPG123_NO_LARGENAME
 LOCAL_LDLIBS := -lm
 LOCAL_ARM_MODE  := arm
  
diff --git a/extensions/gdx-audio/jni/build-android32.xml b/extensions/gdx-audio/jni/build-android32.xml
index 22cf2cc..7c9a720 100644
--- a/extensions/gdx-audio/jni/build-android32.xml
+++ b/extensions/gdx-audio/jni/build-android32.xml
@@ -1,10 +1,8 @@
 <project name="android-natives" basedir="." default="postcompile">
 	<property environment="env" />
-	<!--  the suffix ndk-build executable -->	
-	<property name="ndkSuffix" value="" />
 
 	<target name="clean" depends="check-for-ndk" if="has-ndk-build">
-		<exec executable="${env.NDK_HOME}/ndk-build${ndkSuffix}" failonerror="true">
+		<exec executable="${env.NDK_HOME}/ndk-build" failonerror="true">
 			<arg value="clean"/>
 		</exec>
 	</target>
@@ -15,7 +13,7 @@
 
 	<target name="compile-natives" depends="precompile" if="has-ndk-build">
 		<echo>ndk_home: ${env.NDK_HOME}</echo>
-		<exec executable="${env.NDK_HOME}/ndk-build${ndkSuffix}" failonerror="true"/>
+		<exec executable="${env.NDK_HOME}/ndk-build" failonerror="true"/>
 	</target>
 	
 	<target name="postcompile" depends="compile-natives">
@@ -24,7 +22,7 @@
 
 	<target name="check-for-ndk">
 		<condition property="ndk-build-found">
-			<available file="ndk-build${ndkSuffix}" filepath="${env.NDK_HOME}"/>
+			<available file="ndk-build" filepath="${env.NDK_HOME}"/>
 		</condition>
 		<condition property="has-ndk-build">
 			<equals arg1="${ndk-build-found}" arg2="true"/>
diff --git a/extensions/gdx-audio/jni/build-linux32.xml b/extensions/gdx-audio/jni/build-linux32.xml
index d1653a9..aa31d00 100644
--- a/extensions/gdx-audio/jni/build-linux32.xml
+++ b/extensions/gdx-audio/jni/build-linux32.xml
@@ -10,12 +10,10 @@
 	<!-- the jni header jniPlatform to use -->
 	<property name="jniPlatform" value="linux"/>
 	<!-- the compilerPrefix for the C & C++ compilers -->
-	<property name="compilerPrefix" value=""/>
-	<!--  the compilerSuffix for the C & C++ compilers -->	
-	<property name="compilerSuffix" value="" />	
+	<property name="compilerPrefix" value=""/>	
 	
 	<!-- define gcc compiler, options and files to compile -->
-	<property name="gcc" value="${compilerPrefix}gcc${compilerSuffix}"/>	
+	<property name="gcc" value="${compilerPrefix}gcc"/>	
 	<property name="gcc-opts" value="-c -Wall -O2 -mfpmath=sse -msse -fmessage-length=0 -m32 -fPIC -DFIXED_POINT -DMPG123_NO_CONFIGURE -DOPT_GENERIC -DHAVE_STRERROR -DMPG123_NO_LARGENAME"/>
 	<fileset id="gcc-files" dir="./">
 		<exclude name="target/"/>		
@@ -51,7 +49,7 @@
 	</fileset>
 	
 	<!-- define g++ compiler, options and files to compile -->
-	<property name="g++" value="${compilerPrefix}g++${compilerSuffix}"/>
+	<property name="g++" value="${compilerPrefix}g++"/>
 	<property name="g++-opts" value="-c -Wall -O2 -mfpmath=sse -msse -fmessage-length=0 -m32 -fPIC -DFIXED_POINT -DMPG123_NO_CONFIGURE -DOPT_GENERIC -DHAVE_STRERROR -DMPG123_NO_LARGENAME"/>
 	<fileset id="g++-files" dir="./">
 		<exclude name="target/"/>
@@ -67,7 +65,7 @@
 	</fileset>
 
 	<!-- define linker and options -->
-	<property name="linker" value="${compilerPrefix}g++${compilerSuffix}"/>
+	<property name="linker" value="${compilerPrefix}g++"/>
 	<property name="linker-opts" value="-shared -m32"/>
 	<property name="libraries" value=""/>
 	
diff --git a/extensions/gdx-audio/jni/build-linux64.xml b/extensions/gdx-audio/jni/build-linux64.xml
index 37beecd..47a397d 100644
--- a/extensions/gdx-audio/jni/build-linux64.xml
+++ b/extensions/gdx-audio/jni/build-linux64.xml
@@ -10,12 +10,10 @@
 	<!-- the jni header jniPlatform to use -->
 	<property name="jniPlatform" value="linux"/>
 	<!-- the compilerPrefix for the C & C++ compilers -->
-	<property name="compilerPrefix" value=""/>
-	<!--  the compilerSuffix for the C & C++ compilers -->	
-	<property name="compilerSuffix" value="" />	
+	<property name="compilerPrefix" value=""/>	
 	
 	<!-- define gcc compiler, options and files to compile -->
-	<property name="gcc" value="${compilerPrefix}gcc${compilerSuffix}"/>	
+	<property name="gcc" value="${compilerPrefix}gcc"/>	
 	<property name="gcc-opts" value="-c -Wall -O2 -mfpmath=sse -msse -fmessage-length=0 -m64 -fPIC -DFIXED_POINT -DMPG123_NO_CONFIGURE -DOPT_GENERIC -DHAVE_STRERROR -DMPG123_NO_LARGENAME"/>
 	<fileset id="gcc-files" dir="./">
 		<exclude name="target/"/>		
@@ -51,7 +49,7 @@
 	</fileset>
 	
 	<!-- define g++ compiler, options and files to compile -->
-	<property name="g++" value="${compilerPrefix}g++${compilerSuffix}"/>
+	<property name="g++" value="${compilerPrefix}g++"/>
 	<property name="g++-opts" value="-c -Wall -O2 -mfpmath=sse -msse -fmessage-length=0 -m64 -fPIC -DFIXED_POINT -DMPG123_NO_CONFIGURE -DOPT_GENERIC -DHAVE_STRERROR -DMPG123_NO_LARGENAME"/>
 	<fileset id="g++-files" dir="./">
 		<exclude name="target/"/>
@@ -67,7 +65,7 @@
 	</fileset>
 
 	<!-- define linker and options -->
-	<property name="linker" value="${compilerPrefix}g++${compilerSuffix}"/>
+	<property name="linker" value="${compilerPrefix}g++"/>
 	<property name="linker-opts" value="-shared -m64 -Wl,-wrap,memcpy"/>
 	<property name="libraries" value=""/>
 	
diff --git a/extensions/gdx-audio/jni/build-macosx32.xml b/extensions/gdx-audio/jni/build-macosx32.xml
index a239177..24b751a 100644
--- a/extensions/gdx-audio/jni/build-macosx32.xml
+++ b/extensions/gdx-audio/jni/build-macosx32.xml
@@ -10,12 +10,10 @@
 	<!-- the jni header jniPlatform to use -->
 	<property name="jniPlatform" value="mac"/>
 	<!-- the compilerPrefix for the C & C++ compilers -->
-	<property name="compilerPrefix" value=""/>
-	<!--  the compilerSuffix for the C & C++ compilers -->	
-	<property name="compilerSuffix" value="" />	
+	<property name="compilerPrefix" value=""/>	
 	
 	<!-- define gcc compiler, options and files to compile -->
-	<property name="gcc" value="${compilerPrefix}gcc${compilerSuffix}"/>	
+	<property name="gcc" value="${compilerPrefix}gcc"/>	
 	<property name="gcc-opts" value="-c -Wall -O2 -arch i386 -arch x86_64 -DFIXED_POINT -fmessage-length=0 -fPIC -mmacosx-version-min=10.5 -DFIXED_POINT -DMPG123_NO_CONFIGURE -DOPT_GENERIC -DHAVE_STRERROR -DMPG123_NO_LARGENAME"/>
 	<fileset id="gcc-files" dir="./">
 		<exclude name="target/"/>		
@@ -51,7 +49,7 @@
 	</fileset>
 	
 	<!-- define g++ compiler, options and files to compile -->
-	<property name="g++" value="${compilerPrefix}g++${compilerSuffix}"/>
+	<property name="g++" value="${compilerPrefix}g++"/>
 	<property name="g++-opts" value="-c -Wall -O2 -arch i386 -arch x86_64 -DFIXED_POINT -fmessage-length=0 -fPIC -mmacosx-version-min=10.5 -DFIXED_POINT -DMPG123_NO_CONFIGURE -DOPT_GENERIC -DHAVE_STRERROR -DMPG123_NO_LARGENAME"/>
 	<fileset id="g++-files" dir="./">
 		<exclude name="target/"/>
@@ -67,7 +65,7 @@
 	</fileset>
 
 	<!-- define linker and options -->
-	<property name="linker" value="${compilerPrefix}g++${compilerSuffix}"/>
+	<property name="linker" value="${compilerPrefix}g++"/>
 	<property name="linker-opts" value="-shared -arch i386 -arch x86_64 -mmacosx-version-min=10.5"/>
 	<property name="libraries" value=""/>
 	
diff --git a/extensions/gdx-audio/jni/build-windows32.xml b/extensions/gdx-audio/jni/build-windows32.xml
index 59ed274..40d7831 100644
--- a/extensions/gdx-audio/jni/build-windows32.xml
+++ b/extensions/gdx-audio/jni/build-windows32.xml
@@ -10,12 +10,10 @@
 	<!-- the jni header jniPlatform to use -->
 	<property name="jniPlatform" value="win32"/>
 	<!-- the compilerPrefix for the C & C++ compilers -->
-	<property name="compilerPrefix" value="i686-w64-mingw32-"/>
-	<!--  the compilerSuffix for the C & C++ compilers -->	
-	<property name="compilerSuffix" value="" />	
+	<property name="compilerPrefix" value="i686-w64-mingw32-"/>	
 	
 	<!-- define gcc compiler, options and files to compile -->
-	<property name="gcc" value="${compilerPrefix}gcc${compilerSuffix}"/>	
+	<property name="gcc" value="${compilerPrefix}gcc"/>	
 	<property name="gcc-opts" value="-c -Wall -O2 -mfpmath=sse -msse2 -fmessage-length=0 -m32 -DFIXED_POINT -DMPG123_NO_CONFIGURE -DOPT_GENERIC -DHAVE_STRERROR -DMPG123_NO_LARGENAME"/>
 	<fileset id="gcc-files" dir="./">
 		<exclude name="target/"/>		
@@ -51,7 +49,7 @@
 	</fileset>
 	
 	<!-- define g++ compiler, options and files to compile -->
-	<property name="g++" value="${compilerPrefix}g++${compilerSuffix}"/>
+	<property name="g++" value="${compilerPrefix}g++"/>
 	<property name="g++-opts" value="-c -Wall -O2 -mfpmath=sse -msse2 -fmessage-length=0 -m32 -DFIXED_POINT -DMPG123_NO_CONFIGURE -DOPT_GENERIC -DHAVE_STRERROR -DMPG123_NO_LARGENAME"/>
 	<fileset id="g++-files" dir="./">
 		<exclude name="target/"/>
@@ -67,7 +65,7 @@
 	</fileset>
 
 	<!-- define linker and options -->
-	<property name="linker" value="${compilerPrefix}g++${compilerSuffix}"/>
+	<property name="linker" value="${compilerPrefix}g++"/>
 	<property name="linker-opts" value="-Wl,--kill-at -shared -m32 -static-libgcc -static-libstdc++"/>
 	<property name="libraries" value=""/>
 	
diff --git a/extensions/gdx-audio/jni/build-windows32home.xml b/extensions/gdx-audio/jni/build-windows32home.xml
index fc6d938..7ccf076 100644
--- a/extensions/gdx-audio/jni/build-windows32home.xml
+++ b/extensions/gdx-audio/jni/build-windows32home.xml
@@ -10,12 +10,10 @@
 	<!-- the jni header jniPlatform to use -->
 	<property name="jniPlatform" value="win32"/>
 	<!-- the compilerPrefix for the C & C++ compilers -->
-	<property name="compilerPrefix" value=""/>
-	<!--  the compilerSuffix for the C & C++ compilers -->	
-	<property name="compilerSuffix" value="" />	
+	<property name="compilerPrefix" value=""/>	
 	
 	<!-- define gcc compiler, options and files to compile -->
-	<property name="gcc" value="${compilerPrefix}gcc${compilerSuffix}"/>	
+	<property name="gcc" value="${compilerPrefix}gcc"/>	
 	<property name="gcc-opts" value="-c -Wall -O2 -mfpmath=sse -msse2 -fmessage-length=0 -m32 -DFIXED_POINT -DMPG123_NO_CONFIGURE -DOPT_GENERIC -DHAVE_STRERROR -DMPG123_NO_LARGENAME"/>
 	<fileset id="gcc-files" dir="./">
 		<exclude name="target/"/>		
@@ -51,7 +49,7 @@
 	</fileset>
 	
 	<!-- define g++ compiler, options and files to compile -->
-	<property name="g++" value="${compilerPrefix}g++${compilerSuffix}"/>
+	<property name="g++" value="${compilerPrefix}g++"/>
 	<property name="g++-opts" value="-c -Wall -O2 -mfpmath=sse -msse2 -fmessage-length=0 -m32 -DFIXED_POINT -DMPG123_NO_CONFIGURE -DOPT_GENERIC -DHAVE_STRERROR -DMPG123_NO_LARGENAME"/>
 	<fileset id="g++-files" dir="./">
 		<exclude name="target/"/>
@@ -67,7 +65,7 @@
 	</fileset>
 
 	<!-- define linker and options -->
-	<property name="linker" value="${compilerPrefix}g++${compilerSuffix}"/>
+	<property name="linker" value="${compilerPrefix}g++"/>
 	<property name="linker-opts" value="-Wl,--kill-at -shared -m32 -static-libgcc -static-libstdc++"/>
 	<property name="libraries" value=""/>
 	
diff --git a/extensions/gdx-audio/jni/build-windows64.xml b/extensions/gdx-audio/jni/build-windows64.xml
index 39ffbc1..7a1cb0e 100644
--- a/extensions/gdx-audio/jni/build-windows64.xml
+++ b/extensions/gdx-audio/jni/build-windows64.xml
@@ -10,12 +10,10 @@
 	<!-- the jni header jniPlatform to use -->
 	<property name="jniPlatform" value="win32"/>
 	<!-- the compilerPrefix for the C & C++ compilers -->
-	<property name="compilerPrefix" value="x86_64-w64-mingw32-"/>
-	<!--  the compilerSuffix for the C & C++ compilers -->	
-	<property name="compilerSuffix" value="" />	
+	<property name="compilerPrefix" value="x86_64-w64-mingw32-"/>	
 	
 	<!-- define gcc compiler, options and files to compile -->
-	<property name="gcc" value="${compilerPrefix}gcc${compilerSuffix}"/>	
+	<property name="gcc" value="${compilerPrefix}gcc"/>	
 	<property name="gcc-opts" value="-c -Wall -O2 -mfpmath=sse -msse2 -fmessage-length=0 -m64 -DFIXED_POINT -DMPG123_NO_CONFIGURE -DOPT_GENERIC -DHAVE_STRERROR -DMPG123_NO_LARGENAME"/>
 	<fileset id="gcc-files" dir="./">
 		<exclude name="target/"/>		
@@ -51,7 +49,7 @@
 	</fileset>
 	
 	<!-- define g++ compiler, options and files to compile -->
-	<property name="g++" value="${compilerPrefix}g++${compilerSuffix}"/>
+	<property name="g++" value="${compilerPrefix}g++"/>
 	<property name="g++-opts" value="-c -Wall -O2 -mfpmath=sse -msse2 -fmessage-length=0 -m64 -DFIXED_POINT -DMPG123_NO_CONFIGURE -DOPT_GENERIC -DHAVE_STRERROR -DMPG123_NO_LARGENAME"/>
 	<fileset id="g++-files" dir="./">
 		<exclude name="target/"/>
@@ -67,7 +65,7 @@
 	</fileset>
 
 	<!-- define linker and options -->
-	<property name="linker" value="${compilerPrefix}g++${compilerSuffix}"/>
+	<property name="linker" value="${compilerPrefix}g++"/>
 	<property name="linker-opts" value="-Wl,--kill-at -shared -static-libgcc -static-libstdc++ -m64"/>
 	<property name="libraries" value=""/>
 	
diff --git a/extensions/gdx-audio/jni/com.badlogic.gdx.audio.io.VorbisDecoder.cpp b/extensions/gdx-audio/jni/com.badlogic.gdx.audio.io.VorbisDecoder.cpp
index ae4526a..5c12529 100644
--- a/extensions/gdx-audio/jni/com.badlogic.gdx.audio.io.VorbisDecoder.cpp
+++ b/extensions/gdx-audio/jni/com.badlogic.gdx.audio.io.VorbisDecoder.cpp
@@ -1,6 +1,6 @@
 #include <com.badlogic.gdx.audio.io.VorbisDecoder.h>
 
-//@line:106
+//@line:90
 
 	#include <ogg.h>
 	#include <ivorbiscodec.h>
@@ -21,7 +21,7 @@
 	 static inline jlong wrapped_Java_com_badlogic_gdx_audio_io_VorbisDecoder_openFile
 (JNIEnv* env, jclass clazz, jstring obj_filename, char* filename) {
 
-//@line:125
+//@line:109
 
 		OggVorbis_File* ogg = new OggVorbis_File();
 		FILE* file = fopen(filename, "rb" );
@@ -67,7 +67,7 @@ JNIEXPORT jlong JNICALL Java_com_badlogic_gdx_audio_io_VorbisDecoder_openFile(JN
 JNIEXPORT jint JNICALL Java_com_badlogic_gdx_audio_io_VorbisDecoder_getNumChannels(JNIEnv* env, jclass clazz, jlong handle) {
 
 
-//@line:156
+//@line:140
 
 		OggFile* file = (OggFile*)handle;
 		return file->channels;
@@ -78,7 +78,7 @@ JNIEXPORT jint JNICALL Java_com_badlogic_gdx_audio_io_VorbisDecoder_getNumChanne
 JNIEXPORT jint JNICALL Java_com_badlogic_gdx_audio_io_VorbisDecoder_getRate(JNIEnv* env, jclass clazz, jlong handle) {
 
 
-//@line:161
+//@line:145
 
 		OggFile* file = (OggFile*)handle;
 		return file->rate;
@@ -89,7 +89,7 @@ JNIEXPORT jint JNICALL Java_com_badlogic_gdx_audio_io_VorbisDecoder_getRate(JNIE
 JNIEXPORT jfloat JNICALL Java_com_badlogic_gdx_audio_io_VorbisDecoder_getLength(JNIEnv* env, jclass clazz, jlong handle) {
 
 
-//@line:166
+//@line:150
 
 		OggFile* file = (OggFile*)handle;
 		return file->length;
@@ -100,7 +100,7 @@ JNIEXPORT jfloat JNICALL Java_com_badlogic_gdx_audio_io_VorbisDecoder_getLength(
 static inline jint wrapped_Java_com_badlogic_gdx_audio_io_VorbisDecoder_readSamples
 (JNIEnv* env, jclass clazz, jlong handle, jshortArray obj_samples, jint offset, jint numSamples, short* samples) {
 
-//@line:171
+//@line:155
 
 		OggFile* file = (OggFile*)handle;
 		int toRead = 2 * numSamples;
@@ -134,7 +134,7 @@ JNIEXPORT jint JNICALL Java_com_badlogic_gdx_audio_io_VorbisDecoder_readSamples(
 JNIEXPORT jint JNICALL Java_com_badlogic_gdx_audio_io_VorbisDecoder_skipSamples(JNIEnv* env, jclass clazz, jlong handle, jint numSamples) {
 
 
-//@line:190
+//@line:174
 
 		OggFile* file = (OggFile*)handle;
 		int toRead = 2 * numSamples;
@@ -158,7 +158,7 @@ JNIEXPORT jint JNICALL Java_com_badlogic_gdx_audio_io_VorbisDecoder_skipSamples(
 JNIEXPORT void JNICALL Java_com_badlogic_gdx_audio_io_VorbisDecoder_closeFile(JNIEnv* env, jclass clazz, jlong handle) {
 
 
-//@line:208
+//@line:192
 
 		OggFile* file = (OggFile*)handle;
 		ov_clear(file->ogg);
@@ -168,36 +168,3 @@ JNIEXPORT void JNICALL Java_com_badlogic_gdx_audio_io_VorbisDecoder_closeFile(JN
 
 }
 
-JNIEXPORT jint JNICALL Java_com_badlogic_gdx_audio_io_VorbisDecoder_seekable(JNIEnv* env, jclass clazz, jlong handle) {
-
-
-//@line:215
-
-		OggFile* file = (OggFile*)handle;
-		return file->ogg->seekable;
-	
-
-}
-
-JNIEXPORT jfloat JNICALL Java_com_badlogic_gdx_audio_io_VorbisDecoder_tellTime(JNIEnv* env, jclass clazz, jlong handle) {
-
-
-//@line:220
-
-		OggFile* file = (OggFile*)handle;
-		return 0.001f * (float)ov_time_tell(file->ogg);
-	
-
-}
-
-JNIEXPORT jint JNICALL Java_com_badlogic_gdx_audio_io_VorbisDecoder_timeSeek(JNIEnv* env, jclass clazz, jlong handle, jfloat time) {
-
-
-//@line:225
-
-		OggFile* file = (OggFile*)handle;
-		return ov_time_seek (file->ogg, (ogg_int64_t)(time * 1000.f));
-	
-
-}
-
diff --git a/extensions/gdx-audio/jni/com.badlogic.gdx.audio.io.VorbisDecoder.h b/extensions/gdx-audio/jni/com.badlogic.gdx.audio.io.VorbisDecoder.h
index 8c41d6b..76ba869 100644
--- a/extensions/gdx-audio/jni/com.badlogic.gdx.audio.io.VorbisDecoder.h
+++ b/extensions/gdx-audio/jni/com.badlogic.gdx.audio.io.VorbisDecoder.h
@@ -63,30 +63,6 @@ JNIEXPORT jint JNICALL Java_com_badlogic_gdx_audio_io_VorbisDecoder_skipSamples
 JNIEXPORT void JNICALL Java_com_badlogic_gdx_audio_io_VorbisDecoder_closeFile
   (JNIEnv *, jclass, jlong);
 
-/*
- * Class:     com_badlogic_gdx_audio_io_VorbisDecoder
- * Method:    seekable
- * Signature: (J)I
- */
-JNIEXPORT jint JNICALL Java_com_badlogic_gdx_audio_io_VorbisDecoder_seekable
-  (JNIEnv *, jclass, jlong);
-
-/*
- * Class:     com_badlogic_gdx_audio_io_VorbisDecoder
- * Method:    tellTime
- * Signature: (J)F
- */
-JNIEXPORT jfloat JNICALL Java_com_badlogic_gdx_audio_io_VorbisDecoder_tellTime
-  (JNIEnv *, jclass, jlong);
-
-/*
- * Class:     com_badlogic_gdx_audio_io_VorbisDecoder
- * Method:    timeSeek
- * Signature: (JF)I
- */
-JNIEXPORT jint JNICALL Java_com_badlogic_gdx_audio_io_VorbisDecoder_timeSeek
-  (JNIEnv *, jclass, jlong, jfloat);
-
 #ifdef __cplusplus
 }
 #endif
diff --git a/extensions/gdx-audio/jni/libmpg123/Makefile.am b/extensions/gdx-audio/jni/libmpg123/Makefile.am
index 22035a1..b052d7b 100644
--- a/extensions/gdx-audio/jni/libmpg123/Makefile.am
+++ b/extensions/gdx-audio/jni/libmpg123/Makefile.am
@@ -61,7 +61,6 @@ libmpg123_la_SOURCES = \
 	readers.c \
 	tabinit.c \
 	libmpg123.c \
-	gapless.h \
 	mpg123lib_intern.h \
 	mangle.h \
 	getcpuflags.h \
diff --git a/extensions/gdx-audio/jni/libmpg123/dct64_2.c b/extensions/gdx-audio/jni/libmpg123/dct64_2.c
new file mode 100644
index 0000000..31d3f36
--- /dev/null
+++ b/extensions/gdx-audio/jni/libmpg123/dct64_2.c
@@ -0,0 +1,139 @@
+/*
+	dct64.c: DCT64, another plain C version
+
+	copyright ?-2006 by the mpg123 project - free software under the terms of the LGPL 2.1
+	see COPYING and AUTHORS files in distribution or http://mpg123.org
+	initially written by Michael Hipp
+	Thomas made it look more explicit to see what's going on...
+*/
+
+/*
+ * Discrete Cosine Tansform (DCT) for subband synthesis
+ *
+ * -funroll-loops (for gcc) will remove the loops for better performance
+ * using loops in the source-code enhances readabillity
+ *
+ *
+ * TODO: write an optimized version for the down-sampling modes
+ *       (in these modes the bands 16-31 (2:1) or 8-31 (4:1) are zero 
+ */
+
+#include "mpg123lib_intern.h"
+
+void dct64(real *out0,real *out1,real * samples)
+{
+	real bufs[64];
+
+	{
+		int i,j;
+
+		for(i=0; i<16; ++i) bufs[i] = samples[i] + samples[31-i];
+
+		for(i=0;i<16;++i) bufs[16+i] = REAL_MUL(samples[15-i] - samples[16+i], pnts[0][15-i]);
+
+		for(i=0;i<8;++i) bufs[32+i] = bufs[i]    + bufs[15-i];
+		for(i=0;i<8;++i) bufs[40+i] = REAL_MUL( bufs[7-i]  - bufs[8+i],  pnts[1][7-i] );
+		for(i=0;i<8;++i) bufs[48+i] = bufs[16+i] + bufs[31-i];
+		for(i=0;i<8;++i) bufs[56+i] = REAL_MUL( bufs[24+i] - bufs[23-i], pnts[1][7-i] );
+
+		for(j=0;j<2;++j)
+		{
+			int off = j*16;
+			for(i=0;i<4;++i) bufs[off+i]    = bufs[off+32+i] + bufs[off+39-i];
+			for(i=0;i<4;++i) bufs[off+4+i]  = REAL_MUL( bufs[off+35-i] - bufs[off+36+i], pnts[2][3-i] );
+			for(i=0;i<4;++i) bufs[off+8+i]  = bufs[off+40+i] + bufs[off+47-i];
+			for(i=0;i<4;++i) bufs[off+12+i] = REAL_MUL( bufs[off+44+i] - bufs[off+43-i], pnts[2][3-i] );
+		}
+
+		for(j=0;j<4;++j)
+		{
+			int off = j*8;
+			bufs[off+32+0] = bufs[off+0] + bufs[off+3];
+			bufs[off+32+1] = bufs[off+1] + bufs[off+2];
+			bufs[off+32+2] = REAL_MUL( bufs[off+1] - bufs[off+2], pnts[3][1] );
+			bufs[off+32+3] = REAL_MUL( bufs[off+0] - bufs[off+3], pnts[3][0] );
+			bufs[off+32+4] = bufs[off+4] + bufs[off+7];
+			bufs[off+32+5] = bufs[off+5] + bufs[off+6];
+			bufs[off+32+6] = REAL_MUL( bufs[off+6] - bufs[off+5], pnts[3][1] );
+			bufs[off+32+7] = REAL_MUL( bufs[off+7] - bufs[off+4], pnts[3][0] );
+		}
+
+		for(j=0;j<8;++j)
+		{
+			int off = j*4;
+			real v0,v1;
+			v0 = bufs[off+32+0]; v1 = bufs[off+32+1];
+			bufs[off+0] = v0 + v1;
+			bufs[off+1] = REAL_MUL( v0-v1, pnts[4][0] );
+			v0 = bufs[off+32+2]; v1 = bufs[off+32+3];
+			bufs[off+2] = v0 + v1;
+			bufs[off+3] = REAL_MUL( v1-v0, pnts[4][0] );
+		}
+	}
+
+
+ {
+  register real *b1;
+  register int i;
+
+  for(b1=bufs,i=8;i;i--,b1+=4)
+    b1[2] += b1[3];
+
+  for(b1=bufs,i=4;i;i--,b1+=8)
+  {
+    b1[4] += b1[6];
+    b1[6] += b1[5];
+    b1[5] += b1[7];
+  }
+
+  for(b1=bufs,i=2;i;i--,b1+=16)
+  {
+    b1[8]  += b1[12];
+    b1[12] += b1[10];
+    b1[10] += b1[14];
+    b1[14] += b1[9];
+    b1[9]  += b1[13];
+    b1[13] += b1[11];
+    b1[11] += b1[15];
+  }
+ }
+
+
+  out0[0x10*16] = bufs[0];
+  out0[0x10*15] = bufs[16+0]  + bufs[16+8];
+  out0[0x10*14] = bufs[8];
+  out0[0x10*13] = bufs[16+8]  + bufs[16+4];
+  out0[0x10*12] = bufs[4];
+  out0[0x10*11] = bufs[16+4]  + bufs[16+12];
+  out0[0x10*10] = bufs[12];
+  out0[0x10* 9] = bufs[16+12] + bufs[16+2];
+  out0[0x10* 8] = bufs[2];
+  out0[0x10* 7] = bufs[16+2]  + bufs[16+10];
+  out0[0x10* 6] = bufs[10];
+  out0[0x10* 5] = bufs[16+10] + bufs[16+6];
+  out0[0x10* 4] = bufs[6];
+  out0[0x10* 3] = bufs[16+6]  + bufs[16+14];
+  out0[0x10* 2] = bufs[14];
+  out0[0x10* 1] = bufs[16+14] + bufs[16+1];
+  out0[0x10* 0] = bufs[1];
+
+  out1[0x10* 0] = bufs[1];
+  out1[0x10* 1] = bufs[16+1]  + bufs[16+9];
+  out1[0x10* 2] = bufs[9];
+  out1[0x10* 3] = bufs[16+9]  + bufs[16+5];
+  out1[0x10* 4] = bufs[5];
+  out1[0x10* 5] = bufs[16+5]  + bufs[16+13];
+  out1[0x10* 6] = bufs[13];
+  out1[0x10* 7] = bufs[16+13] + bufs[16+3];
+  out1[0x10* 8] = bufs[3];
+  out1[0x10* 9] = bufs[16+3]  + bufs[16+11];
+  out1[0x10*10] = bufs[11];
+  out1[0x10*11] = bufs[16+11] + bufs[16+7];
+  out1[0x10*12] = bufs[7];
+  out1[0x10*13] = bufs[16+7]  + bufs[16+15];
+  out1[0x10*14] = bufs[15];
+  out1[0x10*15] = bufs[16+15];
+
+}
+
+
diff --git a/extensions/gdx-audio/jni/libmpg123/dct64_vector.c b/extensions/gdx-audio/jni/libmpg123/dct64_vector.c
new file mode 100644
index 0000000..14e9fcf
--- /dev/null
+++ b/extensions/gdx-audio/jni/libmpg123/dct64_vector.c
@@ -0,0 +1,305 @@
+/*
+	dct64.c: DCT64, another plain C version
+...wondering about vectors...
+
+	copyright ?-2006 by the mpg123 project - free software under the terms of the LGPL 2.1
+	see COPYING and AUTHORS files in distribution or http://mpg123.org
+	initially written by Michael Hipp
+	Thomas made it look more explicit to see what's going on...
+*/
+
+/*
+ * Discrete Cosine Tansform (DCT) for subband synthesis
+ *
+ * -funroll-loops (for gcc) will remove the loops for better performance
+ * using loops in the source-code enhances readabillity
+ *
+ *
+ * TODO: write an optimized version for the down-sampling modes
+ *       (in these modes the bands 16-31 (2:1) or 8-31 (4:1) are zero 
+ */
+
+
+#include "mpg123lib_intern.h"
+
+static void vec4add(real * __restrict__ a, real * __restrict__ b)
+{
+	int i;
+	for(i=0;i<4;++i) b[i] += a[i];
+}
+
+static void vec4iadd(real * __restrict__ a, real * __restrict__ b)
+{
+	int i;
+	for(i=0;i<4;++i) b[i] += a[3-i];
+}
+
+static void vec4sub(real * __restrict__ a, real * __restrict__ b)
+{
+	int i;
+	for(i=0;i<4;++i) b[i] -= a[i];
+}
+
+static void vec4isub(real * __restrict__ a, real * __restrict__ b)
+{
+	int i;
+	for(i=0;i<4;++i) b[i] -= a[3-i];
+}
+
+static void vec4copy(real * __restrict__ a, real * __restrict__ b)
+{
+	int i;
+	for(i=0;i<4;++i) b[i] = a[i];
+}
+
+static void vec4icopy(real * __restrict__ a, real * __restrict__ b)
+{
+	int i;
+	for(i=0;i<4;++i) b[i] = a[3-i];
+}
+
+static void vec4mul(real *a, real *b)
+{
+	int i;
+	for(i=0;i<4;++i) b[i] *= a[i];
+}
+
+static void vec4imul(real *a, real *b)
+{
+	int i;
+	for(i=0;i<4;++i) b[i] *= a[3-i];
+}
+
+static void vec8add(real * __restrict__ a, real * __restrict__ b)
+{
+	int i;
+	for(i=0;i<8;++i) b[i] += a[i];
+}
+
+static void vec8iadd(real * __restrict__ a, real * __restrict__ b)
+{
+	int i;
+	for(i=0;i<8;++i) b[i] += a[7-i];
+}
+
+static void vec8sub(real * __restrict__ a, real * __restrict__ b)
+{
+	int i;
+	for(i=0;i<8;++i) b[i] -= a[i];
+}
+
+static void vec8isub(real * __restrict__ a, real * __restrict__ b)
+{
+	int i;
+	for(i=0;i<8;++i) b[i] -= a[7-i];
+}
+
+static void vec8copy(real * __restrict__ a, real * __restrict__ b)
+{
+	int i;
+	for(i=0;i<8;++i) b[i] = a[i];
+}
+
+static void vec8icopy(real * __restrict__ a, real * __restrict__ b)
+{
+	int i;
+	for(i=0;i<8;++i) b[i] = a[7-i];
+}
+
+static void vec8mul(real *a, real *b)
+{
+	int i;
+	for(i=0;i<8;++i) b[i] *= a[i];
+}
+
+static void vec8imul(real *a, real *b)
+{
+	int i;
+	for(i=0;i<8;++i) b[i] *= a[7-i];
+}
+
+static void vec16add(real * __restrict__ a, real * __restrict__ b)
+{
+	int i;
+	for(i=0;i<16;++i) b[i] += a[i];
+}
+
+static void vec16iadd(real * __restrict__ a, real * __restrict__ b)
+{
+	int i;
+	for(i=0;i<16;++i) b[i] += a[15-i];
+}
+
+static void vec16sub(real * __restrict__ a, real * __restrict__ b)
+{
+	int i;
+	for(i=0;i<16;++i) b[i] -= a[i];
+}
+
+static void vec16copy(real * __restrict__ a, real * __restrict__ b)
+{
+	int i;
+	for(i=0;i<16;++i) b[i] = a[i];
+}
+
+static void vec16icopy(real * __restrict__ a, real * __restrict__ b)
+{
+	int i;
+	for(i=0;i<16;++i) b[i] = a[15-i];
+}
+
+static void vec16mul(real *a, real *b)
+{
+	int i;
+	for(i=0;i<16;++i) b[i] *= a[i];
+}
+
+static void vec16imul(real *a, real *b)
+{
+	int i;
+	for(i=0;i<16;++i) b[i] *= a[15-i];
+}
+
+void dct64(real *out0,real *out1,real * samples)
+{
+	real bufs[64];
+
+	{
+		int i,j;
+
+		/* for(i=0; i<16; ++i) bufs[i] = samples[i] + samples[31-i]; */
+		vec16copy(samples,    bufs);
+		vec16iadd(samples+16, bufs);
+
+		/*for(i=0;i<16;++i) bufs[16+i] = REAL_MUL(samples[15-i] - samples[16+i], pnts[0][15-i]);*/
+		vec16icopy(samples,    bufs+16);
+		vec16sub  (samples+16, bufs+16);
+		vec16imul (pnts[0],    bufs+16);
+
+		/* for(i=0;i<8;++i) bufs[32+i] = bufs[i]    + bufs[15-i]; */
+		vec8copy(bufs,   bufs+32);
+		vec8iadd(bufs+8, bufs+32);
+		/* for(i=0;i<8;++i) bufs[40+i] = REAL_MUL( bufs[7-i]  - bufs[8+i],  pnts[1][7-i] ); */
+		vec8icopy(bufs,    bufs+40);
+		vec8sub  (bufs+8,  bufs+40);
+		vec8imul (pnts[1], bufs+40);
+		/* for(i=0;i<8;++i) bufs[48+i] = bufs[16+i] + bufs[31-i]; */
+		vec8copy(bufs+16, bufs+48);
+		vec8iadd(bufs+24, bufs+48);
+		/* for(i=0;i<8;++i) bufs[56+i] = REAL_MUL( bufs[24+i] - bufs[23-i], pnts[1][7-i] ); */
+		vec8copy(bufs+24, bufs+56);
+		vec8isub(bufs+16, bufs+56);
+		vec8imul(pnts[1], bufs+56);
+
+
+		for(j=0;j<2;++j)
+		{
+			int off = j*16;
+			/*for(i=0;i<4;++i) bufs[off+i]    = bufs[off+32+i] + bufs[off+39-i];*/
+			vec4copy(bufs+off+32, bufs+off);
+			vec4iadd(bufs+off+36, bufs+off);
+			/*for(i=0;i<4;++i) bufs[off+4+i]  = REAL_MUL( bufs[off+35-i] - bufs[off+36+i], pnts[2][3-i] );*/
+			vec4icopy(bufs+off+32, bufs+off+4);
+			vec4sub  (bufs+off+36, bufs+off+4);
+			vec4imul (pnts[2],     bufs+off+4);
+			/*for(i=0;i<4;++i) bufs[off+8+i]  = bufs[off+40+i] + bufs[off+47-i];*/
+			vec4copy(bufs+off+40, bufs+off+8);
+			vec4iadd(bufs+off+44, bufs+off+8);
+			/*for(i=0;i<4;++i) bufs[off+12+i] = REAL_MUL( bufs[off+44+i] - bufs[off+43-i], pnts[2][3-i] );*/
+			vec4copy(bufs+off+44, bufs+off+12);
+			vec4isub(bufs+off+40, bufs+off+12);
+			vec4imul(pnts[2],     bufs+off+12);
+		}
+
+		for(j=0;j<4;++j)
+		{
+			int off = j*8;
+			bufs[off+32+0] = bufs[off+0] + bufs[off+3];
+			bufs[off+32+1] = bufs[off+1] + bufs[off+2];
+			bufs[off+32+2] = REAL_MUL( bufs[off+1] - bufs[off+2], pnts[3][1] );
+			bufs[off+32+3] = REAL_MUL( bufs[off+0] - bufs[off+3], pnts[3][0] );
+			bufs[off+32+4] = bufs[off+4] + bufs[off+7];
+			bufs[off+32+5] = bufs[off+5] + bufs[off+6];
+			bufs[off+32+6] = REAL_MUL( bufs[off+6] - bufs[off+5], pnts[3][1] );
+			bufs[off+32+7] = REAL_MUL( bufs[off+7] - bufs[off+4], pnts[3][0] );
+		}
+
+		for(j=0;j<8;++j)
+		{
+			int off = j*4;
+			real v0,v1;
+			v0 = bufs[off+32+0]; v1 = bufs[off+32+1];
+			bufs[off+0] = v0 + v1;
+			bufs[off+1] = REAL_MUL( v0-v1, pnts[4][0] );
+			v0 = bufs[off+32+2]; v1 = bufs[off+32+3];
+			bufs[off+2] = v0 + v1;
+			bufs[off+3] = REAL_MUL( v1-v0, pnts[4][0] );
+		}
+	}
+
+
+ {
+  register real *b1;
+  register int i;
+
+  for(b1=bufs,i=8;i;i--,b1+=4)
+    b1[2] += b1[3];
+
+  for(b1=bufs,i=4;i;i--,b1+=8)
+  {
+    b1[4] += b1[6];
+    b1[6] += b1[5];
+    b1[5] += b1[7];
+  }
+
+  for(b1=bufs,i=2;i;i--,b1+=16)
+  {
+    b1[8]  += b1[12];
+    b1[12] += b1[10];
+    b1[10] += b1[14];
+    b1[14] += b1[9];
+    b1[9]  += b1[13];
+    b1[13] += b1[11];
+    b1[11] += b1[15];
+  }
+ }
+
+
+  out0[0x10*16] = bufs[0];
+  out0[0x10*15] = bufs[16+0]  + bufs[16+8];
+  out0[0x10*14] = bufs[8];
+  out0[0x10*13] = bufs[16+8]  + bufs[16+4];
+  out0[0x10*12] = bufs[4];
+  out0[0x10*11] = bufs[16+4]  + bufs[16+12];
+  out0[0x10*10] = bufs[12];
+  out0[0x10* 9] = bufs[16+12] + bufs[16+2];
+  out0[0x10* 8] = bufs[2];
+  out0[0x10* 7] = bufs[16+2]  + bufs[16+10];
+  out0[0x10* 6] = bufs[10];
+  out0[0x10* 5] = bufs[16+10] + bufs[16+6];
+  out0[0x10* 4] = bufs[6];
+  out0[0x10* 3] = bufs[16+6]  + bufs[16+14];
+  out0[0x10* 2] = bufs[14];
+  out0[0x10* 1] = bufs[16+14] + bufs[16+1];
+  out0[0x10* 0] = bufs[1];
+
+  out1[0x10* 0] = bufs[1];
+  out1[0x10* 1] = bufs[16+1]  + bufs[16+9];
+  out1[0x10* 2] = bufs[9];
+  out1[0x10* 3] = bufs[16+9]  + bufs[16+5];
+  out1[0x10* 4] = bufs[5];
+  out1[0x10* 5] = bufs[16+5]  + bufs[16+13];
+  out1[0x10* 6] = bufs[13];
+  out1[0x10* 7] = bufs[16+13] + bufs[16+3];
+  out1[0x10* 8] = bufs[3];
+  out1[0x10* 9] = bufs[16+3]  + bufs[16+11];
+  out1[0x10*10] = bufs[11];
+  out1[0x10*11] = bufs[16+11] + bufs[16+7];
+  out1[0x10*12] = bufs[7];
+  out1[0x10*13] = bufs[16+7]  + bufs[16+15];
+  out1[0x10*14] = bufs[15];
+  out1[0x10*15] = bufs[16+15];
+
+}
+
+
diff --git a/extensions/gdx-audio/jni/libmpg123/format.c b/extensions/gdx-audio/jni/libmpg123/format.c
index 1f4d49e..ad55a58 100644
--- a/extensions/gdx-audio/jni/libmpg123/format.c
+++ b/extensions/gdx-audio/jni/libmpg123/format.c
@@ -155,18 +155,14 @@ static int freq_fit(mpg123_handle *fr, struct audioformat *nf, int f0, int f2)
 {
 	nf->rate = frame_freq(fr)>>fr->p.down_sample;
 	if(cap_fit(fr,nf,f0,f2)) return 1;
-	if(fr->p.flags & MPG123_AUTO_RESAMPLE)
-	{
-		nf->rate>>=1;
-		if(cap_fit(fr,nf,f0,f2)) return 1;
-		nf->rate>>=1;
-		if(cap_fit(fr,nf,f0,f2)) return 1;
-	}
+	nf->rate>>=1;
+	if(cap_fit(fr,nf,f0,f2)) return 1;
+	nf->rate>>=1;
+	if(cap_fit(fr,nf,f0,f2)) return 1;
 #ifndef NO_NTOM
 	/* If nothing worked, try the other rates, only without constrains from user.
 	   In case you didn't guess: We enable flexible resampling if we find a working rate. */
-	if(  fr->p.flags & MPG123_AUTO_RESAMPLE &&
-	    !fr->p.force_rate && fr->p.down_sample == 0)
+	if(!fr->p.force_rate && fr->p.down_sample == 0)
 	{
 		int i;
 		int c  = nf->channels-1;
@@ -432,7 +428,7 @@ off_t bytes_to_samples(mpg123_handle *fr , off_t b)
 
 #ifndef NO_32BIT
 /* Remove every fourth byte, facilitating conversion from 32 bit to 24 bit integers.
-   This has to be aware of endianness, of course. */
+   This has to be aware of endianess, of course. */
 static void chop_fourth_byte(struct outbuffer *buf)
 {
 	unsigned char *wpos = buf->data;
diff --git a/extensions/gdx-audio/jni/libmpg123/frame.c b/extensions/gdx-audio/jni/libmpg123/frame.c
index f18b781..8f72366 100644
--- a/extensions/gdx-audio/jni/libmpg123/frame.c
+++ b/extensions/gdx-audio/jni/libmpg123/frame.c
@@ -36,11 +36,11 @@ static void *align_the_pointer(void *base, unsigned int alignment)
 static void frame_default_pars(mpg123_pars *mp)
 {
 	mp->outscale = 1.0;
-	mp->flags = 0;
 #ifdef GAPLESS
-	mp->flags |= MPG123_GAPLESS;
+	mp->flags = MPG123_GAPLESS;
+#else
+	mp->flags = 0;
 #endif
-	mp->flags |= MPG123_AUTO_RESAMPLE;
 #ifndef NO_NTOM
 	mp->force_rate = 0;
 #endif
@@ -73,11 +73,8 @@ void frame_init(mpg123_handle *fr)
 
 void frame_init_par(mpg123_handle *fr, mpg123_pars *mp)
 {
-	fr->own_buffer = TRUE;
+	fr->own_buffer = FALSE;
 	fr->buffer.data = NULL;
-	fr->buffer.rdata = NULL;
-	fr->buffer.fill = 0;
-	fr->buffer.size = 0;
 	fr->rawbuffs = NULL;
 	fr->rawbuffss = 0;
 	fr->rawdecwin = NULL;
@@ -175,51 +172,34 @@ int attribute_align_arg mpg123_reset_eq(mpg123_handle *mh)
 
 int frame_outbuffer(mpg123_handle *fr)
 {
-	size_t size = fr->outblock;
-	if(!fr->own_buffer)
-	{
-		if(fr->buffer.size < size)
-		{
-			fr->err = MPG123_BAD_BUFFER;
-			if(NOQUIET) error2("have external buffer of size %"SIZE_P", need %"SIZE_P, (size_p)fr->buffer.size, size);
-
-			return MPG123_ERR;
-		}
-	}
-
-	debug1("need frame buffer of %"SIZE_P, (size_p)size);
-	if(fr->buffer.rdata != NULL && fr->buffer.size != size)
+	size_t size = mpg123_safe_buffer()*AUDIOBUFSIZE;
+	if(!fr->own_buffer) fr->buffer.data = NULL;
+	if(fr->buffer.data != NULL && fr->buffer.size != size)
 	{
-		free(fr->buffer.rdata);
-		fr->buffer.rdata = NULL;
+		free(fr->buffer.data);
+		fr->buffer.data = NULL;
 	}
 	fr->buffer.size = size;
-	fr->buffer.data = NULL;
-	/* be generous: use 16 byte alignment */
-	if(fr->buffer.rdata == NULL) fr->buffer.rdata = (unsigned char*) malloc(fr->buffer.size+15);
-	if(fr->buffer.rdata == NULL)
+	if(fr->buffer.data == NULL) fr->buffer.data = (unsigned char*) malloc(fr->buffer.size);
+	if(fr->buffer.data == NULL)
 	{
 		fr->err = MPG123_OUT_OF_MEM;
-		return MPG123_ERR;
+		return -1;
 	}
-	fr->buffer.data = aligned_pointer(fr->buffer.rdata, unsigned char*, 16);
 	fr->own_buffer = TRUE;
 	fr->buffer.fill = 0;
-	return MPG123_OK;
+	return 0;
 }
 
 int attribute_align_arg mpg123_replace_buffer(mpg123_handle *mh, unsigned char *data, size_t size)
 {
-	debug2("replace buffer with %p size %"SIZE_P, data, (size_p)size);
-	/* Will accept any size, the error comes later... */
-	if(data == NULL)
+	if(data == NULL || size < mpg123_safe_buffer())
 	{
 		mh->err = MPG123_BAD_BUFFER;
 		return MPG123_ERR;
 	}
-	if(mh->buffer.rdata != NULL) free(mh->buffer.rdata);
+	if(mh->own_buffer && mh->buffer.data != NULL) free(mh->buffer.data);
 	mh->own_buffer = FALSE;
-	mh->buffer.rdata = NULL;
 	mh->buffer.data = data;
 	mh->buffer.size = size;
 	mh->buffer.fill = 0;
@@ -436,7 +416,7 @@ int frame_buffers_reset(mpg123_handle *fr)
 	/* Wondering: could it be actually _wanted_ to retain buffer contents over different files? (special gapless / cut stuff) */
 	fr->bsbuf = fr->bsspace[1];
 	fr->bsbufold = fr->bsbuf;
-	fr->bitreservoir = 0;
+	fr->bitreservoir = 0; /* Not entirely sure if this is the right place for that counter. */
 	frame_decode_buffers_reset(fr);
 	memset(fr->bsspace, 0, 2*(MAXFRAMESIZE+512));
 	memset(fr->ssave, 0, 34);
@@ -502,11 +482,11 @@ static void frame_fixed_reset(mpg123_handle *fr)
 	fr->to_decode = FALSE;
 	fr->to_ignore = FALSE;
 	fr->metaflags = 0;
-	fr->outblock = 0; /* This will be set before decoding! */
+	fr->outblock = mpg123_safe_buffer();
 	fr->num = -1;
 	fr->input_offset = -1;
 	fr->playnum = -1;
-	fr->state_flags = FRAME_ACCURATE;
+	fr->accurate = TRUE;
 	fr->silent_resync = 0;
 	fr->audio_start = 0;
 	fr->clip = 0;
@@ -534,7 +514,7 @@ static void frame_fixed_reset(mpg123_handle *fr)
 	fr->fresh = 1;
 	fr->new_format = 0;
 #ifdef GAPLESS
-	frame_gapless_init(fr,-1,0,0);
+	frame_gapless_init(fr,0,0);
 	fr->lastoff = 0;
 	fr->firstoff = 0;
 #endif
@@ -574,12 +554,12 @@ static void frame_free_buffers(mpg123_handle *fr)
 
 void frame_exit(mpg123_handle *fr)
 {
-	if(fr->buffer.rdata != NULL)
+	if(fr->own_buffer && fr->buffer.data != NULL)
 	{
-		debug1("freeing buffer at %p", (void*)fr->buffer.rdata);
-		free(fr->buffer.rdata);
+		debug1("freeing buffer at %p", (void*)fr->buffer.data);
+		free(fr->buffer.data);
 	}
-	fr->buffer.rdata = NULL;
+	fr->buffer.data = NULL;
 	frame_free_buffers(fr);
 	frame_free_toc(fr);
 #ifdef FRAME_INDEX
@@ -678,7 +658,7 @@ static off_t frame_fuzzy_find(mpg123_handle *fr, off_t want_frame, off_t* get_fr
 
 		/* Now estimate back what frame we get. */
 		*get_frame = (off_t) ((double)toc_entry/100. * fr->track_frames);
-		fr->state_flags &= ~FRAME_ACCURATE;
+		fr->accurate = FALSE;
 		fr->silent_resync = 1;
 		/* Question: Is the TOC for whole file size (with/without ID3) or the "real" audio data only?
 		   ID3v1 info could also matter. */
@@ -687,7 +667,7 @@ static off_t frame_fuzzy_find(mpg123_handle *fr, off_t want_frame, off_t* get_fr
 	else if(fr->mean_framesize > 0)
 	{	/* Just guess with mean framesize (may be exact with CBR files). */
 		/* Query filelen here or not? */
-		fr->state_flags &= ~FRAME_ACCURATE; /* Fuzzy! */
+		fr->accurate = FALSE; /* Fuzzy! */
 		fr->silent_resync = 1;
 		*get_frame = want_frame;
 		ret = (off_t) (fr->audio_start+fr->mean_framesize*want_frame);
@@ -734,7 +714,7 @@ off_t frame_index_find(mpg123_handle *fr, off_t want_frame, off_t* get_frame)
 		/* We have index position, that yields frame and byte offsets. */
 		*get_frame = fi*fr->index.step;
 		gopos = fr->index.data[fi];
-		fr->state_flags |= FRAME_ACCURATE; /* When using the frame index, we are accurate. */
+		fr->accurate = TRUE; /* When using the frame index, we are accurate. */
 	}
 	else
 	{
@@ -835,44 +815,36 @@ off_t frame_offset(mpg123_handle *fr, off_t outs)
 
 #ifdef GAPLESS
 /* input in _input_ samples */
-void frame_gapless_init(mpg123_handle *fr, off_t framecount, off_t bskip, off_t eskip)
+void frame_gapless_init(mpg123_handle *fr, off_t b, off_t e)
 {
-	debug3("frame_gaples_init: given %"OFF_P" frames, skip %"OFF_P" and %"OFF_P, (off_p)framecount, (off_p)bskip, (off_p)eskip);
-	fr->gapless_frames = framecount;
-	if(fr->gapless_frames > 0)
-	{
-		fr->begin_s = bskip+GAPLESS_DELAY;
-		fr->end_s = framecount*spf(fr)-eskip+GAPLESS_DELAY;
-	}
-	else fr->begin_s = fr->end_s = 0;
+	fr->begin_s = b;
+	fr->end_s = e;
 	/* These will get proper values later, from above plus resampling info. */
 	fr->begin_os = 0;
 	fr->end_os = 0;
-	fr->fullend_os = 0;
-	debug2("frame_gapless_init: from %"OFF_P" to %"OFF_P" samples", (off_p)fr->begin_s, (off_p)fr->end_s);
+	debug2("frame_gapless_init: from %lu to %lu samples", (long unsigned)fr->begin_s, (long unsigned)fr->end_s);
 }
 
 void frame_gapless_realinit(mpg123_handle *fr)
 {
 	fr->begin_os = frame_ins2outs(fr, fr->begin_s);
 	fr->end_os   = frame_ins2outs(fr, fr->end_s);
-	fr->fullend_os = frame_ins2outs(fr, fr->gapless_frames*spf(fr));
-	debug2("frame_gapless_realinit: from %"OFF_P" to %"OFF_P" samples", (off_p)fr->begin_os, (off_p)fr->end_os);
+	debug2("frame_gapless_realinit: from %lu to %lu samples", (long unsigned)fr->begin_os, (long unsigned)fr->end_os);
 }
 
-/* At least note when there is trouble... */
+/* When we got a new sample count, update the gaplessness. */
 void frame_gapless_update(mpg123_handle *fr, off_t total_samples)
 {
-	off_t gapless_samples = fr->gapless_frames*spf(fr);
-	debug2("gapless update with new sample count %"OFF_P" as opposed to known %"OFF_P, total_samples, gapless_samples);
-	if(NOQUIET && total_samples != gapless_samples)
-	fprintf(stderr, "\nWarning: Real sample count differs from given gapless sample count. Frankenstein stream?\n");
-
-	if(gapless_samples > total_samples)
+	if(fr->end_s < 1)
+	{
+		fr->end_s = total_samples;
+		frame_gapless_realinit(fr);
+	}
+	else if(fr->end_s > total_samples)
 	{
-		if(NOQUIET) error2("End sample count smaller than gapless end! (%"OFF_P" < %"OFF_P"). Disabling gapless mode from now on.", (off_p)total_samples, (off_p)fr->end_s);
-		/* This invalidates the current position... but what should I do? */
-		frame_gapless_init(fr, -1, 0, 0);
+		if(NOQUIET) error2("end sample count smaller than gapless end! (%"OFF_P" < %"OFF_P").", (off_p)total_samples, (off_p)fr->end_s);
+		/* Humbly disabling gapless stuff on track end. */
+		fr->end_s = 0;
 		frame_gapless_realinit(fr);
 		fr->lastframe = -1;
 		fr->lastoff = 0;
@@ -901,7 +873,7 @@ void frame_set_frameseek(mpg123_handle *fr, off_t fe)
 {
 	fr->firstframe = fe;
 #ifdef GAPLESS
-	if(fr->p.flags & MPG123_GAPLESS && fr->gapless_frames > 0)
+	if(fr->p.flags & MPG123_GAPLESS)
 	{
 		/* Take care of the beginning... */
 		off_t beg_f = frame_offset(fr, fr->begin_os);
@@ -916,7 +888,7 @@ void frame_set_frameseek(mpg123_handle *fr, off_t fe)
 		{
 			fr->lastframe  = frame_offset(fr,fr->end_os);
 			fr->lastoff    = fr->end_os - frame_outs(fr, fr->lastframe);
-		} else {fr->lastframe = -1; fr->lastoff = 0; }
+		} else fr->lastoff = 0;
 	} else { fr->firstoff = fr->lastoff = 0; fr->lastframe = -1; }
 #endif
 	fr->ignoreframe = ignoreframe(fr);
@@ -942,7 +914,6 @@ void frame_skip(mpg123_handle *fr)
 void frame_set_seek(mpg123_handle *fr, off_t sp)
 {
 	fr->firstframe = frame_offset(fr, sp);
-	debug1("frame_set_seek: from %"OFF_P, fr->num);
 #ifndef NO_NTOM
 	if(fr->down_sample == 3) ntom_set_ntom(fr, fr->firstframe);
 #endif
@@ -956,6 +927,8 @@ void frame_set_seek(mpg123_handle *fr, off_t sp)
 	debug3("frame_set_seek: begin at %li frames, end at %li; ignore from %li",
 	       (long) fr->firstframe, (long) fr->lastframe, (long) fr->ignoreframe);
 #endif
+	/* Old bit reservoir should be invalid, eh? */
+	fr->bitreservoir = 0;
 }
 
 int attribute_align_arg mpg123_volume_change(mpg123_handle *mh, double change)
diff --git a/extensions/gdx-audio/jni/libmpg123/frame.h b/extensions/gdx-audio/jni/libmpg123/frame.h
index 26e086e..377d469 100644
--- a/extensions/gdx-audio/jni/libmpg123/frame.h
+++ b/extensions/gdx-audio/jni/libmpg123/frame.h
@@ -38,11 +38,10 @@ struct al_table
 /* the output buffer, used to be pcm_sample, pcm_point and audiobufsize */
 struct outbuffer
 {
-	unsigned char *data; /* main data pointer, aligned */
+	unsigned char *data;
 	unsigned char *p; /* read pointer  */
 	size_t fill; /* fill from read pointer */
-	size_t size;
-	unsigned char *rdata; /* unaligned base pointer */
+	size_t size; /* that's actually more like a safe size, after we have more than that, flush it */
 };
 
 struct audioformat
@@ -84,11 +83,7 @@ struct mpg123_pars_struct
 #endif
 };
 
-enum frame_state_flags
-{
-	 FRAME_ACCURATE      = 0x1  /**<     0001 Positions are considered accurate. */
-	,FRAME_FRANKENSTEIN  = 0x2  /**<     0010 This stream is concatenated. */
-};
+
 
 /* There is a lot to condense here... many ints can be merged as flags; though the main space is still consumed by buffers. */
 struct mpg123_handle_struct
@@ -211,7 +206,7 @@ struct mpg123_handle_struct
 	off_t input_offset; /* byte offset of this frame in input stream */
 	off_t playnum; /* playback offset... includes repetitions, reset at seeks */
 	off_t audio_start; /* The byte offset in the file where audio data begins. */
-	int state_flags;
+	char accurate; /* Flag to see if we trust the frame number. */
 	char silent_resync; /* Do not complain for the next n resyncs. */
 	unsigned char* xing_toc; /* The seek TOC from Xing header. */
 	int freeformat;
@@ -267,14 +262,12 @@ struct mpg123_handle_struct
 	off_t lastframe;   /* last frame to decode (for gapless or num_frames limit) */
 	off_t ignoreframe; /* frames to decode but discard before firstframe */
 #ifdef GAPLESS
-	off_t gapless_frames; /* frame count for the gapless part */
 	off_t firstoff; /* number of samples to ignore from firstframe */
 	off_t lastoff;  /* number of samples to use from lastframe */
 	off_t begin_s;  /* overall begin offset in samples */
 	off_t begin_os;
 	off_t end_s;    /* overall end offset in samples */
 	off_t end_os;
-	off_t fullend_os; /* gapless_frames translated to output samples */
 #endif
 	unsigned int crc; /* Well, I need a safe 16bit type, actually. But wider doesn't hurt. */
 	struct reader *rd; /* pointer to the reading functions */
@@ -375,7 +368,8 @@ MPEG 2.5
 #ifdef GAPLESS
 /* well, I take that one for granted... at least layer3 */
 #define GAPLESS_DELAY 529
-void frame_gapless_init(mpg123_handle *fr, off_t framecount, off_t bskip, off_t eskip);
+/* still fine-tuning the "real music" window... see read_frame */
+void frame_gapless_init(mpg123_handle *fr, off_t b, off_t e);
 void frame_gapless_realinit(mpg123_handle *fr);
 void frame_gapless_update(mpg123_handle *mh, off_t total_samples);
 /*void frame_gapless_position(mpg123_handle* fr);
diff --git a/extensions/gdx-audio/jni/libmpg123/gapless.h b/extensions/gdx-audio/jni/libmpg123/gapless.h
deleted file mode 100644
index a98b86b..0000000
--- a/extensions/gdx-audio/jni/libmpg123/gapless.h
+++ /dev/null
@@ -1,119 +0,0 @@
-/*
-	sampleadjust: gapless sample offset math
-
-	copyright 1995-2012 by the mpg123 project - free software under the terms of the LGPL 2.1
-	see COPYING and AUTHORS files in distribution or http://mpg123.org
-
-	This is no stand-alone header, precisely to be able to fool it into using fake handle types for testing the math.
-*/
-
-#include "debug.h"
-
-#ifdef GAPLESS
-/* From internal sample number to external. */
-static off_t sample_adjust(mpg123_handle *mh, off_t x)
-{
-	off_t s;
-	if(mh->p.flags & MPG123_GAPLESS)
-	{
-		/* It's a bit tricky to do this computation for the padding samples.
-		   They are not there on the outside. */
-		if(x > mh->end_os)
-		{
-			if(x < mh->fullend_os)
-			s = mh->end_os - mh->begin_os;
-			else
-			s = x - (mh->fullend_os - mh->end_os + mh->begin_os);
-		}
-		else
-		s = x - mh->begin_os;
-	}
-	else
-	s = x;
-
-	return s;
-}
-
-/* from external samples to internal */
-static off_t sample_unadjust(mpg123_handle *mh, off_t x)
-{
-	off_t s;
-	if(mh->p.flags & MPG123_GAPLESS)
-	{
-		s = x + mh->begin_os;
-		/* There is a hole; we don't create sample positions in there.
-		   Jump from the end of the gapless track directly to after the padding. */
-		if(s >= mh->end_os)
-		s += mh->fullend_os - mh->end_os;
-	}
-	else s = x;
-
-	return s;
-}
-
-/*
-	Take the buffer after a frame decode (strictly: it is the data from frame fr->num!) and cut samples out.
-	fr->buffer.fill may then be smaller than before...
-*/
-static void frame_buffercheck(mpg123_handle *fr)
-{
-	/* When we have no accurate position, gapless code does not make sense. */
-	if(!(fr->state_flags & FRAME_ACCURATE)) return;
-
-	/* Get a grip on dirty streams that start with a gapless header.
-	   Simply accept all data from frames that are too much,
-	   they are supposedly attached to the stream after the fact. */
-	if(fr->gapless_frames > 0 && fr->num >= fr->gapless_frames) return;
-
-	/* Important: We first cut samples from the end, then cut from beginning (including left-shift of the buffer).
-	   This order works also for the case where firstframe == lastframe. */
-
-	/* The last interesting (planned) frame: Only use some leading samples.
-	   Note a difference from the below: The last frame and offset are unchanges by seeks.
-	   The lastoff keeps being valid. */
-	if(fr->lastframe > -1 && fr->num >= fr->lastframe)
-	{
-		/* There can be more than one frame of padding at the end, so we ignore the whole frame if we are beyond lastframe. */
-		off_t byteoff = (fr->num == fr->lastframe) ? samples_to_bytes(fr, fr->lastoff) : 0;
-		if((off_t)fr->buffer.fill > byteoff)
-		{
-			fr->buffer.fill = byteoff;
-		}
-		if(VERBOSE3) fprintf(stderr, "\nNote: Cut frame %"OFF_P" buffer on end of stream to %"OFF_P" samples, fill now %"SIZE_P" bytes.\n", (off_p)fr->num, (off_p)(fr->num == fr->lastframe ? fr->lastoff : 0), (size_p)fr->buffer.fill);
-	}
-
-	/* The first interesting frame: Skip some leading samples. */
-	if(fr->firstoff && fr->num == fr->firstframe)
-	{
-		off_t byteoff = samples_to_bytes(fr, fr->firstoff);
-		if((off_t)fr->buffer.fill > byteoff)
-		{
-			fr->buffer.fill -= byteoff;
-			/* buffer.p != buffer.data only for own buffer */
-			debug6("cutting %li samples/%li bytes on begin, own_buffer=%i at %p=%p, buf[1]=%i",
-			        (long)fr->firstoff, (long)byteoff, fr->own_buffer, (void*)fr->buffer.p, (void*)fr->buffer.data, ((short*)fr->buffer.p)[2]);
-			if(fr->own_buffer) fr->buffer.p = fr->buffer.data + byteoff;
-			else memmove(fr->buffer.data, fr->buffer.data + byteoff, fr->buffer.fill);
-			debug3("done cutting, buffer at %p =? %p, buf[1]=%i",
-			        (void*)fr->buffer.p, (void*)fr->buffer.data, ((short*)fr->buffer.p)[2]);
-		}
-		else fr->buffer.fill = 0;
-
-		if(VERBOSE3) fprintf(stderr, "\nNote: Cut frame %"OFF_P" buffer on beginning of stream by %"OFF_P" samples, fill now %"SIZE_P" bytes.\n", (off_p)fr->num, (off_p)fr->firstoff, (size_p)fr->buffer.fill);
-		/* We can only reach this frame again by seeking. And on seeking, firstoff will be recomputed.
-		   So it is safe to null it here (and it makes the if() decision abort earlier). */
-		fr->firstoff = 0;
-	}
-}
-
-#define SAMPLE_ADJUST(mh,x)     sample_adjust(mh,x)
-#define SAMPLE_UNADJUST(mh,x)   sample_unadjust(mh,x)
-#define FRAME_BUFFERCHECK(mh) frame_buffercheck(mh)
-
-#else /* no gapless code included */
-
-#define SAMPLE_ADJUST(mh,x)   (x)
-#define SAMPLE_UNADJUST(mh,x) (x)
-#define FRAME_BUFFERCHECK(mh)
-
-#endif
diff --git a/extensions/gdx-audio/jni/libmpg123/huffman.h b/extensions/gdx-audio/jni/libmpg123/huffman.h
index 576fbd8..74b543c 100644
--- a/extensions/gdx-audio/jni/libmpg123/huffman.h
+++ b/extensions/gdx-audio/jni/libmpg123/huffman.h
@@ -1,5 +1,5 @@
 /*
-	huffman.h: huffman tables ... recalcualted to work with optimized decoder scheme (MH)
+	huffman.h: huffman tables ... recalcualted to work with optimzed decoder scheme (MH)
 
 	copyright ?-2006 by the mpg123 project - free software under the terms of the LGPL 2.1
 	see COPYING and AUTHORS files in distribution or http://mpg123.org
@@ -16,46 +16,46 @@
 struct newhuff 
 {
   unsigned int linbits;
-  const short *table;
+  short *table;
 };
 
-static const short tab0[] = 
+static short tab0[] = 
 { 
    0
 };
 
-static const short tab1[] =
+static short tab1[] =
 {
   -5,  -3,  -1,  17,   1,  16,   0
 };
 
-static const short tab2[] =
+static short tab2[] =
 {
  -15, -11,  -9,  -5,  -3,  -1,  34,   2,  18,  -1,  33,  32,  17,  -1,   1,
   16,   0
 };
 
-static const short tab3[] =
+static short tab3[] =
 {
  -13, -11,  -9,  -5,  -3,  -1,  34,   2,  18,  -1,  33,  32,  16,  17,  -1,
    1,   0
 };
 
-static const short tab5[] =
+static short tab5[] =
 {
  -29, -25, -23, -15,  -7,  -5,  -3,  -1,  51,  35,  50,  49,  -3,  -1,  19,
    3,  -1,  48,  34,  -3,  -1,  18,  33,  -1,   2,  32,  17,  -1,   1,  16,
    0
 };
 
-static const short tab6[] =
+static short tab6[] =
 {
  -25, -19, -13,  -9,  -5,  -3,  -1,  51,   3,  35,  -1,  50,  48,  -1,  19,
   49,  -3,  -1,  34,   2,  18,  -3,  -1,  33,  32,   1,  -1,  17,  -1,  16,
    0
 };
 
-static const short tab7[] =
+static short tab7[] =
 {
  -69, -65, -57, -39, -29, -17, -11,  -7,  -3,  -1,  85,  69,  -1,  84,  83,
   -1,  53,  68,  -3,  -1,  37,  82,  21,  -5,  -1,  81,  -1,   5,  52,  -1,
@@ -64,7 +64,7 @@ static const short tab7[] =
   -5,  -1,  33,  -1,   2,  32,  17,  -1,   1,  16,   0
 };
 
-static const short tab8[] =
+static short tab8[] =
 {
  -65, -63, -59, -45, -31, -19, -13,  -7,  -5,  -3,  -1,  85,  84,  69,  83,
   -3,  -1,  53,  68,  37,  -3,  -1,  82,   5,  21,  -5,  -1,  81,  -1,  52,
@@ -73,7 +73,7 @@ static const short tab8[] =
    2,  32,  -1,  18,  33,  17,  -3,  -1,   1,  16,   0
 };
 
-static const short tab9[] =
+static short tab9[] =
 {
  -63, -53, -41, -29, -19, -11,  -5,  -3,  -1,  85,  69,  53,  -1,  83,  -1,
   84,   5,  -3,  -1,  68,  37,  -1,  82,  21,  -3,  -1,  81,  52,  -1,  67,
@@ -82,7 +82,7 @@ static const short tab9[] =
   18,  -1,  33,  32,  -3,  -1,  17,   1,  -1,  16,   0
 };
 
-static const short tab10[] =
+static short tab10[] =
 {
 -125,-121,-111, -83, -55, -35, -21, -13,  -7,  -3,  -1, 119, 103,  -1, 118,
   87,  -3,  -1, 117, 102,  71,  -3,  -1, 116,  86,  -1, 101,  55,  -9,  -3,
@@ -95,7 +95,7 @@ static const short tab10[] =
    2,  32,  17,  -1,   1,  16,   0
 };
 
-static const short tab11[] =
+static short tab11[] =
 {
 -121,-113, -89, -59, -43, -27, -17,  -7,  -3,  -1, 119, 103,  -1, 118, 117,
   -3,  -1, 102,  71,  -1, 116,  -1,  87,  85,  -5,  -3,  -1,  86, 101,  55,
@@ -108,7 +108,7 @@ static const short tab11[] =
   32,  17,  -3,  -1,   1,  16,   0
 };
 
-static const short tab12[] =
+static short tab12[] =
 {
 -115, -99, -73, -45, -27, -17,  -9,  -5,  -3,  -1, 119, 103, 118,  -1,  87,
  117,  -3,  -1, 102,  71,  -1, 116, 101,  -3,  -1,  86,  55,  -3,  -1, 115,
@@ -121,7 +121,7 @@ static const short tab12[] =
    2,  32,   0,  17,  -1,   1,  16
 };
 
-static const short tab13[] =
+static short tab13[] =
 {
 -509,-503,-475,-405,-333,-265,-205,-153,-115, -83, -53, -35, -21, -13,  -9,
   -7,  -5,  -3,  -1, 254, 252, 253, 237, 255,  -1, 239, 223,  -3,  -1, 238,
@@ -160,7 +160,7 @@ static const short tab13[] =
    0
 };
 
-static const short tab15[] =
+static short tab15[] =
 {
 -495,-445,-355,-263,-183,-115, -77, -43, -27, -13,  -7,  -3,  -1, 255, 239,
   -1, 254, 223,  -1, 238,  -1, 253, 207,  -7,  -3,  -1, 252, 222,  -1, 237,
@@ -199,7 +199,7 @@ static const short tab15[] =
    0
 };
 
-static const short tab16[] =
+static short tab16[] =
 {
 -509,-503,-461,-323,-103, -37, -27, -15,  -7,  -3,  -1, 239, 254,  -1, 223,
  253,  -3,  -1, 207, 252,  -1, 191, 251,  -5,  -1, 175,  -1, 250, 159,  -3,
@@ -238,7 +238,7 @@ static const short tab16[] =
    0
 };
 
-static const short tab24[] =
+static short tab24[] =
 {
 -451,-117, -43, -25, -15,  -7,  -3,  -1, 239, 254,  -1, 223, 253,  -3,  -1,
  207, 252,  -1, 191, 251,  -5,  -1, 250,  -1, 175, 159,  -1, 249, 248,  -9,
@@ -277,14 +277,14 @@ static const short tab24[] =
    0
 };
 
-static const short tab_c0[] =
+static short tab_c0[] =
 {
  -29, -21, -13,  -7,  -3,  -1,  11,  15,  -1,  13,  14,  -3,  -1,   7,   5,
    9,  -3,  -1,   6,   3,  -1,  10,  12,  -3,  -1,   2,   1,  -1,   4,   8,
    0
 };
 
-static const short tab_c1[] =
+static short tab_c1[] =
 {
  -15,  -7,  -3,  -1,  15,  14,  -1,  13,  12,  -3,  -1,  11,  10,  -1,   9,
    8,  -7,  -3,  -1,   7,   6,  -1,   5,   4,  -3,  -1,   3,   2,  -1,   1,
@@ -293,7 +293,7 @@ static const short tab_c1[] =
 
 
 
-static const struct newhuff ht[] = 
+static struct newhuff ht[] = 
 {
  { /* 0 */ 0 , tab0  } ,
  { /* 2 */ 0 , tab1  } ,
@@ -330,7 +330,7 @@ static const struct newhuff ht[] =
  { /* 16 */ 13, tab24 }
 };
 
-static const struct newhuff htc[] = 
+static struct newhuff htc[] = 
 {
  { /* 1 , 1 , */ 0 , tab_c0 } ,
  { /* 1 , 1 , */ 0 , tab_c1 }
diff --git a/extensions/gdx-audio/jni/libmpg123/icy.h b/extensions/gdx-audio/jni/libmpg123/icy.h
index a5fd64e..050a056 100644
--- a/extensions/gdx-audio/jni/libmpg123/icy.h
+++ b/extensions/gdx-audio/jni/libmpg123/icy.h
@@ -26,11 +26,8 @@ void reset_icy(struct icy_meta *);
 
 #else
 
-#undef init_icy
 #define init_icy(a)
-#undef clear_icy
 #define clear_icy(a)
-#undef reset_icy
 #define reset_icy(a)
 
 #endif /* NO_ICY */
diff --git a/extensions/gdx-audio/jni/libmpg123/id3.c b/extensions/gdx-audio/jni/libmpg123/id3.c
index a2183aa..bc1c914 100644
--- a/extensions/gdx-audio/jni/libmpg123/id3.c
+++ b/extensions/gdx-audio/jni/libmpg123/id3.c
@@ -654,7 +654,6 @@ int parse_new_id3(mpg123_handle *fr, unsigned long first4bytes)
 						{
 							/* 4 or 3 bytes id */
 							strncpy(id, (char*) tagdata+pos, head_part);
-							id[head_part] = 0; /* terminate for 3 or 4 bytes */
 							pos += head_part;
 							tagpos += head_part;
 							/* size as 32 bits or 28 bits */
@@ -866,7 +865,7 @@ static void convert_latin1(mpg123_string *sb, const unsigned char* s, size_t l,
 	 1: big endian
 
 	This modifies source and len to indicate the data _after_ the BOM(s).
-	Note on nasty data: The last encountered BOM determines the endianness.
+	Note on nasty data: The last encountered BOM determines the endianess.
 	I have seen data with multiple BOMS, namely from "the" id3v2 program.
 	Not nice, but what should I do?
 */
@@ -913,7 +912,7 @@ static void convert_utf16bom(mpg123_string *sb, const unsigned char* s, size_t l
 	debug1("convert_utf16 with length %lu", (unsigned long)l);
 
 	bom_endian = check_bom(&s, &l);
-	debug1("UTF16 endianness check: %i", bom_endian);
+	debug1("UTF16 endianess check: %i", bom_endian);
 
 	if(bom_endian == -1) /* little-endian */
 	{
diff --git a/extensions/gdx-audio/jni/libmpg123/index.h b/extensions/gdx-audio/jni/libmpg123/index.h
index 3e1ca64..0260b23 100644
--- a/extensions/gdx-audio/jni/libmpg123/index.h
+++ b/extensions/gdx-audio/jni/libmpg123/index.h
@@ -22,6 +22,7 @@
 
 #include "config.h"
 #include "compat.h"
+#include <unistd.h>
 
 struct frame_index
 {
diff --git a/extensions/gdx-audio/jni/libmpg123/layer3.c b/extensions/gdx-audio/jni/libmpg123/layer3.c
index e43a5de..cbb2985 100644
--- a/extensions/gdx-audio/jni/libmpg123/layer3.c
+++ b/extensions/gdx-audio/jni/libmpg123/layer3.c
@@ -79,10 +79,10 @@ struct III_sideinfo
 
 struct bandInfoStruct
 {
-	unsigned short longIdx[23];
-	unsigned char longDiff[22];
-	unsigned short shortIdx[14];
-	unsigned char shortDiff[13];
+	int longIdx[23];
+	int longDiff[22];
+	int shortIdx[14];
+	int shortDiff[13];
 };
 
 /* Techy details about our friendly MPEG data. Fairly constant over the years;-) */
@@ -270,7 +270,7 @@ void init_layer3(void)
 		const struct bandInfoStruct *bi = &bandInfo[j];
 		int *mp;
 		int cb,lwin;
-		const unsigned char *bdf;
+		const int *bdf;
 
 		mp = map[j][0] = mapbuf0[j];
 		bdf = bi->longDiff;
@@ -403,7 +403,7 @@ static int III_get_side_info(mpg123_handle *fr, struct III_sideinfo *si,int ster
 
 	if(si->main_data_begin > fr->bitreservoir)
 	{
-		if(!fr->to_ignore && VERBOSE2) fprintf(stderr, "Note: missing %d bytes in bit reservoir for frame %li\n", (int)(si->main_data_begin - fr->bitreservoir), (long)fr->num);
+		if(VERBOSE2) fprintf(stderr, "Note: missing %d bytes in bit reservoir for frame %li\n", (int)(si->main_data_begin - fr->bitreservoir), (long)fr->num);
 
 		/*  overwrite main_data_begin for the really available bit reservoir */
 		backbits(fr, tab[1]);
@@ -678,11 +678,8 @@ static int III_get_scale_factors_2(mpg123_handle *fr, int *scf,struct gr_info_s
 	return numbits;
 }
 
-static unsigned char pretab_choice[2][22] =
-{
-	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
-	{0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,2,2,3,3,3,2,0}
-};
+static const int pretab1[22] = {0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,2,2,3,3,3,2,0};
+static const int pretab2[22] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
 
 /*
 	Dequantize samples
@@ -772,7 +769,7 @@ static int III_dequantize_sample(mpg123_handle *fr, real xr[SBLIMIT][SSLIMIT],in
 		for(i=0;i<2;i++)
 		{
 			int lp = l[i];
-			const struct newhuff *h = ht+gr_info->table_select[i];
+			struct newhuff *h = ht+gr_info->table_select[i];
 			for(;lp;lp--,mc--)
 			{
 				register int x,y;
@@ -800,7 +797,7 @@ static int III_dequantize_sample(mpg123_handle *fr, real xr[SBLIMIT][SSLIMIT],in
 					}
 				}
 				{
-					const short *val = h->table;
+					register short *val = h->table;
 					REFRESH_MASK;
 					while((y=*val++)<0)
 					{
@@ -865,8 +862,8 @@ static int III_dequantize_sample(mpg123_handle *fr, real xr[SBLIMIT][SSLIMIT],in
 
 		for(;l3 && (part2remain+num > 0);l3--)
 		{
-			const struct newhuff* h;
-			const short* val;
+			struct newhuff* h;
+			register short* val;
 			register short a;
 			/*
 				This is only a humble hack to prevent a special segfault.
@@ -984,7 +981,7 @@ static int III_dequantize_sample(mpg123_handle *fr, real xr[SBLIMIT][SSLIMIT],in
 	else
 	{
 		/* decoding with 'long' BandIndex table (block_type != 2) */
-		const unsigned char *pretab = pretab_choice[gr_info->preflag];
+		const int *pretab = gr_info->preflag ? pretab1 : pretab2;
 		int i,max = -1;
 		int cb = 0;
 		int *m = map[sfreq][2];
@@ -995,7 +992,7 @@ static int III_dequantize_sample(mpg123_handle *fr, real xr[SBLIMIT][SSLIMIT],in
 		for(i=0;i<3;i++)
 		{
 			int lp = l[i];
-			const struct newhuff *h = ht+gr_info->table_select[i];
+			struct newhuff *h = ht+gr_info->table_select[i];
 
 			for(;lp;lp--,mc--)
 			{
@@ -1017,7 +1014,7 @@ static int III_dequantize_sample(mpg123_handle *fr, real xr[SBLIMIT][SSLIMIT],in
 					}
 				}
 				{
-					const short *val = h->table;
+					register short *val = h->table;
 					REFRESH_MASK;
 					while((y=*val++)<0)
 					{
@@ -1081,9 +1078,8 @@ static int III_dequantize_sample(mpg123_handle *fr, real xr[SBLIMIT][SSLIMIT],in
 		/* short (count1table) values */
 		for(;l3 && (part2remain+num > 0);l3--)
 		{
-			const struct newhuff *h = htc+gr_info->count1table_select;
-			const short *val = h->table;
-			register short a;
+			struct newhuff *h = htc+gr_info->count1table_select;
+			register short *val = h->table,a;
 
 			REFRESH_MASK;
 			while((a=*val++)<0)
diff --git a/extensions/gdx-audio/jni/libmpg123/libmpg123.c b/extensions/gdx-audio/jni/libmpg123/libmpg123.c
index 8cb219c..2084d36 100644
--- a/extensions/gdx-audio/jni/libmpg123/libmpg123.c
+++ b/extensions/gdx-audio/jni/libmpg123/libmpg123.c
@@ -1,7 +1,7 @@
 /*
 	libmpg123: MPEG Audio Decoder library
 
-	copyright 1995-2012 by the mpg123 project - free software under the terms of the LGPL 2.1
+	copyright 1995-2010 by the mpg123 project - free software under the terms of the LGPL 2.1
 	see COPYING and AUTHORS files in distribution or http://mpg123.org
 
 */
@@ -10,12 +10,75 @@
 #include "icy2utf8.h"
 #include "debug.h"
 
-#include "gapless.h"
+#ifdef GAPLESS
+#define SAMPLE_ADJUST(x)   ((x) - ((mh->p.flags & MPG123_GAPLESS) ? mh->begin_os : 0))
+#define SAMPLE_UNADJUST(x) ((x) + ((mh->p.flags & MPG123_GAPLESS) ? mh->begin_os : 0))
+#else
+#define SAMPLE_ADJUST(x)   (x)
+#define SAMPLE_UNADJUST(x) (x)
+#endif
 
 #define SEEKFRAME(mh) ((mh)->ignoreframe < 0 ? 0 : (mh)->ignoreframe)
 
 static int initialized = 0;
 
+#ifdef GAPLESS
+/*
+	Take the buffer after a frame decode (strictly: it is the data from frame fr->num!) and cut samples out.
+	fr->buffer.fill may then be smaller than before...
+*/
+static void frame_buffercheck(mpg123_handle *fr)
+{
+	/* When we have no accurate position, gapless code does not make sense. */
+	if(!fr->accurate) return;
+
+	if(fr->lastframe > -1 && fr->num > fr->lastframe+2)
+	{
+		if(fr->num - fr->lastframe == 3 && NOQUIET) fprintf(stderr, "\nWarning: Activating hack for gapless jingles / heuristic to continue playback despite misled gapless decoding.\n");
+
+		return;
+	}
+
+	/* Important: We first cut samples from the end, then cut from beginning (including left-shift of the buffer).
+	   This order works also for the case where firstframe == lastframe. */
+
+	/* The last interesting (planned) frame: Only use some leading samples.
+	   Note a difference from the below: The last frame and offset are unchanges by seeks.
+	   The lastoff keeps being valid. */
+	if(fr->lastframe > -1 && fr->num >= fr->lastframe)
+	{
+		/* There can be more than one frame of padding at the end, so we ignore the whole frame if we are beyond lastframe. */
+		off_t byteoff = (fr->num == fr->lastframe) ? samples_to_bytes(fr, fr->lastoff) : 0;
+		if((off_t)fr->buffer.fill > byteoff)
+		{
+			fr->buffer.fill = byteoff;
+		}
+		debug1("Cut frame buffer on end of stream, fill now %"SIZE_P" bytes.", (size_p)fr->buffer.fill);
+	}
+
+	/* The first interesting frame: Skip some leading samples. */
+	if(fr->firstoff && fr->num == fr->firstframe)
+	{
+		off_t byteoff = samples_to_bytes(fr, fr->firstoff);
+		if((off_t)fr->buffer.fill > byteoff)
+		{
+			fr->buffer.fill -= byteoff;
+			/* buffer.p != buffer.data only for own buffer */
+			debug6("cutting %li samples/%li bytes on begin, own_buffer=%i at %p=%p, buf[1]=%i",
+			        (long)fr->firstoff, (long)byteoff, fr->own_buffer, (void*)fr->buffer.p, (void*)fr->buffer.data, ((short*)fr->buffer.p)[2]);
+			if(fr->own_buffer) fr->buffer.p = fr->buffer.data + byteoff;
+			else memmove(fr->buffer.data, fr->buffer.data + byteoff, fr->buffer.fill);
+			debug3("done cutting, buffer at %p =? %p, buf[1]=%i",
+			        (void*)fr->buffer.p, (void*)fr->buffer.data, ((short*)fr->buffer.p)[2]);
+		}
+		else fr->buffer.fill = 0;
+		/* We can only reach this frame again by seeking. And on seeking, firstoff will be recomputed.
+		   So it is safe to null it here (and it makes the if() decision abort earlier). */
+		fr->firstoff = 0;
+	}
+}
+#endif
+
 int attribute_align_arg mpg123_init(void)
 {
 	if((sizeof(short) != 2) || (sizeof(long) < 4)) return MPG123_BAD_TYPES;
@@ -67,7 +130,18 @@ mpg123_handle attribute_align_arg *mpg123_parnew(mpg123_pars *mp, const char* de
 	}
 	if(fr != NULL)
 	{
-		fr->decoder_change = 1;
+		/* Cleanup that mess! ... use mpg123_decoder / decode_update! */
+		if(frame_outbuffer(fr) != 0)
+		{
+			err = MPG123_NO_BUFFERS;
+			frame_exit(fr);
+			free(fr);
+			fr = NULL;
+		}
+		else
+		{
+			fr->decoder_change = 1;
+		}
 	}
 	else if(err == MPG123_OK) err = MPG123_OUT_OF_MEM;
 
@@ -347,10 +421,7 @@ int attribute_align_arg mpg123_getstate(mpg123_handle *mh, enum mpg123_state key
 	switch(key)
 	{
 		case MPG123_ACCURATE:
-			theval = mh->state_flags & FRAME_ACCURATE;
-		break;
-		case MPG123_FRANKENSTEIN:
-			theval = mh->state_flags & FRAME_FRANKENSTEIN;
+			theval = mh->accurate;
 		break;
 		case MPG123_BUFFERFILL:
 #ifndef NO_FEEDER
@@ -549,9 +620,6 @@ int decode_update(mpg123_handle *mh)
 	else mh->single = (mh->p.flags & MPG123_FORCE_MONO)-1;
 	if(set_synth_functions(mh) != 0) return -1;;
 
-	/* The needed size of output buffer may have changed. */
-	if(frame_outbuffer(mh) != MPG123_OK) return -1;
-
 	do_rva(mh);
 	debug3("done updating decoder structure with native rate %li and af.rate %li and down_sample %i", frame_freq(mh), mh->af.rate, mh->down_sample);
 
@@ -566,8 +634,7 @@ size_t attribute_align_arg mpg123_safe_buffer(void)
 
 size_t attribute_align_arg mpg123_outblock(mpg123_handle *mh)
 {
-	/* Try to be helpful and never return zero output block size. */
-	if(mh != NULL && mh->outblock > 0) return mh->outblock;
+	if(mh != NULL) return mh->outblock;
 	else return mpg123_safe_buffer();
 }
 
@@ -603,7 +670,7 @@ static int get_next_frame(mpg123_handle *mh)
 		else if(b <= 0)
 		{
 			/* More sophisticated error control? */
-			if(b==0 || (mh->rdat.filelen >= 0 && mh->rdat.filepos == mh->rdat.filelen))
+			if(b==0 || mh->rdat.filepos == mh->rdat.filelen)
 			{ /* We simply reached the end. */
 				mh->track_frames = mh->num + 1;
 				debug("What about updating/checking gapless sample count here?");
@@ -748,7 +815,10 @@ int attribute_align_arg mpg123_framebyframe_decode(mpg123_handle *mh, off_t *num
 	decode_the_frame(mh);
 	mh->to_decode = mh->to_ignore = FALSE;
 	mh->buffer.p = mh->buffer.data;
-	FRAME_BUFFERCHECK(mh);
+#ifdef GAPLESS
+	/* This checks for individual samples to skip, for gapless mode or sample-accurate seek. */
+	frame_buffercheck(mh);
+#endif
 	*audio = mh->buffer.p;
 	*bytes = mh->buffer.fill;
 	return MPG123_OK;
@@ -825,7 +895,10 @@ int attribute_align_arg mpg123_decode_frame(mpg123_handle *mh, off_t *num, unsig
 
 			mh->to_decode = mh->to_ignore = FALSE;
 			mh->buffer.p = mh->buffer.data;
-			FRAME_BUFFERCHECK(mh);
+#ifdef GAPLESS
+			/* This checks for individual samples to skip, for gapless mode or sample-accurate seek. */
+			frame_buffercheck(mh);
+#endif
 			if(audio != NULL) *audio = mh->buffer.p;
 			if(bytes != NULL) *bytes = mh->buffer.fill;
 
@@ -928,7 +1001,9 @@ int attribute_align_arg mpg123_decode(mpg123_handle *mh, const unsigned char *in
 			mh->to_decode = mh->to_ignore = FALSE;
 			mh->buffer.p = mh->buffer.data;
 			debug2("decoded frame %li, got %li samples in buffer", (long)mh->num, (long)(mh->buffer.fill / (samples_to_bytes(mh, 1))));
-			FRAME_BUFFERCHECK(mh);
+#ifdef GAPLESS
+			frame_buffercheck(mh); /* Seek & gapless. */
+#endif
 		}
 		if(mh->buffer.fill) /* Copy (part of) the decoded data to the caller's buffer. */
 		{
@@ -970,8 +1045,7 @@ long attribute_align_arg mpg123_clip(mpg123_handle *mh)
 	return ret;
 }
 
-/* Simples: Track needs initializtion if no initial frame has been read yet. */
-#define track_need_init(mh) ((mh)->num < 0)
+#define track_need_init(mh) (!(mh)->to_decode && (mh)->fresh)
 
 static int init_track(mpg123_handle *mh)
 {
@@ -1042,7 +1116,7 @@ off_t attribute_align_arg mpg123_tell(mpg123_handle *mh)
 			pos = frame_outs(mh, mh->num+1) - bytes_to_samples(mh, mh->buffer.fill);
 		}
 		/* Substract padding and delay from the beginning. */
-		pos = SAMPLE_ADJUST(mh,pos);
+		pos = SAMPLE_ADJUST(pos);
 		/* Negative sample offsets are not right, less than nothing is still nothing. */
 		return pos>0 ? pos : 0;
 	}
@@ -1127,9 +1201,10 @@ off_t attribute_align_arg mpg123_seek(mpg123_handle *mh, off_t sampleoff, int wh
 			/* When we do not know the end already, we can try to find it. */
 			if(mh->track_frames < 1 && (mh->rdat.flags & READER_SEEKABLE))
 			mpg123_scan(mh);
-			if(mh->track_frames > 0) pos = SAMPLE_ADJUST(mh,frame_outs(mh, mh->track_frames)) - sampleoff;
 #ifdef GAPLESS
-			else if(mh->end_os > 0) pos = SAMPLE_ADJUST(mh,mh->end_os) - sampleoff;
+			if(mh->end_os > 0) pos = SAMPLE_ADJUST(mh->end_os) - sampleoff;
+#else
+			if(mh->track_frames > 0) pos = SAMPLE_ADJUST(frame_outs(mh, mh->track_frames)) - sampleoff;
 #endif
 			else
 			{
@@ -1141,7 +1216,7 @@ off_t attribute_align_arg mpg123_seek(mpg123_handle *mh, off_t sampleoff, int wh
 	}
 	if(pos < 0) pos = 0;
 	/* pos now holds the wanted sample offset in adjusted samples */
-	frame_set_seek(mh, SAMPLE_UNADJUST(mh,pos));
+	frame_set_seek(mh, SAMPLE_UNADJUST(pos));
 	pos = do_the_seek(mh);
 	if(pos < 0) return pos;
 
@@ -1177,9 +1252,10 @@ off_t attribute_align_arg mpg123_feedseek(mpg123_handle *mh, off_t sampleoff, in
 		case SEEK_CUR: pos += sampleoff; break;
 		case SEEK_SET: pos  = sampleoff; break;
 		case SEEK_END:
-			if(mh->track_frames > 0) pos = SAMPLE_ADJUST(mh,frame_outs(mh, mh->track_frames)) - sampleoff;
 #ifdef GAPLESS
-			else if(mh->end_os >= 0) pos = SAMPLE_ADJUST(mh,mh->end_os) - sampleoff;
+			if(mh->end_os >= 0) pos = SAMPLE_ADJUST(mh->end_os) - sampleoff;
+#else
+			if(mh->track_frames > 0) pos = SAMPLE_ADJUST(frame_outs(mh, mh->track_frames)) - sampleoff;
 #endif
 			else
 			{
@@ -1190,7 +1266,7 @@ off_t attribute_align_arg mpg123_feedseek(mpg123_handle *mh, off_t sampleoff, in
 		default: mh->err = MPG123_BAD_WHENCE; return MPG123_ERR;
 	}
 	if(pos < 0) pos = 0;
-	frame_set_seek(mh, SAMPLE_UNADJUST(mh,pos));
+	frame_set_seek(mh, SAMPLE_UNADJUST(pos));
 	pos = SEEKFRAME(mh);
 	mh->buffer.fill = 0;
 
@@ -1239,7 +1315,8 @@ off_t attribute_align_arg mpg123_seek_frame(mpg123_handle *mh, off_t offset, int
 			return MPG123_ERR;
 	}
 	if(pos < 0) pos = 0;
-	/* Not limiting the possible position on end for the chance that there might be more to the stream than announced via track_frames. */
+	/* Hm, do we need to seek right past the end? */
+	else if(mh->track_frames > 0 && pos >= mh->track_frames) pos = mh->track_frames;
 
 	frame_set_frameseek(mh, pos);
 	pos = do_the_seek(mh);
@@ -1279,16 +1356,23 @@ off_t attribute_align_arg mpg123_length(mpg123_handle *mh)
 
 	length = frame_ins2outs(mh, length);
 	debug1("mpg123_length: external sample length: %"OFF_P, (off_p)length);
-	length = SAMPLE_ADJUST(mh,length);
+#ifdef GAPLESS
+	if(mh->p.flags & MPG123_GAPLESS)
+	{
+		debug2("mpg123_length: begin_os = %"OFF_P", end_os = %"OFF_P, (off_p)mh->begin_os, (off_p)mh->end_os);
+		if(mh->end_os > 0 && length > mh->end_os) length = mh->end_os;
+		length -= mh->begin_os;
+		debug1("mpg123_length: after gapless correction: %"OFF_P, (off_p)length);
+	}
+#endif
 	return length;
 }
 
 int attribute_align_arg mpg123_scan(mpg123_handle *mh)
 {
 	int b;
-	off_t oldpos;
-	off_t track_frames = 0;
-	off_t track_samples = 0;
+	off_t backframe;
+	int to_decode, to_ignore;
 
 	if(mh == NULL) return MPG123_ERR;
 	if(!(mh->rdat.flags & READER_SEEKABLE)){ mh->err = MPG123_NO_SEEK; return MPG123_ERR; }
@@ -1301,28 +1385,30 @@ int attribute_align_arg mpg123_scan(mpg123_handle *mh)
 		if(b == MPG123_DONE) return MPG123_OK;
 		else return MPG123_ERR; /* Must be error here, NEED_MORE is not for seekable streams. */
 	}
-	oldpos = mpg123_tell(mh);
+	backframe = mh->num;
+	to_decode = mh->to_decode;
+	to_ignore = mh->to_ignore;
 	b = mh->rd->seek_frame(mh, 0);
 	if(b<0 || mh->num != 0) return MPG123_ERR;
 	/* One frame must be there now. */
-	track_frames = 1;
-	track_samples = spf(mh); /* Internal samples. */
+	mh->track_frames = 1;
+	mh->track_samples = spf(mh); /* Internal samples. */
 	debug("TODO: We should disable gapless code when encountering inconsistent spf(mh)!");
-	/* Do not increment mh->track_frames in the loop as tha would confuse Frankenstein detection. */
 	while(read_frame(mh) == 1)
 	{
-		++track_frames;
-		track_samples += spf(mh);
+		++mh->track_frames;
+		mh->track_samples += spf(mh);
 	}
-	mh->track_frames = track_frames;
-	mh->track_samples = track_samples;
-	mpg123_seek_frame(mh, SEEK_SET, mh->track_frames);
 	debug2("Scanning yielded %"OFF_P" track samples, %"OFF_P" frames.", (off_p)mh->track_samples, (off_p)mh->track_frames);
 #ifdef GAPLESS
 	/* Also, think about usefulness of that extra value track_samples ... it could be used for consistency checking. */
 	frame_gapless_update(mh, mh->track_samples);
-#endif
-	return mpg123_seek(mh, oldpos, SEEK_SET) >= 0 ? MPG123_OK : MPG123_ERR;
+#endif	
+	b = mh->rd->seek_frame(mh, backframe);
+	if(b<0 || mh->num != backframe) return MPG123_ERR;
+	mh->to_decode = to_decode;
+	mh->to_ignore = to_ignore;
+	return MPG123_OK;
 }
 
 int attribute_align_arg mpg123_meta_check(mpg123_handle *mh)
@@ -1331,14 +1417,6 @@ int attribute_align_arg mpg123_meta_check(mpg123_handle *mh)
 	else return 0;
 }
 
-void attribute_align_arg mpg123_meta_free(mpg123_handle *mh)
-{
-	if(mh == NULL) return;
-
-	reset_id3(mh);
-	reset_icy(&mh->icy);
-}
-
 int attribute_align_arg mpg123_id3(mpg123_handle *mh, mpg123_id3v1 **v1, mpg123_id3v2 **v2)
 {
 	if(v1 != NULL) *v1 = NULL;
@@ -1502,10 +1580,8 @@ int attribute_align_arg mpg123_set_index(mpg123_handle *mh, off_t *offsets, off_
 int attribute_align_arg mpg123_close(mpg123_handle *mh)
 {
 	if(mh == NULL) return MPG123_ERR;
-
-	/* mh->rd is never NULL! */
-	if(mh->rd->close != NULL) mh->rd->close(mh);
-
+	if(mh->rd != NULL && mh->rd->close != NULL) mh->rd->close(mh);
+	mh->rd = NULL;
 	if(mh->new_format)
 	{
 		debug("Hey, we are closing a track before the new format has been queried...");
diff --git a/extensions/gdx-audio/jni/libmpg123/libmpg123.sym.in b/extensions/gdx-audio/jni/libmpg123/libmpg123.sym.in
new file mode 100644
index 0000000..e69de29
diff --git a/extensions/gdx-audio/jni/libmpg123/mangle.h b/extensions/gdx-audio/jni/libmpg123/mangle.h
index d55d175..75c0c36 100644
--- a/extensions/gdx-audio/jni/libmpg123/mangle.h
+++ b/extensions/gdx-audio/jni/libmpg123/mangle.h
@@ -19,37 +19,16 @@
 #define MOVUAPS movups
 #endif
 
-/*
-	ALIGNX: align to X bytes
-	This differs per compiler/platform in taking the byte count or an exponent for base 2.
-	A way out is balign, if the assembler supports it (gas extension).
-*/
-
-#ifdef ASMALIGN_BALIGN
-
-#define ALIGN4  .balign 4
-#define ALIGN8  .balign 8
-#define ALIGN16 .balign 16
-#define ALIGN32 .balign 32
-
-#else
-
 #ifdef ASMALIGN_EXP
 #define ALIGN4  .align 2
 #define ALIGN8  .align 3
 #define ALIGN16 .align 4
 #define ALIGN32 .align 5
 #else
-#ifdef ASMALIGN_BYTE
 #define ALIGN4  .align 4
 #define ALIGN8  .align 8
 #define ALIGN16 .align 16
 #define ALIGN32 .align 32
-#else
-#error "Dunno how assembler alignment works. Please specify."
-#endif
-#endif
-
 #endif
 
 #define MANGLE_MACROCAT_REALLY(a, b) a ## b
diff --git a/extensions/gdx-audio/jni/libmpg123/mpg123.h b/extensions/gdx-audio/jni/libmpg123/mpg123.h
index 6ace7ed..1b79b01 100644
--- a/extensions/gdx-audio/jni/libmpg123/mpg123.h
+++ b/extensions/gdx-audio/jni/libmpg123/mpg123.h
@@ -12,7 +12,7 @@
 
 /* A macro to check at compile time which set of API functions to expect.
    This should be incremented at least each time a new symbol is added to the header. */
-#define MPG123_API_VERSION @API_VERSION@
+#define MPG123_API_VERSION 33
 
 /* These aren't actually in use... seems to work without using libtool. */
 #ifdef BUILD_MPG123_DLL
@@ -138,7 +138,7 @@ EXPORT void mpg123_delete(mpg123_handle *mh);
 /** Enumeration of the parameters types that it is possible to set/get. */
 enum mpg123_parms
 {
-	MPG123_VERBOSE = 0,        /**< set verbosity value for enabling messages to stderr, >= 0 makes sense (integer) */
+	MPG123_VERBOSE,        /**< set verbosity value for enabling messages to stderr, >= 0 makes sense (integer) */
 	MPG123_FLAGS,          /**< set all flags, p.ex val = MPG123_GAPLESS|MPG123_MONO_MIX (integer) */
 	MPG123_ADD_FLAGS,      /**< add some flags (integer) */
 	MPG123_FORCE_RATE,     /**< when value > 0, force output rate to that value (integer) */
@@ -152,7 +152,7 @@ enum mpg123_parms
 	MPG123_OUTSCALE,       /**< the scale for output samples (amplitude - integer or float according to mpg123 output format, normally integer) */
 	MPG123_TIMEOUT,        /**< timeout for reading from a stream (not supported on win32, integer) */
 	MPG123_REMOVE_FLAGS,   /**< remove some flags (inverse of MPG123_ADD_FLAGS, integer) */
-	MPG123_RESYNC_LIMIT,   /**< Try resync on frame parsing for that many bytes or until end of stream (<0 ... integer). This can enlarge the limit for skipping junk on beginning, too (but not reduce it).  */
+	MPG123_RESYNC_LIMIT,   /**< Try resync on frame parsing for that many bytes or until end of stream (<0 ... integer). */
 	MPG123_INDEX_SIZE      /**< Set the frame index size (if supported). Values <0 mean that the index is allowed to grow dynamically in these steps (in positive direction, of course) -- Use this when you really want a full index with every individual frame. */
 	,MPG123_PREFRAMES /**< Decode/ignore that many frames in advance for layer 3. This is needed to fill bit reservoir after seeking, for example (but also at least one frame in advance is needed to have all "normal" data for layer 3). Give a positive integer value, please.*/
 	,MPG123_FEEDPOOL  /**< For feeder mode, keep that many buffers in a pool to avoid frequent malloc/free. The pool is allocated on mpg123_open_feed(). If you change this parameter afterwards, you can trigger growth and shrinkage during decoding. The default value could change any time. If you care about this, then set it. (integer) */
@@ -178,7 +178,6 @@ enum mpg123_param_flags
 	,MPG123_IGNORE_STREAMLENGTH = 0x1000 /**< 1000000000000 Ignore any stream length information contained in the stream, which can be contained in a 'TLEN' frame of an ID3v2 tag or a Xing tag */
 	,MPG123_SKIP_ID3V2 = 0x2000 /**< 10 0000 0000 0000 Do not parse ID3v2 tags, just skip them. */
 	,MPG123_IGNORE_INFOFRAME = 0x4000 /**< 100 0000 0000 0000 Do not parse the LAME/Xing info frame, treat it as normal MPEG data. */
-	,MPG123_AUTO_RESAMPLE = 0x8000 /**< 1000 0000 0000 0000 Allow automatic internal resampling of any kind (default on if supported). Especially when going lowlevel with replacing output buffer, you might want to unset this flag. Setting MPG123_DOWNSAMPLE or MPG123_FORCE_RATE will override this. */
 };
 
 /** choices for MPG123_RVA */
@@ -768,7 +767,6 @@ enum mpg123_state
 {
 	 MPG123_ACCURATE = 1 /**< Query if positons are currently accurate (integer value, 0 if false, 1 if true) */
 	,MPG123_BUFFERFILL   /**< Get fill of internal (feed) input buffer as integer byte count returned as long and as double. An error is returned on integer overflow while converting to (signed) long, but the returned floating point value shold still be fine. */
-	,MPG123_FRANKENSTEIN /**< Stream consists of carelessly stitched together files (the leading one featuring gapless info).  */
 };
 
 /** Get various current decoder/stream state information.
@@ -847,12 +845,6 @@ EXPORT int  mpg123_set_substring(mpg123_string *sb, const char *stuff, size_t fr
 */
 EXPORT size_t mpg123_strlen(mpg123_string *sb, int utf8);
 
-/** Remove trailing \r and \n, if present.
- *  \return 0 on error, 1 on success
- *  \param sb the string
- */
-EXPORT int mpg123_chomp_string(mpg123_string *sb);
-
 /** The mpg123 text encodings. This contains encodings we encounter in ID3 tags or ICY meta info. */
 enum mpg123_text_encoding
 {
@@ -958,9 +950,6 @@ typedef struct
    The check function returns a combination of flags. */
 EXPORT int mpg123_meta_check(mpg123_handle *mh); /* On error (no valid handle) just 0 is returned. */
 
-/** Clean up meta data storage (ID3v2 and ICY), freeing memory. */
-EXPORT void mpg123_meta_free(mpg123_handle *mh);
-
 /** Point v1 and v2 to existing data structures wich may change on any next read/decode function call.
  *  v1 and/or v2 can be set to NULL when there is no corresponding data.
  *  \return Return value is MPG123_OK or MPG123_ERR,  */
diff --git a/extensions/gdx-audio/jni/libmpg123/mpg123lib_intern.h b/extensions/gdx-audio/jni/libmpg123/mpg123lib_intern.h
index bb6a2c6..dc07ceb 100644
--- a/extensions/gdx-audio/jni/libmpg123/mpg123lib_intern.h
+++ b/extensions/gdx-audio/jni/libmpg123/mpg123lib_intern.h
@@ -285,7 +285,8 @@ static inline long scale_rounded(long x, int shift)
    now: factor on minimum frame buffer size (which takes upsampling into account) */
 #define		AUDIOBUFSIZE		2
 
-#include "true.h"
+#define FALSE 0
+#define TRUE  1
 
 #define         MAX_NAME_SIZE           81
 #define         SBLIMIT                 32
diff --git a/extensions/gdx-audio/jni/libmpg123/optimize.c b/extensions/gdx-audio/jni/libmpg123/optimize.c
index e3c651f..d5aae4c 100644
--- a/extensions/gdx-audio/jni/libmpg123/optimize.c
+++ b/extensions/gdx-audio/jni/libmpg123/optimize.c
@@ -513,8 +513,7 @@ int frame_cpu_opt(mpg123_handle *fr, const char* cpu)
 			fr->cpu_opts.type = dreidnowext;
 #ifdef OPT_MULTI
 #			ifndef NO_LAYER3
-/* The DCT36 is _bad_, at least compared to gcc 4.4-built C code. */
-/*			fr->cpu_opts.the_dct36 = dct36_3dnowext; */
+			fr->cpu_opts.the_dct36 = dct36_3dnowext;
 #			endif
 #endif
 #			ifndef NO_16BIT
@@ -531,8 +530,7 @@ int frame_cpu_opt(mpg123_handle *fr, const char* cpu)
 			fr->cpu_opts.type = dreidnow;
 #ifdef OPT_MULTI
 #			ifndef NO_LAYER3
-/* The DCT36 is _bad_, at least compared to gcc 4.4-built C code. */
-/*			fr->cpu_opts.the_dct36 = dct36_3dnow; */
+			fr->cpu_opts.the_dct36 = dct36_3dnow;
 #			endif
 #endif
 #			ifndef NO_16BIT
diff --git a/extensions/gdx-audio/jni/libmpg123/parse.c b/extensions/gdx-audio/jni/libmpg123/parse.c
index 97aa95e..0e981d9 100644
--- a/extensions/gdx-audio/jni/libmpg123/parse.c
+++ b/extensions/gdx-audio/jni/libmpg123/parse.c
@@ -1,7 +1,7 @@
 /*
 	parse: spawned from common; clustering around stream/frame parsing
 
-	copyright ?-2012 by the mpg123 project - free software under the terms of the LGPL 2.1
+	copyright ?-2009 by the mpg123 project - free software under the terms of the LGPL 2.1
 	see COPYING and AUTHORS files in distribution or http://mpg123.org
 	initially written by Michael Hipp & Thomas Orgis
 */
@@ -34,14 +34,12 @@
 
 #define bsbufid(fr) (fr)->bsbuf==(fr)->bsspace[0] ? 0 : ((fr)->bsbuf==fr->bsspace[1] ? 1 : ( (fr)->bsbuf==(fr)->bsspace[0]+512 ? 2 : ((fr)->bsbuf==fr->bsspace[1]+512 ? 3 : -1) ) )
 
-/* PARSE_GOOD and PARSE_BAD have to be 1 and 0 (TRUE and FALSE), others can vary. */
 enum parse_codes
 {
 	 PARSE_MORE = MPG123_NEED_MORE
 	,PARSE_ERR  = MPG123_ERR
-	,PARSE_END  = 10 /* No more audio data to find. */
+	,PARSE_END  = 0 /* No more audio data to find. */
 	,PARSE_GOOD = 1 /* Everything's fine. */
-	,PARSE_BAD  = 0 /* Not fine (invalid data). */
 	,PARSE_RESYNC = 2 /* Header not good, go into resync. */
 	,PARSE_AGAIN  = 3 /* Really start over, throw away and read a new header, again. */
 };
@@ -63,8 +61,8 @@ static const int tabsel_123[2][3][16] =
 
 static const long freqs[9] = { 44100, 48000, 32000, 22050, 24000, 16000 , 11025 , 12000 , 8000 };
 
-static int decode_header(mpg123_handle *fr,unsigned long newhead, int *freeformat_count);
-static int skip_junk(mpg123_handle *fr, unsigned long *newheadp, long *headcount);
+static int decode_header(mpg123_handle *fr,unsigned long newhead);
+static int skip_junk(mpg123_handle *fr, unsigned long *newheadp, int *headcount);
 static int do_readahead(mpg123_handle *fr, unsigned long newhead);
 static int wetwork(mpg123_handle *fr, unsigned long *newheadp);
 
@@ -120,6 +118,13 @@ static int check_lame_tag(mpg123_handle *fr)
 		I hope that ensuring all zeros until tag start is enough.
 	*/
 	int lame_offset = (fr->stereo == 2) ? (fr->lsf ? 17 : 32 ) : (fr->lsf ? 9 : 17);
+	/* At least skip the decoder delay. */
+#ifdef GAPLESS
+	if(fr->p.flags & MPG123_GAPLESS)
+	{
+		if(fr->begin_s == 0) frame_gapless_init(fr, GAPLESS_DELAY, 0);
+	}
+#endif
 
 	if(fr->p.flags & MPG123_IGNORE_INFOFRAME) return 0;
 
@@ -180,13 +185,23 @@ static int check_lame_tag(mpg123_handle *fr)
 					}
 					else
 					{
+						/*
+							In theory, one should use that value for skipping...
+							When I know the exact number of samples I could simply count in flush_output,
+							but that's problematic with seeking and such.
+							I still miss the real solution for detecting the end.
+						*/
 						fr->track_frames = (off_t) make_long(fr->bsbuf, lame_offset);
 						if(fr->track_frames > TRACK_MAX_FRAMES) fr->track_frames = 0; /* endless stream? */
-#ifdef GAPLESS
-						/* All or nothing: Only if encoder delay/padding is known we'll cut samples for gapless. */
+						#ifdef GAPLESS
+						/* if no further info there, remove/add at least the decoder delay */
 						if(fr->p.flags & MPG123_GAPLESS)
-						frame_gapless_init(fr, fr->track_frames, 0, 0);
-#endif
+						{
+							off_t length = fr->track_frames * spf(fr);
+							if(length > 1)
+							frame_gapless_init(fr, GAPLESS_DELAY, length+GAPLESS_DELAY);
+						}
+						#endif
 						if(VERBOSE3) fprintf(stderr, "Note: Xing: %lu frames\n", (long unsigned)fr->track_frames);
 					}
 
@@ -246,30 +261,15 @@ static int check_lame_tag(mpg123_handle *fr)
 					unsigned char lame_vbr;
 					float replay_gain[2] = {0,0};
 					float peak = 0;
-					float gain_offset = 0; /* going to be +6 for old lame that used 83dB */
+					/* float gain_offset = 0;  going to be +6 for old lame that used 83dB */
 					char nb[10];
 					memcpy(nb, fr->bsbuf+lame_offset, 9);
 					nb[9] = 0;
 					if(VERBOSE3) fprintf(stderr, "Note: Info: Encoder: %s\n", nb);
 					if(!strncmp("LAME", nb, 4))
 					{
-						/* Lame versions before 3.95.1 used 83 dB reference level, later versions 89 dB.
-						   We stick with 89 dB as being "normal", adding 6 dB. */
-						unsigned int major, minor;
-						char rest[6];
-						rest[0] = 0;
-						if(sscanf(nb+4, "%u.%u%s", &major, &minor, rest) >= 2)
-						{
-							debug3("LAME: %u/%u/%s", major, minor, rest);
-							/* We cannot detect LAME 3.95 reliably (same version string as 3.95.1), so this is a blind spot.
-							   Everything < 3.95 is safe, though. */
-							if(major < 3 || (major == 3 && minor < 95))  /* || (major == 3 && minor == 95 && rest[0] == 0)) */
-							{
-								gain_offset = 6;
-								if(VERBOSE3) fprintf(stderr, "Note: Info: Old LAME detected, using ReplayGain preamp of %f dB.\n", gain_offset);
-							}
-						}
-						else if(VERBOSE3) fprintf(stderr, "Note: Info: Cannot determine LAME version.\n");
+						/*gain_offset = 6;*/
+						warning("TODO: finish lame version detetcion...");
 					}
 					lame_offset += 9;
 					/* the 4 big bits are tag revision, the small bits vbr method */
@@ -329,10 +329,7 @@ static int check_lame_tag(mpg123_handle *fr)
 							else if(gt == 2) gt = 1; /* audiophile */
 							else continue;
 							/* get the 9 bits into a number, divide by 10, multiply sign... happy bit banging */
-							replay_gain[gt] = (float) ((fr->bsbuf[lame_offset] & 0x2) ? -0.1 : 0.1) * (make_short(fr->bsbuf, lame_offset) & 0x1ff);
-							/* If this is an automatic value from LAME (or whatever), the automatic gain offset applies.
-							   If a user or whoever set the value, do not touch it! 011 is automatic origin. */
-							if(origin == 3) replay_gain[gt] += gain_offset;
+							replay_gain[0] = (float) ((fr->bsbuf[lame_offset] & 0x2) ? -0.1 : 0.1) * (make_short(fr->bsbuf, lame_offset) & 0x1f);
 						}
 						lame_offset += 2;
 					}
@@ -365,9 +362,13 @@ static int check_lame_tag(mpg123_handle *fr)
 					#ifdef GAPLESS
 					if(fr->p.flags & MPG123_GAPLESS)
 					{
-						off_t skipbegin = ((((int) fr->bsbuf[lame_offset]) << 4) | (((int) fr->bsbuf[lame_offset+1]) >> 4));
-						off_t skipend = (((((int) fr->bsbuf[lame_offset+1]) << 8) | (((int) fr->bsbuf[lame_offset+2]))) & 0xfff);
-						frame_gapless_init(fr, fr->track_frames, skipbegin, skipend);
+						off_t length = fr->track_frames * spf(fr);
+						off_t skipbegin = GAPLESS_DELAY + ((((int) fr->bsbuf[lame_offset]) << 4) | (((int) fr->bsbuf[lame_offset+1]) >> 4));
+						off_t skipend = -GAPLESS_DELAY + (((((int) fr->bsbuf[lame_offset+1]) << 8) | (((int) fr->bsbuf[lame_offset+2]))) & 0xfff);
+						debug3("preparing gapless mode for layer3: length %lu, skipbegin %lu, skipend %lu", 
+								(long unsigned)length, (long unsigned)skipbegin, (long unsigned)skipend);
+						if(length > 1)
+						frame_gapless_init(fr, skipbegin, (skipend < length) ? length-skipend : length);
 					}
 					#endif
 				}
@@ -425,14 +426,13 @@ static int halfspeed_do(mpg123_handle *fr)
 /* 
 	Temporary macro until we got this worked out.
 	Idea is to filter out special return values that shall trigger direct jumps to end / resync / read again. 
-	Particularily, the generic ret==PARSE_BAD==0 and ret==PARSE_GOOD==1 are not affected.
+	Particularily, ret==PARSE_END==0 and ret==PARSE_GOOD==1 are not affected.
 */
 #define JUMP_CONCLUSION(ret) \
 { \
 if(ret < 0){ debug1("%s", ret == MPG123_NEED_MORE ? "need more" : "read error"); goto read_frame_bad; } \
 else if(ret == PARSE_AGAIN) goto read_again; \
 else if(ret == PARSE_RESYNC) goto init_resync; \
-else if(ret == PARSE_END) goto read_frame_bad; \
 }
 
 /*
@@ -442,7 +442,6 @@ else if(ret == PARSE_END) goto read_frame_bad; \
 int read_frame(mpg123_handle *fr)
 {
 	/* TODO: rework this thing */
-	int freeformat_count = 0;
 	unsigned long newhead;
 	off_t framepos;
 	int ret;
@@ -453,7 +452,7 @@ int read_frame(mpg123_handle *fr)
 	/* The counter for the search-first-header loop.
 	   It is persistent outside the loop to prevent seemingly endless loops
 	   when repeatedly headers are found that do not have valid followup headers. */
-	long headcount = 0;
+	int headcount = 0;
 
 	fr->fsizeold=fr->framesize;       /* for Layer3 */
 
@@ -465,7 +464,7 @@ read_again:
 	if(fr->rd->forget != NULL) fr->rd->forget(fr);
 
 	debug2("trying to get frame %"OFF_P" at %"OFF_P, (off_p)fr->num+1, (off_p)fr->rd->tell(fr));
-	if((ret = fr->rd->head_read(fr,&newhead)) <= 0){ debug1("need more? (%i)", ret); goto read_frame_bad;}
+	if((ret = fr->rd->head_read(fr,&newhead)) <= 0){ debug("need more?"); goto read_frame_bad;}
 
 init_resync:
 
@@ -492,23 +491,18 @@ init_resync:
 	}
 #endif
 
-	ret = head_check(newhead);
-	if(ret) ret = decode_header(fr, newhead, &freeformat_count);
-
-	JUMP_CONCLUSION(ret); /* That only continues for ret == PARSE_BAD or PARSE_GOOD. */
-	if(ret == PARSE_BAD)
+	ret = decode_header(fr, newhead);
+	JUMP_CONCLUSION(ret); /* That only continues for ret == 0 or 1 */
+	if(ret == 0)
 	{ /* Header was not good. */
 		ret = wetwork(fr, &newhead); /* Messy stuff, handle junk, resync ... */
 		JUMP_CONCLUSION(ret);
-		/* Normally, we jumped already. If for some reason everything's fine to continue, do continue. */
-		if(ret != PARSE_GOOD) goto read_frame_bad;
+		if(ret == 0) goto read_frame_bad;
 	}
 
 	if(!fr->firsthead)
 	{
 		ret = do_readahead(fr, newhead);
-		/* readahead can fail mit NEED_MORE, in which case we must also make the just read header available again for next go */
-		if(ret < 0) fr->rd->back_bytes(fr, 4);
 		JUMP_CONCLUSION(ret);
 	}
 
@@ -567,20 +561,6 @@ init_resync:
 	++fr->num; /* 0 for first frame! */
 	debug4("Frame %"OFF_P" %08lx %i, next filepos=%"OFF_P, 
 	(off_p)fr->num, newhead, fr->framesize, (off_p)fr->rd->tell(fr));
-	if(!(fr->state_flags & FRAME_FRANKENSTEIN) && (
-		(fr->track_frames > 0 && fr->num >= fr->track_frames)
-#ifdef GAPLESS
-		|| (fr->gapless_frames > 0 && fr->num >= fr->gapless_frames)
-#endif
-	))
-	{
-		fr->state_flags |= FRAME_FRANKENSTEIN;
-		if(NOQUIET) fprintf(stderr, "\nWarning: Encountered more data after announced end of track (frame %"OFF_P"/%"OFF_P"). Frankenstein!\n", (off_p)fr->num, 
-#ifdef GAPLESS
-		fr->gapless_frames > 0 ? (off_p)fr->gapless_frames : 
-#endif
-		(off_p)fr->track_frames);
-	}
 
 	halfspeed_prepare(fr);
 
@@ -589,7 +569,7 @@ init_resync:
 #ifdef FRAME_INDEX
 	/* Keep track of true frame positions in our frame index.
 	   but only do so when we are sure that the frame number is accurate... */
-	if((fr->state_flags & FRAME_ACCURATE) && FI_NEXT(fr->index, fr->num))
+	if(fr->accurate && FI_NEXT(fr->index, fr->num))
 	fi_add(&fr->index, framepos);
 #endif
 
@@ -600,11 +580,9 @@ init_resync:
 	fr->to_decode = fr->to_ignore = TRUE;
 	if(fr->error_protection) fr->crc = getbits(fr, 16); /* skip crc */
 
-	fr->oldhead = newhead;
-
 	return 1;
 read_frame_bad:
-	/* Also if we searched for valid data in vein, we can forget skipped data.
+	/* Also if we searched for valid data in vain, we can forget skipped data.
 	   Otherwise, the feeder would hold every dead old byte in memory until the first valid frame! */
 	if(fr->rd->forget != NULL) fr->rd->forget(fr);
 
@@ -620,9 +598,9 @@ read_frame_bad:
 /*
  * read ahead and find the next MPEG header, to guess framesize
  * return value: success code
- *  PARSE_GOOD: found a valid frame size (stored in the handle).
+ *  1: found a valid frame size (stored in the handle).
  * <0: error codes, possibly from feeder buffer (NEED_MORE)
- *  PARSE_BAD: cannot get the framesize for some reason and shall silentry try the next possible header (if this is no free format stream after all...)
+ *  0: cannot get the framesize for some reason and shall silentry try the next possible header (if this is no free format stream after all...)
  */
 static int guess_freeformat_framesize(mpg123_handle *fr)
 {
@@ -633,13 +611,14 @@ static int guess_freeformat_framesize(mpg123_handle *fr)
 	{
 		if(NOQUIET) error("Cannot look for freeformat frame size with non-seekable and non-buffered stream!");
 
-		return PARSE_BAD;
+		return 0;
 	}
 	if((ret=fr->rd->head_read(fr,&head))<=0)
 	return ret;
 
 	/* We are already 4 bytes into it */
-	for(i=4;i<MAXFRAMESIZE+4;i++)
+	/* Fix that limit to be absolute for the first header search! */
+	for(i=4;i<65536;i++)
 	{
 		if((ret=fr->rd->head_shift(fr,&head))<=0) return ret;
 
@@ -648,11 +627,11 @@ static int guess_freeformat_framesize(mpg123_handle *fr)
 		{
 			fr->rd->back_bytes(fr,i+1);
 			fr->framesize = i-3;
-			return PARSE_GOOD; /* Success! */
+			return 1; /* Success! */
 		}
 	}
 	fr->rd->back_bytes(fr,i);
-	return PARSE_BAD;
+	return 0;
 }
 
 
@@ -663,16 +642,15 @@ static int guess_freeformat_framesize(mpg123_handle *fr)
  *  1: success
  *  0: no valid header
  * <0: some error
- * You are required to do a head_check() before calling!
  */
-static int decode_header(mpg123_handle *fr,unsigned long newhead, int *freeformat_count)
+static int decode_header(mpg123_handle *fr,unsigned long newhead)
 {
-#ifdef DEBUG /* Do not waste cycles checking the header twice all the time. */
 	if(!head_check(newhead))
 	{
-		error1("trying to decode obviously invalid header 0x%08lx", newhead);
+		if(NOQUIET) error("tried to decode obviously invalid header");
+
+		return 0;
 	}
-#endif
 	if(HDR_VERSION_VAL(newhead) & 0x2)
 	{
 		fr->lsf = (HDR_VERSION_VAL(newhead) & 0x1) ? 0 : 1;
@@ -715,6 +693,8 @@ static int decode_header(mpg123_handle *fr,unsigned long newhead, int *freeforma
 
 	fr->stereo = (fr->mode == MPG_MD_MONO) ? 1 : 2;
 
+	fr->oldhead = newhead;
+	
 	/* we can't use tabsel_123 for freeformat, so trying to guess framesize... */
 	if(fr->freeformat)
 	{
@@ -722,14 +702,8 @@ static int decode_header(mpg123_handle *fr,unsigned long newhead, int *freeforma
 		if(fr->freeformat_framesize < 0)
 		{
 			int ret;
-			*freeformat_count += 1;
-			if(*freeformat_count > 5)
-			{
-				if(VERBOSE3) error("You fooled me too often. Refusing to guess free format frame size _again_.");
-				return PARSE_BAD;
-			}
 			ret = guess_freeformat_framesize(fr);
-			if(ret == PARSE_GOOD)
+			if(ret>0)
 			{
 				fr->freeformat_framesize = fr->framesize - fr->padding;
 				if(VERBOSE2)
@@ -739,9 +713,8 @@ static int decode_header(mpg123_handle *fr,unsigned long newhead, int *freeforma
 			{
 				if(ret == MPG123_NEED_MORE)
 				debug("Need more data to guess free format frame size.");
-				else if(VERBOSE3)
+				else
 				error("Encountered free format header, but failed to guess frame size.");
-
 				return ret;
 			}
 		}
@@ -799,15 +772,15 @@ static int decode_header(mpg123_handle *fr,unsigned long newhead, int *freeforma
 		default:
 			if(NOQUIET) error1("Layer type %i not supported in this build!", fr->lay); 
 
-			return PARSE_BAD;
+			return 0;
 	}
 	if (fr->framesize > MAXFRAMESIZE)
 	{
 		if(NOQUIET) error1("Frame size too big: %d", fr->framesize+4-fr->padding);
 
-		return PARSE_BAD;
+		return (0);
 	}
-	return PARSE_GOOD;
+	return 1;
 }
 
 void set_pointer(mpg123_handle *fr, long backstep)
@@ -1016,11 +989,9 @@ static int handle_id3v2(mpg123_handle *fr, unsigned long newhead)
 }
 
 /* watch out for junk/tags on beginning of stream by invalid header */
-static int skip_junk(mpg123_handle *fr, unsigned long *newheadp, long *headcount)
+static int skip_junk(mpg123_handle *fr, unsigned long *newheadp, int *headcount)
 {
 	int ret;
-	int freeformat_count = 0;
-	long limit = 65536;
 	unsigned long newhead = *newheadp;
 	/* check for id3v2; first three bytes (of 4) are "ID3" */
 	if((newhead & (unsigned long) 0xffffff00) == (unsigned long) 0x49443300)
@@ -1056,26 +1027,17 @@ static int skip_junk(mpg123_handle *fr, unsigned long *newheadp, long *headcount
 	debug("searching for header...");
 	*newheadp = 0; /* Invalidate the external value. */
 	ret = 0; /* We will check the value after the loop. */
-
-	/* We prepare for at least the 64K bytes as usual, unless
-	   user explicitly wanted more (even infinity). Never less. */
-	if(fr->p.resync_limit < 0 || fr->p.resync_limit > limit)
-	limit = fr->p.resync_limit;
-
-	do
+	for(; *headcount<65536; (*headcount)++)
 	{
-		++(*headcount);
-		if(limit >= 0 && *headcount >= limit) break;				
-
 		if((ret=fr->rd->head_shift(fr,&newhead))<=0) return ret;
 
-		if(head_check(newhead) && (ret=decode_header(fr, newhead, &freeformat_count))) break;
-	} while(1);
+		if(head_check(newhead) && (ret=decode_header(fr, newhead))) break;
+	}
 	if(ret<0) return ret;
 
-	if(limit >= 0 && *headcount >= limit)
+	if(*headcount == 65536)
 	{
-		if(NOQUIET) error1("Giving up searching valid MPEG header after %li bytes of junk.", *headcount);
+		if(NOQUIET) error("Giving up searching valid MPEG header after (over) 64K of junk.");
 		return PARSE_END;
 	}
 	else debug1("hopefully found one at %"OFF_P, (off_p)fr->rd->tell(fr));
@@ -1144,7 +1106,7 @@ static int wetwork(mpg123_handle *fr, unsigned long *newheadp)
 				*newheadp = newhead;
 				if(NOQUIET) fprintf (stderr, "Note: Hit end of (available) data during resync.\n");
 
-				return ret ? ret : PARSE_END;
+				return ret;
 			}
 			if(VERBOSE3) debug3("resync try %li at %"OFF_P", got newhead 0x%08lx", try, (off_p)fr->rd->tell(fr),  newhead);
 		} while(!head_check(newhead));
diff --git a/extensions/gdx-audio/jni/libmpg123/readers.c b/extensions/gdx-audio/jni/libmpg123/readers.c
index 4a1009d..a7d3d91 100644
--- a/extensions/gdx-audio/jni/libmpg123/readers.c
+++ b/extensions/gdx-audio/jni/libmpg123/readers.c
@@ -202,9 +202,6 @@ static ssize_t plain_fullread(mpg123_handle *fr,unsigned char *buf, ssize_t coun
 {
 	ssize_t ret,cnt=0;
 
-#ifdef EXTRA_DEBUG
-	debug1("plain fullread of %"SSIZE_P, (size_p)count);
-#endif
 	/*
 		There used to be a check for expected file end here (length value or ID3 flag).
 		This is not needed:
@@ -531,7 +528,6 @@ static struct buffy* bc_alloc(struct bufferchain *bc, size_t size)
 		buf->next = NULL; /* That shall be set to a sensible value later. */
 		buf->size = 0;
 		--bc->pool_fill;
-		debug2("bc_alloc: picked %p from pool (fill now %"SIZE_P")", buf, (size_p)bc->pool_fill);
 		return buf;
 	}
 	else return buffy_new(size, bc->bufblock);
@@ -617,7 +613,6 @@ static int bc_append(struct bufferchain *bc, ssize_t size)
 	else if(bc->first == NULL) bc->first = newbuf;
 
 	bc->last  = newbuf;
-	debug3("bc_append: new last buffer %p with %"SSIZE_P" B (really %"SSIZE_P")", bc->last, (ssize_p)bc->last->size, (ssize_p)bc->last->realsize);
 	return 0;
 }
 
@@ -637,7 +632,6 @@ static int bc_add(struct bufferchain *bc, const unsigned char *data, ssize_t siz
 			part = bc->last->realsize - bc->last->size;
 			if(part > size) part = size;
 
-			debug2("bc_add: adding %"SSIZE_P" B to existing block %p", (ssize_p)part, bc->last);
 			memcpy(bc->last->data+bc->last->size, data, part);
 			bc->last->size += part;
 			size -= part;
@@ -1044,10 +1038,8 @@ static int default_init(mpg123_handle *fr)
 
 	fr->rdat.read  = fr->rdat.r_read  != NULL ? fr->rdat.r_read  : posix_read;
 	fr->rdat.lseek = fr->rdat.r_lseek != NULL ? fr->rdat.r_lseek : posix_lseek;
-#ifndef NO_ICY
 	/* ICY streams of any sort shall not be seekable. */
 	if(fr->p.icy_interval > 0) fr->rdat.lseek = nix_lseek;
-#endif
 
 	fr->rdat.filelen = get_fileinfo(fr);
 	fr->rdat.filepos = 0;
@@ -1101,7 +1093,6 @@ static int default_init(mpg123_handle *fr)
 
 void open_bad(mpg123_handle *mh)
 {
-	debug("open_bad");
 #ifndef NO_ICY
 	clear_icy(&mh->icy);
 #endif
@@ -1110,7 +1101,6 @@ void open_bad(mpg123_handle *mh)
 #ifndef NO_FEEDER
 	bc_init(&mh->rdat.buffer);
 #endif
-	mh->rdat.filelen = -1;
 }
 
 int open_feed(mpg123_handle *fr)
@@ -1133,8 +1123,6 @@ int open_feed(mpg123_handle *fr)
 	fr->rd = &readers[READER_FEED];
 	fr->rdat.flags = 0;
 	if(fr->rd->init(fr) < 0) return -1;
-
-	debug("feed reader init successful");
 	return 0;
 #endif /* NO_FEEDER */
 }
diff --git a/extensions/gdx-audio/jni/libmpg123/sample.h b/extensions/gdx-audio/jni/libmpg123/sample.h
index d021b89..08df28b 100644
--- a/extensions/gdx-audio/jni/libmpg123/sample.h
+++ b/extensions/gdx-audio/jni/libmpg123/sample.h
@@ -88,32 +88,12 @@ static inline short ftoi16(float x)
 /* The actual storage of a decoded sample is separated in the following macros.
    We can handle different types, we could also handle dithering here. */
 
-#ifdef NEWOLD_WRITE_SAMPLE
-
-/* This is the old new mpg123 WRITE_SAMPLE, fixed for newer GCC by MPlayer folks.
-   Makes a huge difference on old machines. */
-#if WORDS_BIGENDIAN 
-#define MANTISSA_OFFSET 1
-#else
-#define MANTISSA_OFFSET 0
-#endif
-#define WRITE_SHORT_SAMPLE(samples,sum,clip) { \
-  union { double dtemp; int itemp[2]; } u; int v; \
-  u.dtemp = ((((65536.0 * 65536.0 * 16)+(65536.0 * 0.5))* 65536.0)) + (sum);\
-  v = u.itemp[MANTISSA_OFFSET] - 0x80000000; \
-  if( v > 32767) { *(samples) = 0x7fff; (clip)++; } \
-  else if( v < -32768) { *(samples) = -0x8000; (clip)++; } \
-  else { *(samples) = v; }  \
-}
-
-#else
 /* Macro to produce a short (signed 16bit) output sample from internal representation,
    which may be float, double or indeed some integer for fixed point handling. */
 #define WRITE_SHORT_SAMPLE(samples,sum,clip) \
   if( (sum) > REAL_PLUS_32767) { *(samples) = 0x7fff; (clip)++; } \
   else if( (sum) < REAL_MINUS_32768) { *(samples) = -0x8000; (clip)++; } \
   else { *(samples) = REAL_TO_SHORT(sum); }
-#endif
 
 /* Same as above, but always using accurate rounding. Would we want softer clipping here, too? */
 #define WRITE_SHORT_SAMPLE_ACCURATE(samples,sum,clip) \
diff --git a/extensions/gdx-audio/jni/libmpg123/stringbuf.c b/extensions/gdx-audio/jni/libmpg123/stringbuf.c
index ed644c9..40d0d4e 100644
--- a/extensions/gdx-audio/jni/libmpg123/stringbuf.c
+++ b/extensions/gdx-audio/jni/libmpg123/stringbuf.c
@@ -161,23 +161,3 @@ size_t attribute_align_arg mpg123_strlen(mpg123_string *sb, int utf8)
 		return len;
 	}
 }
-
-int attribute_align_arg mpg123_chomp_string(mpg123_string *sb)
-{
-	ssize_t i;
-	if(!sb) return 0;
-
-	for(i=sb->fill-1; --i; i>0)
-	{
-		char *c = sb->p+i;
-		/* Stop at the first proper character. */
-		if(*c && *c != '\r' && *c != '\n') break;
-		else
-		{
-			*c = 0;
-			--sb->fill;
-		}
-	}
-
-	return 1;
-}
diff --git a/extensions/gdx-audio/jni/libmpg123/synth_neon.S b/extensions/gdx-audio/jni/libmpg123/synth_neon.S
index 604e866..d37db7c 100644
--- a/extensions/gdx-audio/jni/libmpg123/synth_neon.S
+++ b/extensions/gdx-audio/jni/libmpg123/synth_neon.S
@@ -19,7 +19,6 @@
 
 	.text
 	.globl ASM_NAME(synth_1to1_neon_asm)
-	ALIGN4
 ASM_NAME(synth_1to1_neon_asm):
 	push		{r4-r5, lr}
 	vpush		{q4-q7}
diff --git a/extensions/gdx-audio/jni/libmpg123/synth_neon_float.S b/extensions/gdx-audio/jni/libmpg123/synth_neon_float.S
index 278246e..fb43d9b 100644
--- a/extensions/gdx-audio/jni/libmpg123/synth_neon_float.S
+++ b/extensions/gdx-audio/jni/libmpg123/synth_neon_float.S
@@ -19,7 +19,6 @@
 
 	.text
 	.globl ASM_NAME(synth_1to1_real_neon_asm)
-	ALIGN4
 ASM_NAME(synth_1to1_real_neon_asm):
 	push		{r4-r5, lr}
 	vpush		{q4-q7}
diff --git a/extensions/gdx-audio/jni/libmpg123/synth_neon_s32.S b/extensions/gdx-audio/jni/libmpg123/synth_neon_s32.S
index a3e6ea9..bd88b61 100644
--- a/extensions/gdx-audio/jni/libmpg123/synth_neon_s32.S
+++ b/extensions/gdx-audio/jni/libmpg123/synth_neon_s32.S
@@ -19,7 +19,6 @@
 
 	.text
 	.globl ASM_NAME(synth_1to1_s32_neon_asm)
-	ALIGN4
 ASM_NAME(synth_1to1_s32_neon_asm):
 	push		{r4-r6, lr}
 	vpush		{q4-q7}
diff --git a/extensions/gdx-audio/jni/libmpg123/synth_stereo_neon.S b/extensions/gdx-audio/jni/libmpg123/synth_stereo_neon.S
index 6253891..96938d9 100644
--- a/extensions/gdx-audio/jni/libmpg123/synth_stereo_neon.S
+++ b/extensions/gdx-audio/jni/libmpg123/synth_stereo_neon.S
@@ -20,7 +20,6 @@
 
 	.text
 	.globl ASM_NAME(synth_1to1_s_neon_asm)
-	ALIGN4
 ASM_NAME(synth_1to1_s_neon_asm):
 	push		{r4-r6, lr}
 	vpush		{q4-q7}
diff --git a/extensions/gdx-audio/jni/libmpg123/synth_stereo_neon_float.S b/extensions/gdx-audio/jni/libmpg123/synth_stereo_neon_float.S
index 37509d4..63dbde7 100644
--- a/extensions/gdx-audio/jni/libmpg123/synth_stereo_neon_float.S
+++ b/extensions/gdx-audio/jni/libmpg123/synth_stereo_neon_float.S
@@ -20,7 +20,6 @@
 
 	.text
 	.globl ASM_NAME(synth_1to1_real_s_neon_asm)
-	ALIGN4
 ASM_NAME(synth_1to1_real_s_neon_asm):
 	push		{r4-r6, lr}
 	vpush		{q4-q7}
diff --git a/extensions/gdx-audio/jni/libmpg123/synth_stereo_neon_s32.S b/extensions/gdx-audio/jni/libmpg123/synth_stereo_neon_s32.S
index bb3d4ef..98a2c01 100644
--- a/extensions/gdx-audio/jni/libmpg123/synth_stereo_neon_s32.S
+++ b/extensions/gdx-audio/jni/libmpg123/synth_stereo_neon_s32.S
@@ -20,7 +20,6 @@
 
 	.text
 	.globl ASM_NAME(synth_1to1_s32_s_neon_asm)
-	ALIGN4
 ASM_NAME(synth_1to1_s32_s_neon_asm):
 	push		{r4-r7, lr}
 	vpush		{q4-q7}
diff --git a/extensions/gdx-audio/jni/libmpg123/system.c b/extensions/gdx-audio/jni/libmpg123/system.c
new file mode 100644
index 0000000..37cbfce
--- /dev/null
+++ b/extensions/gdx-audio/jni/libmpg123/system.c
@@ -0,0 +1,496 @@
+/* This is broken/outdated code for quite some time; we should drop it or integrate into libmpg123. */
+/*
+	system.c: system stream decoder (standalone)
+
+	copyright 1997-2008 by the mpg123 project - free software under the terms of the LGPL 2.1
+	see COPYING and AUTHORS files in distribution or http://mpg123.org
+	initially written by Michael Hipp
+
+	grabs an audio stream inside a video/audio system stream
+	This Program outputs only the first audio stream to STDOUT
+
+	currently this is an external program. You must pipe
+	your streams file to this program and the output to 
+	the mpg123 player.  e.g: 
+	./system < my_system_stream.mpg | mpg123 -
+*/
+
+#include <stdlib.h>
+#include <stdio.h>
+#include <errno.h>
+
+#include "mpg123app.h" <<<--- nope!
+#include "debug.h"
+
+static int filept;
+static int verbose = 1;
+
+#define PACKET_START		0x000001ba
+#define STREAM_END		0x000001b9
+#define SYSTEM_STREAM		0x000001bb
+
+/* the following two types are not supported */
+#define AUDIO_STREAM		0x000001b8
+#define VIDEO_STREAM		0x000001b9
+
+#define PADDING_STREAM		0x000001be
+#define RESERVED_STREAM		0x000001bc
+#define PRIVATE_STREAM_1	0x000001bd
+#define PRIVATE_STREAM_2	0x000001bf
+
+static int system_back_frame(mpg123_handle *fr,int num);
+static int system_head_read(unsigned char *hbuf,unsigned long *newhead);
+static int system_head_shift(unsigned char *hbuf,unsigned long *head);
+static int system_skip_bytes(int len);
+static int system_read_frame_body(int size);
+static long system_tell(void);
+
+struct system_info {
+	unsigned long rate;
+	int num_audio;
+	int num_video;
+	int fixed;
+	int csps;
+	int audio_lock;
+	int video_lock;
+};
+
+struct stream_info {
+	int id;
+	int id1;
+	int type;
+	int size;
+	int scale;
+};
+
+struct packet_info {
+  int scale;
+  int size;
+  unsigned long dts;
+  unsigned long pts;
+};
+
+struct system_info sys_info;
+struct stream_info str_info[64];
+
+static int my_read(int f,char *buf,int len)
+{
+	int len1 = 0;
+	int ret;
+
+	while(len1 < len) {
+		ret = read(f,buf+len1,len-len1);
+		if(ret < 0)
+			return -1;
+		len1 += ret;
+	}
+	return len;
+}
+
+static int system_raw_read_head(int f,unsigned long *head)
+{
+	unsigned char buf[4];
+	if(my_read(f,buf,4) != 4) {
+		perror("read_head");
+                return -1;
+        }
+	*head = (buf[0]<<24) + (buf[1]<<16) + (buf[2]<<8) + buf[3];
+
+	if(verbose > 1)
+		fprintf(stderr,"head: %08lx\n",*head);
+	return 0;
+}
+
+static int system_raw_read_word(int f,int *word)
+{
+        unsigned char buf[2];
+
+        if(my_read(f,buf,2) != 2) {
+		perror("read_word");
+                return -1;
+        }
+        *word = (buf[0]<<8) + buf[1];
+        return 0;
+}
+
+static int system_raw_read(int f,int len,unsigned char *buf)
+{
+	
+	if(my_read(f,buf,len) != len)
+              return -1;
+        return 0;
+}
+
+static int system_raw_skip(int f,int len)
+{
+	int ret;
+	int cnt = 0;
+
+	ret = lseek(f,len,SEEK_CUR);
+
+	if(ret < 0 && errno == ESPIPE) {
+		cnt = len;
+		while(cnt) {
+                        char buf[1024];
+			if(cnt > 1024)
+                           ret = read(f,buf,1024);
+                        else
+                           ret = read(f,buf,cnt);
+                        if(ret < 0)
+                           return -1;
+                        cnt -= ret;
+		}
+                ret = len;
+	}
+
+        return ret;
+}
+
+static unsigned long system_raw_timer_value(unsigned char *buf)
+{
+	unsigned long val;
+
+	if(!(buf[0] & 0x1) || !(buf[2] & 0x1) || !(buf[4] & 0x1)) {
+		if(verbose)
+			fprintf(stderr,"Warning: missing marker in time stamp!\n");
+	}
+
+	val  = (buf[0] & 0xe) << (29-1);
+        val |= buf[1] << 21;
+        val |= (buf[2] & 0xfe) << (14-1);
+        val |= buf[3] << 7;
+        val |= buf[4] >> 1;
+
+	return val;
+}
+
+static int system_raw_read_packet_data(int fd,struct packet_info *pi)
+{
+    static unsigned char buf[16384];
+    int len;
+    int pos = 0;
+    int i;
+
+    if(system_raw_read_word(filept,&len) < 0)
+        return -1;
+    if(verbose > 1)
+    	fprintf(stderr,"Stream video/audio len: %d\n",len);
+
+    if(system_raw_read(fd,len,buf) < 0)
+      return -1;
+
+    for(i=0;i<16;i++,pos++) {
+       if(buf[pos] != 0xff)
+         break;
+    }
+    if(i == 16) {
+       fprintf(stderr,"Ouch ... too many stuffing bytes!\n");
+       return -1;
+    }
+    
+    if( (buf[pos] & 0xc0) == 0x40 ) {
+       pi->scale = (buf[pos] >> 5) & 0x1;
+       pi->size  = (buf[pos] & 0x1f) << 8;
+       pi->size |= buf[pos+1];
+       pos += 2;
+    }
+
+    switch( buf[pos] & 0xf0) {
+      case 0x00:
+        if(buf[pos] != 0x0f) {
+          fprintf(stderr,"Ouch ... illegal timer code!\n");
+          return -1;
+        }
+        pos++;
+        break;
+      case 0x20:
+        pi->pts = system_raw_timer_value(buf+pos);
+        pos += 5;
+        break;
+      case 0x30:
+        pi->pts = system_raw_timer_value(buf+pos);
+        pos += 5;
+        if( (buf[pos] & 0xf) != 0x10) {
+          if(verbose)
+          	fprintf(stderr,"DTS should start with 0x1x!\n");
+	}
+        pi->dts = system_raw_timer_value(buf+pos);
+        pos += 5;
+        break;
+      default:
+	if(verbose)
+        	fprintf(stderr,"Ouch ... illegal timer code!\n");
+        return -1;
+ 
+    }
+
+
+#if 1 
+	write(1,buf+pos,len-pos);
+#endif
+
+	return 0;
+}
+
+
+static int system_raw_read_packet_info(int f,double *clock,unsigned long *rate)
+{
+	unsigned char buf[8];
+	int i;
+
+	if(my_read(f,buf,8) != 8) {
+		perror("read_packet_info");
+		return -1;
+	}
+
+	*clock = 0.0;
+	for(i=0;i<5;i++) {
+		*clock *= 256.0;
+		*clock += (double) buf[4-i];
+	}
+	*rate = (buf[5]<<16) + (buf[6]<<8) + buf[7];
+	return 0;
+}
+
+static int system_raw_read_system_header(int f,struct system_info *ssi) 
+{
+	int rlen,len;
+	unsigned char buf[6+48*3];
+	int i,cnt;
+
+	if(system_raw_read_word(filept,&len) < 0)
+		return -1;
+
+	if(verbose > 1)
+		fprintf(stderr,"system len: %d\n",len);
+
+	rlen = len;
+	if(len > 6 + 48 * 3) {
+		if(verbose)
+			fprintf(stderr,"Oops .. large System header!\n");
+		rlen = 6+48*3;
+	}
+	if(my_read(f,buf,rlen) != rlen) {
+		perror("raw_read_system_header");
+		return -1;
+	}
+
+	if(len - rlen) {
+		if(system_raw_skip(filept,len-rlen) < 0)
+			return -1;
+	}
+
+	if(buf[5] != 0xff) {
+		if(verbose)
+			fprintf(stderr,"Warning: buf[5] !=0xff \n");
+	}
+
+	ssi->rate = (buf[0]<<16)+(buf[1]<<8)+buf[2];
+	if( (ssi->rate & 0x800001) != 0x800001) {
+		if(verbose)
+			fprintf(stderr,"System Header Byte 0: Missing bits\n");
+		return -1;
+	}
+	ssi->rate >>= 1;
+	ssi->rate &= 0x7fffff;
+
+	ssi->num_audio = buf[3] >> 2;
+	ssi->num_video = buf[4] & 0x1f;
+	ssi->fixed = buf[3] & 0x2;
+	ssi->csps  = buf[3] & 0x1;
+	ssi->audio_lock = buf[4] & 0x80;
+	ssi->video_lock = buf[4] & 0x40;
+
+	if(verbose)
+		fprintf(stderr,"Audio: %d Video: %d, Lock: %d/%d, fixed: %d, csps: %d\n",
+	ssi->num_audio,ssi->num_video,ssi->audio_lock?1:0,ssi->video_lock?1:0,
+	ssi->fixed?1:0,ssi->csps?1:0);
+
+	i = 6;
+	cnt = 0;
+	while( i < rlen ) {
+		if( !(buf[i] & 0x80) || ((buf[i+1] & 0xc0) != 0xc0) ) {
+			fprintf(stderr,"system_raw_read_system_header byte %d,%d: bits not set!\n",i,i+1);
+			return -1;
+		}
+		str_info[cnt].id = buf[i];
+		if( (str_info[cnt].id & 0xe0) == 0xc0 ) {
+			str_info[cnt].type = 'A';
+			str_info[cnt].id1 = str_info[cnt].id & 0x1f;
+		}
+		else if((str_info[cnt].id & 0xf0) == 0xe0 ) {
+			str_info[cnt].type = 'V';
+			str_info[cnt].id1 = str_info[cnt].id & 0x0f;
+		}
+		else {
+			str_info[cnt].type = 'R';
+			str_info[cnt].id1 = str_info[cnt].id & 0x3f;
+		}
+		str_info[cnt].scale = buf[i+1] & 0x20;
+		str_info[cnt].size = ((buf[i+1] & 0x1f)<<8)+buf[i+2];
+		i += 3;
+
+		if(verbose)
+			fprintf(stderr,"ID: %#02x=%c%d, scale: %d, size %d\n",
+				str_info[cnt].id,str_info[cnt].type,str_info[cnt].id1,str_info[cnt].scale?1:0,str_info[cnt].size);
+	}
+
+	return 0;
+}
+
+/***************************************************
+ * init system layer read functions 
+ */
+int system_init(struct reader *r)
+{
+	unsigned long head;
+	double clk;
+	unsigned long rate;
+	int len;
+	int err;
+
+	r->back_frame = NULL;
+	r->head_read = system_head_read;
+	r->head_shift = system_head_shift;
+	r->skip_bytes = system_skip_bytes;
+	r->read_frame_body = system_read_frame_body;
+	r->tell = system_tell;
+
+	if(system_raw_read_head(filept,&head) < 0)
+		return -1;
+	if(head != PACKET_START) {
+		fprintf(stderr,"No PACKET_START found!\n");
+		return -1;
+	}
+	if(system_raw_read_packet_info(filept,&clk,&rate) < 0)
+		return -1;
+
+	err = 0;
+	while(err == 0) {
+		if(system_raw_read_head(filept,&head) < 0)
+			return -1;
+		if((head & 0xffffff00) != 0x00000100)
+			return -1;
+	
+		switch(head) {
+			case PACKET_START:
+				if(system_raw_read_packet_info(filept,&clk,&rate))
+					return -1;
+				if(verbose > 1)
+					fprintf(stderr,"Packet Start\n");
+				break;
+			case STREAM_END:
+				if(verbose)
+					fprintf(stderr,"Stream End\n");
+				break;
+			case SYSTEM_STREAM:
+				if(system_raw_read_system_header(filept,&sys_info) < 0)
+					return -1; 
+				break;
+#if 0
+			case AUDIO_STREAM:
+				if(system_raw_read_word(filept,&len) < 0)
+					return -1;
+				if(verbose > 1)
+					fprintf(stderr,"STD audio len: %d\n",len);
+				if(system_raw_skip(filept,len) < 0)
+					return -1;
+				break;
+			case VIDEO_STREAM:
+				if(system_raw_read_word(filept,&len) < 0)
+					return -1;
+				if(verbose > 1)
+					fprintf(stderr,"STD video len: %d\n",len);
+				if(system_raw_skip(filept,len) < 0)
+					return -1;
+				break;
+#endif
+			default:
+				if(head >= 0x000001c0 && head < 0x000001f0) {
+
+					if(verbose > 1)
+						fprintf(stderr,"Stream ID %ld\n",head - 0x000001c0);
+
+					if( (head - 0x000001c0) == 0x0) {
+						struct packet_info pi;
+						if(system_raw_read_packet_data(filept,&pi) < 0 )
+							return -1;
+					}
+					else {
+						if(system_raw_read_word(filept,&len) < 0)
+							return -1;
+
+						if(system_raw_skip(filept,len) < 0)
+							return -1;
+					}
+				
+					break;
+				}
+				else if(head >= 0x000001bd && head < 0x000001c0) {
+					if(system_raw_read_word(filept,&len) < 0)
+						return -1;
+					if(system_raw_skip(filept,len) < 0)
+						return -1;
+					break;
+				}
+				else {
+					if(verbose)
+						fprintf(stderr,"unsupported head %8lx\n",head);
+					if(system_raw_read_word(filept,&len) < 0)
+						return -1;
+					if(verbose)
+						fprintf(stderr,"Skipping: %d bytes\n",len);
+					if(system_raw_skip(filept,len) < 0)
+						return -1;
+					break;
+				}
+				err = 1;
+				break;
+		}
+	}
+
+	return 0;
+}
+
+static int system_back_frame(mpg123_handle *fr,int num)
+{
+	return 0;
+}
+
+static int system_head_read(unsigned char *hbuf,unsigned long *newhead)
+{
+	return 0;
+
+}
+
+static int system_head_shift(unsigned char *hbuf,unsigned long *head)
+{
+	return 0;
+}
+
+static int system_skip_bytes(int len)
+{
+	return 0;
+}
+
+static int system_read_frame_body(int size)
+{
+	return 0;
+}
+
+static long system_tell(void)
+{
+	return 0;
+}
+
+struct reader rd1;
+
+void main(void)
+{
+	int ret;
+	filept = 0;
+	ret = system_init(&rd1);
+	fprintf(stderr,"ret: %d\n",ret);
+	return ret;
+}
+
diff --git a/extensions/gdx-audio/jni/libmpg123/tabinit_mmx.S b/extensions/gdx-audio/jni/libmpg123/tabinit_mmx.S
index 9ebab87..2e99683 100644
--- a/extensions/gdx-audio/jni/libmpg123/tabinit_mmx.S
+++ b/extensions/gdx-audio/jni/libmpg123/tabinit_mmx.S
@@ -45,39 +45,39 @@ ASM_NAME(costab_mmxsse):
 	.long 1060439283
 	ALIGN32
 intwinbase:
-	.short      0,    -1,    -1,    -1,    -1,    -1,    -1,    -2
-	.short     -2,    -2,    -2,    -3,    -3,    -4,    -4,    -5
-	.short     -5,    -6,    -7,    -7,    -8,    -9,   -10,   -11
-	.short    -13,   -14,   -16,   -17,   -19,   -21,   -24,   -26
-	.short    -29,   -31,   -35,   -38,   -41,   -45,   -49,   -53
-	.short    -58,   -63,   -68,   -73,   -79,   -85,   -91,   -97
-	.short   -104,  -111,  -117,  -125,  -132,  -139,  -147,  -154
-	.short   -161,  -169,  -176,  -183,  -190,  -196,  -202,  -208
-	.short   -213,  -218,  -222,  -225,  -227,  -228,  -228,  -227
-	.short   -224,  -221,  -215,  -208,  -200,  -189,  -177,  -163
-	.short   -146,  -127,  -106,   -83,   -57,   -29,     2,    36
-	.short     72,   111,   153,   197,   244,   294,   347,   401
-	.short    459,   519,   581,   645,   711,   779,   848,   919
-	.short    991,  1064,  1137,  1210,  1283,  1356,  1428,  1498
-	.short   1567,  1634,  1698,  1759,  1817,  1870,  1919,  1962
-	.short   2001,  2032,  2057,  2075,  2085,  2087,  2080,  2063
-	.short   2037,  2000,  1952,  1893,  1822,  1739,  1644,  1535
-	.short   1414,  1280,  1131,   970,   794,   605,   402,   185
-	.short    -45,  -288,  -545,  -814, -1095, -1388, -1692, -2006
-	.short  -2330, -2663, -3004, -3351, -3705, -4063, -4425, -4788
-	.short  -5153, -5517, -5879, -6237, -6589, -6935, -7271, -7597
-	.short  -7910, -8209, -8491, -8755, -8998, -9219, -9416, -9585
-	.short  -9727, -9838, -9916, -9959, -9966, -9935, -9863, -9750
-	.short  -9592, -9389, -9139, -8840, -8492, -8092, -7640, -7134
-	.short  -6574, -5959, -5288, -4561, -3776, -2935, -2037, -1082
-	.short    -70,   998,  2122,  3300,  4533,  5818,  7154,  8540
-	.short   9975, 11455, 12980, 14548, 16155, 17799, 19478, 21189
-	.short  22929, 24694, 26482, 28289, 30112, 31947,-26209,-24360
-	.short -22511,-20664,-18824,-16994,-15179,-13383,-11610, -9863
-	.short  -8147, -6466, -4822, -3222, -1667,  -162,  1289,  2684
-	.short   4019,  5290,  6494,  7629,  8692,  9679, 10590, 11420
-	.short  12169, 12835, 13415, 13908, 14313, 14630, 14856, 14992
-	.short  15038
+	.value      0,    -1,    -1,    -1,    -1,    -1,    -1,    -2
+	.value     -2,    -2,    -2,    -3,    -3,    -4,    -4,    -5
+	.value     -5,    -6,    -7,    -7,    -8,    -9,   -10,   -11
+	.value    -13,   -14,   -16,   -17,   -19,   -21,   -24,   -26
+	.value    -29,   -31,   -35,   -38,   -41,   -45,   -49,   -53
+	.value    -58,   -63,   -68,   -73,   -79,   -85,   -91,   -97
+	.value   -104,  -111,  -117,  -125,  -132,  -139,  -147,  -154
+	.value   -161,  -169,  -176,  -183,  -190,  -196,  -202,  -208
+	.value   -213,  -218,  -222,  -225,  -227,  -228,  -228,  -227
+	.value   -224,  -221,  -215,  -208,  -200,  -189,  -177,  -163
+	.value   -146,  -127,  -106,   -83,   -57,   -29,     2,    36
+	.value     72,   111,   153,   197,   244,   294,   347,   401
+	.value    459,   519,   581,   645,   711,   779,   848,   919
+	.value    991,  1064,  1137,  1210,  1283,  1356,  1428,  1498
+	.value   1567,  1634,  1698,  1759,  1817,  1870,  1919,  1962
+	.value   2001,  2032,  2057,  2075,  2085,  2087,  2080,  2063
+	.value   2037,  2000,  1952,  1893,  1822,  1739,  1644,  1535
+	.value   1414,  1280,  1131,   970,   794,   605,   402,   185
+	.value    -45,  -288,  -545,  -814, -1095, -1388, -1692, -2006
+	.value  -2330, -2663, -3004, -3351, -3705, -4063, -4425, -4788
+	.value  -5153, -5517, -5879, -6237, -6589, -6935, -7271, -7597
+	.value  -7910, -8209, -8491, -8755, -8998, -9219, -9416, -9585
+	.value  -9727, -9838, -9916, -9959, -9966, -9935, -9863, -9750
+	.value  -9592, -9389, -9139, -8840, -8492, -8092, -7640, -7134
+	.value  -6574, -5959, -5288, -4561, -3776, -2935, -2037, -1082
+	.value    -70,   998,  2122,  3300,  4533,  5818,  7154,  8540
+	.value   9975, 11455, 12980, 14548, 16155, 17799, 19478, 21189
+	.value  22929, 24694, 26482, 28289, 30112, 31947,-26209,-24360
+	.value -22511,-20664,-18824,-16994,-15179,-13383,-11610, -9863
+	.value  -8147, -6466, -4822, -3222, -1667,  -162,  1289,  2684
+	.value   4019,  5290,  6494,  7629,  8692,  9679, 10590, 11420
+	.value  12169, 12835, 13415, 13908, 14313, 14630, 14856, 14992
+	.value  15038
 
 intwindiv:
 	.long 0x47800000			# 65536.0
@@ -119,11 +119,11 @@ ASM_NAME(make_decode_tables_mmx_asm):
 /* stack: 20=scaleval 24=decwin_mmx, 28=decwins */
 .L02:
 	leal -1(%esi),%edx
-	andl %ebx,%edx
-	cmpl $31,%edx
+	and %ebx,%edx
+	cmp $31,%edx
 	jnz .L03
 	addl $-1023,%ecx
-	testl %esi,%ebx
+	test %esi,%ebx
 	jz  .L03
 	negl 20(%esp)
 .L03:
@@ -132,7 +132,7 @@ ASM_NAME(make_decode_tables_mmx_asm):
 	incl %ebx
 	cmpl $intwinbase,%edi
 	jz .L04
-	cmpl $256,%ebx
+	cmp $256,%ebx
 	jnz .L00
 	negl (%esp)
 	jmp .L00
@@ -182,11 +182,11 @@ ASM_NAME(make_decode_tables_mmx_asm):
 	popl %ebx /* that has to match the pushl before */
 .L11:
 	leal -1(%esi),%edx
-	andl %ebx,%edx
-	cmpl $31,%edx
+	and %ebx,%edx
+	cmp $31,%edx
 	jnz .L12
 	addl $-1023,%ecx
-	testl %esi,%ebx
+	test %esi,%ebx
 	jz  .L12
 	negl 20(%esp)
 .L12:
@@ -195,7 +195,7 @@ ASM_NAME(make_decode_tables_mmx_asm):
 	incl %ebx
 	cmpl $intwinbase,%edi
 	jz .L13
-	cmpl $256,%ebx
+	cmp $256,%ebx
 	jnz .L05
 	negl (%esp)
 	jmp .L05
diff --git a/extensions/gdx-audio/jni/libmpg123/testcpu.c b/extensions/gdx-audio/jni/libmpg123/testcpu.c
deleted file mode 100644
index bacd6c1..0000000
--- a/extensions/gdx-audio/jni/libmpg123/testcpu.c
+++ /dev/null
@@ -1,35 +0,0 @@
-/*
-	testcpu: standalone CPU flags tester
-
-	copyright 2007 by the mpg123 project - free software under the terms of the LGPL 2.1
-	see COPYING and AUTHORS files in distribution or http://mpg123.org
-	initially written by Thomas Orgis
-*/
-
-#include <stdio.h>
-#include "getcpuflags.h"
-
-int main()
-{
-	int family;
-	struct cpuflags flags;
-	if(!getcpuflags(&flags)){ printf("CPU won't do cpuid (some old i386 or i486)\n"); return 0; }
-	family = (flags.id & 0xf00)>>8;
-	printf("family: %i\n", family);
-	printf("stdcpuflags:  0x%08x\n", flags.std);
-	printf("std2cpuflags: 0x%08x\n", flags.std2);
-	printf("extcpuflags:  0x%08x\n", flags.ext);
-	if(cpu_i586(flags))
-	{
-		printf("A i586 or better cpu with:");
-		if(cpu_mmx(flags)) printf(" mmx");
-		if(cpu_3dnow(flags)) printf(" 3dnow");
-		if(cpu_3dnowext(flags)) printf(" 3dnowext");
-		if(cpu_sse(flags)) printf(" sse");
-		if(cpu_sse2(flags)) printf(" sse2");
-		if(cpu_sse3(flags)) printf(" sse3");
-		printf("\n");
-	}
-	else printf("I guess you have some i486\n");
-	return 0;
-}
diff --git a/extensions/gdx-audio/jni/libmpg123/true.h b/extensions/gdx-audio/jni/libmpg123/true.h
deleted file mode 100644
index f40452c..0000000
--- a/extensions/gdx-audio/jni/libmpg123/true.h
+++ /dev/null
@@ -1,14 +0,0 @@
-/*
-	true: a trivial truth
-
-	copyright ?-2007 by the mpg123 project - free software under the terms of the LGPL 2.1
-	see COPYING and AUTHORS files in distribution or http:#mpg123.org
-*/
-
-#ifndef MPG123_H_TRUE
-#define MPG123_H_TRUE
-
-#define FALSE 0
-#define TRUE  1
-
-#endif
diff --git a/extensions/gdx-audio/libs/gdx-audio-natives.jar b/extensions/gdx-audio/libs/gdx-audio-natives.jar
new file mode 100644
index 0000000..f15da62
Binary files /dev/null and b/extensions/gdx-audio/libs/gdx-audio-natives.jar differ
diff --git a/extensions/gdx-audio/src/com/badlogic/gdx/audio/AudioBuild.java b/extensions/gdx-audio/src/com/badlogic/gdx/audio/AudioBuild.java
index 050325f..587503c 100644
--- a/extensions/gdx-audio/src/com/badlogic/gdx/audio/AudioBuild.java
+++ b/extensions/gdx-audio/src/com/badlogic/gdx/audio/AudioBuild.java
@@ -99,8 +99,8 @@ public class AudioBuild {
 		mac.preCompileTask = precompileTask;
 
 		BuildTarget android = BuildTarget.newDefaultTarget(TargetOs.Android, false);
-		android.cFlags += " -DFIXED_POINT -D_ARM_ASSEM_ -D__ANDROID__ -DMPG123_NO_CONFIGURE -DOPT_GENERIC -DHAVE_STRERROR -DMPG123_NO_LARGENAME -DASMALIGN_BYTE";
-		android.cppFlags += " -DFIXED_POINT -D_ARM_ASSEM_ -D__ANDROID__ -DMPG123_NO_CONFIGURE -DOPT_GENERIC -DHAVE_STRERROR -DMPG123_NO_LARGENAME -DASMALIGN_BYTE";
+		android.cFlags += " -DFIXED_POINT -D_ARM_ASSEM_ -D__ANDROID__ -DMPG123_NO_CONFIGURE -DOPT_GENERIC -DHAVE_STRERROR -DMPG123_NO_LARGENAME";
+		android.cppFlags += " -DFIXED_POINT -D_ARM_ASSEM_ -D__ANDROID__ -DMPG123_NO_CONFIGURE -DOPT_GENERIC -DHAVE_STRERROR -DMPG123_NO_LARGENAME";
 		android.headerDirs = headerDirs;
 		android.cIncludes = cIncludes;
 		android.cppIncludes = cppIncludes;
diff --git a/extensions/gdx-audio/src/com/badlogic/gdx/audio/CircularBuffer.java b/extensions/gdx-audio/src/com/badlogic/gdx/audio/CircularBuffer.java
index 1bfc27d..b26c426 100644
--- a/extensions/gdx-audio/src/com/badlogic/gdx/audio/CircularBuffer.java
+++ b/extensions/gdx-audio/src/com/badlogic/gdx/audio/CircularBuffer.java
@@ -79,13 +79,6 @@ public class CircularBuffer {
 
 		return total;
 	}
-	
-	public int skip(int count) {
-		int total = count = Math.min(available, count);
-		available -= total;
-		readPosition = (readPosition + total) % buffer.length;
-		return total;
-	}
 
 	public void clear () {
 		for (int i = 0, n = buffer.length; i < n; i++)
@@ -111,10 +104,6 @@ public class CircularBuffer {
 	public int getReadPosition () {
 		return readPosition;
 	}
-	
-	public int getAvailable() {
-		return available;
-	}
 
 	private void dump () {
 		for (int i = 0, n = buffer.length; i < n; i++)
@@ -125,11 +114,10 @@ public class CircularBuffer {
 	static private void combine (short[] src, int srcPos, short[] dest, int destPos, int length) {
 		for (int i = 0; i < length; i++) {
 			int destIndex = destPos + i;
-			int a = src[srcPos + i];
-			int b = dest[destIndex];
-			// TODO: This doesn't work as its signed short:
-			// dest[destIndex] = MathUtils.clamp((short)(a + b - a * b / Short.MAX_VALUE), (short)0, Short.MAX_VALUE);
-			dest[destIndex] = (short)(0.5f * (a + b));
+			short a = src[srcPos + i];
+			short b = dest[destIndex];
+			dest[destIndex] = MathUtils.clamp((short)(a + b - a * b / Short.MAX_VALUE), (short)0, Short.MAX_VALUE);
+			// dest[destIndex] = (short)(a + b / 2);
 		}
 	}
 
diff --git a/extensions/gdx-audio/src/com/badlogic/gdx/audio/CircularFloatBuffer.java b/extensions/gdx-audio/src/com/badlogic/gdx/audio/CircularFloatBuffer.java
deleted file mode 100644
index e4455ca..0000000
--- a/extensions/gdx-audio/src/com/badlogic/gdx/audio/CircularFloatBuffer.java
+++ /dev/null
@@ -1,135 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-
-package com.badlogic.gdx.audio;
-
-import com.badlogic.gdx.math.MathUtils;
-
-/** @author Nathan Sweet, xoppa */
-public class CircularFloatBuffer {
-	private final float[] buffer;
-	private int writePosition, readPosition;
-	private int available;
-	
-	public final int size;
-
-	public CircularFloatBuffer (int size) {
-		buffer = new float[this.size = size];
-	}
-
-	public void write (float[] data, int offset, int count) {
-		int copy = 0;
-		if (writePosition > readPosition || available == 0) {
-			copy = Math.min(buffer.length - writePosition, count);
-			System.arraycopy(data, offset, buffer, writePosition, copy);
-			writePosition = (writePosition + copy) % buffer.length;
-			available += copy;
-			count -= copy;
-			if (count == 0) return;
-		}
-		copy = Math.min(readPosition - writePosition, count);
-		System.arraycopy(data, offset, buffer, writePosition, copy);
-		writePosition += copy;
-		available += copy;
-	}
-
-	public void combine (float[] data, int offset, int count) {
-		int copy = 0;
-		if (writePosition > readPosition || available == 0) {
-			copy = Math.min(buffer.length - writePosition, count);
-			combine(data, offset, buffer, writePosition, copy);
-			writePosition = (writePosition + copy) % buffer.length;
-			available += copy;
-			count -= copy;
-			if (count == 0) return;
-		}
-		copy = Math.min(readPosition - writePosition, count);
-		combine(data, offset, buffer, writePosition, copy);
-		writePosition += copy;
-		available += copy;
-	}
-
-	public int read (float[] data, int offset, int count) {
-		if (available == 0) return 0;
-
-		int total = count = Math.min(available, count);
-
-		int copy = Math.min(buffer.length - readPosition, total);
-		System.arraycopy(buffer, readPosition, data, offset, copy);
-		readPosition = (readPosition + copy) % buffer.length;
-		available -= copy;
-		count -= copy;
-		if (count > 0 && available > 0) {
-			copy = Math.min(buffer.length - available, count);
-			System.arraycopy(buffer, readPosition, data, offset, copy);
-			readPosition = (readPosition + copy) % buffer.length;
-			available -= copy;
-		}
-
-		return total;
-	}
-	
-	public int skip(int count) {
-		int total = count = Math.min(available, count);
-		available -= total;
-		readPosition = (readPosition + total) % buffer.length;
-		return total;
-	}
-
-	public void clear () {
-		for (int i = 0, n = buffer.length; i < n; i++)
-			buffer[i] = 0;
-		readPosition = 0;
-		writePosition = 0;
-		available = 0;
-	}
-
-	public void setWritePosition (int writePosition) {
-		this.writePosition = Math.abs(writePosition) % buffer.length;
-		;
-	}
-
-	public int getWritePosition () {
-		return writePosition;
-	}
-
-	public void setReadPosition (int readPosition) {
-		this.readPosition = Math.abs(readPosition) % buffer.length;
-	}
-
-	public int getReadPosition () {
-		return readPosition;
-	}
-	
-	public int getAvailable() {
-		return available;
-	}
-
-	private void dump () {
-		for (int i = 0, n = buffer.length; i < n; i++)
-			System.out.println(buffer[i] + (i == writePosition ? " <- write" : "") + (i == readPosition ? " <- read" : ""));
-		System.out.println();
-	}
-
-	static private void combine (float[] src, int srcPos, float[] dest, int destPos, int length) {
-		for (int i = 0; i < length; i++) {
-			int destIndex = destPos + i;
-			float a = src[srcPos + i];
-			float b = dest[destIndex];
-			dest[destIndex] = a + b;
-		}
-	}
-}
\ No newline at end of file
diff --git a/extensions/gdx-audio/src/com/badlogic/gdx/audio/io/Decoder.java b/extensions/gdx-audio/src/com/badlogic/gdx/audio/io/Decoder.java
index e52a71a..a5ac186 100644
--- a/extensions/gdx-audio/src/com/badlogic/gdx/audio/io/Decoder.java
+++ b/extensions/gdx-audio/src/com/badlogic/gdx/audio/io/Decoder.java
@@ -32,7 +32,6 @@ package com.badlogic.gdx.audio.io;
  * limitations under the License.
  ******************************************************************************/
 
-import com.badlogic.gdx.audio.analysis.AudioTools;
 import com.badlogic.gdx.utils.Disposable;
 
 /** Abstract class for audio decoders that return successive amplitude frames. When a decoder is no longer used it has to be
@@ -40,34 +39,15 @@ import com.badlogic.gdx.utils.Disposable;
  * 
  * @author badlogicgames@gmail.com */
 public abstract class Decoder implements Disposable {
-	/** Reads in samples.capacity() samples in 16-bit signed PCM short format from the decoder. Returns the actual number read in.
-	 * If this number is smaller than the capacity of the buffer then the end of stream has been reached.
+	/** Reads in samples.capacity() samples in 16-bit signed PCM format from the decoder. Returns the actual number read in. If this
+	 * number is smaller than the capacity of the buffer then the end of stream has been reached. The provided ShortBuffer must be
+	 * a direct buffer.
 	 * 
 	 * @param samples The number of samples to read.
 	 * @param offset the offset at which to start writting samples to
 	 * @return the number of samples read, < numSamples means end of file */
 	public abstract int readSamples (short[] samples, int offset, int numSamples);
 
-	private short[] readBuffer;
-	private int channels;
-	/** Reads in samples.capacity() samples in 32-bit signed PCM float format from the decoder. Returns the actual number read in. 
-	 * If this number is smaller than the capacity of the buffer then the end of stream has been reached. 
-	 * 
-	 * @param samples The number of samples to read.
-	 * @param offset the offset at which to start writting samples to
-	 * @return the number of samples read, < numSamples means end of file */
-	public int readSamples(float[] samples, int offset, int numSamples) {
-		if (readBuffer == null || readBuffer.length < numSamples)
-			readBuffer = new short[numSamples];
-		if (channels <= 0)
-			channels = getChannels();
-		int result = readSamples(readBuffer, 0, numSamples);
-		if (result <= 0) 
-			return result;
-		AudioTools.toFloat(readBuffer, 0, samples, offset, result);
-		return result;
-	}
-	
 	/** Reads in the entire sound file into a single short[] array. */
 	public short[] readAllSamples () {
 		short[] out = new short[(int)Math.ceil(getLength() * getRate() * getChannels())];
@@ -99,16 +79,6 @@ public abstract class Decoder implements Disposable {
 	 * @param numSamples the number of samples to skip
 	 * @return the number of samples actually skipped. If this is < numSamples then the end of the file has been reached. */
 	public abstract int skipSamples (int numSamples);
-	
-	/** @return	True if the methods {@link #setPosition(float)} and {@link #getPosition()} can be used, false otherwise. */
-	public abstract boolean canSeek();
-	
-	/** Sets the current position within the file to the specified value if supported
-	 * @return True if successful, false otherwise */
-	public abstract boolean setPosition(float seconds);
-	
-	/** @return The current position (in seconds) within the decoder or negative if not supported. */
-	public abstract float getPosition();
 
 	/** @return the number of channels */
 	public abstract int getChannels ();
diff --git a/extensions/gdx-audio/src/com/badlogic/gdx/audio/io/Mpg123Decoder.java b/extensions/gdx-audio/src/com/badlogic/gdx/audio/io/Mpg123Decoder.java
index d06decd..7dc931f 100644
--- a/extensions/gdx-audio/src/com/badlogic/gdx/audio/io/Mpg123Decoder.java
+++ b/extensions/gdx-audio/src/com/badlogic/gdx/audio/io/Mpg123Decoder.java
@@ -75,21 +75,6 @@ public class Mpg123Decoder extends Decoder {
 	public float getLength () {
 		return getLength(handle);
 	}
-	
-	@Override
-	public boolean canSeek () {
-		return false;
-	}
-
-	@Override
-	public boolean setPosition (float seconds) {
-		return false;
-	}
-
-	@Override
-	public float getPosition () {
-		return -1f;
-	}
 
 	@Override
 	public void dispose () {
diff --git a/extensions/gdx-audio/src/com/badlogic/gdx/audio/io/VorbisDecoder.java b/extensions/gdx-audio/src/com/badlogic/gdx/audio/io/VorbisDecoder.java
index 0bcba1e..0811266 100644
--- a/extensions/gdx-audio/src/com/badlogic/gdx/audio/io/VorbisDecoder.java
+++ b/extensions/gdx-audio/src/com/badlogic/gdx/audio/io/VorbisDecoder.java
@@ -33,7 +33,6 @@ package com.badlogic.gdx.audio.io;
  ******************************************************************************/
 
 import com.badlogic.gdx.Files.FileType;
-import com.badlogic.gdx.Gdx;
 import com.badlogic.gdx.files.FileHandle;
 import com.badlogic.gdx.utils.SharedLibraryLoader;
 
@@ -58,49 +57,34 @@ public class VorbisDecoder extends Decoder {
 	}
 
 	@Override
-	public synchronized void dispose () {
+	public void dispose () {
 		closeFile(handle);
 	}
 
 	@Override
-	public synchronized float getLength () {
+	public float getLength () {
 		return getLength(handle);
 	}
 
 	@Override
-	public synchronized int getChannels () {
+	public int getChannels () {
 		return getNumChannels(handle);
 	}
 
 	@Override
-	public synchronized int getRate () {
+	public int getRate () {
 		return getRate(handle);
 	}
 
 	@Override
-	public synchronized int readSamples (short[] samples, int offset, int numSamples) {
+	public int readSamples (short[] samples, int offset, int numSamples) {
 		return readSamples(handle, samples, offset, numSamples);
 	}
 
 	@Override
-	public synchronized int skipSamples (int numSamples) {
+	public int skipSamples (int numSamples) {
 		return skipSamples(handle, numSamples);
 	}
-	
-	@Override
-	public synchronized boolean canSeek () {
-		return seekable(handle) != 0;
-	}
-
-	@Override
-	public synchronized boolean setPosition (float seconds) {
-		return timeSeek(handle, seconds) == 0;
-	}
-
-	@Override
-	public synchronized float getPosition () {
-		return tellTime(handle);
-	}
 
 	// @off
 	/*JNI
@@ -152,7 +136,7 @@ public class VorbisDecoder extends Decoder {
 	
 		return (jlong)oggFile;	
 	*/
-	
+
 	private static native int getNumChannels (long handle); /*
 		OggFile* file = (OggFile*)handle;
 		return file->channels;
@@ -211,20 +195,4 @@ public class VorbisDecoder extends Decoder {
 		free(file->ogg);
 		free(file);
 	*/
-	
-	private static native int seekable (long handle); /*
-		OggFile* file = (OggFile*)handle;
-		return file->ogg->seekable;
-	*/
-	
-	private static native float tellTime (long handle); /*
-		OggFile* file = (OggFile*)handle;
-		return 0.001f * (float)ov_time_tell(file->ogg);
-	*/
-	
-	private static native int timeSeek (long handle, float time); /*
-		OggFile* file = (OggFile*)handle;
-		return ov_time_seek (file->ogg, (ogg_int64_t)(time * 1000.f));
-	*/
-	
 }
\ No newline at end of file
diff --git a/extensions/gdx-audio/src/com/badlogic/gdx/audio/io/WavDecoder.java b/extensions/gdx-audio/src/com/badlogic/gdx/audio/io/WavDecoder.java
index 37a0ec7..ad6f226 100644
--- a/extensions/gdx-audio/src/com/badlogic/gdx/audio/io/WavDecoder.java
+++ b/extensions/gdx-audio/src/com/badlogic/gdx/audio/io/WavDecoder.java
@@ -81,21 +81,6 @@ public class WavDecoder extends Decoder {
 	public float getLength () {
 		return (in.dataRemaining / (2 * getChannels()) / (float)getRate());
 	}
-	
-	@Override
-	public boolean canSeek () {
-		return false;
-	}
-
-	@Override
-	public boolean setPosition (float seconds) {
-		return false;
-	}
-
-	@Override
-	public float getPosition () {
-		return -1f;
-	}
 
 	@Override
 	public void dispose () {
diff --git a/extensions/gdx-bullet/jni/Android.mk b/extensions/gdx-bullet/jni/Android.mk
index aa7244f..83ccff0 100644
--- a/extensions/gdx-bullet/jni/Android.mk
+++ b/extensions/gdx-bullet/jni/Android.mk
@@ -10,154 +10,154 @@ LOCAL_LDLIBS := -lm
 LOCAL_ARM_MODE  := arm
  
 LOCAL_SRC_FILES := memcpy_wrap.c\
-	src/BulletCollision/BroadphaseCollision/btAxisSweep3.cpp\
-	src/BulletCollision/BroadphaseCollision/btBroadphaseProxy.cpp\
-	src/BulletCollision/BroadphaseCollision/btCollisionAlgorithm.cpp\
-	src/BulletCollision/BroadphaseCollision/btDbvt.cpp\
-	src/BulletCollision/BroadphaseCollision/btDbvtBroadphase.cpp\
-	src/BulletCollision/BroadphaseCollision/btDispatcher.cpp\
-	src/BulletCollision/BroadphaseCollision/btMultiSapBroadphase.cpp\
-	src/BulletCollision/BroadphaseCollision/btOverlappingPairCache.cpp\
-	src/BulletCollision/BroadphaseCollision/btQuantizedBvh.cpp\
-	src/BulletCollision/BroadphaseCollision/btSimpleBroadphase.cpp\
-	src/BulletCollision/CollisionDispatch/btActivatingCollisionAlgorithm.cpp\
-	src/BulletCollision/CollisionDispatch/btBox2dBox2dCollisionAlgorithm.cpp\
-	src/BulletCollision/CollisionDispatch/btBoxBoxCollisionAlgorithm.cpp\
-	src/BulletCollision/CollisionDispatch/btBoxBoxDetector.cpp\
-	src/BulletCollision/CollisionDispatch/btCollisionDispatcher.cpp\
-	src/BulletCollision/CollisionDispatch/btCollisionObject.cpp\
-	src/BulletCollision/CollisionDispatch/btCollisionWorld.cpp\
-	src/BulletCollision/CollisionDispatch/btCompoundCollisionAlgorithm.cpp\
-	src/BulletCollision/CollisionDispatch/btConvex2dConvex2dAlgorithm.cpp\
-	src/BulletCollision/CollisionDispatch/btConvexConcaveCollisionAlgorithm.cpp\
-	src/BulletCollision/CollisionDispatch/btConvexConvexAlgorithm.cpp\
-	src/BulletCollision/CollisionDispatch/btConvexPlaneCollisionAlgorithm.cpp\
-	src/BulletCollision/CollisionDispatch/btDefaultCollisionConfiguration.cpp\
-	src/BulletCollision/CollisionDispatch/btEmptyCollisionAlgorithm.cpp\
-	src/BulletCollision/CollisionDispatch/btGhostObject.cpp\
-	src/BulletCollision/CollisionDispatch/btInternalEdgeUtility.cpp\
-	src/BulletCollision/CollisionDispatch/btManifoldResult.cpp\
-	src/BulletCollision/CollisionDispatch/btSimulationIslandManager.cpp\
-	src/BulletCollision/CollisionDispatch/btSphereBoxCollisionAlgorithm.cpp\
-	src/BulletCollision/CollisionDispatch/btSphereSphereCollisionAlgorithm.cpp\
-	src/BulletCollision/CollisionDispatch/btSphereTriangleCollisionAlgorithm.cpp\
-	src/BulletCollision/CollisionDispatch/btUnionFind.cpp\
-	src/BulletCollision/CollisionDispatch/SphereTriangleDetector.cpp\
-	src/BulletCollision/CollisionShapes/btBox2dShape.cpp\
-	src/BulletCollision/CollisionShapes/btBoxShape.cpp\
-	src/BulletCollision/CollisionShapes/btBvhTriangleMeshShape.cpp\
+	src/BulletSoftBody/btSoftRigidCollisionAlgorithm.cpp\
+	src/BulletSoftBody/btSoftSoftCollisionAlgorithm.cpp\
+	src/BulletSoftBody/btSoftBody.cpp\
+	src/BulletSoftBody/btSoftBodyRigidBodyCollisionConfiguration.cpp\
+	src/BulletSoftBody/btSoftBodyHelpers.cpp\
+	src/BulletSoftBody/btSoftBodyConcaveCollisionAlgorithm.cpp\
+	src/BulletSoftBody/btDefaultSoftBodySolver.cpp\
+	src/BulletSoftBody/btSoftRigidDynamicsWorld.cpp\
+	src/MiniCL/MiniCL.cpp\
+	src/MiniCL/MiniCLTask/MiniCLTask.cpp\
+	src/MiniCL/MiniCLTaskScheduler.cpp\
+	src/BulletDynamics/Character/btKinematicCharacterController.cpp\
+	src/BulletDynamics/Vehicle/btWheelInfo.cpp\
+	src/BulletDynamics/Vehicle/btRaycastVehicle.cpp\
+	src/BulletDynamics/ConstraintSolver/btTypedConstraint.cpp\
+	src/BulletDynamics/ConstraintSolver/btHinge2Constraint.cpp\
+	src/BulletDynamics/ConstraintSolver/btHingeConstraint.cpp\
+	src/BulletDynamics/ConstraintSolver/btContactConstraint.cpp\
+	src/BulletDynamics/ConstraintSolver/btGeneric6DofSpringConstraint.cpp\
+	src/BulletDynamics/ConstraintSolver/btSolve2LinearConstraint.cpp\
+	src/BulletDynamics/ConstraintSolver/btUniversalConstraint.cpp\
+	src/BulletDynamics/ConstraintSolver/btConeTwistConstraint.cpp\
+	src/BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.cpp\
+	src/BulletDynamics/ConstraintSolver/btPoint2PointConstraint.cpp\
+	src/BulletDynamics/ConstraintSolver/btSliderConstraint.cpp\
+	src/BulletDynamics/ConstraintSolver/btGeneric6DofConstraint.cpp\
+	src/BulletDynamics/Dynamics/Bullet-C-API.cpp\
+	src/BulletDynamics/Dynamics/btSimpleDynamicsWorld.cpp\
+	src/BulletDynamics/Dynamics/btRigidBody.cpp\
+	src/BulletDynamics/Dynamics/btDiscreteDynamicsWorld.cpp\
+	src/BulletMultiThreaded/SpuSampleTask/SpuSampleTask.cpp\
+	src/BulletMultiThreaded/SpuNarrowPhaseCollisionTask/SpuContactResult.cpp\
+	src/BulletMultiThreaded/SpuNarrowPhaseCollisionTask/boxBoxDistance.cpp\
+	src/BulletMultiThreaded/SpuNarrowPhaseCollisionTask/SpuMinkowskiPenetrationDepthSolver.cpp\
+	src/BulletMultiThreaded/SpuNarrowPhaseCollisionTask/SpuCollisionShapes.cpp\
+	src/BulletMultiThreaded/SpuNarrowPhaseCollisionTask/SpuGatheringCollisionTask.cpp\
+	src/BulletMultiThreaded/Win32ThreadSupport.cpp\
+	src/BulletMultiThreaded/SpuFakeDma.cpp\
+	src/BulletMultiThreaded/SequentialThreadSupport.cpp\
+	src/BulletMultiThreaded/SpuLibspe2Support.cpp\
+	src/BulletMultiThreaded/btGpu3DGridBroadphase.cpp\
+	src/BulletMultiThreaded/SpuCollisionTaskProcess.cpp\
+	src/BulletMultiThreaded/SpuSampleTaskProcess.cpp\
+	src/BulletMultiThreaded/SpuCollisionObjectWrapper.cpp\
+	src/BulletMultiThreaded/PosixThreadSupport.cpp\
+	src/BulletMultiThreaded/SpuGatheringCollisionDispatcher.cpp\
+	src/BulletMultiThreaded/btThreadSupportInterface.cpp\
+	src/BulletMultiThreaded/SpuContactManifoldCollisionAlgorithm.cpp\
+	src/BulletMultiThreaded/btParallelConstraintSolver.cpp\
+	src/LinearMath/btGeometryUtil.cpp\
+	src/LinearMath/btSerializer.cpp\
+	src/LinearMath/btVector3.cpp\
+	src/LinearMath/btQuickprof.cpp\
+	src/LinearMath/btAlignedAllocator.cpp\
+	src/LinearMath/btConvexHullComputer.cpp\
+	src/LinearMath/btConvexHull.cpp\
+	src/BulletCollision/Gimpact/gim_box_set.cpp\
+	src/BulletCollision/Gimpact/btGenericPoolAllocator.cpp\
+	src/BulletCollision/Gimpact/btGImpactShape.cpp\
+	src/BulletCollision/Gimpact/gim_memory.cpp\
+	src/BulletCollision/Gimpact/btGImpactQuantizedBvh.cpp\
+	src/BulletCollision/Gimpact/gim_tri_collision.cpp\
+	src/BulletCollision/Gimpact/btGImpactBvh.cpp\
+	src/BulletCollision/Gimpact/gim_contact.cpp\
+	src/BulletCollision/Gimpact/btGImpactCollisionAlgorithm.cpp\
+	src/BulletCollision/Gimpact/btTriangleShapeEx.cpp\
+	src/BulletCollision/Gimpact/btContactProcessing.cpp\
+	src/BulletCollision/CollisionShapes/btTriangleCallback.cpp\
 	src/BulletCollision/CollisionShapes/btCapsuleShape.cpp\
-	src/BulletCollision/CollisionShapes/btCollisionShape.cpp\
+	src/BulletCollision/CollisionShapes/btTriangleIndexVertexArray.cpp\
+	src/BulletCollision/CollisionShapes/btPolyhedralConvexShape.cpp\
+	src/BulletCollision/CollisionShapes/btConvexPointCloudShape.cpp\
+	src/BulletCollision/CollisionShapes/btEmptyShape.cpp\
+	src/BulletCollision/CollisionShapes/btConvexShape.cpp\
+	src/BulletCollision/CollisionShapes/btStridingMeshInterface.cpp\
+	src/BulletCollision/CollisionShapes/btTriangleMesh.cpp\
+	src/BulletCollision/CollisionShapes/btBoxShape.cpp\
+	src/BulletCollision/CollisionShapes/btScaledBvhTriangleMeshShape.cpp\
+	src/BulletCollision/CollisionShapes/btStaticPlaneShape.cpp\
 	src/BulletCollision/CollisionShapes/btCompoundShape.cpp\
-	src/BulletCollision/CollisionShapes/btConcaveShape.cpp\
-	src/BulletCollision/CollisionShapes/btConeShape.cpp\
-	src/BulletCollision/CollisionShapes/btConvex2dShape.cpp\
 	src/BulletCollision/CollisionShapes/btConvexHullShape.cpp\
+	src/BulletCollision/CollisionShapes/btConvex2dShape.cpp\
+	src/BulletCollision/CollisionShapes/btCylinderShape.cpp\
+	src/BulletCollision/CollisionShapes/btCollisionShape.cpp\
+	src/BulletCollision/CollisionShapes/btConcaveShape.cpp\
+	src/BulletCollision/CollisionShapes/btSphereShape.cpp\
+	src/BulletCollision/CollisionShapes/btMultimaterialTriangleMeshShape.cpp\
+	src/BulletCollision/CollisionShapes/btTriangleIndexVertexMaterialArray.cpp\
+	src/BulletCollision/CollisionShapes/btBvhTriangleMeshShape.cpp\
 	src/BulletCollision/CollisionShapes/btConvexInternalShape.cpp\
-	src/BulletCollision/CollisionShapes/btConvexPointCloudShape.cpp\
+	src/BulletCollision/CollisionShapes/btShapeHull.cpp\
+	src/BulletCollision/CollisionShapes/btConeShape.cpp\
+	src/BulletCollision/CollisionShapes/btUniformScalingShape.cpp\
+	src/BulletCollision/CollisionShapes/btTetrahedronShape.cpp\
+	src/BulletCollision/CollisionShapes/btMinkowskiSumShape.cpp\
 	src/BulletCollision/CollisionShapes/btConvexPolyhedron.cpp\
-	src/BulletCollision/CollisionShapes/btConvexShape.cpp\
 	src/BulletCollision/CollisionShapes/btConvexTriangleMeshShape.cpp\
-	src/BulletCollision/CollisionShapes/btCylinderShape.cpp\
-	src/BulletCollision/CollisionShapes/btEmptyShape.cpp\
 	src/BulletCollision/CollisionShapes/btHeightfieldTerrainShape.cpp\
-	src/BulletCollision/CollisionShapes/btMinkowskiSumShape.cpp\
-	src/BulletCollision/CollisionShapes/btMultimaterialTriangleMeshShape.cpp\
 	src/BulletCollision/CollisionShapes/btMultiSphereShape.cpp\
-	src/BulletCollision/CollisionShapes/btOptimizedBvh.cpp\
-	src/BulletCollision/CollisionShapes/btPolyhedralConvexShape.cpp\
-	src/BulletCollision/CollisionShapes/btScaledBvhTriangleMeshShape.cpp\
-	src/BulletCollision/CollisionShapes/btShapeHull.cpp\
-	src/BulletCollision/CollisionShapes/btSphereShape.cpp\
-	src/BulletCollision/CollisionShapes/btStaticPlaneShape.cpp\
-	src/BulletCollision/CollisionShapes/btStridingMeshInterface.cpp\
-	src/BulletCollision/CollisionShapes/btTetrahedronShape.cpp\
-	src/BulletCollision/CollisionShapes/btTriangleBuffer.cpp\
-	src/BulletCollision/CollisionShapes/btTriangleCallback.cpp\
-	src/BulletCollision/CollisionShapes/btTriangleIndexVertexArray.cpp\
-	src/BulletCollision/CollisionShapes/btTriangleIndexVertexMaterialArray.cpp\
-	src/BulletCollision/CollisionShapes/btTriangleMesh.cpp\
 	src/BulletCollision/CollisionShapes/btTriangleMeshShape.cpp\
-	src/BulletCollision/CollisionShapes/btUniformScalingShape.cpp\
-	src/BulletCollision/Gimpact/btContactProcessing.cpp\
-	src/BulletCollision/Gimpact/btGenericPoolAllocator.cpp\
-	src/BulletCollision/Gimpact/btGImpactBvh.cpp\
-	src/BulletCollision/Gimpact/btGImpactCollisionAlgorithm.cpp\
-	src/BulletCollision/Gimpact/btGImpactQuantizedBvh.cpp\
-	src/BulletCollision/Gimpact/btGImpactShape.cpp\
-	src/BulletCollision/Gimpact/btTriangleShapeEx.cpp\
-	src/BulletCollision/Gimpact/gim_box_set.cpp\
-	src/BulletCollision/Gimpact/gim_contact.cpp\
-	src/BulletCollision/Gimpact/gim_memory.cpp\
-	src/BulletCollision/Gimpact/gim_tri_collision.cpp\
-	src/BulletCollision/NarrowPhaseCollision/btContinuousConvexCollision.cpp\
-	src/BulletCollision/NarrowPhaseCollision/btConvexCast.cpp\
-	src/BulletCollision/NarrowPhaseCollision/btGjkConvexCast.cpp\
-	src/BulletCollision/NarrowPhaseCollision/btGjkEpa2.cpp\
+	src/BulletCollision/CollisionShapes/btTriangleBuffer.cpp\
+	src/BulletCollision/CollisionShapes/btOptimizedBvh.cpp\
+	src/BulletCollision/CollisionShapes/btBox2dShape.cpp\
+	src/BulletCollision/CollisionDispatch/btGhostObject.cpp\
+	src/BulletCollision/CollisionDispatch/btBox2dBox2dCollisionAlgorithm.cpp\
+	src/BulletCollision/CollisionDispatch/btCompoundCollisionAlgorithm.cpp\
+	src/BulletCollision/CollisionDispatch/btSphereTriangleCollisionAlgorithm.cpp\
+	src/BulletCollision/CollisionDispatch/btConvexConcaveCollisionAlgorithm.cpp\
+	src/BulletCollision/CollisionDispatch/btCollisionObject.cpp\
+	src/BulletCollision/CollisionDispatch/btSimulationIslandManager.cpp\
+	src/BulletCollision/CollisionDispatch/btConvexPlaneCollisionAlgorithm.cpp\
+	src/BulletCollision/CollisionDispatch/btConvex2dConvex2dAlgorithm.cpp\
+	src/BulletCollision/CollisionDispatch/btConvexConvexAlgorithm.cpp\
+	src/BulletCollision/CollisionDispatch/btBoxBoxDetector.cpp\
+	src/BulletCollision/CollisionDispatch/btManifoldResult.cpp\
+	src/BulletCollision/CollisionDispatch/btActivatingCollisionAlgorithm.cpp\
+	src/BulletCollision/CollisionDispatch/SphereTriangleDetector.cpp\
+	src/BulletCollision/CollisionDispatch/btSphereSphereCollisionAlgorithm.cpp\
+	src/BulletCollision/CollisionDispatch/btCollisionDispatcher.cpp\
+	src/BulletCollision/CollisionDispatch/btDefaultCollisionConfiguration.cpp\
+	src/BulletCollision/CollisionDispatch/btCollisionWorld.cpp\
+	src/BulletCollision/CollisionDispatch/btBoxBoxCollisionAlgorithm.cpp\
+	src/BulletCollision/CollisionDispatch/btSphereBoxCollisionAlgorithm.cpp\
+	src/BulletCollision/CollisionDispatch/btInternalEdgeUtility.cpp\
+	src/BulletCollision/CollisionDispatch/btEmptyCollisionAlgorithm.cpp\
+	src/BulletCollision/CollisionDispatch/btUnionFind.cpp\
+	src/BulletCollision/BroadphaseCollision/btDbvt.cpp\
+	src/BulletCollision/BroadphaseCollision/btSimpleBroadphase.cpp\
+	src/BulletCollision/BroadphaseCollision/btBroadphaseProxy.cpp\
+	src/BulletCollision/BroadphaseCollision/btAxisSweep3.cpp\
+	src/BulletCollision/BroadphaseCollision/btDispatcher.cpp\
+	src/BulletCollision/BroadphaseCollision/btDbvtBroadphase.cpp\
+	src/BulletCollision/BroadphaseCollision/btQuantizedBvh.cpp\
+	src/BulletCollision/BroadphaseCollision/btMultiSapBroadphase.cpp\
+	src/BulletCollision/BroadphaseCollision/btCollisionAlgorithm.cpp\
+	src/BulletCollision/BroadphaseCollision/btOverlappingPairCache.cpp\
+	src/BulletCollision/NarrowPhaseCollision/btPersistentManifold.cpp\
 	src/BulletCollision/NarrowPhaseCollision/btGjkEpaPenetrationDepthSolver.cpp\
-	src/BulletCollision/NarrowPhaseCollision/btGjkPairDetector.cpp\
 	src/BulletCollision/NarrowPhaseCollision/btMinkowskiPenetrationDepthSolver.cpp\
-	src/BulletCollision/NarrowPhaseCollision/btPersistentManifold.cpp\
-	src/BulletCollision/NarrowPhaseCollision/btPolyhedralContactClipping.cpp\
+	src/BulletCollision/NarrowPhaseCollision/btGjkEpa2.cpp\
+	src/BulletCollision/NarrowPhaseCollision/btGjkConvexCast.cpp\
 	src/BulletCollision/NarrowPhaseCollision/btRaycastCallback.cpp\
+	src/BulletCollision/NarrowPhaseCollision/btPolyhedralContactClipping.cpp\
 	src/BulletCollision/NarrowPhaseCollision/btSubSimplexConvexCast.cpp\
+	src/BulletCollision/NarrowPhaseCollision/btGjkPairDetector.cpp\
+	src/BulletCollision/NarrowPhaseCollision/btConvexCast.cpp\
 	src/BulletCollision/NarrowPhaseCollision/btVoronoiSimplexSolver.cpp\
-	src/BulletDynamics/Character/btKinematicCharacterController.cpp\
-	src/BulletDynamics/ConstraintSolver/btConeTwistConstraint.cpp\
-	src/BulletDynamics/ConstraintSolver/btContactConstraint.cpp\
-	src/BulletDynamics/ConstraintSolver/btGeneric6DofConstraint.cpp\
-	src/BulletDynamics/ConstraintSolver/btGeneric6DofSpringConstraint.cpp\
-	src/BulletDynamics/ConstraintSolver/btHinge2Constraint.cpp\
-	src/BulletDynamics/ConstraintSolver/btHingeConstraint.cpp\
-	src/BulletDynamics/ConstraintSolver/btPoint2PointConstraint.cpp\
-	src/BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.cpp\
-	src/BulletDynamics/ConstraintSolver/btSliderConstraint.cpp\
-	src/BulletDynamics/ConstraintSolver/btSolve2LinearConstraint.cpp\
-	src/BulletDynamics/ConstraintSolver/btTypedConstraint.cpp\
-	src/BulletDynamics/ConstraintSolver/btUniversalConstraint.cpp\
-	src/BulletDynamics/Dynamics/btDiscreteDynamicsWorld.cpp\
-	src/BulletDynamics/Dynamics/btRigidBody.cpp\
-	src/BulletDynamics/Dynamics/btSimpleDynamicsWorld.cpp\
-	src/BulletDynamics/Dynamics/Bullet-C-API.cpp\
-	src/BulletDynamics/Vehicle/btRaycastVehicle.cpp\
-	src/BulletDynamics/Vehicle/btWheelInfo.cpp\
-	src/BulletMultiThreaded/btGpu3DGridBroadphase.cpp\
-	src/BulletMultiThreaded/btParallelConstraintSolver.cpp\
-	src/BulletMultiThreaded/btThreadSupportInterface.cpp\
-	src/BulletMultiThreaded/PosixThreadSupport.cpp\
-	src/BulletMultiThreaded/SequentialThreadSupport.cpp\
-	src/BulletMultiThreaded/SpuCollisionObjectWrapper.cpp\
-	src/BulletMultiThreaded/SpuCollisionTaskProcess.cpp\
-	src/BulletMultiThreaded/SpuContactManifoldCollisionAlgorithm.cpp\
-	src/BulletMultiThreaded/SpuFakeDma.cpp\
-	src/BulletMultiThreaded/SpuGatheringCollisionDispatcher.cpp\
-	src/BulletMultiThreaded/SpuLibspe2Support.cpp\
-	src/BulletMultiThreaded/SpuNarrowPhaseCollisionTask/boxBoxDistance.cpp\
-	src/BulletMultiThreaded/SpuNarrowPhaseCollisionTask/SpuCollisionShapes.cpp\
-	src/BulletMultiThreaded/SpuNarrowPhaseCollisionTask/SpuContactResult.cpp\
-	src/BulletMultiThreaded/SpuNarrowPhaseCollisionTask/SpuGatheringCollisionTask.cpp\
-	src/BulletMultiThreaded/SpuNarrowPhaseCollisionTask/SpuMinkowskiPenetrationDepthSolver.cpp\
-	src/BulletMultiThreaded/SpuSampleTask/SpuSampleTask.cpp\
-	src/BulletMultiThreaded/SpuSampleTaskProcess.cpp\
-	src/BulletMultiThreaded/Win32ThreadSupport.cpp\
-	src/BulletSoftBody/btDefaultSoftBodySolver.cpp\
-	src/BulletSoftBody/btSoftBody.cpp\
-	src/BulletSoftBody/btSoftBodyConcaveCollisionAlgorithm.cpp\
-	src/BulletSoftBody/btSoftBodyHelpers.cpp\
-	src/BulletSoftBody/btSoftBodyRigidBodyCollisionConfiguration.cpp\
-	src/BulletSoftBody/btSoftRigidCollisionAlgorithm.cpp\
-	src/BulletSoftBody/btSoftRigidDynamicsWorld.cpp\
-	src/BulletSoftBody/btSoftSoftCollisionAlgorithm.cpp\
-	src/LinearMath/btAlignedAllocator.cpp\
-	src/LinearMath/btConvexHull.cpp\
-	src/LinearMath/btConvexHullComputer.cpp\
-	src/LinearMath/btGeometryUtil.cpp\
-	src/LinearMath/btQuickprof.cpp\
-	src/LinearMath/btSerializer.cpp\
-	src/LinearMath/btVector3.cpp\
-	src/MiniCL/MiniCL.cpp\
-	src/MiniCL/MiniCLTask/MiniCLTask.cpp\
-	src/MiniCL/MiniCLTaskScheduler.cpp\
+	src/BulletCollision/NarrowPhaseCollision/btContinuousConvexCollision.cpp\
 	swig-src/gdxBullet_wrap.cpp
  
 include $(BUILD_SHARED_LIBRARY)
diff --git a/extensions/gdx-bullet/jni/build-ios32.xml b/extensions/gdx-bullet/jni/build-ios32.xml
deleted file mode 100755
index 634fbd5..0000000
--- a/extensions/gdx-bullet/jni/build-ios32.xml
+++ /dev/null
@@ -1,192 +0,0 @@
-<project name="gdx-bullet-IOS-32" basedir="." default="postcompile">
-	<!-- include the environment -->
-	<property environment="env"/>	
-	<!-- output directory for temporary object files -->
-	<property name="buildDir" value="target/ios32" />
-	<!-- output directory for the shared library -->
-	<property name="libsDir" value="../libs/ios32" />
-	<!-- the name of the shared library -->
-	<property name="libName" value="libgdx-bullet.a"/>
-	<!-- the jni header jniPlatform to use -->
-	<property name="jniPlatform" value="mac"/>
-	<!-- the compilerPrefix for the C & C++ compilers -->
-	<property name="compilerPrefix" value=""/>	
-	<property name="iphoneos-platform" value="/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin"/>
-	<property name="iphoneos-sdk" value="/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS6.0.sdk/"/>
-	<property name="iphonesimulator-platform" value="/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/usr/bin"/>
-	<property name="iphonesimulator-sdk" value="/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator6.0.sdk/"/>
-	
-	<!-- define gcc compiler, options and files to compile -->
-	<property name="gcc" value="${compilerPrefix}gcc"/>	
-	<property name="gcc-opts" value="-c -Wall -O2"/>
-	<fileset id="gcc-files" dir="./">
-		<exclude name="target/"/>		
-				<include name="memcpy_wrap.c"/>
-		<include name="**/*.c"/>
-
-				<exclude name="src/BulletMultiThreaded/GpuSoftBodySolvers/**"/>
-
-	</fileset>
-	
-	<!-- define g++ compiler, options and files to compile -->
-	<property name="g++" value="${compilerPrefix}g++"/>
-	<property name="g++-opts" value="-c -Wall -O2 -fno-strict-aliasing -fno-rtti -DBT_NO_PROFILE"/>
-	<fileset id="g++-files" dir="./">
-		<exclude name="target/"/>
-				<include name="**/*.cpp"/>
-
-				<exclude name="src/BulletMultiThreaded/GpuSoftBodySolvers/**"/>
-
-	</fileset>
-
-	<!-- define linker and options -->
-	<property name="linker" value="${compilerPrefix}ar"/>
-	<property name="linker-opts" value="rcs"/>
-	<property name="libraries" value=""/>
-	
-	<!-- cleans the build directory, removes all object files and shared libs -->
-	<target name="clean">
-		<delete includeemptydirs="true" quiet="true">
-			<fileset dir="${buildDir}"/>
-			<fileset dir="${libsDir}" includes="**/*" excludes="**/.svn"/>
-		</delete>
-	</target>
-	
-	<target name="clean-objfiles">
-		<delete>
-			<fileset dir="${buildDir}">
-				<include name="**/*.o"/>
-			</fileset>
-		</delete>
-	</target>
-	
-	<target name="create-build-dir">
-		<!-- FIXME this is pretty nasty :/ -->
-		<copy todir="${buildDir}">
-			<fileset refid="g++-files"/>
-			<fileset refid="gcc-files"/>
-		</copy>
-		<delete>
-			<fileset dir="${buildDir}">
-				<include name="*"/>
-				<exclude name="*.o"/>
-			</fileset>
-		</delete>
-	</target>
-
-	<!-- compiles all C and C++ files to object files in the build directory, for 386 builds-->
-	<target name="compile-386" depends="clean,create-build-dir">
-		<mkdir dir="${buildDir}"/>
-		<apply failonerror="true" executable="${iphonesimulator-platform}/${g++}" dest="${buildDir}" verbose="true">
-			<arg line="-isysroot ${iphonesimulator-sdk} -arch i386 ${g++-opts}"/>
-			<arg value="-Ijni-headers"/>
-			<arg value="-Ijni-headers/${jniPlatform}"/>
-			<arg value="-I."/>
-						<arg value="-Isrc/"/>
-
-			<srcfile/>
-			<arg value="-o"/>
-			<targetfile/>
-			<fileset refid="g++-files"/>
-			<compositemapper>
-				<mapper type="glob" from="*.cpp" to="*.o"/>
-				<mapper type="glob" from="*.mm" to="*.o"/>
-			</compositemapper>
-		</apply>
-		<apply failonerror="true" executable="${iphonesimulator-platform}/${gcc}" dest="${buildDir}" verbose="true">
-			<arg line="-isysroot ${iphonesimulator-sdk} -arch i386 ${gcc-opts}"/>
-			<arg value="-Ijni-headers"/>
-			<arg value="-Ijni-headers/${jniPlatform}"/>
-			<arg value="-I."/>
-						<arg value="-Isrc/"/>
-
-			<srcfile/>
-			<arg value="-o"/>
-			<targetfile/>
-			<fileset refid="gcc-files"/>
-			<compositemapper>
-				<mapper type="glob" from="*.c" to="*.o"/>
-			</compositemapper>
-		</apply>
-	</target>	
-
-	<!-- links the shared library based on the previously compiled object files -->
-	<target name="link-386" depends="compile-386">
-		<fileset dir="${buildDir}" id="objFileSet">
-			<patternset>
-				<include name="**/*.o" />
-			</patternset>
-		</fileset>
-		<pathconvert pathsep=" " property="objFiles" refid="objFileSet" />
-		<mkdir dir="${libsDir}" />
-		<exec executable="${iphonesimulator-platform}/${linker}" failonerror="true" dir="${buildDir}">
-			<arg line="${linker-opts}" />
-			<arg path="${libsDir}/${libName}.386" />
-			<arg line="${objFiles}"/>
-			<arg line="${libraries}" />
-		</exec>
-	</target>
-	
-	<!-- compiles all C and C++ files to object files in the build directory, for 386 builds-->
-	<target name="compile-arm" depends="create-build-dir,clean-objfiles">
-		<mkdir dir="${buildDir}"/>
-		<apply failonerror="true" executable="${iphoneos-platform}/${g++}" dest="${buildDir}" verbose="true">
-			<arg line="-isysroot ${iphoneos-sdk} -arch armv7 ${g++-opts}"/>
-			<arg value="-Ijni-headers"/>
-			<arg value="-Ijni-headers/${jniPlatform}"/>
-			<arg value="-I."/>
-						<arg value="-Isrc/"/>
-
-			<srcfile/>
-			<arg value="-o"/>
-			<targetfile/>
-			<fileset refid="g++-files"/>
-			<compositemapper>
-				<mapper type="glob" from="*.cpp" to="*.o"/>
-				<mapper type="glob" from="*.mm" to="*.o"/>
-			</compositemapper>
-		</apply>
-		<apply failonerror="true" executable="${iphoneos-platform}/${gcc}" dest="${buildDir}" verbose="true">
-			<arg line="-isysroot ${iphoneos-sdk} -arch armv7 ${gcc-opts}"/>
-			<arg value="-Ijni-headers"/>
-			<arg value="-Ijni-headers/${jniPlatform}"/>
-			<arg value="-I."/>
-						<arg value="-Isrc/"/>
-
-			<srcfile/>
-			<arg value="-o"/>
-			<targetfile/>
-			<fileset refid="gcc-files"/>
-			<compositemapper>
-				<mapper type="glob" from="*.c" to="*.o"/>
-			</compositemapper>
-		</apply>
-	</target>	
-
-	<!-- links the shared library based on the previously compiled object files -->
-	<target name="link-arm" depends="compile-arm">
-		<fileset dir="${buildDir}" id="objFileSet">
-			<patternset>
-				<include name="**/*.o" />
-			</patternset>
-		</fileset>
-		<pathconvert pathsep=" " property="objFiles" refid="objFileSet" />
-		<mkdir dir="${libsDir}" />
-		<exec executable="${iphoneos-platform}/${linker}" failonerror="true" dir="${buildDir}">
-			<arg line="${linker-opts}" />
-			<arg path="${libsDir}/${libName}.armv7" />
-			<arg line="${objFiles}"/>
-			<arg line="${libraries}" />
-		</exec>
-	</target>
-
-	<target name="link-fat">
-		<exec executable="lipo" failonerror="true" dir="${libsDir}">
-			<arg line="-create -output ${libName} ${libName}.386 ${libName}.armv7"/>
-		</exec>
-	</target>
-
-	<target name="postcompile" depends="link-386,link-arm,link-fat">
-		
-	</target>
-</project>
diff --git a/extensions/gdx-bullet/jni/build-linux32.xml b/extensions/gdx-bullet/jni/build-linux32.xml
index 32c7a53..c1599cd 100644
--- a/extensions/gdx-bullet/jni/build-linux32.xml
+++ b/extensions/gdx-bullet/jni/build-linux32.xml
@@ -17,8 +17,7 @@
 	<property name="gcc-opts" value="-c -Wall -O2 -mfpmath=sse -msse -fmessage-length=0 -m32 -fPIC"/>
 	<fileset id="gcc-files" dir="./">
 		<exclude name="target/"/>		
-				<include name="memcpy_wrap.c"/>
-		<include name="**/*.c"/>
+				<include name="**/*.c"/>
 
 				<exclude name="src/BulletMultiThreaded/GpuSoftBodySolvers/**"/>
 
@@ -38,7 +37,6 @@
 	<!-- define linker and options -->
 	<property name="linker" value="${compilerPrefix}g++"/>
 	<property name="linker-opts" value="-shared -m32"/>
-	<property name="libraries" value=""/>
 	
 	<!-- cleans the build directory, removes all object files and shared libs -->
 	<target name="clean">
@@ -97,10 +95,9 @@
 			<arg value="-o"/>
 			<targetfile/>
 			<fileset refid="g++-files"/>
-			<compositemapper>
+			<chainedmapper>
 				<mapper type="glob" from="*.cpp" to="*.o"/>
-				<mapper type="glob" from="*.mm" to="*.o"/>
-			</compositemapper>
+			</chainedmapper>
 		</apply>
 		<apply failonerror="true" executable="${gcc}" dest="${buildDir}" verbose="true">
 			<arg line="${gcc-opts}"/>
@@ -113,28 +110,25 @@
 			<arg value="-o"/>
 			<targetfile/>
 			<fileset refid="gcc-files"/>
-			<compositemapper>
+			<chainedmapper>
 				<mapper type="glob" from="*.c" to="*.o"/>
-			</compositemapper>
+			</chainedmapper>
 		</apply>
 	</target>	
 
 	<!-- links the shared library based on the previously compiled object files -->	
 	<target name="link" depends="compile" if="has-compiler">
-		<fileset dir="${buildDir}" id="objFileSet">
-			<patternset>
-				<include name="**/*.o" />
-			</patternset>
-		</fileset>
-		<pathconvert pathsep=" " property="objFiles" refid="objFileSet" />
-		<mkdir dir="${libsDir}" />
-		<exec executable="${linker}" failonerror="true" dir="${buildDir}">
-			<arg line="${linker-opts}" />
-			<arg value="-o" />
-			<arg path="${libsDir}/${libName}" />
-			<arg line="${objFiles}"/>
-			<arg line="${libraries}" />
-		</exec>
+		<mkdir dir="${libsDir}"/>
+		<apply failonerror="true" executable="${linker}" parallel="true" dir="${buildDir}">
+			<arg line="${linker-opts}"/>
+			<arg value="-o"/>
+			<arg path="${libsDir}/${libName}"/>		
+			<fileset dir="${buildDir}">
+				<patternset>
+					<include name="**/*.o"/>
+				</patternset>
+			</fileset>
+		</apply>
 	</target>	
 	
 	<target name="postcompile" depends="link">
diff --git a/extensions/gdx-bullet/jni/build-linux64.xml b/extensions/gdx-bullet/jni/build-linux64.xml
index 6e43e9e..cb5ade9 100644
--- a/extensions/gdx-bullet/jni/build-linux64.xml
+++ b/extensions/gdx-bullet/jni/build-linux64.xml
@@ -17,8 +17,7 @@
 	<property name="gcc-opts" value="-c -Wall -O2 -mfpmath=sse -msse -fmessage-length=0 -m64 -fPIC"/>
 	<fileset id="gcc-files" dir="./">
 		<exclude name="target/"/>		
-				<include name="memcpy_wrap.c"/>
-		<include name="**/*.c"/>
+				<include name="**/*.c"/>
 
 				<exclude name="src/BulletMultiThreaded/GpuSoftBodySolvers/**"/>
 
@@ -38,7 +37,6 @@
 	<!-- define linker and options -->
 	<property name="linker" value="${compilerPrefix}g++"/>
 	<property name="linker-opts" value="-shared -m64 -Wl,-wrap,memcpy"/>
-	<property name="libraries" value=""/>
 	
 	<!-- cleans the build directory, removes all object files and shared libs -->
 	<target name="clean">
@@ -97,10 +95,9 @@
 			<arg value="-o"/>
 			<targetfile/>
 			<fileset refid="g++-files"/>
-			<compositemapper>
+			<chainedmapper>
 				<mapper type="glob" from="*.cpp" to="*.o"/>
-				<mapper type="glob" from="*.mm" to="*.o"/>
-			</compositemapper>
+			</chainedmapper>
 		</apply>
 		<apply failonerror="true" executable="${gcc}" dest="${buildDir}" verbose="true">
 			<arg line="${gcc-opts}"/>
@@ -113,28 +110,25 @@
 			<arg value="-o"/>
 			<targetfile/>
 			<fileset refid="gcc-files"/>
-			<compositemapper>
+			<chainedmapper>
 				<mapper type="glob" from="*.c" to="*.o"/>
-			</compositemapper>
+			</chainedmapper>
 		</apply>
 	</target>	
 
 	<!-- links the shared library based on the previously compiled object files -->	
 	<target name="link" depends="compile" if="has-compiler">
-		<fileset dir="${buildDir}" id="objFileSet">
-			<patternset>
-				<include name="**/*.o" />
-			</patternset>
-		</fileset>
-		<pathconvert pathsep=" " property="objFiles" refid="objFileSet" />
-		<mkdir dir="${libsDir}" />
-		<exec executable="${linker}" failonerror="true" dir="${buildDir}">
-			<arg line="${linker-opts}" />
-			<arg value="-o" />
-			<arg path="${libsDir}/${libName}" />
-			<arg line="${objFiles}"/>
-			<arg line="${libraries}" />
-		</exec>
+		<mkdir dir="${libsDir}"/>
+		<apply failonerror="true" executable="${linker}" parallel="true" dir="${buildDir}">
+			<arg line="${linker-opts}"/>
+			<arg value="-o"/>
+			<arg path="${libsDir}/${libName}"/>		
+			<fileset dir="${buildDir}">
+				<patternset>
+					<include name="**/*.o"/>
+				</patternset>
+			</fileset>
+		</apply>
 	</target>	
 	
 	<target name="postcompile" depends="link">
diff --git a/extensions/gdx-bullet/jni/build-macosx32.xml b/extensions/gdx-bullet/jni/build-macosx32.xml
index c4a6ce3..c3743d8 100644
--- a/extensions/gdx-bullet/jni/build-macosx32.xml
+++ b/extensions/gdx-bullet/jni/build-macosx32.xml
@@ -17,8 +17,7 @@
 	<property name="gcc-opts" value="-c -Wall -O2 -arch i386 -arch x86_64 -DFIXED_POINT -fmessage-length=0 -fPIC -mmacosx-version-min=10.5"/>
 	<fileset id="gcc-files" dir="./">
 		<exclude name="target/"/>		
-				<include name="memcpy_wrap.c"/>
-		<include name="**/*.c"/>
+				<include name="**/*.c"/>
 
 				<exclude name="src/BulletMultiThreaded/GpuSoftBodySolvers/**"/>
 
@@ -38,7 +37,6 @@
 	<!-- define linker and options -->
 	<property name="linker" value="${compilerPrefix}g++"/>
 	<property name="linker-opts" value="-shared -arch i386 -arch x86_64 -mmacosx-version-min=10.5"/>
-	<property name="libraries" value=""/>
 	
 	<!-- cleans the build directory, removes all object files and shared libs -->
 	<target name="clean">
@@ -97,10 +95,9 @@
 			<arg value="-o"/>
 			<targetfile/>
 			<fileset refid="g++-files"/>
-			<compositemapper>
+			<chainedmapper>
 				<mapper type="glob" from="*.cpp" to="*.o"/>
-				<mapper type="glob" from="*.mm" to="*.o"/>
-			</compositemapper>
+			</chainedmapper>
 		</apply>
 		<apply failonerror="true" executable="${gcc}" dest="${buildDir}" verbose="true">
 			<arg line="${gcc-opts}"/>
@@ -113,28 +110,25 @@
 			<arg value="-o"/>
 			<targetfile/>
 			<fileset refid="gcc-files"/>
-			<compositemapper>
+			<chainedmapper>
 				<mapper type="glob" from="*.c" to="*.o"/>
-			</compositemapper>
+			</chainedmapper>
 		</apply>
 	</target>	
 
 	<!-- links the shared library based on the previously compiled object files -->	
 	<target name="link" depends="compile" if="has-compiler">
-		<fileset dir="${buildDir}" id="objFileSet">
-			<patternset>
-				<include name="**/*.o" />
-			</patternset>
-		</fileset>
-		<pathconvert pathsep=" " property="objFiles" refid="objFileSet" />
-		<mkdir dir="${libsDir}" />
-		<exec executable="${linker}" failonerror="true" dir="${buildDir}">
-			<arg line="${linker-opts}" />
-			<arg value="-o" />
-			<arg path="${libsDir}/${libName}" />
-			<arg line="${objFiles}"/>
-			<arg line="${libraries}" />
-		</exec>
+		<mkdir dir="${libsDir}"/>
+		<apply failonerror="true" executable="${linker}" parallel="true" dir="${buildDir}">
+			<arg line="${linker-opts}"/>
+			<arg value="-o"/>
+			<arg path="${libsDir}/${libName}"/>		
+			<fileset dir="${buildDir}">
+				<patternset>
+					<include name="**/*.o"/>
+				</patternset>
+			</fileset>
+		</apply>
 	</target>	
 	
 	<target name="postcompile" depends="link">
diff --git a/extensions/gdx-bullet/jni/build-windows32.xml b/extensions/gdx-bullet/jni/build-windows32.xml
index b8fd3c3..c03d783 100644
--- a/extensions/gdx-bullet/jni/build-windows32.xml
+++ b/extensions/gdx-bullet/jni/build-windows32.xml
@@ -17,8 +17,7 @@
 	<property name="gcc-opts" value="-c -Wall -O2 -mfpmath=sse -msse2 -fmessage-length=0 -m32"/>
 	<fileset id="gcc-files" dir="./">
 		<exclude name="target/"/>		
-				<include name="memcpy_wrap.c"/>
-		<include name="**/*.c"/>
+				<include name="**/*.c"/>
 
 				<exclude name="src/BulletMultiThreaded/GpuSoftBodySolvers/**"/>
 
@@ -38,7 +37,6 @@
 	<!-- define linker and options -->
 	<property name="linker" value="${compilerPrefix}g++"/>
 	<property name="linker-opts" value="-Wl,--kill-at -shared -m32 -static-libgcc -static-libstdc++"/>
-	<property name="libraries" value=""/>
 	
 	<!-- cleans the build directory, removes all object files and shared libs -->
 	<target name="clean">
@@ -97,10 +95,9 @@
 			<arg value="-o"/>
 			<targetfile/>
 			<fileset refid="g++-files"/>
-			<compositemapper>
+			<chainedmapper>
 				<mapper type="glob" from="*.cpp" to="*.o"/>
-				<mapper type="glob" from="*.mm" to="*.o"/>
-			</compositemapper>
+			</chainedmapper>
 		</apply>
 		<apply failonerror="true" executable="${gcc}" dest="${buildDir}" verbose="true">
 			<arg line="${gcc-opts}"/>
@@ -113,28 +110,25 @@
 			<arg value="-o"/>
 			<targetfile/>
 			<fileset refid="gcc-files"/>
-			<compositemapper>
+			<chainedmapper>
 				<mapper type="glob" from="*.c" to="*.o"/>
-			</compositemapper>
+			</chainedmapper>
 		</apply>
 	</target>	
 
 	<!-- links the shared library based on the previously compiled object files -->	
 	<target name="link" depends="compile" if="has-compiler">
-		<fileset dir="${buildDir}" id="objFileSet">
-			<patternset>
-				<include name="**/*.o" />
-			</patternset>
-		</fileset>
-		<pathconvert pathsep=" " property="objFiles" refid="objFileSet" />
-		<mkdir dir="${libsDir}" />
-		<exec executable="${linker}" failonerror="true" dir="${buildDir}">
-			<arg line="${linker-opts}" />
-			<arg value="-o" />
-			<arg path="${libsDir}/${libName}" />
-			<arg line="${objFiles}"/>
-			<arg line="${libraries}" />
-		</exec>
+		<mkdir dir="${libsDir}"/>
+		<apply failonerror="true" executable="${linker}" parallel="true" dir="${buildDir}">
+			<arg line="${linker-opts}"/>
+			<arg value="-o"/>
+			<arg path="${libsDir}/${libName}"/>		
+			<fileset dir="${buildDir}">
+				<patternset>
+					<include name="**/*.o"/>
+				</patternset>
+			</fileset>
+		</apply>
 	</target>	
 	
 	<target name="postcompile" depends="link">
diff --git a/extensions/gdx-bullet/jni/build-windows32home.xml b/extensions/gdx-bullet/jni/build-windows32home.xml
index f4fc627..dae7c70 100644
--- a/extensions/gdx-bullet/jni/build-windows32home.xml
+++ b/extensions/gdx-bullet/jni/build-windows32home.xml
@@ -17,8 +17,7 @@
 	<property name="gcc-opts" value="-c -Wall -O2 -mfpmath=sse -msse2 -fmessage-length=0 -m32"/>
 	<fileset id="gcc-files" dir="./">
 		<exclude name="target/"/>		
-				<include name="memcpy_wrap.c"/>
-		<include name="**/*.c"/>
+				<include name="**/*.c"/>
 
 				<exclude name="src/BulletMultiThreaded/GpuSoftBodySolvers/**"/>
 
@@ -38,7 +37,6 @@
 	<!-- define linker and options -->
 	<property name="linker" value="${compilerPrefix}g++"/>
 	<property name="linker-opts" value="-Wl,--kill-at -shared -m32 -static-libgcc -static-libstdc++"/>
-	<property name="libraries" value=""/>
 	
 	<!-- cleans the build directory, removes all object files and shared libs -->
 	<target name="clean">
@@ -97,10 +95,9 @@
 			<arg value="-o"/>
 			<targetfile/>
 			<fileset refid="g++-files"/>
-			<compositemapper>
+			<chainedmapper>
 				<mapper type="glob" from="*.cpp" to="*.o"/>
-				<mapper type="glob" from="*.mm" to="*.o"/>
-			</compositemapper>
+			</chainedmapper>
 		</apply>
 		<apply failonerror="true" executable="${gcc}" dest="${buildDir}" verbose="true">
 			<arg line="${gcc-opts}"/>
@@ -113,28 +110,25 @@
 			<arg value="-o"/>
 			<targetfile/>
 			<fileset refid="gcc-files"/>
-			<compositemapper>
+			<chainedmapper>
 				<mapper type="glob" from="*.c" to="*.o"/>
-			</compositemapper>
+			</chainedmapper>
 		</apply>
 	</target>	
 
 	<!-- links the shared library based on the previously compiled object files -->	
 	<target name="link" depends="compile" if="has-compiler">
-		<fileset dir="${buildDir}" id="objFileSet">
-			<patternset>
-				<include name="**/*.o" />
-			</patternset>
-		</fileset>
-		<pathconvert pathsep=" " property="objFiles" refid="objFileSet" />
-		<mkdir dir="${libsDir}" />
-		<exec executable="${linker}" failonerror="true" dir="${buildDir}">
-			<arg line="${linker-opts}" />
-			<arg value="-o" />
-			<arg path="${libsDir}/${libName}" />
-			<arg line="${objFiles}"/>
-			<arg line="${libraries}" />
-		</exec>
+		<mkdir dir="${libsDir}"/>
+		<apply failonerror="true" executable="${linker}" parallel="true" dir="${buildDir}">
+			<arg line="${linker-opts}"/>
+			<arg value="-o"/>
+			<arg path="${libsDir}/${libName}"/>		
+			<fileset dir="${buildDir}">
+				<patternset>
+					<include name="**/*.o"/>
+				</patternset>
+			</fileset>
+		</apply>
 	</target>	
 	
 	<target name="postcompile" depends="link">
diff --git a/extensions/gdx-bullet/jni/build-windows64.xml b/extensions/gdx-bullet/jni/build-windows64.xml
index 9d5534e..eb2e2fb 100644
--- a/extensions/gdx-bullet/jni/build-windows64.xml
+++ b/extensions/gdx-bullet/jni/build-windows64.xml
@@ -17,8 +17,7 @@
 	<property name="gcc-opts" value="-c -Wall -O2 -mfpmath=sse -msse2 -fmessage-length=0 -m64"/>
 	<fileset id="gcc-files" dir="./">
 		<exclude name="target/"/>		
-				<include name="memcpy_wrap.c"/>
-		<include name="**/*.c"/>
+				<include name="**/*.c"/>
 
 				<exclude name="src/BulletMultiThreaded/GpuSoftBodySolvers/**"/>
 
@@ -38,7 +37,6 @@
 	<!-- define linker and options -->
 	<property name="linker" value="${compilerPrefix}g++"/>
 	<property name="linker-opts" value="-Wl,--kill-at -shared -static-libgcc -static-libstdc++ -m64"/>
-	<property name="libraries" value=""/>
 	
 	<!-- cleans the build directory, removes all object files and shared libs -->
 	<target name="clean">
@@ -97,10 +95,9 @@
 			<arg value="-o"/>
 			<targetfile/>
 			<fileset refid="g++-files"/>
-			<compositemapper>
+			<chainedmapper>
 				<mapper type="glob" from="*.cpp" to="*.o"/>
-				<mapper type="glob" from="*.mm" to="*.o"/>
-			</compositemapper>
+			</chainedmapper>
 		</apply>
 		<apply failonerror="true" executable="${gcc}" dest="${buildDir}" verbose="true">
 			<arg line="${gcc-opts}"/>
@@ -113,28 +110,25 @@
 			<arg value="-o"/>
 			<targetfile/>
 			<fileset refid="gcc-files"/>
-			<compositemapper>
+			<chainedmapper>
 				<mapper type="glob" from="*.c" to="*.o"/>
-			</compositemapper>
+			</chainedmapper>
 		</apply>
 	</target>	
 
 	<!-- links the shared library based on the previously compiled object files -->	
 	<target name="link" depends="compile" if="has-compiler">
-		<fileset dir="${buildDir}" id="objFileSet">
-			<patternset>
-				<include name="**/*.o" />
-			</patternset>
-		</fileset>
-		<pathconvert pathsep=" " property="objFiles" refid="objFileSet" />
-		<mkdir dir="${libsDir}" />
-		<exec executable="${linker}" failonerror="true" dir="${buildDir}">
-			<arg line="${linker-opts}" />
-			<arg value="-o" />
-			<arg path="${libsDir}/${libName}" />
-			<arg line="${objFiles}"/>
-			<arg line="${libraries}" />
-		</exec>
+		<mkdir dir="${libsDir}"/>
+		<apply failonerror="true" executable="${linker}" parallel="true" dir="${buildDir}">
+			<arg line="${linker-opts}"/>
+			<arg value="-o"/>
+			<arg path="${libsDir}/${libName}"/>		
+			<fileset dir="${buildDir}">
+				<patternset>
+					<include name="**/*.o"/>
+				</patternset>
+			</fileset>
+		</apply>
 	</target>	
 	
 	<target name="postcompile" depends="link">
diff --git a/extensions/gdx-bullet/jni/build.xml b/extensions/gdx-bullet/jni/build.xml
index da65248..8b1bfa0 100644
--- a/extensions/gdx-bullet/jni/build.xml
+++ b/extensions/gdx-bullet/jni/build.xml
@@ -25,7 +25,6 @@
 			<fileset dir="../libs/linux64" includes="libgdx-bullet64.so"/>
 			<fileset dir="../libs/macosx32" includes="libgdx-bullet.dylib"/>
 			<fileset dir="../libs/android32" includes="libgdx-bullet.so"/>
-			<fileset dir="../libs/ios32" includes="libgdx-bullet.a"/>
 
 		</jar>
 	</target>
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/AllHitsRayResultCallback.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/AllHitsRayResultCallback.java
index f773748..c64f8b0 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/AllHitsRayResultCallback.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/AllHitsRayResultCallback.java
@@ -40,24 +40,8 @@ public class AllHitsRayResultCallback extends RayResultCallback {
     super.delete();
   }
 
-  protected void swigDirectorDisconnect() {
-    swigCMemOwn = false;
-    delete();
-  }
-
-  public void swigReleaseOwnership() {
-    swigCMemOwn = false;
-    gdxBulletJNI.AllHitsRayResultCallback_change_ownership(this, swigCPtr, false);
-  }
-
-  public void swigTakeOwnership() {
-    swigCMemOwn = true;
-    gdxBulletJNI.AllHitsRayResultCallback_change_ownership(this, swigCPtr, true);
-  }
-
   public AllHitsRayResultCallback(Vector3 rayFromWorld, Vector3 rayToWorld) {
     this(gdxBulletJNI.new_AllHitsRayResultCallback(rayFromWorld, rayToWorld), true);
-    gdxBulletJNI.AllHitsRayResultCallback_director_connect(this, swigCPtr, swigCMemOwn, true);
   }
 
   public void setM_collisionObjects(SWIGTYPE_p_btAlignedObjectArrayT_btCollisionObject_const_p_t value) {
@@ -114,8 +98,4 @@ public class AllHitsRayResultCallback extends RayResultCallback {
     return (cPtr == 0) ? null : new SWIGTYPE_p_btAlignedObjectArrayT_float_t(cPtr, false);
   }
 
-  public float addSingleResult(LocalRayResult rayResult, boolean normalInWorldSpace) {
-    return (getClass() == AllHitsRayResultCallback.class) ? gdxBulletJNI.AllHitsRayResultCallback_addSingleResult(swigCPtr, this, LocalRayResult.getCPtr(rayResult), rayResult, normalInWorldSpace) : gdxBulletJNI.AllHitsRayResultCallback_addSingleResultSwigExplicitAllHitsRayResultCallback(swigCPtr, this, LocalRayResult.getCPtr(rayResult), rayResult, normalInWorldSpace);
-  }
-
 }
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/ClosestConvexResultCallback.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/ClosestConvexResultCallback.java
index f2a6147..48b7297 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/ClosestConvexResultCallback.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/ClosestConvexResultCallback.java
@@ -40,24 +40,8 @@ public class ClosestConvexResultCallback extends ConvexResultCallback {
     super.delete();
   }
 
-  protected void swigDirectorDisconnect() {
-    swigCMemOwn = false;
-    delete();
-  }
-
-  public void swigReleaseOwnership() {
-    swigCMemOwn = false;
-    gdxBulletJNI.ClosestConvexResultCallback_change_ownership(this, swigCPtr, false);
-  }
-
-  public void swigTakeOwnership() {
-    swigCMemOwn = true;
-    gdxBulletJNI.ClosestConvexResultCallback_change_ownership(this, swigCPtr, true);
-  }
-
   public ClosestConvexResultCallback(Vector3 convexFromWorld, Vector3 convexToWorld) {
     this(gdxBulletJNI.new_ClosestConvexResultCallback(convexFromWorld, convexToWorld), true);
-    gdxBulletJNI.ClosestConvexResultCallback_director_connect(this, swigCPtr, swigCMemOwn, true);
   }
 
   public void setM_convexFromWorld(btVector3 value) {
@@ -105,8 +89,4 @@ public class ClosestConvexResultCallback extends ConvexResultCallback {
 	return (cPtr == 0) ? null : btCollisionObject.getInstance(cPtr, false);
 }
 
-  public float addSingleResult(LocalConvexResult convexResult, boolean normalInWorldSpace) {
-    return (getClass() == ClosestConvexResultCallback.class) ? gdxBulletJNI.ClosestConvexResultCallback_addSingleResult(swigCPtr, this, LocalConvexResult.getCPtr(convexResult), convexResult, normalInWorldSpace) : gdxBulletJNI.ClosestConvexResultCallback_addSingleResultSwigExplicitClosestConvexResultCallback(swigCPtr, this, LocalConvexResult.getCPtr(convexResult), convexResult, normalInWorldSpace);
-  }
-
 }
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/ClosestRayResultCallback.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/ClosestRayResultCallback.java
index d7334f2..8d06011 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/ClosestRayResultCallback.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/ClosestRayResultCallback.java
@@ -40,24 +40,8 @@ public class ClosestRayResultCallback extends RayResultCallback {
     super.delete();
   }
 
-  protected void swigDirectorDisconnect() {
-    swigCMemOwn = false;
-    delete();
-  }
-
-  public void swigReleaseOwnership() {
-    swigCMemOwn = false;
-    gdxBulletJNI.ClosestRayResultCallback_change_ownership(this, swigCPtr, false);
-  }
-
-  public void swigTakeOwnership() {
-    swigCMemOwn = true;
-    gdxBulletJNI.ClosestRayResultCallback_change_ownership(this, swigCPtr, true);
-  }
-
   public ClosestRayResultCallback(Vector3 rayFromWorld, Vector3 rayToWorld) {
     this(gdxBulletJNI.new_ClosestRayResultCallback(rayFromWorld, rayToWorld), true);
-    gdxBulletJNI.ClosestRayResultCallback_director_connect(this, swigCPtr, swigCMemOwn, true);
   }
 
   public void setM_rayFromWorld(btVector3 value) {
@@ -96,8 +80,4 @@ public class ClosestRayResultCallback extends RayResultCallback {
     return (cPtr == 0) ? null : new btVector3(cPtr, false);
   }
 
-  public float addSingleResult(LocalRayResult rayResult, boolean normalInWorldSpace) {
-    return (getClass() == ClosestRayResultCallback.class) ? gdxBulletJNI.ClosestRayResultCallback_addSingleResult(swigCPtr, this, LocalRayResult.getCPtr(rayResult), rayResult, normalInWorldSpace) : gdxBulletJNI.ClosestRayResultCallback_addSingleResultSwigExplicitClosestRayResultCallback(swigCPtr, this, LocalRayResult.getCPtr(rayResult), rayResult, normalInWorldSpace);
-  }
-
 }
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/ContactResultCallback.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/ContactResultCallback.java
index 7aa43ae..97bd96e 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/ContactResultCallback.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/ContactResultCallback.java
@@ -40,21 +40,6 @@ public class ContactResultCallback {
     }
   }
 
-  protected void swigDirectorDisconnect() {
-    swigCMemOwn = false;
-    delete();
-  }
-
-  public void swigReleaseOwnership() {
-    swigCMemOwn = false;
-    gdxBulletJNI.ContactResultCallback_change_ownership(this, swigCPtr, false);
-  }
-
-  public void swigTakeOwnership() {
-    swigCMemOwn = true;
-    gdxBulletJNI.ContactResultCallback_change_ownership(this, swigCPtr, true);
-  }
-
   public void setM_collisionFilterGroup(short value) {
     gdxBulletJNI.ContactResultCallback_m_collisionFilterGroup_set(swigCPtr, this, value);
   }
@@ -71,17 +56,12 @@ public class ContactResultCallback {
     return gdxBulletJNI.ContactResultCallback_m_collisionFilterMask_get(swigCPtr, this);
   }
 
-  public ContactResultCallback() {
-    this(gdxBulletJNI.new_ContactResultCallback(), true);
-    gdxBulletJNI.ContactResultCallback_director_connect(this, swigCPtr, swigCMemOwn, true);
-  }
-
   public boolean needsCollision(btBroadphaseProxy proxy0) {
-    return (getClass() == ContactResultCallback.class) ? gdxBulletJNI.ContactResultCallback_needsCollision(swigCPtr, this, btBroadphaseProxy.getCPtr(proxy0), proxy0) : gdxBulletJNI.ContactResultCallback_needsCollisionSwigExplicitContactResultCallback(swigCPtr, this, btBroadphaseProxy.getCPtr(proxy0), proxy0);
+    return gdxBulletJNI.ContactResultCallback_needsCollision(swigCPtr, this, btBroadphaseProxy.getCPtr(proxy0), proxy0);
   }
 
-  public float addSingleResult(btManifoldPoint cp, btCollisionObjectWrapper colObj0Wrap, int partId0, int index0, btCollisionObjectWrapper colObj1Wrap, int partId1, int index1) {
-    return gdxBulletJNI.ContactResultCallback_addSingleResult(swigCPtr, this, btManifoldPoint.getCPtr(cp), cp, btCollisionObjectWrapper.getCPtr(colObj0Wrap), colObj0Wrap, partId0, index0, btCollisionObjectWrapper.getCPtr(colObj1Wrap), colObj1Wrap, partId1, index1);
+  public float addSingleResult(btManifoldPoint cp, SWIGTYPE_p_btCollisionObjectWrapper colObj0Wrap, int partId0, int index0, SWIGTYPE_p_btCollisionObjectWrapper colObj1Wrap, int partId1, int index1) {
+    return gdxBulletJNI.ContactResultCallback_addSingleResult(swigCPtr, this, btManifoldPoint.getCPtr(cp), cp, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(colObj0Wrap), partId0, index0, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(colObj1Wrap), partId1, index1);
   }
 
 }
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/ConvexResultCallback.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/ConvexResultCallback.java
index eebb495..8c4e0cb 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/ConvexResultCallback.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/ConvexResultCallback.java
@@ -40,21 +40,6 @@ public class ConvexResultCallback {
     }
   }
 
-  protected void swigDirectorDisconnect() {
-    swigCMemOwn = false;
-    delete();
-  }
-
-  public void swigReleaseOwnership() {
-    swigCMemOwn = false;
-    gdxBulletJNI.ConvexResultCallback_change_ownership(this, swigCPtr, false);
-  }
-
-  public void swigTakeOwnership() {
-    swigCMemOwn = true;
-    gdxBulletJNI.ConvexResultCallback_change_ownership(this, swigCPtr, true);
-  }
-
   public void setM_closestHitFraction(float value) {
     gdxBulletJNI.ConvexResultCallback_m_closestHitFraction_set(swigCPtr, this, value);
   }
@@ -79,17 +64,12 @@ public class ConvexResultCallback {
     return gdxBulletJNI.ConvexResultCallback_m_collisionFilterMask_get(swigCPtr, this);
   }
 
-  public ConvexResultCallback() {
-    this(gdxBulletJNI.new_ConvexResultCallback(), true);
-    gdxBulletJNI.ConvexResultCallback_director_connect(this, swigCPtr, swigCMemOwn, true);
-  }
-
   public boolean hasHit() {
     return gdxBulletJNI.ConvexResultCallback_hasHit(swigCPtr, this);
   }
 
   public boolean needsCollision(btBroadphaseProxy proxy0) {
-    return (getClass() == ConvexResultCallback.class) ? gdxBulletJNI.ConvexResultCallback_needsCollision(swigCPtr, this, btBroadphaseProxy.getCPtr(proxy0), proxy0) : gdxBulletJNI.ConvexResultCallback_needsCollisionSwigExplicitConvexResultCallback(swigCPtr, this, btBroadphaseProxy.getCPtr(proxy0), proxy0);
+    return gdxBulletJNI.ConvexResultCallback_needsCollision(swigCPtr, this, btBroadphaseProxy.getCPtr(proxy0), proxy0);
   }
 
   public float addSingleResult(LocalConvexResult convexResult, boolean normalInWorldSpace) {
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/RayResultCallback.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/RayResultCallback.java
index bde1679..7959c84 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/RayResultCallback.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/RayResultCallback.java
@@ -40,21 +40,6 @@ public class RayResultCallback {
     }
   }
 
-  protected void swigDirectorDisconnect() {
-    swigCMemOwn = false;
-    delete();
-  }
-
-  public void swigReleaseOwnership() {
-    swigCMemOwn = false;
-    gdxBulletJNI.RayResultCallback_change_ownership(this, swigCPtr, false);
-  }
-
-  public void swigTakeOwnership() {
-    swigCMemOwn = true;
-    gdxBulletJNI.RayResultCallback_change_ownership(this, swigCPtr, true);
-  }
-
   public void setM_closestHitFraction(float value) {
     gdxBulletJNI.RayResultCallback_m_closestHitFraction_set(swigCPtr, this, value);
   }
@@ -100,13 +85,8 @@ public class RayResultCallback {
     return gdxBulletJNI.RayResultCallback_hasHit(swigCPtr, this);
   }
 
-  public RayResultCallback() {
-    this(gdxBulletJNI.new_RayResultCallback(), true);
-    gdxBulletJNI.RayResultCallback_director_connect(this, swigCPtr, swigCMemOwn, true);
-  }
-
   public boolean needsCollision(btBroadphaseProxy proxy0) {
-    return (getClass() == RayResultCallback.class) ? gdxBulletJNI.RayResultCallback_needsCollision(swigCPtr, this, btBroadphaseProxy.getCPtr(proxy0), proxy0) : gdxBulletJNI.RayResultCallback_needsCollisionSwigExplicitRayResultCallback(swigCPtr, this, btBroadphaseProxy.getCPtr(proxy0), proxy0);
+    return gdxBulletJNI.RayResultCallback_needsCollision(swigCPtr, this, btBroadphaseProxy.getCPtr(proxy0), proxy0);
   }
 
   public float addSingleResult(LocalRayResult rayResult, boolean normalInWorldSpace) {
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/SWIGTYPE_p_btAlignedObjectArrayT_btBroadphasePair_t.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/SWIGTYPE_p_btAlignedObjectArrayT_btBroadphasePair_t.java
new file mode 100755
index 0000000..9b7ae20
--- /dev/null
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/SWIGTYPE_p_btAlignedObjectArrayT_btBroadphasePair_t.java
@@ -0,0 +1,26 @@
+/* ----------------------------------------------------------------------------
+ * This file was automatically generated by SWIG (http://www.swig.org).
+ * Version 2.0.9
+ *
+ * Do not make changes to this file unless you know what you are doing--modify
+ * the SWIG interface file instead.
+ * ----------------------------------------------------------------------------- */
+
+package com.badlogic.gdx.physics.bullet;
+
+public class SWIGTYPE_p_btAlignedObjectArrayT_btBroadphasePair_t {
+  private long swigCPtr;
+
+  protected SWIGTYPE_p_btAlignedObjectArrayT_btBroadphasePair_t(long cPtr, boolean futureUse) {
+    swigCPtr = cPtr;
+  }
+
+  protected SWIGTYPE_p_btAlignedObjectArrayT_btBroadphasePair_t() {
+    swigCPtr = 0;
+  }
+
+  public static long getCPtr(SWIGTYPE_p_btAlignedObjectArrayT_btBroadphasePair_t obj) {
+    return (obj == null) ? 0 : obj.swigCPtr;
+  }
+}
+
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/SWIGTYPE_p_btAlignedObjectArrayT_btPersistentManifold_p_t.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/SWIGTYPE_p_btAlignedObjectArrayT_btPersistentManifold_p_t.java
new file mode 100755
index 0000000..58be5a9
--- /dev/null
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/SWIGTYPE_p_btAlignedObjectArrayT_btPersistentManifold_p_t.java
@@ -0,0 +1,26 @@
+/* ----------------------------------------------------------------------------
+ * This file was automatically generated by SWIG (http://www.swig.org).
+ * Version 2.0.9
+ *
+ * Do not make changes to this file unless you know what you are doing--modify
+ * the SWIG interface file instead.
+ * ----------------------------------------------------------------------------- */
+
+package com.badlogic.gdx.physics.bullet;
+
+public class SWIGTYPE_p_btAlignedObjectArrayT_btPersistentManifold_p_t {
+  private long swigCPtr;
+
+  protected SWIGTYPE_p_btAlignedObjectArrayT_btPersistentManifold_p_t(long cPtr, boolean futureUse) {
+    swigCPtr = cPtr;
+  }
+
+  protected SWIGTYPE_p_btAlignedObjectArrayT_btPersistentManifold_p_t() {
+    swigCPtr = 0;
+  }
+
+  public static long getCPtr(SWIGTYPE_p_btAlignedObjectArrayT_btPersistentManifold_p_t obj) {
+    return (obj == null) ? 0 : obj.swigCPtr;
+  }
+}
+
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/SWIGTYPE_p_btCollisionObjectWrapper.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/SWIGTYPE_p_btCollisionObjectWrapper.java
new file mode 100755
index 0000000..1ab3cd3
--- /dev/null
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/SWIGTYPE_p_btCollisionObjectWrapper.java
@@ -0,0 +1,26 @@
+/* ----------------------------------------------------------------------------
+ * This file was automatically generated by SWIG (http://www.swig.org).
+ * Version 2.0.9
+ *
+ * Do not make changes to this file unless you know what you are doing--modify
+ * the SWIG interface file instead.
+ * ----------------------------------------------------------------------------- */
+
+package com.badlogic.gdx.physics.bullet;
+
+public class SWIGTYPE_p_btCollisionObjectWrapper {
+  private long swigCPtr;
+
+  protected SWIGTYPE_p_btCollisionObjectWrapper(long cPtr, boolean futureUse) {
+    swigCPtr = cPtr;
+  }
+
+  protected SWIGTYPE_p_btCollisionObjectWrapper() {
+    swigCPtr = 0;
+  }
+
+  public static long getCPtr(SWIGTYPE_p_btCollisionObjectWrapper obj) {
+    return (obj == null) ? 0 : obj.swigCPtr;
+  }
+}
+
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btBox2dBox2dCollisionAlgorithm.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btBox2dBox2dCollisionAlgorithm.java
index e54688a..cb4abf1 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btBox2dBox2dCollisionAlgorithm.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btBox2dBox2dCollisionAlgorithm.java
@@ -44,8 +44,8 @@ public class btBox2dBox2dCollisionAlgorithm extends btActivatingCollisionAlgorit
     this(gdxBulletJNI.new_btBox2dBox2dCollisionAlgorithm__SWIG_0(btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci), true);
   }
 
-  public btBox2dBox2dCollisionAlgorithm(btPersistentManifold mf, btCollisionAlgorithmConstructionInfo ci, btCollisionObjectWrapper body0Wrap, btCollisionObjectWrapper body1Wrap) {
-    this(gdxBulletJNI.new_btBox2dBox2dCollisionAlgorithm__SWIG_1(btPersistentManifold.getCPtr(mf), mf, btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, btCollisionObjectWrapper.getCPtr(body0Wrap), body0Wrap, btCollisionObjectWrapper.getCPtr(body1Wrap), body1Wrap), true);
+  public btBox2dBox2dCollisionAlgorithm(btPersistentManifold mf, btCollisionAlgorithmConstructionInfo ci, SWIGTYPE_p_btCollisionObjectWrapper body0Wrap, SWIGTYPE_p_btCollisionObjectWrapper body1Wrap) {
+    this(gdxBulletJNI.new_btBox2dBox2dCollisionAlgorithm__SWIG_1(btPersistentManifold.getCPtr(mf), mf, btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body0Wrap), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body1Wrap)), true);
   }
 
 }
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btBoxBoxCollisionAlgorithm.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btBoxBoxCollisionAlgorithm.java
index c96239b..447f265 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btBoxBoxCollisionAlgorithm.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btBoxBoxCollisionAlgorithm.java
@@ -44,8 +44,8 @@ public class btBoxBoxCollisionAlgorithm extends btActivatingCollisionAlgorithm {
     this(gdxBulletJNI.new_btBoxBoxCollisionAlgorithm__SWIG_0(btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci), true);
   }
 
-  public btBoxBoxCollisionAlgorithm(btPersistentManifold mf, btCollisionAlgorithmConstructionInfo ci, btCollisionObjectWrapper body0Wrap, btCollisionObjectWrapper body1Wrap) {
-    this(gdxBulletJNI.new_btBoxBoxCollisionAlgorithm__SWIG_1(btPersistentManifold.getCPtr(mf), mf, btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, btCollisionObjectWrapper.getCPtr(body0Wrap), body0Wrap, btCollisionObjectWrapper.getCPtr(body1Wrap), body1Wrap), true);
+  public btBoxBoxCollisionAlgorithm(btPersistentManifold mf, btCollisionAlgorithmConstructionInfo ci, SWIGTYPE_p_btCollisionObjectWrapper body0Wrap, SWIGTYPE_p_btCollisionObjectWrapper body1Wrap) {
+    this(gdxBulletJNI.new_btBoxBoxCollisionAlgorithm__SWIG_1(btPersistentManifold.getCPtr(mf), mf, btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body0Wrap), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body1Wrap)), true);
   }
 
 }
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btBroadphasePairArray.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btBroadphasePairArray.java
deleted file mode 100644
index 006f790..0000000
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btBroadphasePairArray.java
+++ /dev/null
@@ -1,84 +0,0 @@
-/* ----------------------------------------------------------------------------
- * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 2.0.9
- *
- * Do not make changes to this file unless you know what you are doing--modify
- * the SWIG interface file instead.
- * ----------------------------------------------------------------------------- */
-
-package com.badlogic.gdx.physics.bullet;
-
-import com.badlogic.gdx.math.Vector3;
-import com.badlogic.gdx.math.Quaternion;
-import com.badlogic.gdx.math.Matrix3;
-import com.badlogic.gdx.math.Matrix4;
-
-public class btBroadphasePairArray {
-  private long swigCPtr;
-  protected boolean swigCMemOwn;
-
-  protected btBroadphasePairArray(long cPtr, boolean cMemoryOwn) {
-    swigCMemOwn = cMemoryOwn;
-    swigCPtr = cPtr;
-  }
-
-  public static long getCPtr(btBroadphasePairArray obj) {
-    return (obj == null) ? 0 : obj.swigCPtr;
-  }
-
-  protected void finalize() {
-    delete();
-  }
-
-  public synchronized void delete() {
-    if (swigCPtr != 0) {
-      if (swigCMemOwn) {
-        swigCMemOwn = false;
-        gdxBulletJNI.delete_btBroadphasePairArray(swigCPtr);
-      }
-      swigCPtr = 0;
-    }
-  }
-
-	/**
-	 * @param out The array to fill with collision objects
-	 * @param other The collision object the pair must contain (which itself is excluded from the result)
-	 * @param tempArray A temporary array used by the method, not more object than the length of this array are added 
-	 * @return The array specified by out */
-	public com.badlogic.gdx.utils.Array<btCollisionObject> getCollisionObjects(final com.badlogic.gdx.utils.Array<btCollisionObject> out, final btCollisionObject other, final int[] tempArray) {
-		final int c = getCollisionObjects(tempArray, tempArray.length, (int)btCollisionObject.getCPtr(other));
-		for (int i = 0; i < c; i++)
-			out.add(btCollisionObject.getInstance(tempArray[i], false));
-		return out;
-	}
-	
-	/** Fills the given array with user value set using {@link btCollisionObject#setUserValue(int)} of the collision objects
-	 * within this pair array colliding with the given collision object.
-	 * @param out The array to fill with the user values
-	 * @param other The collision object the pair must contain (which itself is excluded from the result)
-	 * @return The amount of user values set in the out array. */
-	public int getCollisionObjectsValue(final int[] out, final btCollisionObject other) {
-		return getCollisionObjectsValue(out, out.length, (int)btCollisionObject.getCPtr(other));
-	}
-
-  public int size() {
-    return gdxBulletJNI.btBroadphasePairArray_size(swigCPtr, this);
-  }
-
-  public btBroadphasePair at(int n) {
-    return new btBroadphasePair(gdxBulletJNI.btBroadphasePairArray_at(swigCPtr, this, n), false);
-  }
-
-  public int getCollisionObjects(int[] result, int max, int other) {
-    return gdxBulletJNI.btBroadphasePairArray_getCollisionObjects(swigCPtr, this, result, max, other);
-  }
-
-  public int getCollisionObjectsValue(int[] result, int max, int other) {
-    return gdxBulletJNI.btBroadphasePairArray_getCollisionObjectsValue(swigCPtr, this, result, max, other);
-  }
-
-  public btBroadphasePairArray() {
-    this(gdxBulletJNI.new_btBroadphasePairArray(), true);
-  }
-
-}
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btBvhTriangleMeshShape.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btBvhTriangleMeshShape.java
index 148b824..a33f1bd 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btBvhTriangleMeshShape.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btBvhTriangleMeshShape.java
@@ -42,7 +42,7 @@ public class btBvhTriangleMeshShape extends btTriangleMeshShape {
   }
 
 
-	protected btStridingMeshInterface meshInterface = null;
+	btStridingMeshInterface meshInterface = null;
 	
 	/** @param managed If true this btBvhTriangleMeshShape will keep a reference to the {@link btStridingMeshInterface}
 	 * and deletes it when this btBvhTriangleMeshShape gets deleted. */
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCollisionAlgorithm.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCollisionAlgorithm.java
index f6c8ac7..95f4cd5 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCollisionAlgorithm.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCollisionAlgorithm.java
@@ -40,16 +40,16 @@ public class btCollisionAlgorithm {
     }
   }
 
-  public void processCollision(btCollisionObjectWrapper body0Wrap, btCollisionObjectWrapper body1Wrap, btDispatcherInfo dispatchInfo, btManifoldResult resultOut) {
-    gdxBulletJNI.btCollisionAlgorithm_processCollision(swigCPtr, this, btCollisionObjectWrapper.getCPtr(body0Wrap), body0Wrap, btCollisionObjectWrapper.getCPtr(body1Wrap), body1Wrap, btDispatcherInfo.getCPtr(dispatchInfo), dispatchInfo, btManifoldResult.getCPtr(resultOut), resultOut);
+  public void processCollision(SWIGTYPE_p_btCollisionObjectWrapper body0Wrap, SWIGTYPE_p_btCollisionObjectWrapper body1Wrap, btDispatcherInfo dispatchInfo, btManifoldResult resultOut) {
+    gdxBulletJNI.btCollisionAlgorithm_processCollision(swigCPtr, this, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body0Wrap), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body1Wrap), btDispatcherInfo.getCPtr(dispatchInfo), dispatchInfo, btManifoldResult.getCPtr(resultOut), resultOut);
   }
 
   public float calculateTimeOfImpact(btCollisionObject body0, btCollisionObject body1, btDispatcherInfo dispatchInfo, btManifoldResult resultOut) {
     return gdxBulletJNI.btCollisionAlgorithm_calculateTimeOfImpact(swigCPtr, this, btCollisionObject.getCPtr(body0), body0, btCollisionObject.getCPtr(body1), body1, btDispatcherInfo.getCPtr(dispatchInfo), dispatchInfo, btManifoldResult.getCPtr(resultOut), resultOut);
   }
 
-  public void getAllContactManifolds(btManifoldArray manifoldArray) {
-    gdxBulletJNI.btCollisionAlgorithm_getAllContactManifolds(swigCPtr, this, btManifoldArray.getCPtr(manifoldArray), manifoldArray);
+  public void getAllContactManifolds(SWIGTYPE_p_btAlignedObjectArrayT_btPersistentManifold_p_t manifoldArray) {
+    gdxBulletJNI.btCollisionAlgorithm_getAllContactManifolds(swigCPtr, this, SWIGTYPE_p_btAlignedObjectArrayT_btPersistentManifold_p_t.getCPtr(manifoldArray));
   }
 
 }
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCollisionAlgorithmCreateFunc.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCollisionAlgorithmCreateFunc.java
index 2679a06..0ffe9a9 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCollisionAlgorithmCreateFunc.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCollisionAlgorithmCreateFunc.java
@@ -52,8 +52,8 @@ public class btCollisionAlgorithmCreateFunc {
     this(gdxBulletJNI.new_btCollisionAlgorithmCreateFunc(), true);
   }
 
-  public btCollisionAlgorithm CreateCollisionAlgorithm(btCollisionAlgorithmConstructionInfo arg0, btCollisionObjectWrapper body0Wrap, btCollisionObjectWrapper body1Wrap) {
-    long cPtr = gdxBulletJNI.btCollisionAlgorithmCreateFunc_CreateCollisionAlgorithm(swigCPtr, this, btCollisionAlgorithmConstructionInfo.getCPtr(arg0), arg0, btCollisionObjectWrapper.getCPtr(body0Wrap), body0Wrap, btCollisionObjectWrapper.getCPtr(body1Wrap), body1Wrap);
+  public btCollisionAlgorithm CreateCollisionAlgorithm(btCollisionAlgorithmConstructionInfo arg0, SWIGTYPE_p_btCollisionObjectWrapper body0Wrap, SWIGTYPE_p_btCollisionObjectWrapper body1Wrap) {
+    long cPtr = gdxBulletJNI.btCollisionAlgorithmCreateFunc_CreateCollisionAlgorithm(swigCPtr, this, btCollisionAlgorithmConstructionInfo.getCPtr(arg0), arg0, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body0Wrap), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body1Wrap));
     return (cPtr == 0) ? null : new btCollisionAlgorithm(cPtr, false);
   }
 
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCollisionDispatcher.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCollisionDispatcher.java
index 264ff28..3980592 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCollisionDispatcher.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCollisionDispatcher.java
@@ -61,13 +61,13 @@ public class btCollisionDispatcher extends btDispatcher {
     this(gdxBulletJNI.new_btCollisionDispatcher(btCollisionConfiguration.getCPtr(collisionConfiguration), collisionConfiguration), true);
   }
 
-  public btCollisionAlgorithm findAlgorithm(btCollisionObjectWrapper body0Wrap, btCollisionObjectWrapper body1Wrap, btPersistentManifold sharedManifold) {
-    long cPtr = gdxBulletJNI.btCollisionDispatcher_findAlgorithm__SWIG_0(swigCPtr, this, btCollisionObjectWrapper.getCPtr(body0Wrap), body0Wrap, btCollisionObjectWrapper.getCPtr(body1Wrap), body1Wrap, btPersistentManifold.getCPtr(sharedManifold), sharedManifold);
+  public btCollisionAlgorithm findAlgorithm(SWIGTYPE_p_btCollisionObjectWrapper body0Wrap, SWIGTYPE_p_btCollisionObjectWrapper body1Wrap, btPersistentManifold sharedManifold) {
+    long cPtr = gdxBulletJNI.btCollisionDispatcher_findAlgorithm__SWIG_0(swigCPtr, this, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body0Wrap), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body1Wrap), btPersistentManifold.getCPtr(sharedManifold), sharedManifold);
     return (cPtr == 0) ? null : new btCollisionAlgorithm(cPtr, false);
   }
 
-  public btCollisionAlgorithm findAlgorithm(btCollisionObjectWrapper body0Wrap, btCollisionObjectWrapper body1Wrap) {
-    long cPtr = gdxBulletJNI.btCollisionDispatcher_findAlgorithm__SWIG_1(swigCPtr, this, btCollisionObjectWrapper.getCPtr(body0Wrap), body0Wrap, btCollisionObjectWrapper.getCPtr(body1Wrap), body1Wrap);
+  public btCollisionAlgorithm findAlgorithm(SWIGTYPE_p_btCollisionObjectWrapper body0Wrap, SWIGTYPE_p_btCollisionObjectWrapper body1Wrap) {
+    long cPtr = gdxBulletJNI.btCollisionDispatcher_findAlgorithm__SWIG_1(swigCPtr, this, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body0Wrap), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body1Wrap));
     return (cPtr == 0) ? null : new btCollisionAlgorithm(cPtr, false);
   }
 
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCollisionObject.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCollisionObject.java
index 50fabc7..c1d0c0b 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCollisionObject.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCollisionObject.java
@@ -13,9 +13,7 @@ import com.badlogic.gdx.math.Quaternion;
 import com.badlogic.gdx.math.Matrix3;
 import com.badlogic.gdx.math.Matrix4;
 
-public class btCollisionObject implements 
-	com.badlogic.gdx.utils.Disposable
- {
+public class btCollisionObject {
 	public final static com.badlogic.gdx.utils.LongMap<btCollisionObject> instances = new com.badlogic.gdx.utils.LongMap<btCollisionObject>();
 	
 	public static btCollisionObject getInstance(final long swigCPtr, boolean owner) {
@@ -28,20 +26,12 @@ public class btCollisionObject implements
 	private long swigCPtr;
 	protected boolean swigCMemOwn;
 	
-	public Object userData;
-	
 	protected btCollisionObject(long cPtr, boolean cMemoryOwn) {
 		swigCMemOwn = cMemoryOwn;
 		swigCPtr = cPtr;
 		instances.put(cPtr, this);
 	}
 	
-	@Override
-	public void dispose() {
-		instances.remove(swigCPtr);
-		delete();
-	}
-	
 	public void takeOwnership() {
 		swigCMemOwn = true;
 	}
@@ -320,14 +310,6 @@ public class btCollisionObject implements
     gdxBulletJNI.btCollisionObject_getInterpolationAngularVelocity__SWIG_1(swigCPtr, this, out);
   }
 
-  public int getUserValue() {
-    return gdxBulletJNI.btCollisionObject_getUserValue(swigCPtr, this);
-  }
-
-  public void setUserValue(int value) {
-    gdxBulletJNI.btCollisionObject_setUserValue(swigCPtr, this, value);
-  }
-
   public final static class CollisionFlags {
     public final static int CF_STATIC_OBJECT = 1;
     public final static int CF_KINEMATIC_OBJECT = 2;
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCollisionObjectWrapper.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCollisionObjectWrapper.java
deleted file mode 100644
index 00efa4e..0000000
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCollisionObjectWrapper.java
+++ /dev/null
@@ -1,84 +0,0 @@
-/* ----------------------------------------------------------------------------
- * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 2.0.9
- *
- * Do not make changes to this file unless you know what you are doing--modify
- * the SWIG interface file instead.
- * ----------------------------------------------------------------------------- */
-
-package com.badlogic.gdx.physics.bullet;
-
-import com.badlogic.gdx.math.Vector3;
-import com.badlogic.gdx.math.Quaternion;
-import com.badlogic.gdx.math.Matrix3;
-import com.badlogic.gdx.math.Matrix4;
-
-public class btCollisionObjectWrapper {
-  private long swigCPtr;
-  protected boolean swigCMemOwn;
-
-  protected btCollisionObjectWrapper(long cPtr, boolean cMemoryOwn) {
-    swigCMemOwn = cMemoryOwn;
-    swigCPtr = cPtr;
-  }
-
-  public static long getCPtr(btCollisionObjectWrapper obj) {
-    return (obj == null) ? 0 : obj.swigCPtr;
-  }
-
-  public synchronized void delete() {
-    if (swigCPtr != 0) {
-      if (swigCMemOwn) {
-        swigCMemOwn = false;
-        throw new UnsupportedOperationException("C++ destructor does not have public access");
-      }
-      swigCPtr = 0;
-    }
-  }
-
-  public void setM_parent(btCollisionObjectWrapper value) {
-    gdxBulletJNI.btCollisionObjectWrapper_m_parent_set(swigCPtr, this, btCollisionObjectWrapper.getCPtr(value), value);
-  }
-
-  public btCollisionObjectWrapper getM_parent() {
-    long cPtr = gdxBulletJNI.btCollisionObjectWrapper_m_parent_get(swigCPtr, this);
-    return (cPtr == 0) ? null : new btCollisionObjectWrapper(cPtr, false);
-  }
-
-  public void setM_shape(btCollisionShape value) {
-    gdxBulletJNI.btCollisionObjectWrapper_m_shape_set(swigCPtr, this, btCollisionShape.getCPtr(value), value);
-  }
-
-  public btCollisionShape getM_shape() {
-    long cPtr = gdxBulletJNI.btCollisionObjectWrapper_m_shape_get(swigCPtr, this);
-    return (cPtr == 0) ? null : btCollisionShape.newDerivedObject(cPtr, false);
-  }
-
-  public void setM_collisionObject(btCollisionObject value) {
-    gdxBulletJNI.btCollisionObjectWrapper_m_collisionObject_set(swigCPtr, this, btCollisionObject.getCPtr(value), value);
-  }
-
-  public btCollisionObject getM_collisionObject() {
-	long cPtr = gdxBulletJNI.btCollisionObjectWrapper_m_collisionObject_get(swigCPtr, this);
-	return (cPtr == 0) ? null : btCollisionObject.getInstance(cPtr, false);
-}
-
-  public Matrix4 getM_worldTransform() {
-	return gdxBulletJNI.btCollisionObjectWrapper_m_worldTransform_get(swigCPtr, this);
-}
-
-  public Matrix4 getWorldTransform() {
-	return gdxBulletJNI.btCollisionObjectWrapper_getWorldTransform(swigCPtr, this);
-}
-
-  public btCollisionObject getCollisionObject() {
-	long cPtr = gdxBulletJNI.btCollisionObjectWrapper_getCollisionObject(swigCPtr, this);
-	return (cPtr == 0) ? null : btCollisionObject.getInstance(cPtr, false);
-}
-
-  public btCollisionShape getCollisionShape() {
-    long cPtr = gdxBulletJNI.btCollisionObjectWrapper_getCollisionShape(swigCPtr, this);
-    return (cPtr == 0) ? null : btCollisionShape.newDerivedObject(cPtr, false);
-  }
-
-}
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCollisionWorld.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCollisionWorld.java
index 8bb0436..e80b22f 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCollisionWorld.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCollisionWorld.java
@@ -116,16 +116,16 @@ public class btCollisionWorld {
     gdxBulletJNI.btCollisionWorld_rayTestSingle(rayFromTrans, rayToTrans, btCollisionObject.getCPtr(collisionObject), collisionObject, btCollisionShape.getCPtr(collisionShape), collisionShape, colObjWorldTransform, RayResultCallback.getCPtr(resultCallback), resultCallback);
   }
 
-  public static void rayTestSingleInternal(Matrix4 rayFromTrans, Matrix4 rayToTrans, btCollisionObjectWrapper collisionObjectWrap, RayResultCallback resultCallback) {
-    gdxBulletJNI.btCollisionWorld_rayTestSingleInternal(rayFromTrans, rayToTrans, btCollisionObjectWrapper.getCPtr(collisionObjectWrap), collisionObjectWrap, RayResultCallback.getCPtr(resultCallback), resultCallback);
+  public static void rayTestSingleInternal(Matrix4 rayFromTrans, Matrix4 rayToTrans, SWIGTYPE_p_btCollisionObjectWrapper collisionObjectWrap, RayResultCallback resultCallback) {
+    gdxBulletJNI.btCollisionWorld_rayTestSingleInternal(rayFromTrans, rayToTrans, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(collisionObjectWrap), RayResultCallback.getCPtr(resultCallback), resultCallback);
   }
 
   public static void objectQuerySingle(btConvexShape castShape, Matrix4 rayFromTrans, Matrix4 rayToTrans, btCollisionObject collisionObject, btCollisionShape collisionShape, Matrix4 colObjWorldTransform, ConvexResultCallback resultCallback, float allowedPenetration) {
     gdxBulletJNI.btCollisionWorld_objectQuerySingle(btConvexShape.getCPtr(castShape), castShape, rayFromTrans, rayToTrans, btCollisionObject.getCPtr(collisionObject), collisionObject, btCollisionShape.getCPtr(collisionShape), collisionShape, colObjWorldTransform, ConvexResultCallback.getCPtr(resultCallback), resultCallback, allowedPenetration);
   }
 
-  public static void objectQuerySingleInternal(btConvexShape castShape, Matrix4 convexFromTrans, Matrix4 convexToTrans, btCollisionObjectWrapper colObjWrap, ConvexResultCallback resultCallback, float allowedPenetration) {
-    gdxBulletJNI.btCollisionWorld_objectQuerySingleInternal(btConvexShape.getCPtr(castShape), castShape, convexFromTrans, convexToTrans, btCollisionObjectWrapper.getCPtr(colObjWrap), colObjWrap, ConvexResultCallback.getCPtr(resultCallback), resultCallback, allowedPenetration);
+  public static void objectQuerySingleInternal(btConvexShape castShape, Matrix4 convexFromTrans, Matrix4 convexToTrans, SWIGTYPE_p_btCollisionObjectWrapper colObjWrap, ConvexResultCallback resultCallback, float allowedPenetration) {
+    gdxBulletJNI.btCollisionWorld_objectQuerySingleInternal(btConvexShape.getCPtr(castShape), castShape, convexFromTrans, convexToTrans, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(colObjWrap), ConvexResultCallback.getCPtr(resultCallback), resultCallback, allowedPenetration);
   }
 
   public void addCollisionObject(btCollisionObject collisionObject, short collisionFilterGroup, short collisionFilterMask) {
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCompoundCollisionAlgorithm.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCompoundCollisionAlgorithm.java
index e9b358f..a78887e 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCompoundCollisionAlgorithm.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCompoundCollisionAlgorithm.java
@@ -40,8 +40,8 @@ public class btCompoundCollisionAlgorithm extends btActivatingCollisionAlgorithm
     super.delete();
   }
 
-  public btCompoundCollisionAlgorithm(btCollisionAlgorithmConstructionInfo ci, btCollisionObjectWrapper body0Wrap, btCollisionObjectWrapper body1Wrap, boolean isSwapped) {
-    this(gdxBulletJNI.new_btCompoundCollisionAlgorithm(btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, btCollisionObjectWrapper.getCPtr(body0Wrap), body0Wrap, btCollisionObjectWrapper.getCPtr(body1Wrap), body1Wrap, isSwapped), true);
+  public btCompoundCollisionAlgorithm(btCollisionAlgorithmConstructionInfo ci, SWIGTYPE_p_btCollisionObjectWrapper body0Wrap, SWIGTYPE_p_btCollisionObjectWrapper body1Wrap, boolean isSwapped) {
+    this(gdxBulletJNI.new_btCompoundCollisionAlgorithm(btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body0Wrap), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body1Wrap), isSwapped), true);
   }
 
 }
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCompoundShape.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCompoundShape.java
index 9a5e9b6..f09e2dd 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCompoundShape.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCompoundShape.java
@@ -8,7 +8,6 @@
 
 package com.badlogic.gdx.physics.bullet;
 
-import com.badlogic.gdx.utils.Array;
 import com.badlogic.gdx.math.Vector3;
 import com.badlogic.gdx.math.Quaternion;
 import com.badlogic.gdx.math.Matrix3;
@@ -30,7 +29,7 @@ public class btCompoundShape extends btCollisionShape {
     delete();
   }
 
-  public synchronized void delete()  {
+  public synchronized void delete() {
     if (swigCPtr != 0) {
       if (swigCMemOwn) {
         swigCMemOwn = false;
@@ -39,23 +38,7 @@ public class btCompoundShape extends btCollisionShape {
       swigCPtr = 0;
     }
     super.delete();
-	dispose();
-  }
-
-
-	protected Array<btCollisionShape> children = new Array<btCollisionShape>();
-	
-	public void addChildShape(Matrix4 localTransform, btCollisionShape shape, boolean managed) {
-		addChildShape(localTransform, shape);
-		if (managed)
-			children.add(shape);
-	}
-	
-	protected void dispose() {
-		for (int i = 0; i < children.size; i++)
-			children.get(i).delete();
-		children.clear();
-	}
+  }
 
   public btCompoundShape(boolean enableDynamicAabbTree) {
     this(gdxBulletJNI.new_btCompoundShape__SWIG_0(enableDynamicAabbTree), true);
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btConvex2dConvex2dAlgorithm.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btConvex2dConvex2dAlgorithm.java
index 50428ce..140cba0 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btConvex2dConvex2dAlgorithm.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btConvex2dConvex2dAlgorithm.java
@@ -40,8 +40,8 @@ public class btConvex2dConvex2dAlgorithm extends btActivatingCollisionAlgorithm
     super.delete();
   }
 
-  public btConvex2dConvex2dAlgorithm(btPersistentManifold mf, btCollisionAlgorithmConstructionInfo ci, btCollisionObjectWrapper body0Wrap, btCollisionObjectWrapper body1Wrap, SWIGTYPE_p_btSimplexSolverInterface simplexSolver, btConvexPenetrationDepthSolver pdSolver, int numPerturbationIterations, int minimumPointsPerturbationThreshold) {
-    this(gdxBulletJNI.new_btConvex2dConvex2dAlgorithm(btPersistentManifold.getCPtr(mf), mf, btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, btCollisionObjectWrapper.getCPtr(body0Wrap), body0Wrap, btCollisionObjectWrapper.getCPtr(body1Wrap), body1Wrap, SWIGTYPE_p_btSimplexSolverInterface.getCPtr(simplexSolver), btConvexPenetrationDepthSolver.getCPtr(pdSolver), pdSolver, numPerturbationIterations, minimumPointsPerturbationThreshold), true);
+  public btConvex2dConvex2dAlgorithm(btPersistentManifold mf, btCollisionAlgorithmConstructionInfo ci, SWIGTYPE_p_btCollisionObjectWrapper body0Wrap, SWIGTYPE_p_btCollisionObjectWrapper body1Wrap, SWIGTYPE_p_btSimplexSolverInterface simplexSolver, btConvexPenetrationDepthSolver pdSolver, int numPerturbationIterations, int minimumPointsPerturbationThreshold) {
+    this(gdxBulletJNI.new_btConvex2dConvex2dAlgorithm(btPersistentManifold.getCPtr(mf), mf, btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body0Wrap), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body1Wrap), SWIGTYPE_p_btSimplexSolverInterface.getCPtr(simplexSolver), btConvexPenetrationDepthSolver.getCPtr(pdSolver), pdSolver, numPerturbationIterations, minimumPointsPerturbationThreshold), true);
   }
 
   public void setLowLevelOfDetail(boolean useLowLevel) {
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btConvexConcaveCollisionAlgorithm.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btConvexConcaveCollisionAlgorithm.java
index 5287f5e..3cfa2b4 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btConvexConcaveCollisionAlgorithm.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btConvexConcaveCollisionAlgorithm.java
@@ -40,8 +40,8 @@ public class btConvexConcaveCollisionAlgorithm extends btActivatingCollisionAlgo
     super.delete();
   }
 
-  public btConvexConcaveCollisionAlgorithm(btCollisionAlgorithmConstructionInfo ci, btCollisionObjectWrapper body0Wrap, btCollisionObjectWrapper body1Wrap, boolean isSwapped) {
-    this(gdxBulletJNI.new_btConvexConcaveCollisionAlgorithm(btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, btCollisionObjectWrapper.getCPtr(body0Wrap), body0Wrap, btCollisionObjectWrapper.getCPtr(body1Wrap), body1Wrap, isSwapped), true);
+  public btConvexConcaveCollisionAlgorithm(btCollisionAlgorithmConstructionInfo ci, SWIGTYPE_p_btCollisionObjectWrapper body0Wrap, SWIGTYPE_p_btCollisionObjectWrapper body1Wrap, boolean isSwapped) {
+    this(gdxBulletJNI.new_btConvexConcaveCollisionAlgorithm(btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body0Wrap), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body1Wrap), isSwapped), true);
   }
 
   public void clearCache() {
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btConvexConvexAlgorithm.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btConvexConvexAlgorithm.java
index b898d7d..e4e3cc9 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btConvexConvexAlgorithm.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btConvexConvexAlgorithm.java
@@ -40,8 +40,8 @@ public class btConvexConvexAlgorithm extends btActivatingCollisionAlgorithm {
     super.delete();
   }
 
-  public btConvexConvexAlgorithm(btPersistentManifold mf, btCollisionAlgorithmConstructionInfo ci, btCollisionObjectWrapper body0Wrap, btCollisionObjectWrapper body1Wrap, SWIGTYPE_p_btSimplexSolverInterface simplexSolver, btConvexPenetrationDepthSolver pdSolver, int numPerturbationIterations, int minimumPointsPerturbationThreshold) {
-    this(gdxBulletJNI.new_btConvexConvexAlgorithm(btPersistentManifold.getCPtr(mf), mf, btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, btCollisionObjectWrapper.getCPtr(body0Wrap), body0Wrap, btCollisionObjectWrapper.getCPtr(body1Wrap), body1Wrap, SWIGTYPE_p_btSimplexSolverInterface.getCPtr(simplexSolver), btConvexPenetrationDepthSolver.getCPtr(pdSolver), pdSolver, numPerturbationIterations, minimumPointsPerturbationThreshold), true);
+  public btConvexConvexAlgorithm(btPersistentManifold mf, btCollisionAlgorithmConstructionInfo ci, SWIGTYPE_p_btCollisionObjectWrapper body0Wrap, SWIGTYPE_p_btCollisionObjectWrapper body1Wrap, SWIGTYPE_p_btSimplexSolverInterface simplexSolver, btConvexPenetrationDepthSolver pdSolver, int numPerturbationIterations, int minimumPointsPerturbationThreshold) {
+    this(gdxBulletJNI.new_btConvexConvexAlgorithm(btPersistentManifold.getCPtr(mf), mf, btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body0Wrap), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body1Wrap), SWIGTYPE_p_btSimplexSolverInterface.getCPtr(simplexSolver), btConvexPenetrationDepthSolver.getCPtr(pdSolver), pdSolver, numPerturbationIterations, minimumPointsPerturbationThreshold), true);
   }
 
   public void setLowLevelOfDetail(boolean useLowLevel) {
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btConvexPlaneCollisionAlgorithm.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btConvexPlaneCollisionAlgorithm.java
index 9b89e73..ae27832 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btConvexPlaneCollisionAlgorithm.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btConvexPlaneCollisionAlgorithm.java
@@ -40,12 +40,12 @@ public class btConvexPlaneCollisionAlgorithm extends btCollisionAlgorithm {
     super.delete();
   }
 
-  public btConvexPlaneCollisionAlgorithm(btPersistentManifold mf, btCollisionAlgorithmConstructionInfo ci, btCollisionObjectWrapper body0Wrap, btCollisionObjectWrapper body1Wrap, boolean isSwapped, int numPerturbationIterations, int minimumPointsPerturbationThreshold) {
-    this(gdxBulletJNI.new_btConvexPlaneCollisionAlgorithm(btPersistentManifold.getCPtr(mf), mf, btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, btCollisionObjectWrapper.getCPtr(body0Wrap), body0Wrap, btCollisionObjectWrapper.getCPtr(body1Wrap), body1Wrap, isSwapped, numPerturbationIterations, minimumPointsPerturbationThreshold), true);
+  public btConvexPlaneCollisionAlgorithm(btPersistentManifold mf, btCollisionAlgorithmConstructionInfo ci, SWIGTYPE_p_btCollisionObjectWrapper body0Wrap, SWIGTYPE_p_btCollisionObjectWrapper body1Wrap, boolean isSwapped, int numPerturbationIterations, int minimumPointsPerturbationThreshold) {
+    this(gdxBulletJNI.new_btConvexPlaneCollisionAlgorithm(btPersistentManifold.getCPtr(mf), mf, btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body0Wrap), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body1Wrap), isSwapped, numPerturbationIterations, minimumPointsPerturbationThreshold), true);
   }
 
-  public void collideSingleContact(Quaternion perturbeRot, btCollisionObjectWrapper body0Wrap, btCollisionObjectWrapper body1Wrap, btDispatcherInfo dispatchInfo, btManifoldResult resultOut) {
-    gdxBulletJNI.btConvexPlaneCollisionAlgorithm_collideSingleContact(swigCPtr, this, perturbeRot, btCollisionObjectWrapper.getCPtr(body0Wrap), body0Wrap, btCollisionObjectWrapper.getCPtr(body1Wrap), body1Wrap, btDispatcherInfo.getCPtr(dispatchInfo), dispatchInfo, btManifoldResult.getCPtr(resultOut), resultOut);
+  public void collideSingleContact(Quaternion perturbeRot, SWIGTYPE_p_btCollisionObjectWrapper body0Wrap, SWIGTYPE_p_btCollisionObjectWrapper body1Wrap, btDispatcherInfo dispatchInfo, btManifoldResult resultOut) {
+    gdxBulletJNI.btConvexPlaneCollisionAlgorithm_collideSingleContact(swigCPtr, this, perturbeRot, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body0Wrap), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body1Wrap), btDispatcherInfo.getCPtr(dispatchInfo), dispatchInfo, btManifoldResult.getCPtr(resultOut), resultOut);
   }
 
 }
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btConvexTriangleCallback.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btConvexTriangleCallback.java
index fc60404..9fe9e98 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btConvexTriangleCallback.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btConvexTriangleCallback.java
@@ -57,12 +57,12 @@ public class btConvexTriangleCallback extends btTriangleCallback {
     return (cPtr == 0) ? null : new btPersistentManifold(cPtr, false);
   }
 
-  public btConvexTriangleCallback(btDispatcher dispatcher, btCollisionObjectWrapper body0Wrap, btCollisionObjectWrapper body1Wrap, boolean isSwapped) {
-    this(gdxBulletJNI.new_btConvexTriangleCallback(btDispatcher.getCPtr(dispatcher), dispatcher, btCollisionObjectWrapper.getCPtr(body0Wrap), body0Wrap, btCollisionObjectWrapper.getCPtr(body1Wrap), body1Wrap, isSwapped), true);
+  public btConvexTriangleCallback(btDispatcher dispatcher, SWIGTYPE_p_btCollisionObjectWrapper body0Wrap, SWIGTYPE_p_btCollisionObjectWrapper body1Wrap, boolean isSwapped) {
+    this(gdxBulletJNI.new_btConvexTriangleCallback(btDispatcher.getCPtr(dispatcher), dispatcher, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body0Wrap), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body1Wrap), isSwapped), true);
   }
 
-  public void setTimeStepAndCounters(float collisionMarginTriangle, btDispatcherInfo dispatchInfo, btCollisionObjectWrapper convexBodyWrap, btCollisionObjectWrapper triBodyWrap, btManifoldResult resultOut) {
-    gdxBulletJNI.btConvexTriangleCallback_setTimeStepAndCounters(swigCPtr, this, collisionMarginTriangle, btDispatcherInfo.getCPtr(dispatchInfo), dispatchInfo, btCollisionObjectWrapper.getCPtr(convexBodyWrap), convexBodyWrap, btCollisionObjectWrapper.getCPtr(triBodyWrap), triBodyWrap, btManifoldResult.getCPtr(resultOut), resultOut);
+  public void setTimeStepAndCounters(float collisionMarginTriangle, btDispatcherInfo dispatchInfo, SWIGTYPE_p_btCollisionObjectWrapper convexBodyWrap, SWIGTYPE_p_btCollisionObjectWrapper triBodyWrap, btManifoldResult resultOut) {
+    gdxBulletJNI.btConvexTriangleCallback_setTimeStepAndCounters(swigCPtr, this, collisionMarginTriangle, btDispatcherInfo.getCPtr(dispatchInfo), dispatchInfo, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(convexBodyWrap), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(triBodyWrap), btManifoldResult.getCPtr(resultOut), resultOut);
   }
 
   public void clearWrapperData() {
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btDefaultSoftBodySolver.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btDefaultSoftBodySolver.java
index 99e962d..6df5481 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btDefaultSoftBodySolver.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btDefaultSoftBodySolver.java
@@ -64,8 +64,8 @@ public class btDefaultSoftBodySolver extends btSoftBodySolver {
     gdxBulletJNI.btDefaultSoftBodySolver_copySoftBodyToVertexBuffer(swigCPtr, this, btSoftBody.getCPtr(softBody), softBody, btVertexBufferDescriptor.getCPtr(vertexBuffer), vertexBuffer);
   }
 
-  public void processCollision(btSoftBody arg0, btCollisionObjectWrapper arg1) {
-    gdxBulletJNI.btDefaultSoftBodySolver_processCollision__SWIG_0(swigCPtr, this, btSoftBody.getCPtr(arg0), arg0, btCollisionObjectWrapper.getCPtr(arg1), arg1);
+  public void processCollision(btSoftBody arg0, SWIGTYPE_p_btCollisionObjectWrapper arg1) {
+    gdxBulletJNI.btDefaultSoftBodySolver_processCollision__SWIG_0(swigCPtr, this, btSoftBody.getCPtr(arg0), arg0, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(arg1));
   }
 
   public void processCollision(btSoftBody arg0, btSoftBody arg1) {
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btDispatcher.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btDispatcher.java
index 999329d..5d886d2 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btDispatcher.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btDispatcher.java
@@ -40,13 +40,13 @@ public class btDispatcher {
     }
   }
 
-  public btCollisionAlgorithm findAlgorithm(btCollisionObjectWrapper body0Wrap, btCollisionObjectWrapper body1Wrap, btPersistentManifold sharedManifold) {
-    long cPtr = gdxBulletJNI.btDispatcher_findAlgorithm__SWIG_0(swigCPtr, this, btCollisionObjectWrapper.getCPtr(body0Wrap), body0Wrap, btCollisionObjectWrapper.getCPtr(body1Wrap), body1Wrap, btPersistentManifold.getCPtr(sharedManifold), sharedManifold);
+  public btCollisionAlgorithm findAlgorithm(SWIGTYPE_p_btCollisionObjectWrapper body0Wrap, SWIGTYPE_p_btCollisionObjectWrapper body1Wrap, btPersistentManifold sharedManifold) {
+    long cPtr = gdxBulletJNI.btDispatcher_findAlgorithm__SWIG_0(swigCPtr, this, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body0Wrap), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body1Wrap), btPersistentManifold.getCPtr(sharedManifold), sharedManifold);
     return (cPtr == 0) ? null : new btCollisionAlgorithm(cPtr, false);
   }
 
-  public btCollisionAlgorithm findAlgorithm(btCollisionObjectWrapper body0Wrap, btCollisionObjectWrapper body1Wrap) {
-    long cPtr = gdxBulletJNI.btDispatcher_findAlgorithm__SWIG_1(swigCPtr, this, btCollisionObjectWrapper.getCPtr(body0Wrap), body0Wrap, btCollisionObjectWrapper.getCPtr(body1Wrap), body1Wrap);
+  public btCollisionAlgorithm findAlgorithm(SWIGTYPE_p_btCollisionObjectWrapper body0Wrap, SWIGTYPE_p_btCollisionObjectWrapper body1Wrap) {
+    long cPtr = gdxBulletJNI.btDispatcher_findAlgorithm__SWIG_1(swigCPtr, this, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body0Wrap), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body1Wrap));
     return (cPtr == 0) ? null : new btCollisionAlgorithm(cPtr, false);
   }
 
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btHashedOverlappingPairCache.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btHashedOverlappingPairCache.java
index 20f60b6..4b0c991 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btHashedOverlappingPairCache.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btHashedOverlappingPairCache.java
@@ -53,8 +53,8 @@ public class btHashedOverlappingPairCache extends btOverlappingPairCache {
     return (cPtr == 0) ? null : new btBroadphasePair(cPtr, false);
   }
 
-  public btBroadphasePairArray getOverlappingPairArray() {
-    return new btBroadphasePairArray(gdxBulletJNI.btHashedOverlappingPairCache_getOverlappingPairArray__SWIG_0(swigCPtr, this), false);
+  public SWIGTYPE_p_btAlignedObjectArrayT_btBroadphasePair_t getOverlappingPairArray() {
+    return new SWIGTYPE_p_btAlignedObjectArrayT_btBroadphasePair_t(gdxBulletJNI.btHashedOverlappingPairCache_getOverlappingPairArray__SWIG_0(swigCPtr, this), false);
   }
 
   public int GetCount() {
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btManifoldArray.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btManifoldArray.java
deleted file mode 100644
index e215661..0000000
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btManifoldArray.java
+++ /dev/null
@@ -1,128 +0,0 @@
-/* ----------------------------------------------------------------------------
- * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 2.0.9
- *
- * Do not make changes to this file unless you know what you are doing--modify
- * the SWIG interface file instead.
- * ----------------------------------------------------------------------------- */
-
-package com.badlogic.gdx.physics.bullet;
-
-import com.badlogic.gdx.math.Vector3;
-import com.badlogic.gdx.math.Quaternion;
-import com.badlogic.gdx.math.Matrix3;
-import com.badlogic.gdx.math.Matrix4;
-
-public class btManifoldArray {
-  private long swigCPtr;
-  protected boolean swigCMemOwn;
-
-  protected btManifoldArray(long cPtr, boolean cMemoryOwn) {
-    swigCMemOwn = cMemoryOwn;
-    swigCPtr = cPtr;
-  }
-
-  public static long getCPtr(btManifoldArray obj) {
-    return (obj == null) ? 0 : obj.swigCPtr;
-  }
-
-  protected void finalize() {
-    delete();
-  }
-
-  public synchronized void delete() {
-    if (swigCPtr != 0) {
-      if (swigCMemOwn) {
-        swigCMemOwn = false;
-        gdxBulletJNI.delete_btManifoldArray(swigCPtr);
-      }
-      swigCPtr = 0;
-    }
-  }
-
-  public btManifoldArray() {
-    this(gdxBulletJNI.new_btManifoldArray__SWIG_0(), true);
-  }
-
-  public btManifoldArray(btManifoldArray otherArray) {
-    this(gdxBulletJNI.new_btManifoldArray__SWIG_1(btManifoldArray.getCPtr(otherArray), otherArray), true);
-  }
-
-  public int size() {
-    return gdxBulletJNI.btManifoldArray_size(swigCPtr, this);
-  }
-
-  public btPersistentManifold at(int n) {
-    long cPtr = gdxBulletJNI.btManifoldArray_at__SWIG_0(swigCPtr, this, n);
-    return (cPtr == 0) ? null : new btPersistentManifold(cPtr, false);
-  }
-
-  public void clear() {
-    gdxBulletJNI.btManifoldArray_clear(swigCPtr, this);
-  }
-
-  public void pop_back() {
-    gdxBulletJNI.btManifoldArray_pop_back(swigCPtr, this);
-  }
-
-  public void resizeNoInitialize(int newsize) {
-    gdxBulletJNI.btManifoldArray_resizeNoInitialize(swigCPtr, this, newsize);
-  }
-
-  public void resize(int newsize, btPersistentManifold fillData) {
-    gdxBulletJNI.btManifoldArray_resize__SWIG_0(swigCPtr, this, newsize, btPersistentManifold.getCPtr(fillData), fillData);
-  }
-
-  public void resize(int newsize) {
-    gdxBulletJNI.btManifoldArray_resize__SWIG_1(swigCPtr, this, newsize);
-  }
-
-  public SWIGTYPE_p_p_btPersistentManifold expandNonInitializing() {
-    return new SWIGTYPE_p_p_btPersistentManifold(gdxBulletJNI.btManifoldArray_expandNonInitializing(swigCPtr, this), false);
-  }
-
-  public SWIGTYPE_p_p_btPersistentManifold expand(btPersistentManifold fillValue) {
-    return new SWIGTYPE_p_p_btPersistentManifold(gdxBulletJNI.btManifoldArray_expand__SWIG_0(swigCPtr, this, btPersistentManifold.getCPtr(fillValue), fillValue), false);
-  }
-
-  public SWIGTYPE_p_p_btPersistentManifold expand() {
-    return new SWIGTYPE_p_p_btPersistentManifold(gdxBulletJNI.btManifoldArray_expand__SWIG_1(swigCPtr, this), false);
-  }
-
-  public void push_back(btPersistentManifold _Val) {
-    gdxBulletJNI.btManifoldArray_push_back(swigCPtr, this, btPersistentManifold.getCPtr(_Val), _Val);
-  }
-
-  public int capacity() {
-    return gdxBulletJNI.btManifoldArray_capacity(swigCPtr, this);
-  }
-
-  public void reserve(int _Count) {
-    gdxBulletJNI.btManifoldArray_reserve(swigCPtr, this, _Count);
-  }
-
-  public void swap(int index0, int index1) {
-    gdxBulletJNI.btManifoldArray_swap(swigCPtr, this, index0, index1);
-  }
-
-  public int findBinarySearch(btPersistentManifold key) {
-    return gdxBulletJNI.btManifoldArray_findBinarySearch(swigCPtr, this, btPersistentManifold.getCPtr(key), key);
-  }
-
-  public int findLinearSearch(btPersistentManifold key) {
-    return gdxBulletJNI.btManifoldArray_findLinearSearch(swigCPtr, this, btPersistentManifold.getCPtr(key), key);
-  }
-
-  public void remove(btPersistentManifold key) {
-    gdxBulletJNI.btManifoldArray_remove(swigCPtr, this, btPersistentManifold.getCPtr(key), key);
-  }
-
-  public void initializeFromBuffer(SWIGTYPE_p_void buffer, int size, int capacity) {
-    gdxBulletJNI.btManifoldArray_initializeFromBuffer(swigCPtr, this, SWIGTYPE_p_void.getCPtr(buffer), size, capacity);
-  }
-
-  public void copyFromArray(btManifoldArray otherArray) {
-    gdxBulletJNI.btManifoldArray_copyFromArray(swigCPtr, this, btManifoldArray.getCPtr(otherArray), otherArray);
-  }
-
-}
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btManifoldResult.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btManifoldResult.java
index 5df209a..74e4f89 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btManifoldResult.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btManifoldResult.java
@@ -44,8 +44,8 @@ public class btManifoldResult {
     this(gdxBulletJNI.new_btManifoldResult__SWIG_0(), true);
   }
 
-  public btManifoldResult(btCollisionObjectWrapper body0Wrap, btCollisionObjectWrapper body1Wrap) {
-    this(gdxBulletJNI.new_btManifoldResult__SWIG_1(btCollisionObjectWrapper.getCPtr(body0Wrap), body0Wrap, btCollisionObjectWrapper.getCPtr(body1Wrap), body1Wrap), true);
+  public btManifoldResult(SWIGTYPE_p_btCollisionObjectWrapper body0Wrap, SWIGTYPE_p_btCollisionObjectWrapper body1Wrap) {
+    this(gdxBulletJNI.new_btManifoldResult__SWIG_1(SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body0Wrap), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body1Wrap)), true);
   }
 
   public void setPersistentManifold(btPersistentManifold manifoldPtr) {
@@ -73,22 +73,22 @@ public class btManifoldResult {
     gdxBulletJNI.btManifoldResult_refreshContactPoints(swigCPtr, this);
   }
 
-  public btCollisionObjectWrapper getBody0Wrap() {
+  public SWIGTYPE_p_btCollisionObjectWrapper getBody0Wrap() {
     long cPtr = gdxBulletJNI.btManifoldResult_getBody0Wrap(swigCPtr, this);
-    return (cPtr == 0) ? null : new btCollisionObjectWrapper(cPtr, false);
+    return (cPtr == 0) ? null : new SWIGTYPE_p_btCollisionObjectWrapper(cPtr, false);
   }
 
-  public btCollisionObjectWrapper getBody1Wrap() {
+  public SWIGTYPE_p_btCollisionObjectWrapper getBody1Wrap() {
     long cPtr = gdxBulletJNI.btManifoldResult_getBody1Wrap(swigCPtr, this);
-    return (cPtr == 0) ? null : new btCollisionObjectWrapper(cPtr, false);
+    return (cPtr == 0) ? null : new SWIGTYPE_p_btCollisionObjectWrapper(cPtr, false);
   }
 
-  public void setBody0Wrap(btCollisionObjectWrapper obj0Wrap) {
-    gdxBulletJNI.btManifoldResult_setBody0Wrap(swigCPtr, this, btCollisionObjectWrapper.getCPtr(obj0Wrap), obj0Wrap);
+  public void setBody0Wrap(SWIGTYPE_p_btCollisionObjectWrapper obj0Wrap) {
+    gdxBulletJNI.btManifoldResult_setBody0Wrap(swigCPtr, this, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(obj0Wrap));
   }
 
-  public void setBody1Wrap(btCollisionObjectWrapper obj1Wrap) {
-    gdxBulletJNI.btManifoldResult_setBody1Wrap(swigCPtr, this, btCollisionObjectWrapper.getCPtr(obj1Wrap), obj1Wrap);
+  public void setBody1Wrap(SWIGTYPE_p_btCollisionObjectWrapper obj1Wrap) {
+    gdxBulletJNI.btManifoldResult_setBody1Wrap(swigCPtr, this, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(obj1Wrap));
   }
 
   public btCollisionObject getBody0Internal() {
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btMultiSapBroadphase.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btMultiSapBroadphase.java
index 29bb6a2..73ff718 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btMultiSapBroadphase.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btMultiSapBroadphase.java
@@ -73,8 +73,8 @@ public class btMultiSapBroadphase extends btBroadphaseInterface {
     gdxBulletJNI.btMultiSapBroadphase_buildTree(swigCPtr, this, bvhAabbMin, bvhAabbMax);
   }
 
-  public void quicksort(btBroadphasePairArray a, int lo, int hi) {
-    gdxBulletJNI.btMultiSapBroadphase_quicksort(swigCPtr, this, btBroadphasePairArray.getCPtr(a), a, lo, hi);
+  public void quicksort(SWIGTYPE_p_btAlignedObjectArrayT_btBroadphasePair_t a, int lo, int hi) {
+    gdxBulletJNI.btMultiSapBroadphase_quicksort(swigCPtr, this, SWIGTYPE_p_btAlignedObjectArrayT_btBroadphasePair_t.getCPtr(a), lo, hi);
   }
 
 }
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btMultiSphereShape.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btMultiSphereShape.java
index 6a2909b..d510218 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btMultiSphereShape.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btMultiSphereShape.java
@@ -40,8 +40,13 @@ public class btMultiSphereShape extends btConvexInternalAabbCachingShape {
     super.delete();
   }
 
-  public btMultiSphereShape(Vector3[] positions, float[] radi, int numSpheres) {
-    this(gdxBulletJNI.new_btMultiSphereShape(positions, radi, numSpheres), true);
+  static private long SwigConstructbtMultiSphereShape(btVector3 positions, java.nio.FloatBuffer radi, int numSpheres) {
+    assert radi.isDirect() : "Buffer must be allocated direct.";
+    return gdxBulletJNI.new_btMultiSphereShape(btVector3.getCPtr(positions), positions, radi, numSpheres);
+  }
+
+  public btMultiSphereShape(btVector3 positions, java.nio.FloatBuffer radi, int numSpheres) {
+    this(btMultiSphereShape.SwigConstructbtMultiSphereShape(positions, radi, numSpheres), true);
   }
 
   public int getSphereCount() {
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btOverlappingPairCache.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btOverlappingPairCache.java
index 3b10703..0035b25 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btOverlappingPairCache.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btOverlappingPairCache.java
@@ -45,8 +45,8 @@ public class btOverlappingPairCache extends btOverlappingPairCallback {
     return (cPtr == 0) ? null : new btBroadphasePair(cPtr, false);
   }
 
-  public btBroadphasePairArray getOverlappingPairArray() {
-    return new btBroadphasePairArray(gdxBulletJNI.btOverlappingPairCache_getOverlappingPairArray(swigCPtr, this), false);
+  public SWIGTYPE_p_btAlignedObjectArrayT_btBroadphasePair_t getOverlappingPairArray() {
+    return new SWIGTYPE_p_btAlignedObjectArrayT_btBroadphasePair_t(gdxBulletJNI.btOverlappingPairCache_getOverlappingPairArray(swigCPtr, this), false);
   }
 
   public void cleanOverlappingPair(btBroadphasePair pair, btDispatcher dispatcher) {
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSoftBody.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSoftBody.java
index 0171613..b22295b 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSoftBody.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSoftBody.java
@@ -693,8 +693,8 @@ public class btSoftBody extends btCollisionObject {
     gdxBulletJNI.btSoftBody_integrateMotion(swigCPtr, this);
   }
 
-  public void defaultCollisionHandler(btCollisionObjectWrapper pcoWrap) {
-    gdxBulletJNI.btSoftBody_defaultCollisionHandler__SWIG_0(swigCPtr, this, btCollisionObjectWrapper.getCPtr(pcoWrap), pcoWrap);
+  public void defaultCollisionHandler(SWIGTYPE_p_btCollisionObjectWrapper pcoWrap) {
+    gdxBulletJNI.btSoftBody_defaultCollisionHandler__SWIG_0(swigCPtr, this, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(pcoWrap));
   }
 
   public void defaultCollisionHandler(btSoftBody psb) {
@@ -754,8 +754,8 @@ public class btSoftBody extends btCollisionObject {
 	return gdxBulletJNI.btSoftBody_evaluateCom(swigCPtr, this);
 }
 
-  public boolean checkContact(btCollisionObjectWrapper colObjWrap, Vector3 x, float margin, sCti cti) {
-    return gdxBulletJNI.btSoftBody_checkContact(swigCPtr, this, btCollisionObjectWrapper.getCPtr(colObjWrap), colObjWrap, x, margin, sCti.getCPtr(cti), cti);
+  public boolean checkContact(SWIGTYPE_p_btCollisionObjectWrapper colObjWrap, Vector3 x, float margin, sCti cti) {
+    return gdxBulletJNI.btSoftBody_checkContact(swigCPtr, this, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(colObjWrap), x, margin, sCti.getCPtr(cti), cti);
   }
 
   public void updateNormals() {
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSoftBodyConcaveCollisionAlgorithm.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSoftBodyConcaveCollisionAlgorithm.java
index 9cf41a8..833b862 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSoftBodyConcaveCollisionAlgorithm.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSoftBodyConcaveCollisionAlgorithm.java
@@ -40,8 +40,8 @@ public class btSoftBodyConcaveCollisionAlgorithm extends btCollisionAlgorithm {
     super.delete();
   }
 
-  public btSoftBodyConcaveCollisionAlgorithm(btCollisionAlgorithmConstructionInfo ci, btCollisionObjectWrapper body0Wrap, btCollisionObjectWrapper body1Wrap, boolean isSwapped) {
-    this(gdxBulletJNI.new_btSoftBodyConcaveCollisionAlgorithm(btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, btCollisionObjectWrapper.getCPtr(body0Wrap), body0Wrap, btCollisionObjectWrapper.getCPtr(body1Wrap), body1Wrap, isSwapped), true);
+  public btSoftBodyConcaveCollisionAlgorithm(btCollisionAlgorithmConstructionInfo ci, SWIGTYPE_p_btCollisionObjectWrapper body0Wrap, SWIGTYPE_p_btCollisionObjectWrapper body1Wrap, boolean isSwapped) {
+    this(gdxBulletJNI.new_btSoftBodyConcaveCollisionAlgorithm(btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body0Wrap), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body1Wrap), isSwapped), true);
   }
 
   public void clearCache() {
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSoftBodySolver.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSoftBodySolver.java
index a8d2a68..a0232e9 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSoftBodySolver.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSoftBodySolver.java
@@ -76,8 +76,8 @@ public class btSoftBodySolver {
     gdxBulletJNI.btSoftBodySolver_updateSoftBodies(swigCPtr, this);
   }
 
-  public void processCollision(btSoftBody arg0, btCollisionObjectWrapper arg1) {
-    gdxBulletJNI.btSoftBodySolver_processCollision__SWIG_0(swigCPtr, this, btSoftBody.getCPtr(arg0), arg0, btCollisionObjectWrapper.getCPtr(arg1), arg1);
+  public void processCollision(btSoftBody arg0, SWIGTYPE_p_btCollisionObjectWrapper arg1) {
+    gdxBulletJNI.btSoftBodySolver_processCollision__SWIG_0(swigCPtr, this, btSoftBody.getCPtr(arg0), arg0, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(arg1));
   }
 
   public void processCollision(btSoftBody arg0, btSoftBody arg1) {
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSoftBodyTriangleCallback.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSoftBodyTriangleCallback.java
index ec19d02..82cc836 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSoftBodyTriangleCallback.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSoftBodyTriangleCallback.java
@@ -48,12 +48,12 @@ public class btSoftBodyTriangleCallback extends btTriangleCallback {
     return gdxBulletJNI.btSoftBodyTriangleCallback_m_triangleCount_get(swigCPtr, this);
   }
 
-  public btSoftBodyTriangleCallback(btDispatcher dispatcher, btCollisionObjectWrapper body0Wrap, btCollisionObjectWrapper body1Wrap, boolean isSwapped) {
-    this(gdxBulletJNI.new_btSoftBodyTriangleCallback(btDispatcher.getCPtr(dispatcher), dispatcher, btCollisionObjectWrapper.getCPtr(body0Wrap), body0Wrap, btCollisionObjectWrapper.getCPtr(body1Wrap), body1Wrap, isSwapped), true);
+  public btSoftBodyTriangleCallback(btDispatcher dispatcher, SWIGTYPE_p_btCollisionObjectWrapper body0Wrap, SWIGTYPE_p_btCollisionObjectWrapper body1Wrap, boolean isSwapped) {
+    this(gdxBulletJNI.new_btSoftBodyTriangleCallback(btDispatcher.getCPtr(dispatcher), dispatcher, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body0Wrap), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body1Wrap), isSwapped), true);
   }
 
-  public void setTimeStepAndCounters(float collisionMarginTriangle, btCollisionObjectWrapper triObjWrap, btDispatcherInfo dispatchInfo, btManifoldResult resultOut) {
-    gdxBulletJNI.btSoftBodyTriangleCallback_setTimeStepAndCounters(swigCPtr, this, collisionMarginTriangle, btCollisionObjectWrapper.getCPtr(triObjWrap), triObjWrap, btDispatcherInfo.getCPtr(dispatchInfo), dispatchInfo, btManifoldResult.getCPtr(resultOut), resultOut);
+  public void setTimeStepAndCounters(float collisionMarginTriangle, SWIGTYPE_p_btCollisionObjectWrapper triObjWrap, btDispatcherInfo dispatchInfo, btManifoldResult resultOut) {
+    gdxBulletJNI.btSoftBodyTriangleCallback_setTimeStepAndCounters(swigCPtr, this, collisionMarginTriangle, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(triObjWrap), btDispatcherInfo.getCPtr(dispatchInfo), dispatchInfo, btManifoldResult.getCPtr(resultOut), resultOut);
   }
 
   public void clearCache() {
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSoftRigidCollisionAlgorithm.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSoftRigidCollisionAlgorithm.java
index 4e2a29d..592954c 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSoftRigidCollisionAlgorithm.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSoftRigidCollisionAlgorithm.java
@@ -40,8 +40,8 @@ public class btSoftRigidCollisionAlgorithm extends btCollisionAlgorithm {
     super.delete();
   }
 
-  public btSoftRigidCollisionAlgorithm(btPersistentManifold mf, btCollisionAlgorithmConstructionInfo ci, btCollisionObjectWrapper col0, btCollisionObjectWrapper col1Wrap, boolean isSwapped) {
-    this(gdxBulletJNI.new_btSoftRigidCollisionAlgorithm(btPersistentManifold.getCPtr(mf), mf, btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, btCollisionObjectWrapper.getCPtr(col0), col0, btCollisionObjectWrapper.getCPtr(col1Wrap), col1Wrap, isSwapped), true);
+  public btSoftRigidCollisionAlgorithm(btPersistentManifold mf, btCollisionAlgorithmConstructionInfo ci, SWIGTYPE_p_btCollisionObjectWrapper col0, SWIGTYPE_p_btCollisionObjectWrapper col1Wrap, boolean isSwapped) {
+    this(gdxBulletJNI.new_btSoftRigidCollisionAlgorithm(btPersistentManifold.getCPtr(mf), mf, btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(col0), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(col1Wrap), isSwapped), true);
   }
 
 }
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSoftSoftCollisionAlgorithm.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSoftSoftCollisionAlgorithm.java
index 1924ac6..efa1934 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSoftSoftCollisionAlgorithm.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSoftSoftCollisionAlgorithm.java
@@ -44,8 +44,8 @@ public class btSoftSoftCollisionAlgorithm extends btCollisionAlgorithm {
     this(gdxBulletJNI.new_btSoftSoftCollisionAlgorithm__SWIG_0(btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci), true);
   }
 
-  public btSoftSoftCollisionAlgorithm(btPersistentManifold mf, btCollisionAlgorithmConstructionInfo ci, btCollisionObjectWrapper body0Wrap, btCollisionObjectWrapper body1Wrap) {
-    this(gdxBulletJNI.new_btSoftSoftCollisionAlgorithm__SWIG_1(btPersistentManifold.getCPtr(mf), mf, btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, btCollisionObjectWrapper.getCPtr(body0Wrap), body0Wrap, btCollisionObjectWrapper.getCPtr(body1Wrap), body1Wrap), true);
+  public btSoftSoftCollisionAlgorithm(btPersistentManifold mf, btCollisionAlgorithmConstructionInfo ci, SWIGTYPE_p_btCollisionObjectWrapper body0Wrap, SWIGTYPE_p_btCollisionObjectWrapper body1Wrap) {
+    this(gdxBulletJNI.new_btSoftSoftCollisionAlgorithm__SWIG_1(btPersistentManifold.getCPtr(mf), mf, btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body0Wrap), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body1Wrap)), true);
   }
 
 }
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSortedOverlappingPairCache.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSortedOverlappingPairCache.java
index 7c1309c..80baaa8 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSortedOverlappingPairCache.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSortedOverlappingPairCache.java
@@ -48,8 +48,8 @@ public class btSortedOverlappingPairCache extends btOverlappingPairCache {
     return gdxBulletJNI.btSortedOverlappingPairCache_needsBroadphaseCollision(swigCPtr, this, btBroadphaseProxy.getCPtr(proxy0), proxy0, btBroadphaseProxy.getCPtr(proxy1), proxy1);
   }
 
-  public btBroadphasePairArray getOverlappingPairArray() {
-    return new btBroadphasePairArray(gdxBulletJNI.btSortedOverlappingPairCache_getOverlappingPairArray__SWIG_0(swigCPtr, this), false);
+  public SWIGTYPE_p_btAlignedObjectArrayT_btBroadphasePair_t getOverlappingPairArray() {
+    return new SWIGTYPE_p_btAlignedObjectArrayT_btBroadphasePair_t(gdxBulletJNI.btSortedOverlappingPairCache_getOverlappingPairArray__SWIG_0(swigCPtr, this), false);
   }
 
   public btBroadphasePair getOverlappingPairArrayPtr() {
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSphereBoxCollisionAlgorithm.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSphereBoxCollisionAlgorithm.java
index 16d5b63..fd2a89e 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSphereBoxCollisionAlgorithm.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSphereBoxCollisionAlgorithm.java
@@ -40,12 +40,12 @@ public class btSphereBoxCollisionAlgorithm extends btActivatingCollisionAlgorith
     super.delete();
   }
 
-  public btSphereBoxCollisionAlgorithm(btPersistentManifold mf, btCollisionAlgorithmConstructionInfo ci, btCollisionObjectWrapper body0Wrap, btCollisionObjectWrapper body1Wrap, boolean isSwapped) {
-    this(gdxBulletJNI.new_btSphereBoxCollisionAlgorithm(btPersistentManifold.getCPtr(mf), mf, btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, btCollisionObjectWrapper.getCPtr(body0Wrap), body0Wrap, btCollisionObjectWrapper.getCPtr(body1Wrap), body1Wrap, isSwapped), true);
+  public btSphereBoxCollisionAlgorithm(btPersistentManifold mf, btCollisionAlgorithmConstructionInfo ci, SWIGTYPE_p_btCollisionObjectWrapper body0Wrap, SWIGTYPE_p_btCollisionObjectWrapper body1Wrap, boolean isSwapped) {
+    this(gdxBulletJNI.new_btSphereBoxCollisionAlgorithm(btPersistentManifold.getCPtr(mf), mf, btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body0Wrap), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body1Wrap), isSwapped), true);
   }
 
-  public boolean getSphereDistance(btCollisionObjectWrapper boxObjWrap, Vector3 v3PointOnBox, Vector3 normal, SWIGTYPE_p_float penetrationDepth, Vector3 v3SphereCenter, float fRadius, float maxContactDistance) {
-    return gdxBulletJNI.btSphereBoxCollisionAlgorithm_getSphereDistance(swigCPtr, this, btCollisionObjectWrapper.getCPtr(boxObjWrap), boxObjWrap, v3PointOnBox, normal, SWIGTYPE_p_float.getCPtr(penetrationDepth), v3SphereCenter, fRadius, maxContactDistance);
+  public boolean getSphereDistance(SWIGTYPE_p_btCollisionObjectWrapper boxObjWrap, Vector3 v3PointOnBox, Vector3 normal, SWIGTYPE_p_float penetrationDepth, Vector3 v3SphereCenter, float fRadius, float maxContactDistance) {
+    return gdxBulletJNI.btSphereBoxCollisionAlgorithm_getSphereDistance(swigCPtr, this, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(boxObjWrap), v3PointOnBox, normal, SWIGTYPE_p_float.getCPtr(penetrationDepth), v3SphereCenter, fRadius, maxContactDistance);
   }
 
   public float getSpherePenetration(Vector3 boxHalfExtent, Vector3 sphereRelPos, Vector3 closestPoint, Vector3 normal) {
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSphereSphereCollisionAlgorithm.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSphereSphereCollisionAlgorithm.java
index d73c516..d26d277 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSphereSphereCollisionAlgorithm.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSphereSphereCollisionAlgorithm.java
@@ -40,8 +40,8 @@ public class btSphereSphereCollisionAlgorithm extends btActivatingCollisionAlgor
     super.delete();
   }
 
-  public btSphereSphereCollisionAlgorithm(btPersistentManifold mf, btCollisionAlgorithmConstructionInfo ci, btCollisionObjectWrapper col0Wrap, btCollisionObjectWrapper col1Wrap) {
-    this(gdxBulletJNI.new_btSphereSphereCollisionAlgorithm__SWIG_0(btPersistentManifold.getCPtr(mf), mf, btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, btCollisionObjectWrapper.getCPtr(col0Wrap), col0Wrap, btCollisionObjectWrapper.getCPtr(col1Wrap), col1Wrap), true);
+  public btSphereSphereCollisionAlgorithm(btPersistentManifold mf, btCollisionAlgorithmConstructionInfo ci, SWIGTYPE_p_btCollisionObjectWrapper col0Wrap, SWIGTYPE_p_btCollisionObjectWrapper col1Wrap) {
+    this(gdxBulletJNI.new_btSphereSphereCollisionAlgorithm__SWIG_0(btPersistentManifold.getCPtr(mf), mf, btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(col0Wrap), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(col1Wrap)), true);
   }
 
   public btSphereSphereCollisionAlgorithm(btCollisionAlgorithmConstructionInfo ci) {
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSphereTriangleCollisionAlgorithm.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSphereTriangleCollisionAlgorithm.java
index 4a7231f..57fc4cb 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSphereTriangleCollisionAlgorithm.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSphereTriangleCollisionAlgorithm.java
@@ -40,8 +40,8 @@ public class btSphereTriangleCollisionAlgorithm extends btActivatingCollisionAlg
     super.delete();
   }
 
-  public btSphereTriangleCollisionAlgorithm(btPersistentManifold mf, btCollisionAlgorithmConstructionInfo ci, btCollisionObjectWrapper body0Wrap, btCollisionObjectWrapper body1Wrap, boolean swapped) {
-    this(gdxBulletJNI.new_btSphereTriangleCollisionAlgorithm__SWIG_0(btPersistentManifold.getCPtr(mf), mf, btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, btCollisionObjectWrapper.getCPtr(body0Wrap), body0Wrap, btCollisionObjectWrapper.getCPtr(body1Wrap), body1Wrap, swapped), true);
+  public btSphereTriangleCollisionAlgorithm(btPersistentManifold mf, btCollisionAlgorithmConstructionInfo ci, SWIGTYPE_p_btCollisionObjectWrapper body0Wrap, SWIGTYPE_p_btCollisionObjectWrapper body1Wrap, boolean swapped) {
+    this(gdxBulletJNI.new_btSphereTriangleCollisionAlgorithm__SWIG_0(btPersistentManifold.getCPtr(mf), mf, btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body0Wrap), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body1Wrap), swapped), true);
   }
 
   public btSphereTriangleCollisionAlgorithm(btCollisionAlgorithmConstructionInfo ci) {
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/gdxBullet.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/gdxBullet.java
index ac5f86d..e9a79a5 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/gdxBullet.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/gdxBullet.java
@@ -400,12 +400,12 @@ public class gdxBullet implements gdxBulletConstants {
     gdxBulletJNI.btGenerateInternalEdgeInfo(btBvhTriangleMeshShape.getCPtr(trimeshShape), trimeshShape, btTriangleInfoMap.getCPtr(triangleInfoMap), triangleInfoMap);
   }
 
-  public static void btAdjustInternalEdgeContacts(btManifoldPoint cp, btCollisionObjectWrapper trimeshColObj0Wrap, btCollisionObjectWrapper otherColObj1Wrap, int partId0, int index0, int normalAdjustFlags) {
-    gdxBulletJNI.btAdjustInternalEdgeContacts__SWIG_0(btManifoldPoint.getCPtr(cp), cp, btCollisionObjectWrapper.getCPtr(trimeshColObj0Wrap), trimeshColObj0Wrap, btCollisionObjectWrapper.getCPtr(otherColObj1Wrap), otherColObj1Wrap, partId0, index0, normalAdjustFlags);
+  public static void btAdjustInternalEdgeContacts(btManifoldPoint cp, SWIGTYPE_p_btCollisionObjectWrapper trimeshColObj0Wrap, SWIGTYPE_p_btCollisionObjectWrapper otherColObj1Wrap, int partId0, int index0, int normalAdjustFlags) {
+    gdxBulletJNI.btAdjustInternalEdgeContacts__SWIG_0(btManifoldPoint.getCPtr(cp), cp, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(trimeshColObj0Wrap), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(otherColObj1Wrap), partId0, index0, normalAdjustFlags);
   }
 
-  public static void btAdjustInternalEdgeContacts(btManifoldPoint cp, btCollisionObjectWrapper trimeshColObj0Wrap, btCollisionObjectWrapper otherColObj1Wrap, int partId0, int index0) {
-    gdxBulletJNI.btAdjustInternalEdgeContacts__SWIG_1(btManifoldPoint.getCPtr(cp), cp, btCollisionObjectWrapper.getCPtr(trimeshColObj0Wrap), trimeshColObj0Wrap, btCollisionObjectWrapper.getCPtr(otherColObj1Wrap), otherColObj1Wrap, partId0, index0);
+  public static void btAdjustInternalEdgeContacts(btManifoldPoint cp, SWIGTYPE_p_btCollisionObjectWrapper trimeshColObj0Wrap, SWIGTYPE_p_btCollisionObjectWrapper otherColObj1Wrap, int partId0, int index0) {
+    gdxBulletJNI.btAdjustInternalEdgeContacts__SWIG_1(btManifoldPoint.getCPtr(cp), cp, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(trimeshColObj0Wrap), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(otherColObj1Wrap), partId0, index0);
   }
 
   public static void setGContactBreakingThreshold(float value) {
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/gdxBulletJNI.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/gdxBulletJNI.java
index 9a7fa59..fc542e9 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/gdxBulletJNI.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/gdxBulletJNI.java
@@ -907,7 +907,7 @@ public class gdxBulletJNI {
   public final static native boolean btMultiSapBroadphase_testAabbOverlap(long jarg1, btMultiSapBroadphase jarg1_, long jarg2, btBroadphaseProxy jarg2_, long jarg3, btBroadphaseProxy jarg3_);
   public final static native long btMultiSapBroadphase_getOverlappingPairCache__SWIG_0(long jarg1, btMultiSapBroadphase jarg1_);
   public final static native void btMultiSapBroadphase_buildTree(long jarg1, btMultiSapBroadphase jarg1_, Vector3 jarg2, Vector3 jarg3);
-  public final static native void btMultiSapBroadphase_quicksort(long jarg1, btMultiSapBroadphase jarg1_, long jarg2, btBroadphasePairArray jarg2_, int jarg3, int jarg4);
+  public final static native void btMultiSapBroadphase_quicksort(long jarg1, btMultiSapBroadphase jarg1_, long jarg2, int jarg3, int jarg4);
   public final static native long new_btCollisionAlgorithmConstructionInfo__SWIG_0();
   public final static native long new_btCollisionAlgorithmConstructionInfo__SWIG_1(long jarg1, btDispatcher jarg1_, int jarg2);
   public final static native void btCollisionAlgorithmConstructionInfo_m_dispatcher1_set(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_, long jarg2, btDispatcher jarg2_);
@@ -916,9 +916,9 @@ public class gdxBulletJNI {
   public final static native long btCollisionAlgorithmConstructionInfo_m_manifold_get(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_);
   public final static native void delete_btCollisionAlgorithmConstructionInfo(long jarg1);
   public final static native void delete_btCollisionAlgorithm(long jarg1);
-  public final static native void btCollisionAlgorithm_processCollision(long jarg1, btCollisionAlgorithm jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btDispatcherInfo jarg4_, long jarg5, btManifoldResult jarg5_);
+  public final static native void btCollisionAlgorithm_processCollision(long jarg1, btCollisionAlgorithm jarg1_, long jarg2, long jarg3, long jarg4, btDispatcherInfo jarg4_, long jarg5, btManifoldResult jarg5_);
   public final static native float btCollisionAlgorithm_calculateTimeOfImpact(long jarg1, btCollisionAlgorithm jarg1_, long jarg2, btCollisionObject jarg2_, long jarg3, btCollisionObject jarg3_, long jarg4, btDispatcherInfo jarg4_, long jarg5, btManifoldResult jarg5_);
-  public final static native void btCollisionAlgorithm_getAllContactManifolds(long jarg1, btCollisionAlgorithm jarg1_, long jarg2, btManifoldArray jarg2_);
+  public final static native void btCollisionAlgorithm_getAllContactManifolds(long jarg1, btCollisionAlgorithm jarg1_, long jarg2);
   public final static native void delete_btOverlappingPairCallback(long jarg1);
   public final static native long btOverlappingPairCallback_addOverlappingPair(long jarg1, btOverlappingPairCallback jarg1_, long jarg2, btBroadphaseProxy jarg2_, long jarg3, btBroadphaseProxy jarg3_);
   public final static native long btOverlappingPairCallback_removeOverlappingPair(long jarg1, btOverlappingPairCallback jarg1_, long jarg2, btBroadphaseProxy jarg2_, long jarg3, btBroadphaseProxy jarg3_, long jarg4, btDispatcher jarg4_);
@@ -1002,8 +1002,8 @@ public class gdxBulletJNI {
   public final static native long btDispatcherInfo_m_stackAllocator_get(long jarg1, btDispatcherInfo jarg1_);
   public final static native void delete_btDispatcherInfo(long jarg1);
   public final static native void delete_btDispatcher(long jarg1);
-  public final static native long btDispatcher_findAlgorithm__SWIG_0(long jarg1, btDispatcher jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btPersistentManifold jarg4_);
-  public final static native long btDispatcher_findAlgorithm__SWIG_1(long jarg1, btDispatcher jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_);
+  public final static native long btDispatcher_findAlgorithm__SWIG_0(long jarg1, btDispatcher jarg1_, long jarg2, long jarg3, long jarg4, btPersistentManifold jarg4_);
+  public final static native long btDispatcher_findAlgorithm__SWIG_1(long jarg1, btDispatcher jarg1_, long jarg2, long jarg3);
   public final static native long btDispatcher_getNewManifold(long jarg1, btDispatcher jarg1_, long jarg2, btCollisionObject jarg2_, long jarg3, btCollisionObject jarg3_);
   public final static native void btDispatcher_releaseManifold(long jarg1, btDispatcher jarg1_, long jarg2, btPersistentManifold jarg2_);
   public final static native void btDispatcher_clearManifold(long jarg1, btDispatcher jarg1_, long jarg2, btPersistentManifold jarg2_);
@@ -1316,6 +1316,27 @@ public class gdxBulletJNI {
   public final static native float btSphereShape_getRadius(long jarg1, btSphereShape jarg1_);
   public final static native void btSphereShape_setUnscaledRadius(long jarg1, btSphereShape jarg1_, float jarg2);
   public final static native void delete_btSphereShape(long jarg1);
+  public final static native long new_btMultiSphereShape(long jarg1, btVector3 jarg1_, java.nio.FloatBuffer jarg2, int jarg3);
+  public final static native int btMultiSphereShape_getSphereCount(long jarg1, btMultiSphereShape jarg1_);
+  public final static native Vector3 btMultiSphereShape_getSpherePosition(long jarg1, btMultiSphereShape jarg1_, int jarg2);
+  public final static native float btMultiSphereShape_getSphereRadius(long jarg1, btMultiSphereShape jarg1_, int jarg2);
+  public final static native void delete_btMultiSphereShape(long jarg1);
+  public final static native void btPositionAndRadius_m_pos_set(long jarg1, btPositionAndRadius jarg1_, long jarg2, btVector3FloatData jarg2_);
+  public final static native long btPositionAndRadius_m_pos_get(long jarg1, btPositionAndRadius jarg1_);
+  public final static native void btPositionAndRadius_m_radius_set(long jarg1, btPositionAndRadius jarg1_, float jarg2);
+  public final static native float btPositionAndRadius_m_radius_get(long jarg1, btPositionAndRadius jarg1_);
+  public final static native long new_btPositionAndRadius();
+  public final static native void delete_btPositionAndRadius(long jarg1);
+  public final static native void btMultiSphereShapeData_m_convexInternalShapeData_set(long jarg1, btMultiSphereShapeData jarg1_, long jarg2, btConvexInternalShapeData jarg2_);
+  public final static native long btMultiSphereShapeData_m_convexInternalShapeData_get(long jarg1, btMultiSphereShapeData jarg1_);
+  public final static native void btMultiSphereShapeData_m_localPositionArrayPtr_set(long jarg1, btMultiSphereShapeData jarg1_, long jarg2, btPositionAndRadius jarg2_);
+  public final static native long btMultiSphereShapeData_m_localPositionArrayPtr_get(long jarg1, btMultiSphereShapeData jarg1_);
+  public final static native void btMultiSphereShapeData_m_localPositionArraySize_set(long jarg1, btMultiSphereShapeData jarg1_, int jarg2);
+  public final static native int btMultiSphereShapeData_m_localPositionArraySize_get(long jarg1, btMultiSphereShapeData jarg1_);
+  public final static native void btMultiSphereShapeData_m_padding_set(long jarg1, btMultiSphereShapeData jarg1_, String jarg2);
+  public final static native String btMultiSphereShapeData_m_padding_get(long jarg1, btMultiSphereShapeData jarg1_);
+  public final static native long new_btMultiSphereShapeData();
+  public final static native void delete_btMultiSphereShapeData(long jarg1);
   public final static native void delete_btStridingMeshInterface(long jarg1);
   public final static native void btStridingMeshInterface_InternalProcessAllTriangles(long jarg1, btStridingMeshInterface jarg1_, long jarg2, btInternalTriangleIndexCallback jarg2_, Vector3 jarg3, Vector3 jarg4);
   public final static native void btStridingMeshInterface_calculateAabbBruteForce(long jarg1, btStridingMeshInterface jarg1_, Vector3 jarg2, Vector3 jarg3);
@@ -1743,8 +1764,6 @@ public class gdxBulletJNI {
   public final static native void btCollisionObject_getInterpolationWorldTransform__SWIG_2(long jarg1, btCollisionObject jarg1_, Matrix4 jarg2);
   public final static native void btCollisionObject_getInterpolationLinearVelocity__SWIG_1(long jarg1, btCollisionObject jarg1_, Vector3 jarg2);
   public final static native void btCollisionObject_getInterpolationAngularVelocity__SWIG_1(long jarg1, btCollisionObject jarg1_, Vector3 jarg2);
-  public final static native int btCollisionObject_getUserValue(long jarg1, btCollisionObject jarg1_);
-  public final static native void btCollisionObject_setUserValue(long jarg1, btCollisionObject jarg1_, int jarg2);
   public final static native void btCollisionObjectDoubleData_m_broadphaseHandle_set(long jarg1, btCollisionObjectDoubleData jarg1_, long jarg2);
   public final static native long btCollisionObjectDoubleData_m_broadphaseHandle_get(long jarg1, btCollisionObjectDoubleData jarg1_);
   public final static native void btCollisionObjectDoubleData_m_collisionShape_set(long jarg1, btCollisionObjectDoubleData jarg1_, long jarg2);
@@ -2059,16 +2078,6 @@ public class gdxBulletJNI {
   public final static native String btRigidBodyDoubleData_m_padding_get(long jarg1, btRigidBodyDoubleData jarg1_);
   public final static native long new_btRigidBodyDoubleData();
   public final static native void delete_btRigidBodyDoubleData(long jarg1);
-  public final static native void btCollisionObjectWrapper_m_parent_set(long jarg1, btCollisionObjectWrapper jarg1_, long jarg2, btCollisionObjectWrapper jarg2_);
-  public final static native long btCollisionObjectWrapper_m_parent_get(long jarg1, btCollisionObjectWrapper jarg1_);
-  public final static native void btCollisionObjectWrapper_m_shape_set(long jarg1, btCollisionObjectWrapper jarg1_, long jarg2, btCollisionShape jarg2_);
-  public final static native long btCollisionObjectWrapper_m_shape_get(long jarg1, btCollisionObjectWrapper jarg1_);
-  public final static native void btCollisionObjectWrapper_m_collisionObject_set(long jarg1, btCollisionObjectWrapper jarg1_, long jarg2, btCollisionObject jarg2_);
-  public final static native long btCollisionObjectWrapper_m_collisionObject_get(long jarg1, btCollisionObjectWrapper jarg1_);
-  public final static native Matrix4 btCollisionObjectWrapper_m_worldTransform_get(long jarg1, btCollisionObjectWrapper jarg1_);
-  public final static native Matrix4 btCollisionObjectWrapper_getWorldTransform(long jarg1, btCollisionObjectWrapper jarg1_);
-  public final static native long btCollisionObjectWrapper_getCollisionObject(long jarg1, btCollisionObjectWrapper jarg1_);
-  public final static native long btCollisionObjectWrapper_getCollisionShape(long jarg1, btCollisionObjectWrapper jarg1_);
   public final static native long new_btEmptyAlgorithm(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_);
   public final static native void delete_btEmptyAlgorithm(long jarg1);
   public final static native void delete_btActivatingCollisionAlgorithm(long jarg1);
@@ -2076,19 +2085,19 @@ public class gdxBulletJNI {
   public final static native int btConvexTriangleCallback_m_triangleCount_get(long jarg1, btConvexTriangleCallback jarg1_);
   public final static native void btConvexTriangleCallback_m_manifoldPtr_set(long jarg1, btConvexTriangleCallback jarg1_, long jarg2, btPersistentManifold jarg2_);
   public final static native long btConvexTriangleCallback_m_manifoldPtr_get(long jarg1, btConvexTriangleCallback jarg1_);
-  public final static native long new_btConvexTriangleCallback(long jarg1, btDispatcher jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, boolean jarg4);
-  public final static native void btConvexTriangleCallback_setTimeStepAndCounters(long jarg1, btConvexTriangleCallback jarg1_, float jarg2, long jarg3, btDispatcherInfo jarg3_, long jarg4, btCollisionObjectWrapper jarg4_, long jarg5, btCollisionObjectWrapper jarg5_, long jarg6, btManifoldResult jarg6_);
+  public final static native long new_btConvexTriangleCallback(long jarg1, btDispatcher jarg1_, long jarg2, long jarg3, boolean jarg4);
+  public final static native void btConvexTriangleCallback_setTimeStepAndCounters(long jarg1, btConvexTriangleCallback jarg1_, float jarg2, long jarg3, btDispatcherInfo jarg3_, long jarg4, long jarg5, long jarg6, btManifoldResult jarg6_);
   public final static native void btConvexTriangleCallback_clearWrapperData(long jarg1, btConvexTriangleCallback jarg1_);
   public final static native void delete_btConvexTriangleCallback(long jarg1);
   public final static native void btConvexTriangleCallback_clearCache(long jarg1, btConvexTriangleCallback jarg1_);
   public final static native Vector3 btConvexTriangleCallback_getAabbMin(long jarg1, btConvexTriangleCallback jarg1_);
   public final static native Vector3 btConvexTriangleCallback_getAabbMax(long jarg1, btConvexTriangleCallback jarg1_);
-  public final static native long new_btConvexConcaveCollisionAlgorithm(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, boolean jarg4);
+  public final static native long new_btConvexConcaveCollisionAlgorithm(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_, long jarg2, long jarg3, boolean jarg4);
   public final static native void delete_btConvexConcaveCollisionAlgorithm(long jarg1);
   public final static native void btConvexConcaveCollisionAlgorithm_clearCache(long jarg1, btConvexConcaveCollisionAlgorithm jarg1_);
-  public final static native long new_btConvexPlaneCollisionAlgorithm(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_, boolean jarg5, int jarg6, int jarg7);
+  public final static native long new_btConvexPlaneCollisionAlgorithm(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, long jarg4, boolean jarg5, int jarg6, int jarg7);
   public final static native void delete_btConvexPlaneCollisionAlgorithm(long jarg1);
-  public final static native void btConvexPlaneCollisionAlgorithm_collideSingleContact(long jarg1, btConvexPlaneCollisionAlgorithm jarg1_, Quaternion jarg2, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_, long jarg5, btDispatcherInfo jarg5_, long jarg6, btManifoldResult jarg6_);
+  public final static native void btConvexPlaneCollisionAlgorithm_collideSingleContact(long jarg1, btConvexPlaneCollisionAlgorithm jarg1_, Quaternion jarg2, long jarg3, long jarg4, long jarg5, btDispatcherInfo jarg5_, long jarg6, btManifoldResult jarg6_);
   public final static native void delete_btCollisionConfiguration(long jarg1);
   public final static native long btCollisionConfiguration_getPersistentManifoldPool(long jarg1, btCollisionConfiguration jarg1_);
   public final static native long btCollisionConfiguration_getCollisionAlgorithmPool(long jarg1, btCollisionConfiguration jarg1_);
@@ -2125,7 +2134,7 @@ public class gdxBulletJNI {
   public final static native void gContactAddedCallback_set(long jarg1);
   public final static native long gContactAddedCallback_get();
   public final static native long new_btManifoldResult__SWIG_0();
-  public final static native long new_btManifoldResult__SWIG_1(long jarg1, btCollisionObjectWrapper jarg1_, long jarg2, btCollisionObjectWrapper jarg2_);
+  public final static native long new_btManifoldResult__SWIG_1(long jarg1, long jarg2);
   public final static native void delete_btManifoldResult(long jarg1);
   public final static native void btManifoldResult_setPersistentManifold(long jarg1, btManifoldResult jarg1_, long jarg2, btPersistentManifold jarg2_);
   public final static native long btManifoldResult_getPersistentManifold__SWIG_0(long jarg1, btManifoldResult jarg1_);
@@ -2135,23 +2144,23 @@ public class gdxBulletJNI {
   public final static native void btManifoldResult_refreshContactPoints(long jarg1, btManifoldResult jarg1_);
   public final static native long btManifoldResult_getBody0Wrap(long jarg1, btManifoldResult jarg1_);
   public final static native long btManifoldResult_getBody1Wrap(long jarg1, btManifoldResult jarg1_);
-  public final static native void btManifoldResult_setBody0Wrap(long jarg1, btManifoldResult jarg1_, long jarg2, btCollisionObjectWrapper jarg2_);
-  public final static native void btManifoldResult_setBody1Wrap(long jarg1, btManifoldResult jarg1_, long jarg2, btCollisionObjectWrapper jarg2_);
+  public final static native void btManifoldResult_setBody0Wrap(long jarg1, btManifoldResult jarg1_, long jarg2);
+  public final static native void btManifoldResult_setBody1Wrap(long jarg1, btManifoldResult jarg1_, long jarg2);
   public final static native long btManifoldResult_getBody0Internal(long jarg1, btManifoldResult jarg1_);
   public final static native long btManifoldResult_getBody1Internal(long jarg1, btManifoldResult jarg1_);
-  public final static native long new_btSphereSphereCollisionAlgorithm__SWIG_0(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_);
+  public final static native long new_btSphereSphereCollisionAlgorithm__SWIG_0(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, long jarg4);
   public final static native long new_btSphereSphereCollisionAlgorithm__SWIG_1(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_);
   public final static native void delete_btSphereSphereCollisionAlgorithm(long jarg1);
   public final static native long new_btBoxBoxCollisionAlgorithm__SWIG_0(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_);
-  public final static native long new_btBoxBoxCollisionAlgorithm__SWIG_1(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_);
+  public final static native long new_btBoxBoxCollisionAlgorithm__SWIG_1(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, long jarg4);
   public final static native void delete_btBoxBoxCollisionAlgorithm(long jarg1);
   public final static native void btCollisionAlgorithmCreateFunc_m_swapped_set(long jarg1, btCollisionAlgorithmCreateFunc jarg1_, boolean jarg2);
   public final static native boolean btCollisionAlgorithmCreateFunc_m_swapped_get(long jarg1, btCollisionAlgorithmCreateFunc jarg1_);
   public final static native long new_btCollisionAlgorithmCreateFunc();
   public final static native void delete_btCollisionAlgorithmCreateFunc(long jarg1);
-  public final static native long btCollisionAlgorithmCreateFunc_CreateCollisionAlgorithm(long jarg1, btCollisionAlgorithmCreateFunc jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_);
+  public final static native long btCollisionAlgorithmCreateFunc_CreateCollisionAlgorithm(long jarg1, btCollisionAlgorithmCreateFunc jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, long jarg4);
   public final static native long new_btBox2dBox2dCollisionAlgorithm__SWIG_0(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_);
-  public final static native long new_btBox2dBox2dCollisionAlgorithm__SWIG_1(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_);
+  public final static native long new_btBox2dBox2dCollisionAlgorithm__SWIG_1(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, long jarg4);
   public final static native void delete_btBox2dBox2dCollisionAlgorithm(long jarg1);
   public final static native void btElement_m_id_set(long jarg1, btElement jarg1_, int jarg2);
   public final static native int btElement_m_id_get(long jarg1, btElement jarg1_);
@@ -2171,7 +2180,7 @@ public class gdxBulletJNI {
   public final static native int btUnionFind_find__SWIG_0(long jarg1, btUnionFind jarg1_, int jarg2, int jarg3);
   public final static native void btUnionFind_unite(long jarg1, btUnionFind jarg1_, int jarg2, int jarg3);
   public final static native int btUnionFind_find__SWIG_1(long jarg1, btUnionFind jarg1_, int jarg2);
-  public final static native long new_btSphereTriangleCollisionAlgorithm__SWIG_0(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_, boolean jarg5);
+  public final static native long new_btSphereTriangleCollisionAlgorithm__SWIG_0(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, long jarg4, boolean jarg5);
   public final static native long new_btSphereTriangleCollisionAlgorithm__SWIG_1(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_);
   public final static native void delete_btSphereTriangleCollisionAlgorithm(long jarg1);
   public final static native long new_btSimulationIslandManager();
@@ -2235,12 +2244,8 @@ public class gdxBulletJNI {
   public final static native long RayResultCallback_m_flags_get(long jarg1, RayResultCallback jarg1_);
   public final static native void delete_RayResultCallback(long jarg1);
   public final static native boolean RayResultCallback_hasHit(long jarg1, RayResultCallback jarg1_);
-  public final static native long new_RayResultCallback();
   public final static native boolean RayResultCallback_needsCollision(long jarg1, RayResultCallback jarg1_, long jarg2, btBroadphaseProxy jarg2_);
-  public final static native boolean RayResultCallback_needsCollisionSwigExplicitRayResultCallback(long jarg1, RayResultCallback jarg1_, long jarg2, btBroadphaseProxy jarg2_);
   public final static native float RayResultCallback_addSingleResult(long jarg1, RayResultCallback jarg1_, long jarg2, LocalRayResult jarg2_, boolean jarg3);
-  public final static native void RayResultCallback_director_connect(RayResultCallback obj, long cptr, boolean mem_own, boolean weak_global);
-  public final static native void RayResultCallback_change_ownership(RayResultCallback obj, long cptr, boolean take_or_release);
   public final static native long new_ClosestRayResultCallback(Vector3 jarg1, Vector3 jarg2);
   public final static native void ClosestRayResultCallback_m_rayFromWorld_set(long jarg1, ClosestRayResultCallback jarg1_, long jarg2, btVector3 jarg2_);
   public final static native long ClosestRayResultCallback_m_rayFromWorld_get(long jarg1, ClosestRayResultCallback jarg1_);
@@ -2250,11 +2255,7 @@ public class gdxBulletJNI {
   public final static native long ClosestRayResultCallback_m_hitNormalWorld_get(long jarg1, ClosestRayResultCallback jarg1_);
   public final static native void ClosestRayResultCallback_m_hitPointWorld_set(long jarg1, ClosestRayResultCallback jarg1_, long jarg2, btVector3 jarg2_);
   public final static native long ClosestRayResultCallback_m_hitPointWorld_get(long jarg1, ClosestRayResultCallback jarg1_);
-  public final static native float ClosestRayResultCallback_addSingleResult(long jarg1, ClosestRayResultCallback jarg1_, long jarg2, LocalRayResult jarg2_, boolean jarg3);
-  public final static native float ClosestRayResultCallback_addSingleResultSwigExplicitClosestRayResultCallback(long jarg1, ClosestRayResultCallback jarg1_, long jarg2, LocalRayResult jarg2_, boolean jarg3);
   public final static native void delete_ClosestRayResultCallback(long jarg1);
-  public final static native void ClosestRayResultCallback_director_connect(ClosestRayResultCallback obj, long cptr, boolean mem_own, boolean weak_global);
-  public final static native void ClosestRayResultCallback_change_ownership(ClosestRayResultCallback obj, long cptr, boolean take_or_release);
   public final static native long new_AllHitsRayResultCallback(Vector3 jarg1, Vector3 jarg2);
   public final static native void AllHitsRayResultCallback_m_collisionObjects_set(long jarg1, AllHitsRayResultCallback jarg1_, long jarg2);
   public final static native long AllHitsRayResultCallback_m_collisionObjects_get(long jarg1, AllHitsRayResultCallback jarg1_);
@@ -2268,11 +2269,7 @@ public class gdxBulletJNI {
   public final static native long AllHitsRayResultCallback_m_hitPointWorld_get(long jarg1, AllHitsRayResultCallback jarg1_);
   public final static native void AllHitsRayResultCallback_m_hitFractions_set(long jarg1, AllHitsRayResultCallback jarg1_, long jarg2);
   public final static native long AllHitsRayResultCallback_m_hitFractions_get(long jarg1, AllHitsRayResultCallback jarg1_);
-  public final static native float AllHitsRayResultCallback_addSingleResult(long jarg1, AllHitsRayResultCallback jarg1_, long jarg2, LocalRayResult jarg2_, boolean jarg3);
-  public final static native float AllHitsRayResultCallback_addSingleResultSwigExplicitAllHitsRayResultCallback(long jarg1, AllHitsRayResultCallback jarg1_, long jarg2, LocalRayResult jarg2_, boolean jarg3);
   public final static native void delete_AllHitsRayResultCallback(long jarg1);
-  public final static native void AllHitsRayResultCallback_director_connect(AllHitsRayResultCallback obj, long cptr, boolean mem_own, boolean weak_global);
-  public final static native void AllHitsRayResultCallback_change_ownership(AllHitsRayResultCallback obj, long cptr, boolean take_or_release);
   public final static native long new_LocalConvexResult(long jarg1, btCollisionObject jarg1_, long jarg2, LocalShapeInfo jarg2_, Vector3 jarg3, Vector3 jarg4, float jarg5);
   public final static native void LocalConvexResult_m_hitCollisionObject_set(long jarg1, LocalConvexResult jarg1_, long jarg2, btCollisionObject jarg2_);
   public final static native long LocalConvexResult_m_hitCollisionObject_get(long jarg1, LocalConvexResult jarg1_);
@@ -2291,14 +2288,10 @@ public class gdxBulletJNI {
   public final static native short ConvexResultCallback_m_collisionFilterGroup_get(long jarg1, ConvexResultCallback jarg1_);
   public final static native void ConvexResultCallback_m_collisionFilterMask_set(long jarg1, ConvexResultCallback jarg1_, short jarg2);
   public final static native short ConvexResultCallback_m_collisionFilterMask_get(long jarg1, ConvexResultCallback jarg1_);
-  public final static native long new_ConvexResultCallback();
   public final static native void delete_ConvexResultCallback(long jarg1);
   public final static native boolean ConvexResultCallback_hasHit(long jarg1, ConvexResultCallback jarg1_);
   public final static native boolean ConvexResultCallback_needsCollision(long jarg1, ConvexResultCallback jarg1_, long jarg2, btBroadphaseProxy jarg2_);
-  public final static native boolean ConvexResultCallback_needsCollisionSwigExplicitConvexResultCallback(long jarg1, ConvexResultCallback jarg1_, long jarg2, btBroadphaseProxy jarg2_);
   public final static native float ConvexResultCallback_addSingleResult(long jarg1, ConvexResultCallback jarg1_, long jarg2, LocalConvexResult jarg2_, boolean jarg3);
-  public final static native void ConvexResultCallback_director_connect(ConvexResultCallback obj, long cptr, boolean mem_own, boolean weak_global);
-  public final static native void ConvexResultCallback_change_ownership(ConvexResultCallback obj, long cptr, boolean take_or_release);
   public final static native long new_ClosestConvexResultCallback(Vector3 jarg1, Vector3 jarg2);
   public final static native void ClosestConvexResultCallback_m_convexFromWorld_set(long jarg1, ClosestConvexResultCallback jarg1_, long jarg2, btVector3 jarg2_);
   public final static native long ClosestConvexResultCallback_m_convexFromWorld_get(long jarg1, ClosestConvexResultCallback jarg1_);
@@ -2310,22 +2303,14 @@ public class gdxBulletJNI {
   public final static native long ClosestConvexResultCallback_m_hitPointWorld_get(long jarg1, ClosestConvexResultCallback jarg1_);
   public final static native void ClosestConvexResultCallback_m_hitCollisionObject_set(long jarg1, ClosestConvexResultCallback jarg1_, long jarg2, btCollisionObject jarg2_);
   public final static native long ClosestConvexResultCallback_m_hitCollisionObject_get(long jarg1, ClosestConvexResultCallback jarg1_);
-  public final static native float ClosestConvexResultCallback_addSingleResult(long jarg1, ClosestConvexResultCallback jarg1_, long jarg2, LocalConvexResult jarg2_, boolean jarg3);
-  public final static native float ClosestConvexResultCallback_addSingleResultSwigExplicitClosestConvexResultCallback(long jarg1, ClosestConvexResultCallback jarg1_, long jarg2, LocalConvexResult jarg2_, boolean jarg3);
   public final static native void delete_ClosestConvexResultCallback(long jarg1);
-  public final static native void ClosestConvexResultCallback_director_connect(ClosestConvexResultCallback obj, long cptr, boolean mem_own, boolean weak_global);
-  public final static native void ClosestConvexResultCallback_change_ownership(ClosestConvexResultCallback obj, long cptr, boolean take_or_release);
   public final static native void ContactResultCallback_m_collisionFilterGroup_set(long jarg1, ContactResultCallback jarg1_, short jarg2);
   public final static native short ContactResultCallback_m_collisionFilterGroup_get(long jarg1, ContactResultCallback jarg1_);
   public final static native void ContactResultCallback_m_collisionFilterMask_set(long jarg1, ContactResultCallback jarg1_, short jarg2);
   public final static native short ContactResultCallback_m_collisionFilterMask_get(long jarg1, ContactResultCallback jarg1_);
-  public final static native long new_ContactResultCallback();
   public final static native void delete_ContactResultCallback(long jarg1);
   public final static native boolean ContactResultCallback_needsCollision(long jarg1, ContactResultCallback jarg1_, long jarg2, btBroadphaseProxy jarg2_);
-  public final static native boolean ContactResultCallback_needsCollisionSwigExplicitContactResultCallback(long jarg1, ContactResultCallback jarg1_, long jarg2, btBroadphaseProxy jarg2_);
-  public final static native float ContactResultCallback_addSingleResult(long jarg1, ContactResultCallback jarg1_, long jarg2, btManifoldPoint jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, int jarg4, int jarg5, long jarg6, btCollisionObjectWrapper jarg6_, int jarg7, int jarg8);
-  public final static native void ContactResultCallback_director_connect(ContactResultCallback obj, long cptr, boolean mem_own, boolean weak_global);
-  public final static native void ContactResultCallback_change_ownership(ContactResultCallback obj, long cptr, boolean take_or_release);
+  public final static native float ContactResultCallback_addSingleResult(long jarg1, ContactResultCallback jarg1_, long jarg2, btManifoldPoint jarg2_, long jarg3, int jarg4, int jarg5, long jarg6, int jarg7, int jarg8);
   public final static native long new_btCollisionWorld(long jarg1, btDispatcher jarg1_, long jarg2, btBroadphaseInterface jarg2_, long jarg3, btCollisionConfiguration jarg3_);
   public final static native void delete_btCollisionWorld(long jarg1);
   public final static native void btCollisionWorld_setBroadphase(long jarg1, btCollisionWorld jarg1_, long jarg2, btBroadphaseInterface jarg2_);
@@ -2345,9 +2330,9 @@ public class gdxBulletJNI {
   public final static native void btCollisionWorld_contactTest(long jarg1, btCollisionWorld jarg1_, long jarg2, btCollisionObject jarg2_, long jarg3, ContactResultCallback jarg3_);
   public final static native void btCollisionWorld_contactPairTest(long jarg1, btCollisionWorld jarg1_, long jarg2, btCollisionObject jarg2_, long jarg3, btCollisionObject jarg3_, long jarg4, ContactResultCallback jarg4_);
   public final static native void btCollisionWorld_rayTestSingle(Matrix4 jarg1, Matrix4 jarg2, long jarg3, btCollisionObject jarg3_, long jarg4, btCollisionShape jarg4_, Matrix4 jarg5, long jarg6, RayResultCallback jarg6_);
-  public final static native void btCollisionWorld_rayTestSingleInternal(Matrix4 jarg1, Matrix4 jarg2, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, RayResultCallback jarg4_);
+  public final static native void btCollisionWorld_rayTestSingleInternal(Matrix4 jarg1, Matrix4 jarg2, long jarg3, long jarg4, RayResultCallback jarg4_);
   public final static native void btCollisionWorld_objectQuerySingle(long jarg1, btConvexShape jarg1_, Matrix4 jarg2, Matrix4 jarg3, long jarg4, btCollisionObject jarg4_, long jarg5, btCollisionShape jarg5_, Matrix4 jarg6, long jarg7, ConvexResultCallback jarg7_, float jarg8);
-  public final static native void btCollisionWorld_objectQuerySingleInternal(long jarg1, btConvexShape jarg1_, Matrix4 jarg2, Matrix4 jarg3, long jarg4, btCollisionObjectWrapper jarg4_, long jarg5, ConvexResultCallback jarg5_, float jarg6);
+  public final static native void btCollisionWorld_objectQuerySingleInternal(long jarg1, btConvexShape jarg1_, Matrix4 jarg2, Matrix4 jarg3, long jarg4, long jarg5, ConvexResultCallback jarg5_, float jarg6);
   public final static native void btCollisionWorld_addCollisionObject__SWIG_0(long jarg1, btCollisionWorld jarg1_, long jarg2, btCollisionObject jarg2_, short jarg3, short jarg4);
   public final static native void btCollisionWorld_addCollisionObject__SWIG_1(long jarg1, btCollisionWorld jarg1_, long jarg2, btCollisionObject jarg2_, short jarg3);
   public final static native void btCollisionWorld_addCollisionObject__SWIG_2(long jarg1, btCollisionWorld jarg1_, long jarg2, btCollisionObject jarg2_);
@@ -2366,7 +2351,7 @@ public class gdxBulletJNI {
   public final static native void delete_ClosestNotMeConvexResultCallback(long jarg1);
   public final static native long new_ClosestNotMeRayResultCallback(long jarg1, btCollisionObject jarg1_);
   public final static native void delete_ClosestNotMeRayResultCallback(long jarg1);
-  public final static native long new_btConvex2dConvex2dAlgorithm(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_, long jarg5, long jarg6, btConvexPenetrationDepthSolver jarg6_, int jarg7, int jarg8);
+  public final static native long new_btConvex2dConvex2dAlgorithm(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, long jarg4, long jarg5, long jarg6, btConvexPenetrationDepthSolver jarg6_, int jarg7, int jarg8);
   public final static native void delete_btConvex2dConvex2dAlgorithm(long jarg1);
   public final static native void btConvex2dConvex2dAlgorithm_setLowLevelOfDetail(long jarg1, btConvex2dConvex2dAlgorithm jarg1_, boolean jarg2);
   public final static native long btConvex2dConvex2dAlgorithm_getManifold(long jarg1, btConvex2dConvex2dAlgorithm jarg1_);
@@ -2378,9 +2363,9 @@ public class gdxBulletJNI {
   public final static native void delete_btBoxBoxDetector(long jarg1);
   public final static native void btBoxBoxDetector_getClosestPoints__SWIG_0(long jarg1, btBoxBoxDetector jarg1_, long jarg2, ClosestPointInput jarg2_, long jarg3, Result jarg3_, long jarg4, btIDebugDraw jarg4_, boolean jarg5);
   public final static native void btBoxBoxDetector_getClosestPoints__SWIG_1(long jarg1, btBoxBoxDetector jarg1_, long jarg2, ClosestPointInput jarg2_, long jarg3, Result jarg3_, long jarg4, btIDebugDraw jarg4_);
-  public final static native long new_btSphereBoxCollisionAlgorithm(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_, boolean jarg5);
+  public final static native long new_btSphereBoxCollisionAlgorithm(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, long jarg4, boolean jarg5);
   public final static native void delete_btSphereBoxCollisionAlgorithm(long jarg1);
-  public final static native boolean btSphereBoxCollisionAlgorithm_getSphereDistance(long jarg1, btSphereBoxCollisionAlgorithm jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, Vector3 jarg3, Vector3 jarg4, long jarg5, Vector3 jarg6, float jarg7, float jarg8);
+  public final static native boolean btSphereBoxCollisionAlgorithm_getSphereDistance(long jarg1, btSphereBoxCollisionAlgorithm jarg1_, long jarg2, Vector3 jarg3, Vector3 jarg4, long jarg5, Vector3 jarg6, float jarg7, float jarg8);
   public final static native float btSphereBoxCollisionAlgorithm_getSpherePenetration(long jarg1, btSphereBoxCollisionAlgorithm jarg1_, Vector3 jarg2, Vector3 jarg3, Vector3 jarg4, Vector3 jarg5);
   public final static native int btCollisionDispatcher_getDispatcherFlags(long jarg1, btCollisionDispatcher jarg1_);
   public final static native void btCollisionDispatcher_setDispatcherFlags(long jarg1, btCollisionDispatcher jarg1_, int jarg2);
@@ -2388,15 +2373,15 @@ public class gdxBulletJNI {
   public final static native long btCollisionDispatcher_getManifoldByIndexInternal__SWIG_0(long jarg1, btCollisionDispatcher jarg1_, int jarg2);
   public final static native long new_btCollisionDispatcher(long jarg1, btCollisionConfiguration jarg1_);
   public final static native void delete_btCollisionDispatcher(long jarg1);
-  public final static native long btCollisionDispatcher_findAlgorithm__SWIG_0(long jarg1, btCollisionDispatcher jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btPersistentManifold jarg4_);
-  public final static native long btCollisionDispatcher_findAlgorithm__SWIG_1(long jarg1, btCollisionDispatcher jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_);
+  public final static native long btCollisionDispatcher_findAlgorithm__SWIG_0(long jarg1, btCollisionDispatcher jarg1_, long jarg2, long jarg3, long jarg4, btPersistentManifold jarg4_);
+  public final static native long btCollisionDispatcher_findAlgorithm__SWIG_1(long jarg1, btCollisionDispatcher jarg1_, long jarg2, long jarg3);
   public final static native void btCollisionDispatcher_setNearCallback(long jarg1, btCollisionDispatcher jarg1_, long jarg2);
   public final static native long btCollisionDispatcher_getNearCallback(long jarg1, btCollisionDispatcher jarg1_);
   public final static native void btCollisionDispatcher_defaultNearCallback(long jarg1, btBroadphasePair jarg1_, long jarg2, btCollisionDispatcher jarg2_, long jarg3, btDispatcherInfo jarg3_);
   public final static native long btCollisionDispatcher_getCollisionConfiguration__SWIG_0(long jarg1, btCollisionDispatcher jarg1_);
   public final static native void btCollisionDispatcher_setCollisionConfiguration(long jarg1, btCollisionDispatcher jarg1_, long jarg2, btCollisionConfiguration jarg2_);
   public final static native long btCollisionDispatcher_getInternalManifoldPool__SWIG_0(long jarg1, btCollisionDispatcher jarg1_);
-  public final static native long new_btConvexConvexAlgorithm(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_, long jarg5, long jarg6, btConvexPenetrationDepthSolver jarg6_, int jarg7, int jarg8);
+  public final static native long new_btConvexConvexAlgorithm(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, long jarg4, long jarg5, long jarg6, btConvexPenetrationDepthSolver jarg6_, int jarg7, int jarg8);
   public final static native void delete_btConvexConvexAlgorithm(long jarg1);
   public final static native void btConvexConvexAlgorithm_setLowLevelOfDetail(long jarg1, btConvexConvexAlgorithm jarg1_, boolean jarg2);
   public final static native long btConvexConvexAlgorithm_getManifold(long jarg1, btConvexConvexAlgorithm jarg1_);
@@ -2406,9 +2391,9 @@ public class gdxBulletJNI {
   public final static native void delete_SphereTriangleDetector(long jarg1);
   public final static native boolean SphereTriangleDetector_collide(long jarg1, SphereTriangleDetector jarg1_, Vector3 jarg2, Vector3 jarg3, Vector3 jarg4, long jarg5, long jarg6, float jarg7);
   public final static native void btGenerateInternalEdgeInfo(long jarg1, btBvhTriangleMeshShape jarg1_, long jarg2, btTriangleInfoMap jarg2_);
-  public final static native void btAdjustInternalEdgeContacts__SWIG_0(long jarg1, btManifoldPoint jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, int jarg4, int jarg5, int jarg6);
-  public final static native void btAdjustInternalEdgeContacts__SWIG_1(long jarg1, btManifoldPoint jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, int jarg4, int jarg5);
-  public final static native long new_btCompoundCollisionAlgorithm(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, boolean jarg4);
+  public final static native void btAdjustInternalEdgeContacts__SWIG_0(long jarg1, btManifoldPoint jarg1_, long jarg2, long jarg3, int jarg4, int jarg5, int jarg6);
+  public final static native void btAdjustInternalEdgeContacts__SWIG_1(long jarg1, btManifoldPoint jarg1_, long jarg2, long jarg3, int jarg4, int jarg5);
+  public final static native long new_btCompoundCollisionAlgorithm(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_, long jarg2, long jarg3, boolean jarg4);
   public final static native void delete_btCompoundCollisionAlgorithm(long jarg1);
   public final static native void delete_btConvexCast(long jarg1);
   public final static native boolean btConvexCast_calcTimeOfImpact(long jarg1, btConvexCast jarg1_, Matrix4 jarg2, Matrix4 jarg3, Matrix4 jarg4, Matrix4 jarg5, long jarg6);
@@ -2796,27 +2781,6 @@ public class gdxBulletJNI {
   public final static native float btAngularLimit_getLow(long jarg1, btAngularLimit jarg1_);
   public final static native float btAngularLimit_getHigh(long jarg1, btAngularLimit jarg1_);
   public final static native void delete_btAngularLimit(long jarg1);
-  public final static native long new_btMultiSphereShape(Vector3[] jarg1, float[] jarg2, int jarg3);
-  public final static native int btMultiSphereShape_getSphereCount(long jarg1, btMultiSphereShape jarg1_);
-  public final static native Vector3 btMultiSphereShape_getSpherePosition(long jarg1, btMultiSphereShape jarg1_, int jarg2);
-  public final static native float btMultiSphereShape_getSphereRadius(long jarg1, btMultiSphereShape jarg1_, int jarg2);
-  public final static native void delete_btMultiSphereShape(long jarg1);
-  public final static native void btPositionAndRadius_m_pos_set(long jarg1, btPositionAndRadius jarg1_, long jarg2, btVector3FloatData jarg2_);
-  public final static native long btPositionAndRadius_m_pos_get(long jarg1, btPositionAndRadius jarg1_);
-  public final static native void btPositionAndRadius_m_radius_set(long jarg1, btPositionAndRadius jarg1_, float jarg2);
-  public final static native float btPositionAndRadius_m_radius_get(long jarg1, btPositionAndRadius jarg1_);
-  public final static native long new_btPositionAndRadius();
-  public final static native void delete_btPositionAndRadius(long jarg1);
-  public final static native void btMultiSphereShapeData_m_convexInternalShapeData_set(long jarg1, btMultiSphereShapeData jarg1_, long jarg2, btConvexInternalShapeData jarg2_);
-  public final static native long btMultiSphereShapeData_m_convexInternalShapeData_get(long jarg1, btMultiSphereShapeData jarg1_);
-  public final static native void btMultiSphereShapeData_m_localPositionArrayPtr_set(long jarg1, btMultiSphereShapeData jarg1_, long jarg2, btPositionAndRadius jarg2_);
-  public final static native long btMultiSphereShapeData_m_localPositionArrayPtr_get(long jarg1, btMultiSphereShapeData jarg1_);
-  public final static native void btMultiSphereShapeData_m_localPositionArraySize_set(long jarg1, btMultiSphereShapeData jarg1_, int jarg2);
-  public final static native int btMultiSphereShapeData_m_localPositionArraySize_get(long jarg1, btMultiSphereShapeData jarg1_);
-  public final static native void btMultiSphereShapeData_m_padding_set(long jarg1, btMultiSphereShapeData jarg1_, String jarg2);
-  public final static native String btMultiSphereShapeData_m_padding_get(long jarg1, btMultiSphereShapeData jarg1_);
-  public final static native long new_btMultiSphereShapeData();
-  public final static native void delete_btMultiSphereShapeData(long jarg1);
   public final static native void delete_btDynamicsWorld(long jarg1);
   public final static native int btDynamicsWorld_stepSimulation__SWIG_0(long jarg1, btDynamicsWorld jarg1_, float jarg2, int jarg3, float jarg4);
   public final static native int btDynamicsWorld_stepSimulation__SWIG_1(long jarg1, btDynamicsWorld jarg1_, float jarg2, int jarg3);
@@ -3561,7 +3525,7 @@ public class gdxBulletJNI {
   public final static native void btSoftBodySolver_predictMotion(long jarg1, btSoftBodySolver jarg1_, float jarg2);
   public final static native void btSoftBodySolver_solveConstraints(long jarg1, btSoftBodySolver jarg1_, float jarg2);
   public final static native void btSoftBodySolver_updateSoftBodies(long jarg1, btSoftBodySolver jarg1_);
-  public final static native void btSoftBodySolver_processCollision__SWIG_0(long jarg1, btSoftBodySolver jarg1_, long jarg2, btSoftBody jarg2_, long jarg3, btCollisionObjectWrapper jarg3_);
+  public final static native void btSoftBodySolver_processCollision__SWIG_0(long jarg1, btSoftBodySolver jarg1_, long jarg2, btSoftBody jarg2_, long jarg3);
   public final static native void btSoftBodySolver_processCollision__SWIG_1(long jarg1, btSoftBodySolver jarg1_, long jarg2, btSoftBody jarg2_, long jarg3, btSoftBody jarg3_);
   public final static native void btSoftBodySolver_setNumberOfPositionIterations(long jarg1, btSoftBodySolver jarg1_, int jarg2);
   public final static native int btSoftBodySolver_getNumberOfPositionIterations(long jarg1, btSoftBodySolver jarg1_);
@@ -3577,7 +3541,7 @@ public class gdxBulletJNI {
   public final static native void btDefaultSoftBodySolver_copyBackToSoftBodies__SWIG_0(long jarg1, btDefaultSoftBodySolver jarg1_, boolean jarg2);
   public final static native void btDefaultSoftBodySolver_copyBackToSoftBodies__SWIG_1(long jarg1, btDefaultSoftBodySolver jarg1_);
   public final static native void btDefaultSoftBodySolver_copySoftBodyToVertexBuffer(long jarg1, btDefaultSoftBodySolver jarg1_, long jarg2, btSoftBody jarg2_, long jarg3, btVertexBufferDescriptor jarg3_);
-  public final static native void btDefaultSoftBodySolver_processCollision__SWIG_0(long jarg1, btDefaultSoftBodySolver jarg1_, long jarg2, btSoftBody jarg2_, long jarg3, btCollisionObjectWrapper jarg3_);
+  public final static native void btDefaultSoftBodySolver_processCollision__SWIG_0(long jarg1, btDefaultSoftBodySolver jarg1_, long jarg2, btSoftBody jarg2_, long jarg3);
   public final static native void btDefaultSoftBodySolver_processCollision__SWIG_1(long jarg1, btDefaultSoftBodySolver jarg1_, long jarg2, btSoftBody jarg2_, long jarg3, btSoftBody jarg3_);
   public final static native void sCti_m_colObj_set(long jarg1, sCti jarg1_, long jarg2, btCollisionObject jarg2_);
   public final static native long sCti_m_colObj_get(long jarg1, sCti jarg1_);
@@ -3859,7 +3823,7 @@ public class gdxBulletJNI {
   public final static native void btSoftBody_solveCommonConstraints(long jarg1, int jarg2, int jarg3);
   public final static native void btSoftBody_solveClusters__SWIG_0(long jarg1);
   public final static native void btSoftBody_integrateMotion(long jarg1, btSoftBody jarg1_);
-  public final static native void btSoftBody_defaultCollisionHandler__SWIG_0(long jarg1, btSoftBody jarg1_, long jarg2, btCollisionObjectWrapper jarg2_);
+  public final static native void btSoftBody_defaultCollisionHandler__SWIG_0(long jarg1, btSoftBody jarg1_, long jarg2);
   public final static native void btSoftBody_defaultCollisionHandler__SWIG_1(long jarg1, btSoftBody jarg1_, long jarg2, btSoftBody jarg2_);
   public final static native void btSoftBody_setWindVelocity(long jarg1, btSoftBody jarg1_, Vector3 jarg2);
   public final static native Vector3 btSoftBody_getWindVelocity(long jarg1, btSoftBody jarg1_);
@@ -3873,7 +3837,7 @@ public class gdxBulletJNI {
   public final static native int btSoftBody_rayTest__SWIG_1(long jarg1, btSoftBody jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, long jarg5, long jarg6, boolean jarg7);
   public final static native void btSoftBody_initializeFaceTree(long jarg1, btSoftBody jarg1_);
   public final static native Vector3 btSoftBody_evaluateCom(long jarg1, btSoftBody jarg1_);
-  public final static native boolean btSoftBody_checkContact(long jarg1, btSoftBody jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, Vector3 jarg3, float jarg4, long jarg5, sCti jarg5_);
+  public final static native boolean btSoftBody_checkContact(long jarg1, btSoftBody jarg1_, long jarg2, Vector3 jarg3, float jarg4, long jarg5, sCti jarg5_);
   public final static native void btSoftBody_updateNormals(long jarg1, btSoftBody jarg1_);
   public final static native void btSoftBody_updateBounds(long jarg1, btSoftBody jarg1_);
   public final static native void btSoftBody_updatePose(long jarg1, btSoftBody jarg1_);
@@ -3936,13 +3900,13 @@ public class gdxBulletJNI {
   public final static native void delete_btTriIndex(long jarg1);
   public final static native void btSoftBodyTriangleCallback_m_triangleCount_set(long jarg1, btSoftBodyTriangleCallback jarg1_, int jarg2);
   public final static native int btSoftBodyTriangleCallback_m_triangleCount_get(long jarg1, btSoftBodyTriangleCallback jarg1_);
-  public final static native long new_btSoftBodyTriangleCallback(long jarg1, btDispatcher jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, boolean jarg4);
-  public final static native void btSoftBodyTriangleCallback_setTimeStepAndCounters(long jarg1, btSoftBodyTriangleCallback jarg1_, float jarg2, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btDispatcherInfo jarg4_, long jarg5, btManifoldResult jarg5_);
+  public final static native long new_btSoftBodyTriangleCallback(long jarg1, btDispatcher jarg1_, long jarg2, long jarg3, boolean jarg4);
+  public final static native void btSoftBodyTriangleCallback_setTimeStepAndCounters(long jarg1, btSoftBodyTriangleCallback jarg1_, float jarg2, long jarg3, long jarg4, btDispatcherInfo jarg4_, long jarg5, btManifoldResult jarg5_);
   public final static native void delete_btSoftBodyTriangleCallback(long jarg1);
   public final static native void btSoftBodyTriangleCallback_clearCache(long jarg1, btSoftBodyTriangleCallback jarg1_);
   public final static native Vector3 btSoftBodyTriangleCallback_getAabbMin(long jarg1, btSoftBodyTriangleCallback jarg1_);
   public final static native Vector3 btSoftBodyTriangleCallback_getAabbMax(long jarg1, btSoftBodyTriangleCallback jarg1_);
-  public final static native long new_btSoftBodyConcaveCollisionAlgorithm(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, boolean jarg4);
+  public final static native long new_btSoftBodyConcaveCollisionAlgorithm(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_, long jarg2, long jarg3, boolean jarg4);
   public final static native void delete_btSoftBodyConcaveCollisionAlgorithm(long jarg1);
   public final static native void btSoftBodyConcaveCollisionAlgorithm_clearCache(long jarg1, btSoftBodyConcaveCollisionAlgorithm jarg1_);
   public final static native void SoftBodyMaterialData_m_linearStiffness_set(long jarg1, SoftBodyMaterialData jarg1_, float jarg2);
@@ -4317,7 +4281,7 @@ public class gdxBulletJNI {
   public final static native long new_btCPUVertexBufferDescriptor__SWIG_1(java.nio.FloatBuffer jarg1, int jarg2, int jarg3, int jarg4, int jarg5);
   public final static native void delete_btCPUVertexBufferDescriptor(long jarg1);
   public final static native java.nio.FloatBuffer btCPUVertexBufferDescriptor_getBasePointer(long jarg1, btCPUVertexBufferDescriptor jarg1_);
-  public final static native long new_btSoftRigidCollisionAlgorithm(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_, boolean jarg5);
+  public final static native long new_btSoftRigidCollisionAlgorithm(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, long jarg4, boolean jarg5);
   public final static native void delete_btSoftRigidCollisionAlgorithm(long jarg1);
   public final static native long new_btSoftRigidDynamicsWorld__SWIG_0(long jarg1, btDispatcher jarg1_, long jarg2, btBroadphaseInterface jarg2_, long jarg3, btConstraintSolver jarg3_, long jarg4, btCollisionConfiguration jarg4_, long jarg5, btSoftBodySolver jarg5_);
   public final static native long new_btSoftRigidDynamicsWorld__SWIG_1(long jarg1, btDispatcher jarg1_, long jarg2, btBroadphaseInterface jarg2_, long jarg3, btConstraintSolver jarg3_, long jarg4, btCollisionConfiguration jarg4_);
@@ -4332,7 +4296,7 @@ public class gdxBulletJNI {
   public final static native long btSoftRigidDynamicsWorld_getSoftBodyArray__SWIG_0(long jarg1, btSoftRigidDynamicsWorld jarg1_);
   public final static native void btSoftRigidDynamicsWorld_rayTestSingle(Matrix4 jarg1, Matrix4 jarg2, long jarg3, btCollisionObject jarg3_, long jarg4, btCollisionShape jarg4_, Matrix4 jarg5, long jarg6, RayResultCallback jarg6_);
   public final static native long new_btSoftSoftCollisionAlgorithm__SWIG_0(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_);
-  public final static native long new_btSoftSoftCollisionAlgorithm__SWIG_1(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_);
+  public final static native long new_btSoftSoftCollisionAlgorithm__SWIG_1(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, long jarg4);
   public final static native void delete_btSoftSoftCollisionAlgorithm(long jarg1);
   public final static native void delete_btVehicleRaycaster(long jarg1);
   public final static native long btVehicleRaycaster_castRay(long jarg1, btVehicleRaycaster jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4);
@@ -4489,34 +4453,6 @@ public class gdxBulletJNI {
   public final static native void btCollisionObjectArray_remove(long jarg1, btCollisionObjectArray jarg1_, long jarg2, btCollisionObject jarg2_);
   public final static native void btCollisionObjectArray_initializeFromBuffer(long jarg1, btCollisionObjectArray jarg1_, long jarg2, int jarg3, int jarg4);
   public final static native void btCollisionObjectArray_copyFromArray(long jarg1, btCollisionObjectArray jarg1_, long jarg2, btCollisionObjectArray jarg2_);
-  public final static native int btBroadphasePairArray_size(long jarg1, btBroadphasePairArray jarg1_);
-  public final static native long btBroadphasePairArray_at(long jarg1, btBroadphasePairArray jarg1_, int jarg2);
-  public final static native int btBroadphasePairArray_getCollisionObjects(long jarg1, btBroadphasePairArray jarg1_, int[] jarg2, int jarg3, int jarg4);
-  public final static native int btBroadphasePairArray_getCollisionObjectsValue(long jarg1, btBroadphasePairArray jarg1_, int[] jarg2, int jarg3, int jarg4);
-  public final static native long new_btBroadphasePairArray();
-  public final static native void delete_btBroadphasePairArray(long jarg1);
-  public final static native long new_btManifoldArray__SWIG_0();
-  public final static native void delete_btManifoldArray(long jarg1);
-  public final static native long new_btManifoldArray__SWIG_1(long jarg1, btManifoldArray jarg1_);
-  public final static native int btManifoldArray_size(long jarg1, btManifoldArray jarg1_);
-  public final static native long btManifoldArray_at__SWIG_0(long jarg1, btManifoldArray jarg1_, int jarg2);
-  public final static native void btManifoldArray_clear(long jarg1, btManifoldArray jarg1_);
-  public final static native void btManifoldArray_pop_back(long jarg1, btManifoldArray jarg1_);
-  public final static native void btManifoldArray_resizeNoInitialize(long jarg1, btManifoldArray jarg1_, int jarg2);
-  public final static native void btManifoldArray_resize__SWIG_0(long jarg1, btManifoldArray jarg1_, int jarg2, long jarg3, btPersistentManifold jarg3_);
-  public final static native void btManifoldArray_resize__SWIG_1(long jarg1, btManifoldArray jarg1_, int jarg2);
-  public final static native long btManifoldArray_expandNonInitializing(long jarg1, btManifoldArray jarg1_);
-  public final static native long btManifoldArray_expand__SWIG_0(long jarg1, btManifoldArray jarg1_, long jarg2, btPersistentManifold jarg2_);
-  public final static native long btManifoldArray_expand__SWIG_1(long jarg1, btManifoldArray jarg1_);
-  public final static native void btManifoldArray_push_back(long jarg1, btManifoldArray jarg1_, long jarg2, btPersistentManifold jarg2_);
-  public final static native int btManifoldArray_capacity(long jarg1, btManifoldArray jarg1_);
-  public final static native void btManifoldArray_reserve(long jarg1, btManifoldArray jarg1_, int jarg2);
-  public final static native void btManifoldArray_swap(long jarg1, btManifoldArray jarg1_, int jarg2, int jarg3);
-  public final static native int btManifoldArray_findBinarySearch(long jarg1, btManifoldArray jarg1_, long jarg2, btPersistentManifold jarg2_);
-  public final static native int btManifoldArray_findLinearSearch(long jarg1, btManifoldArray jarg1_, long jarg2, btPersistentManifold jarg2_);
-  public final static native void btManifoldArray_remove(long jarg1, btManifoldArray jarg1_, long jarg2, btPersistentManifold jarg2_);
-  public final static native void btManifoldArray_initializeFromBuffer(long jarg1, btManifoldArray jarg1_, long jarg2, int jarg3, int jarg4);
-  public final static native void btManifoldArray_copyFromArray(long jarg1, btManifoldArray jarg1_, long jarg2, btManifoldArray jarg2_);
   public final static native long btVector4_SWIGUpcast(long jarg1);
   public final static native long btDefaultMotionState_SWIGUpcast(long jarg1);
   public final static native long GrahamVector2_SWIGUpcast(long jarg1);
@@ -4551,6 +4487,7 @@ public class gdxBulletJNI {
   public final static native long btBox2dShape_SWIGUpcast(long jarg1);
   public final static native long btTriangleShape_SWIGUpcast(long jarg1);
   public final static native long btSphereShape_SWIGUpcast(long jarg1);
+  public final static native long btMultiSphereShape_SWIGUpcast(long jarg1);
   public final static native long btMinkowskiSumShape_SWIGUpcast(long jarg1);
   public final static native long btOptimizedBvh_SWIGUpcast(long jarg1);
   public final static native long btTriangleBuffer_SWIGUpcast(long jarg1);
@@ -4606,7 +4543,6 @@ public class gdxBulletJNI {
   public final static native long btTriangleConvexcastCallback_SWIGUpcast(long jarg1);
   public final static native long btGjkEpaPenetrationDepthSolver_SWIGUpcast(long jarg1);
   public final static native long btTypedConstraint_SWIGUpcast(long jarg1);
-  public final static native long btMultiSphereShape_SWIGUpcast(long jarg1);
   public final static native long btDynamicsWorld_SWIGUpcast(long jarg1);
   public final static native long btSimpleDynamicsWorld_SWIGUpcast(long jarg1);
   public final static native long btDiscreteDynamicsWorld_SWIGUpcast(long jarg1);
@@ -4717,42 +4653,6 @@ public class gdxBulletJNI {
   public static void SwigDirector_btMotionState_setWorldTransform(btMotionState self, Matrix4 worldTrans) {
     self.setWorldTransform(worldTrans);
   }
-  public static boolean SwigDirector_RayResultCallback_needsCollision(RayResultCallback self, long proxy0) {
-    return self.needsCollision((proxy0 == 0) ? null : new btBroadphaseProxy(proxy0, false));
-  }
-  public static float SwigDirector_RayResultCallback_addSingleResult(RayResultCallback self, long rayResult, boolean normalInWorldSpace) {
-    return self.addSingleResult(new LocalRayResult(rayResult, false), normalInWorldSpace);
-  }
-  public static boolean SwigDirector_ClosestRayResultCallback_needsCollision(ClosestRayResultCallback self, long proxy0) {
-    return self.needsCollision((proxy0 == 0) ? null : new btBroadphaseProxy(proxy0, false));
-  }
-  public static float SwigDirector_ClosestRayResultCallback_addSingleResult(ClosestRayResultCallback self, long rayResult, boolean normalInWorldSpace) {
-    return self.addSingleResult(new LocalRayResult(rayResult, false), normalInWorldSpace);
-  }
-  public static boolean SwigDirector_AllHitsRayResultCallback_needsCollision(AllHitsRayResultCallback self, long proxy0) {
-    return self.needsCollision((proxy0 == 0) ? null : new btBroadphaseProxy(proxy0, false));
-  }
-  public static float SwigDirector_AllHitsRayResultCallback_addSingleResult(AllHitsRayResultCallback self, long rayResult, boolean normalInWorldSpace) {
-    return self.addSingleResult(new LocalRayResult(rayResult, false), normalInWorldSpace);
-  }
-  public static boolean SwigDirector_ConvexResultCallback_needsCollision(ConvexResultCallback self, long proxy0) {
-    return self.needsCollision((proxy0 == 0) ? null : new btBroadphaseProxy(proxy0, false));
-  }
-  public static float SwigDirector_ConvexResultCallback_addSingleResult(ConvexResultCallback self, long convexResult, boolean normalInWorldSpace) {
-    return self.addSingleResult(new LocalConvexResult(convexResult, false), normalInWorldSpace);
-  }
-  public static boolean SwigDirector_ClosestConvexResultCallback_needsCollision(ClosestConvexResultCallback self, long proxy0) {
-    return self.needsCollision((proxy0 == 0) ? null : new btBroadphaseProxy(proxy0, false));
-  }
-  public static float SwigDirector_ClosestConvexResultCallback_addSingleResult(ClosestConvexResultCallback self, long convexResult, boolean normalInWorldSpace) {
-    return self.addSingleResult(new LocalConvexResult(convexResult, false), normalInWorldSpace);
-  }
-  public static boolean SwigDirector_ContactResultCallback_needsCollision(ContactResultCallback self, long proxy0) {
-    return self.needsCollision((proxy0 == 0) ? null : new btBroadphaseProxy(proxy0, false));
-  }
-  public static float SwigDirector_ContactResultCallback_addSingleResult(ContactResultCallback self, long cp, long colObj0Wrap, int partId0, int index0, long colObj1Wrap, int partId1, int index1) {
-    return self.addSingleResult(new btManifoldPoint(cp, false), (colObj0Wrap == 0) ? null : new btCollisionObjectWrapper(colObj0Wrap, false), partId0, index0, (colObj1Wrap == 0) ? null : new btCollisionObjectWrapper(colObj1Wrap, false), partId1, index1);
-  }
   public static void SwigDirector_InternalTickCallback_onInternalTick(InternalTickCallback self, long dynamicsWorld, float timeStep) {
     self.onInternalTick((dynamicsWorld == 0) ? null : new btDynamicsWorld(dynamicsWorld, false), timeStep);
   }
diff --git a/extensions/gdx-bullet/jni/swig-src/gdxBullet_wrap.cpp b/extensions/gdx-bullet/jni/swig-src/gdxBullet_wrap.cpp
index cc8b616..af9660a 100755
--- a/extensions/gdx-bullet/jni/swig-src/gdxBullet_wrap.cpp
+++ b/extensions/gdx-bullet/jni/swig-src/gdxBullet_wrap.cpp
@@ -412,7 +412,7 @@ namespace Swig {
 namespace Swig {
   namespace {
     jclass jclass_gdxBulletJNI = NULL;
-    jmethodID director_methids[38];
+    jmethodID director_methids[26];
   }
 }
 
@@ -564,9 +564,6 @@ SWIGINTERN inline void btTransform_to_Matrix4(JNIEnv * jenv, jobject target, con
 }
 
 
-#include <stdint.h>
-
-
 #if defined(SWIG_NOINCLUDE) || defined(SWIG_NOARRAYS)
 
 
@@ -1713,6 +1710,9 @@ typedef btDiscreteCollisionDetectorInterface::ClosestPointInput ClosestPointInpu
 #include <BulletCollision/CollisionShapes/btSphereShape.h>
 
 
+#include <BulletCollision/CollisionShapes/btMultiSphereShape.h>
+
+
 #include <BulletCollision/CollisionShapes/btStridingMeshInterface.h>
 
 
@@ -1809,14 +1809,6 @@ SWIGINTERN void btCollisionObject_getInterpolationLinearVelocity__SWIG_1(btColli
 SWIGINTERN void btCollisionObject_getInterpolationAngularVelocity__SWIG_1(btCollisionObject *self,btVector3 &out){
 		out = self->getInterpolationAngularVelocity();
 	}
-SWIGINTERN int btCollisionObject_getUserValue(btCollisionObject *self){
-		int result;
-		*(const void **)&result = self->getUserPointer();
-		return result;
-	}
-SWIGINTERN void btCollisionObject_setUserValue(btCollisionObject *self,int value){
-		self->setUserPointer((void*)value);
-	}
 
 #include <BulletDynamics/Dynamics/btRigidBody.h>
 
@@ -1824,9 +1816,6 @@ SWIGINTERN void btCollisionObject_setUserValue(btCollisionObject *self,int value
 typedef btRigidBody::btRigidBodyConstructionInfo btRigidBodyConstructionInfo;
 
 
-#include <BulletCollision/CollisionDispatch/btCollisionObjectWrapper.h>
-
-
 #include <BulletCollision/CollisionDispatch/btEmptyCollisionAlgorithm.h>
 
 
@@ -1970,46 +1959,6 @@ typedef btCollisionWorld::ContactResultCallback ContactResultCallback;
 typedef btTypedConstraint::btConstraintInfo2 btConstraintInfo2;
 
 
-#include <BulletCollision/CollisionShapes/btMultiSphereShape.h>
-
-
-	btVector3* Vector3ArrayToBtVector3Array(JNIEnv * jenv, jobjectArray source) {
-		static jfieldID xField = NULL, yField = NULL, zField = NULL;
-		jint len = jenv->GetArrayLength(source);
-		if (len <= 0)
-			return NULL;
-			
-		btVector3* result = new btVector3[len];
-			
-		if (xField == NULL) {
-			jobject vec = jenv->GetObjectArrayElement(source, 0);
-			jclass sc = jenv->GetObjectClass(vec);
-			xField = jenv->GetFieldID(sc, "x", "F");
-			yField = jenv->GetFieldID(sc, "y", "F");
-			zField = jenv->GetFieldID(sc, "z", "F");
-			jenv->DeleteLocalRef(sc);
-		}
-		
-		for (int i = 0; i < len; i++) {
-			jobject vec = jenv->GetObjectArrayElement(source, i);
-			result[i].setValue(jenv->GetFloatField(vec, xField), jenv->GetFloatField(vec, yField), jenv->GetFloatField(vec, zField));
-		}
-		return result;
-	}
-	
-	class gdxAutoDeleteBtVector3Array {
-	private:
-	  btVector3* array;
-	public:
-	  gdxAutoDeleteBtVector3Array(btVector3* arr) : 
-	    array(arr) { }
-	  virtual ~gdxAutoDeleteBtVector3Array() {
-		  if (array != NULL)
-			  delete[] array;
-	  }
-	};
-
-
 #include <BulletDynamics/Dynamics/btDynamicsWorld.h>
 
 
@@ -2089,6 +2038,7 @@ typedef btTypedConstraint::btConstraintInfo2 btConstraintInfo2;
 
 
 #include <BulletSoftBody/btSoftBody.h>
+#include <stdint.h>
 
 SWIGINTERN btSoftBody *new_btSoftBody__SWIG_2(btSoftBodyWorldInfo *worldInfo,float *vertices,int vertexCount,int vertexSize,int posOffset,short *indices,int triangleCount){
 		int offset = posOffset / sizeof(btScalar);
@@ -2240,76 +2190,6 @@ SWIGINTERN void btSoftBody_setConfig_collisions(btSoftBody *self,int v){ self->m
 
 typedef btRaycastVehicle::btVehicleTuning btVehicleTuning;
 
- /*SWIG_JavaArrayArgout##Bool(jenv, jarr$argnum, (bool *)$1, $input);*/ 
- /*SWIG_JavaArrayArgout##Schar(jenv, jarr$argnum, (signed char *)$1, $input);*/ 
- /*SWIG_JavaArrayArgout##Uchar(jenv, jarr$argnum, (unsigned char *)$1, $input);*/ 
- /*SWIG_JavaArrayArgout##Short(jenv, jarr$argnum, (short *)$1, $input);*/ 
- /*SWIG_JavaArrayArgout##Ushort(jenv, jarr$argnum, (unsigned short *)$1, $input);*/ 
- /*SWIG_JavaArrayArgout##Int(jenv, jarr$argnum, (int *)$1, $input);*/ 
- /*SWIG_JavaArrayArgout##Uint(jenv, jarr$argnum, (unsigned int *)$1, $input);*/ 
- /*SWIG_JavaArrayArgout##Long(jenv, jarr$argnum, (long *)$1, $input);*/ 
- /*SWIG_JavaArrayArgout##Ulong(jenv, jarr$argnum, (unsigned long *)$1, $input);*/ 
- /*SWIG_JavaArrayArgout##Longlong(jenv, jarr$argnum, (long long *)$1, $input);*/ 
- /*SWIG_JavaArrayArgout##Float(jenv, jarr$argnum, (float *)$1, $input);*/ 
- /*SWIG_JavaArrayArgout##Double(jenv, jarr$argnum, (double *)$1, $input);*/ 
-SWIGINTERN int btAlignedObjectArray_Sl_btBroadphasePair_Sg__getCollisionObjects(btAlignedObjectArray< btBroadphasePair > *self,int result[],int max,int other){
-		static btManifoldArray marr;
-		const int n = self->size();
-		int count = 0;
-		int obj0, obj1;
-		for (int i = 0; i < n; i++) {
-			const btBroadphasePair& collisionPair = (*self)[i];
-			if (collisionPair.m_algorithm) {
-				marr.resize(0);
-				collisionPair.m_algorithm->getAllContactManifolds(marr);
-				const int s = marr.size();
-				for (int j = 0; j < s; j++) {
-					btPersistentManifold *manifold = marr[j];
-					if (manifold->getNumContacts() > 0) {
-						*(const btCollisionObject **)&obj0 = manifold->getBody0();
-						*(const btCollisionObject **)&obj1 = manifold->getBody1();
-						if (obj0 == other)
-							result[count++] = obj1;
-						else if (obj1 == other)
-							result[count++] = obj0;
-						else continue;
-						if (count >= max)
-							return count;
-					}
-				}
-			}
-		}
-		return count;
-	}
-SWIGINTERN int btAlignedObjectArray_Sl_btBroadphasePair_Sg__getCollisionObjectsValue(btAlignedObjectArray< btBroadphasePair > *self,int result[],int max,int other){
-		static btManifoldArray marr;
-		const int n = self->size();
-		int count = 0;
-		int obj0, obj1;
-		for (int i = 0; i < n; i++) {
-			const btBroadphasePair& collisionPair = (*self)[i];
-			if (collisionPair.m_algorithm) {
-				marr.resize(0);
-				collisionPair.m_algorithm->getAllContactManifolds(marr);
-				const int s = marr.size();
-				for (int j = 0; j < s; j++) {
-					btPersistentManifold *manifold = marr[j];
-					if (manifold->getNumContacts() > 0) {
-						*(const btCollisionObject **)&obj0 = manifold->getBody0();
-						*(const btCollisionObject **)&obj1 = manifold->getBody1();
-						if (obj0 == other)
-							*(const void **)&(result[count++]) = manifold->getBody1()->getUserPointer();
-						else if (obj1 == other)
-							*(const void **)&(result[count++]) = manifold->getBody0()->getUserPointer();
-						else continue;
-						if (count >= max)
-							return count;
-					}
-				}
-			}
-		}
-		return count;
-	}
 
 
 // Begin dummy implementations for missing Bullet methods
@@ -3126,601 +3006,6 @@ void SwigDirector_btMotionState::swig_connect_director(JNIEnv *jenv, jobject jse
 }
 
 
-SwigDirector_RayResultCallback::SwigDirector_RayResultCallback(JNIEnv *jenv) : RayResultCallback(), Swig::Director(jenv) {
-}
-
-SwigDirector_RayResultCallback::~SwigDirector_RayResultCallback() {
-  swig_disconnect_director_self("swigDirectorDisconnect");
-}
-
-
-bool SwigDirector_RayResultCallback::needsCollision(btBroadphaseProxy *proxy0) const {
-  bool c_result = SwigValueInit< bool >() ;
-  jboolean jresult = 0 ;
-  JNIEnvWrapper swigjnienv(this) ;
-  JNIEnv * jenv = swigjnienv.getJNIEnv() ;
-  jobject swigjobj = (jobject) NULL ;
-  jlong jproxy0 = 0 ;
-  
-  if (!swig_override[0]) {
-    return RayResultCallback::needsCollision(proxy0);
-  }
-  swigjobj = swig_get_self(jenv);
-  if (swigjobj && jenv->IsSameObject(swigjobj, NULL) == JNI_FALSE) {
-    *((btBroadphaseProxy **)&jproxy0) = (btBroadphaseProxy *) proxy0; 
-    jresult = (jboolean) jenv->CallStaticBooleanMethod(Swig::jclass_gdxBulletJNI, Swig::director_methids[25], swigjobj, jproxy0);
-    if (jenv->ExceptionCheck() == JNI_TRUE) return c_result;
-    c_result = jresult ? true : false; 
-  } else {
-    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null upcall object");
-  }
-  if (swigjobj) jenv->DeleteLocalRef(swigjobj);
-  return c_result;
-}
-
-btScalar SwigDirector_RayResultCallback::addSingleResult(LocalRayResult &rayResult, bool normalInWorldSpace) {
-  btScalar c_result = SwigValueInit< btScalar >() ;
-  jfloat jresult = 0 ;
-  JNIEnvWrapper swigjnienv(this) ;
-  JNIEnv * jenv = swigjnienv.getJNIEnv() ;
-  jobject swigjobj = (jobject) NULL ;
-  jlong jrayResult = 0 ;
-  jboolean jnormalInWorldSpace  ;
-  
-  if (!swig_override[1]) {
-    SWIG_JavaThrowException(JNIEnvWrapper(this).getJNIEnv(), SWIG_JavaDirectorPureVirtual, "Attempted to invoke pure virtual method RayResultCallback::addSingleResult.");
-    return c_result;
-  }
-  swigjobj = swig_get_self(jenv);
-  if (swigjobj && jenv->IsSameObject(swigjobj, NULL) == JNI_FALSE) {
-    *(LocalRayResult **)&jrayResult = (LocalRayResult *) &rayResult; 
-    jnormalInWorldSpace = (jboolean) normalInWorldSpace;
-    jresult = (jfloat) jenv->CallStaticFloatMethod(Swig::jclass_gdxBulletJNI, Swig::director_methids[26], swigjobj, jrayResult, jnormalInWorldSpace);
-    if (jenv->ExceptionCheck() == JNI_TRUE) return c_result;
-    c_result = (btScalar)jresult; 
-  } else {
-    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null upcall object");
-  }
-  if (swigjobj) jenv->DeleteLocalRef(swigjobj);
-  return c_result;
-}
-
-void SwigDirector_RayResultCallback::swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global) {
-  static struct {
-    const char *mname;
-    const char *mdesc;
-    jmethodID base_methid;
-  } methods[] = {
-    {
-      "needsCollision", "(Lcom/badlogic/gdx/physics/bullet/btBroadphaseProxy;)Z", NULL 
-    },
-    {
-      "addSingleResult", "(Lcom/badlogic/gdx/physics/bullet/LocalRayResult;Z)F", NULL 
-    }
-  };
-  
-  static jclass baseclass = 0 ;
-  
-  if (swig_set_self(jenv, jself, swig_mem_own, weak_global)) {
-    if (!baseclass) {
-      baseclass = jenv->FindClass("com/badlogic/gdx/physics/bullet/RayResultCallback");
-      if (!baseclass) return;
-      baseclass = (jclass) jenv->NewGlobalRef(baseclass);
-    }
-    bool derived = (jenv->IsSameObject(baseclass, jcls) ? false : true);
-    for (int i = 0; i < 2; ++i) {
-      if (!methods[i].base_methid) {
-        methods[i].base_methid = jenv->GetMethodID(baseclass, methods[i].mname, methods[i].mdesc);
-        if (!methods[i].base_methid) return;
-      }
-      swig_override[i] = false;
-      if (derived) {
-        jmethodID methid = jenv->GetMethodID(jcls, methods[i].mname, methods[i].mdesc);
-        swig_override[i] = (methid != methods[i].base_methid);
-        jenv->ExceptionClear();
-      }
-    }
-  }
-}
-
-
-SwigDirector_ClosestRayResultCallback::SwigDirector_ClosestRayResultCallback(JNIEnv *jenv, btVector3 const &rayFromWorld, btVector3 const &rayToWorld) : ClosestRayResultCallback(rayFromWorld, rayToWorld), Swig::Director(jenv) {
-}
-
-SwigDirector_ClosestRayResultCallback::~SwigDirector_ClosestRayResultCallback() {
-  swig_disconnect_director_self("swigDirectorDisconnect");
-}
-
-
-bool SwigDirector_ClosestRayResultCallback::needsCollision(btBroadphaseProxy *proxy0) const {
-  bool c_result = SwigValueInit< bool >() ;
-  jboolean jresult = 0 ;
-  JNIEnvWrapper swigjnienv(this) ;
-  JNIEnv * jenv = swigjnienv.getJNIEnv() ;
-  jobject swigjobj = (jobject) NULL ;
-  jlong jproxy0 = 0 ;
-  
-  if (!swig_override[0]) {
-    return RayResultCallback::needsCollision(proxy0);
-  }
-  swigjobj = swig_get_self(jenv);
-  if (swigjobj && jenv->IsSameObject(swigjobj, NULL) == JNI_FALSE) {
-    *((btBroadphaseProxy **)&jproxy0) = (btBroadphaseProxy *) proxy0; 
-    jresult = (jboolean) jenv->CallStaticBooleanMethod(Swig::jclass_gdxBulletJNI, Swig::director_methids[27], swigjobj, jproxy0);
-    if (jenv->ExceptionCheck() == JNI_TRUE) return c_result;
-    c_result = jresult ? true : false; 
-  } else {
-    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null upcall object");
-  }
-  if (swigjobj) jenv->DeleteLocalRef(swigjobj);
-  return c_result;
-}
-
-btScalar SwigDirector_ClosestRayResultCallback::addSingleResult(LocalRayResult &rayResult, bool normalInWorldSpace) {
-  btScalar c_result = SwigValueInit< btScalar >() ;
-  jfloat jresult = 0 ;
-  JNIEnvWrapper swigjnienv(this) ;
-  JNIEnv * jenv = swigjnienv.getJNIEnv() ;
-  jobject swigjobj = (jobject) NULL ;
-  jlong jrayResult = 0 ;
-  jboolean jnormalInWorldSpace  ;
-  
-  if (!swig_override[1]) {
-    return ClosestRayResultCallback::addSingleResult(rayResult,normalInWorldSpace);
-  }
-  swigjobj = swig_get_self(jenv);
-  if (swigjobj && jenv->IsSameObject(swigjobj, NULL) == JNI_FALSE) {
-    *(LocalRayResult **)&jrayResult = (LocalRayResult *) &rayResult; 
-    jnormalInWorldSpace = (jboolean) normalInWorldSpace;
-    jresult = (jfloat) jenv->CallStaticFloatMethod(Swig::jclass_gdxBulletJNI, Swig::director_methids[28], swigjobj, jrayResult, jnormalInWorldSpace);
-    if (jenv->ExceptionCheck() == JNI_TRUE) return c_result;
-    c_result = (btScalar)jresult; 
-  } else {
-    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null upcall object");
-  }
-  if (swigjobj) jenv->DeleteLocalRef(swigjobj);
-  return c_result;
-}
-
-void SwigDirector_ClosestRayResultCallback::swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global) {
-  static struct {
-    const char *mname;
-    const char *mdesc;
-    jmethodID base_methid;
-  } methods[] = {
-    {
-      "needsCollision", "(Lcom/badlogic/gdx/physics/bullet/btBroadphaseProxy;)Z", NULL 
-    },
-    {
-      "addSingleResult", "(Lcom/badlogic/gdx/physics/bullet/LocalRayResult;Z)F", NULL 
-    }
-  };
-  
-  static jclass baseclass = 0 ;
-  
-  if (swig_set_self(jenv, jself, swig_mem_own, weak_global)) {
-    if (!baseclass) {
-      baseclass = jenv->FindClass("com/badlogic/gdx/physics/bullet/ClosestRayResultCallback");
-      if (!baseclass) return;
-      baseclass = (jclass) jenv->NewGlobalRef(baseclass);
-    }
-    bool derived = (jenv->IsSameObject(baseclass, jcls) ? false : true);
-    for (int i = 0; i < 2; ++i) {
-      if (!methods[i].base_methid) {
-        methods[i].base_methid = jenv->GetMethodID(baseclass, methods[i].mname, methods[i].mdesc);
-        if (!methods[i].base_methid) return;
-      }
-      swig_override[i] = false;
-      if (derived) {
-        jmethodID methid = jenv->GetMethodID(jcls, methods[i].mname, methods[i].mdesc);
-        swig_override[i] = (methid != methods[i].base_methid);
-        jenv->ExceptionClear();
-      }
-    }
-  }
-}
-
-
-SwigDirector_AllHitsRayResultCallback::SwigDirector_AllHitsRayResultCallback(JNIEnv *jenv, btVector3 const &rayFromWorld, btVector3 const &rayToWorld) : AllHitsRayResultCallback(rayFromWorld, rayToWorld), Swig::Director(jenv) {
-}
-
-SwigDirector_AllHitsRayResultCallback::~SwigDirector_AllHitsRayResultCallback() {
-  swig_disconnect_director_self("swigDirectorDisconnect");
-}
-
-
-bool SwigDirector_AllHitsRayResultCallback::needsCollision(btBroadphaseProxy *proxy0) const {
-  bool c_result = SwigValueInit< bool >() ;
-  jboolean jresult = 0 ;
-  JNIEnvWrapper swigjnienv(this) ;
-  JNIEnv * jenv = swigjnienv.getJNIEnv() ;
-  jobject swigjobj = (jobject) NULL ;
-  jlong jproxy0 = 0 ;
-  
-  if (!swig_override[0]) {
-    return RayResultCallback::needsCollision(proxy0);
-  }
-  swigjobj = swig_get_self(jenv);
-  if (swigjobj && jenv->IsSameObject(swigjobj, NULL) == JNI_FALSE) {
-    *((btBroadphaseProxy **)&jproxy0) = (btBroadphaseProxy *) proxy0; 
-    jresult = (jboolean) jenv->CallStaticBooleanMethod(Swig::jclass_gdxBulletJNI, Swig::director_methids[29], swigjobj, jproxy0);
-    if (jenv->ExceptionCheck() == JNI_TRUE) return c_result;
-    c_result = jresult ? true : false; 
-  } else {
-    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null upcall object");
-  }
-  if (swigjobj) jenv->DeleteLocalRef(swigjobj);
-  return c_result;
-}
-
-btScalar SwigDirector_AllHitsRayResultCallback::addSingleResult(LocalRayResult &rayResult, bool normalInWorldSpace) {
-  btScalar c_result = SwigValueInit< btScalar >() ;
-  jfloat jresult = 0 ;
-  JNIEnvWrapper swigjnienv(this) ;
-  JNIEnv * jenv = swigjnienv.getJNIEnv() ;
-  jobject swigjobj = (jobject) NULL ;
-  jlong jrayResult = 0 ;
-  jboolean jnormalInWorldSpace  ;
-  
-  if (!swig_override[1]) {
-    return AllHitsRayResultCallback::addSingleResult(rayResult,normalInWorldSpace);
-  }
-  swigjobj = swig_get_self(jenv);
-  if (swigjobj && jenv->IsSameObject(swigjobj, NULL) == JNI_FALSE) {
-    *(LocalRayResult **)&jrayResult = (LocalRayResult *) &rayResult; 
-    jnormalInWorldSpace = (jboolean) normalInWorldSpace;
-    jresult = (jfloat) jenv->CallStaticFloatMethod(Swig::jclass_gdxBulletJNI, Swig::director_methids[30], swigjobj, jrayResult, jnormalInWorldSpace);
-    if (jenv->ExceptionCheck() == JNI_TRUE) return c_result;
-    c_result = (btScalar)jresult; 
-  } else {
-    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null upcall object");
-  }
-  if (swigjobj) jenv->DeleteLocalRef(swigjobj);
-  return c_result;
-}
-
-void SwigDirector_AllHitsRayResultCallback::swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global) {
-  static struct {
-    const char *mname;
-    const char *mdesc;
-    jmethodID base_methid;
-  } methods[] = {
-    {
-      "needsCollision", "(Lcom/badlogic/gdx/physics/bullet/btBroadphaseProxy;)Z", NULL 
-    },
-    {
-      "addSingleResult", "(Lcom/badlogic/gdx/physics/bullet/LocalRayResult;Z)F", NULL 
-    }
-  };
-  
-  static jclass baseclass = 0 ;
-  
-  if (swig_set_self(jenv, jself, swig_mem_own, weak_global)) {
-    if (!baseclass) {
-      baseclass = jenv->FindClass("com/badlogic/gdx/physics/bullet/AllHitsRayResultCallback");
-      if (!baseclass) return;
-      baseclass = (jclass) jenv->NewGlobalRef(baseclass);
-    }
-    bool derived = (jenv->IsSameObject(baseclass, jcls) ? false : true);
-    for (int i = 0; i < 2; ++i) {
-      if (!methods[i].base_methid) {
-        methods[i].base_methid = jenv->GetMethodID(baseclass, methods[i].mname, methods[i].mdesc);
-        if (!methods[i].base_methid) return;
-      }
-      swig_override[i] = false;
-      if (derived) {
-        jmethodID methid = jenv->GetMethodID(jcls, methods[i].mname, methods[i].mdesc);
-        swig_override[i] = (methid != methods[i].base_methid);
-        jenv->ExceptionClear();
-      }
-    }
-  }
-}
-
-
-SwigDirector_ConvexResultCallback::SwigDirector_ConvexResultCallback(JNIEnv *jenv) : ConvexResultCallback(), Swig::Director(jenv) {
-}
-
-SwigDirector_ConvexResultCallback::~SwigDirector_ConvexResultCallback() {
-  swig_disconnect_director_self("swigDirectorDisconnect");
-}
-
-
-bool SwigDirector_ConvexResultCallback::needsCollision(btBroadphaseProxy *proxy0) const {
-  bool c_result = SwigValueInit< bool >() ;
-  jboolean jresult = 0 ;
-  JNIEnvWrapper swigjnienv(this) ;
-  JNIEnv * jenv = swigjnienv.getJNIEnv() ;
-  jobject swigjobj = (jobject) NULL ;
-  jlong jproxy0 = 0 ;
-  
-  if (!swig_override[0]) {
-    return ConvexResultCallback::needsCollision(proxy0);
-  }
-  swigjobj = swig_get_self(jenv);
-  if (swigjobj && jenv->IsSameObject(swigjobj, NULL) == JNI_FALSE) {
-    *((btBroadphaseProxy **)&jproxy0) = (btBroadphaseProxy *) proxy0; 
-    jresult = (jboolean) jenv->CallStaticBooleanMethod(Swig::jclass_gdxBulletJNI, Swig::director_methids[31], swigjobj, jproxy0);
-    if (jenv->ExceptionCheck() == JNI_TRUE) return c_result;
-    c_result = jresult ? true : false; 
-  } else {
-    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null upcall object");
-  }
-  if (swigjobj) jenv->DeleteLocalRef(swigjobj);
-  return c_result;
-}
-
-btScalar SwigDirector_ConvexResultCallback::addSingleResult(LocalConvexResult &convexResult, bool normalInWorldSpace) {
-  btScalar c_result = SwigValueInit< btScalar >() ;
-  jfloat jresult = 0 ;
-  JNIEnvWrapper swigjnienv(this) ;
-  JNIEnv * jenv = swigjnienv.getJNIEnv() ;
-  jobject swigjobj = (jobject) NULL ;
-  jlong jconvexResult = 0 ;
-  jboolean jnormalInWorldSpace  ;
-  
-  if (!swig_override[1]) {
-    SWIG_JavaThrowException(JNIEnvWrapper(this).getJNIEnv(), SWIG_JavaDirectorPureVirtual, "Attempted to invoke pure virtual method ConvexResultCallback::addSingleResult.");
-    return c_result;
-  }
-  swigjobj = swig_get_self(jenv);
-  if (swigjobj && jenv->IsSameObject(swigjobj, NULL) == JNI_FALSE) {
-    *(LocalConvexResult **)&jconvexResult = (LocalConvexResult *) &convexResult; 
-    jnormalInWorldSpace = (jboolean) normalInWorldSpace;
-    jresult = (jfloat) jenv->CallStaticFloatMethod(Swig::jclass_gdxBulletJNI, Swig::director_methids[32], swigjobj, jconvexResult, jnormalInWorldSpace);
-    if (jenv->ExceptionCheck() == JNI_TRUE) return c_result;
-    c_result = (btScalar)jresult; 
-  } else {
-    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null upcall object");
-  }
-  if (swigjobj) jenv->DeleteLocalRef(swigjobj);
-  return c_result;
-}
-
-void SwigDirector_ConvexResultCallback::swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global) {
-  static struct {
-    const char *mname;
-    const char *mdesc;
-    jmethodID base_methid;
-  } methods[] = {
-    {
-      "needsCollision", "(Lcom/badlogic/gdx/physics/bullet/btBroadphaseProxy;)Z", NULL 
-    },
-    {
-      "addSingleResult", "(Lcom/badlogic/gdx/physics/bullet/LocalConvexResult;Z)F", NULL 
-    }
-  };
-  
-  static jclass baseclass = 0 ;
-  
-  if (swig_set_self(jenv, jself, swig_mem_own, weak_global)) {
-    if (!baseclass) {
-      baseclass = jenv->FindClass("com/badlogic/gdx/physics/bullet/ConvexResultCallback");
-      if (!baseclass) return;
-      baseclass = (jclass) jenv->NewGlobalRef(baseclass);
-    }
-    bool derived = (jenv->IsSameObject(baseclass, jcls) ? false : true);
-    for (int i = 0; i < 2; ++i) {
-      if (!methods[i].base_methid) {
-        methods[i].base_methid = jenv->GetMethodID(baseclass, methods[i].mname, methods[i].mdesc);
-        if (!methods[i].base_methid) return;
-      }
-      swig_override[i] = false;
-      if (derived) {
-        jmethodID methid = jenv->GetMethodID(jcls, methods[i].mname, methods[i].mdesc);
-        swig_override[i] = (methid != methods[i].base_methid);
-        jenv->ExceptionClear();
-      }
-    }
-  }
-}
-
-
-SwigDirector_ClosestConvexResultCallback::SwigDirector_ClosestConvexResultCallback(JNIEnv *jenv, btVector3 const &convexFromWorld, btVector3 const &convexToWorld) : ClosestConvexResultCallback(convexFromWorld, convexToWorld), Swig::Director(jenv) {
-}
-
-SwigDirector_ClosestConvexResultCallback::~SwigDirector_ClosestConvexResultCallback() {
-  swig_disconnect_director_self("swigDirectorDisconnect");
-}
-
-
-bool SwigDirector_ClosestConvexResultCallback::needsCollision(btBroadphaseProxy *proxy0) const {
-  bool c_result = SwigValueInit< bool >() ;
-  jboolean jresult = 0 ;
-  JNIEnvWrapper swigjnienv(this) ;
-  JNIEnv * jenv = swigjnienv.getJNIEnv() ;
-  jobject swigjobj = (jobject) NULL ;
-  jlong jproxy0 = 0 ;
-  
-  if (!swig_override[0]) {
-    return ConvexResultCallback::needsCollision(proxy0);
-  }
-  swigjobj = swig_get_self(jenv);
-  if (swigjobj && jenv->IsSameObject(swigjobj, NULL) == JNI_FALSE) {
-    *((btBroadphaseProxy **)&jproxy0) = (btBroadphaseProxy *) proxy0; 
-    jresult = (jboolean) jenv->CallStaticBooleanMethod(Swig::jclass_gdxBulletJNI, Swig::director_methids[33], swigjobj, jproxy0);
-    if (jenv->ExceptionCheck() == JNI_TRUE) return c_result;
-    c_result = jresult ? true : false; 
-  } else {
-    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null upcall object");
-  }
-  if (swigjobj) jenv->DeleteLocalRef(swigjobj);
-  return c_result;
-}
-
-btScalar SwigDirector_ClosestConvexResultCallback::addSingleResult(LocalConvexResult &convexResult, bool normalInWorldSpace) {
-  btScalar c_result = SwigValueInit< btScalar >() ;
-  jfloat jresult = 0 ;
-  JNIEnvWrapper swigjnienv(this) ;
-  JNIEnv * jenv = swigjnienv.getJNIEnv() ;
-  jobject swigjobj = (jobject) NULL ;
-  jlong jconvexResult = 0 ;
-  jboolean jnormalInWorldSpace  ;
-  
-  if (!swig_override[1]) {
-    return ClosestConvexResultCallback::addSingleResult(convexResult,normalInWorldSpace);
-  }
-  swigjobj = swig_get_self(jenv);
-  if (swigjobj && jenv->IsSameObject(swigjobj, NULL) == JNI_FALSE) {
-    *(LocalConvexResult **)&jconvexResult = (LocalConvexResult *) &convexResult; 
-    jnormalInWorldSpace = (jboolean) normalInWorldSpace;
-    jresult = (jfloat) jenv->CallStaticFloatMethod(Swig::jclass_gdxBulletJNI, Swig::director_methids[34], swigjobj, jconvexResult, jnormalInWorldSpace);
-    if (jenv->ExceptionCheck() == JNI_TRUE) return c_result;
-    c_result = (btScalar)jresult; 
-  } else {
-    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null upcall object");
-  }
-  if (swigjobj) jenv->DeleteLocalRef(swigjobj);
-  return c_result;
-}
-
-void SwigDirector_ClosestConvexResultCallback::swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global) {
-  static struct {
-    const char *mname;
-    const char *mdesc;
-    jmethodID base_methid;
-  } methods[] = {
-    {
-      "needsCollision", "(Lcom/badlogic/gdx/physics/bullet/btBroadphaseProxy;)Z", NULL 
-    },
-    {
-      "addSingleResult", "(Lcom/badlogic/gdx/physics/bullet/LocalConvexResult;Z)F", NULL 
-    }
-  };
-  
-  static jclass baseclass = 0 ;
-  
-  if (swig_set_self(jenv, jself, swig_mem_own, weak_global)) {
-    if (!baseclass) {
-      baseclass = jenv->FindClass("com/badlogic/gdx/physics/bullet/ClosestConvexResultCallback");
-      if (!baseclass) return;
-      baseclass = (jclass) jenv->NewGlobalRef(baseclass);
-    }
-    bool derived = (jenv->IsSameObject(baseclass, jcls) ? false : true);
-    for (int i = 0; i < 2; ++i) {
-      if (!methods[i].base_methid) {
-        methods[i].base_methid = jenv->GetMethodID(baseclass, methods[i].mname, methods[i].mdesc);
-        if (!methods[i].base_methid) return;
-      }
-      swig_override[i] = false;
-      if (derived) {
-        jmethodID methid = jenv->GetMethodID(jcls, methods[i].mname, methods[i].mdesc);
-        swig_override[i] = (methid != methods[i].base_methid);
-        jenv->ExceptionClear();
-      }
-    }
-  }
-}
-
-
-SwigDirector_ContactResultCallback::SwigDirector_ContactResultCallback(JNIEnv *jenv) : ContactResultCallback(), Swig::Director(jenv) {
-}
-
-SwigDirector_ContactResultCallback::~SwigDirector_ContactResultCallback() {
-  swig_disconnect_director_self("swigDirectorDisconnect");
-}
-
-
-bool SwigDirector_ContactResultCallback::needsCollision(btBroadphaseProxy *proxy0) const {
-  bool c_result = SwigValueInit< bool >() ;
-  jboolean jresult = 0 ;
-  JNIEnvWrapper swigjnienv(this) ;
-  JNIEnv * jenv = swigjnienv.getJNIEnv() ;
-  jobject swigjobj = (jobject) NULL ;
-  jlong jproxy0 = 0 ;
-  
-  if (!swig_override[0]) {
-    return ContactResultCallback::needsCollision(proxy0);
-  }
-  swigjobj = swig_get_self(jenv);
-  if (swigjobj && jenv->IsSameObject(swigjobj, NULL) == JNI_FALSE) {
-    *((btBroadphaseProxy **)&jproxy0) = (btBroadphaseProxy *) proxy0; 
-    jresult = (jboolean) jenv->CallStaticBooleanMethod(Swig::jclass_gdxBulletJNI, Swig::director_methids[35], swigjobj, jproxy0);
-    if (jenv->ExceptionCheck() == JNI_TRUE) return c_result;
-    c_result = jresult ? true : false; 
-  } else {
-    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null upcall object");
-  }
-  if (swigjobj) jenv->DeleteLocalRef(swigjobj);
-  return c_result;
-}
-
-btScalar SwigDirector_ContactResultCallback::addSingleResult(btManifoldPoint &cp, btCollisionObjectWrapper const *colObj0Wrap, int partId0, int index0, btCollisionObjectWrapper const *colObj1Wrap, int partId1, int index1) {
-  btScalar c_result = SwigValueInit< btScalar >() ;
-  jfloat jresult = 0 ;
-  JNIEnvWrapper swigjnienv(this) ;
-  JNIEnv * jenv = swigjnienv.getJNIEnv() ;
-  jobject swigjobj = (jobject) NULL ;
-  jlong jcp = 0 ;
-  jlong jcolObj0Wrap = 0 ;
-  jint jpartId0  ;
-  jint jindex0  ;
-  jlong jcolObj1Wrap = 0 ;
-  jint jpartId1  ;
-  jint jindex1  ;
-  
-  if (!swig_override[1]) {
-    SWIG_JavaThrowException(JNIEnvWrapper(this).getJNIEnv(), SWIG_JavaDirectorPureVirtual, "Attempted to invoke pure virtual method ContactResultCallback::addSingleResult.");
-    return c_result;
-  }
-  swigjobj = swig_get_self(jenv);
-  if (swigjobj && jenv->IsSameObject(swigjobj, NULL) == JNI_FALSE) {
-    *(btManifoldPoint **)&jcp = (btManifoldPoint *) &cp; 
-    *((btCollisionObjectWrapper **)&jcolObj0Wrap) = (btCollisionObjectWrapper *) colObj0Wrap; 
-    jpartId0 = (jint) partId0;
-    jindex0 = (jint) index0;
-    *((btCollisionObjectWrapper **)&jcolObj1Wrap) = (btCollisionObjectWrapper *) colObj1Wrap; 
-    jpartId1 = (jint) partId1;
-    jindex1 = (jint) index1;
-    jresult = (jfloat) jenv->CallStaticFloatMethod(Swig::jclass_gdxBulletJNI, Swig::director_methids[36], swigjobj, jcp, jcolObj0Wrap, jpartId0, jindex0, jcolObj1Wrap, jpartId1, jindex1);
-    if (jenv->ExceptionCheck() == JNI_TRUE) return c_result;
-    c_result = (btScalar)jresult; 
-  } else {
-    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null upcall object");
-  }
-  if (swigjobj) jenv->DeleteLocalRef(swigjobj);
-  return c_result;
-}
-
-void SwigDirector_ContactResultCallback::swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global) {
-  static struct {
-    const char *mname;
-    const char *mdesc;
-    jmethodID base_methid;
-  } methods[] = {
-    {
-      "needsCollision", "(Lcom/badlogic/gdx/physics/bullet/btBroadphaseProxy;)Z", NULL 
-    },
-    {
-      "addSingleResult", "(Lcom/badlogic/gdx/physics/bullet/btManifoldPoint;Lcom/badlogic/gdx/physics/bullet/btCollisionObjectWrapper;IILcom/badlogic/gdx/physics/bullet/btCollisionObjectWrapper;II)F", NULL 
-    }
-  };
-  
-  static jclass baseclass = 0 ;
-  
-  if (swig_set_self(jenv, jself, swig_mem_own, weak_global)) {
-    if (!baseclass) {
-      baseclass = jenv->FindClass("com/badlogic/gdx/physics/bullet/ContactResultCallback");
-      if (!baseclass) return;
-      baseclass = (jclass) jenv->NewGlobalRef(baseclass);
-    }
-    bool derived = (jenv->IsSameObject(baseclass, jcls) ? false : true);
-    for (int i = 0; i < 2; ++i) {
-      if (!methods[i].base_methid) {
-        methods[i].base_methid = jenv->GetMethodID(baseclass, methods[i].mname, methods[i].mdesc);
-        if (!methods[i].base_methid) return;
-      }
-      swig_override[i] = false;
-      if (derived) {
-        jmethodID methid = jenv->GetMethodID(jcls, methods[i].mname, methods[i].mdesc);
-        swig_override[i] = (methid != methods[i].base_methid);
-        jenv->ExceptionClear();
-      }
-    }
-  }
-}
-
-
 SwigDirector_InternalTickCallback::SwigDirector_InternalTickCallback(JNIEnv *jenv, btDynamicsWorld *dynamicsWorld, bool isPreTick) : InternalTickCallback(dynamicsWorld, isPreTick), Swig::Director(jenv) {
 }
 
@@ -3739,7 +3024,7 @@ void SwigDirector_InternalTickCallback::onInternalTick(btDynamicsWorld *dynamics
   if (swigjobj && jenv->IsSameObject(swigjobj, NULL) == JNI_FALSE) {
     *((btDynamicsWorld **)&jdynamicsWorld) = (btDynamicsWorld *) dynamicsWorld; 
     jtimeStep = (jfloat) timeStep;
-    jenv->CallStaticVoidMethod(Swig::jclass_gdxBulletJNI, Swig::director_methids[37], swigjobj, jdynamicsWorld, jtimeStep);
+    jenv->CallStaticVoidMethod(Swig::jclass_gdxBulletJNI, Swig::director_methids[25], swigjobj, jdynamicsWorld, jtimeStep);
     if (jenv->ExceptionCheck() == JNI_TRUE) return ;
   } else {
     SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null upcall object");
@@ -18635,7 +17920,7 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btMult
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btMultiSapBroadphase_1quicksort(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btMultiSapBroadphase_1quicksort(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3, jint jarg4) {
   btMultiSapBroadphase *arg1 = (btMultiSapBroadphase *) 0 ;
   btBroadphasePairArray *arg2 = 0 ;
   int arg3 ;
@@ -18644,7 +17929,6 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btMult
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
-  (void)jarg2_;
   arg1 = *(btMultiSapBroadphase **)&jarg1; 
   arg2 = *(btBroadphasePairArray **)&jarg2;
   if (!arg2) {
@@ -18764,7 +18048,7 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_delete
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCollisionAlgorithm_1processCollision(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_) {
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCollisionAlgorithm_1processCollision(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_) {
   btCollisionAlgorithm *arg1 = (btCollisionAlgorithm *) 0 ;
   btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
   btCollisionObjectWrapper *arg3 = (btCollisionObjectWrapper *) 0 ;
@@ -18774,8 +18058,6 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btColl
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
-  (void)jarg2_;
-  (void)jarg3_;
   (void)jarg4_;
   (void)jarg5_;
   arg1 = *(btCollisionAlgorithm **)&jarg1; 
@@ -18822,14 +18104,13 @@ SWIGEXPORT jfloat JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCo
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCollisionAlgorithm_1getAllContactManifolds(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCollisionAlgorithm_1getAllContactManifolds(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
   btCollisionAlgorithm *arg1 = (btCollisionAlgorithm *) 0 ;
   btManifoldArray *arg2 = 0 ;
   
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
-  (void)jarg2_;
   arg1 = *(btCollisionAlgorithm **)&jarg1; 
   arg2 = *(btManifoldArray **)&jarg2;
   if (!arg2) {
@@ -20460,7 +19741,7 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_delete
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btDispatcher_1findAlgorithm_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
+SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btDispatcher_1findAlgorithm_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4, jobject jarg4_) {
   jlong jresult = 0 ;
   btDispatcher *arg1 = (btDispatcher *) 0 ;
   btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
@@ -20471,8 +19752,6 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btDis
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
-  (void)jarg2_;
-  (void)jarg3_;
   (void)jarg4_;
   arg1 = *(btDispatcher **)&jarg1; 
   arg2 = *(btCollisionObjectWrapper **)&jarg2; 
@@ -20484,7 +19763,7 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btDis
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btDispatcher_1findAlgorithm_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
+SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btDispatcher_1findAlgorithm_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
   jlong jresult = 0 ;
   btDispatcher *arg1 = (btDispatcher *) 0 ;
   btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
@@ -20494,8 +19773,6 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btDis
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
-  (void)jarg2_;
-  (void)jarg3_;
   arg1 = *(btDispatcher **)&jarg1; 
   arg2 = *(btCollisionObjectWrapper **)&jarg2; 
   arg3 = *(btCollisionObjectWrapper **)&jarg3; 
@@ -25357,6 +24634,319 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_delete
 }
 
 
+SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btMultiSphereShape(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jint jarg3) {
+  jlong jresult = 0 ;
+  btVector3 *arg1 = (btVector3 *) 0 ;
+  btScalar *arg2 = (btScalar *) 0 ;
+  int arg3 ;
+  btMultiSphereShape *result = 0 ;
+  
+  (void)jenv;
+  (void)jcls;
+  (void)jarg1_;
+  arg1 = *(btVector3 **)&jarg1; 
+  {
+    arg2 = (btScalar*)jenv->GetDirectBufferAddress(jarg2);
+    if (arg2 == NULL) {
+      SWIG_JavaThrowException(jenv, SWIG_JavaRuntimeException, "Unable to get address of direct buffer. Buffer must be allocated direct.");
+    }
+  }
+  arg3 = (int)jarg3; 
+  result = (btMultiSphereShape *)new btMultiSphereShape((btVector3 const *)arg1,(btScalar const *)arg2,arg3);
+  *(btMultiSphereShape **)&jresult = result; 
+  
+  return jresult;
+}
+
+
+SWIGEXPORT jint JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btMultiSphereShape_1getSphereCount(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
+  jint jresult = 0 ;
+  btMultiSphereShape *arg1 = (btMultiSphereShape *) 0 ;
+  int result;
+  
+  (void)jenv;
+  (void)jcls;
+  (void)jarg1_;
+  arg1 = *(btMultiSphereShape **)&jarg1; 
+  result = (int)((btMultiSphereShape const *)arg1)->getSphereCount();
+  jresult = (jint)result; 
+  return jresult;
+}
+
+
+SWIGEXPORT jobject JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btMultiSphereShape_1getSpherePosition(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
+  jobject jresult = 0 ;
+  btMultiSphereShape *arg1 = (btMultiSphereShape *) 0 ;
+  int arg2 ;
+  btVector3 *result = 0 ;
+  
+  (void)jenv;
+  (void)jcls;
+  (void)jarg1_;
+  arg1 = *(btMultiSphereShape **)&jarg1; 
+  arg2 = (int)jarg2; 
+  result = (btVector3 *) &((btMultiSphereShape const *)arg1)->getSpherePosition(arg2);
+  jresult = gdx_getReturnVector3(jenv);
+  gdx_setVector3FrombtVector3(jenv, jresult, result);
+  return jresult;
+}
+
+
+SWIGEXPORT jfloat JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btMultiSphereShape_1getSphereRadius(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
+  jfloat jresult = 0 ;
+  btMultiSphereShape *arg1 = (btMultiSphereShape *) 0 ;
+  int arg2 ;
+  btScalar result;
+  
+  (void)jenv;
+  (void)jcls;
+  (void)jarg1_;
+  arg1 = *(btMultiSphereShape **)&jarg1; 
+  arg2 = (int)jarg2; 
+  result = (btScalar)((btMultiSphereShape const *)arg1)->getSphereRadius(arg2);
+  jresult = (jfloat)result; 
+  return jresult;
+}
+
+
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_delete_1btMultiSphereShape(JNIEnv *jenv, jclass jcls, jlong jarg1) {
+  btMultiSphereShape *arg1 = (btMultiSphereShape *) 0 ;
+  
+  (void)jenv;
+  (void)jcls;
+  arg1 = *(btMultiSphereShape **)&jarg1; 
+  delete arg1;
+}
+
+
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btPositionAndRadius_1m_1pos_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
+  btPositionAndRadius *arg1 = (btPositionAndRadius *) 0 ;
+  btVector3FloatData *arg2 = (btVector3FloatData *) 0 ;
+  
+  (void)jenv;
+  (void)jcls;
+  (void)jarg1_;
+  (void)jarg2_;
+  arg1 = *(btPositionAndRadius **)&jarg1; 
+  arg2 = *(btVector3FloatData **)&jarg2; 
+  if (arg1) (arg1)->m_pos = *arg2;
+}
+
+
+SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btPositionAndRadius_1m_1pos_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
+  jlong jresult = 0 ;
+  btPositionAndRadius *arg1 = (btPositionAndRadius *) 0 ;
+  btVector3FloatData *result = 0 ;
+  
+  (void)jenv;
+  (void)jcls;
+  (void)jarg1_;
+  arg1 = *(btPositionAndRadius **)&jarg1; 
+  result = (btVector3FloatData *)& ((arg1)->m_pos);
+  *(btVector3FloatData **)&jresult = result; 
+  return jresult;
+}
+
+
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btPositionAndRadius_1m_1radius_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
+  btPositionAndRadius *arg1 = (btPositionAndRadius *) 0 ;
+  float arg2 ;
+  
+  (void)jenv;
+  (void)jcls;
+  (void)jarg1_;
+  arg1 = *(btPositionAndRadius **)&jarg1; 
+  arg2 = (float)jarg2; 
+  if (arg1) (arg1)->m_radius = arg2;
+}
+
+
+SWIGEXPORT jfloat JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btPositionAndRadius_1m_1radius_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
+  jfloat jresult = 0 ;
+  btPositionAndRadius *arg1 = (btPositionAndRadius *) 0 ;
+  float result;
+  
+  (void)jenv;
+  (void)jcls;
+  (void)jarg1_;
+  arg1 = *(btPositionAndRadius **)&jarg1; 
+  result = (float) ((arg1)->m_radius);
+  jresult = (jfloat)result; 
+  return jresult;
+}
+
+
+SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btPositionAndRadius(JNIEnv *jenv, jclass jcls) {
+  jlong jresult = 0 ;
+  btPositionAndRadius *result = 0 ;
+  
+  (void)jenv;
+  (void)jcls;
+  result = (btPositionAndRadius *)new btPositionAndRadius();
+  *(btPositionAndRadius **)&jresult = result; 
+  return jresult;
+}
+
+
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_delete_1btPositionAndRadius(JNIEnv *jenv, jclass jcls, jlong jarg1) {
+  btPositionAndRadius *arg1 = (btPositionAndRadius *) 0 ;
+  
+  (void)jenv;
+  (void)jcls;
+  arg1 = *(btPositionAndRadius **)&jarg1; 
+  delete arg1;
+}
+
+
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btMultiSphereShapeData_1m_1convexInternalShapeData_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
+  btMultiSphereShapeData *arg1 = (btMultiSphereShapeData *) 0 ;
+  btConvexInternalShapeData *arg2 = (btConvexInternalShapeData *) 0 ;
+  
+  (void)jenv;
+  (void)jcls;
+  (void)jarg1_;
+  (void)jarg2_;
+  arg1 = *(btMultiSphereShapeData **)&jarg1; 
+  arg2 = *(btConvexInternalShapeData **)&jarg2; 
+  if (arg1) (arg1)->m_convexInternalShapeData = *arg2;
+}
+
+
+SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btMultiSphereShapeData_1m_1convexInternalShapeData_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
+  jlong jresult = 0 ;
+  btMultiSphereShapeData *arg1 = (btMultiSphereShapeData *) 0 ;
+  btConvexInternalShapeData *result = 0 ;
+  
+  (void)jenv;
+  (void)jcls;
+  (void)jarg1_;
+  arg1 = *(btMultiSphereShapeData **)&jarg1; 
+  result = (btConvexInternalShapeData *)& ((arg1)->m_convexInternalShapeData);
+  *(btConvexInternalShapeData **)&jresult = result; 
+  return jresult;
+}
+
+
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btMultiSphereShapeData_1m_1localPositionArrayPtr_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
+  btMultiSphereShapeData *arg1 = (btMultiSphereShapeData *) 0 ;
+  btPositionAndRadius *arg2 = (btPositionAndRadius *) 0 ;
+  
+  (void)jenv;
+  (void)jcls;
+  (void)jarg1_;
+  (void)jarg2_;
+  arg1 = *(btMultiSphereShapeData **)&jarg1; 
+  arg2 = *(btPositionAndRadius **)&jarg2; 
+  if (arg1) (arg1)->m_localPositionArrayPtr = arg2;
+}
+
+
+SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btMultiSphereShapeData_1m_1localPositionArrayPtr_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
+  jlong jresult = 0 ;
+  btMultiSphereShapeData *arg1 = (btMultiSphereShapeData *) 0 ;
+  btPositionAndRadius *result = 0 ;
+  
+  (void)jenv;
+  (void)jcls;
+  (void)jarg1_;
+  arg1 = *(btMultiSphereShapeData **)&jarg1; 
+  result = (btPositionAndRadius *) ((arg1)->m_localPositionArrayPtr);
+  *(btPositionAndRadius **)&jresult = result; 
+  return jresult;
+}
+
+
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btMultiSphereShapeData_1m_1localPositionArraySize_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
+  btMultiSphereShapeData *arg1 = (btMultiSphereShapeData *) 0 ;
+  int arg2 ;
+  
+  (void)jenv;
+  (void)jcls;
+  (void)jarg1_;
+  arg1 = *(btMultiSphereShapeData **)&jarg1; 
+  arg2 = (int)jarg2; 
+  if (arg1) (arg1)->m_localPositionArraySize = arg2;
+}
+
+
+SWIGEXPORT jint JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btMultiSphereShapeData_1m_1localPositionArraySize_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
+  jint jresult = 0 ;
+  btMultiSphereShapeData *arg1 = (btMultiSphereShapeData *) 0 ;
+  int result;
+  
+  (void)jenv;
+  (void)jcls;
+  (void)jarg1_;
+  arg1 = *(btMultiSphereShapeData **)&jarg1; 
+  result = (int) ((arg1)->m_localPositionArraySize);
+  jresult = (jint)result; 
+  return jresult;
+}
+
+
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btMultiSphereShapeData_1m_1padding_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
+  btMultiSphereShapeData *arg1 = (btMultiSphereShapeData *) 0 ;
+  char *arg2 ;
+  
+  (void)jenv;
+  (void)jcls;
+  (void)jarg1_;
+  arg1 = *(btMultiSphereShapeData **)&jarg1; 
+  arg2 = 0;
+  if (jarg2) {
+    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
+    if (!arg2) return ;
+  }
+  {
+    if(arg2) {
+      strncpy((char*)arg1->m_padding, (const char *)arg2, 4-1);
+      arg1->m_padding[4-1] = 0;
+    } else {
+      arg1->m_padding[0] = 0;
+    }
+  }
+  
+  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
+}
+
+
+SWIGEXPORT jstring JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btMultiSphereShapeData_1m_1padding_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
+  jstring jresult = 0 ;
+  btMultiSphereShapeData *arg1 = (btMultiSphereShapeData *) 0 ;
+  char *result = 0 ;
+  
+  (void)jenv;
+  (void)jcls;
+  (void)jarg1_;
+  arg1 = *(btMultiSphereShapeData **)&jarg1; 
+  result = (char *)(char *) ((arg1)->m_padding);
+  if (result) jresult = jenv->NewStringUTF((const char *)result);
+  return jresult;
+}
+
+
+SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btMultiSphereShapeData(JNIEnv *jenv, jclass jcls) {
+  jlong jresult = 0 ;
+  btMultiSphereShapeData *result = 0 ;
+  
+  (void)jenv;
+  (void)jcls;
+  result = (btMultiSphereShapeData *)new btMultiSphereShapeData();
+  *(btMultiSphereShapeData **)&jresult = result; 
+  return jresult;
+}
+
+
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_delete_1btMultiSphereShapeData(JNIEnv *jenv, jclass jcls, jlong jarg1) {
+  btMultiSphereShapeData *arg1 = (btMultiSphereShapeData *) 0 ;
+  
+  (void)jenv;
+  (void)jcls;
+  arg1 = *(btMultiSphereShapeData **)&jarg1; 
+  delete arg1;
+}
+
+
 SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_delete_1btStridingMeshInterface(JNIEnv *jenv, jclass jcls, jlong jarg1) {
   btStridingMeshInterface *arg1 = (btStridingMeshInterface *) 0 ;
   
@@ -32300,34 +31890,6 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btColl
 }
 
 
-SWIGEXPORT jint JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCollisionObject_1getUserValue(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
-  jint jresult = 0 ;
-  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
-  int result;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  arg1 = *(btCollisionObject **)&jarg1; 
-  result = (int)btCollisionObject_getUserValue(arg1);
-  jresult = (jint)result; 
-  return jresult;
-}
-
-
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCollisionObject_1setUserValue(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
-  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
-  int arg2 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  arg1 = *(btCollisionObject **)&jarg1; 
-  arg2 = (int)jarg2; 
-  btCollisionObject_setUserValue(arg1,arg2);
-}
-
-
 SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCollisionObjectDoubleData_1m_1broadphaseHandle_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
   btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
   void *arg2 = (void *) 0 ;
@@ -36972,155 +36534,6 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_delete
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCollisionObjectWrapper_1m_1parent_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
-  btCollisionObjectWrapper *arg1 = (btCollisionObjectWrapper *) 0 ;
-  btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  (void)jarg2_;
-  arg1 = *(btCollisionObjectWrapper **)&jarg1; 
-  arg2 = *(btCollisionObjectWrapper **)&jarg2; 
-  if (arg1) (arg1)->m_parent = (btCollisionObjectWrapper const *)arg2;
-}
-
-
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCollisionObjectWrapper_1m_1parent_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
-  jlong jresult = 0 ;
-  btCollisionObjectWrapper *arg1 = (btCollisionObjectWrapper *) 0 ;
-  btCollisionObjectWrapper *result = 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  arg1 = *(btCollisionObjectWrapper **)&jarg1; 
-  result = (btCollisionObjectWrapper *) ((arg1)->m_parent);
-  *(btCollisionObjectWrapper **)&jresult = result; 
-  return jresult;
-}
-
-
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCollisionObjectWrapper_1m_1shape_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
-  btCollisionObjectWrapper *arg1 = (btCollisionObjectWrapper *) 0 ;
-  btCollisionShape *arg2 = (btCollisionShape *) 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  (void)jarg2_;
-  arg1 = *(btCollisionObjectWrapper **)&jarg1; 
-  arg2 = *(btCollisionShape **)&jarg2; 
-  if (arg1) (arg1)->m_shape = (btCollisionShape const *)arg2;
-}
-
-
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCollisionObjectWrapper_1m_1shape_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
-  jlong jresult = 0 ;
-  btCollisionObjectWrapper *arg1 = (btCollisionObjectWrapper *) 0 ;
-  btCollisionShape *result = 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  arg1 = *(btCollisionObjectWrapper **)&jarg1; 
-  result = (btCollisionShape *) ((arg1)->m_shape);
-  *(btCollisionShape **)&jresult = result; 
-  return jresult;
-}
-
-
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCollisionObjectWrapper_1m_1collisionObject_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
-  btCollisionObjectWrapper *arg1 = (btCollisionObjectWrapper *) 0 ;
-  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  (void)jarg2_;
-  arg1 = *(btCollisionObjectWrapper **)&jarg1; 
-  arg2 = *(btCollisionObject **)&jarg2; 
-  if (arg1) (arg1)->m_collisionObject = (btCollisionObject const *)arg2;
-}
-
-
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCollisionObjectWrapper_1m_1collisionObject_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
-  jlong jresult = 0 ;
-  btCollisionObjectWrapper *arg1 = (btCollisionObjectWrapper *) 0 ;
-  btCollisionObject *result = 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  arg1 = *(btCollisionObjectWrapper **)&jarg1; 
-  result = (btCollisionObject *) ((arg1)->m_collisionObject);
-  *(btCollisionObject **)&jresult = result; 
-  return jresult;
-}
-
-
-SWIGEXPORT jobject JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCollisionObjectWrapper_1m_1worldTransform_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
-  jobject jresult = 0 ;
-  btCollisionObjectWrapper *arg1 = (btCollisionObjectWrapper *) 0 ;
-  btTransform *result = 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  arg1 = *(btCollisionObjectWrapper **)&jarg1; 
-  result = (btTransform *) &(btTransform const &) ((arg1)->m_worldTransform);
-  jresult = gdx_getReturnMatrix4(jenv);
-  gdx_setMatrix4FrombtTransform(jenv, jresult, result);
-  return jresult;
-}
-
-
-SWIGEXPORT jobject JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCollisionObjectWrapper_1getWorldTransform(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
-  jobject jresult = 0 ;
-  btCollisionObjectWrapper *arg1 = (btCollisionObjectWrapper *) 0 ;
-  btTransform *result = 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  arg1 = *(btCollisionObjectWrapper **)&jarg1; 
-  result = (btTransform *) &((btCollisionObjectWrapper const *)arg1)->getWorldTransform();
-  jresult = gdx_getReturnMatrix4(jenv);
-  gdx_setMatrix4FrombtTransform(jenv, jresult, result);
-  return jresult;
-}
-
-
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCollisionObjectWrapper_1getCollisionObject(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
-  jlong jresult = 0 ;
-  btCollisionObjectWrapper *arg1 = (btCollisionObjectWrapper *) 0 ;
-  btCollisionObject *result = 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  arg1 = *(btCollisionObjectWrapper **)&jarg1; 
-  result = (btCollisionObject *)((btCollisionObjectWrapper const *)arg1)->getCollisionObject();
-  *(btCollisionObject **)&jresult = result; 
-  return jresult;
-}
-
-
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCollisionObjectWrapper_1getCollisionShape(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
-  jlong jresult = 0 ;
-  btCollisionObjectWrapper *arg1 = (btCollisionObjectWrapper *) 0 ;
-  btCollisionShape *result = 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  arg1 = *(btCollisionObjectWrapper **)&jarg1; 
-  result = (btCollisionShape *)((btCollisionObjectWrapper const *)arg1)->getCollisionShape();
-  *(btCollisionShape **)&jresult = result; 
-  return jresult;
-}
-
-
 SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btEmptyAlgorithm(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
   jlong jresult = 0 ;
   btCollisionAlgorithmConstructionInfo *arg1 = 0 ;
@@ -37217,7 +36630,7 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCon
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btConvexTriangleCallback(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jboolean jarg4) {
+SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btConvexTriangleCallback(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jboolean jarg4) {
   jlong jresult = 0 ;
   btDispatcher *arg1 = (btDispatcher *) 0 ;
   btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
@@ -37228,8 +36641,6 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
-  (void)jarg2_;
-  (void)jarg3_;
   arg1 = *(btDispatcher **)&jarg1; 
   arg2 = *(btCollisionObjectWrapper **)&jarg2; 
   arg3 = *(btCollisionObjectWrapper **)&jarg3; 
@@ -37240,7 +36651,7 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btConvexTriangleCallback_1setTimeStepAndCounters(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_, jlong jarg6, jobject jarg6_) {
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btConvexTriangleCallback_1setTimeStepAndCounters(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jlong jarg5, jlong jarg6, jobject jarg6_) {
   btConvexTriangleCallback *arg1 = (btConvexTriangleCallback *) 0 ;
   btScalar arg2 ;
   btDispatcherInfo *arg3 = 0 ;
@@ -37252,8 +36663,6 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btConv
   (void)jcls;
   (void)jarg1_;
   (void)jarg3_;
-  (void)jarg4_;
-  (void)jarg5_;
   (void)jarg6_;
   arg1 = *(btConvexTriangleCallback **)&jarg1; 
   arg2 = (btScalar)jarg2; 
@@ -37333,7 +36742,7 @@ SWIGEXPORT jobject JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btC
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btConvexConcaveCollisionAlgorithm(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jboolean jarg4) {
+SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btConvexConcaveCollisionAlgorithm(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jboolean jarg4) {
   jlong jresult = 0 ;
   btCollisionAlgorithmConstructionInfo *arg1 = 0 ;
   btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
@@ -37344,8 +36753,6 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
-  (void)jarg2_;
-  (void)jarg3_;
   arg1 = *(btCollisionAlgorithmConstructionInfo **)&jarg1;
   if (!arg1) {
     SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "btCollisionAlgorithmConstructionInfo const & reference is null");
@@ -37381,7 +36788,7 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btConv
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btConvexPlaneCollisionAlgorithm(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jboolean jarg5, jint jarg6, jint jarg7) {
+SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btConvexPlaneCollisionAlgorithm(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4, jboolean jarg5, jint jarg6, jint jarg7) {
   jlong jresult = 0 ;
   btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
   btCollisionAlgorithmConstructionInfo *arg2 = 0 ;
@@ -37396,8 +36803,6 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
   (void)jcls;
   (void)jarg1_;
   (void)jarg2_;
-  (void)jarg3_;
-  (void)jarg4_;
   arg1 = *(btPersistentManifold **)&jarg1; 
   arg2 = *(btCollisionAlgorithmConstructionInfo **)&jarg2;
   if (!arg2) {
@@ -37425,7 +36830,7 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_delete
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btConvexPlaneCollisionAlgorithm_1collideSingleContact(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_, jlong jarg6, jobject jarg6_) {
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btConvexPlaneCollisionAlgorithm_1collideSingleContact(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jobject jarg5_, jlong jarg6, jobject jarg6_) {
   btConvexPlaneCollisionAlgorithm *arg1 = (btConvexPlaneCollisionAlgorithm *) 0 ;
   btQuaternion *arg2 = 0 ;
   btCollisionObjectWrapper *arg3 = (btCollisionObjectWrapper *) 0 ;
@@ -37436,8 +36841,6 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btConv
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
-  (void)jarg3_;
-  (void)jarg4_;
   (void)jarg5_;
   (void)jarg6_;
   arg1 = *(btConvexPlaneCollisionAlgorithm **)&jarg1; 
@@ -37948,7 +37351,7 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btManifoldResult_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
+SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btManifoldResult_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
   jlong jresult = 0 ;
   btCollisionObjectWrapper *arg1 = (btCollisionObjectWrapper *) 0 ;
   btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
@@ -37956,8 +37359,6 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
   
   (void)jenv;
   (void)jcls;
-  (void)jarg1_;
-  (void)jarg2_;
   arg1 = *(btCollisionObjectWrapper **)&jarg1; 
   arg2 = *(btCollisionObjectWrapper **)&jarg2; 
   result = (btManifoldResult *)new btManifoldResult((btCollisionObjectWrapper const *)arg1,(btCollisionObjectWrapper const *)arg2);
@@ -38099,28 +37500,26 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btMan
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btManifoldResult_1setBody0Wrap(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btManifoldResult_1setBody0Wrap(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
   btManifoldResult *arg1 = (btManifoldResult *) 0 ;
   btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
   
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
-  (void)jarg2_;
   arg1 = *(btManifoldResult **)&jarg1; 
   arg2 = *(btCollisionObjectWrapper **)&jarg2; 
   (arg1)->setBody0Wrap((btCollisionObjectWrapper const *)arg2);
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btManifoldResult_1setBody1Wrap(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btManifoldResult_1setBody1Wrap(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
   btManifoldResult *arg1 = (btManifoldResult *) 0 ;
   btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
   
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
-  (void)jarg2_;
   arg1 = *(btManifoldResult **)&jarg1; 
   arg2 = *(btCollisionObjectWrapper **)&jarg2; 
   (arg1)->setBody1Wrap((btCollisionObjectWrapper const *)arg2);
@@ -38157,7 +37556,7 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btMan
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btSphereSphereCollisionAlgorithm_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
+SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btSphereSphereCollisionAlgorithm_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4) {
   jlong jresult = 0 ;
   btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
   btCollisionAlgorithmConstructionInfo *arg2 = 0 ;
@@ -38169,8 +37568,6 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
   (void)jcls;
   (void)jarg1_;
   (void)jarg2_;
-  (void)jarg3_;
-  (void)jarg4_;
   arg1 = *(btPersistentManifold **)&jarg1; 
   arg2 = *(btCollisionAlgorithmConstructionInfo **)&jarg2;
   if (!arg2) {
@@ -38233,7 +37630,7 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btBoxBoxCollisionAlgorithm_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
+SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btBoxBoxCollisionAlgorithm_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4) {
   jlong jresult = 0 ;
   btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
   btCollisionAlgorithmConstructionInfo *arg2 = 0 ;
@@ -38245,8 +37642,6 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
   (void)jcls;
   (void)jarg1_;
   (void)jarg2_;
-  (void)jarg3_;
-  (void)jarg4_;
   arg1 = *(btPersistentManifold **)&jarg1; 
   arg2 = *(btCollisionAlgorithmConstructionInfo **)&jarg2;
   if (!arg2) {
@@ -38321,7 +37716,7 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_delete
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCollisionAlgorithmCreateFunc_1CreateCollisionAlgorithm(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
+SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCollisionAlgorithmCreateFunc_1CreateCollisionAlgorithm(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4) {
   jlong jresult = 0 ;
   btCollisionAlgorithmCreateFunc *arg1 = (btCollisionAlgorithmCreateFunc *) 0 ;
   btCollisionAlgorithmConstructionInfo *arg2 = 0 ;
@@ -38333,8 +37728,6 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCol
   (void)jcls;
   (void)jarg1_;
   (void)jarg2_;
-  (void)jarg3_;
-  (void)jarg4_;
   arg1 = *(btCollisionAlgorithmCreateFunc **)&jarg1; 
   arg2 = *(btCollisionAlgorithmConstructionInfo **)&jarg2;
   if (!arg2) {
@@ -38368,7 +37761,7 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btBox2dBox2dCollisionAlgorithm_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
+SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btBox2dBox2dCollisionAlgorithm_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4) {
   jlong jresult = 0 ;
   btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
   btCollisionAlgorithmConstructionInfo *arg2 = 0 ;
@@ -38380,8 +37773,6 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
   (void)jcls;
   (void)jarg1_;
   (void)jarg2_;
-  (void)jarg3_;
-  (void)jarg4_;
   arg1 = *(btPersistentManifold **)&jarg1; 
   arg2 = *(btCollisionAlgorithmConstructionInfo **)&jarg2;
   if (!arg2) {
@@ -38654,7 +38045,7 @@ SWIGEXPORT jint JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btUnio
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btSphereTriangleCollisionAlgorithm_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jboolean jarg5) {
+SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btSphereTriangleCollisionAlgorithm_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4, jboolean jarg5) {
   jlong jresult = 0 ;
   btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
   btCollisionAlgorithmConstructionInfo *arg2 = 0 ;
@@ -38667,8 +38058,6 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
   (void)jcls;
   (void)jarg1_;
   (void)jarg2_;
-  (void)jarg3_;
-  (void)jarg4_;
   arg1 = *(btPersistentManifold **)&jarg1; 
   arg2 = *(btCollisionAlgorithmConstructionInfo **)&jarg2;
   if (!arg2) {
@@ -39640,18 +39029,6 @@ SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_Ra
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1RayResultCallback(JNIEnv *jenv, jclass jcls) {
-  jlong jresult = 0 ;
-  RayResultCallback *result = 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  result = (RayResultCallback *)new SwigDirector_RayResultCallback(jenv);
-  *(RayResultCallback **)&jresult = result; 
-  return jresult;
-}
-
-
 SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_RayResultCallback_1needsCollision(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
   jboolean jresult = 0 ;
   RayResultCallback *arg1 = (RayResultCallback *) 0 ;
@@ -39670,24 +39047,6 @@ SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_Ra
 }
 
 
-SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_RayResultCallback_1needsCollisionSwigExplicitRayResultCallback(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
-  jboolean jresult = 0 ;
-  RayResultCallback *arg1 = (RayResultCallback *) 0 ;
-  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
-  bool result;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  (void)jarg2_;
-  arg1 = *(RayResultCallback **)&jarg1; 
-  arg2 = *(btBroadphaseProxy **)&jarg2; 
-  result = (bool)((RayResultCallback const *)arg1)->RayResultCallback::needsCollision(arg2);
-  jresult = (jboolean)result; 
-  return jresult;
-}
-
-
 SWIGEXPORT jfloat JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_RayResultCallback_1addSingleResult(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jboolean jarg3) {
   jfloat jresult = 0 ;
   RayResultCallback *arg1 = (RayResultCallback *) 0 ;
@@ -39712,26 +39071,6 @@ SWIGEXPORT jfloat JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_RayR
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_RayResultCallback_1director_1connect(JNIEnv *jenv, jclass jcls, jobject jself, jlong objarg, jboolean jswig_mem_own, jboolean jweak_global) {
-  RayResultCallback *obj = *((RayResultCallback **)&objarg);
-  (void)jcls;
-  SwigDirector_RayResultCallback *director = (SwigDirector_RayResultCallback *)(obj);
-  if (director) {
-    director->swig_connect_director(jenv, jself, jenv->GetObjectClass(jself), (jswig_mem_own == JNI_TRUE), (jweak_global == JNI_TRUE));
-  }
-}
-
-
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_RayResultCallback_1change_1ownership(JNIEnv *jenv, jclass jcls, jobject jself, jlong objarg, jboolean jtake_or_release) {
-  RayResultCallback *obj = *((RayResultCallback **)&objarg);
-  SwigDirector_RayResultCallback *director = (SwigDirector_RayResultCallback *)(obj);
-  (void)jcls;
-  if (director) {
-    director->swig_java_change_ownership(jenv, jself, jtake_or_release ? true : false);
-  }
-}
-
-
 SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1ClosestRayResultCallback(JNIEnv *jenv, jclass jcls, jobject jarg1, jobject jarg2) {
   jlong jresult = 0 ;
   btVector3 *arg1 = 0 ;
@@ -39748,7 +39087,7 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
   gdx_setbtVector3FromVector3(jenv, local_arg2, jarg2);
   arg2 = &local_arg2;
   gdxAutoCommitVector3 auto_commit_arg2(jenv, jarg2, &local_arg2);
-  result = (ClosestRayResultCallback *)new SwigDirector_ClosestRayResultCallback(jenv,(btVector3 const &)*arg1,(btVector3 const &)*arg2);
+  result = (ClosestRayResultCallback *)new ClosestRayResultCallback((btVector3 const &)*arg1,(btVector3 const &)*arg2);
   *(ClosestRayResultCallback **)&jresult = result; 
   return jresult;
 }
@@ -39870,54 +39209,6 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_Close
 }
 
 
-SWIGEXPORT jfloat JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_ClosestRayResultCallback_1addSingleResult(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jboolean jarg3) {
-  jfloat jresult = 0 ;
-  ClosestRayResultCallback *arg1 = (ClosestRayResultCallback *) 0 ;
-  LocalRayResult *arg2 = 0 ;
-  bool arg3 ;
-  btScalar result;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  (void)jarg2_;
-  arg1 = *(ClosestRayResultCallback **)&jarg1; 
-  arg2 = *(LocalRayResult **)&jarg2;
-  if (!arg2) {
-    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "LocalRayResult & reference is null");
-    return 0;
-  } 
-  arg3 = jarg3 ? true : false; 
-  result = (btScalar)(arg1)->addSingleResult(*arg2,arg3);
-  jresult = (jfloat)result; 
-  return jresult;
-}
-
-
-SWIGEXPORT jfloat JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_ClosestRayResultCallback_1addSingleResultSwigExplicitClosestRayResultCallback(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jboolean jarg3) {
-  jfloat jresult = 0 ;
-  ClosestRayResultCallback *arg1 = (ClosestRayResultCallback *) 0 ;
-  LocalRayResult *arg2 = 0 ;
-  bool arg3 ;
-  btScalar result;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  (void)jarg2_;
-  arg1 = *(ClosestRayResultCallback **)&jarg1; 
-  arg2 = *(LocalRayResult **)&jarg2;
-  if (!arg2) {
-    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "LocalRayResult & reference is null");
-    return 0;
-  } 
-  arg3 = jarg3 ? true : false; 
-  result = (btScalar)(arg1)->ClosestRayResultCallback::addSingleResult(*arg2,arg3);
-  jresult = (jfloat)result; 
-  return jresult;
-}
-
-
 SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_delete_1ClosestRayResultCallback(JNIEnv *jenv, jclass jcls, jlong jarg1) {
   ClosestRayResultCallback *arg1 = (ClosestRayResultCallback *) 0 ;
   
@@ -39928,26 +39219,6 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_delete
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_ClosestRayResultCallback_1director_1connect(JNIEnv *jenv, jclass jcls, jobject jself, jlong objarg, jboolean jswig_mem_own, jboolean jweak_global) {
-  ClosestRayResultCallback *obj = *((ClosestRayResultCallback **)&objarg);
-  (void)jcls;
-  SwigDirector_ClosestRayResultCallback *director = (SwigDirector_ClosestRayResultCallback *)(obj);
-  if (director) {
-    director->swig_connect_director(jenv, jself, jenv->GetObjectClass(jself), (jswig_mem_own == JNI_TRUE), (jweak_global == JNI_TRUE));
-  }
-}
-
-
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_ClosestRayResultCallback_1change_1ownership(JNIEnv *jenv, jclass jcls, jobject jself, jlong objarg, jboolean jtake_or_release) {
-  ClosestRayResultCallback *obj = *((ClosestRayResultCallback **)&objarg);
-  SwigDirector_ClosestRayResultCallback *director = (SwigDirector_ClosestRayResultCallback *)(obj);
-  (void)jcls;
-  if (director) {
-    director->swig_java_change_ownership(jenv, jself, jtake_or_release ? true : false);
-  }
-}
-
-
 SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1AllHitsRayResultCallback(JNIEnv *jenv, jclass jcls, jobject jarg1, jobject jarg2) {
   jlong jresult = 0 ;
   btVector3 *arg1 = 0 ;
@@ -39964,7 +39235,7 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
   gdx_setbtVector3FromVector3(jenv, local_arg2, jarg2);
   arg2 = &local_arg2;
   gdxAutoCommitVector3 auto_commit_arg2(jenv, jarg2, &local_arg2);
-  result = (AllHitsRayResultCallback *)new SwigDirector_AllHitsRayResultCallback(jenv,(btVector3 const &)*arg1,(btVector3 const &)*arg2);
+  result = (AllHitsRayResultCallback *)new AllHitsRayResultCallback((btVector3 const &)*arg1,(btVector3 const &)*arg2);
   *(AllHitsRayResultCallback **)&jresult = result; 
   return jresult;
 }
@@ -40140,54 +39411,6 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_AllHi
 }
 
 
-SWIGEXPORT jfloat JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_AllHitsRayResultCallback_1addSingleResult(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jboolean jarg3) {
-  jfloat jresult = 0 ;
-  AllHitsRayResultCallback *arg1 = (AllHitsRayResultCallback *) 0 ;
-  LocalRayResult *arg2 = 0 ;
-  bool arg3 ;
-  btScalar result;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  (void)jarg2_;
-  arg1 = *(AllHitsRayResultCallback **)&jarg1; 
-  arg2 = *(LocalRayResult **)&jarg2;
-  if (!arg2) {
-    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "LocalRayResult & reference is null");
-    return 0;
-  } 
-  arg3 = jarg3 ? true : false; 
-  result = (btScalar)(arg1)->addSingleResult(*arg2,arg3);
-  jresult = (jfloat)result; 
-  return jresult;
-}
-
-
-SWIGEXPORT jfloat JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_AllHitsRayResultCallback_1addSingleResultSwigExplicitAllHitsRayResultCallback(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jboolean jarg3) {
-  jfloat jresult = 0 ;
-  AllHitsRayResultCallback *arg1 = (AllHitsRayResultCallback *) 0 ;
-  LocalRayResult *arg2 = 0 ;
-  bool arg3 ;
-  btScalar result;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  (void)jarg2_;
-  arg1 = *(AllHitsRayResultCallback **)&jarg1; 
-  arg2 = *(LocalRayResult **)&jarg2;
-  if (!arg2) {
-    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "LocalRayResult & reference is null");
-    return 0;
-  } 
-  arg3 = jarg3 ? true : false; 
-  result = (btScalar)(arg1)->AllHitsRayResultCallback::addSingleResult(*arg2,arg3);
-  jresult = (jfloat)result; 
-  return jresult;
-}
-
-
 SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_delete_1AllHitsRayResultCallback(JNIEnv *jenv, jclass jcls, jlong jarg1) {
   AllHitsRayResultCallback *arg1 = (AllHitsRayResultCallback *) 0 ;
   
@@ -40198,26 +39421,6 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_delete
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_AllHitsRayResultCallback_1director_1connect(JNIEnv *jenv, jclass jcls, jobject jself, jlong objarg, jboolean jswig_mem_own, jboolean jweak_global) {
-  AllHitsRayResultCallback *obj = *((AllHitsRayResultCallback **)&objarg);
-  (void)jcls;
-  SwigDirector_AllHitsRayResultCallback *director = (SwigDirector_AllHitsRayResultCallback *)(obj);
-  if (director) {
-    director->swig_connect_director(jenv, jself, jenv->GetObjectClass(jself), (jswig_mem_own == JNI_TRUE), (jweak_global == JNI_TRUE));
-  }
-}
-
-
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_AllHitsRayResultCallback_1change_1ownership(JNIEnv *jenv, jclass jcls, jobject jself, jlong objarg, jboolean jtake_or_release) {
-  AllHitsRayResultCallback *obj = *((AllHitsRayResultCallback **)&objarg);
-  SwigDirector_AllHitsRayResultCallback *director = (SwigDirector_AllHitsRayResultCallback *)(obj);
-  (void)jcls;
-  if (director) {
-    director->swig_java_change_ownership(jenv, jself, jtake_or_release ? true : false);
-  }
-}
-
-
 SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1LocalConvexResult(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jobject jarg3, jobject jarg4, jfloat jarg5) {
   jlong jresult = 0 ;
   btCollisionObject *arg1 = (btCollisionObject *) 0 ;
@@ -40486,18 +39689,6 @@ SWIGEXPORT jshort JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_Conv
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1ConvexResultCallback(JNIEnv *jenv, jclass jcls) {
-  jlong jresult = 0 ;
-  ConvexResultCallback *result = 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  result = (ConvexResultCallback *)new SwigDirector_ConvexResultCallback(jenv);
-  *(ConvexResultCallback **)&jresult = result; 
-  return jresult;
-}
-
-
 SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_delete_1ConvexResultCallback(JNIEnv *jenv, jclass jcls, jlong jarg1) {
   ConvexResultCallback *arg1 = (ConvexResultCallback *) 0 ;
   
@@ -40541,24 +39732,6 @@ SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_Co
 }
 
 
-SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_ConvexResultCallback_1needsCollisionSwigExplicitConvexResultCallback(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
-  jboolean jresult = 0 ;
-  ConvexResultCallback *arg1 = (ConvexResultCallback *) 0 ;
-  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
-  bool result;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  (void)jarg2_;
-  arg1 = *(ConvexResultCallback **)&jarg1; 
-  arg2 = *(btBroadphaseProxy **)&jarg2; 
-  result = (bool)((ConvexResultCallback const *)arg1)->ConvexResultCallback::needsCollision(arg2);
-  jresult = (jboolean)result; 
-  return jresult;
-}
-
-
 SWIGEXPORT jfloat JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_ConvexResultCallback_1addSingleResult(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jboolean jarg3) {
   jfloat jresult = 0 ;
   ConvexResultCallback *arg1 = (ConvexResultCallback *) 0 ;
@@ -40583,26 +39756,6 @@ SWIGEXPORT jfloat JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_Conv
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_ConvexResultCallback_1director_1connect(JNIEnv *jenv, jclass jcls, jobject jself, jlong objarg, jboolean jswig_mem_own, jboolean jweak_global) {
-  ConvexResultCallback *obj = *((ConvexResultCallback **)&objarg);
-  (void)jcls;
-  SwigDirector_ConvexResultCallback *director = (SwigDirector_ConvexResultCallback *)(obj);
-  if (director) {
-    director->swig_connect_director(jenv, jself, jenv->GetObjectClass(jself), (jswig_mem_own == JNI_TRUE), (jweak_global == JNI_TRUE));
-  }
-}
-
-
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_ConvexResultCallback_1change_1ownership(JNIEnv *jenv, jclass jcls, jobject jself, jlong objarg, jboolean jtake_or_release) {
-  ConvexResultCallback *obj = *((ConvexResultCallback **)&objarg);
-  SwigDirector_ConvexResultCallback *director = (SwigDirector_ConvexResultCallback *)(obj);
-  (void)jcls;
-  if (director) {
-    director->swig_java_change_ownership(jenv, jself, jtake_or_release ? true : false);
-  }
-}
-
-
 SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1ClosestConvexResultCallback(JNIEnv *jenv, jclass jcls, jobject jarg1, jobject jarg2) {
   jlong jresult = 0 ;
   btVector3 *arg1 = 0 ;
@@ -40619,7 +39772,7 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
   gdx_setbtVector3FromVector3(jenv, local_arg2, jarg2);
   arg2 = &local_arg2;
   gdxAutoCommitVector3 auto_commit_arg2(jenv, jarg2, &local_arg2);
-  result = (ClosestConvexResultCallback *)new SwigDirector_ClosestConvexResultCallback(jenv,(btVector3 const &)*arg1,(btVector3 const &)*arg2);
+  result = (ClosestConvexResultCallback *)new ClosestConvexResultCallback((btVector3 const &)*arg1,(btVector3 const &)*arg2);
   *(ClosestConvexResultCallback **)&jresult = result; 
   return jresult;
 }
@@ -40770,54 +39923,6 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_Close
 }
 
 
-SWIGEXPORT jfloat JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_ClosestConvexResultCallback_1addSingleResult(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jboolean jarg3) {
-  jfloat jresult = 0 ;
-  ClosestConvexResultCallback *arg1 = (ClosestConvexResultCallback *) 0 ;
-  LocalConvexResult *arg2 = 0 ;
-  bool arg3 ;
-  btScalar result;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  (void)jarg2_;
-  arg1 = *(ClosestConvexResultCallback **)&jarg1; 
-  arg2 = *(LocalConvexResult **)&jarg2;
-  if (!arg2) {
-    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "LocalConvexResult & reference is null");
-    return 0;
-  } 
-  arg3 = jarg3 ? true : false; 
-  result = (btScalar)(arg1)->addSingleResult(*arg2,arg3);
-  jresult = (jfloat)result; 
-  return jresult;
-}
-
-
-SWIGEXPORT jfloat JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_ClosestConvexResultCallback_1addSingleResultSwigExplicitClosestConvexResultCallback(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jboolean jarg3) {
-  jfloat jresult = 0 ;
-  ClosestConvexResultCallback *arg1 = (ClosestConvexResultCallback *) 0 ;
-  LocalConvexResult *arg2 = 0 ;
-  bool arg3 ;
-  btScalar result;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  (void)jarg2_;
-  arg1 = *(ClosestConvexResultCallback **)&jarg1; 
-  arg2 = *(LocalConvexResult **)&jarg2;
-  if (!arg2) {
-    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "LocalConvexResult & reference is null");
-    return 0;
-  } 
-  arg3 = jarg3 ? true : false; 
-  result = (btScalar)(arg1)->ClosestConvexResultCallback::addSingleResult(*arg2,arg3);
-  jresult = (jfloat)result; 
-  return jresult;
-}
-
-
 SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_delete_1ClosestConvexResultCallback(JNIEnv *jenv, jclass jcls, jlong jarg1) {
   ClosestConvexResultCallback *arg1 = (ClosestConvexResultCallback *) 0 ;
   
@@ -40828,26 +39933,6 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_delete
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_ClosestConvexResultCallback_1director_1connect(JNIEnv *jenv, jclass jcls, jobject jself, jlong objarg, jboolean jswig_mem_own, jboolean jweak_global) {
-  ClosestConvexResultCallback *obj = *((ClosestConvexResultCallback **)&objarg);
-  (void)jcls;
-  SwigDirector_ClosestConvexResultCallback *director = (SwigDirector_ClosestConvexResultCallback *)(obj);
-  if (director) {
-    director->swig_connect_director(jenv, jself, jenv->GetObjectClass(jself), (jswig_mem_own == JNI_TRUE), (jweak_global == JNI_TRUE));
-  }
-}
-
-
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_ClosestConvexResultCallback_1change_1ownership(JNIEnv *jenv, jclass jcls, jobject jself, jlong objarg, jboolean jtake_or_release) {
-  ClosestConvexResultCallback *obj = *((ClosestConvexResultCallback **)&objarg);
-  SwigDirector_ClosestConvexResultCallback *director = (SwigDirector_ClosestConvexResultCallback *)(obj);
-  (void)jcls;
-  if (director) {
-    director->swig_java_change_ownership(jenv, jself, jtake_or_release ? true : false);
-  }
-}
-
-
 SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_ContactResultCallback_1m_1collisionFilterGroup_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jshort jarg2) {
   ContactResultCallback *arg1 = (ContactResultCallback *) 0 ;
   short arg2 ;
@@ -40904,18 +39989,6 @@ SWIGEXPORT jshort JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_Cont
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1ContactResultCallback(JNIEnv *jenv, jclass jcls) {
-  jlong jresult = 0 ;
-  ContactResultCallback *result = 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  result = (ContactResultCallback *)new SwigDirector_ContactResultCallback(jenv);
-  *(ContactResultCallback **)&jresult = result; 
-  return jresult;
-}
-
-
 SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_delete_1ContactResultCallback(JNIEnv *jenv, jclass jcls, jlong jarg1) {
   ContactResultCallback *arg1 = (ContactResultCallback *) 0 ;
   
@@ -40944,25 +40017,7 @@ SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_Co
 }
 
 
-SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_ContactResultCallback_1needsCollisionSwigExplicitContactResultCallback(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
-  jboolean jresult = 0 ;
-  ContactResultCallback *arg1 = (ContactResultCallback *) 0 ;
-  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
-  bool result;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  (void)jarg2_;
-  arg1 = *(ContactResultCallback **)&jarg1; 
-  arg2 = *(btBroadphaseProxy **)&jarg2; 
-  result = (bool)((ContactResultCallback const *)arg1)->ContactResultCallback::needsCollision(arg2);
-  jresult = (jboolean)result; 
-  return jresult;
-}
-
-
-SWIGEXPORT jfloat JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_ContactResultCallback_1addSingleResult(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5, jlong jarg6, jobject jarg6_, jint jarg7, jint jarg8) {
+SWIGEXPORT jfloat JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_ContactResultCallback_1addSingleResult(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4, jint jarg5, jlong jarg6, jint jarg7, jint jarg8) {
   jfloat jresult = 0 ;
   ContactResultCallback *arg1 = (ContactResultCallback *) 0 ;
   btManifoldPoint *arg2 = 0 ;
@@ -40978,8 +40033,6 @@ SWIGEXPORT jfloat JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_Cont
   (void)jcls;
   (void)jarg1_;
   (void)jarg2_;
-  (void)jarg3_;
-  (void)jarg6_;
   arg1 = *(ContactResultCallback **)&jarg1; 
   arg2 = *(btManifoldPoint **)&jarg2;
   if (!arg2) {
@@ -40998,26 +40051,6 @@ SWIGEXPORT jfloat JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_Cont
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_ContactResultCallback_1director_1connect(JNIEnv *jenv, jclass jcls, jobject jself, jlong objarg, jboolean jswig_mem_own, jboolean jweak_global) {
-  ContactResultCallback *obj = *((ContactResultCallback **)&objarg);
-  (void)jcls;
-  SwigDirector_ContactResultCallback *director = (SwigDirector_ContactResultCallback *)(obj);
-  if (director) {
-    director->swig_connect_director(jenv, jself, jenv->GetObjectClass(jself), (jswig_mem_own == JNI_TRUE), (jweak_global == JNI_TRUE));
-  }
-}
-
-
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_ContactResultCallback_1change_1ownership(JNIEnv *jenv, jclass jcls, jobject jself, jlong objarg, jboolean jtake_or_release) {
-  ContactResultCallback *obj = *((ContactResultCallback **)&objarg);
-  SwigDirector_ContactResultCallback *director = (SwigDirector_ContactResultCallback *)(obj);
-  (void)jcls;
-  if (director) {
-    director->swig_java_change_ownership(jenv, jself, jtake_or_release ? true : false);
-  }
-}
-
-
 SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btCollisionWorld(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
   jlong jresult = 0 ;
   btDispatcher *arg1 = (btDispatcher *) 0 ;
@@ -41385,7 +40418,7 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btColl
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCollisionWorld_1rayTestSingleInternal(JNIEnv *jenv, jclass jcls, jobject jarg1, jobject jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCollisionWorld_1rayTestSingleInternal(JNIEnv *jenv, jclass jcls, jobject jarg1, jobject jarg2, jlong jarg3, jlong jarg4, jobject jarg4_) {
   btTransform *arg1 = 0 ;
   btTransform *arg2 = 0 ;
   btCollisionObjectWrapper *arg3 = (btCollisionObjectWrapper *) 0 ;
@@ -41393,7 +40426,6 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btColl
   
   (void)jenv;
   (void)jcls;
-  (void)jarg3_;
   (void)jarg4_;
   btTransform local_arg1;
   gdx_setbtTransformFromMatrix4(jenv, local_arg1, jarg1);
@@ -41454,7 +40486,7 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btColl
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCollisionWorld_1objectQuerySingleInternal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jobject jarg3, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_, jfloat jarg6) {
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCollisionWorld_1objectQuerySingleInternal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jobject jarg3, jlong jarg4, jlong jarg5, jobject jarg5_, jfloat jarg6) {
   btConvexShape *arg1 = (btConvexShape *) 0 ;
   btTransform *arg2 = 0 ;
   btTransform *arg3 = 0 ;
@@ -41465,7 +40497,6 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btColl
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
-  (void)jarg4_;
   (void)jarg5_;
   arg1 = *(btConvexShape **)&jarg1; 
   btTransform local_arg2;
@@ -41748,7 +40779,7 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_delete
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btConvex2dConvex2dAlgorithm(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jlong jarg6, jobject jarg6_, jint jarg7, jint jarg8) {
+SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btConvex2dConvex2dAlgorithm(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4, jlong jarg5, jlong jarg6, jobject jarg6_, jint jarg7, jint jarg8) {
   jlong jresult = 0 ;
   btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
   btCollisionAlgorithmConstructionInfo *arg2 = 0 ;
@@ -41764,8 +40795,6 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
   (void)jcls;
   (void)jarg1_;
   (void)jarg2_;
-  (void)jarg3_;
-  (void)jarg4_;
   (void)jarg6_;
   arg1 = *(btPersistentManifold **)&jarg1; 
   arg2 = *(btCollisionAlgorithmConstructionInfo **)&jarg2;
@@ -41967,7 +40996,7 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btBoxB
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btSphereBoxCollisionAlgorithm(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jboolean jarg5) {
+SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btSphereBoxCollisionAlgorithm(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4, jboolean jarg5) {
   jlong jresult = 0 ;
   btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
   btCollisionAlgorithmConstructionInfo *arg2 = 0 ;
@@ -41980,8 +41009,6 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
   (void)jcls;
   (void)jarg1_;
   (void)jarg2_;
-  (void)jarg3_;
-  (void)jarg4_;
   arg1 = *(btPersistentManifold **)&jarg1; 
   arg2 = *(btCollisionAlgorithmConstructionInfo **)&jarg2;
   if (!arg2) {
@@ -42007,7 +41034,7 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_delete
 }
 
 
-SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btSphereBoxCollisionAlgorithm_1getSphereDistance(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jobject jarg3, jobject jarg4, jlong jarg5, jobject jarg6, jfloat jarg7, jfloat jarg8) {
+SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btSphereBoxCollisionAlgorithm_1getSphereDistance(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg3, jobject jarg4, jlong jarg5, jobject jarg6, jfloat jarg7, jfloat jarg8) {
   jboolean jresult = 0 ;
   btSphereBoxCollisionAlgorithm *arg1 = (btSphereBoxCollisionAlgorithm *) 0 ;
   btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
@@ -42022,7 +41049,6 @@ SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_bt
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
-  (void)jarg2_;
   arg1 = *(btSphereBoxCollisionAlgorithm **)&jarg1; 
   arg2 = *(btCollisionObjectWrapper **)&jarg2; 
   btVector3 local_arg3;
@@ -42173,7 +41199,7 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_delete
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCollisionDispatcher_1findAlgorithm_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
+SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCollisionDispatcher_1findAlgorithm_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4, jobject jarg4_) {
   jlong jresult = 0 ;
   btCollisionDispatcher *arg1 = (btCollisionDispatcher *) 0 ;
   btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
@@ -42184,8 +41210,6 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCol
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
-  (void)jarg2_;
-  (void)jarg3_;
   (void)jarg4_;
   arg1 = *(btCollisionDispatcher **)&jarg1; 
   arg2 = *(btCollisionObjectWrapper **)&jarg2; 
@@ -42197,7 +41221,7 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCol
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCollisionDispatcher_1findAlgorithm_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
+SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCollisionDispatcher_1findAlgorithm_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
   jlong jresult = 0 ;
   btCollisionDispatcher *arg1 = (btCollisionDispatcher *) 0 ;
   btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
@@ -42207,8 +41231,6 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCol
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
-  (void)jarg2_;
-  (void)jarg3_;
   arg1 = *(btCollisionDispatcher **)&jarg1; 
   arg2 = *(btCollisionObjectWrapper **)&jarg2; 
   arg3 = *(btCollisionObjectWrapper **)&jarg3; 
@@ -42319,7 +41341,7 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCol
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btConvexConvexAlgorithm(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jlong jarg6, jobject jarg6_, jint jarg7, jint jarg8) {
+SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btConvexConvexAlgorithm(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4, jlong jarg5, jlong jarg6, jobject jarg6_, jint jarg7, jint jarg8) {
   jlong jresult = 0 ;
   btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
   btCollisionAlgorithmConstructionInfo *arg2 = 0 ;
@@ -42335,8 +41357,6 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
   (void)jcls;
   (void)jarg1_;
   (void)jarg2_;
-  (void)jarg3_;
-  (void)jarg4_;
   (void)jarg6_;
   arg1 = *(btPersistentManifold **)&jarg1; 
   arg2 = *(btCollisionAlgorithmConstructionInfo **)&jarg2;
@@ -42540,7 +41560,7 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btGene
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btAdjustInternalEdgeContacts_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5, jint jarg6) {
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btAdjustInternalEdgeContacts_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jint jarg4, jint jarg5, jint jarg6) {
   btManifoldPoint *arg1 = 0 ;
   btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
   btCollisionObjectWrapper *arg3 = (btCollisionObjectWrapper *) 0 ;
@@ -42551,8 +41571,6 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btAdju
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
-  (void)jarg2_;
-  (void)jarg3_;
   arg1 = *(btManifoldPoint **)&jarg1;
   if (!arg1) {
     SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "btManifoldPoint & reference is null");
@@ -42567,7 +41585,7 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btAdju
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btAdjustInternalEdgeContacts_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btAdjustInternalEdgeContacts_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jint jarg4, jint jarg5) {
   btManifoldPoint *arg1 = 0 ;
   btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
   btCollisionObjectWrapper *arg3 = (btCollisionObjectWrapper *) 0 ;
@@ -42577,8 +41595,6 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btAdju
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
-  (void)jarg2_;
-  (void)jarg3_;
   arg1 = *(btManifoldPoint **)&jarg1;
   if (!arg1) {
     SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "btManifoldPoint & reference is null");
@@ -42592,7 +41608,7 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btAdju
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btCompoundCollisionAlgorithm(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jboolean jarg4) {
+SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btCompoundCollisionAlgorithm(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jboolean jarg4) {
   jlong jresult = 0 ;
   btCollisionAlgorithmConstructionInfo *arg1 = 0 ;
   btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
@@ -42603,8 +41619,6 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
-  (void)jarg2_;
-  (void)jarg3_;
   arg1 = *(btCollisionAlgorithmConstructionInfo **)&jarg1;
   if (!arg1) {
     SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "btCollisionAlgorithmConstructionInfo const & reference is null");
@@ -48692,317 +47706,6 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_delete
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btMultiSphereShape(JNIEnv *jenv, jclass jcls, jobjectArray jarg1, jfloatArray jarg2, jint jarg3) {
-  jlong jresult = 0 ;
-  btVector3 *arg1 = (btVector3 *) 0 ;
-  btScalar *arg2 = (btScalar *) 0 ;
-  int arg3 ;
-  jfloat *jarr2 ;
-  btMultiSphereShape *result = 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  static jfieldID xField = NULL, yField = NULL, zField = NULL;
-  arg1 = Vector3ArrayToBtVector3Array(jenv, jarg1);
-  gdxAutoDeleteBtVector3Array auto_delete(arg1);
-  if (!SWIG_JavaArrayInFloat(jenv, &jarr2, (float **)&arg2, jarg2)) return 0; 
-  arg3 = (int)jarg3; 
-  result = (btMultiSphereShape *)new btMultiSphereShape((btVector3 const *)arg1,(btScalar const *)arg2,arg3);
-  *(btMultiSphereShape **)&jresult = result; 
-  SWIG_JavaArrayArgoutFloat(jenv, jarr2, (float *)arg2, jarg2); 
-  delete [] arg2; 
-  return jresult;
-}
-
-
-SWIGEXPORT jint JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btMultiSphereShape_1getSphereCount(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
-  jint jresult = 0 ;
-  btMultiSphereShape *arg1 = (btMultiSphereShape *) 0 ;
-  int result;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  arg1 = *(btMultiSphereShape **)&jarg1; 
-  result = (int)((btMultiSphereShape const *)arg1)->getSphereCount();
-  jresult = (jint)result; 
-  return jresult;
-}
-
-
-SWIGEXPORT jobject JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btMultiSphereShape_1getSpherePosition(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
-  jobject jresult = 0 ;
-  btMultiSphereShape *arg1 = (btMultiSphereShape *) 0 ;
-  int arg2 ;
-  btVector3 *result = 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  arg1 = *(btMultiSphereShape **)&jarg1; 
-  arg2 = (int)jarg2; 
-  result = (btVector3 *) &((btMultiSphereShape const *)arg1)->getSpherePosition(arg2);
-  jresult = gdx_getReturnVector3(jenv);
-  gdx_setVector3FrombtVector3(jenv, jresult, result);
-  return jresult;
-}
-
-
-SWIGEXPORT jfloat JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btMultiSphereShape_1getSphereRadius(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
-  jfloat jresult = 0 ;
-  btMultiSphereShape *arg1 = (btMultiSphereShape *) 0 ;
-  int arg2 ;
-  btScalar result;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  arg1 = *(btMultiSphereShape **)&jarg1; 
-  arg2 = (int)jarg2; 
-  result = (btScalar)((btMultiSphereShape const *)arg1)->getSphereRadius(arg2);
-  jresult = (jfloat)result; 
-  return jresult;
-}
-
-
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_delete_1btMultiSphereShape(JNIEnv *jenv, jclass jcls, jlong jarg1) {
-  btMultiSphereShape *arg1 = (btMultiSphereShape *) 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  arg1 = *(btMultiSphereShape **)&jarg1; 
-  delete arg1;
-}
-
-
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btPositionAndRadius_1m_1pos_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
-  btPositionAndRadius *arg1 = (btPositionAndRadius *) 0 ;
-  btVector3FloatData *arg2 = (btVector3FloatData *) 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  (void)jarg2_;
-  arg1 = *(btPositionAndRadius **)&jarg1; 
-  arg2 = *(btVector3FloatData **)&jarg2; 
-  if (arg1) (arg1)->m_pos = *arg2;
-}
-
-
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btPositionAndRadius_1m_1pos_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
-  jlong jresult = 0 ;
-  btPositionAndRadius *arg1 = (btPositionAndRadius *) 0 ;
-  btVector3FloatData *result = 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  arg1 = *(btPositionAndRadius **)&jarg1; 
-  result = (btVector3FloatData *)& ((arg1)->m_pos);
-  *(btVector3FloatData **)&jresult = result; 
-  return jresult;
-}
-
-
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btPositionAndRadius_1m_1radius_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
-  btPositionAndRadius *arg1 = (btPositionAndRadius *) 0 ;
-  float arg2 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  arg1 = *(btPositionAndRadius **)&jarg1; 
-  arg2 = (float)jarg2; 
-  if (arg1) (arg1)->m_radius = arg2;
-}
-
-
-SWIGEXPORT jfloat JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btPositionAndRadius_1m_1radius_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
-  jfloat jresult = 0 ;
-  btPositionAndRadius *arg1 = (btPositionAndRadius *) 0 ;
-  float result;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  arg1 = *(btPositionAndRadius **)&jarg1; 
-  result = (float) ((arg1)->m_radius);
-  jresult = (jfloat)result; 
-  return jresult;
-}
-
-
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btPositionAndRadius(JNIEnv *jenv, jclass jcls) {
-  jlong jresult = 0 ;
-  btPositionAndRadius *result = 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  result = (btPositionAndRadius *)new btPositionAndRadius();
-  *(btPositionAndRadius **)&jresult = result; 
-  return jresult;
-}
-
-
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_delete_1btPositionAndRadius(JNIEnv *jenv, jclass jcls, jlong jarg1) {
-  btPositionAndRadius *arg1 = (btPositionAndRadius *) 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  arg1 = *(btPositionAndRadius **)&jarg1; 
-  delete arg1;
-}
-
-
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btMultiSphereShapeData_1m_1convexInternalShapeData_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
-  btMultiSphereShapeData *arg1 = (btMultiSphereShapeData *) 0 ;
-  btConvexInternalShapeData *arg2 = (btConvexInternalShapeData *) 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  (void)jarg2_;
-  arg1 = *(btMultiSphereShapeData **)&jarg1; 
-  arg2 = *(btConvexInternalShapeData **)&jarg2; 
-  if (arg1) (arg1)->m_convexInternalShapeData = *arg2;
-}
-
-
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btMultiSphereShapeData_1m_1convexInternalShapeData_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
-  jlong jresult = 0 ;
-  btMultiSphereShapeData *arg1 = (btMultiSphereShapeData *) 0 ;
-  btConvexInternalShapeData *result = 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  arg1 = *(btMultiSphereShapeData **)&jarg1; 
-  result = (btConvexInternalShapeData *)& ((arg1)->m_convexInternalShapeData);
-  *(btConvexInternalShapeData **)&jresult = result; 
-  return jresult;
-}
-
-
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btMultiSphereShapeData_1m_1localPositionArrayPtr_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
-  btMultiSphereShapeData *arg1 = (btMultiSphereShapeData *) 0 ;
-  btPositionAndRadius *arg2 = (btPositionAndRadius *) 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  (void)jarg2_;
-  arg1 = *(btMultiSphereShapeData **)&jarg1; 
-  arg2 = *(btPositionAndRadius **)&jarg2; 
-  if (arg1) (arg1)->m_localPositionArrayPtr = arg2;
-}
-
-
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btMultiSphereShapeData_1m_1localPositionArrayPtr_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
-  jlong jresult = 0 ;
-  btMultiSphereShapeData *arg1 = (btMultiSphereShapeData *) 0 ;
-  btPositionAndRadius *result = 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  arg1 = *(btMultiSphereShapeData **)&jarg1; 
-  result = (btPositionAndRadius *) ((arg1)->m_localPositionArrayPtr);
-  *(btPositionAndRadius **)&jresult = result; 
-  return jresult;
-}
-
-
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btMultiSphereShapeData_1m_1localPositionArraySize_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
-  btMultiSphereShapeData *arg1 = (btMultiSphereShapeData *) 0 ;
-  int arg2 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  arg1 = *(btMultiSphereShapeData **)&jarg1; 
-  arg2 = (int)jarg2; 
-  if (arg1) (arg1)->m_localPositionArraySize = arg2;
-}
-
-
-SWIGEXPORT jint JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btMultiSphereShapeData_1m_1localPositionArraySize_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
-  jint jresult = 0 ;
-  btMultiSphereShapeData *arg1 = (btMultiSphereShapeData *) 0 ;
-  int result;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  arg1 = *(btMultiSphereShapeData **)&jarg1; 
-  result = (int) ((arg1)->m_localPositionArraySize);
-  jresult = (jint)result; 
-  return jresult;
-}
-
-
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btMultiSphereShapeData_1m_1padding_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
-  btMultiSphereShapeData *arg1 = (btMultiSphereShapeData *) 0 ;
-  char *arg2 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  arg1 = *(btMultiSphereShapeData **)&jarg1; 
-  arg2 = 0;
-  if (jarg2) {
-    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
-    if (!arg2) return ;
-  }
-  {
-    if(arg2) {
-      strncpy((char*)arg1->m_padding, (const char *)arg2, 4-1);
-      arg1->m_padding[4-1] = 0;
-    } else {
-      arg1->m_padding[0] = 0;
-    }
-  }
-  
-  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
-}
-
-
-SWIGEXPORT jstring JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btMultiSphereShapeData_1m_1padding_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
-  jstring jresult = 0 ;
-  btMultiSphereShapeData *arg1 = (btMultiSphereShapeData *) 0 ;
-  char *result = 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  arg1 = *(btMultiSphereShapeData **)&jarg1; 
-  result = (char *)(char *) ((arg1)->m_padding);
-  if (result) jresult = jenv->NewStringUTF((const char *)result);
-  return jresult;
-}
-
-
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btMultiSphereShapeData(JNIEnv *jenv, jclass jcls) {
-  jlong jresult = 0 ;
-  btMultiSphereShapeData *result = 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  result = (btMultiSphereShapeData *)new btMultiSphereShapeData();
-  *(btMultiSphereShapeData **)&jresult = result; 
-  return jresult;
-}
-
-
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_delete_1btMultiSphereShapeData(JNIEnv *jenv, jclass jcls, jlong jarg1) {
-  btMultiSphereShapeData *arg1 = (btMultiSphereShapeData *) 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  arg1 = *(btMultiSphereShapeData **)&jarg1; 
-  delete arg1;
-}
-
-
 SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_delete_1btDynamicsWorld(JNIEnv *jenv, jclass jcls, jlong jarg1) {
   btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
   
@@ -60969,7 +59672,7 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btSoft
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btSoftBodySolver_1processCollision_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btSoftBodySolver_1processCollision_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
   btSoftBodySolver *arg1 = (btSoftBodySolver *) 0 ;
   btSoftBody *arg2 = (btSoftBody *) 0 ;
   btCollisionObjectWrapper *arg3 = (btCollisionObjectWrapper *) 0 ;
@@ -60978,7 +59681,6 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btSoft
   (void)jcls;
   (void)jarg1_;
   (void)jarg2_;
-  (void)jarg3_;
   arg1 = *(btSoftBodySolver **)&jarg1; 
   arg2 = *(btSoftBody **)&jarg2; 
   arg3 = *(btCollisionObjectWrapper **)&jarg3; 
@@ -61200,7 +59902,7 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btDefa
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btDefaultSoftBodySolver_1processCollision_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btDefaultSoftBodySolver_1processCollision_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
   btDefaultSoftBodySolver *arg1 = (btDefaultSoftBodySolver *) 0 ;
   btSoftBody *arg2 = (btSoftBody *) 0 ;
   btCollisionObjectWrapper *arg3 = (btCollisionObjectWrapper *) 0 ;
@@ -61209,7 +59911,6 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btDefa
   (void)jcls;
   (void)jarg1_;
   (void)jarg2_;
-  (void)jarg3_;
   arg1 = *(btDefaultSoftBodySolver **)&jarg1; 
   arg2 = *(btSoftBody **)&jarg2; 
   arg3 = *(btCollisionObjectWrapper **)&jarg3; 
@@ -63752,7 +62453,7 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
   arg2 = (int)jarg2; 
   arg3 = *(btVector3 **)&jarg3; 
   {
-    arg4 = (float*)jenv->GetDirectBufferAddress(jarg4);
+    arg4 = (btScalar*)jenv->GetDirectBufferAddress(jarg4);
     if (arg4 == NULL) {
       SWIG_JavaThrowException(jenv, SWIG_JavaRuntimeException, "Unable to get address of direct buffer. Buffer must be allocated direct.");
     }
@@ -65618,14 +64319,13 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btSoft
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btSoftBody_1defaultCollisionHandler_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btSoftBody_1defaultCollisionHandler_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
   btSoftBody *arg1 = (btSoftBody *) 0 ;
   btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
   
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
-  (void)jarg2_;
   arg1 = *(btSoftBody **)&jarg1; 
   arg2 = *(btCollisionObjectWrapper **)&jarg2; 
   (arg1)->defaultCollisionHandler((btCollisionObjectWrapper const *)arg2);
@@ -65856,7 +64556,7 @@ SWIGEXPORT jobject JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btS
 }
 
 
-SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btSoftBody_1checkContact(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jobject jarg3, jfloat jarg4, jlong jarg5, jobject jarg5_) {
+SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btSoftBody_1checkContact(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg3, jfloat jarg4, jlong jarg5, jobject jarg5_) {
   jboolean jresult = 0 ;
   btSoftBody *arg1 = (btSoftBody *) 0 ;
   btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
@@ -65868,7 +64568,6 @@ SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_bt
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
-  (void)jarg2_;
   (void)jarg5_;
   arg1 = *(btSoftBody **)&jarg1; 
   arg2 = *(btCollisionObjectWrapper **)&jarg2; 
@@ -66222,7 +64921,7 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btSoft
   (void)jarg1_;
   arg1 = *(btSoftBody **)&jarg1; 
   {
-    arg2 = (float*)jenv->GetDirectBufferAddress(jarg2);
+    arg2 = (btScalar*)jenv->GetDirectBufferAddress(jarg2);
     if (arg2 == NULL) {
       SWIG_JavaThrowException(jenv, SWIG_JavaRuntimeException, "Unable to get address of direct buffer. Buffer must be allocated direct.");
     }
@@ -66772,7 +65471,7 @@ SWIGEXPORT jint JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btSoft
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btSoftBodyTriangleCallback(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jboolean jarg4) {
+SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btSoftBodyTriangleCallback(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jboolean jarg4) {
   jlong jresult = 0 ;
   btDispatcher *arg1 = (btDispatcher *) 0 ;
   btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
@@ -66783,8 +65482,6 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
-  (void)jarg2_;
-  (void)jarg3_;
   arg1 = *(btDispatcher **)&jarg1; 
   arg2 = *(btCollisionObjectWrapper **)&jarg2; 
   arg3 = *(btCollisionObjectWrapper **)&jarg3; 
@@ -66795,7 +65492,7 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btSoftBodyTriangleCallback_1setTimeStepAndCounters(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_) {
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btSoftBodyTriangleCallback_1setTimeStepAndCounters(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jlong jarg3, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_) {
   btSoftBodyTriangleCallback *arg1 = (btSoftBodyTriangleCallback *) 0 ;
   btScalar arg2 ;
   btCollisionObjectWrapper *arg3 = (btCollisionObjectWrapper *) 0 ;
@@ -66805,7 +65502,6 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btSoft
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
-  (void)jarg3_;
   (void)jarg4_;
   (void)jarg5_;
   arg1 = *(btSoftBodyTriangleCallback **)&jarg1; 
@@ -66874,7 +65570,7 @@ SWIGEXPORT jobject JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btS
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btSoftBodyConcaveCollisionAlgorithm(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jboolean jarg4) {
+SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btSoftBodyConcaveCollisionAlgorithm(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jboolean jarg4) {
   jlong jresult = 0 ;
   btCollisionAlgorithmConstructionInfo *arg1 = 0 ;
   btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
@@ -66885,8 +65581,6 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
-  (void)jarg2_;
-  (void)jarg3_;
   arg1 = *(btCollisionAlgorithmConstructionInfo **)&jarg1;
   if (!arg1) {
     SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "btCollisionAlgorithmConstructionInfo const & reference is null");
@@ -71480,7 +70174,7 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btSof
     return 0;
   } 
   {
-    arg2 = (float*)jenv->GetDirectBufferAddress(jarg2);
+    arg2 = (btScalar*)jenv->GetDirectBufferAddress(jarg2);
     if (arg2 == NULL) {
       SWIG_JavaThrowException(jenv, SWIG_JavaRuntimeException, "Unable to get address of direct buffer. Buffer must be allocated direct.");
     }
@@ -71518,7 +70212,7 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btSof
     return 0;
   } 
   {
-    arg2 = (float*)jenv->GetDirectBufferAddress(jarg2);
+    arg2 = (btScalar*)jenv->GetDirectBufferAddress(jarg2);
     if (arg2 == NULL) {
       SWIG_JavaThrowException(jenv, SWIG_JavaRuntimeException, "Unable to get address of direct buffer. Buffer must be allocated direct.");
     }
@@ -72818,7 +71512,7 @@ SWIGEXPORT jobject JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btC
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btSoftRigidCollisionAlgorithm(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jboolean jarg5) {
+SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btSoftRigidCollisionAlgorithm(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4, jboolean jarg5) {
   jlong jresult = 0 ;
   btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
   btCollisionAlgorithmConstructionInfo *arg2 = 0 ;
@@ -72831,8 +71525,6 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
   (void)jcls;
   (void)jarg1_;
   (void)jarg2_;
-  (void)jarg3_;
-  (void)jarg4_;
   arg1 = *(btPersistentManifold **)&jarg1; 
   arg2 = *(btCollisionAlgorithmConstructionInfo **)&jarg2;
   if (!arg2) {
@@ -73094,7 +71786,7 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btSoftSoftCollisionAlgorithm_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
+SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btSoftSoftCollisionAlgorithm_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4) {
   jlong jresult = 0 ;
   btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
   btCollisionAlgorithmConstructionInfo *arg2 = 0 ;
@@ -73106,8 +71798,6 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
   (void)jcls;
   (void)jarg1_;
   (void)jarg2_;
-  (void)jarg3_;
-  (void)jarg4_;
   arg1 = *(btPersistentManifold **)&jarg1; 
   arg2 = *(btCollisionAlgorithmConstructionInfo **)&jarg2;
   if (!arg2) {
@@ -75421,443 +74111,6 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btColl
 }
 
 
-SWIGEXPORT jint JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btBroadphasePairArray_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
-  jint jresult = 0 ;
-  btAlignedObjectArray< btBroadphasePair > *arg1 = (btAlignedObjectArray< btBroadphasePair > *) 0 ;
-  int result;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  arg1 = *(btAlignedObjectArray< btBroadphasePair > **)&jarg1; 
-  result = (int)((btAlignedObjectArray< btBroadphasePair > const *)arg1)->size();
-  jresult = (jint)result; 
-  return jresult;
-}
-
-
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btBroadphasePairArray_1at(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
-  jlong jresult = 0 ;
-  btAlignedObjectArray< btBroadphasePair > *arg1 = (btAlignedObjectArray< btBroadphasePair > *) 0 ;
-  int arg2 ;
-  btBroadphasePair *result = 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  arg1 = *(btAlignedObjectArray< btBroadphasePair > **)&jarg1; 
-  arg2 = (int)jarg2; 
-  result = (btBroadphasePair *) &((btAlignedObjectArray< btBroadphasePair > const *)arg1)->at(arg2);
-  *(btBroadphasePair **)&jresult = result; 
-  return jresult;
-}
-
-
-SWIGEXPORT jint JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btBroadphasePairArray_1getCollisionObjects(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jintArray jarg2, jint jarg3, jint jarg4) {
-  jint jresult = 0 ;
-  btAlignedObjectArray< btBroadphasePair > *arg1 = (btAlignedObjectArray< btBroadphasePair > *) 0 ;
-  int *arg2 ;
-  int arg3 ;
-  int arg4 ;
-  int result;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  arg1 = *(btAlignedObjectArray< btBroadphasePair > **)&jarg1; 
-  arg2 = (int *)jenv->GetPrimitiveArrayCritical(jarg2, 0); 
-  arg3 = (int)jarg3; 
-  arg4 = (int)jarg4; 
-  result = (int)btAlignedObjectArray_Sl_btBroadphasePair_Sg__getCollisionObjects(arg1,arg2,arg3,arg4);
-  jresult = (jint)result; 
-  jenv->ReleasePrimitiveArrayCritical(jarg2, (int *)arg2, 0); 
-  return jresult;
-}
-
-
-SWIGEXPORT jint JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btBroadphasePairArray_1getCollisionObjectsValue(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jintArray jarg2, jint jarg3, jint jarg4) {
-  jint jresult = 0 ;
-  btAlignedObjectArray< btBroadphasePair > *arg1 = (btAlignedObjectArray< btBroadphasePair > *) 0 ;
-  int *arg2 ;
-  int arg3 ;
-  int arg4 ;
-  int result;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  arg1 = *(btAlignedObjectArray< btBroadphasePair > **)&jarg1; 
-  arg2 = (int *)jenv->GetPrimitiveArrayCritical(jarg2, 0); 
-  arg3 = (int)jarg3; 
-  arg4 = (int)jarg4; 
-  result = (int)btAlignedObjectArray_Sl_btBroadphasePair_Sg__getCollisionObjectsValue(arg1,arg2,arg3,arg4);
-  jresult = (jint)result; 
-  jenv->ReleasePrimitiveArrayCritical(jarg2, (int *)arg2, 0); 
-  return jresult;
-}
-
-
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btBroadphasePairArray(JNIEnv *jenv, jclass jcls) {
-  jlong jresult = 0 ;
-  btAlignedObjectArray< btBroadphasePair > *result = 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  result = (btAlignedObjectArray< btBroadphasePair > *)new btAlignedObjectArray< btBroadphasePair >();
-  *(btAlignedObjectArray< btBroadphasePair > **)&jresult = result; 
-  return jresult;
-}
-
-
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_delete_1btBroadphasePairArray(JNIEnv *jenv, jclass jcls, jlong jarg1) {
-  btAlignedObjectArray< btBroadphasePair > *arg1 = (btAlignedObjectArray< btBroadphasePair > *) 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  arg1 = *(btAlignedObjectArray< btBroadphasePair > **)&jarg1; 
-  delete arg1;
-}
-
-
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btManifoldArray_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
-  jlong jresult = 0 ;
-  btAlignedObjectArray< btPersistentManifold * > *result = 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  result = (btAlignedObjectArray< btPersistentManifold * > *)new btAlignedObjectArray< btPersistentManifold * >();
-  *(btAlignedObjectArray< btPersistentManifold * > **)&jresult = result; 
-  return jresult;
-}
-
-
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_delete_1btManifoldArray(JNIEnv *jenv, jclass jcls, jlong jarg1) {
-  btAlignedObjectArray< btPersistentManifold * > *arg1 = (btAlignedObjectArray< btPersistentManifold * > *) 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  arg1 = *(btAlignedObjectArray< btPersistentManifold * > **)&jarg1; 
-  delete arg1;
-}
-
-
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btManifoldArray_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
-  jlong jresult = 0 ;
-  btAlignedObjectArray< btPersistentManifold * > *arg1 = 0 ;
-  btAlignedObjectArray< btPersistentManifold * > *result = 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  arg1 = *(btAlignedObjectArray< btPersistentManifold * > **)&jarg1;
-  if (!arg1) {
-    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "btAlignedObjectArray< btPersistentManifold * > const & reference is null");
-    return 0;
-  } 
-  result = (btAlignedObjectArray< btPersistentManifold * > *)new btAlignedObjectArray< btPersistentManifold * >((btAlignedObjectArray< btPersistentManifold * > const &)*arg1);
-  *(btAlignedObjectArray< btPersistentManifold * > **)&jresult = result; 
-  return jresult;
-}
-
-
-SWIGEXPORT jint JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btManifoldArray_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
-  jint jresult = 0 ;
-  btAlignedObjectArray< btPersistentManifold * > *arg1 = (btAlignedObjectArray< btPersistentManifold * > *) 0 ;
-  int result;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  arg1 = *(btAlignedObjectArray< btPersistentManifold * > **)&jarg1; 
-  result = (int)((btAlignedObjectArray< btPersistentManifold * > const *)arg1)->size();
-  jresult = (jint)result; 
-  return jresult;
-}
-
-
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btManifoldArray_1at_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
-  jlong jresult = 0 ;
-  btAlignedObjectArray< btPersistentManifold * > *arg1 = (btAlignedObjectArray< btPersistentManifold * > *) 0 ;
-  int arg2 ;
-  btPersistentManifold **result = 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  arg1 = *(btAlignedObjectArray< btPersistentManifold * > **)&jarg1; 
-  arg2 = (int)jarg2; 
-  result = (btPersistentManifold **) &((btAlignedObjectArray< btPersistentManifold * > const *)arg1)->at(arg2);
-  *(btPersistentManifold **)&jresult = *result; 
-  return jresult;
-}
-
-
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btManifoldArray_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
-  btAlignedObjectArray< btPersistentManifold * > *arg1 = (btAlignedObjectArray< btPersistentManifold * > *) 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  arg1 = *(btAlignedObjectArray< btPersistentManifold * > **)&jarg1; 
-  (arg1)->clear();
-}
-
-
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btManifoldArray_1pop_1back(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
-  btAlignedObjectArray< btPersistentManifold * > *arg1 = (btAlignedObjectArray< btPersistentManifold * > *) 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  arg1 = *(btAlignedObjectArray< btPersistentManifold * > **)&jarg1; 
-  (arg1)->pop_back();
-}
-
-
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btManifoldArray_1resizeNoInitialize(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
-  btAlignedObjectArray< btPersistentManifold * > *arg1 = (btAlignedObjectArray< btPersistentManifold * > *) 0 ;
-  int arg2 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  arg1 = *(btAlignedObjectArray< btPersistentManifold * > **)&jarg1; 
-  arg2 = (int)jarg2; 
-  (arg1)->resizeNoInitialize(arg2);
-}
-
-
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btManifoldArray_1resize_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
-  btAlignedObjectArray< btPersistentManifold * > *arg1 = (btAlignedObjectArray< btPersistentManifold * > *) 0 ;
-  int arg2 ;
-  btPersistentManifold **arg3 = 0 ;
-  btPersistentManifold *temp3 = 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  (void)jarg3_;
-  arg1 = *(btAlignedObjectArray< btPersistentManifold * > **)&jarg1; 
-  arg2 = (int)jarg2; 
-  temp3 = *(btPersistentManifold **)&jarg3;
-  arg3 = (btPersistentManifold **)&temp3; 
-  (arg1)->resize(arg2,(btPersistentManifold *const &)*arg3);
-}
-
-
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btManifoldArray_1resize_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
-  btAlignedObjectArray< btPersistentManifold * > *arg1 = (btAlignedObjectArray< btPersistentManifold * > *) 0 ;
-  int arg2 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  arg1 = *(btAlignedObjectArray< btPersistentManifold * > **)&jarg1; 
-  arg2 = (int)jarg2; 
-  (arg1)->resize(arg2);
-}
-
-
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btManifoldArray_1expandNonInitializing(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
-  jlong jresult = 0 ;
-  btAlignedObjectArray< btPersistentManifold * > *arg1 = (btAlignedObjectArray< btPersistentManifold * > *) 0 ;
-  btPersistentManifold **result = 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  arg1 = *(btAlignedObjectArray< btPersistentManifold * > **)&jarg1; 
-  result = (btPersistentManifold **) &(arg1)->expandNonInitializing();
-  *(btPersistentManifold ***)&jresult = result; 
-  return jresult;
-}
-
-
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btManifoldArray_1expand_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
-  jlong jresult = 0 ;
-  btAlignedObjectArray< btPersistentManifold * > *arg1 = (btAlignedObjectArray< btPersistentManifold * > *) 0 ;
-  btPersistentManifold **arg2 = 0 ;
-  btPersistentManifold *temp2 = 0 ;
-  btPersistentManifold **result = 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  (void)jarg2_;
-  arg1 = *(btAlignedObjectArray< btPersistentManifold * > **)&jarg1; 
-  temp2 = *(btPersistentManifold **)&jarg2;
-  arg2 = (btPersistentManifold **)&temp2; 
-  result = (btPersistentManifold **) &(arg1)->expand((btPersistentManifold *const &)*arg2);
-  *(btPersistentManifold ***)&jresult = result; 
-  return jresult;
-}
-
-
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btManifoldArray_1expand_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
-  jlong jresult = 0 ;
-  btAlignedObjectArray< btPersistentManifold * > *arg1 = (btAlignedObjectArray< btPersistentManifold * > *) 0 ;
-  btPersistentManifold **result = 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  arg1 = *(btAlignedObjectArray< btPersistentManifold * > **)&jarg1; 
-  result = (btPersistentManifold **) &(arg1)->expand();
-  *(btPersistentManifold ***)&jresult = result; 
-  return jresult;
-}
-
-
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btManifoldArray_1push_1back(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
-  btAlignedObjectArray< btPersistentManifold * > *arg1 = (btAlignedObjectArray< btPersistentManifold * > *) 0 ;
-  btPersistentManifold **arg2 = 0 ;
-  btPersistentManifold *temp2 = 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  (void)jarg2_;
-  arg1 = *(btAlignedObjectArray< btPersistentManifold * > **)&jarg1; 
-  temp2 = *(btPersistentManifold **)&jarg2;
-  arg2 = (btPersistentManifold **)&temp2; 
-  (arg1)->push_back((btPersistentManifold *const &)*arg2);
-}
-
-
-SWIGEXPORT jint JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btManifoldArray_1capacity(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
-  jint jresult = 0 ;
-  btAlignedObjectArray< btPersistentManifold * > *arg1 = (btAlignedObjectArray< btPersistentManifold * > *) 0 ;
-  int result;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  arg1 = *(btAlignedObjectArray< btPersistentManifold * > **)&jarg1; 
-  result = (int)((btAlignedObjectArray< btPersistentManifold * > const *)arg1)->capacity();
-  jresult = (jint)result; 
-  return jresult;
-}
-
-
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btManifoldArray_1reserve(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
-  btAlignedObjectArray< btPersistentManifold * > *arg1 = (btAlignedObjectArray< btPersistentManifold * > *) 0 ;
-  int arg2 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  arg1 = *(btAlignedObjectArray< btPersistentManifold * > **)&jarg1; 
-  arg2 = (int)jarg2; 
-  (arg1)->reserve(arg2);
-}
-
-
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btManifoldArray_1swap(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
-  btAlignedObjectArray< btPersistentManifold * > *arg1 = (btAlignedObjectArray< btPersistentManifold * > *) 0 ;
-  int arg2 ;
-  int arg3 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  arg1 = *(btAlignedObjectArray< btPersistentManifold * > **)&jarg1; 
-  arg2 = (int)jarg2; 
-  arg3 = (int)jarg3; 
-  (arg1)->swap(arg2,arg3);
-}
-
-
-SWIGEXPORT jint JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btManifoldArray_1findBinarySearch(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
-  jint jresult = 0 ;
-  btAlignedObjectArray< btPersistentManifold * > *arg1 = (btAlignedObjectArray< btPersistentManifold * > *) 0 ;
-  btPersistentManifold **arg2 = 0 ;
-  btPersistentManifold *temp2 = 0 ;
-  int result;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  (void)jarg2_;
-  arg1 = *(btAlignedObjectArray< btPersistentManifold * > **)&jarg1; 
-  temp2 = *(btPersistentManifold **)&jarg2;
-  arg2 = (btPersistentManifold **)&temp2; 
-  result = (int)((btAlignedObjectArray< btPersistentManifold * > const *)arg1)->findBinarySearch((btPersistentManifold *const &)*arg2);
-  jresult = (jint)result; 
-  return jresult;
-}
-
-
-SWIGEXPORT jint JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btManifoldArray_1findLinearSearch(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
-  jint jresult = 0 ;
-  btAlignedObjectArray< btPersistentManifold * > *arg1 = (btAlignedObjectArray< btPersistentManifold * > *) 0 ;
-  btPersistentManifold **arg2 = 0 ;
-  btPersistentManifold *temp2 = 0 ;
-  int result;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  (void)jarg2_;
-  arg1 = *(btAlignedObjectArray< btPersistentManifold * > **)&jarg1; 
-  temp2 = *(btPersistentManifold **)&jarg2;
-  arg2 = (btPersistentManifold **)&temp2; 
-  result = (int)((btAlignedObjectArray< btPersistentManifold * > const *)arg1)->findLinearSearch((btPersistentManifold *const &)*arg2);
-  jresult = (jint)result; 
-  return jresult;
-}
-
-
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btManifoldArray_1remove(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
-  btAlignedObjectArray< btPersistentManifold * > *arg1 = (btAlignedObjectArray< btPersistentManifold * > *) 0 ;
-  btPersistentManifold **arg2 = 0 ;
-  btPersistentManifold *temp2 = 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  (void)jarg2_;
-  arg1 = *(btAlignedObjectArray< btPersistentManifold * > **)&jarg1; 
-  temp2 = *(btPersistentManifold **)&jarg2;
-  arg2 = (btPersistentManifold **)&temp2; 
-  (arg1)->remove((btPersistentManifold *const &)*arg2);
-}
-
-
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btManifoldArray_1initializeFromBuffer(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3, jint jarg4) {
-  btAlignedObjectArray< btPersistentManifold * > *arg1 = (btAlignedObjectArray< btPersistentManifold * > *) 0 ;
-  void *arg2 = (void *) 0 ;
-  int arg3 ;
-  int arg4 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  arg1 = *(btAlignedObjectArray< btPersistentManifold * > **)&jarg1; 
-  arg2 = *(void **)&jarg2; 
-  arg3 = (int)jarg3; 
-  arg4 = (int)jarg4; 
-  (arg1)->initializeFromBuffer(arg2,arg3,arg4);
-}
-
-
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btManifoldArray_1copyFromArray(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
-  btAlignedObjectArray< btPersistentManifold * > *arg1 = (btAlignedObjectArray< btPersistentManifold * > *) 0 ;
-  btAlignedObjectArray< btPersistentManifold * > *arg2 = 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  (void)jarg2_;
-  arg1 = *(btAlignedObjectArray< btPersistentManifold * > **)&jarg1; 
-  arg2 = *(btAlignedObjectArray< btPersistentManifold * > **)&jarg2;
-  if (!arg2) {
-    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "btAlignedObjectArray< btPersistentManifold * > const & reference is null");
-    return ;
-  } 
-  (arg1)->copyFromArray((btAlignedObjectArray< btPersistentManifold * > const &)*arg2);
-}
-
-
 SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btVector4_1SWIGUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
     jlong baseptr = 0;
     (void)jenv;
@@ -76130,6 +74383,14 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btSph
     return baseptr;
 }
 
+SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btMultiSphereShape_1SWIGUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
+    jlong baseptr = 0;
+    (void)jenv;
+    (void)jcls;
+    *(btConvexInternalAabbCachingShape **)&baseptr = *(btMultiSphereShape **)&jarg1;
+    return baseptr;
+}
+
 SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btMinkowskiSumShape_1SWIGUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
     jlong baseptr = 0;
     (void)jenv;
@@ -76570,14 +74831,6 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btTyp
     return baseptr;
 }
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btMultiSphereShape_1SWIGUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
-    jlong baseptr = 0;
-    (void)jenv;
-    (void)jcls;
-    *(btConvexInternalAabbCachingShape **)&baseptr = *(btMultiSphereShape **)&jarg1;
-    return baseptr;
-}
-
 SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btDynamicsWorld_1SWIGUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
     jlong baseptr = 0;
     (void)jenv;
@@ -76856,7 +75109,7 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_swig_1
   static struct {
     const char *method;
     const char *signature;
-  } methods[38] = {
+  } methods[26] = {
     {
       "SwigDirector_btIDebugDraw_drawLine__SWIG_0", "(Lcom/badlogic/gdx/physics/bullet/btIDebugDraw;JJJ)V" 
     },
@@ -76933,42 +75186,6 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_swig_1
       "SwigDirector_btMotionState_setWorldTransform", "(Lcom/badlogic/gdx/physics/bullet/btMotionState;Lcom/badlogic/gdx/math/Matrix4;)V" 
     },
     {
-      "SwigDirector_RayResultCallback_needsCollision", "(Lcom/badlogic/gdx/physics/bullet/RayResultCallback;J)Z" 
-    },
-    {
-      "SwigDirector_RayResultCallback_addSingleResult", "(Lcom/badlogic/gdx/physics/bullet/RayResultCallback;JZ)F" 
-    },
-    {
-      "SwigDirector_ClosestRayResultCallback_needsCollision", "(Lcom/badlogic/gdx/physics/bullet/ClosestRayResultCallback;J)Z" 
-    },
-    {
-      "SwigDirector_ClosestRayResultCallback_addSingleResult", "(Lcom/badlogic/gdx/physics/bullet/ClosestRayResultCallback;JZ)F" 
-    },
-    {
-      "SwigDirector_AllHitsRayResultCallback_needsCollision", "(Lcom/badlogic/gdx/physics/bullet/AllHitsRayResultCallback;J)Z" 
-    },
-    {
-      "SwigDirector_AllHitsRayResultCallback_addSingleResult", "(Lcom/badlogic/gdx/physics/bullet/AllHitsRayResultCallback;JZ)F" 
-    },
-    {
-      "SwigDirector_ConvexResultCallback_needsCollision", "(Lcom/badlogic/gdx/physics/bullet/ConvexResultCallback;J)Z" 
-    },
-    {
-      "SwigDirector_ConvexResultCallback_addSingleResult", "(Lcom/badlogic/gdx/physics/bullet/ConvexResultCallback;JZ)F" 
-    },
-    {
-      "SwigDirector_ClosestConvexResultCallback_needsCollision", "(Lcom/badlogic/gdx/physics/bullet/ClosestConvexResultCallback;J)Z" 
-    },
-    {
-      "SwigDirector_ClosestConvexResultCallback_addSingleResult", "(Lcom/badlogic/gdx/physics/bullet/ClosestConvexResultCallback;JZ)F" 
-    },
-    {
-      "SwigDirector_ContactResultCallback_needsCollision", "(Lcom/badlogic/gdx/physics/bullet/ContactResultCallback;J)Z" 
-    },
-    {
-      "SwigDirector_ContactResultCallback_addSingleResult", "(Lcom/badlogic/gdx/physics/bullet/ContactResultCallback;JJIIJII)F" 
-    },
-    {
       "SwigDirector_InternalTickCallback_onInternalTick", "(Lcom/badlogic/gdx/physics/bullet/InternalTickCallback;JF)V" 
     }
   };
diff --git a/extensions/gdx-bullet/jni/swig-src/gdxBullet_wrap.h b/extensions/gdx-bullet/jni/swig-src/gdxBullet_wrap.h
index 031a840..741ca05 100755
--- a/extensions/gdx-bullet/jni/swig-src/gdxBullet_wrap.h
+++ b/extensions/gdx-bullet/jni/swig-src/gdxBullet_wrap.h
@@ -62,102 +62,6 @@ protected:
     bool swig_override[2];
 };
 
-struct SwigDirector_RayResultCallback : public RayResultCallback, public Swig::Director {
-
-public:
-    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
-    SwigDirector_RayResultCallback(JNIEnv *jenv);
-    virtual ~SwigDirector_RayResultCallback();
-    virtual bool needsCollision(btBroadphaseProxy *proxy0) const;
-    virtual btScalar addSingleResult(LocalRayResult &rayResult, bool normalInWorldSpace);
-public:
-    bool swig_overrides(int n) {
-      return (n < 2 ? swig_override[n] : false);
-    }
-protected:
-    bool swig_override[2];
-};
-
-struct SwigDirector_ClosestRayResultCallback : public ClosestRayResultCallback, public Swig::Director {
-
-public:
-    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
-    SwigDirector_ClosestRayResultCallback(JNIEnv *jenv, btVector3 const &rayFromWorld, btVector3 const &rayToWorld);
-    virtual ~SwigDirector_ClosestRayResultCallback();
-    virtual bool needsCollision(btBroadphaseProxy *proxy0) const;
-    virtual btScalar addSingleResult(LocalRayResult &rayResult, bool normalInWorldSpace);
-public:
-    bool swig_overrides(int n) {
-      return (n < 2 ? swig_override[n] : false);
-    }
-protected:
-    bool swig_override[2];
-};
-
-struct SwigDirector_AllHitsRayResultCallback : public AllHitsRayResultCallback, public Swig::Director {
-
-public:
-    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
-    SwigDirector_AllHitsRayResultCallback(JNIEnv *jenv, btVector3 const &rayFromWorld, btVector3 const &rayToWorld);
-    virtual ~SwigDirector_AllHitsRayResultCallback();
-    virtual bool needsCollision(btBroadphaseProxy *proxy0) const;
-    virtual btScalar addSingleResult(LocalRayResult &rayResult, bool normalInWorldSpace);
-public:
-    bool swig_overrides(int n) {
-      return (n < 2 ? swig_override[n] : false);
-    }
-protected:
-    bool swig_override[2];
-};
-
-struct SwigDirector_ConvexResultCallback : public ConvexResultCallback, public Swig::Director {
-
-public:
-    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
-    SwigDirector_ConvexResultCallback(JNIEnv *jenv);
-    virtual ~SwigDirector_ConvexResultCallback();
-    virtual bool needsCollision(btBroadphaseProxy *proxy0) const;
-    virtual btScalar addSingleResult(LocalConvexResult &convexResult, bool normalInWorldSpace);
-public:
-    bool swig_overrides(int n) {
-      return (n < 2 ? swig_override[n] : false);
-    }
-protected:
-    bool swig_override[2];
-};
-
-struct SwigDirector_ClosestConvexResultCallback : public ClosestConvexResultCallback, public Swig::Director {
-
-public:
-    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
-    SwigDirector_ClosestConvexResultCallback(JNIEnv *jenv, btVector3 const &convexFromWorld, btVector3 const &convexToWorld);
-    virtual ~SwigDirector_ClosestConvexResultCallback();
-    virtual bool needsCollision(btBroadphaseProxy *proxy0) const;
-    virtual btScalar addSingleResult(LocalConvexResult &convexResult, bool normalInWorldSpace);
-public:
-    bool swig_overrides(int n) {
-      return (n < 2 ? swig_override[n] : false);
-    }
-protected:
-    bool swig_override[2];
-};
-
-struct SwigDirector_ContactResultCallback : public ContactResultCallback, public Swig::Director {
-
-public:
-    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
-    SwigDirector_ContactResultCallback(JNIEnv *jenv);
-    virtual ~SwigDirector_ContactResultCallback();
-    virtual bool needsCollision(btBroadphaseProxy *proxy0) const;
-    virtual btScalar addSingleResult(btManifoldPoint &cp, btCollisionObjectWrapper const *colObj0Wrap, int partId0, int index0, btCollisionObjectWrapper const *colObj1Wrap, int partId1, int index1);
-public:
-    bool swig_overrides(int n) {
-      return (n < 2 ? swig_override[n] : false);
-    }
-protected:
-    bool swig_override[2];
-};
-
 class SwigDirector_InternalTickCallback : public InternalTickCallback, public Swig::Director {
 
 public:
diff --git a/extensions/gdx-bullet/jni/swig/custom/btBroadphasePairArray.i b/extensions/gdx-bullet/jni/swig/custom/btBroadphasePairArray.i
deleted file mode 100644
index 6bd45b8..0000000
--- a/extensions/gdx-bullet/jni/swig/custom/btBroadphasePairArray.i
+++ /dev/null
@@ -1,98 +0,0 @@
-%module btBroadphasePairArray
-
-%include "gdxDisableBuffers.i"
-%include "gdxEnableCriticalArrays.i"
-
-%typemap(javacode) btAlignedObjectArray<btBroadphasePair> %{
-	/**
-	 * @param out The array to fill with collision objects
-	 * @param other The collision object the pair must contain (which itself is excluded from the result)
-	 * @param tempArray A temporary array used by the method, not more object than the length of this array are added 
-	 * @return The array specified by out */
-	public com.badlogic.gdx.utils.Array<btCollisionObject> getCollisionObjects(final com.badlogic.gdx.utils.Array<btCollisionObject> out, final btCollisionObject other, final int[] tempArray) {
-		final int c = getCollisionObjects(tempArray, tempArray.length, (int)btCollisionObject.getCPtr(other));
-		for (int i = 0; i < c; i++)
-			out.add(btCollisionObject.getInstance(tempArray[i], false));
-		return out;
-	}
-	
-	/** Fills the given array with user value set using {@link btCollisionObject#setUserValue(int)} of the collision objects
-	 * within this pair array colliding with the given collision object.
-	 * @param out The array to fill with the user values
-	 * @param other The collision object the pair must contain (which itself is excluded from the result)
-	 * @return The amount of user values set in the out array. */
-	public int getCollisionObjectsValue(final int[] out, final btCollisionObject other) {
-		return getCollisionObjectsValue(out, out.length, (int)btCollisionObject.getCPtr(other));
-	}
-%}
-
-%rename(btBroadphasePairArray) btAlignedObjectArray<btBroadphasePair>;
-class btAlignedObjectArray<btBroadphasePair> {
-public:
-	SIMD_FORCE_INLINE	int size() const;
-	SIMD_FORCE_INLINE const btBroadphasePair& at(int n) const;
-};
-
-%extend btAlignedObjectArray<btBroadphasePair> {
-	int getCollisionObjects(int result[], int max, int other) {
-		static btManifoldArray marr;
-		const int n = $self->size();
-		int count = 0;
-		int obj0, obj1;
-		for (int i = 0; i < n; i++) {
-			const btBroadphasePair& collisionPair = (*$self)[i];
-			if (collisionPair.m_algorithm) {
-				marr.resize(0);
-				collisionPair.m_algorithm->getAllContactManifolds(marr);
-				const int s = marr.size();
-				for (int j = 0; j < s; j++) {
-					btPersistentManifold *manifold = marr[j];
-					if (manifold->getNumContacts() > 0) {
-						*(const btCollisionObject **)&obj0 = manifold->getBody0();
-						*(const btCollisionObject **)&obj1 = manifold->getBody1();
-						if (obj0 == other)
-							result[count++] = obj1;
-						else if (obj1 == other)
-							result[count++] = obj0;
-						else continue;
-						if (count >= max)
-							return count;
-					}
-				}
-			}
-		}
-		return count;
-	}
-	
-	int getCollisionObjectsValue(int result[], int max, int other) {
-		static btManifoldArray marr;
-		const int n = $self->size();
-		int count = 0;
-		int obj0, obj1;
-		for (int i = 0; i < n; i++) {
-			const btBroadphasePair& collisionPair = (*$self)[i];
-			if (collisionPair.m_algorithm) {
-				marr.resize(0);
-				collisionPair.m_algorithm->getAllContactManifolds(marr);
-				const int s = marr.size();
-				for (int j = 0; j < s; j++) {
-					btPersistentManifold *manifold = marr[j];
-					if (manifold->getNumContacts() > 0) {
-						*(const btCollisionObject **)&obj0 = manifold->getBody0();
-						*(const btCollisionObject **)&obj1 = manifold->getBody1();
-						if (obj0 == other)
-							*(const void **)&(result[count++]) = manifold->getBody1()->getUserPointer();
-						else if (obj1 == other)
-							*(const void **)&(result[count++]) = manifold->getBody0()->getUserPointer();
-						else continue;
-						if (count >= max)
-							return count;
-					}
-				}
-			}
-		}
-		return count;
-	}
-};
-
-%include "gdxEnableBuffers.i"
diff --git a/extensions/gdx-bullet/jni/swig/custom/btBvhTriangleMeshShape.i b/extensions/gdx-bullet/jni/swig/custom/btBvhTriangleMeshShape.i
index bbdb707..de34be5 100644
--- a/extensions/gdx-bullet/jni/swig/custom/btBvhTriangleMeshShape.i
+++ b/extensions/gdx-bullet/jni/swig/custom/btBvhTriangleMeshShape.i
@@ -8,7 +8,7 @@
 %}
 
 %typemap(javacode) btBvhTriangleMeshShape %{
-	protected btStridingMeshInterface meshInterface = null;
+	btStridingMeshInterface meshInterface = null;
 	
 	/** @param managed If true this btBvhTriangleMeshShape will keep a reference to the {@link btStridingMeshInterface}
 	 * and deletes it when this btBvhTriangleMeshShape gets deleted. */
diff --git a/extensions/gdx-bullet/jni/swig/custom/btCollisionObject.i b/extensions/gdx-bullet/jni/swig/custom/btCollisionObject.i
index dbee306..9d3b8f4 100644
--- a/extensions/gdx-bullet/jni/swig/custom/btCollisionObject.i
+++ b/extensions/gdx-bullet/jni/swig/custom/btCollisionObject.i
@@ -9,10 +9,6 @@
 	return (cPtr == 0) ? null : btCollisionObject.getInstance(cPtr, $owner);
 }
 
-%typemap(javainterfaces) btCollisionObject %{
-	com.badlogic.gdx.utils.Disposable
-%}
-
 %typemap(javabody) btCollisionObject %{
 	public final static com.badlogic.gdx.utils.LongMap<btCollisionObject> instances = new com.badlogic.gdx.utils.LongMap<btCollisionObject>();
 	
@@ -26,20 +22,12 @@
 	private long swigCPtr;
 	protected boolean swigCMemOwn;
 	
-	public Object userData;
-	
 	protected btCollisionObject(long cPtr, boolean cMemoryOwn) {
 		swigCMemOwn = cMemoryOwn;
 		swigCPtr = cPtr;
 		instances.put(cPtr, this);
 	}
 	
-	@Override
-	public void dispose() {
-		instances.remove(swigCPtr);
-		delete();
-	}
-	
 	public void takeOwnership() {
 		swigCMemOwn = true;
 	}
@@ -79,14 +67,4 @@
 	void getInterpolationAngularVelocity(btVector3 & out) {
 		out = $self->getInterpolationAngularVelocity();
 	}
-	
-	int getUserValue() {
-		int result;
-		*(const void **)&result = $self->getUserPointer();
-		return result;
-	}
-	
-	void setUserValue(int value) {
-		$self->setUserPointer((void*)value);
-	}
 };
\ No newline at end of file
diff --git a/extensions/gdx-bullet/jni/swig/custom/btCollisionObjectWrapper.i b/extensions/gdx-bullet/jni/swig/custom/btCollisionObjectWrapper.i
deleted file mode 100644
index b1e9489..0000000
--- a/extensions/gdx-bullet/jni/swig/custom/btCollisionObjectWrapper.i
+++ /dev/null
@@ -1,8 +0,0 @@
-%module btCollisionObjectWrapper
-
-%nodefaultdtor btCollisionObjectWrapper;
-
-%{
-#include <BulletCollision/CollisionDispatch/btCollisionObjectWrapper.h>
-%}
-%include "BulletCollision/CollisionDispatch/btCollisionObjectWrapper.h"
\ No newline at end of file
diff --git a/extensions/gdx-bullet/jni/swig/custom/btCollisionWorld.i b/extensions/gdx-bullet/jni/swig/custom/btCollisionWorld.i
index 35aa65a..7889bb9 100644
--- a/extensions/gdx-bullet/jni/swig/custom/btCollisionWorld.i
+++ b/extensions/gdx-bullet/jni/swig/custom/btCollisionWorld.i
@@ -2,17 +2,7 @@
  *	Interface module for a class with inner structs or classes.
  */
  
-%module(directors="1") btCollisionWorld
-
-%feature("director") LocalShapeInfo;
-%feature("director") LocalRayResult;
-%feature("director") RayResultCallback;
-%feature("director") ClosestRayResultCallback;
-%feature("director") AllHitsRayResultCallback;
-%feature("director") LocalConvexResult;
-%feature("director") ConvexResultCallback;
-%feature("director") ClosestConvexResultCallback;
-%feature("director") ContactResultCallback;
+%module btCollisionWorld
 
 	///LocalShapeInfo gives extra information for complex shapes
 	///Currently, only btTriangleMeshShape is available, so it just contains triangleIndex and subpart
diff --git a/extensions/gdx-bullet/jni/swig/custom/btMultiSphereShape.i b/extensions/gdx-bullet/jni/swig/custom/btMultiSphereShape.i
deleted file mode 100644
index 9a1a955..0000000
--- a/extensions/gdx-bullet/jni/swig/custom/btMultiSphereShape.i
+++ /dev/null
@@ -1,62 +0,0 @@
-%module btMultiSphereShape
-
-%include "../gdxDisableBuffers.i"
-%include "../gdxEnableArrays.i"
-
-%fragment("gdxBulletHelpersVector3Array", "header") {
-	btVector3* Vector3ArrayToBtVector3Array(JNIEnv * jenv, jobjectArray source) {
-		static jfieldID xField = NULL, yField = NULL, zField = NULL;
-		jint len = jenv->GetArrayLength(source);
-		if (len <= 0)
-			return NULL;
-			
-		btVector3* result = new btVector3[len];
-			
-		if (xField == NULL) {
-			jobject vec = jenv->GetObjectArrayElement(source, 0);
-			jclass sc = jenv->GetObjectClass(vec);
-			xField = jenv->GetFieldID(sc, "x", "F");
-			yField = jenv->GetFieldID(sc, "y", "F");
-			zField = jenv->GetFieldID(sc, "z", "F");
-			jenv->DeleteLocalRef(sc);
-		}
-		
-		for (int i = 0; i < len; i++) {
-			jobject vec = jenv->GetObjectArrayElement(source, i);
-			result[i].setValue(jenv->GetFloatField(vec, xField), jenv->GetFloatField(vec, yField), jenv->GetFloatField(vec, zField));
-		}
-		return result;
-	}
-	
-	class gdxAutoDeleteBtVector3Array {
-	private:
-	  btVector3* array;
-	public:
-	  gdxAutoDeleteBtVector3Array(btVector3* arr) : 
-	    array(arr) { }
-	  virtual ~gdxAutoDeleteBtVector3Array() {
-		  if (array != NULL)
-			  delete[] array;
-	  }
-	};
-}
-
-%typemap(jstype) 			btVector3* 	"Vector3[]"
-%typemap(jtype) 			btVector3* 	"Vector3[]"
-%typemap(javain)			btVector3*	"$javainput"
-%typemap(jni) 				btVector3* 	"jobjectArray"
-
-%typemap(in, fragment="gdxBulletHelpersVector3Array", noblock=1)		btVector3*	{
-	static jfieldID xField = NULL, yField = NULL, zField = NULL;
-	$1 = Vector3ArrayToBtVector3Array(jenv, $input);
-	gdxAutoDeleteBtVector3Array auto_delete($1);
-}
-
-%{
-#include <BulletCollision/CollisionShapes/btMultiSphereShape.h>
-%}
-%include "BulletCollision/CollisionShapes/btMultiSphereShape.h"
-
-%clear btVector3*;
-%include "../gdxDisableArrays.i"
-%include "../gdxEnableBuffers.i"
\ No newline at end of file
diff --git a/extensions/gdx-bullet/jni/swig/custom/btSoftBody.i b/extensions/gdx-bullet/jni/swig/custom/btSoftBody.i
index b6c94ff..b4ae8fd 100644
--- a/extensions/gdx-bullet/jni/swig/custom/btSoftBody.i
+++ b/extensions/gdx-bullet/jni/swig/custom/btSoftBody.i
@@ -125,6 +125,7 @@ struct	Config
 
 %{
 #include <BulletSoftBody/btSoftBody.h>
+#include <stdint.h>
 %}
 %include "BulletSoftBody/btSoftBody.h"
 
diff --git a/extensions/gdx-bullet/jni/swig/gdxBullet.i b/extensions/gdx-bullet/jni/swig/gdxBullet.i
index 13d8663..748f387 100644
--- a/extensions/gdx-bullet/jni/swig/gdxBullet.i
+++ b/extensions/gdx-bullet/jni/swig/gdxBullet.i
@@ -25,8 +25,6 @@ SWIG_JAVABODY_TYPEWRAPPER(protected, protected, public, SWIGTYPE)
 %include "gdxBuffers.i"
 %include "gdxEnableBuffers.i"
 
-%include "gdxCriticalArrays.i"
-
 %include "gdxPool.i"
 %include "gdxPooledTypemap.i"
 
@@ -43,11 +41,6 @@ SWIG_JAVABODY_TYPEWRAPPER(protected, protected, public, SWIGTYPE)
 /* Include Java imports for all the types we'll need in all extensions/custom types. */
 %include "gdxJavaImports.i"
 
-
-%{
-#include <stdint.h>
-%}
-
 /*
  * btScalar.h defines macros the other types need, so process it first.  
  * It also defines some static functions that end up in gdxBulletJNI.java.
@@ -345,6 +338,10 @@ ENABLE_POOLED_TYPEMAP(btTransform, Matrix4, "Lcom/badlogic/gdx/math/Matrix4;");
 %}
 %include "BulletCollision/CollisionShapes/btSphereShape.h"
 
+%{
+#include <BulletCollision/CollisionShapes/btMultiSphereShape.h>
+%}
+%include "BulletCollision/CollisionShapes/btMultiSphereShape.h"
 
 %{
 #include <BulletCollision/CollisionShapes/btStridingMeshInterface.h>
@@ -435,7 +432,6 @@ ENABLE_POOLED_TYPEMAP(btTransform, Matrix4, "Lcom/badlogic/gdx/math/Matrix4;");
 %}
 %include "BulletCollision/CollisionShapes/btUniformScalingShape.h"
 
-%include "javacode/btCompoundShape.i"
 %{
 #include <BulletCollision/CollisionShapes/btCompoundShape.h>
 %}
@@ -457,8 +453,6 @@ ENABLE_POOLED_TYPEMAP(btTransform, Matrix4, "Lcom/badlogic/gdx/math/Matrix4;");
 /* Has nested classes or structs */
 %include "custom/btRigidBody.i"
 
-%include "custom/btCollisionObjectWrapper.i"
-
 %{
 #include <BulletCollision/CollisionDispatch/btEmptyCollisionAlgorithm.h>
 %}
@@ -673,8 +667,6 @@ ENABLE_POOLED_TYPEMAP(btTransform, Matrix4, "Lcom/badlogic/gdx/math/Matrix4;");
 /* Has nested classes or structs */
 %include "custom/btTypedConstraint.i"
 
-%include "custom/btMultiSphereShape.i"
-
 %{
 #include <BulletDynamics/Dynamics/btDynamicsWorld.h>
 %}
@@ -892,8 +884,6 @@ ENABLE_POOLED_TYPEMAP(btTransform, Matrix4, "Lcom/badlogic/gdx/math/Matrix4;");
  */
  
 %template(btCollisionObjectArray) btAlignedObjectArray<btCollisionObject *>;
-%include "custom/btBroadphasePairArray.i"
-%template(btManifoldArray) btAlignedObjectArray<btPersistentManifold*>;
 
 /*
  * Include dummy methods for ones Bullet declares but doesn't
diff --git a/extensions/gdx-bullet/jni/swig/gdxCriticalArrays.i b/extensions/gdx-bullet/jni/swig/gdxCriticalArrays.i
deleted file mode 100644
index 5c9098d..0000000
--- a/extensions/gdx-bullet/jni/swig/gdxCriticalArrays.i
+++ /dev/null
@@ -1,31 +0,0 @@
-%define JAVA_CRITICAL_ARRAYS_TYPEMAPS(CTYPE, JTYPE, JNITYPE, JFUNCNAME, JNIDESC)
-
-%typemap(jni) CTYPE[ANY], CTYPE[]               %{JNITYPE##Array%}
-%typemap(jtype) CTYPE[ANY], CTYPE[]             %{JTYPE[]%}
-%typemap(jstype) CTYPE[ANY], CTYPE[]            %{JTYPE[]%}
-
-%typemap(in) CTYPE[]
-%{ $1 = (CTYPE *)jenv->GetPrimitiveArrayCritical($input, 0); %}
-%typemap(in) CTYPE[ANY]
-%{  if ($input && JCALL1(GetArrayLength, jenv, $input) != $1_size) {
-    SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, "incorrect array size");
-    return $null;
-  }
-  $1 = (CTYPE *)jenv->GetPrimitiveArrayCritical($input, 0); %}
-%typemap(argout) CTYPE[ANY], CTYPE[]; 
-%{ /*SWIG_JavaArrayArgout##JFUNCNAME(jenv, jarr$argnum, (CTYPE *)$1, $input);*/ %}
-%typemap(out) CTYPE[ANY]
-%{ /*$result = SWIG_JavaArrayOut##JFUNCNAME(jenv, (CTYPE *)$1, $1_dim0);*/ %}
-%typemap(out) CTYPE[] 
-%{ /*$result = SWIG_JavaArrayOut##JFUNCNAME(jenv, (CTYPE *)$1, FillMeInAsSizeCannotBeDeterminedAutomatically);*/ %}
-%typemap(freearg) CTYPE[ANY], CTYPE[]
-%{ jenv->ReleasePrimitiveArrayCritical($input, (CTYPE *)$1, 0); %}
-
-%typemap(javain) CTYPE[ANY], CTYPE[] "$javainput"
-%typemap(javaout) CTYPE[ANY], CTYPE[] {
-    return $jnicall;
-}
-
-%typemap(memberin) CTYPE[ANY], CTYPE[];
-%typemap(globalin) CTYPE[ANY], CTYPE[];
-%enddef
\ No newline at end of file
diff --git a/extensions/gdx-bullet/jni/swig/gdxEnableCriticalArrays.i b/extensions/gdx-bullet/jni/swig/gdxEnableCriticalArrays.i
deleted file mode 100644
index d7ea7f7..0000000
--- a/extensions/gdx-bullet/jni/swig/gdxEnableCriticalArrays.i
+++ /dev/null
@@ -1,13 +0,0 @@
-
-JAVA_CRITICAL_ARRAYS_TYPEMAPS(bool, boolean, jboolean, Bool, "[Z")       /* bool[ANY] */
-JAVA_CRITICAL_ARRAYS_TYPEMAPS(signed char, byte, jbyte, Schar, "[B")     /* signed char[ANY] */
-JAVA_CRITICAL_ARRAYS_TYPEMAPS(unsigned char, short, jshort, Uchar, "[S") /* unsigned char[ANY] */
-JAVA_CRITICAL_ARRAYS_TYPEMAPS(short, short, jshort, Short, "[S")         /* short[ANY] */
-JAVA_CRITICAL_ARRAYS_TYPEMAPS(unsigned short, int, jint, Ushort, "[I")   /* unsigned short[ANY] */
-JAVA_CRITICAL_ARRAYS_TYPEMAPS(int, int, jint, Int, "[I")                 /* int[ANY] */
-JAVA_CRITICAL_ARRAYS_TYPEMAPS(unsigned int, long, jlong, Uint, "[J")     /* unsigned int[ANY] */
-JAVA_CRITICAL_ARRAYS_TYPEMAPS(long, int, jint, Long, "[I")               /* long[ANY] */
-JAVA_CRITICAL_ARRAYS_TYPEMAPS(unsigned long, long, jlong, Ulong, "[J")   /* unsigned long[ANY] */
-JAVA_CRITICAL_ARRAYS_TYPEMAPS(long long, long, jlong, Longlong, "[J")    /* long long[ANY] */
-JAVA_CRITICAL_ARRAYS_TYPEMAPS(float, float, jfloat, Float, "[F")         /* float[ANY] */
-JAVA_CRITICAL_ARRAYS_TYPEMAPS(double, double, jdouble, Double, "[D")     /* double[ANY] */
diff --git a/extensions/gdx-bullet/jni/swig/javacode/btCompoundShape.i b/extensions/gdx-bullet/jni/swig/javacode/btCompoundShape.i
deleted file mode 100644
index d418607..0000000
--- a/extensions/gdx-bullet/jni/swig/javacode/btCompoundShape.i
+++ /dev/null
@@ -1,38 +0,0 @@
-%module btCompoundShape
-
-%typemap(javaimports) btCompoundShape %{
-import com.badlogic.gdx.utils.Array;
-import com.badlogic.gdx.math.Vector3;
-import com.badlogic.gdx.math.Quaternion;
-import com.badlogic.gdx.math.Matrix3;
-import com.badlogic.gdx.math.Matrix4;
-%}
-
-%typemap(javacode) btCompoundShape %{
-	protected Array<btCollisionShape> children = new Array<btCollisionShape>();
-	
-	public void addChildShape(Matrix4 localTransform, btCollisionShape shape, boolean managed) {
-		addChildShape(localTransform, shape);
-		if (managed)
-			children.add(shape);
-	}
-	
-	protected void dispose() {
-		for (int i = 0; i < children.size; i++)
-			children.get(i).delete();
-		children.clear();
-	}
-%}
-
-%typemap(javadestruct_derived, methodname="delete", methodmodifiers="public synchronized") btCompoundShape %{ {
-    if (swigCPtr != 0) {
-      if (swigCMemOwn) {
-        swigCMemOwn = false;
-        gdxBulletJNI.delete_btCompoundShape(swigCPtr);
-      }
-      swigCPtr = 0;
-    }
-    super.delete();
-	dispose();
-  }
-%}
\ No newline at end of file
diff --git a/extensions/gdx-bullet/libs/gdx-bullet-natives.jar b/extensions/gdx-bullet/libs/gdx-bullet-natives.jar
new file mode 100644
index 0000000..92b7ede
Binary files /dev/null and b/extensions/gdx-bullet/libs/gdx-bullet-natives.jar differ
diff --git a/extensions/gdx-bullet/src/com/badlogic/gdx/physics/bullet/BulletBuild.java b/extensions/gdx-bullet/src/com/badlogic/gdx/physics/bullet/BulletBuild.java
index d36f927..94cc3c0 100644
--- a/extensions/gdx-bullet/src/com/badlogic/gdx/physics/bullet/BulletBuild.java
+++ b/extensions/gdx-bullet/src/com/badlogic/gdx/physics/bullet/BulletBuild.java
@@ -89,13 +89,8 @@ public class BulletBuild {
 		android.cExcludes = android.cppExcludes = excludes;
 		android.headerDirs = headers;
 		android.cppFlags += cppFlags;
-		
-		BuildTarget ios = BuildTarget.newDefaultTarget(TargetOs.IOS, false);
-		ios.cExcludes = ios.cppExcludes = excludes;
-		ios.headerDirs = headers;
-		ios.cppFlags += cppFlags;
 
-		new AntScriptGenerator().generate(new BuildConfig("gdx-bullet"), win32home, win32, win64, lin32, lin64, mac, android, ios);
+		new AntScriptGenerator().generate(new BuildConfig("gdx-bullet"), win32home, win32, win64, lin32, lin64, mac, android);
 
 		// build natives
 		// BuildExecutor.executeAnt("jni/build-windows32home.xml", "-v");
diff --git a/extensions/gdx-controllers/gdx-controllers-desktop/.classpath b/extensions/gdx-controllers/gdx-controllers-desktop/.classpath
index 84bf81c..f4c9643 100644
--- a/extensions/gdx-controllers/gdx-controllers-desktop/.classpath
+++ b/extensions/gdx-controllers/gdx-controllers-desktop/.classpath
@@ -3,6 +3,7 @@
 	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6"/>
 	<classpathentry excluding="**/.svn/*" kind="src" path="src"/>
 	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx"/>
+	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx-backend-lwjgl"/>
 	<classpathentry combineaccessrules="false" kind="src" path="/gdx-jnigen"/>
 	<classpathentry exported="true" kind="lib" path="libs/gdx-controllers-desktop-natives.jar"/>
 	<classpathentry combineaccessrules="false" kind="src" path="/gdx-controllers"/>
diff --git a/extensions/gdx-controllers/gdx-controllers-desktop/libs/gdx-controllers-desktop-natives.jar b/extensions/gdx-controllers/gdx-controllers-desktop/libs/gdx-controllers-desktop-natives.jar
new file mode 100755
index 0000000..a38cd92
Binary files /dev/null and b/extensions/gdx-controllers/gdx-controllers-desktop/libs/gdx-controllers-desktop-natives.jar differ
diff --git a/extensions/gdx-controllers/gdx-controllers-desktop/src/com/badlogic/gdx/controllers/desktop/DesktopControllersTest.java b/extensions/gdx-controllers/gdx-controllers-desktop/src/com/badlogic/gdx/controllers/desktop/DesktopControllersTest.java
new file mode 100644
index 0000000..b6fd6bb
--- /dev/null
+++ b/extensions/gdx-controllers/gdx-controllers-desktop/src/com/badlogic/gdx/controllers/desktop/DesktopControllersTest.java
@@ -0,0 +1,92 @@
+/*******************************************************************************
+ * Copyright 2011 See AUTHORS file.
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/
+package com.badlogic.gdx.controllers.desktop;
+
+import com.badlogic.gdx.ApplicationAdapter;
+import com.badlogic.gdx.backends.lwjgl.LwjglFrame;
+import com.badlogic.gdx.controllers.Controller;
+import com.badlogic.gdx.controllers.ControllerListener;
+import com.badlogic.gdx.controllers.Controllers;
+import com.badlogic.gdx.controllers.PovDirection;
+import com.badlogic.gdx.math.Vector3;
+import com.badlogic.gdx.utils.SharedLibraryLoader;
+
+import javax.swing.JFrame;
+import javax.swing.SwingUtilities;
+
+public class DesktopControllersTest {
+	public static void main (String[] args) throws Exception {
+		DesktopControllersBuild.main(null);
+		new SharedLibraryLoader("libs/gdx-controllers-desktop-natives.jar").load("gdx-controllers-desktop");
+
+		ApplicationAdapter app = new ApplicationAdapter() {
+			public void create () {
+				Controllers.addListener(new ControllerListener() {
+					public boolean ySliderMoved (Controller controller, int sliderIndex, boolean value) {
+						System.out.println("ySliderMoved: " + sliderIndex + ", " + value);
+						return true;
+					}
+
+					public boolean xSliderMoved (Controller controller, int sliderIndex, boolean value) {
+						System.out.println("xSliderMoved: " + sliderIndex + ", " + value);
+						return true;
+					}
+
+					public boolean povMoved (Controller controller, int povIndex, PovDirection value) {
+						System.out.println("povMoved: " + povIndex + ", " + value);
+						return true;
+					}
+
+					public boolean buttonUp (Controller controller, int buttonIndex) {
+						System.out.println("buttonUp: " + buttonIndex);
+						return true;
+					}
+
+					public boolean buttonDown (Controller controller, int buttonIndex) {
+						System.out.println("buttonDown: " + buttonIndex);
+						return true;
+					}
+
+					public boolean axisMoved (Controller controller, int axisIndex, float value) {
+						System.out.println("axisMoved: " + axisIndex + ", " + value);
+						return true;
+					}
+
+					public boolean accelerometerMoved (Controller controller, int accelerometerIndex, Vector3 value) {
+						System.out.println("accelerometerMoved: " + accelerometerIndex + ", " + value);
+						return true;
+					}
+
+					@Override
+					public void connected (Controller controller) {
+					}
+
+					@Override
+					public void disconnected (Controller controller) {
+					}
+				});
+			}
+
+			public void render () {
+				for (Controller controller : Controllers.getControllers())
+					if (controller.getButton(0)) System.out.println("button 0 pressed");
+			}
+		};
+
+		// new LwjglApplication(app);
+		new LwjglFrame(app, "Controllers", 200, 200, false);
+	}
+}
\ No newline at end of file
diff --git a/extensions/gdx-controllers/gdx-controllers-desktop/src/com/badlogic/gdx/controllers/desktop/OisControllers.java b/extensions/gdx-controllers/gdx-controllers-desktop/src/com/badlogic/gdx/controllers/desktop/OisControllers.java
index 566609c..3427614 100644
--- a/extensions/gdx-controllers/gdx-controllers-desktop/src/com/badlogic/gdx/controllers/desktop/OisControllers.java
+++ b/extensions/gdx-controllers/gdx-controllers-desktop/src/com/badlogic/gdx/controllers/desktop/OisControllers.java
@@ -13,11 +13,10 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  ******************************************************************************/
-
 package com.badlogic.gdx.controllers.desktop;
 
 import com.badlogic.gdx.Gdx;
-import com.badlogic.gdx.Graphics.GraphicsType;
+import com.badlogic.gdx.backends.lwjgl.LwjglCanvas;
 import com.badlogic.gdx.controllers.ControlType;
 import com.badlogic.gdx.controllers.Controller;
 import com.badlogic.gdx.controllers.ControllerListener;
@@ -30,17 +29,20 @@ import com.badlogic.gdx.math.Vector3;
 import com.badlogic.gdx.utils.Array;
 import com.badlogic.gdx.utils.GdxRuntimeException;
 
-import java.awt.Component;
+import java.awt.Container;
+import java.awt.Frame;
 import java.lang.reflect.Field;
 import java.lang.reflect.Method;
 import java.util.ArrayList;
 
 import javax.swing.SwingUtilities;
 
+import org.lwjgl.opengl.Display;
+
 /** @author Nathan Sweet */
 public class OisControllers {
 	final DesktopControllerManager manager;
-	final Ois ois = new Ois(getWindowHandle());
+	final Ois ois = new Ois(getLwjglWindowHandle());
 	final OisController[] controllers;
 
 	public OisControllers (DesktopControllerManager manager) {
@@ -200,37 +202,28 @@ public class OisControllers {
 	}
 
 	/** Returns the window handle from LWJGL needed by OIS. */
-	static public long getWindowHandle () {
+	static public long getLwjglWindowHandle () {
 		// don't need a window handle for Mac OS X
-		if (System.getProperty("os.name").toLowerCase().contains("mac")) {
+		if(System.getProperty("os.name").toLowerCase().contains("mac")) {
 			return 0;
 		}
-
+		
 		try {
-			if (Gdx.graphics.getType() == GraphicsType.JGLFW)
-				return (Long)Gdx.graphics.getClass().getDeclaredMethod("getWindow").invoke(null);
-
-			if (Gdx.graphics.getType() == GraphicsType.LWJGL) {
-				if (Gdx.app.getClass().getName().equals("com.badlogic.gdx.backends.lwjgl.LwjglCanvas")) {
-					Class canvasClass = Class.forName("com.badlogic.gdx.backends.lwjgl.LwjglCanvas");
-					Object canvas = canvasClass.getDeclaredMethod("getCanvas").invoke(Gdx.app);
-					return (Long)invokeMethod(invokeMethod(SwingUtilities.windowForComponent((Component)canvas), "getPeer"), "getHWnd");
-				}
-
-				Class displayClass = Class.forName("org.lwjgl.opengl.Display");
-				Method getImplementation = displayClass.getDeclaredMethod("getImplementation", new Class[0]);
-				getImplementation.setAccessible(true);
-				Object display = getImplementation.invoke(null, (Object[])null);
-				String fieldName = System.getProperty("os.name").toLowerCase().contains("windows") ? "hwnd" : "parent_window";
-				Field field = display.getClass().getDeclaredField(fieldName);
-				field.setAccessible(true);
-				return (Long)field.get(display);
+			if (Gdx.app instanceof LwjglCanvas) {
+				return (Long)invokeMethod(
+					invokeMethod(SwingUtilities.windowForComponent(((LwjglCanvas)Gdx.app).getCanvas()), "getPeer"), "getHWnd");
 			}
+
+			Method getImplementation = Display.class.getDeclaredMethod("getImplementation", new Class[0]);
+			getImplementation.setAccessible(true);
+			Object display = getImplementation.invoke(null, (Object[])null);
+			String fieldName = System.getProperty("os.name").toLowerCase().contains("windows") ? "hwnd" : "parent_window";
+			Field field = display.getClass().getDeclaredField(fieldName);
+			field.setAccessible(true);
+			return (Long)field.get(display);
 		} catch (Exception ex) {
 			throw new RuntimeException("Unable to get window handle.", ex);
 		}
-
-		return 0;
 	}
 
 	static private Object invokeMethod (Object object, String methodName) throws Exception {
@@ -239,4 +232,4 @@ public class OisControllers {
 		throw new RuntimeException("Could not find method '" + methodName + "' on class: " + object.getClass());
 	}
 
-}
+}
\ No newline at end of file
diff --git a/extensions/gdx-controllers/gdx-controllers-desktop/src/com/badlogic/gdx/controllers/desktop/ois/Ois.java b/extensions/gdx-controllers/gdx-controllers-desktop/src/com/badlogic/gdx/controllers/desktop/ois/Ois.java
index a33fd35..1b6c433 100755
--- a/extensions/gdx-controllers/gdx-controllers-desktop/src/com/badlogic/gdx/controllers/desktop/ois/Ois.java
+++ b/extensions/gdx-controllers/gdx-controllers-desktop/src/com/badlogic/gdx/controllers/desktop/ois/Ois.java
@@ -15,8 +15,12 @@
  ******************************************************************************/
 package com.badlogic.gdx.controllers.desktop.ois;
 
+import java.lang.reflect.Field;
+import java.lang.reflect.Method;
 import java.util.ArrayList;
 
+import org.lwjgl.opengl.Display;
+
 /** JNI wrapper for OIS (Object-oriented Input System).
  * @author mzechner
  * @author Nathan Sweet */
diff --git a/extensions/gdx-controllers/gdx-controllers-desktop/src/com/badlogic/gdx/controllers/desktop/ois/OisJoystick.java b/extensions/gdx-controllers/gdx-controllers-desktop/src/com/badlogic/gdx/controllers/desktop/ois/OisJoystick.java
index 17a30f3..b467eb6 100755
--- a/extensions/gdx-controllers/gdx-controllers-desktop/src/com/badlogic/gdx/controllers/desktop/ois/OisJoystick.java
+++ b/extensions/gdx-controllers/gdx-controllers-desktop/src/com/badlogic/gdx/controllers/desktop/ois/OisJoystick.java
@@ -104,7 +104,7 @@ public class OisJoystick {
 	}
 
 	public OisPov getPov (int povIndex) {
-		if(povIndex < 0 || povIndex >= povs.length) return OisPov.Centered;
+		if(povIndex < 0 || povIndex >= axes.length) return OisPov.Centered;
 		switch (povs[povIndex]) {
 		case 0x00000000:
 			return OisPov.Centered;
@@ -130,18 +130,18 @@ public class OisJoystick {
 	}
 
 	public boolean isButtonPressed (int buttonIndex) {
-		if(buttonIndex < 0 || buttonIndex >= buttons.length) return false;
+		if(buttonIndex < 0 || buttonIndex >= axes.length) return false;
 		return buttons[buttonIndex];
 	}
 
 	public boolean getSliderX (int sliderIndex) {
-		if(sliderIndex < 0 || sliderIndex >= slidersX.length) return false;
+		if(sliderIndex < 0 || sliderIndex >= axes.length) return false;
 
 		return slidersX[sliderIndex];
 	}
 
 	public boolean getSliderY (int sliderIndex) {
-		if(sliderIndex < 0 || sliderIndex >= slidersY.length) return false;
+		if(sliderIndex < 0 || sliderIndex >= axes.length) return false;
 		return slidersY[sliderIndex];
 	}
 
diff --git a/extensions/gdx-controllers/gdx-controllers-desktop/src/com/badlogic/gdx/controllers/desktop/ois/OisTest.java b/extensions/gdx-controllers/gdx-controllers-desktop/src/com/badlogic/gdx/controllers/desktop/ois/OisTest.java
index 6716312..cd2f4cd 100755
--- a/extensions/gdx-controllers/gdx-controllers-desktop/src/com/badlogic/gdx/controllers/desktop/ois/OisTest.java
+++ b/extensions/gdx-controllers/gdx-controllers-desktop/src/com/badlogic/gdx/controllers/desktop/ois/OisTest.java
@@ -16,6 +16,7 @@
 package com.badlogic.gdx.controllers.desktop.ois;
 
 import com.badlogic.gdx.ApplicationAdapter;
+import com.badlogic.gdx.backends.lwjgl.LwjglApplication;
 import com.badlogic.gdx.controllers.desktop.DesktopControllersBuild;
 import com.badlogic.gdx.controllers.desktop.OisControllers;
 import com.badlogic.gdx.controllers.desktop.ois.OisJoystick.OisPov;
@@ -30,7 +31,7 @@ public class OisTest {
 			Ois ois;
 
 			public void create () {
-				ois = new Ois(OisControllers.getWindowHandle());
+				ois = new Ois(OisControllers.getLwjglWindowHandle());
 				if (ois.getJoysticks().size() > 0) {
 					ois.getJoysticks().get(0).setListener(new OisListener() {
 						@Override
@@ -72,7 +73,7 @@ public class OisTest {
 			}
 		};
 
-		//new LwjglApplication(app);
+		new LwjglApplication(app);
 //		 new LwjglFrame(app, "Controllers", 200, 200, false);
 	}
 }
\ No newline at end of file
diff --git a/extensions/gdx-controllers/gdx-controllers-gwt/bin/com/badlogic/gdx/controllers/Controllers$1.class b/extensions/gdx-controllers/gdx-controllers-gwt/bin/com/badlogic/gdx/controllers/Controllers$1.class
new file mode 100755
index 0000000..30d9359
Binary files /dev/null and b/extensions/gdx-controllers/gdx-controllers-gwt/bin/com/badlogic/gdx/controllers/Controllers$1.class differ
diff --git a/extensions/gdx-controllers/gdx-controllers-gwt/bin/com/badlogic/gdx/controllers/controllers-gwt.gwt.xml b/extensions/gdx-controllers/gdx-controllers-gwt/bin/com/badlogic/gdx/controllers/controllers-gwt.gwt.xml
new file mode 100755
index 0000000..19df592
--- /dev/null
+++ b/extensions/gdx-controllers/gdx-controllers-gwt/bin/com/badlogic/gdx/controllers/controllers-gwt.gwt.xml
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE module PUBLIC "-//Google Inc.//DTD Google Web Toolkit trunk//EN" "http://google-web-toolkit.googlecode.com/svn/trunk/distro-source/core/src/gwt-module.dtd">
+<module>
+	<inherits name='com.badlogic.gdx.controllers'/>
+	<source path="gwt"/>
+	<super-source path="gwt/emu" />
+</module>
\ No newline at end of file
diff --git a/extensions/gdx-freetype/jni/Android.mk b/extensions/gdx-freetype/jni/Android.mk
index bbd05bb..6d87244 100644
--- a/extensions/gdx-freetype/jni/Android.mk
+++ b/extensions/gdx-freetype/jni/Android.mk
@@ -10,49 +10,49 @@ LOCAL_LDLIBS := -lm
 LOCAL_ARM_MODE  := arm
  
 LOCAL_SRC_FILES := com.badlogic.gdx.graphics.g2d.freetype.FreeType.cpp\
+	freetype-2.4.10/src/pshinter/pshinter.c\
+	freetype-2.4.10/src/otvalid/otvalid.c\
 	freetype-2.4.10/src/autofit/autofit.c\
-	freetype-2.4.10/src/base/ftbase.c\
-	freetype-2.4.10/src/base/ftbbox.c\
+	freetype-2.4.10/src/cff/cff.c\
+	freetype-2.4.10/src/pfr/pfr.c\
+	freetype-2.4.10/src/bzip2/ftbzip2.c\
+	freetype-2.4.10/src/cache/ftcache.c\
+	freetype-2.4.10/src/bdf/bdf.c\
+	freetype-2.4.10/src/raster/raster.c\
+	freetype-2.4.10/src/cid/type1cid.c\
+	freetype-2.4.10/src/truetype/truetype.c\
+	freetype-2.4.10/src/sfnt/sfnt.c\
+	freetype-2.4.10/src/winfonts/winfnt.c\
+	freetype-2.4.10/src/pcf/pcf.c\
+	freetype-2.4.10/src/gxvalid/gxvalid.c\
+	freetype-2.4.10/src/psaux/psaux.c\
+	freetype-2.4.10/src/base/ftpfr.c\
+	freetype-2.4.10/src/base/ftlcdfil.c\
+	freetype-2.4.10/src/base/ftwinfnt.c\
+	freetype-2.4.10/src/base/ftsynth.c\
+	freetype-2.4.10/src/base/ftglyph.c\
 	freetype-2.4.10/src/base/ftbdf.c\
+	freetype-2.4.10/src/base/ftgasp.c\
+	freetype-2.4.10/src/base/ftbase.c\
 	freetype-2.4.10/src/base/ftbitmap.c\
-	freetype-2.4.10/src/base/ftcid.c\
-	freetype-2.4.10/src/base/ftdebug.c\
 	freetype-2.4.10/src/base/ftfstype.c\
-	freetype-2.4.10/src/base/ftgasp.c\
-	freetype-2.4.10/src/base/ftglyph.c\
-	freetype-2.4.10/src/base/ftgxval.c\
-	freetype-2.4.10/src/base/ftinit.c\
-	freetype-2.4.10/src/base/ftlcdfil.c\
+	freetype-2.4.10/src/base/ftsystem.c\
 	freetype-2.4.10/src/base/ftmm.c\
-	freetype-2.4.10/src/base/ftotval.c\
 	freetype-2.4.10/src/base/ftpatent.c\
-	freetype-2.4.10/src/base/ftpfr.c\
 	freetype-2.4.10/src/base/ftstroke.c\
-	freetype-2.4.10/src/base/ftsynth.c\
-	freetype-2.4.10/src/base/ftsystem.c\
 	freetype-2.4.10/src/base/fttype1.c\
-	freetype-2.4.10/src/base/ftwinfnt.c\
+	freetype-2.4.10/src/base/ftotval.c\
 	freetype-2.4.10/src/base/ftxf86.c\
-	freetype-2.4.10/src/bdf/bdf.c\
-	freetype-2.4.10/src/bzip2/ftbzip2.c\
-	freetype-2.4.10/src/cache/ftcache.c\
-	freetype-2.4.10/src/cff/cff.c\
-	freetype-2.4.10/src/cid/type1cid.c\
-	freetype-2.4.10/src/gxvalid/gxvalid.c\
+	freetype-2.4.10/src/base/ftdebug.c\
+	freetype-2.4.10/src/base/ftbbox.c\
+	freetype-2.4.10/src/base/ftgxval.c\
+	freetype-2.4.10/src/base/ftinit.c\
+	freetype-2.4.10/src/base/ftcid.c\
 	freetype-2.4.10/src/gzip/ftgzip.c\
-	freetype-2.4.10/src/lzw/ftlzw.c\
-	freetype-2.4.10/src/otvalid/otvalid.c\
-	freetype-2.4.10/src/pcf/pcf.c\
-	freetype-2.4.10/src/pfr/pfr.c\
-	freetype-2.4.10/src/psaux/psaux.c\
-	freetype-2.4.10/src/pshinter/pshinter.c\
+	freetype-2.4.10/src/type42/type42.c\
 	freetype-2.4.10/src/psnames/psnames.c\
-	freetype-2.4.10/src/raster/raster.c\
-	freetype-2.4.10/src/sfnt/sfnt.c\
-	freetype-2.4.10/src/smooth/smooth.c\
-	freetype-2.4.10/src/truetype/truetype.c\
+	freetype-2.4.10/src/lzw/ftlzw.c\
 	freetype-2.4.10/src/type1/type1.c\
-	freetype-2.4.10/src/type42/type42.c\
-	freetype-2.4.10/src/winfonts/winfnt.c
+	freetype-2.4.10/src/smooth/smooth.c
  
 include $(BUILD_SHARED_LIBRARY)
diff --git a/extensions/gdx-freetype/jni/build-ios32.xml b/extensions/gdx-freetype/jni/build-ios32.xml
deleted file mode 100755
index 5587e2c..0000000
--- a/extensions/gdx-freetype/jni/build-ios32.xml
+++ /dev/null
@@ -1,233 +0,0 @@
-<project name="gdx-freetype-IOS-32" basedir="." default="postcompile">
-	<!-- include the environment -->
-	<property environment="env"/>	
-	<!-- output directory for temporary object files -->
-	<property name="buildDir" value="target/ios32" />
-	<!-- output directory for the shared library -->
-	<property name="libsDir" value="../libs/ios32" />
-	<!-- the name of the shared library -->
-	<property name="libName" value="libgdx-freetype.a"/>
-	<!-- the jni header jniPlatform to use -->
-	<property name="jniPlatform" value="mac"/>
-	<!-- the compilerPrefix for the C & C++ compilers -->
-	<property name="compilerPrefix" value=""/>	
-	<property name="iphoneos-platform" value="/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin"/>
-	<property name="iphoneos-sdk" value="/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS6.0.sdk/"/>
-	<property name="iphonesimulator-platform" value="/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/usr/bin"/>
-	<property name="iphonesimulator-sdk" value="/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator6.0.sdk/"/>
-	
-	<!-- define gcc compiler, options and files to compile -->
-	<property name="gcc" value="${compilerPrefix}gcc"/>	
-	<property name="gcc-opts" value="-c -Wall -O2 -std=c99 -DFT2_BUILD_LIBRARY"/>
-	<fileset id="gcc-files" dir="./">
-		<exclude name="target/"/>		
-				<include name="memcpy_wrap.c"/>
-		<include name="freetype-2.4.10/src/base/ftsystem.c"/>
-		<include name="freetype-2.4.10/src/base/ftinit.c"/>
-		<include name="freetype-2.4.10/src/base/ftdebug.c"/>
-		<include name="freetype-2.4.10/src/base/ftbase.c"/>
-		<include name="freetype-2.4.10/src/base/ftbbox.c"/>
-		<include name="freetype-2.4.10/src/base/ftglyph.c"/>
-		<include name="freetype-2.4.10/src/base/ftbdf.c"/>
-		<include name="freetype-2.4.10/src/base/ftbitmap.c"/>
-		<include name="freetype-2.4.10/src/base/ftcid.c"/>
-		<include name="freetype-2.4.10/src/base/ftfstype.c"/>
-		<include name="freetype-2.4.10/src/base/ftgasp.c"/>
-		<include name="freetype-2.4.10/src/base/ftgxval.c"/>
-		<include name="freetype-2.4.10/src/base/ftlcdfil.c"/>
-		<include name="freetype-2.4.10/src/base/ftmm.c"/>
-		<include name="freetype-2.4.10/src/base/ftotval.c"/>
-		<include name="freetype-2.4.10/src/base/ftpatent.c"/>
-		<include name="freetype-2.4.10/src/base/ftpfr.c"/>
-		<include name="freetype-2.4.10/src/base/ftstroke.c"/>
-		<include name="freetype-2.4.10/src/base/ftsynth.c"/>
-		<include name="freetype-2.4.10/src/base/fttype1.c"/>
-		<include name="freetype-2.4.10/src/base/ftwinfnt.c"/>
-		<include name="freetype-2.4.10/src/base/ftxf86.c"/>
-		<include name="freetype-2.4.10/src/bdf/bdf.c"/>
-		<include name="freetype-2.4.10/src/cff/cff.c"/>
-		<include name="freetype-2.4.10/src/cid/type1cid.c"/>
-		<include name="freetype-2.4.10/src/pcf/pcf.c"/>
-		<include name="freetype-2.4.10/src/pfr/pfr.c"/>
-		<include name="freetype-2.4.10/src/sfnt/sfnt.c"/>
-		<include name="freetype-2.4.10/src/truetype/truetype.c"/>
-		<include name="freetype-2.4.10/src/type1/type1.c"/>
-		<include name="freetype-2.4.10/src/type42/type42.c"/>
-		<include name="freetype-2.4.10/src/winfonts/winfnt.c"/>
-		<include name="freetype-2.4.10/src/raster/raster.c"/>
-		<include name="freetype-2.4.10/src/smooth/smooth.c"/>
-		<include name="freetype-2.4.10/src/autofit/autofit.c"/>
-		<include name="freetype-2.4.10/src/cache/ftcache.c"/>
-		<include name="freetype-2.4.10/src/gzip/ftgzip.c"/>
-		<include name="freetype-2.4.10/src/lzw/ftlzw.c"/>
-		<include name="freetype-2.4.10/src/bzip2/ftbzip2.c"/>
-		<include name="freetype-2.4.10/src/gxvalid/gxvalid.c"/>
-		<include name="freetype-2.4.10/src/otvalid/otvalid.c"/>
-		<include name="freetype-2.4.10/src/psaux/psaux.c"/>
-		<include name="freetype-2.4.10/src/pshinter/pshinter.c"/>
-		<include name="freetype-2.4.10/src/psnames/psnames.c"/>
-
-		
-	</fileset>
-	
-	<!-- define g++ compiler, options and files to compile -->
-	<property name="g++" value="${compilerPrefix}g++"/>
-	<property name="g++-opts" value="-c -Wall -O2 -std=c99 -DFT2_BUILD_LIBRARY"/>
-	<fileset id="g++-files" dir="./">
-		<exclude name="target/"/>
-				<include name="**/*.cpp"/>
-
-		
-	</fileset>
-
-	<!-- define linker and options -->
-	<property name="linker" value="${compilerPrefix}ar"/>
-	<property name="linker-opts" value="rcs"/>
-	<property name="libraries" value=""/>
-	
-	<!-- cleans the build directory, removes all object files and shared libs -->
-	<target name="clean">
-		<delete includeemptydirs="true" quiet="true">
-			<fileset dir="${buildDir}"/>
-			<fileset dir="${libsDir}" includes="**/*" excludes="**/.svn"/>
-		</delete>
-	</target>
-	
-	<target name="clean-objfiles">
-		<delete>
-			<fileset dir="${buildDir}">
-				<include name="**/*.o"/>
-			</fileset>
-		</delete>
-	</target>
-	
-	<target name="create-build-dir">
-		<!-- FIXME this is pretty nasty :/ -->
-		<copy todir="${buildDir}">
-			<fileset refid="g++-files"/>
-			<fileset refid="gcc-files"/>
-		</copy>
-		<delete>
-			<fileset dir="${buildDir}">
-				<include name="*"/>
-				<exclude name="*.o"/>
-			</fileset>
-		</delete>
-	</target>
-
-	<!-- compiles all C and C++ files to object files in the build directory, for 386 builds-->
-	<target name="compile-386" depends="clean,create-build-dir">
-		<mkdir dir="${buildDir}"/>
-		<apply failonerror="true" executable="${iphonesimulator-platform}/${g++}" dest="${buildDir}" verbose="true">
-			<arg line="-isysroot ${iphonesimulator-sdk} -arch i386 ${g++-opts}"/>
-			<arg value="-Ijni-headers"/>
-			<arg value="-Ijni-headers/${jniPlatform}"/>
-			<arg value="-I."/>
-						<arg value="-Ifreetype-2.4.10/include"/>
-
-			<srcfile/>
-			<arg value="-o"/>
-			<targetfile/>
-			<fileset refid="g++-files"/>
-			<compositemapper>
-				<mapper type="glob" from="*.cpp" to="*.o"/>
-				<mapper type="glob" from="*.mm" to="*.o"/>
-			</compositemapper>
-		</apply>
-		<apply failonerror="true" executable="${iphonesimulator-platform}/${gcc}" dest="${buildDir}" verbose="true">
-			<arg line="-isysroot ${iphonesimulator-sdk} -arch i386 ${gcc-opts}"/>
-			<arg value="-Ijni-headers"/>
-			<arg value="-Ijni-headers/${jniPlatform}"/>
-			<arg value="-I."/>
-						<arg value="-Ifreetype-2.4.10/include"/>
-
-			<srcfile/>
-			<arg value="-o"/>
-			<targetfile/>
-			<fileset refid="gcc-files"/>
-			<compositemapper>
-				<mapper type="glob" from="*.c" to="*.o"/>
-			</compositemapper>
-		</apply>
-	</target>	
-
-	<!-- links the shared library based on the previously compiled object files -->
-	<target name="link-386" depends="compile-386">
-		<fileset dir="${buildDir}" id="objFileSet">
-			<patternset>
-				<include name="**/*.o" />
-			</patternset>
-		</fileset>
-		<pathconvert pathsep=" " property="objFiles" refid="objFileSet" />
-		<mkdir dir="${libsDir}" />
-		<exec executable="${iphonesimulator-platform}/${linker}" failonerror="true" dir="${buildDir}">
-			<arg line="${linker-opts}" />
-			<arg path="${libsDir}/${libName}.386" />
-			<arg line="${objFiles}"/>
-			<arg line="${libraries}" />
-		</exec>
-	</target>
-	
-	<!-- compiles all C and C++ files to object files in the build directory, for 386 builds-->
-	<target name="compile-arm" depends="create-build-dir,clean-objfiles">
-		<mkdir dir="${buildDir}"/>
-		<apply failonerror="true" executable="${iphoneos-platform}/${g++}" dest="${buildDir}" verbose="true">
-			<arg line="-isysroot ${iphoneos-sdk} -arch armv7 ${g++-opts}"/>
-			<arg value="-Ijni-headers"/>
-			<arg value="-Ijni-headers/${jniPlatform}"/>
-			<arg value="-I."/>
-						<arg value="-Ifreetype-2.4.10/include"/>
-
-			<srcfile/>
-			<arg value="-o"/>
-			<targetfile/>
-			<fileset refid="g++-files"/>
-			<compositemapper>
-				<mapper type="glob" from="*.cpp" to="*.o"/>
-				<mapper type="glob" from="*.mm" to="*.o"/>
-			</compositemapper>
-		</apply>
-		<apply failonerror="true" executable="${iphoneos-platform}/${gcc}" dest="${buildDir}" verbose="true">
-			<arg line="-isysroot ${iphoneos-sdk} -arch armv7 ${gcc-opts}"/>
-			<arg value="-Ijni-headers"/>
-			<arg value="-Ijni-headers/${jniPlatform}"/>
-			<arg value="-I."/>
-						<arg value="-Ifreetype-2.4.10/include"/>
-
-			<srcfile/>
-			<arg value="-o"/>
-			<targetfile/>
-			<fileset refid="gcc-files"/>
-			<compositemapper>
-				<mapper type="glob" from="*.c" to="*.o"/>
-			</compositemapper>
-		</apply>
-	</target>	
-
-	<!-- links the shared library based on the previously compiled object files -->
-	<target name="link-arm" depends="compile-arm">
-		<fileset dir="${buildDir}" id="objFileSet">
-			<patternset>
-				<include name="**/*.o" />
-			</patternset>
-		</fileset>
-		<pathconvert pathsep=" " property="objFiles" refid="objFileSet" />
-		<mkdir dir="${libsDir}" />
-		<exec executable="${iphoneos-platform}/${linker}" failonerror="true" dir="${buildDir}">
-			<arg line="${linker-opts}" />
-			<arg path="${libsDir}/${libName}.armv7" />
-			<arg line="${objFiles}"/>
-			<arg line="${libraries}" />
-		</exec>
-	</target>
-
-	<target name="link-fat">
-		<exec executable="lipo" failonerror="true" dir="${libsDir}">
-			<arg line="-create -output ${libName} ${libName}.386 ${libName}.armv7"/>
-		</exec>
-	</target>
-
-	<target name="postcompile" depends="link-386,link-arm,link-fat">
-		
-	</target>
-</project>
diff --git a/extensions/gdx-freetype/jni/build-linux32.xml b/extensions/gdx-freetype/jni/build-linux32.xml
index 9d4c8e8..1dc27f3 100644
--- a/extensions/gdx-freetype/jni/build-linux32.xml
+++ b/extensions/gdx-freetype/jni/build-linux32.xml
@@ -79,7 +79,6 @@
 	<!-- define linker and options -->
 	<property name="linker" value="${compilerPrefix}g++"/>
 	<property name="linker-opts" value="-shared -m32"/>
-	<property name="libraries" value=""/>
 	
 	<!-- cleans the build directory, removes all object files and shared libs -->
 	<target name="clean">
@@ -138,10 +137,9 @@
 			<arg value="-o"/>
 			<targetfile/>
 			<fileset refid="g++-files"/>
-			<compositemapper>
+			<chainedmapper>
 				<mapper type="glob" from="*.cpp" to="*.o"/>
-				<mapper type="glob" from="*.mm" to="*.o"/>
-			</compositemapper>
+			</chainedmapper>
 		</apply>
 		<apply failonerror="true" executable="${gcc}" dest="${buildDir}" verbose="true">
 			<arg line="${gcc-opts}"/>
@@ -154,28 +152,25 @@
 			<arg value="-o"/>
 			<targetfile/>
 			<fileset refid="gcc-files"/>
-			<compositemapper>
+			<chainedmapper>
 				<mapper type="glob" from="*.c" to="*.o"/>
-			</compositemapper>
+			</chainedmapper>
 		</apply>
 	</target>	
 
 	<!-- links the shared library based on the previously compiled object files -->	
 	<target name="link" depends="compile" if="has-compiler">
-		<fileset dir="${buildDir}" id="objFileSet">
-			<patternset>
-				<include name="**/*.o" />
-			</patternset>
-		</fileset>
-		<pathconvert pathsep=" " property="objFiles" refid="objFileSet" />
-		<mkdir dir="${libsDir}" />
-		<exec executable="${linker}" failonerror="true" dir="${buildDir}">
-			<arg line="${linker-opts}" />
-			<arg value="-o" />
-			<arg path="${libsDir}/${libName}" />
-			<arg line="${objFiles}"/>
-			<arg line="${libraries}" />
-		</exec>
+		<mkdir dir="${libsDir}"/>
+		<apply failonerror="true" executable="${linker}" parallel="true" dir="${buildDir}">
+			<arg line="${linker-opts}"/>
+			<arg value="-o"/>
+			<arg path="${libsDir}/${libName}"/>		
+			<fileset dir="${buildDir}">
+				<patternset>
+					<include name="**/*.o"/>
+				</patternset>
+			</fileset>
+		</apply>
 	</target>	
 	
 	<target name="postcompile" depends="link">
diff --git a/extensions/gdx-freetype/jni/build-linux64.xml b/extensions/gdx-freetype/jni/build-linux64.xml
index cc39238..3a7783d 100644
--- a/extensions/gdx-freetype/jni/build-linux64.xml
+++ b/extensions/gdx-freetype/jni/build-linux64.xml
@@ -79,7 +79,6 @@
 	<!-- define linker and options -->
 	<property name="linker" value="${compilerPrefix}g++"/>
 	<property name="linker-opts" value="-shared -m64 -Wl,-wrap,memcpy"/>
-	<property name="libraries" value=""/>
 	
 	<!-- cleans the build directory, removes all object files and shared libs -->
 	<target name="clean">
@@ -138,10 +137,9 @@
 			<arg value="-o"/>
 			<targetfile/>
 			<fileset refid="g++-files"/>
-			<compositemapper>
+			<chainedmapper>
 				<mapper type="glob" from="*.cpp" to="*.o"/>
-				<mapper type="glob" from="*.mm" to="*.o"/>
-			</compositemapper>
+			</chainedmapper>
 		</apply>
 		<apply failonerror="true" executable="${gcc}" dest="${buildDir}" verbose="true">
 			<arg line="${gcc-opts}"/>
@@ -154,28 +152,25 @@
 			<arg value="-o"/>
 			<targetfile/>
 			<fileset refid="gcc-files"/>
-			<compositemapper>
+			<chainedmapper>
 				<mapper type="glob" from="*.c" to="*.o"/>
-			</compositemapper>
+			</chainedmapper>
 		</apply>
 	</target>	
 
 	<!-- links the shared library based on the previously compiled object files -->	
 	<target name="link" depends="compile" if="has-compiler">
-		<fileset dir="${buildDir}" id="objFileSet">
-			<patternset>
-				<include name="**/*.o" />
-			</patternset>
-		</fileset>
-		<pathconvert pathsep=" " property="objFiles" refid="objFileSet" />
-		<mkdir dir="${libsDir}" />
-		<exec executable="${linker}" failonerror="true" dir="${buildDir}">
-			<arg line="${linker-opts}" />
-			<arg value="-o" />
-			<arg path="${libsDir}/${libName}" />
-			<arg line="${objFiles}"/>
-			<arg line="${libraries}" />
-		</exec>
+		<mkdir dir="${libsDir}"/>
+		<apply failonerror="true" executable="${linker}" parallel="true" dir="${buildDir}">
+			<arg line="${linker-opts}"/>
+			<arg value="-o"/>
+			<arg path="${libsDir}/${libName}"/>		
+			<fileset dir="${buildDir}">
+				<patternset>
+					<include name="**/*.o"/>
+				</patternset>
+			</fileset>
+		</apply>
 	</target>	
 	
 	<target name="postcompile" depends="link">
diff --git a/extensions/gdx-freetype/jni/build-macosx32.xml b/extensions/gdx-freetype/jni/build-macosx32.xml
index df92031..c171d4e 100644
--- a/extensions/gdx-freetype/jni/build-macosx32.xml
+++ b/extensions/gdx-freetype/jni/build-macosx32.xml
@@ -79,7 +79,6 @@
 	<!-- define linker and options -->
 	<property name="linker" value="${compilerPrefix}g++"/>
 	<property name="linker-opts" value="-shared -arch i386 -arch x86_64 -mmacosx-version-min=10.5 -framework CoreServices -framework Carbon"/>
-	<property name="libraries" value=""/>
 	
 	<!-- cleans the build directory, removes all object files and shared libs -->
 	<target name="clean">
@@ -138,10 +137,9 @@
 			<arg value="-o"/>
 			<targetfile/>
 			<fileset refid="g++-files"/>
-			<compositemapper>
+			<chainedmapper>
 				<mapper type="glob" from="*.cpp" to="*.o"/>
-				<mapper type="glob" from="*.mm" to="*.o"/>
-			</compositemapper>
+			</chainedmapper>
 		</apply>
 		<apply failonerror="true" executable="${gcc}" dest="${buildDir}" verbose="true">
 			<arg line="${gcc-opts}"/>
@@ -154,28 +152,25 @@
 			<arg value="-o"/>
 			<targetfile/>
 			<fileset refid="gcc-files"/>
-			<compositemapper>
+			<chainedmapper>
 				<mapper type="glob" from="*.c" to="*.o"/>
-			</compositemapper>
+			</chainedmapper>
 		</apply>
 	</target>	
 
 	<!-- links the shared library based on the previously compiled object files -->	
 	<target name="link" depends="compile" if="has-compiler">
-		<fileset dir="${buildDir}" id="objFileSet">
-			<patternset>
-				<include name="**/*.o" />
-			</patternset>
-		</fileset>
-		<pathconvert pathsep=" " property="objFiles" refid="objFileSet" />
-		<mkdir dir="${libsDir}" />
-		<exec executable="${linker}" failonerror="true" dir="${buildDir}">
-			<arg line="${linker-opts}" />
-			<arg value="-o" />
-			<arg path="${libsDir}/${libName}" />
-			<arg line="${objFiles}"/>
-			<arg line="${libraries}" />
-		</exec>
+		<mkdir dir="${libsDir}"/>
+		<apply failonerror="true" executable="${linker}" parallel="true" dir="${buildDir}">
+			<arg line="${linker-opts}"/>
+			<arg value="-o"/>
+			<arg path="${libsDir}/${libName}"/>		
+			<fileset dir="${buildDir}">
+				<patternset>
+					<include name="**/*.o"/>
+				</patternset>
+			</fileset>
+		</apply>
 	</target>	
 	
 	<target name="postcompile" depends="link">
diff --git a/extensions/gdx-freetype/jni/build-windows32.xml b/extensions/gdx-freetype/jni/build-windows32.xml
index 5f1145a..e5f2a24 100644
--- a/extensions/gdx-freetype/jni/build-windows32.xml
+++ b/extensions/gdx-freetype/jni/build-windows32.xml
@@ -79,7 +79,6 @@
 	<!-- define linker and options -->
 	<property name="linker" value="${compilerPrefix}g++"/>
 	<property name="linker-opts" value="-Wl,--kill-at -shared -m32 -static-libgcc -static-libstdc++"/>
-	<property name="libraries" value=""/>
 	
 	<!-- cleans the build directory, removes all object files and shared libs -->
 	<target name="clean">
@@ -138,10 +137,9 @@
 			<arg value="-o"/>
 			<targetfile/>
 			<fileset refid="g++-files"/>
-			<compositemapper>
+			<chainedmapper>
 				<mapper type="glob" from="*.cpp" to="*.o"/>
-				<mapper type="glob" from="*.mm" to="*.o"/>
-			</compositemapper>
+			</chainedmapper>
 		</apply>
 		<apply failonerror="true" executable="${gcc}" dest="${buildDir}" verbose="true">
 			<arg line="${gcc-opts}"/>
@@ -154,28 +152,25 @@
 			<arg value="-o"/>
 			<targetfile/>
 			<fileset refid="gcc-files"/>
-			<compositemapper>
+			<chainedmapper>
 				<mapper type="glob" from="*.c" to="*.o"/>
-			</compositemapper>
+			</chainedmapper>
 		</apply>
 	</target>	
 
 	<!-- links the shared library based on the previously compiled object files -->	
 	<target name="link" depends="compile" if="has-compiler">
-		<fileset dir="${buildDir}" id="objFileSet">
-			<patternset>
-				<include name="**/*.o" />
-			</patternset>
-		</fileset>
-		<pathconvert pathsep=" " property="objFiles" refid="objFileSet" />
-		<mkdir dir="${libsDir}" />
-		<exec executable="${linker}" failonerror="true" dir="${buildDir}">
-			<arg line="${linker-opts}" />
-			<arg value="-o" />
-			<arg path="${libsDir}/${libName}" />
-			<arg line="${objFiles}"/>
-			<arg line="${libraries}" />
-		</exec>
+		<mkdir dir="${libsDir}"/>
+		<apply failonerror="true" executable="${linker}" parallel="true" dir="${buildDir}">
+			<arg line="${linker-opts}"/>
+			<arg value="-o"/>
+			<arg path="${libsDir}/${libName}"/>		
+			<fileset dir="${buildDir}">
+				<patternset>
+					<include name="**/*.o"/>
+				</patternset>
+			</fileset>
+		</apply>
 	</target>	
 	
 	<target name="postcompile" depends="link">
diff --git a/extensions/gdx-freetype/jni/build-windows32home.xml b/extensions/gdx-freetype/jni/build-windows32home.xml
index 9661993..bb1a896 100644
--- a/extensions/gdx-freetype/jni/build-windows32home.xml
+++ b/extensions/gdx-freetype/jni/build-windows32home.xml
@@ -79,7 +79,6 @@
 	<!-- define linker and options -->
 	<property name="linker" value="${compilerPrefix}g++"/>
 	<property name="linker-opts" value="-Wl,--kill-at -shared -m32 -static-libgcc -static-libstdc++"/>
-	<property name="libraries" value=""/>
 	
 	<!-- cleans the build directory, removes all object files and shared libs -->
 	<target name="clean">
@@ -138,10 +137,9 @@
 			<arg value="-o"/>
 			<targetfile/>
 			<fileset refid="g++-files"/>
-			<compositemapper>
+			<chainedmapper>
 				<mapper type="glob" from="*.cpp" to="*.o"/>
-				<mapper type="glob" from="*.mm" to="*.o"/>
-			</compositemapper>
+			</chainedmapper>
 		</apply>
 		<apply failonerror="true" executable="${gcc}" dest="${buildDir}" verbose="true">
 			<arg line="${gcc-opts}"/>
@@ -154,28 +152,25 @@
 			<arg value="-o"/>
 			<targetfile/>
 			<fileset refid="gcc-files"/>
-			<compositemapper>
+			<chainedmapper>
 				<mapper type="glob" from="*.c" to="*.o"/>
-			</compositemapper>
+			</chainedmapper>
 		</apply>
 	</target>	
 
 	<!-- links the shared library based on the previously compiled object files -->	
 	<target name="link" depends="compile" if="has-compiler">
-		<fileset dir="${buildDir}" id="objFileSet">
-			<patternset>
-				<include name="**/*.o" />
-			</patternset>
-		</fileset>
-		<pathconvert pathsep=" " property="objFiles" refid="objFileSet" />
-		<mkdir dir="${libsDir}" />
-		<exec executable="${linker}" failonerror="true" dir="${buildDir}">
-			<arg line="${linker-opts}" />
-			<arg value="-o" />
-			<arg path="${libsDir}/${libName}" />
-			<arg line="${objFiles}"/>
-			<arg line="${libraries}" />
-		</exec>
+		<mkdir dir="${libsDir}"/>
+		<apply failonerror="true" executable="${linker}" parallel="true" dir="${buildDir}">
+			<arg line="${linker-opts}"/>
+			<arg value="-o"/>
+			<arg path="${libsDir}/${libName}"/>		
+			<fileset dir="${buildDir}">
+				<patternset>
+					<include name="**/*.o"/>
+				</patternset>
+			</fileset>
+		</apply>
 	</target>	
 	
 	<target name="postcompile" depends="link">
diff --git a/extensions/gdx-freetype/jni/build-windows64.xml b/extensions/gdx-freetype/jni/build-windows64.xml
index 7c55ba1..1218db4 100644
--- a/extensions/gdx-freetype/jni/build-windows64.xml
+++ b/extensions/gdx-freetype/jni/build-windows64.xml
@@ -79,7 +79,6 @@
 	<!-- define linker and options -->
 	<property name="linker" value="${compilerPrefix}g++"/>
 	<property name="linker-opts" value="-Wl,--kill-at -shared -static-libgcc -static-libstdc++ -m64"/>
-	<property name="libraries" value=""/>
 	
 	<!-- cleans the build directory, removes all object files and shared libs -->
 	<target name="clean">
@@ -138,10 +137,9 @@
 			<arg value="-o"/>
 			<targetfile/>
 			<fileset refid="g++-files"/>
-			<compositemapper>
+			<chainedmapper>
 				<mapper type="glob" from="*.cpp" to="*.o"/>
-				<mapper type="glob" from="*.mm" to="*.o"/>
-			</compositemapper>
+			</chainedmapper>
 		</apply>
 		<apply failonerror="true" executable="${gcc}" dest="${buildDir}" verbose="true">
 			<arg line="${gcc-opts}"/>
@@ -154,28 +152,25 @@
 			<arg value="-o"/>
 			<targetfile/>
 			<fileset refid="gcc-files"/>
-			<compositemapper>
+			<chainedmapper>
 				<mapper type="glob" from="*.c" to="*.o"/>
-			</compositemapper>
+			</chainedmapper>
 		</apply>
 	</target>	
 
 	<!-- links the shared library based on the previously compiled object files -->	
 	<target name="link" depends="compile" if="has-compiler">
-		<fileset dir="${buildDir}" id="objFileSet">
-			<patternset>
-				<include name="**/*.o" />
-			</patternset>
-		</fileset>
-		<pathconvert pathsep=" " property="objFiles" refid="objFileSet" />
-		<mkdir dir="${libsDir}" />
-		<exec executable="${linker}" failonerror="true" dir="${buildDir}">
-			<arg line="${linker-opts}" />
-			<arg value="-o" />
-			<arg path="${libsDir}/${libName}" />
-			<arg line="${objFiles}"/>
-			<arg line="${libraries}" />
-		</exec>
+		<mkdir dir="${libsDir}"/>
+		<apply failonerror="true" executable="${linker}" parallel="true" dir="${buildDir}">
+			<arg line="${linker-opts}"/>
+			<arg value="-o"/>
+			<arg path="${libsDir}/${libName}"/>		
+			<fileset dir="${buildDir}">
+				<patternset>
+					<include name="**/*.o"/>
+				</patternset>
+			</fileset>
+		</apply>
 	</target>	
 	
 	<target name="postcompile" depends="link">
diff --git a/extensions/gdx-freetype/jni/build.xml b/extensions/gdx-freetype/jni/build.xml
index ec78c63..9fc3a35 100644
--- a/extensions/gdx-freetype/jni/build.xml
+++ b/extensions/gdx-freetype/jni/build.xml
@@ -25,7 +25,6 @@
 			<fileset dir="../libs/linux64" includes="libgdx-freetype64.so"/>
 			<fileset dir="../libs/macosx32" includes="libgdx-freetype.dylib"/>
 			<fileset dir="../libs/android32" includes="libgdx-freetype.so"/>
-			<fileset dir="../libs/ios32" includes="libgdx-freetype.a"/>
 
 		</jar>
 	</target>
diff --git a/extensions/gdx-freetype/libs/gdx-freetype-natives.jar b/extensions/gdx-freetype/libs/gdx-freetype-natives.jar
new file mode 100644
index 0000000..6fcbab8
Binary files /dev/null and b/extensions/gdx-freetype/libs/gdx-freetype-natives.jar differ
diff --git a/extensions/gdx-freetype/src/com/badlogic/gdx/graphics/g2d/freetype/FreeTypeFontGenerator.java b/extensions/gdx-freetype/src/com/badlogic/gdx/graphics/g2d/freetype/FreeTypeFontGenerator.java
index c68df47..d37328a 100644
--- a/extensions/gdx-freetype/src/com/badlogic/gdx/graphics/g2d/freetype/FreeTypeFontGenerator.java
+++ b/extensions/gdx-freetype/src/com/badlogic/gdx/graphics/g2d/freetype/FreeTypeFontGenerator.java
@@ -113,15 +113,9 @@ public class FreeTypeFontGenerator implements Disposable {
 		SizeMetrics fontMetrics = face.getSize().getMetrics();
 		int baseline = FreeType.toInt(fontMetrics.getAscender());
 
-		// Check if character exists in this font.
-		// 0 means 'undefined character code'
-		if (FreeType.getCharIndex(face, c) == 0) {
-			return null;
-		}
-
-		// Try to load character
+		// Check if character exists in this font
 		if (!FreeType.loadChar(face, c, FreeType.FT_LOAD_DEFAULT)) {
-			throw new GdxRuntimeException("Unable to load character!");
+			return null;
 		}
 
 		GlyphSlot slot = face.getGlyph();
diff --git a/extensions/gdx-freetype/src/com/badlogic/gdx/graphics/g2d/freetype/FreetypeBuild.java b/extensions/gdx-freetype/src/com/badlogic/gdx/graphics/g2d/freetype/FreetypeBuild.java
index 947ce8b..344862f 100644
--- a/extensions/gdx-freetype/src/com/badlogic/gdx/graphics/g2d/freetype/FreetypeBuild.java
+++ b/extensions/gdx-freetype/src/com/badlogic/gdx/graphics/g2d/freetype/FreetypeBuild.java
@@ -113,15 +113,9 @@ public class FreetypeBuild {
 		android.cIncludes = sources;
 		android.cFlags += " -std=c99 -DFT2_BUILD_LIBRARY";
 		android.cppFlags += " -std=c99 -DFT2_BUILD_LIBRARY";
-		
-		BuildTarget ios = BuildTarget.newDefaultTarget(TargetOs.IOS, false);
-		ios.headerDirs = headers;
-		ios.cIncludes = sources;
-		ios.cFlags += " -std=c99 -DFT2_BUILD_LIBRARY";
-		ios.cppFlags += " -std=c99 -DFT2_BUILD_LIBRARY";
 
 		new NativeCodeGenerator().generate();
-		new AntScriptGenerator().generate(new BuildConfig("gdx-freetype"), win32home, win32, win64, lin32, lin64, mac, android, ios);
+		new AntScriptGenerator().generate(new BuildConfig("gdx-freetype"), win32home, win32, win64, lin32, lin64, mac, android);
 // BuildExecutor.executeAnt("jni/build-windows32home.xml", "-v clean");
 // BuildExecutor.executeAnt("jni/build-windows32home.xml", "-v");
 //		BuildExecutor.executeAnt("jni/build.xml", "pack-natives -v");
diff --git a/extensions/gdx-gleed/.classpath b/extensions/gdx-gleed/.classpath
new file mode 100644
index 0000000..66717fd
--- /dev/null
+++ b/extensions/gdx-gleed/.classpath
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<classpath>
+	<classpathentry kind="src" path="src"/>
+	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6"/>
+	<classpathentry combineaccessrules="false" kind="src" path="/gdx"/>
+	<classpathentry kind="output" path="bin"/>
+</classpath>
diff --git a/extensions/gdx-gleed/.gitignore b/extensions/gdx-gleed/.gitignore
new file mode 100644
index 0000000..e467cec
--- /dev/null
+++ b/extensions/gdx-gleed/.gitignore
@@ -0,0 +1,2 @@
+# Don't .class files
+*.class
\ No newline at end of file
diff --git a/extensions/gdx-gleed/.project b/extensions/gdx-gleed/.project
new file mode 100644
index 0000000..6c24325
--- /dev/null
+++ b/extensions/gdx-gleed/.project
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<projectDescription>
+	<name>gdx-gleed</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+	</natures>
+</projectDescription>
diff --git a/extensions/gdx-gleed/.settings/org.eclipse.jdt.core.prefs b/extensions/gdx-gleed/.settings/org.eclipse.jdt.core.prefs
new file mode 100644
index 0000000..8000cd6
--- /dev/null
+++ b/extensions/gdx-gleed/.settings/org.eclipse.jdt.core.prefs
@@ -0,0 +1,11 @@
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.6
+org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
+org.eclipse.jdt.core.compiler.compliance=1.6
+org.eclipse.jdt.core.compiler.debug.lineNumber=generate
+org.eclipse.jdt.core.compiler.debug.localVariable=generate
+org.eclipse.jdt.core.compiler.debug.sourceFile=generate
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.source=1.6
diff --git a/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/CircleElement.java b/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/CircleElement.java
new file mode 100644
index 0000000..5507f09
--- /dev/null
+++ b/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/CircleElement.java
@@ -0,0 +1,40 @@
+/*******************************************************************************
+ * Copyright 2012 David Saltares
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/ 
+
+package com.badlogic.gdx.gleed;
+
+import com.badlogic.gdx.math.Circle;
+
+/**
+ * @author David Saltares
+ * @date 02/11/2012
+ * 
+ * @brief Circle GLEED2D shape implementation 
+ */
+public class CircleElement extends LevelObject {
+	Circle circle;
+	
+	CircleElement() {
+		super();
+	}
+	
+	/**
+	 * @return circle shape
+	 */
+	public Circle getCircle() {
+		return circle;
+	}
+}
diff --git a/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/ILevelRenderer.java b/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/ILevelRenderer.java
new file mode 100644
index 0000000..31c8f78
--- /dev/null
+++ b/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/ILevelRenderer.java
@@ -0,0 +1,42 @@
+/*******************************************************************************
+ * Copyright 2012 David Saltares
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/ 
+
+package com.badlogic.gdx.gleed;
+
+import com.badlogic.gdx.graphics.OrthographicCamera;
+
+/**
+ * @author David Saltares
+ * @date 03/11/2012
+ *
+ * @brief GLEED2D level render interface
+ */
+public interface ILevelRenderer {
+	/**
+	 * Renders every TextureElement in the level 
+	 * 
+	 * @param camera camera to render the level
+	 */
+	public void render(OrthographicCamera camera);
+	
+	/**
+	 * Renders every TextureElement in the selected layers
+	 *  
+	 * @param camera camera to render the level
+	 * @param layers selected layers
+	 */
+	public void render(OrthographicCamera camera, int[] layers);
+}
diff --git a/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/Layer.java b/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/Layer.java
new file mode 100644
index 0000000..135543d
--- /dev/null
+++ b/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/Layer.java
@@ -0,0 +1,79 @@
+/*******************************************************************************
+ * Copyright 2012 David Saltares
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/ 
+
+package com.badlogic.gdx.gleed;
+
+import com.badlogic.gdx.utils.Array;
+
+/**
+ * @author David Saltares
+ * @date 02/11/2012
+ *
+ * @brief Represents a layer of a GLEED2D level
+ */
+public class Layer extends LevelObject {
+	
+	Array<LevelObject> objects = new Array<LevelObject>();
+	Array<TextureElement> textures = new Array<TextureElement>();
+	
+	Layer() {}
+	
+	/**
+	 * @return texture objects in the layer
+	 */
+	public Array<TextureElement> getTextures() {
+		return textures;
+	}
+	
+	/**
+	 * @param name name of the desired texture element
+	 * @return texture element if found, null if it doesn't exist
+	 */
+	public TextureElement getTexture(String name) {
+		for (int i = 0; i < textures.size; ++i) {
+			TextureElement texture = textures.get(i);
+			
+			if (texture.name.equals(name)) {
+				return texture;
+			}
+		}
+		
+		return null;
+	}
+	
+	/**
+	 * @return all the level objects in the layer (shapes)
+	 */
+	public Array<LevelObject> getObjects() {
+		return objects;
+	}
+	
+	/**
+	 * @param name name of the desired level object
+	 * @return level object if found, null if it doesn't exist
+	 */
+	public LevelObject getObject(String name) {
+		for (int i = 0; i < objects.size; ++i) {
+			LevelObject levelObject = objects.get(i);
+			
+			if (levelObject.name.equals(name)) {
+				return levelObject;
+			}
+		}
+		
+		return null;
+	}
+}
diff --git a/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/Level.java b/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/Level.java
new file mode 100644
index 0000000..bdf1e20
--- /dev/null
+++ b/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/Level.java
@@ -0,0 +1,84 @@
+/*******************************************************************************
+ * Copyright 2012 David Saltares
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/ 
+
+package com.badlogic.gdx.gleed;
+
+import com.badlogic.gdx.utils.Array;
+
+/**
+ * @author David Saltares
+ * @date 02/11/2012
+ * 
+ * @brief GLEED2D level information
+ */
+public class Level {
+	Properties properties = new Properties();
+	Array<Layer> layers = new Array<Layer>();
+	String file = "";
+	
+	Level(String file) {
+		this.file = file;
+	}
+	
+	/**
+	 * @return level custom properties
+	 */
+	public Properties getProperties() {
+		return properties;
+	}
+	
+	/**
+	 * @return number of layers in the level
+	 */
+	public int getNumLayers() {
+		return layers.size;
+	}
+	
+	/**
+	 * @return all layers
+	 */
+	public Array<Layer> getLayers() {
+		return layers;
+	}
+	
+	/**
+	 * @param index index of the desired layer
+	 * @return correspondent layer, null if index is invalid
+	 */
+	public Layer getLayer(int index) {
+		if (index < 0 || index >= layers.size) {
+			return null;
+		}
+		
+		return layers.get(index);
+	}
+	
+	/**
+	 * @param name name of the desired layer
+	 * @return correspondent layer, null if the layer doesn't exist
+	 */
+	public Layer getLayer(String name) {
+		for (int i = 0; i < layers.size; ++i) {
+			Layer layer = layers.get(i);
+			
+			if (layer.getProperties().getString("Name", "").equals(name)) {
+				return layer;
+			}
+		}
+		
+		return null;
+	}
+}
diff --git a/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/LevelLoader.java b/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/LevelLoader.java
new file mode 100644
index 0000000..b8a2bdb
--- /dev/null
+++ b/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/LevelLoader.java
@@ -0,0 +1,338 @@
+/*******************************************************************************
+ * Copyright 2012 David Saltares
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/ 
+
+package com.badlogic.gdx.gleed;
+
+import com.badlogic.gdx.Gdx;
+import com.badlogic.gdx.assets.AssetDescriptor;
+import com.badlogic.gdx.assets.AssetLoaderParameters;
+import com.badlogic.gdx.assets.AssetManager;
+import com.badlogic.gdx.assets.loaders.AsynchronousAssetLoader;
+import com.badlogic.gdx.assets.loaders.FileHandleResolver;
+import com.badlogic.gdx.graphics.Texture;
+import com.badlogic.gdx.graphics.g2d.TextureAtlas;
+import com.badlogic.gdx.graphics.g2d.TextureRegion;
+import com.badlogic.gdx.math.Circle;
+import com.badlogic.gdx.math.Polygon;
+import com.badlogic.gdx.math.Vector2;
+import com.badlogic.gdx.utils.Array;
+import com.badlogic.gdx.utils.Disposable;
+import com.badlogic.gdx.utils.Logger;
+import com.badlogic.gdx.utils.XmlReader;
+import com.badlogic.gdx.utils.XmlReader.Element;
+
+/**
+ * @author David Saltares
+ * @date 03/11/2012
+ * 
+ * @brief GLEED2D level loader to use along the AssetManager system
+ */
+public class LevelLoader extends AsynchronousAssetLoader<Level, LevelLoader.GLEEDParameter > implements Disposable {
+
+	static public class GLEEDParameter extends AssetLoaderParameters<Level> {
+	}
+
+	static private Logger s_logger = new Logger("LevelLoader");
+	
+	private Level m_level = null;
+	private String m_pathRoot = "data";
+	private TextureAtlas m_atlas = null;
+	private String m_atlasFile = null;
+	private AssetManager m_assetManager;
+	
+	/**
+	 * @param loggingLevel amount of debug information the loader will output
+	 */
+	public static void setLoggingLevel(int loggingLevel) {
+		s_logger.setLevel(loggingLevel);
+	}
+	
+	/**
+	 * @param resolver file handle resolver to find the proper file
+	 * 
+	 */
+	public LevelLoader(FileHandleResolver resolver) {
+		super(resolver);
+	}
+
+	/**
+	 * Loads a level in an Asynchronous manner
+	 * 
+	 * @param manager asset manager to use
+	 * @param fileName level file to load
+	 * @param parameters custom params (not used)
+	 */
+	@Override
+	public void loadAsync(AssetManager manager, String fileName, GLEEDParameter parameter) {
+		m_assetManager = manager;
+		
+		s_logger.info("loading file " + fileName);
+		
+		try {
+			// Parse xml document
+			XmlReader reader = new XmlReader();
+			Element root = reader.parse(Gdx.files.internal(fileName));
+			
+			// Create level and load properties
+			s_logger.info("loading level properties");
+			if (m_level == null) {
+				m_level = new Level(fileName);
+				m_level.properties.load(root);
+			}
+			
+			// Load atlas if necessary
+			if (!m_atlasFile.isEmpty()) {
+				s_logger.info("fetching texture atlas " + m_atlasFile);
+				m_atlas = manager.get(m_atlasFile, TextureAtlas.class);
+			}
+			
+			// Load layers
+			s_logger.info("loading layers");
+			Array<Element> layerElements = root.getChildByName("Layers").getChildrenByName("Layer");
+			
+			for (int i = 0; i < layerElements.size; ++i) {
+				Element layerElement = layerElements.get(i);
+				loadLayer(layerElement);
+			}
+			
+		} catch (Exception e) {
+			s_logger.error("error loading file " + fileName + " " + e.getMessage());
+		}
+	}
+
+	/**
+	 * Loads a level in an Synchronous manner
+	 * 
+	 * @param manager asset manager to use
+	 * @param fileName level file to load
+	 * @param parameters custom params (not used)
+	 */
+	@Override
+	public Level loadSync(AssetManager manager, String fileName, GLEEDParameter parameter) {
+		return m_level;
+	}
+
+	/**
+	 * Gets TextureAtlas or Texture assets required by the level
+	 * 
+	 * @param fileName to get dependencies from
+	 * @param parameters custom params (not used)
+	 */
+	@SuppressWarnings({ "unchecked", "rawtypes" })
+	@Override
+	public Array<AssetDescriptor> getDependencies(String fileName, GLEEDParameter parameter) {
+
+		s_logger.info("getting asset dependencies for " + fileName);
+		Array<AssetDescriptor> dependencies = new Array<AssetDescriptor>();
+		
+		try {
+			// Parse xml document
+			XmlReader reader = new XmlReader();
+			Element root = reader.parse(Gdx.files.internal(fileName));
+
+			if (m_level == null) {
+				m_level = new Level(fileName);
+				m_level.properties.load(root);
+			}
+			
+			// Check texture atlass
+			m_atlasFile = m_level.properties.getString("atlas", "");
+			m_pathRoot = m_level.properties.getString("assetRoot", "data");
+			
+			if (!m_atlasFile.isEmpty()) {
+				s_logger.info("texture atlas dependency " + m_atlasFile);
+				dependencies.add(new AssetDescriptor(m_atlasFile, TextureAtlas.class));
+			}
+			else {
+				s_logger.info("textures asset folder " + m_pathRoot);
+				Array<Element> elements = root.getChildrenByNameRecursively("Item");
+				
+				for (int i = 0; i < elements.size; ++i) {
+					Element element = elements.get(i);
+					
+					if (element.getAttribute("xsi:type", "").equals("TextureItem")) {
+						String[] pathParts = element.getChildByName("texture_filename").getText().split("\\\\");
+						s_logger.info("texture dependency " + m_pathRoot + "/" + pathParts[pathParts.length - 1]);
+						dependencies.add(new AssetDescriptor(m_pathRoot + "/" + pathParts[pathParts.length - 1], Texture.class));
+					}
+				}
+			}
+			
+		} catch (Exception e) {
+			s_logger.error("error loading asset dependencies " + fileName + " " + e.getMessage());
+		}
+		
+		return dependencies;
+	}
+	
+	private void loadLayer(Element element) {
+		Layer layer = new Layer();
+		
+		layer.properties.load(element);
+		
+		layer.name = element.getAttribute("Name", "");
+		layer.visible = Boolean.parseBoolean(element.getAttribute("Visible", "true"));
+		
+		s_logger.info("loading layer " + layer.name);
+		Array<Element> items = element.getChildByName("Items").getChildrenByName("Item");
+		
+		for (int i = 0; i < items.size; ++i) {
+			Element item = items.get(i);
+			String type = item.getAttribute("xsi:type");
+			
+			if (type.equals("TextureItem")) {
+				TextureElement texture = new TextureElement();
+				loadElement(texture, item);
+				loadTextureElement(texture, item);
+				layer.textures.add(texture);
+			}
+			else if (type.equals("PathItem")) {
+				PathElement path = new PathElement();
+				loadElement(path, item);
+				loadPathElement(path, item);
+				layer.objects.add(path);
+			}
+			else if (type.equals("RectangleItem")) {
+				RectangleElement rectangle = new RectangleElement();
+				loadElement(rectangle, item);
+				loadRectangleElement(rectangle, item);
+				layer.objects.add(rectangle);
+				
+			}
+			else if (type.equals("CircleItem")) {
+				CircleElement circle = new CircleElement();
+				loadElement(circle, item);
+				loadCircleElement(circle, item);
+				layer.objects.add(circle);
+			}
+		}
+		
+		m_level.layers.add(layer);
+	}
+	
+	private void loadElement(LevelObject levelObject, Element element) {
+		levelObject.name = element.getAttribute("Name", "");
+		levelObject.visible = Boolean.parseBoolean(element.getAttribute("Visible", "true"));
+		levelObject.properties.load(element);
+		
+		s_logger.info("loading element " + levelObject.name);
+	}
+	
+	private void loadTextureElement(TextureElement texture, Element item) {
+
+		Element positionElement = item.getChildByName("Position");
+		texture.position.x = Float.parseFloat(positionElement.getChildByName("X").getText());
+		texture.position.y = -Float.parseFloat(positionElement.getChildByName("Y").getText());
+		
+		Element origin = item.getChildByName("Origin");
+		texture.originX = Float.parseFloat(origin.getChildByName("X").getText());
+		texture.originY = Float.parseFloat(origin.getChildByName("Y").getText());
+		
+		Element scale = item.getChildByName("Scale");
+		texture.scaleX = Float.parseFloat(scale.getChildByName("X").getText());
+		texture.scaleY = Float.parseFloat(scale.getChildByName("Y").getText());
+		
+		Element colorElement = item.getChildByName("TintColor");
+		texture.color.r = Float.parseFloat(colorElement.getChildByName("R").getText()) / 255.0f;
+		texture.color.g = Float.parseFloat(colorElement.getChildByName("G").getText()) / 255.0f;
+		texture.color.b = Float.parseFloat(colorElement.getChildByName("B").getText()) / 255.0f;
+		texture.color.a = Float.parseFloat(colorElement.getChildByName("A").getText()) / 255.0f;
+		
+		texture.rotation = Float.parseFloat(item.getChildByName("Rotation").getText());
+		
+		if (m_atlasFile.isEmpty()) {
+			String[] pathParts = item.getChildByName("texture_filename").getText().split("\\\\");
+			texture.path = m_pathRoot + "/" + pathParts[pathParts.length - 1];
+			texture.region.setRegion(m_assetManager.get(texture.path, Texture.class));
+		}
+		else {
+			String[] assetParts = item.getChildByName("asset_name").getText().split("\\\\");
+			texture.path = assetParts[assetParts.length - 1];
+			TextureRegion region = m_atlas.findRegion(texture.path);
+			texture.region.setRegion(region);
+		}
+		
+		texture.region.flip(Boolean.parseBoolean(item.getChildByName("FlipHorizontally").getText()),
+							Boolean.parseBoolean(item.getChildByName("FlipVertically").getText()));
+	}
+	
+	private void loadCircleElement(CircleElement circle, Element item) {
+		Element position = item.getChildByName("Position");
+		
+		Element colorElement = item.getChildByName("FillColor");
+		circle.color.r = Float.parseFloat(colorElement.getChildByName("R").getText()) / 255.0f;
+		circle.color.g = Float.parseFloat(colorElement.getChildByName("G").getText()) / 255.0f;
+		circle.color.b = Float.parseFloat(colorElement.getChildByName("B").getText()) / 255.0f;
+		circle.color.a = Float.parseFloat(colorElement.getChildByName("A").getText()) / 255.0f;
+		
+		circle.circle = new Circle(new Vector2(Float.parseFloat(position.getChildByName("X").getText()),
+											   -Float.parseFloat(position.getChildByName("Y").getText())),
+											   Float.parseFloat(item.getChildByName("Radius").getText()));
+	}
+	
+	private void loadRectangleElement(RectangleElement rectangle, Element item) {
+		Element position = item.getChildByName("Position");
+		
+		Element colorElement = item.getChildByName("FillColor");
+		rectangle.color.r = Float.parseFloat(colorElement.getChildByName("R").getText()) / 255.0f;
+		rectangle.color.g = Float.parseFloat(colorElement.getChildByName("G").getText()) / 255.0f;
+		rectangle.color.b = Float.parseFloat(colorElement.getChildByName("B").getText()) / 255.0f;
+		rectangle.color.a = Float.parseFloat(colorElement.getChildByName("A").getText()) / 255.0f;
+		
+		rectangle.rectangle.x = Float.parseFloat(position.getChildByName("X").getText());
+		rectangle.rectangle.y = -Float.parseFloat(position.getChildByName("Y").getText());
+		rectangle.rectangle.width = Float.parseFloat(item.getChildByName("Width").getText());
+		rectangle.rectangle.height = Float.parseFloat(item.getChildByName("Height").getText());
+	}
+	
+	private void loadPathElement(PathElement path, Element item) {
+		Array<Element> pointElements = item.getChildByName("WorldPoints").getChildrenByName("Vector2");
+		float[] vertices = new float[pointElements.size * 2];
+		
+		for (int j = 0; j < pointElements.size; ++j) {
+			Element pointElement = pointElements.get(j);
+			vertices[j * 2] = Float.parseFloat(pointElement.getChildByName("X").getText());
+			vertices[j * 2 + 1] = -Float.parseFloat(pointElement.getChildByName("Y").getText());
+		}
+		
+		path.polygon = new Polygon(vertices);
+		
+		path.lineWidth = Integer.parseInt(item.getChildByName("LineWidth").getText());
+		
+		Element colorElement = item.getChildByName("LineColor");
+		path.color.r = Float.parseFloat(colorElement.getChildByName("R").getText()) / 255.0f;
+		path.color.g = Float.parseFloat(colorElement.getChildByName("G").getText()) / 255.0f;
+		path.color.b = Float.parseFloat(colorElement.getChildByName("B").getText()) / 255.0f;
+		path.color.a = Float.parseFloat(colorElement.getChildByName("A").getText()) / 255.0f;
+	}
+	
+	@Override
+	public void dispose() {
+		s_logger.info("disposing level assets " + m_level.file);
+		
+		for (int i = 0; i < m_level.layers.size; ++i) {
+			Array<TextureElement> textures = m_level.layers.get(i).textures;
+			
+			for (int j = 0; j < textures.size; ++j) {
+				TextureElement texture = textures.get(j);
+				
+				if (m_assetManager.isLoaded(texture.path, Texture.class)) {
+					m_assetManager.unload(texture.path);
+				}
+			}
+		}
+	}
+}
diff --git a/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/LevelObject.java b/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/LevelObject.java
new file mode 100644
index 0000000..1776919
--- /dev/null
+++ b/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/LevelObject.java
@@ -0,0 +1,62 @@
+/*******************************************************************************
+ * Copyright 2012 David Saltares
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/ 
+
+package com.badlogic.gdx.gleed;
+
+import com.badlogic.gdx.graphics.Color;
+
+/**
+ * @author David Saltares
+ * @date 02/11/2012
+ * 
+ * @brief Models a generic object in a GLEED2D level
+ */
+public class LevelObject {
+	String name = "";
+	boolean visible = true;
+	Color color = new Color(0.0f, 0.0f, 0.0f, 1.0f);
+	Properties properties = new Properties();
+
+	LevelObject() {}
+	
+	/**
+	 * @return custom properties
+	 */
+	public Properties getProperties() {
+		return properties;
+	}
+	
+	/**
+	 * @return name of the object
+	 */
+	public String getName() {
+		return name;
+	}
+	
+	/**
+	 * @return whether the object is visible or not
+	 */
+	public boolean getVisible() {
+		return visible;
+	}
+	
+	/**
+	 * @return color tint of the object
+	 */
+	public Color getColor() {
+		return color;
+	}
+}
diff --git a/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/LevelRenderer.java b/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/LevelRenderer.java
new file mode 100644
index 0000000..2e3cc43
--- /dev/null
+++ b/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/LevelRenderer.java
@@ -0,0 +1,211 @@
+/*******************************************************************************
+ * Copyright 2012 David Saltares
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/ 
+
+package com.badlogic.gdx.gleed;
+
+import com.badlogic.gdx.graphics.OrthographicCamera;
+import com.badlogic.gdx.graphics.g2d.SpriteBatch;
+import com.badlogic.gdx.graphics.glutils.ShaderProgram;
+import com.badlogic.gdx.math.MathUtils;
+import com.badlogic.gdx.math.Rectangle;
+import com.badlogic.gdx.math.Vector2;
+import com.badlogic.gdx.utils.Array;
+import com.badlogic.gdx.utils.Disposable;
+
+/**
+ * @author David Saltares
+ * @date 03/11/2012
+ * 
+ * @brief GLEED2D Level Renderer implementation
+ *
+ * Offers basic functionality such as use of shaders and frustum culling. Respects visibility properties. 
+ */
+public class LevelRenderer implements Disposable, ILevelRenderer {
+	
+	private Level m_level;
+	private SpriteBatch m_batch = new SpriteBatch();
+	private float m_mpp;
+	private Rectangle m_box = new Rectangle();
+	private Rectangle m_cameraRectangle = new Rectangle();
+	
+	private Vector2 m_a = new Vector2();
+	private Vector2 m_b = new Vector2();
+	private Vector2 m_c = new Vector2();
+	private Vector2 m_d = new Vector2();
+	
+	/**
+	 * Constructor
+	 * 
+	 * @param level to use during rendering 
+	 */
+	public LevelRenderer(Level level) {
+		this(level, null);
+	}
+	
+	/**
+	 * Constructor
+	 * 
+	 * @param level to use during rendering
+	 * @param shader shader that will be applied to the render process 
+	 */
+	public LevelRenderer(Level level, ShaderProgram shader) {
+		this(level, shader, 1.0f);
+	}
+	
+	/**
+	 * Constructor
+	 * 
+	 * @param level to use during rendering
+	 * @param shader shader that will be applied to the render process
+	 * @param mpp "Metres Per Pixel" scale that will be applied to the elements in the level to match world units.
+	 */
+	public LevelRenderer(Level level, ShaderProgram shader, float mpp) {
+		m_level = level;
+		m_mpp = mpp;
+		
+		if (shader != null) {
+			m_batch.setShader(shader);
+		}
+	}
+	
+	/**
+	 * @return level in  use
+	 */
+	public Level getLevel() {
+		return m_level;
+	}
+
+	/**
+	 * Renders every TextureElement in the level 
+	 * 
+	 * @param camera camera to render the level
+	 */
+	@Override
+	public void render(OrthographicCamera camera) {
+		int[] layers = new int[m_level.getLayers().size];
+		
+		for (int i = 0; i < layers.length; ++i) {
+			layers[i] = i;
+		}
+		
+		render(camera, layers);
+	}
+	
+	/**
+	 * Renders every TextureElement in the selected layers
+	 *  
+	 * @param camera camera to render the level
+	 * @param layers selected layers
+	 */
+	@Override
+	public void render(OrthographicCamera camera, int[] layers) {
+		
+		Array<Layer> layersArray = m_level.getLayers();
+		
+		m_batch.setProjectionMatrix(camera.combined);
+		
+		m_cameraRectangle.x = camera.position.x - camera.viewportWidth * 0.5f * camera.zoom;
+		m_cameraRectangle.y = camera.position.y - camera.viewportHeight * 0.5f * camera.zoom;
+		m_cameraRectangle.width = camera.viewportWidth *  camera.zoom;
+		m_cameraRectangle.height = camera.viewportHeight *  camera.zoom;
+		
+		m_batch.begin();
+		m_batch.enableBlending();
+		
+		for (int i = 0; i < layers.length; ++i) {
+			Layer layer = layersArray.get(layers[i]);
+			
+			if (!layer.visible) {
+				continue;
+			}
+			
+			Array<TextureElement> textures = layer.getTextures();
+			
+			
+			for (int j = 0; j < textures.size; ++j) {
+				TextureElement texture = textures.get(j);
+				
+				setBounds(texture);
+
+				// If the image is in the frustum, draw it (culling)
+				if (m_cameraRectangle.overlaps(m_box) ||
+					m_cameraRectangle.contains(m_box) ||
+					m_box.contains(m_cameraRectangle)) {
+				
+					m_batch.draw(texture.region,
+								 texture.position.x * m_mpp - texture.originX,
+								 texture.position.y * m_mpp - texture.originY,
+								 texture.originX,
+								 texture.originY,
+								 texture.region.getRegionWidth(),
+								 texture.region.getRegionHeight(),
+								 texture.scaleX * m_mpp,
+								 texture.scaleY * m_mpp,
+								 -MathUtils.radiansToDegrees * texture.rotation);
+				}
+			}
+		}
+		
+		m_batch.end();
+	}
+
+	@Override
+	public void dispose() {
+		m_batch.dispose();
+	}
+	
+	private void setBounds(TextureElement texture) {
+		float x1 = -texture.region.getRegionWidth() * 0.5f * m_mpp * texture.scaleX;
+		float x2 = -x1;
+		float y1 = -texture.region.getRegionHeight() * 0.5f * m_mpp * texture.scaleY;
+		float y2 = -y1;
+		
+		float sin = (float)Math.sin(texture.rotation);
+		float cos = (float)Math.cos(texture.rotation);
+		
+		m_a.x = x1 * cos - y1 * sin;
+		m_a.y = x1 * sin - y1 * cos;
+		
+		m_b.x = x2 * cos - y1 * sin;
+		m_b.y = x2 * sin - y1 * cos;
+		
+		m_c.x = x2 * cos - y2 * sin;
+		m_c.y = x2 * sin - y2 * cos;
+		
+		m_d.x = x1 * cos - y2 * sin;
+		m_d.y = x1 * sin - y2 * cos;
+		
+		m_a.x += texture.position.x * m_mpp;
+		m_a.y += texture.position.y * m_mpp;
+		m_b.x += texture.position.x * m_mpp;
+		m_b.y += texture.position.y * m_mpp;
+		m_c.x += texture.position.x * m_mpp;
+		m_c.y += texture.position.y * m_mpp;
+		m_d.x += texture.position.x * m_mpp;
+		m_d.y += texture.position.y * m_mpp;
+		
+		float minX = Math.min(Math.min(Math.min(m_a.x, m_b.x), m_c.x), m_d.x);
+		float minY = Math.min(Math.min(Math.min(m_a.y, m_b.y), m_c.y), m_d.y);
+		float maxX = Math.max(Math.max(Math.max(m_a.x, m_b.x), m_c.x), m_d.x);
+		float maxY = Math.max(Math.max(Math.max(m_a.y, m_b.y), m_c.y), m_d.y);
+		
+		m_box.x = minX;
+		m_box.y = minY;
+		m_box.width = maxX - minX;
+		m_box.height = maxY - minY;
+	}
+}
+
diff --git a/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/PathElement.java b/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/PathElement.java
new file mode 100644
index 0000000..ebb54e7
--- /dev/null
+++ b/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/PathElement.java
@@ -0,0 +1,48 @@
+/*******************************************************************************
+ * Copyright 2012 David Saltares
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/ 
+
+package com.badlogic.gdx.gleed;
+
+import com.badlogic.gdx.math.Polygon;
+
+/**
+ * @author David Saltares
+ * @date 02/11/2012
+ * 
+ * @brief Path GLEED2D shape implementation 
+ */
+public class PathElement extends LevelObject {
+	Polygon polygon;
+	int lineWidth;
+	
+	PathElement() {
+		super();
+	}
+	
+	/**
+	 * @return polygon shape formed by the path (it assumes it's closed)
+	 */
+	public Polygon getPolygon() {
+		return polygon;
+	}
+	
+	/**
+	 * @return line width
+	 */
+	public int getLineWidth() {
+		return lineWidth;
+	}
+}
diff --git a/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/Properties.java b/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/Properties.java
new file mode 100644
index 0000000..5411fe1
--- /dev/null
+++ b/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/Properties.java
@@ -0,0 +1,171 @@
+/*******************************************************************************
+ * Copyright 2012 David Saltares
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/ 
+package com.badlogic.gdx.gleed;
+
+import java.util.HashMap;
+
+import com.badlogic.gdx.graphics.Color;
+import com.badlogic.gdx.math.Vector2;
+import com.badlogic.gdx.utils.Array;
+import com.badlogic.gdx.utils.XmlReader.Element;
+
+/**
+ * @author David Saltares
+ * @date 02/11/2012
+ * 
+ * @brief Holds read only GLEED2D level element properties
+ *
+ */
+public class Properties {
+	HashMap<String, String> strings = new HashMap<String, String> ();
+	HashMap<String, Color> colors = new HashMap<String, Color>();
+	HashMap<String, Boolean> booleans = new HashMap<String, Boolean>();
+	HashMap<String, Vector2> vectors = new HashMap<String, Vector2>();
+	
+	Properties() {}
+	
+	/**
+	 * @param key name of the string
+	 * @return string related to the given key, null if not found
+	 */
+	public String getString(String key) {
+		return getString(key, "");
+	}
+	
+	/**
+	 * @param key name of the string
+	 * @param defaultValue return value if key doesn't exist
+	 * @return string related to the given key, null if not found
+	 */
+	public String getString(String key, String defaultValue) {
+		String value = strings.get(key);
+		
+		if (value == null) {
+			return defaultValue;
+		}
+		
+		return value;
+	}
+	
+	/**
+	 * @param key name of the boolean
+	 * @return boolean related to the given key, null if not found
+	 */
+	public Boolean getBoolean(String key) {
+		return getBoolean(key, false);
+	}
+	
+	/**
+	 * @param key name of the boolean
+	 * @param defaultValue return value if key doesn't exist
+	 * @return boolean related to the given key, null if not found
+	 */
+	public Boolean getBoolean(String key, Boolean defaultValue) {
+		Boolean value = booleans.get(key);
+		
+		if (value == null) {
+			return defaultValue;
+		}
+		
+		return value;
+	}
+	
+	/**
+	 * @param key name of the 2D vector
+	 * @return 2D vector related to the given key, null if not found
+	 */
+	public Vector2 getVector(String key) {
+		return getVector(key, Vector2.Zero);
+	}
+	
+	/**
+	 * @param key name of the 2D vector
+	 * @param defaultValue return value if key doesn't exist
+	 * @return 2D vector related to the given key, null if not found
+	 */
+	public Vector2 getVector(String key, Vector2 defaultValue) {
+		Vector2 value = vectors.get(key);
+		
+		if (value == null) {
+			return defaultValue;
+		}
+		
+		return value;
+	}
+	
+	/**
+	 * @param key name of the color element
+	 * @return color related to the given key, null if not found
+	 */
+	public Color getColor(String key) {
+		return getColor(key, Color.BLACK);
+	}
+	
+	/**
+	 * @param key name of the color element
+	 * @param defaultValue return value if key doesn't exist
+	 * @return color related to the given key, null if not found
+	 */
+	public Color getColor(String key, Color defaultValue) {
+		Color value = colors.get(key);
+		
+		if (value == null) {
+			return defaultValue;
+		}
+		
+		return value;
+	}
+	
+	void load(Element element) {
+		Element customProperty = element.getChildByName("CustomProperties");
+		 
+		if (customProperty != null) {
+			Array<Element> properties = customProperty.getChildrenByName("Property");
+			
+			for (int i = 0; i < properties.size; ++i) {
+				Element property = properties.get(i);
+				String type = property.getAttribute("Type");
+				
+				if (type == null) {
+					continue;
+				}
+				
+				if (type.equals("string")) {
+					strings.put(property.getAttribute("Name"), property.getChildByName("string").getText());
+				}
+				else if (type.equals("bool")) {
+					booleans.put(property.getAttribute("Name"), Boolean.parseBoolean(property.getChildByName("boolean").getText()));
+				}
+				else if (type.equals("Vector2")) {
+					Element vectorElement = property.getChildByName("Vector2");
+					Vector2 v = new Vector2(Float.parseFloat(vectorElement.getChildByName("X").getText()),
+											Float.parseFloat(vectorElement.getChildByName("Y").getText()));
+					
+					vectors.put(property.getAttribute("Name"), v);
+				}
+				else if (type.equals("Color")) {
+					Element colorElement = property.getChildByName("Color");
+					Color c = new Color(Float.parseFloat(colorElement.getChildByName("R").getText()) / 255.0f,
+										Float.parseFloat(colorElement.getChildByName("G").getText()) / 255.0f,
+										Float.parseFloat(colorElement.getChildByName("B").getText()) / 255.0f,
+										Float.parseFloat(colorElement.getChildByName("A").getText()) / 255.0f);
+					
+					colors.put(property.getAttribute("Name"), c);
+				}
+			}
+		}
+	}
+}
diff --git a/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/RectangleElement.java b/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/RectangleElement.java
new file mode 100644
index 0000000..e7a882f
--- /dev/null
+++ b/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/RectangleElement.java
@@ -0,0 +1,40 @@
+/*******************************************************************************
+ * Copyright 2012 David Saltares
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/ 
+
+package com.badlogic.gdx.gleed;
+
+import com.badlogic.gdx.math.Rectangle;
+
+/**
+ * @author David Saltares
+ * @date 02/11/2012
+ * 
+ * @brief Rectangle GLEED2D shape implementation 
+ */
+public class RectangleElement extends LevelObject {
+	Rectangle rectangle = new Rectangle();
+	
+	RectangleElement() {
+		super();
+	}
+	
+	/**
+	 * @return rectangle shape
+	 */
+	public Rectangle getRectangle() {
+		return rectangle;
+	}
+}
diff --git a/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/TextureElement.java b/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/TextureElement.java
new file mode 100644
index 0000000..6e61e51
--- /dev/null
+++ b/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/TextureElement.java
@@ -0,0 +1,97 @@
+/*******************************************************************************
+ * Copyright 2012 David Saltares
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/ 
+
+package com.badlogic.gdx.gleed;
+
+import com.badlogic.gdx.graphics.g2d.TextureRegion;
+import com.badlogic.gdx.math.Vector2;
+
+/**
+ * @author David Saltares
+ * @date 02/11/2012
+ * 
+ * @brief GLEED2D texture element implementation
+ */
+public class TextureElement extends LevelObject {
+	String path = "";
+	TextureRegion region = new TextureRegion();
+	Vector2 position = new Vector2(0.0f, 0.0f);
+	float scaleX = 1.0f;
+	float scaleY = 1.0f;
+	float originX = 1.0f;
+	float originY = 1.0f;
+	float rotation = 0.0f;
+	
+	TextureElement() {
+		super();
+	}
+	
+	/**
+	 * @return texture path
+	 */
+	public String getPath() {
+		return path;
+	}
+	
+	/**
+	 * @return region
+	 */
+	public TextureRegion getRegion() {
+		return region;
+	}
+	
+	/**
+	 * @return element 2D world coordinates
+	 */
+	public Vector2 getPosition() {
+		return position;
+	}
+	
+	/**
+	 * @return horizontal scale
+	 */
+	public float getScaleX() {
+		return scaleX;
+	}
+	
+	/**
+	 * @return vertical scale
+	 */
+	public float getScaleY() {
+		return scaleY;
+	}
+	
+	/**
+	 * @return texture units from left to centre
+	 */
+	public float getOriginX() {
+		return originX;
+	}
+	
+	/**
+	 * @return texture units from top to centre
+	 */
+	public float getOriginY() {
+		return originY;
+	}
+	
+	/**
+	 * @return rotation in radians
+	 */
+	public float getRotation() {
+		return rotation;
+	}
+}
diff --git a/extensions/gdx-image/libs/gdx-image-natives.jar b/extensions/gdx-image/libs/gdx-image-natives.jar
new file mode 100644
index 0000000..d14af30
Binary files /dev/null and b/extensions/gdx-image/libs/gdx-image-natives.jar differ
diff --git a/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/AndroidNdkScriptGenerator.java b/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/AndroidNdkScriptGenerator.java
index 92d8c99..ca2ed44 100644
--- a/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/AndroidNdkScriptGenerator.java
+++ b/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/AndroidNdkScriptGenerator.java
@@ -86,6 +86,7 @@ public class AndroidNdkScriptGenerator {
 		template = template.replace("%linkerFlags%", target.linkerFlags);
 		template = template.replace("%srcFiles%", srcFiles);
 
+		System.out.println(template);
 		config.jniDir.child("Android.mk").writeString(template, false);
 	}
 
diff --git a/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/AntScriptGenerator.java b/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/AntScriptGenerator.java
index 6be4ada..7a50007 100644
--- a/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/AntScriptGenerator.java
+++ b/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/AntScriptGenerator.java
@@ -98,9 +98,9 @@ public class AntScriptGenerator {
 				+ config.jniDir.child(buildFileName) + "'");
 
 			if (!target.excludeFromMasterBuildFile) {
-				if (target.os != TargetOs.MacOsX && target.os != TargetOs.IOS) {
+				if (target.os != TargetOs.MacOsX) {
 					buildFiles.add(buildFileName);
-				} 
+				}
 				sharedLibFiles.add(getSharedLibFilename(target.os, target.is64Bit, config.sharedLibName));
 				libsDirs.add("../" + libsDir.path().replace('\\', '/'));
 			}
@@ -158,10 +158,6 @@ public class AntScriptGenerator {
 			libPrefix = "lib";
 			libSuffix = ".dylib";
 		}
-		if (os == TargetOs.IOS) {
-			libPrefix = "lib";
-			libSuffix = ".a";
-		}
 		return libPrefix + sharedLibName + libSuffix;
 	}
 
@@ -188,14 +184,8 @@ public class AntScriptGenerator {
 		}
 
 		// read template file from resources
-		String template = null;
-		if(target.os == TargetOs.IOS) {
-			template = new FileDescriptor("com/badlogic/gdx/jnigen/resources/scripts/build-ios.xml.template",
+		String template = new FileDescriptor("com/badlogic/gdx/jnigen/resources/scripts/build-target.xml.template",
 			FileType.Classpath).readString();
-		} else {
-			template = new FileDescriptor("com/badlogic/gdx/jnigen/resources/scripts/build-target.xml.template",
-				FileType.Classpath).readString();
-		}
 
 		// generate shared lib filename and jni platform headers directory name
 		String libName = getSharedLibFilename(target.os, target.is64Bit, config.sharedLibName);
diff --git a/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/BuildTarget.java b/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/BuildTarget.java
index 2e844f4..10d9624 100644
--- a/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/BuildTarget.java
+++ b/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/BuildTarget.java
@@ -21,7 +21,7 @@ package com.badlogic.gdx.jnigen;
 public class BuildTarget {
 	/** The target operating system of a build target. */
 	public enum TargetOs {
-		Windows, Linux, MacOsX, Android, IOS
+		Windows, Linux, MacOsX, Android
 	}
 
 	/** the target operating system **/
@@ -133,16 +133,6 @@ public class BuildTarget {
 				"-lm");
 			return android;
 		}
-		
-		if(type == TargetOs.IOS) {
-			// iOS, 386 simulator and armv7a, compiled to fat static lib
-			BuildTarget ios = new BuildTarget(TargetOs.IOS, false, new String[] {"**/*.c"}, new String[0],
-				new String[] {"**/*.cpp"}, new String[0], new String[0], "",
-				"-c -Wall -O2",
-				"-c -Wall -O2",
-				"rcs");
-			return ios;
-		}
 
 		throw new RuntimeException("Unknown target type");
 	}
diff --git a/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/JniGenSharedLibraryLoader.java b/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/JniGenSharedLibraryLoader.java
index 5549c5a..7e2d1bd 100644
--- a/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/JniGenSharedLibraryLoader.java
+++ b/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/JniGenSharedLibraryLoader.java
@@ -1,8 +1,22 @@
+/*******************************************************************************
+ * Copyright 2011 See AUTHORS file.
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/
+
 package com.badlogic.gdx.jnigen;
 
 import java.io.File;
-import java.io.FileInputStream;
-import java.io.FileNotFoundException;
 import java.io.FileOutputStream;
 import java.io.IOException;
 import java.io.InputStream;
@@ -12,6 +26,8 @@ import java.util.zip.CRC32;
 import java.util.zip.ZipEntry;
 import java.util.zip.ZipFile;
 
+import com.badlogic.gdx.jnigen.test.MyJniClass;
+
 /** Loads shared libraries from a natives jar file (desktop) or arm folders (Android). For desktop projects, have the natives jar
  * in the classpath, for Android projects put the shared libraries in the libs/armeabi and libs/armeabi-v7a folders.
  * 
@@ -25,14 +41,14 @@ public class JniGenSharedLibraryLoader {
 	public JniGenSharedLibraryLoader () {
 	}
 
-	/** Fetches the natives from the given natives jar file. Used for testing a shared lib on the fly, see MyJniClass.
+	/** Fetches the natives from the given natives jar file. Used for testing a shared lib on the fly, see {@link MyJniClass}.
 	 * @param nativesJar */
 	public JniGenSharedLibraryLoader (String nativesJar) {
 		this.nativesJar = nativesJar;
 	}
 
-	/** Returns a CRC of the remaining bytes in the stream. */
-	public String crc (InputStream input) {
+	private String crc (String nativeFile) {
+		InputStream input = JniGenSharedLibraryLoader.class.getResourceAsStream("/" + nativeFile);
 		if (input == null) return "" + System.nanoTime(); // fallback
 		CRC32 crc = new CRC32();
 		byte[] buffer = new byte[4096];
@@ -58,41 +74,29 @@ public class JniGenSharedLibraryLoader {
 	}
 
 	private String extractLibrary (String sharedLibName) {
-		String srcCrc = crc(JniGenSharedLibraryLoader.class.getResourceAsStream("/" + sharedLibName));
-		File nativesDir = new File(System.getProperty("java.io.tmpdir") + "/jnigen/" + srcCrc);
+		File nativesDir = new File(System.getProperty("java.io.tmpdir") + "/jnigen/" + crc(sharedLibName));
 		File nativeFile = new File(nativesDir, sharedLibName);
-		
-		String extractedCrc = null;
-		if (nativeFile.exists()) {
-			try {
-				extractedCrc = crc(new FileInputStream(nativeFile));
-			} catch (FileNotFoundException ignored) {
-			}
-		}
-		
-		if(extractedCrc == null || !extractedCrc.equals(srcCrc)) {
-			try {
-				// Extract native from classpath to temp dir.
-				InputStream input = null;
-				if (nativesJar == null)
-					input = JniGenSharedLibraryLoader.class.getResourceAsStream("/" + sharedLibName);
-				else
-					input = getFromJar(nativesJar, sharedLibName);
-				if (input == null) return null;
-				nativesDir.mkdirs();
-				FileOutputStream output = new FileOutputStream(nativeFile);
-				byte[] buffer = new byte[4096];
-				while (true) {
-					int length = input.read(buffer);
-					if (length == -1) break;
-					output.write(buffer, 0, length);
-				}
-				input.close();
-				output.close();
-			} catch (IOException ex) {
-				ex.printStackTrace();
-				throw new RuntimeException(ex);
+		try {
+			// Extract native from classpath to temp dir.
+			InputStream input = null;
+			if (nativesJar == null)
+				input = JniGenSharedLibraryLoader.class.getResourceAsStream("/" + sharedLibName);
+			else
+				input = getFromJar(nativesJar, sharedLibName);
+			if (input == null) return null;
+			nativesDir.mkdirs();
+			FileOutputStream output = new FileOutputStream(nativeFile);
+			byte[] buffer = new byte[4096];
+			while (true) {
+				int length = input.read(buffer);
+				if (length == -1) break;
+				output.write(buffer, 0, length);
 			}
+			input.close();
+			output.close();
+		} catch (IOException ex) {
+			ex.printStackTrace();
+			throw new RuntimeException(ex);
 		}
 		return nativeFile.exists() ? nativeFile.getAbsolutePath() : null;
 	}
diff --git a/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/NativeCodeGenerator.java b/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/NativeCodeGenerator.java
index a4865cd..46cefa8 100644
--- a/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/NativeCodeGenerator.java
+++ b/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/NativeCodeGenerator.java
@@ -322,8 +322,7 @@ public class NativeCodeGenerator {
 
 	private CMethod findCMethod (JavaMethod javaMethod, ArrayList<CMethod> cMethods) {
 		for (CMethod cMethod : cMethods) {
-			if (cMethod.getHead().endsWith(javaMethod.getClassName() + "_" + javaMethod.getName()) ||
-				 cMethod.getHead().contains(javaMethod.getClassName() + "_" + javaMethod.getName() + "__")) {
+			if (cMethod.getHead().contains(javaMethod.getClassName() + "_" + javaMethod.getName())) {
 				// FIXME poor man's overloaded method check...
 				// FIXME float test[] won't work, needs to be float[] test.
 				if (cMethod.getArgumentTypes().length - 2 == javaMethod.getArguments().size()) {
@@ -514,8 +513,8 @@ public class NativeCodeGenerator {
 		for (Argument arg : javaMethod.getArguments()) {
 			if (arg.getType().isBuffer()) {
 				String type = arg.getType().getBufferCType();
-				buffer.append("\t" + type + " " + arg.getName() + " = (" + type + ")(" + JNI_ARG_PREFIX
-					+ arg.getName() + "?env->GetDirectBufferAddress(" + JNI_ARG_PREFIX	+ arg.getName() + "):0);\n");
+				buffer.append("\t" + type + " " + arg.getName() + " = (" + type + ")env->GetDirectBufferAddress(" + JNI_ARG_PREFIX
+					+ arg.getName() + ");\n");
 				additionalArgs.append(", ");
 				additionalArgs.append(type);
 				additionalArgs.append(" ");
diff --git a/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/resources/scripts/build-android.xml.template b/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/resources/scripts/build-android.xml.template
index 481d47f..e92b0b5 100644
--- a/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/resources/scripts/build-android.xml.template
+++ b/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/resources/scripts/build-android.xml.template
@@ -1,10 +1,8 @@
 <project name="android-natives" basedir="." default="postcompile">
 	<property environment="env" />
-	<!--  the suffix ndk-build executable -->	
-	<property name="ndkSuffix" value="" />
 
 	<target name="clean" depends="check-for-ndk" if="has-ndk-build">
-		<exec executable="${env.NDK_HOME}/ndk-build${ndkSuffix}" failonerror="true">
+		<exec executable="${env.NDK_HOME}/ndk-build" failonerror="true">
 			<arg value="clean"/>
 		</exec>
 	</target>
@@ -15,7 +13,7 @@
 
 	<target name="compile-natives" depends="precompile" if="has-ndk-build">
 		<echo>ndk_home: ${env.NDK_HOME}</echo>
-		<exec executable="${env.NDK_HOME}/ndk-build${ndkSuffix}" failonerror="true"/>
+		<exec executable="${env.NDK_HOME}/ndk-build" failonerror="true"/>
 	</target>
 	
 	<target name="postcompile" depends="compile-natives">
@@ -24,7 +22,7 @@
 
 	<target name="check-for-ndk">
 		<condition property="ndk-build-found">
-			<available file="ndk-build${ndkSuffix}" filepath="${env.NDK_HOME}"/>
+			<available file="ndk-build" filepath="${env.NDK_HOME}"/>
 		</condition>
 		<condition property="has-ndk-build">
 			<equals arg1="${ndk-build-found}" arg2="true"/>
diff --git a/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/resources/scripts/build-ios.xml.template b/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/resources/scripts/build-ios.xml.template
deleted file mode 100755
index 6b3baf6..0000000
--- a/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/resources/scripts/build-ios.xml.template
+++ /dev/null
@@ -1,183 +0,0 @@
-<project name="%projectName%" basedir="." default="postcompile">
-	<!-- include the environment -->
-	<property environment="env"/>	
-	<!-- output directory for temporary object files -->
-	<property name="buildDir" value="%buildDir%" />
-	<!-- output directory for the shared library -->
-	<property name="libsDir" value="%libsDir%" />
-	<!-- the name of the shared library -->
-	<property name="libName" value="%libName%"/>
-	<!-- the jni header jniPlatform to use -->
-	<property name="jniPlatform" value="mac"/>
-	<!-- the compilerPrefix for the C & C++ compilers -->
-	<property name="compilerPrefix" value="%compilerPrefix%"/>	
-	<property name="iphoneos-platform" value="/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin"/>
-	<property name="iphoneos-sdk" value="/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS6.0.sdk/"/>
-	<property name="iphonesimulator-platform" value="/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/usr/bin"/>
-	<property name="iphonesimulator-sdk" value="/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator6.0.sdk/"/>
-	
-	<!-- define gcc compiler, options and files to compile -->
-	<property name="gcc" value="${compilerPrefix}gcc"/>	
-	<property name="gcc-opts" value="%cFlags%"/>
-	<fileset id="gcc-files" dir="./">
-		<exclude name="target/"/>		
-		%cIncludes%
-		%cExcludes%
-	</fileset>
-	
-	<!-- define g++ compiler, options and files to compile -->
-	<property name="g++" value="${compilerPrefix}g++"/>
-	<property name="g++-opts" value="%cppFlags%"/>
-	<fileset id="g++-files" dir="./">
-		<exclude name="target/"/>
-		%cppIncludes%
-		%cppExcludes%
-	</fileset>
-
-	<!-- define linker and options -->
-	<property name="linker" value="${compilerPrefix}ar"/>
-	<property name="linker-opts" value="%linkerFlags%"/>
-	<property name="libraries" value="%libraries%"/>
-	
-	<!-- cleans the build directory, removes all object files and shared libs -->
-	<target name="clean">
-		<delete includeemptydirs="true" quiet="true">
-			<fileset dir="${buildDir}"/>
-			<fileset dir="${libsDir}" includes="**/*" excludes="**/.svn"/>
-		</delete>
-	</target>
-	
-	<target name="clean-objfiles">
-		<delete>
-			<fileset dir="${buildDir}">
-				<include name="**/*.o"/>
-			</fileset>
-		</delete>
-	</target>
-	
-	<target name="create-build-dir">
-		<!-- FIXME this is pretty nasty :/ -->
-		<copy todir="${buildDir}">
-			<fileset refid="g++-files"/>
-			<fileset refid="gcc-files"/>
-		</copy>
-		<delete>
-			<fileset dir="${buildDir}">
-				<include name="*"/>
-				<exclude name="*.o"/>
-			</fileset>
-		</delete>
-	</target>
-
-	<!-- compiles all C and C++ files to object files in the build directory, for 386 builds-->
-	<target name="compile-386" depends="clean,create-build-dir">
-		<mkdir dir="${buildDir}"/>
-		<apply failonerror="true" executable="${iphonesimulator-platform}/${g++}" dest="${buildDir}" verbose="true">
-			<arg line="-isysroot ${iphonesimulator-sdk} -arch i386 ${g++-opts}"/>
-			<arg value="-Ijni-headers"/>
-			<arg value="-Ijni-headers/${jniPlatform}"/>
-			<arg value="-I."/>
-			%headerDirs%
-			<srcfile/>
-			<arg value="-o"/>
-			<targetfile/>
-			<fileset refid="g++-files"/>
-			<compositemapper>
-				<mapper type="glob" from="*.cpp" to="*.o"/>
-				<mapper type="glob" from="*.mm" to="*.o"/>
-			</compositemapper>
-		</apply>
-		<apply failonerror="true" executable="${iphonesimulator-platform}/${gcc}" dest="${buildDir}" verbose="true">
-			<arg line="-isysroot ${iphonesimulator-sdk} -arch i386 ${gcc-opts}"/>
-			<arg value="-Ijni-headers"/>
-			<arg value="-Ijni-headers/${jniPlatform}"/>
-			<arg value="-I."/>
-			%headerDirs%
-			<srcfile/>
-			<arg value="-o"/>
-			<targetfile/>
-			<fileset refid="gcc-files"/>
-			<compositemapper>
-				<mapper type="glob" from="*.c" to="*.o"/>
-			</compositemapper>
-		</apply>
-	</target>	
-
-	<!-- links the shared library based on the previously compiled object files -->
-	<target name="link-386" depends="compile-386">
-		<fileset dir="${buildDir}" id="objFileSet">
-			<patternset>
-				<include name="**/*.o" />
-			</patternset>
-		</fileset>
-		<pathconvert pathsep=" " property="objFiles" refid="objFileSet" />
-		<mkdir dir="${libsDir}" />
-		<exec executable="${iphonesimulator-platform}/${linker}" failonerror="true" dir="${buildDir}">
-			<arg line="${linker-opts}" />
-			<arg path="${libsDir}/${libName}.386" />
-			<arg line="${objFiles}"/>
-			<arg line="${libraries}" />
-		</exec>
-	</target>
-	
-	<!-- compiles all C and C++ files to object files in the build directory, for 386 builds-->
-	<target name="compile-arm" depends="create-build-dir,clean-objfiles">
-		<mkdir dir="${buildDir}"/>
-		<apply failonerror="true" executable="${iphoneos-platform}/${g++}" dest="${buildDir}" verbose="true">
-			<arg line="-isysroot ${iphoneos-sdk} -arch armv7 ${g++-opts}"/>
-			<arg value="-Ijni-headers"/>
-			<arg value="-Ijni-headers/${jniPlatform}"/>
-			<arg value="-I."/>
-			%headerDirs%
-			<srcfile/>
-			<arg value="-o"/>
-			<targetfile/>
-			<fileset refid="g++-files"/>
-			<compositemapper>
-				<mapper type="glob" from="*.cpp" to="*.o"/>
-				<mapper type="glob" from="*.mm" to="*.o"/>
-			</compositemapper>
-		</apply>
-		<apply failonerror="true" executable="${iphoneos-platform}/${gcc}" dest="${buildDir}" verbose="true">
-			<arg line="-isysroot ${iphoneos-sdk} -arch armv7 ${gcc-opts}"/>
-			<arg value="-Ijni-headers"/>
-			<arg value="-Ijni-headers/${jniPlatform}"/>
-			<arg value="-I."/>
-			%headerDirs%
-			<srcfile/>
-			<arg value="-o"/>
-			<targetfile/>
-			<fileset refid="gcc-files"/>
-			<compositemapper>
-				<mapper type="glob" from="*.c" to="*.o"/>
-			</compositemapper>
-		</apply>
-	</target>	
-
-	<!-- links the shared library based on the previously compiled object files -->
-	<target name="link-arm" depends="compile-arm">
-		<fileset dir="${buildDir}" id="objFileSet">
-			<patternset>
-				<include name="**/*.o" />
-			</patternset>
-		</fileset>
-		<pathconvert pathsep=" " property="objFiles" refid="objFileSet" />
-		<mkdir dir="${libsDir}" />
-		<exec executable="${iphoneos-platform}/${linker}" failonerror="true" dir="${buildDir}">
-			<arg line="${linker-opts}" />
-			<arg path="${libsDir}/${libName}.armv7" />
-			<arg line="${objFiles}"/>
-			<arg line="${libraries}" />
-		</exec>
-	</target>
-
-	<target name="link-fat">
-		<exec executable="lipo" failonerror="true" dir="${libsDir}">
-			<arg line="-create -output ${libName} ${libName}.386 ${libName}.armv7"/>
-		</exec>
-	</target>
-
-	<target name="postcompile" depends="link-386,link-arm,link-fat">
-		%postcompile%
-	</target>
-</project>
diff --git a/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/resources/scripts/build-target.xml.template b/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/resources/scripts/build-target.xml.template
index dd60c1e..9e9d69e 100644
--- a/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/resources/scripts/build-target.xml.template
+++ b/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/resources/scripts/build-target.xml.template
@@ -10,12 +10,10 @@
 	<!-- the jni header jniPlatform to use -->
 	<property name="jniPlatform" value="%jniPlatform%"/>
 	<!-- the compilerPrefix for the C & C++ compilers -->
-	<property name="compilerPrefix" value="%compilerPrefix%"/>
-	<!--  the compilerSuffix for the C & C++ compilers -->	
-	<property name="compilerSuffix" value="" />	
+	<property name="compilerPrefix" value="%compilerPrefix%"/>	
 	
 	<!-- define gcc compiler, options and files to compile -->
-	<property name="gcc" value="${compilerPrefix}gcc${compilerSuffix}"/>	
+	<property name="gcc" value="${compilerPrefix}gcc"/>	
 	<property name="gcc-opts" value="%cFlags%"/>
 	<fileset id="gcc-files" dir="./">
 		<exclude name="target/"/>		
@@ -24,7 +22,7 @@
 	</fileset>
 	
 	<!-- define g++ compiler, options and files to compile -->
-	<property name="g++" value="${compilerPrefix}g++${compilerSuffix}"/>
+	<property name="g++" value="${compilerPrefix}g++"/>
 	<property name="g++-opts" value="%cppFlags%"/>
 	<fileset id="g++-files" dir="./">
 		<exclude name="target/"/>
@@ -33,7 +31,7 @@
 	</fileset>
 
 	<!-- define linker and options -->
-	<property name="linker" value="${compilerPrefix}g++${compilerSuffix}"/>
+	<property name="linker" value="${compilerPrefix}g++"/>
 	<property name="linker-opts" value="%linkerFlags%"/>
 	<property name="libraries" value="%libraries%"/>
 	
@@ -109,8 +107,7 @@
 			<targetfile/>
 			<fileset refid="gcc-files"/>
 			<compositemapper>
-				<mapper type="glob" from="*.c" to="*.o"/>
-				<mapper type="glob" from="*.m" to="*.o"/>
+				<mapper type="glob" from="*.c" to="*.o"/>
 			</compositemapper>
 		</apply>
 	</target>	
diff --git a/extensions/gdx-remote/libs/armeabi-v7a/libandroidgl20.so b/extensions/gdx-remote/libs/armeabi-v7a/libandroidgl20.so
new file mode 100644
index 0000000..7a7cd7f
Binary files /dev/null and b/extensions/gdx-remote/libs/armeabi-v7a/libandroidgl20.so differ
diff --git a/extensions/gdx-remote/libs/armeabi-v7a/libgdx.so b/extensions/gdx-remote/libs/armeabi-v7a/libgdx.so
new file mode 100644
index 0000000..8d31a3e
Binary files /dev/null and b/extensions/gdx-remote/libs/armeabi-v7a/libgdx.so differ
diff --git a/extensions/gdx-remote/libs/armeabi/libandroidgl20.so b/extensions/gdx-remote/libs/armeabi/libandroidgl20.so
new file mode 100644
index 0000000..7a7cd7f
Binary files /dev/null and b/extensions/gdx-remote/libs/armeabi/libandroidgl20.so differ
diff --git a/extensions/gdx-remote/libs/armeabi/libgdx.so b/extensions/gdx-remote/libs/armeabi/libgdx.so
new file mode 100644
index 0000000..36f294f
Binary files /dev/null and b/extensions/gdx-remote/libs/armeabi/libgdx.so differ
diff --git a/extensions/gdx-remote/project.properties b/extensions/gdx-remote/project.properties
index c4f09d2..f049142 100644
--- a/extensions/gdx-remote/project.properties
+++ b/extensions/gdx-remote/project.properties
@@ -8,4 +8,4 @@
 # project structure.
 
 # Project target.
-target=android-17
+target=android-10
diff --git a/extensions/gdx-setup-ui/src/res/projects.zip b/extensions/gdx-setup-ui/src/res/projects.zip
index 8ffa263..85fbc48 100755
Binary files a/extensions/gdx-setup-ui/src/res/projects.zip and b/extensions/gdx-setup-ui/src/res/projects.zip differ
diff --git a/extensions/gdx-tiled-preprocessor/.classpath b/extensions/gdx-tiled-preprocessor/.classpath
new file mode 100644
index 0000000..43c8280
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/.classpath
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<classpath>
+	<classpathentry kind="src" path="src"/>
+	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6"/>
+	<classpathentry kind="src" path="/gdx">
+		<attributes>
+			<attribute name="org.eclipse.jdt.launching.CLASSPATH_ATTR_LIBRARY_PATH_ENTRY" value="gdx/windows64"/>
+		</attributes>
+	</classpathentry>
+	<classpathentry combineaccessrules="false" kind="src" path="/gdx-tools"/>
+	<classpathentry kind="output" path="bin"/>
+</classpath>
diff --git a/extensions/gdx-tiled-preprocessor/.project b/extensions/gdx-tiled-preprocessor/.project
new file mode 100644
index 0000000..13f6fd1
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/.project
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<projectDescription>
+	<name>gdx-tiled-preprocessor</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+	</natures>
+</projectDescription>
diff --git a/extensions/gdx-tiled-preprocessor/.settings/org.eclipse.jdt.core.prefs b/extensions/gdx-tiled-preprocessor/.settings/org.eclipse.jdt.core.prefs
new file mode 100644
index 0000000..3d00358
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/.settings/org.eclipse.jdt.core.prefs
@@ -0,0 +1,369 @@
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.6
+org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
+org.eclipse.jdt.core.compiler.compliance=1.6
+org.eclipse.jdt.core.compiler.debug.lineNumber=generate
+org.eclipse.jdt.core.compiler.debug.localVariable=generate
+org.eclipse.jdt.core.compiler.debug.sourceFile=generate
+org.eclipse.jdt.core.compiler.doc.comment.support=enabled
+org.eclipse.jdt.core.compiler.problem.annotationSuperInterface=warning
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.autoboxing=ignore
+org.eclipse.jdt.core.compiler.problem.comparingIdentical=warning
+org.eclipse.jdt.core.compiler.problem.deadCode=ignore
+org.eclipse.jdt.core.compiler.problem.deprecation=ignore
+org.eclipse.jdt.core.compiler.problem.deprecationInDeprecatedCode=disabled
+org.eclipse.jdt.core.compiler.problem.deprecationWhenOverridingDeprecatedMethod=disabled
+org.eclipse.jdt.core.compiler.problem.discouragedReference=warning
+org.eclipse.jdt.core.compiler.problem.emptyStatement=ignore
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.problem.fallthroughCase=ignore
+org.eclipse.jdt.core.compiler.problem.fatalOptionalError=disabled
+org.eclipse.jdt.core.compiler.problem.fieldHiding=ignore
+org.eclipse.jdt.core.compiler.problem.finalParameterBound=warning
+org.eclipse.jdt.core.compiler.problem.finallyBlockNotCompletingNormally=warning
+org.eclipse.jdt.core.compiler.problem.forbiddenReference=warning
+org.eclipse.jdt.core.compiler.problem.hiddenCatchBlock=warning
+org.eclipse.jdt.core.compiler.problem.incompatibleNonInheritedInterfaceMethod=warning
+org.eclipse.jdt.core.compiler.problem.incompleteEnumSwitch=ignore
+org.eclipse.jdt.core.compiler.problem.indirectStaticAccess=ignore
+org.eclipse.jdt.core.compiler.problem.invalidJavadoc=warning
+org.eclipse.jdt.core.compiler.problem.invalidJavadocTags=enabled
+org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsDeprecatedRef=enabled
+org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsNotVisibleRef=enabled
+org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsVisibility=private
+org.eclipse.jdt.core.compiler.problem.localVariableHiding=ignore
+org.eclipse.jdt.core.compiler.problem.methodWithConstructorName=warning
+org.eclipse.jdt.core.compiler.problem.missingDeprecatedAnnotation=ignore
+org.eclipse.jdt.core.compiler.problem.missingHashCodeMethod=ignore
+org.eclipse.jdt.core.compiler.problem.missingJavadocComments=ignore
+org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsOverriding=enabled
+org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsVisibility=public
+org.eclipse.jdt.core.compiler.problem.missingJavadocTagDescription=return_tag
+org.eclipse.jdt.core.compiler.problem.missingJavadocTags=ignore
+org.eclipse.jdt.core.compiler.problem.missingJavadocTagsOverriding=enabled
+org.eclipse.jdt.core.compiler.problem.missingJavadocTagsVisibility=private
+org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotation=ignore
+org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotationForInterfaceMethodImplementation=enabled
+org.eclipse.jdt.core.compiler.problem.missingSerialVersion=ignore
+org.eclipse.jdt.core.compiler.problem.missingSynchronizedOnInheritedMethod=ignore
+org.eclipse.jdt.core.compiler.problem.noEffectAssignment=warning
+org.eclipse.jdt.core.compiler.problem.noImplicitStringConversion=warning
+org.eclipse.jdt.core.compiler.problem.nonExternalizedStringLiteral=ignore
+org.eclipse.jdt.core.compiler.problem.nullReference=warning
+org.eclipse.jdt.core.compiler.problem.overridingPackageDefaultMethod=warning
+org.eclipse.jdt.core.compiler.problem.parameterAssignment=ignore
+org.eclipse.jdt.core.compiler.problem.possibleAccidentalBooleanAssignment=warning
+org.eclipse.jdt.core.compiler.problem.potentialNullReference=ignore
+org.eclipse.jdt.core.compiler.problem.rawTypeReference=ignore
+org.eclipse.jdt.core.compiler.problem.redundantNullCheck=ignore
+org.eclipse.jdt.core.compiler.problem.redundantSuperinterface=ignore
+org.eclipse.jdt.core.compiler.problem.specialParameterHidingField=disabled
+org.eclipse.jdt.core.compiler.problem.staticAccessReceiver=warning
+org.eclipse.jdt.core.compiler.problem.suppressOptionalErrors=disabled
+org.eclipse.jdt.core.compiler.problem.suppressWarnings=enabled
+org.eclipse.jdt.core.compiler.problem.syntheticAccessEmulation=warning
+org.eclipse.jdt.core.compiler.problem.typeParameterHiding=warning
+org.eclipse.jdt.core.compiler.problem.uncheckedTypeOperation=ignore
+org.eclipse.jdt.core.compiler.problem.undocumentedEmptyBlock=ignore
+org.eclipse.jdt.core.compiler.problem.unhandledWarningToken=warning
+org.eclipse.jdt.core.compiler.problem.unnecessaryElse=ignore
+org.eclipse.jdt.core.compiler.problem.unnecessaryTypeCheck=ignore
+org.eclipse.jdt.core.compiler.problem.unqualifiedFieldAccess=ignore
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownException=ignore
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionExemptExceptionAndThrowable=enabled
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionIncludeDocCommentReference=enabled
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionWhenOverriding=enabled
+org.eclipse.jdt.core.compiler.problem.unusedImport=ignore
+org.eclipse.jdt.core.compiler.problem.unusedLabel=warning
+org.eclipse.jdt.core.compiler.problem.unusedLocal=ignore
+org.eclipse.jdt.core.compiler.problem.unusedObjectAllocation=ignore
+org.eclipse.jdt.core.compiler.problem.unusedParameter=ignore
+org.eclipse.jdt.core.compiler.problem.unusedParameterIncludeDocCommentReference=enabled
+org.eclipse.jdt.core.compiler.problem.unusedParameterWhenImplementingAbstract=enabled
+org.eclipse.jdt.core.compiler.problem.unusedParameterWhenOverridingConcrete=enabled
+org.eclipse.jdt.core.compiler.problem.unusedPrivateMember=ignore
+org.eclipse.jdt.core.compiler.problem.unusedWarningToken=warning
+org.eclipse.jdt.core.compiler.problem.varargsArgumentNeedCast=warning
+org.eclipse.jdt.core.compiler.source=1.6
+org.eclipse.jdt.core.formatter.align_type_members_on_columns=false
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_annotation=0
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression=16
+org.eclipse.jdt.core.formatter.alignment_for_assignment=0
+org.eclipse.jdt.core.formatter.alignment_for_binary_expression=16
+org.eclipse.jdt.core.formatter.alignment_for_compact_if=16
+org.eclipse.jdt.core.formatter.alignment_for_conditional_expression=80
+org.eclipse.jdt.core.formatter.alignment_for_enum_constants=0
+org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer=16
+org.eclipse.jdt.core.formatter.alignment_for_method_declaration=0
+org.eclipse.jdt.core.formatter.alignment_for_multiple_fields=16
+org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_resources_in_try=80
+org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation=16
+org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_union_type_in_multicatch=16
+org.eclipse.jdt.core.formatter.blank_lines_after_imports=1
+org.eclipse.jdt.core.formatter.blank_lines_after_package=1
+org.eclipse.jdt.core.formatter.blank_lines_before_field=0
+org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration=0
+org.eclipse.jdt.core.formatter.blank_lines_before_imports=1
+org.eclipse.jdt.core.formatter.blank_lines_before_member_type=1
+org.eclipse.jdt.core.formatter.blank_lines_before_method=1
+org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk=1
+org.eclipse.jdt.core.formatter.blank_lines_before_package=1
+org.eclipse.jdt.core.formatter.blank_lines_between_import_groups=1
+org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations=1
+org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_array_initializer=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_block=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_block_in_case=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_enum_constant=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_method_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_switch=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_type_declaration=end_of_line
+org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_block_comment=false
+org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment=false
+org.eclipse.jdt.core.formatter.comment.format_block_comments=true
+org.eclipse.jdt.core.formatter.comment.format_header=false
+org.eclipse.jdt.core.formatter.comment.format_html=true
+org.eclipse.jdt.core.formatter.comment.format_javadoc_comments=true
+org.eclipse.jdt.core.formatter.comment.format_line_comments=true
+org.eclipse.jdt.core.formatter.comment.format_source_code=true
+org.eclipse.jdt.core.formatter.comment.indent_parameter_description=true
+org.eclipse.jdt.core.formatter.comment.indent_root_tags=true
+org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags=do not insert
+org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter=do not insert
+org.eclipse.jdt.core.formatter.comment.line_length=130
+org.eclipse.jdt.core.formatter.comment.new_lines_at_block_boundaries=true
+org.eclipse.jdt.core.formatter.comment.new_lines_at_javadoc_boundaries=false
+org.eclipse.jdt.core.formatter.comment.preserve_white_space_between_code_and_line_comments=false
+org.eclipse.jdt.core.formatter.compact_else_if=true
+org.eclipse.jdt.core.formatter.continuation_indentation=1
+org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer=1
+org.eclipse.jdt.core.formatter.disabling_tag=@off
+org.eclipse.jdt.core.formatter.enabling_tag=@on
+org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line=false
+org.eclipse.jdt.core.formatter.format_line_comment_starting_on_first_column=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header=true
+org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases=true
+org.eclipse.jdt.core.formatter.indent_empty_lines=false
+org.eclipse.jdt.core.formatter.indent_statements_compare_to_block=true
+org.eclipse.jdt.core.formatter.indent_statements_compare_to_body=true
+org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases=true
+org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch=false
+org.eclipse.jdt.core.formatter.indentation.size=4
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_field=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_local_variable=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_method=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_package=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_parameter=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_type=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_label=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing=insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_annotation_declaration=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_anonymous_type_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_block=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_constant=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_declaration=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_method_body=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter=insert
+org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_binary_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block=insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_ellipsis=insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_try=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_try_resources=insert
+org.eclipse.jdt.core.formatter.insert_space_after_unary_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter=insert
+org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_binary_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_try=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert=insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_ellipsis=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_try=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while=insert
+org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_return=insert
+org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw=insert
+org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_semicolon=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_try_resources=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_unary_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.join_lines_in_comments=true
+org.eclipse.jdt.core.formatter.join_wrapped_lines=true
+org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line=false
+org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line=false
+org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line=true
+org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line=false
+org.eclipse.jdt.core.formatter.lineSplit=130
+org.eclipse.jdt.core.formatter.never_indent_block_comments_on_first_column=true
+org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column=true
+org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body=0
+org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve=1
+org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line=true
+org.eclipse.jdt.core.formatter.tabulation.char=tab
+org.eclipse.jdt.core.formatter.tabulation.size=3
+org.eclipse.jdt.core.formatter.use_on_off_tags=true
+org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations=false
+org.eclipse.jdt.core.formatter.wrap_before_binary_operator=true
+org.eclipse.jdt.core.formatter.wrap_before_or_operator_multicatch=true
+org.eclipse.jdt.core.formatter.wrap_outer_expressions_when_nested=true
diff --git a/extensions/gdx-tiled-preprocessor/.settings/org.eclipse.jdt.ui.prefs b/extensions/gdx-tiled-preprocessor/.settings/org.eclipse.jdt.ui.prefs
new file mode 100644
index 0000000..12ca759
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/.settings/org.eclipse.jdt.ui.prefs
@@ -0,0 +1,3 @@
+eclipse.preferences.version=1
+formatter_profile=_libgdx
+formatter_settings_version=12
diff --git a/extensions/gdx-tiled-preprocessor/AUTHORS b/extensions/gdx-tiled-preprocessor/AUTHORS
new file mode 100644
index 0000000..2de4861
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/AUTHORS
@@ -0,0 +1,10 @@
+# This is the official list of the AUTHORS of libgdx
+# for copyright purposes.
+# This file is distinct from the CONTRIBUTORS files.
+# See the latter for an explanation.
+
+# Names should be added to this file as
+#	Name or Organization <email address>
+# The email address is not required for organizations.
+Mario Zechner <badlogicgames@gmail.com>
+Nathan Sweet <nathan.sweet@gmail.com> 
\ No newline at end of file
diff --git a/extensions/gdx-tiled-preprocessor/CC-LICENSE b/extensions/gdx-tiled-preprocessor/CC-LICENSE
new file mode 100644
index 0000000..242ce32
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/CC-LICENSE
@@ -0,0 +1,63 @@
+License
+
+THE WORK (AS DEFINED BELOW) IS PROVIDED UNDER THE TERMS OF THIS CREATIVE COMMONS PUBLIC LICENSE ("CCPL" OR "LICENSE"). THE WORK IS PROTECTED BY COPYRIGHT AND/OR OTHER APPLICABLE LAW. ANY USE OF THE WORK OTHER THAN AS AUTHORIZED UNDER THIS LICENSE OR COPYRIGHT LAW IS PROHIBITED.
+
+BY EXERCISING ANY RIGHTS TO THE WORK PROVIDED HERE, YOU ACCEPT AND AGREE TO BE BOUND BY THE TERMS OF THIS LICENSE. TO THE EXTENT THIS LICENSE MAY BE CONSIDERED TO BE A CONTRACT, THE LICENSOR GRANTS YOU THE RIGHTS CONTAINED HERE IN CONSIDERATION OF YOUR ACCEPTANCE OF SUCH TERMS AND CONDITIONS.
+
+1. Definitions
+
+   1. "Adaptation" means a work based upon the Work, or upon the Work and other pre-existing works, such as a translation, adaptation, derivative work, arrangement of music or other alterations of a literary or artistic work, or phonogram or performance and includes cinematographic adaptations or any other form in which the Work may be recast, transformed, or adapted including in any form recognizably derived from the original, except that a work that constitutes a Collection will not be considered an Adaptation for the purpose of this License. For the avoidance of doubt, where the Work is a musical work, performance or phonogram, the synchronization of the Work in timed-relation with a moving image ("synching") will be considered an Adaptation for the purpose of this License.
+   2. "Collection" means a collection of literary or artistic works, such as encyclopedias and anthologies, or performances, phonograms or broadcasts, or other works or subject matter other than works listed in Section 1(f) below, which, by reason of the selection and arrangement of their contents, constitute intellectual creations, in which the Work is included in its entirety in unmodified form along with one or more other contributions, each constituting separate and independent works in themselves, which together are assembled into a collective whole. A work that constitutes a Collection will not be considered an Adaptation (as defined below) for the purposes of this License.
+   3. "Creative Commons Compatible License" means a license that is listed at http://creativecommons.org/compatiblelicenses that has been approved by Creative Commons as being essentially equivalent to this License, including, at a minimum, because that license: (i) contains terms that have the same purpose, meaning and effect as the License Elements of this License; and, (ii) explicitly permits the relicensing of adaptations of works made available under that license under this License or a Creative Commons jurisdiction license with the same License Elements as this License.
+   4. "Distribute" means to make available to the public the original and copies of the Work or Adaptation, as appropriate, through sale or other transfer of ownership.
+   5. "License Elements" means the following high-level license attributes as selected by Licensor and indicated in the title of this License: Attribution, ShareAlike.
+   6. "Licensor" means the individual, individuals, entity or entities that offer(s) the Work under the terms of this License.
+   7. "Original Author" means, in the case of a literary or artistic work, the individual, individuals, entity or entities who created the Work or if no individual or entity can be identified, the publisher; and in addition (i) in the case of a performance the actors, singers, musicians, dancers, and other persons who act, sing, deliver, declaim, play in, interpret or otherwise perform literary or artistic works or expressions of folklore; (ii) in the case of a phonogram the producer being the person or legal entity who first fixes the sounds of a performance or other sounds; and, (iii) in the case of broadcasts, the organization that transmits the broadcast.
+   8. "Work" means the literary and/or artistic work offered under the terms of this License including without limitation any production in the literary, scientific and artistic domain, whatever may be the mode or form of its expression including digital form, such as a book, pamphlet and other writing; a lecture, address, sermon or other work of the same nature; a dramatic or dramatico-musical work; a choreographic work or entertainment in dumb show; a musical composition with or without words; a cinematographic work to which are assimilated works expressed by a process analogous to cinematography; a work of drawing, painting, architecture, sculpture, engraving or lithography; a photographic work to which are assimilated works expressed by a process analogous to photography; a work of applied art; an illustration, map, plan, sketch or three-dimensional work relative to geography, topography, architecture or science; a performance; a broadcast; a phonogram; a compilation of data to the extent it is protected as a copyrightable work; or a work performed by a variety or circus performer to the extent it is not otherwise considered a literary or artistic work.
+   9. "You" means an individual or entity exercising rights under this License who has not previously violated the terms of this License with respect to the Work, or who has received express permission from the Licensor to exercise rights under this License despite a previous violation.
+  10. "Publicly Perform" means to perform public recitations of the Work and to communicate to the public those public recitations, by any means or process, including by wire or wireless means or public digital performances; to make available to the public Works in such a way that members of the public may access these Works from a place and at a place individually chosen by them; to perform the Work to the public by any means or process and the communication to the public of the performances of the Work, including by public digital performance; to broadcast and rebroadcast the Work by any means including signs, sounds or images.
+  11. "Reproduce" means to make copies of the Work by any means including without limitation by sound or visual recordings and the right of fixation and reproducing fixations of the Work, including storage of a protected performance or phonogram in digital form or other electronic medium.
+
+2. Fair Dealing Rights. Nothing in this License is intended to reduce, limit, or restrict any uses free from copyright or rights arising from limitations or exceptions that are provided for in connection with the copyright protection under copyright law or other applicable laws.
+
+3. License Grant. Subject to the terms and conditions of this License, Licensor hereby grants You a worldwide, royalty-free, non-exclusive, perpetual (for the duration of the applicable copyright) license to exercise the rights in the Work as stated below:
+
+   1. to Reproduce the Work, to incorporate the Work into one or more Collections, and to Reproduce the Work as incorporated in the Collections;
+   2. to create and Reproduce Adaptations provided that any such Adaptation, including any translation in any medium, takes reasonable steps to clearly label, demarcate or otherwise identify that changes were made to the original Work. For example, a translation could be marked "The original work was translated from English to Spanish," or a modification could indicate "The original work has been modified.";
+   3. to Distribute and Publicly Perform the Work including as incorporated in Collections; and,
+   4. to Distribute and Publicly Perform Adaptations.
+   5.
+
+      For the avoidance of doubt:
+         1. Non-waivable Compulsory License Schemes. In those jurisdictions in which the right to collect royalties through any statutory or compulsory licensing scheme cannot be waived, the Licensor reserves the exclusive right to collect such royalties for any exercise by You of the rights granted under this License;
+         2. Waivable Compulsory License Schemes. In those jurisdictions in which the right to collect royalties through any statutory or compulsory licensing scheme can be waived, the Licensor waives the exclusive right to collect such royalties for any exercise by You of the rights granted under this License; and,
+         3. Voluntary License Schemes. The Licensor waives the right to collect royalties, whether individually or, in the event that the Licensor is a member of a collecting society that administers voluntary licensing schemes, via that society, from any exercise by You of the rights granted under this License.
+
+The above rights may be exercised in all media and formats whether now known or hereafter devised. The above rights include the right to make such modifications as are technically necessary to exercise the rights in other media and formats. Subject to Section 8(f), all rights not expressly granted by Licensor are hereby reserved.
+
+4. Restrictions. The license granted in Section 3 above is expressly made subject to and limited by the following restrictions:
+
+   1. You may Distribute or Publicly Perform the Work only under the terms of this License. You must include a copy of, or the Uniform Resource Identifier (URI) for, this License with every copy of the Work You Distribute or Publicly Perform. You may not offer or impose any terms on the Work that restrict the terms of this License or the ability of the recipient of the Work to exercise the rights granted to that recipient under the terms of the License. You may not sublicense the Work. You must keep intact all notices that refer to this License and to the disclaimer of warranties with every copy of the Work You Distribute or Publicly Perform. When You Distribute or Publicly Perform the Work, You may not impose any effective technological measures on the Work that restrict the ability of a recipient of the Work from You to exercise the rights granted to that recipient under the terms of the License. This Section 4(a) applies to the Work as incorporated in a Collection, but this does not require the Collection apart from the Work itself to be made subject to the terms of this License. If You create a Collection, upon notice from any Licensor You must, to the extent practicable, remove from the Collection any credit as required by Section 4(c), as requested. If You create an Adaptation, upon notice from any Licensor You must, to the extent practicable, remove from the Adaptation any credit as required by Section 4(c), as requested.
+   2. You may Distribute or Publicly Perform an Adaptation only under the terms of: (i) this License; (ii) a later version of this License with the same License Elements as this License; (iii) a Creative Commons jurisdiction license (either this or a later license version) that contains the same License Elements as this License (e.g., Attribution-ShareAlike 3.0 US)); (iv) a Creative Commons Compatible License. If you license the Adaptation under one of the licenses mentioned in (iv), you must comply with the terms of that license. If you license the Adaptation under the terms of any of the licenses mentioned in (i), (ii) or (iii) (the "Applicable License"), you must comply with the terms of the Applicable License generally and the following provisions: (I) You must include a copy of, or the URI for, the Applicable License with every copy of each Adaptation You Distribute or Publicly Perform; (II) You may not offer or impose any terms on the Adaptation that restrict the terms of the Applicable License or the ability of the recipient of the Adaptation to exercise the rights granted to that recipient under the terms of the Applicable License; (III) You must keep intact all notices that refer to the Applicable License and to the disclaimer of warranties with every copy of the Work as included in the Adaptation You Distribute or Publicly Perform; (IV) when You Distribute or Publicly Perform the Adaptation, You may not impose any effective technological measures on the Adaptation that restrict the ability of a recipient of the Adaptation from You to exercise the rights granted to that recipient under the terms of the Applicable License. This Section 4(b) applies to the Adaptation as incorporated in a Collection, but this does not require the Collection apart from the Adaptation itself to be made subject to the terms of the Applicable License.
+   3. If You Distribute, or Publicly Perform the Work or any Adaptations or Collections, You must, unless a request has been made pursuant to Section 4(a), keep intact all copyright notices for the Work and provide, reasonable to the medium or means You are utilizing: (i) the name of the Original Author (or pseudonym, if applicable) if supplied, and/or if the Original Author and/or Licensor designate another party or parties (e.g., a sponsor institute, publishing entity, journal) for attribution ("Attribution Parties") in Licensor's copyright notice, terms of service or by other reasonable means, the name of such party or parties; (ii) the title of the Work if supplied; (iii) to the extent reasonably practicable, the URI, if any, that Licensor specifies to be associated with the Work, unless such URI does not refer to the copyright notice or licensing information for the Work; and (iv) , consistent with Ssection 3(b), in the case of an Adaptation, a credit identifying the use of the Work in the Adaptation (e.g., "French translation of the Work by Original Author," or "Screenplay based on original Work by Original Author"). The credit required by this Section 4(c) may be implemented in any reasonable manner; provided, however, that in the case of a Adaptation or Collection, at a minimum such credit will appear, if a credit for all contributing authors of the Adaptation or Collection appears, then as part of these credits and in a manner at least as prominent as the credits for the other contributing authors. For the avoidance of doubt, You may only use the credit required by this Section for the purpose of attribution in the manner set out above and, by exercising Your rights under this License, You may not implicitly or explicitly assert or imply any connection with, sponsorship or endorsement by the Original Author, Licensor and/or Attribution Parties, as appropriate, of You or Your use of the Work, without the separate, express prior written permission of the Original Author, Licensor and/or Attribution Parties.
+   4. Except as otherwise agreed in writing by the Licensor or as may be otherwise permitted by applicable law, if You Reproduce, Distribute or Publicly Perform the Work either by itself or as part of any Adaptations or Collections, You must not distort, mutilate, modify or take other derogatory action in relation to the Work which would be prejudicial to the Original Author's honor or reputation. Licensor agrees that in those jurisdictions (e.g. Japan), in which any exercise of the right granted in Section 3(b) of this License (the right to make Adaptations) would be deemed to be a distortion, mutilation, modification or other derogatory action prejudicial to the Original Author's honor and reputation, the Licensor will waive or not assert, as appropriate, this Section, to the fullest extent permitted by the applicable national law, to enable You to reasonably exercise Your right under Section 3(b) of this License (right to make Adaptations) but not otherwise.
+
+5. Representations, Warranties and Disclaimer
+
+UNLESS OTHERWISE MUTUALLY AGREED TO BY THE PARTIES IN WRITING, LICENSOR OFFERS THE WORK AS-IS AND MAKES NO REPRESENTATIONS OR WARRANTIES OF ANY KIND CONCERNING THE WORK, EXPRESS, IMPLIED, STATUTORY OR OTHERWISE, INCLUDING, WITHOUT LIMITATION, WARRANTIES OF TITLE, MERCHANTIBILITY, FITNESS FOR A PARTICULAR PURPOSE, NONINFRINGEMENT, OR THE ABSENCE OF LATENT OR OTHER DEFECTS, ACCURACY, OR THE PRESENCE OF ABSENCE OF ERRORS, WHETHER OR NOT DISCOVERABLE. SOME JURISDICTIONS DO NOT ALLOW THE EXCLUSION OF IMPLIED WARRANTIES, SO SUCH EXCLUSION MAY NOT APPLY TO YOU.
+
+6. Limitation on Liability. EXCEPT TO THE EXTENT REQUIRED BY APPLICABLE LAW, IN NO EVENT WILL LICENSOR BE LIABLE TO YOU ON ANY LEGAL THEORY FOR ANY SPECIAL, INCIDENTAL, CONSEQUENTIAL, PUNITIVE OR EXEMPLARY DAMAGES ARISING OUT OF THIS LICENSE OR THE USE OF THE WORK, EVEN IF LICENSOR HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
+
+7. Termination
+
+   1. This License and the rights granted hereunder will terminate automatically upon any breach by You of the terms of this License. Individuals or entities who have received Adaptations or Collections from You under this License, however, will not have their licenses terminated provided such individuals or entities remain in full compliance with those licenses. Sections 1, 2, 5, 6, 7, and 8 will survive any termination of this License.
+   2. Subject to the above terms and conditions, the license granted here is perpetual (for the duration of the applicable copyright in the Work). Notwithstanding the above, Licensor reserves the right to release the Work under different license terms or to stop distributing the Work at any time; provided, however that any such election will not serve to withdraw this License (or any other license that has been, or is required to be, granted under the terms of this License), and this License will continue in full force and effect unless terminated as stated above.
+
+8. Miscellaneous
+
+   1. Each time You Distribute or Publicly Perform the Work or a Collection, the Licensor offers to the recipient a license to the Work on the same terms and conditions as the license granted to You under this License.
+   2. Each time You Distribute or Publicly Perform an Adaptation, Licensor offers to the recipient a license to the original Work on the same terms and conditions as the license granted to You under this License.
+   3. If any provision of this License is invalid or unenforceable under applicable law, it shall not affect the validity or enforceability of the remainder of the terms of this License, and without further action by the parties to this agreement, such provision shall be reformed to the minimum extent necessary to make such provision valid and enforceable.
+   4. No term or provision of this License shall be deemed waived and no breach consented to unless such waiver or consent shall be in writing and signed by the party to be charged with such waiver or consent.
+   5. This License constitutes the entire agreement between the parties with respect to the Work licensed here. There are no understandings, agreements or representations with respect to the Work not specified here. Licensor shall not be bound by any additional provisions that may appear in any communication from You. This License may not be modified without the mutual written agreement of the Licensor and You.
+   6. The rights granted under, and the subject matter referenced, in this License were drafted utilizing the terminology of the Berne Convention for the Protection of Literary and Artistic Works (as amended on September 28, 1979), the Rome Convention of 1961, the WIPO Copyright Treaty of 1996, the WIPO Performances and Phonograms Treaty of 1996 and the Universal Copyright Convention (as revised on July 24, 1971). These rights and subject matter take effect in the relevant jurisdiction in which the License terms are sought to be enforced according to the corresponding provisions of the implementation of those treaty provisions in the applicable national law. If the standard suite of rights granted under applicable copyright law includes additional rights not granted under this License, such additional rights are deemed to be included in the License; this License is not intended to restrict the license of any rights under applicable law.
diff --git a/extensions/gdx-tiled-preprocessor/CONTRIBUTORS b/extensions/gdx-tiled-preprocessor/CONTRIBUTORS
new file mode 100644
index 0000000..c06c300
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/CONTRIBUTORS
@@ -0,0 +1,13 @@
+# This is the official list of people who can contribute
+# (and who have contributed) code to the libgdx project
+# repository.
+# The AUTHORS file lists the copyright holders; this file
+# lists people. Contributors must sign the CLA to grant
+# the AUTHORS copyright within the terms of the Apache 2 license.
+#
+Tony Wang manifaust@gmail.com, 
+Christoph Widulle christoph.widulle@googlemail.com, 
+Dave Clayton davedx@gmail.com, 
+David Fraska dfraska@gmail.com, 
+Moritz Post moritzpost@gmail.com, 
+Eric Spitz eric.spitz2000@gmail.com
\ No newline at end of file
diff --git a/extensions/gdx-tiled-preprocessor/LICENSE b/extensions/gdx-tiled-preprocessor/LICENSE
new file mode 100644
index 0000000..4a45986
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/LICENSE
@@ -0,0 +1,177 @@
+
+                                 Apache License
+                           Version 2.0, January 2004
+                        http://www.apache.org/licenses/
+
+   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
+
+   1. Definitions.
+
+      "License" shall mean the terms and conditions for use, reproduction,
+      and distribution as defined by Sections 1 through 9 of this document.
+
+      "Licensor" shall mean the copyright owner or entity authorized by
+      the copyright owner that is granting the License.
+
+      "Legal Entity" shall mean the union of the acting entity and all
+      other entities that control, are controlled by, or are under common
+      control with that entity. For the purposes of this definition,
+      "control" means (i) the power, direct or indirect, to cause the
+      direction or management of such entity, whether by contract or
+      otherwise, or (ii) ownership of fifty percent (50%) or more of the
+      outstanding shares, or (iii) beneficial ownership of such entity.
+
+      "You" (or "Your") shall mean an individual or Legal Entity
+      exercising permissions granted by this License.
+
+      "Source" form shall mean the preferred form for making modifications,
+      including but not limited to software source code, documentation
+      source, and configuration files.
+
+      "Object" form shall mean any form resulting from mechanical
+      transformation or translation of a Source form, including but
+      not limited to compiled object code, generated documentation,
+      and conversions to other media types.
+
+      "Work" shall mean the work of authorship, whether in Source or
+      Object form, made available under the License, as indicated by a
+      copyright notice that is included in or attached to the work
+      (an example is provided in the Appendix below).
+
+      "Derivative Works" shall mean any work, whether in Source or Object
+      form, that is based on (or derived from) the Work and for which the
+      editorial revisions, annotations, elaborations, or other modifications
+      represent, as a whole, an original work of authorship. For the purposes
+      of this License, Derivative Works shall not include works that remain
+      separable from, or merely link (or bind by name) to the interfaces of,
+      the Work and Derivative Works thereof.
+
+      "Contribution" shall mean any work of authorship, including
+      the original version of the Work and any modifications or additions
+      to that Work or Derivative Works thereof, that is intentionally
+      submitted to Licensor for inclusion in the Work by the copyright owner
+      or by an individual or Legal Entity authorized to submit on behalf of
+      the copyright owner. For the purposes of this definition, "submitted"
+      means any form of electronic, verbal, or written communication sent
+      to the Licensor or its representatives, including but not limited to
+      communication on electronic mailing lists, source code control systems,
+      and issue tracking systems that are managed by, or on behalf of, the
+      Licensor for the purpose of discussing and improving the Work, but
+      excluding communication that is conspicuously marked or otherwise
+      designated in writing by the copyright owner as "Not a Contribution."
+
+      "Contributor" shall mean Licensor and any individual or Legal Entity
+      on behalf of whom a Contribution has been received by Licensor and
+      subsequently incorporated within the Work.
+
+   2. Grant of Copyright License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      copyright license to reproduce, prepare Derivative Works of,
+      publicly display, publicly perform, sublicense, and distribute the
+      Work and such Derivative Works in Source or Object form.
+
+   3. Grant of Patent License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      (except as stated in this section) patent license to make, have made,
+      use, offer to sell, sell, import, and otherwise transfer the Work,
+      where such license applies only to those patent claims licensable
+      by such Contributor that are necessarily infringed by their
+      Contribution(s) alone or by combination of their Contribution(s)
+      with the Work to which such Contribution(s) was submitted. If You
+      institute patent litigation against any entity (including a
+      cross-claim or counterclaim in a lawsuit) alleging that the Work
+      or a Contribution incorporated within the Work constitutes direct
+      or contributory patent infringement, then any patent licenses
+      granted to You under this License for that Work shall terminate
+      as of the date such litigation is filed.
+
+   4. Redistribution. You may reproduce and distribute copies of the
+      Work or Derivative Works thereof in any medium, with or without
+      modifications, and in Source or Object form, provided that You
+      meet the following conditions:
+
+      (a) You must give any other recipients of the Work or
+          Derivative Works a copy of this License; and
+
+      (b) You must cause any modified files to carry prominent notices
+          stating that You changed the files; and
+
+      (c) You must retain, in the Source form of any Derivative Works
+          that You distribute, all copyright, patent, trademark, and
+          attribution notices from the Source form of the Work,
+          excluding those notices that do not pertain to any part of
+          the Derivative Works; and
+
+      (d) If the Work includes a "NOTICE" text file as part of its
+          distribution, then any Derivative Works that You distribute must
+          include a readable copy of the attribution notices contained
+          within such NOTICE file, excluding those notices that do not
+          pertain to any part of the Derivative Works, in at least one
+          of the following places: within a NOTICE text file distributed
+          as part of the Derivative Works; within the Source form or
+          documentation, if provided along with the Derivative Works; or,
+          within a display generated by the Derivative Works, if and
+          wherever such third-party notices normally appear. The contents
+          of the NOTICE file are for informational purposes only and
+          do not modify the License. You may add Your own attribution
+          notices within Derivative Works that You distribute, alongside
+          or as an addendum to the NOTICE text from the Work, provided
+          that such additional attribution notices cannot be construed
+          as modifying the License.
+
+      You may add Your own copyright statement to Your modifications and
+      may provide additional or different license terms and conditions
+      for use, reproduction, or distribution of Your modifications, or
+      for any such Derivative Works as a whole, provided Your use,
+      reproduction, and distribution of the Work otherwise complies with
+      the conditions stated in this License.
+
+   5. Submission of Contributions. Unless You explicitly state otherwise,
+      any Contribution intentionally submitted for inclusion in the Work
+      by You to the Licensor shall be under the terms and conditions of
+      this License, without any additional terms or conditions.
+      Notwithstanding the above, nothing herein shall supersede or modify
+      the terms of any separate license agreement you may have executed
+      with Licensor regarding such Contributions.
+
+   6. Trademarks. This License does not grant permission to use the trade
+      names, trademarks, service marks, or product names of the Licensor,
+      except as required for reasonable and customary use in describing the
+      origin of the Work and reproducing the content of the NOTICE file.
+
+   7. Disclaimer of Warranty. Unless required by applicable law or
+      agreed to in writing, Licensor provides the Work (and each
+      Contributor provides its Contributions) on an "AS IS" BASIS,
+      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
+      implied, including, without limitation, any warranties or conditions
+      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
+      PARTICULAR PURPOSE. You are solely responsible for determining the
+      appropriateness of using or redistributing the Work and assume any
+      risks associated with Your exercise of permissions under this License.
+
+   8. Limitation of Liability. In no event and under no legal theory,
+      whether in tort (including negligence), contract, or otherwise,
+      unless required by applicable law (such as deliberate and grossly
+      negligent acts) or agreed to in writing, shall any Contributor be
+      liable to You for damages, including any direct, indirect, special,
+      incidental, or consequential damages of any character arising as a
+      result of this License or out of the use or inability to use the
+      Work (including but not limited to damages for loss of goodwill,
+      work stoppage, computer failure or malfunction, or any and all
+      other commercial damages or losses), even if such Contributor
+      has been advised of the possibility of such damages.
+
+   9. Accepting Warranty or Additional Liability. While redistributing
+      the Work or Derivative Works thereof, You may choose to offer,
+      and charge a fee for, acceptance of support, warranty, indemnity,
+      or other liability obligations and/or rights consistent with this
+      License. However, in accepting such obligations, You may act only
+      on Your own behalf and on Your sole responsibility, not on behalf
+      of any other Contributor, and only if You agree to indemnify,
+      defend, and hold each Contributor harmless for any liability
+      incurred by, or claims asserted against, such Contributor by reason
+      of your accepting any such warranty or additional liability.
+
+   END OF TERMS AND CONDITIONS
\ No newline at end of file
diff --git a/extensions/gdx-tiled-preprocessor/data/alignment test.tmx b/extensions/gdx-tiled-preprocessor/data/alignment test.tmx
new file mode 100644
index 0000000..89ca245
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/data/alignment test.tmx	
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<map version="1.0" orientation="orthogonal" width="14" height="14" tilewidth="64" tileheight="64">
+ <tileset firstgid="1" name="perspective walls" tilewidth="64" tileheight="64">
+  <image source="perspective walls.png"/>
+  <tile id="13">
+   <properties>
+    <property name="door" value="true"/>
+   </properties>
+  </tile>
+  <tile id="14">
+   <properties>
+    <property name="door" value="true"/>
+   </properties>
+  </tile>
+  <tile id="15">
+   <properties>
+    <property name="pickup" value="true"/>
+   </properties>
+  </tile>
+ </tileset>
+ <tileset firstgid="17" name="perspective walls test" tilewidth="64" tileheight="64">
+  <image source="perspective walls test.png"/>
+ </tileset>
+ <layer name="Walls" width="14" height="14">
+  <data encoding="base64">
+   JAAAACUAAAAlAAAAJQAAACUAAAAlAAAAJQAAACUAAAAlAAAAJQAAACUAAAAlAAAAJQAAACMAAAAnAAAAAQAAABEAAAAAAAAAAgAAABIAAAAAAAAAAwAAABMAAAAAAAAABAAAABQAAAAAAAAAKAAAACcAAAARAAAAAQAAAAAAAAASAAAAAgAAAAAAAAATAAAAAwAAAAAAAAAUAAAABAAAAAAAAAAoAAAAJwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAnAAAABQAAABUAAAAAAAAABgAAABYAAAAAAAAABwAAABcAAAAAAAAACAAAABgAAAAAAAAAKAAAACcAAAAVAAAABQAAAAAAAAAWAAAABgAAAAAAAAAXAAAABwAAAAAAAAAYAAAACAAAAAAAAAAoAAAAJwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAnAAAACQAAABkAAAAAAAAACgAAABoAAAAAAAAACwAAABsAAAAAAAAADAAAABwAAAAAAAAAKAAAACcAAAAZAAAACQAAAAAAAAAaAAAACgAAAAAAAAAbAAAACwAAAAAAAAAcAAAADAAAAAAAAAAoAAAAJwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAnAAAADQAAAB0AAAAAAAAADgAAAB4AAAAAAAAADwAAAB8AAAAAAAAAEAAAACAAAAAAAAAAKAAAACcAAAAdAAAADQAAAAAAAAAeAAAADgAAAAAAAAAfAAAADwAAAAAAAAAgAAAAEAAAAAAAAAAoAAAAJwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAiAAAAJgAAACYAAAAmAAAAJgAAACYAAAAmAAAAJgAAACYAAAAmAAAAJgAAACYAAAAmAAAAIQAAAA==
+  </data>
+ </layer>
+ <layer name="Walls level 2" width="14" height="14">
+  <data encoding="base64">

+  </data>
+ </layer>
+ <layer name="Walls level 3" width="14" height="14">
+  <data encoding="base64">

+  </data>
+ </layer>
+</map>
diff --git a/extensions/gdx-tiled-preprocessor/data/margin spacing doctype test.tmx b/extensions/gdx-tiled-preprocessor/data/margin spacing doctype test.tmx
new file mode 100644
index 0000000..4c31dc1
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/data/margin spacing doctype test.tmx	
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE map SYSTEM "http://mapeditor.org/dtd/1.0/map.dtd">
+<map version="1.0" orientation="orthogonal" width="40" height="40" tilewidth="32" tileheight="32">
+ <tileset firstgid="1" name="Desert" tilewidth="32" tileheight="32" spacing="1" margin="1">
+  <image source="tmw-desert-spacing.png"/>
+ </tileset>
+ <layer name="Ground" width="40" height="40">
+  <data encoding="base64" compression="gzip">
+   H4sIAAAAAAAAA+2Y2QrCMBBFo31wA+sCrlirdd/q/3+dIzZUhtAmMRlH6cPBBlJyvDO2g5EQIvJIFwiBnudzbLgp/JYMvH4lv2dWI2AMTBj4qKgBdSBA3j7OmgIzA+ZAC2gDHYIsVsDagMSj36HAbwOcgO0X/YrySzTzpPDbMfS7Iy/sdxGv/r8S++Gew+uyvHBfuvBT/Q4OKD95XeaHc3WV3x6tpY9pfr7riz0xx6x+upwd+DUymiJ/FxURaO6TLD70C0U+X8jvWkRHc5/qPhu/scjniz4wKGGouU91n8/eoyYW6jmHk2dM6GMzm1F43bJPnWfn+/sncXS+Ljp+T6d7tpfSL2Xoh/uam59Nfd/nCyq/1MAPZ8ktP1WtOftR5mczm1H6/QsxA4dfAWfF7b/BqsYVFZ/xABSXR5cAGQAA
+  </data>
+ </layer>
+</map>
diff --git a/extensions/gdx-tiled-preprocessor/data/output/alignment test.tmx b/extensions/gdx-tiled-preprocessor/data/output/alignment test.tmx
new file mode 100644
index 0000000..b24849d
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/data/output/alignment test.tmx	
@@ -0,0 +1,38 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?><map height="14" orientation="orthogonal" tileheight="64" tilewidth="64" version="1.0" width="14"><properties><property name="blended tiles" value="1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40"/></properties>
+ <tileset firstgid="1" name="perspective walls" tileheight="64" tilewidth="64">
+  <image source="perspective walls.png"/>
+  <tile id="13">
+   <properties>
+    <property name="door" value="true"/>
+   </properties>
+  </tile>
+  <tile id="14">
+   <properties>
+    <property name="door" value="true"/>
+   </properties>
+  </tile>
+  <tile id="15">
+   <properties>
+    <property name="pickup" value="true"/>
+   </properties>
+  </tile>
+ </tileset>
+ <tileset firstgid="17" name="perspective walls test" tileheight="64" tilewidth="64">
+  <image source="perspective walls test.png"/>
+ </tileset>
+ <layer height="14" name="Walls" width="14">
+  <data encoding="base64">
+   JAAAACUAAAAlAAAAJQAAACUAAAAlAAAAJQAAACUAAAAlAAAAJQAAACUAAAAlAAAAJQAAACMAAAAnAAAAAQAAABEAAAAAAAAAAgAAABIAAAAAAAAAAwAAABMAAAAAAAAABAAAABQAAAAAAAAAKAAAACcAAAARAAAAAQAAAAAAAAASAAAAAgAAAAAAAAATAAAAAwAAAAAAAAAUAAAABAAAAAAAAAAoAAAAJwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAnAAAABQAAABUAAAAAAAAABgAAABYAAAAAAAAABwAAABcAAAAAAAAACAAAABgAAAAAAAAAKAAAACcAAAAVAAAABQAAAAAAAAAWAAAABgAAAAAAAAAXAAAABwAAAAAAAAAYAAAACAAAAAAAAAAoAAAAJwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAnAAAACQAAABkAAAAAAAAACgAAABoAAAAAAAAACwAAABsAAAAAAAAADAAAABwAAAAAAAAAKAAAACcAAAAZAAAACQAAAAAAAAAaAAAACgAAAAAAAAAbAAAACwAAAAAAAAAcAAAADAAAAAAAAAAoAAAAJwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAnAAAADQAAAB0AAAAAAAAADgAAAB4AAAAAAAAADwAAAB8AAAAAAAAAEAAAACAAAAAAAAAAKAAAACcAAAAdAAAADQAAAAAAAAAeAAAADgAAAAAAAAAfAAAADwAAAAAAAAAgAAAAEAAAAAAAAAAoAAAAJwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAiAAAAJgAAACYAAAAmAAAAJgAAACYAAAAmAAAAJgAAACYAAAAmAAAAJgAAACYAAAAmAAAAIQAAAA==
+  </data>
+ </layer>
+ <layer height="14" name="Walls level 2" width="14">
+  <data encoding="base64">
+   AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
+  </data>
+ </layer>
+ <layer height="14" name="Walls level 3" width="14">
+  <data encoding="base64">
+   AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
+  </data>
+ </layer>
+</map>
\ No newline at end of file
diff --git a/extensions/gdx-tiled-preprocessor/data/output/margin spacing doctype test.tmx b/extensions/gdx-tiled-preprocessor/data/output/margin spacing doctype test.tmx
new file mode 100644
index 0000000..bf944c7
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/data/output/margin spacing doctype test.tmx	
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?><map height="40" orientation="orthogonal" tileheight="32" tilewidth="32" version="1.0" width="40"><properties><property name="blended tiles" value=""/></properties>
+ <tileset firstgid="1" margin="1" name="Desert" spacing="1" tileheight="32" tilewidth="32">
+  <image source="tmw-desert-spacing.png"/>
+ </tileset>
+ <layer height="40" name="Ground" width="40">
+  <data compression="gzip" encoding="base64">
+   H4sIAAAAAAAAA+2Y2QrCMBBFo31wA+sCrlirdd/q/3+dIzZUhtAmMRlH6cPBBlJyvDO2g5EQIvJIFwiBnudzbLgp/JYMvH4lv2dWI2AMTBj4qKgBdSBA3j7OmgIzA+ZAC2gDHYIsVsDagMSj36HAbwOcgO0X/YrySzTzpPDbMfS7Iy/sdxGv/r8S++Gew+uyvHBfuvBT/Q4OKD95XeaHc3WV3x6tpY9pfr7riz0xx6x+upwd+DUymiJ/FxURaO6TLD70C0U+X8jvWkRHc5/qPhu/scjniz4wKGGouU91n8/eoyYW6jmHk2dM6GMzm1F43bJPnWfn+/sncXS+Ljp+T6d7tpfSL2Xoh/uam59Nfd/nCyq/1MAPZ8ktP1WtOftR5mczm1H6/QsxA4dfAWfF7b/BqsYVFZ/xABSXR5cAGQAA
+  </data>
+ </layer>
+</map>
\ No newline at end of file
diff --git a/extensions/gdx-tiled-preprocessor/data/output/perspective walls packfile b/extensions/gdx-tiled-preprocessor/data/output/perspective walls packfile
new file mode 100644
index 0000000..98d5e30
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/data/output/perspective walls packfile	
@@ -0,0 +1,117 @@
+
+perspective walls1.png
+format: RGBA8888
+filter: Nearest,Nearest
+repeat: none
+perspective walls
+  rotate: false
+  xy: 0, 0
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 2
+perspective walls
+  rotate: false
+  xy: 66, 0
+  size: 56, 64
+  orig: 64, 64
+  offset: 8, 0
+  index: 11
+perspective walls
+  rotate: false
+  xy: 0, 66
+  size: 56, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 9
+perspective walls
+  rotate: false
+  xy: 58, 66
+  size: 48, 64
+  orig: 64, 64
+  offset: 8, 0
+  index: 1
+perspective walls
+  rotate: false
+  xy: 0, 132
+  size: 40, 64
+  orig: 64, 64
+  offset: 12, 0
+  index: 14
+perspective walls
+  rotate: false
+  xy: 42, 132
+  size: 64, 56
+  orig: 64, 64
+  offset: 0, 0
+  index: 10
+perspective walls
+  rotate: false
+  xy: 0, 198
+  size: 64, 56
+  orig: 64, 64
+  offset: 0, 8
+  index: 8
+perspective walls
+  rotate: false
+  xy: 66, 198
+  size: 56, 56
+  orig: 64, 64
+  offset: 8, 0
+  index: 7
+perspective walls
+  rotate: false
+  xy: 0, 256
+  size: 56, 56
+  orig: 64, 64
+  offset: 0, 0
+  index: 6
+perspective walls
+  rotate: false
+  xy: 58, 256
+  size: 56, 56
+  orig: 64, 64
+  offset: 0, 8
+  index: 5
+perspective walls
+  rotate: false
+  xy: 0, 314
+  size: 56, 56
+  orig: 64, 64
+  offset: 8, 8
+  index: 4
+perspective walls
+  rotate: false
+  xy: 58, 314
+  size: 64, 48
+  orig: 64, 64
+  offset: 0, 8
+  index: 0
+perspective walls
+  rotate: false
+  xy: 0, 372
+  size: 48, 48
+  orig: 64, 64
+  offset: 8, 8
+  index: 3
+perspective walls
+  rotate: false
+  xy: 50, 372
+  size: 40, 41
+  orig: 64, 64
+  offset: 20, 19
+  index: 12
+perspective walls
+  rotate: false
+  xy: 0, 422
+  size: 64, 40
+  orig: 64, 64
+  offset: 0, 12
+  index: 13
+perspective walls
+  rotate: false
+  xy: 108, 66
+  size: 12, 16
+  orig: 64, 64
+  offset: 2, 0
+  index: 15
diff --git a/extensions/gdx-tiled-preprocessor/data/output/perspective walls test packfile b/extensions/gdx-tiled-preprocessor/data/output/perspective walls test packfile
new file mode 100644
index 0000000..db2a5b5
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/data/output/perspective walls test packfile	
@@ -0,0 +1,173 @@
+
+perspective walls test1.png
+format: RGBA8888
+filter: Nearest,Nearest
+repeat: none
+perspective walls test
+  rotate: false
+  xy: 0, 0
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 23
+perspective walls test
+  rotate: false
+  xy: 66, 0
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 22
+perspective walls test
+  rotate: false
+  xy: 132, 0
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 21
+perspective walls test
+  rotate: false
+  xy: 198, 0
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 20
+perspective walls test
+  rotate: false
+  xy: 264, 0
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 19
+perspective walls test
+  rotate: false
+  xy: 330, 0
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 18
+perspective walls test
+  rotate: false
+  xy: 396, 0
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 17
+perspective walls test
+  rotate: false
+  xy: 0, 66
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 16
+perspective walls test
+  rotate: false
+  xy: 0, 132
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 15
+perspective walls test
+  rotate: false
+  xy: 0, 198
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 14
+perspective walls test
+  rotate: false
+  xy: 0, 264
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 13
+perspective walls test
+  rotate: false
+  xy: 0, 330
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 12
+perspective walls test
+  rotate: false
+  xy: 0, 396
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 11
+perspective walls test
+  rotate: false
+  xy: 66, 66
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 10
+perspective walls test
+  rotate: false
+  xy: 132, 66
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 9
+perspective walls test
+  rotate: false
+  xy: 198, 66
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 8
+perspective walls test
+  rotate: false
+  xy: 264, 66
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 7
+perspective walls test
+  rotate: false
+  xy: 330, 66
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 6
+perspective walls test
+  rotate: false
+  xy: 396, 66
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 5
+perspective walls test
+  rotate: false
+  xy: 66, 132
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 4
+perspective walls test
+  rotate: false
+  xy: 66, 198
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 3
+perspective walls test
+  rotate: false
+  xy: 66, 264
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 2
+perspective walls test
+  rotate: false
+  xy: 66, 330
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 1
+perspective walls test
+  rotate: false
+  xy: 66, 396
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 0
diff --git a/extensions/gdx-tiled-preprocessor/data/output/perspective walls test1.png b/extensions/gdx-tiled-preprocessor/data/output/perspective walls test1.png
new file mode 100644
index 0000000..69362bc
Binary files /dev/null and b/extensions/gdx-tiled-preprocessor/data/output/perspective walls test1.png differ
diff --git a/extensions/gdx-tiled-preprocessor/data/output/perspective walls.tmx b/extensions/gdx-tiled-preprocessor/data/output/perspective walls.tmx
new file mode 100644
index 0000000..4dca724
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/data/output/perspective walls.tmx	
@@ -0,0 +1,35 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?><map height="32" orientation="orthogonal" tileheight="32" tilewidth="32" version="1.0" width="32"><properties><property name="blended tiles" value="1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40"/></properties>
+ <tileset firstgid="1" name="perspective walls" tileheight="64" tilewidth="64">
+ <image source="perspective walls.png"/>
+ <tile id="13">
+  <properties>
+   <property name="door" value="true"/>
+  </properties>
+ </tile>
+ <tile id="14">
+  <properties>
+   <property name="door" value="true"/>
+  </properties>
+ </tile>
+ <tile id="15">
+  <properties>
+   <property name="pickup" value="true"/>
+  </properties>
+ </tile>
+</tileset>
+ <layer height="32" name="Walls" width="32">
+  <data compression="zlib" encoding="base64">
+   eJztlOkKgCAQhLfb7vd/24SUBqMMNevHfDB4LczusihCCCHkTzRay4XaDP7rxf1882ZpzBqTp/Wo4c7ulRy96LUKRx3EFYF5+GpESpA9V845pT/Oxijn+luIw36k8vf1Rpk1xPepx9vczV+O3GL6n4JJ9vkSOf8/Qwb/r+vHP8ZVzFwTQshf2AA5owLB
+  </data>
+ </layer>
+ <layer height="32" name="Walls level 2" width="32">
+  <data compression="zlib" encoding="base64">
+   eJztzgEJAAAIA7CD/Tsb4yJbgiUA8MO0AwAAhy0rhAAE
+  </data>
+ </layer>
+ <layer height="32" name="Walls level 3" width="32">
+  <data compression="zlib" encoding="base64">
+   eJztzjENAAAIA7Al+PeMgz0cPK2CJgBwN98BAACqBS0QAAQ=
+  </data>
+ </layer>
+</map>
\ No newline at end of file
diff --git a/extensions/gdx-tiled-preprocessor/data/output/perspective walls1.png b/extensions/gdx-tiled-preprocessor/data/output/perspective walls1.png
new file mode 100644
index 0000000..4b1fc75
Binary files /dev/null and b/extensions/gdx-tiled-preprocessor/data/output/perspective walls1.png differ
diff --git a/extensions/gdx-tiled-preprocessor/data/output/tilemap csv.tmx b/extensions/gdx-tiled-preprocessor/data/output/tilemap csv.tmx
new file mode 100644
index 0000000..d4ab951
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/data/output/tilemap csv.tmx	
@@ -0,0 +1,174 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?><map height="30" orientation="orthogonal" tileheight="32" tilewidth="32" version="1.0" width="50">
+ <properties>
+  <property name="blended tiles" value="1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,5,6,7,8,9,10,11,12,13,14,15,16"/>
+ </properties>
+ <tileset firstgid="1" name="tileset" tileheight="32" tilewidth="32">
+  <image height="64" source="tileset.png" width="64"/>
+ </tileset>
+ <tileset firstgid="5" name="tileset2" tileheight="32" tilewidth="32">
+  <image height="64" source="tileset2.png" width="64"/>
+ </tileset>
+ <tileset firstgid="9" name="tileset3" tileheight="32" tilewidth="32">
+  <image height="64" source="tileset3.png" width="64"/>
+ </tileset>
+ <tileset firstgid="13" name="tileset4" tileheight="32" tilewidth="32">
+  <image height="64" source="tileset4.png" width="64"/>
+ </tileset>
+ <layer height="30" name="First Layer" width="50">
+  <properties>
+   <property name="Layer Property" value="Layer Value"/>
+  </properties>
+  <data encoding="csv">
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,1,2,1,1,1,2,1,2,2,2,2,1,2,1,1,1,1,2,2,2,1,1,2,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,1,1,2,1,1,1,2,1,2,1,1,1,1,2,1,1,1,1,2,1,1,2,1,2,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,1,2,1,1,1,2,1,2,1,1,1,1,2,1,1,1,1,2,1,1,2,1,2,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,1,1,2,1,1,1,2,1,2,1,1,1,1,2,1,1,1,1,2,1,1,2,1,2,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,1,2,2,2,2,2,1,2,2,2,1,1,2,1,1,1,1,2,2,2,1,1,2,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,1,1,2,1,1,1,2,1,2,1,1,1,1,2,1,1,1,1,2,1,1,1,1,2,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,1,2,1,1,1,2,1,2,1,1,1,1,2,1,1,1,1,2,1,1,1,1,2,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,1,1,2,1,1,1,2,1,2,1,1,1,1,2,1,1,1,1,2,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,1,2,1,1,1,2,1,2,2,2,2,1,2,2,2,2,1,2,1,1,1,1,2,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2
+</data>
+ </layer>
+ <layer height="30" name="Second Layer" width="50">
+  <data encoding="csv">
+0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,0,7,7,0,0,0,0,0,0,0,0,0,
+7,0,0,0,8,0,0,0,8,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,0,0,0,0,0,
+7,0,0,0,8,0,0,0,8,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,0,0,0,0,
+0,0,0,0,8,0,0,0,8,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,0,
+7,0,0,0,8,0,0,0,8,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+7,0,0,0,8,8,8,8,8,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+7,0,0,0,8,0,0,0,8,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,8,0,0,0,8,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+7,0,0,0,8,0,0,0,8,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,8,0,0,0,8,0,0,0,0,0,0,7,7,7,7,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,
+7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,7,0,0,0,0,0,
+7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,
+7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,
+7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,7,7,
+7,0,7,7,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,7,0,
+7,7,7,7,0,0,0,0,7,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,7,7,0,0,0,0,0,0,7,0,0,7,0,0,0,0,0,0,0,7,0,0,
+0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,7,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,7,0,0,
+0,0,7,7,0,0,7,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,7,0,0,0,0,0,7,0,0,0,7,0,0,0,0,0,7,0,0,0,
+0,0,7,0,0,7,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,7,7,0,0,0,7,0,0,0,0,0,7,0,0,0,0,7,0,0,0,
+0,0,7,0,0,7,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,7,0,0,0,7,0,0,0,0,0,7,0,0,0,0,7,0,0,0,
+0,7,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,7,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,7,0,0,7,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,7,0,7,0,0,0,0,0,0,7,0,0,7,0,0,0,0,
+0,0,0,7,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,7,7,0,7,0,0,0,0,
+0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,7,0,7,0,0,0,0,
+0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,
+0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
+</data>
+ </layer>
+ <layer height="30" name="Third Layer" width="50">
+  <data encoding="csv">
+0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,12,12,12,0,12,12,12,12,12,12,0,0,0,0,0,12,12,12,0,
+0,0,12,0,0,0,0,0,0,0,12,12,0,0,0,0,12,0,0,0,0,0,0,0,12,0,0,0,12,12,12,0,0,0,12,12,0,12,12,0,0,12,0,0,12,12,0,0,0,0,
+0,12,12,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,12,0,0,0,0,0,0,12,0,0,0,12,12,12,12,12,12,0,0,0,0,0,
+0,0,0,0,0,0,0,12,12,0,12,12,12,12,12,0,0,0,0,12,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,12,0,0,0,0,0,0,0,0,12,0,0,0,0,0,
+0,12,0,0,0,12,12,0,0,0,12,11,11,11,12,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,12,0,0,0,0,12,0,12,0,12,12,0,12,0,12,0,0,0,0,0,
+12,0,0,0,12,0,0,0,0,12,12,11,11,11,12,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,12,0,0,0,0,12,12,0,0,0,0,0,0,12,0,12,0,0,0,0,
+0,0,0,12,0,0,0,0,12,0,12,11,11,11,12,0,0,0,0,0,12,0,12,0,0,0,0,0,0,0,0,12,0,12,12,0,12,0,0,0,0,0,0,0,12,12,0,0,0,0,
+12,12,12,0,0,0,0,0,0,0,12,11,11,11,12,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,12,12,0,0,0,12,0,0,0,0,0,0,0,0,0,12,0,0,0,
+12,0,0,0,0,0,0,12,0,0,12,11,11,11,12,0,0,0,0,12,0,0,0,0,0,12,0,0,0,0,0,12,0,0,0,0,0,12,0,0,0,0,0,12,12,12,12,0,0,0,
+12,0,0,0,0,0,0,12,0,0,12,11,11,11,12,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,12,0,0,0,0,12,12,12,12,12,0,0,0,
+0,0,0,0,0,0,0,0,0,0,12,11,11,11,12,0,0,0,12,0,0,0,0,0,0,0,12,0,0,0,0,12,12,12,0,0,0,0,12,0,0,0,0,0,0,12,12,0,0,0,
+0,0,0,0,0,0,12,0,0,0,12,12,12,12,12,0,0,12,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,12,0,12,0,0,0,
+0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,12,12,0,0,0,12,0,0,0,0,12,0,0,0,12,0,0,
+0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,0,0,12,0,0,12,12,0,0,0,0,12,0,0,
+12,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,0,12,12,12,12,0,12,0,0,0,0,0,0,12,0,0,
+0,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,12,12,12,12,0,0,12,0,0,
+0,0,12,0,0,0,12,12,0,12,0,12,12,0,12,0,12,12,12,0,0,12,12,0,0,0,0,0,12,12,0,12,0,0,0,0,0,0,12,0,12,0,0,0,12,12,12,12,0,0,
+0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,12,12,12,12,12,12,0,0,0,12,0,0,0,0,12,0,0,0,0,0,0,0,12,12,0,0,0,
+0,0,12,12,12,12,12,12,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,12,0,0,0,0,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,12,0,0,0,0,
+0,0,0,12,0,0,0,0,12,12,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,12,0,0,0,0,0,0,0,12,12,0,12,0,0,0,
+0,0,0,0,12,0,0,0,0,0,12,12,0,0,0,0,0,12,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,12,0,12,0,0,0,0,0,12,0,0,0,0,12,0,0,
+0,0,0,0,0,12,0,0,0,0,0,0,12,12,0,0,12,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,12,12,0,12,0,12,0,12,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,12,0,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,12,12,0,0,0,0,12,12,0,0,0,0,0,0,0,0,12,0,
+0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,12,0,12,12,0,0,0,0,0,0,0,12,0,0,0,0,12,12,0,12,0,12,0,0,0,12,0,0,0,0,0,0,0,12,0,
+0,0,0,0,0,0,0,12,0,0,0,0,0,0,12,0,0,0,0,0,12,0,12,0,0,0,0,12,0,0,0,12,12,12,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,12,
+0,0,0,0,0,0,0,12,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,12,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,12,12,
+0,0,0,0,0,0,0,12,12,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,12,0,0,
+0,0,0,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,
+0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
+</data>
+ </layer>
+ <layer height="30" name="Fourth Layer" width="50">
+  <data encoding="csv">
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,16,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,16,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,16,16,0,16,16,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,16,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,16,0,16,16,16,0,0,0,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,16,16,0,16,0,0,0,0,0,16,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,16,16,0,0,16,16,16,16,16,16,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,16,0,0,16,16,16,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,16,16,16,16,16,0,0,0,0,0,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,16,16,16,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,16,16,0,16,0,0,0,0,16,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,16,0,0,0,16,0,0,0,0,0,16,16,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,16,0,0,16,16,16,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,16,16,16,16,0,0,16,16,16,16,16,0,16,16,16,16,0,0,15,15,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,16,0,16,16,0,16,16,16,16,16,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,15,15,0,0,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,15,0,0,15,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
+</data>
+ </layer>
+ <objectgroup height="30" name="Object_Layer" width="50">
+  <properties>
+   <property name="Objectgroup property" value="Objectgroup value"/>
+  </properties>
+  <object height="131" name="Touching H" type="mytype1" width="154" x="186" y="187"/>
+  <object height="68" name="Touching P" type="mytype2" width="82" x="599" y="159">
+   <properties>
+    <property name="object property" value="object value"/>
+   </properties>
+  </object>
+  <object name="Touching L" x="579" y="352"/>
+  <object name="Touching !" x="814" y="207"/>
+  <object name="Upper Left" x="0" y="0"/>
+  <object name="Upper Right" x="1600" y="0"/>
+  <object name="Lower Right" x="1600" y="960"/>
+  <object name="Lower Left" x="0" y="960"/>
+  <object gid="6" name="tile object" type="tile object type" x="533" y="272"/>
+ </objectgroup>
+</map>
\ No newline at end of file
diff --git a/extensions/gdx-tiled-preprocessor/data/output/tilemap gzip.tmx b/extensions/gdx-tiled-preprocessor/data/output/tilemap gzip.tmx
new file mode 100644
index 0000000..922f507
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/data/output/tilemap gzip.tmx	
@@ -0,0 +1,57 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?><map height="30" orientation="orthogonal" tileheight="32" tilewidth="32" version="1.0" width="50">
+ <properties>
+  <property name="blended tiles" value="1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,5,6,7,8,9,10,11,12,13,14,15,16"/>
+ </properties>
+ <tileset firstgid="1" name="tileset" tileheight="32" tilewidth="32">
+  <image source="tileset.png"/>
+ </tileset>
+ <tileset firstgid="5" name="tileset2" tileheight="32" tilewidth="32">
+  <image source="tileset2.png"/>
+ </tileset>
+ <tileset firstgid="9" name="tileset3" tileheight="32" tilewidth="32">
+  <image source="tileset3.png"/>
+ </tileset>
+ <tileset firstgid="13" name="tileset4" tileheight="32" tilewidth="32">
+  <image source="tileset4.png"/>
+ </tileset>
+ <layer height="30" name="First Layer" width="50">
+  <properties>
+   <property name="Layer Property" value="Layer Value"/>
+  </properties>
+  <data compression="gzip" encoding="base64">
+   H4sIAAAAAAAAC+2TUQ7AIAhD1fsfevsmgpIMVkg/SI0hSHmyxhjzjVVc5TkjIrx08LDjIX1Jz0upMTd5NzWjeJzetHK1mVh3f/D4wgd5+Hlou3D6913344ZRhf3oxiPag5eHtTMevxk8oiOLR1UvUfPJVoQeyIM8UBWhB/IgD1RF6IE8yANVEXogj348HkfuS4NwFwAA
+  </data>
+ </layer>
+ <layer height="30" name="Second Layer" width="50">
+  <data compression="gzip" encoding="base64">
+   H4sIAAAAAAAAC9VXQQ4EIQjj5v7/xXvdsCoFimKTSWbGClYUUURkyHkMsl+2vYhvhv9bGjSG/OvyaNS8j/G965vl7fpbsXtRB2Kvg47IvukSj+x+n+nQD9o3wqvKVyfjUZnzb6wrxjlyIh4esGLk1YHMZWRc2XzVEfqMX3Few82asAJInF5C1/h49zdSI7PuCKgdrz89/p0OWbSh8NwpxuLd4u7+W98IZuNmnTW79WNxvPDme1Qz8r9yvn7bMmPuomPWntURua8xOJrHyIkeW2j+9PqvzmMrLqtmQ2tm9AyI+s/Y2NmacSwfLP/VdQ47Frpvh1qN4f+2ji9OrdRgcBcAAA==
+  </data>
+ </layer>
+ <layer height="30" name="Third Layer" width="50">
+  <data compression="gzip" encoding="base64">
+   H4sIAAAAAAAAC92WyW7DMAxEda///3tzKAwYCpc3Q7mHEgiCcBkuGlFZ61eupQuNyfyux2f/vdu6WFpThkniaP69nwiD9FbZKp+oXkWX2ZTzqaQ7c6VG4kfinTnsup/HR+UTsV/Bd6QjeBk+7YOefZWni5nOiPZBcu2+So3VDEi8wiu3JveO0XtD+lDvr6N33g2lj+k+7LBO7N8bZ9KHyuluvhP+ZfOYvhvUV9kHTj6lD7pvyRmp/y/elu6MCfccfpyQiKOZrsLIMP9KHD6Se5n1ttb3vCId4UGGkflVddEcjkQ7rdv76s7t6iQ5Vewpbyp/1X4Km8Qq5+D0smPQGJJv91NyuL3cNnVXU59oh9B4J/dJPitvvIpN7E8fkrOrtdqzKq7i0/FYeaOmtU7uPBV3F0c4Lv8mb0IWM7mzEyz3XXwTy40/0cObeP9JPi2A8mVwFwAA
+  </data>
+ </layer>
+ <layer height="30" name="Fourth Layer" width="50">
+  <data compression="gzip" encoding="base64">
+   H4sIAAAAAAAAC+VWWwqAMAzzBnr/04qgMEq0D+eSYWC4j06StU23LO+wgcXC1nx78GBp+vJOWVrsPnPuKab9joDVEuEY1T263mxu7mJQvBIsL9Q/lreylnafqTElVD1MYY60eMNHQQfiX+HF1OL5VNRbmUD+cxen3O9Rf6rOvdGzLzI7nuLXc6H/KwC9vTLerKLjwGrWTOjFm5WP3nfO0OFpqGhU6w+0j0DhrXIA8c7mha3Dq7EMmFo8rpm8MH2rZ+wMOiLxjH6vzg+vzmbRcZ1Vebuo8PgTdmTO18JwFwAA
+  </data>
+ </layer>
+ <objectgroup height="30" name="Object_Layer" width="50">
+  <properties>
+   <property name="Objectgroup property" value="Objectgroup value"/>
+  </properties>
+  <object height="131" name="Touching H" type="mytype1" width="154" x="186" y="187"/>
+  <object height="68" name="Touching P" type="mytype2" width="82" x="599" y="159">
+   <properties>
+    <property name="object property" value="object value"/>
+   </properties>
+  </object>
+  <object name="Touching L" x="579" y="352"/>
+  <object name="Touching !" x="814" y="207"/>
+  <object name="Upper Left" x="0" y="0"/>
+  <object name="Upper Right" x="1600" y="0"/>
+  <object name="Lower Right" x="1600" y="960"/>
+  <object name="Lower Left" x="0" y="960"/>
+ </objectgroup>
+</map>
\ No newline at end of file
diff --git a/extensions/gdx-tiled-preprocessor/data/output/tilemap uncompressed.tmx b/extensions/gdx-tiled-preprocessor/data/output/tilemap uncompressed.tmx
new file mode 100644
index 0000000..53bf310
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/data/output/tilemap uncompressed.tmx	
@@ -0,0 +1,57 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?><map height="30" orientation="orthogonal" tileheight="32" tilewidth="32" version="1.0" width="50">
+ <properties>
+  <property name="blended tiles" value="1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,5,6,7,8,9,10,11,12,13,14,15,16"/>
+ </properties>
+ <tileset firstgid="1" name="tileset" tileheight="32" tilewidth="32">
+  <image source="tileset.png"/>
+ </tileset>
+ <tileset firstgid="5" name="tileset2" tileheight="32" tilewidth="32">
+  <image source="tileset2.png"/>
+ </tileset>
+ <tileset firstgid="9" name="tileset3" tileheight="32" tilewidth="32">
+  <image source="tileset3.png"/>
+ </tileset>
+ <tileset firstgid="13" name="tileset4" tileheight="32" tilewidth="32">
+  <image source="tileset4.png"/>
+ </tileset>
+ <layer height="30" name="First Layer" width="50">
+  <properties>
+   <property name="Layer Property" value="Layer Value"/>
+  </properties>
+  <data encoding="base64">
+   AgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAABAAAAAgAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAIAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAQAAAAIAAAABAAAAAQAAAAIAAAABAAAAAQAAAAEAAAACAAAAAQAAAAIAAAACAAAAAgAAAAIAAAABAAAAAgAAAAEAAAABAAAAAQAAAAEAAAACAAAAAgAAAAIAAAABAAAAAQAAAAIAAAABAAAAAQAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAACAAAAAQAAAAEAAAABAAAAAgAAAAEAAAABAAAAAQAAAAIAAAABAAAAAgAAAAEAAAABAAAAAQAAAAEAAAACAAAAAQAAAAEAAAABAAAAAQAAAAIAAAABAAAAAQAAAAIAAAABAAAAAgAAAAEAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAEAAAACAAAAAQAAAAEAAAACAAAAAQAAAAEAAAABAAAAAgAAAAEAAAACAAAAAQAAAAEAAAABAAAAAQAAAAIAAAABAAAAAQAAAAEAAAABAAAAAgAAAAEAAAABAAAAAgAAAAEAAAACAAAAAQAAAAEAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAgAAAAEAAAABAAAAAQAAAAIAAAABAAAAAQAAAAEAAAACAAAAAQAAAAIAAAABAAAAAQAAAAEAAAABAAAAAgAAAAEAAAABAAAAAQAAAAEAAAACAAAAAQAAAAEAAAACAAAAAQAAAAIAAAABAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAABAAAAAgAAAAEAAAABAAAAAgAAAAIAAAACAAAAAgAAAAIAAAABAAAAAgAAAAIAAAACAAAAAQAAAAEAAAACAAAAAQAAAAEAAAABAAAAAQAAAAIAAAACAAAAAgAAAAEAAAABAAAAAgAAAAEAAAABAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAIAAAABAAAAAQAAAAEAAAACAAAAAQAAAAEAAAABAAAAAgAAAAEAAAACAAAAAQAAAAEAAAABAAAAAQAAAAIAAAABAAAAAQAAAAEAAAABAAAAAgAAAAEAAAABAAAAAQAAAAEAAAACAAAAAQAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAQAAAAIAAAABAAAAAQAAAAIAAAABAAAAAQAAAAEAAAACAAAAAQAAAAIAAAABAAAAAQAAAAEAAAABAAAAAgAAAAEAAAABAAAAAQAAAAEAAAACAAAAAQAAAAEAAAABAAAAAQAAAAIAAAABAAAAAQAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAACAAAAAQAAAAEAAAABAAAAAgAAAAEAAAABAAAAAQAAAAIAAAABAAAAAgAAAAEAAAABAAAAAQAAAAEAAAACAAAAAQAAAAEAAAABAAAAAQAAAAIAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAEAAAACAAAAAQAAAAEAAAACAAAAAQAAAAEAAAABAAAAAgAAAAEAAAACAAAAAgAAAAIAAAACAAAAAQAAAAIAAAACAAAAAgAAAAIAAAABAAAAAgAAAAEAAAABAAAAAQAAAAEAAAACAAAAAQAAAAEAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAgAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAABAAAAAgAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAA
+  </data>
+ </layer>
+ <layer height="30" name="Second Layer" width="50">
+  <data encoding="base64">
+   
+  </data>
+ </layer>
+ <layer height="30" name="Third Layer" width="50">
+  <data encoding="base64">
+   
+  </data>
+ </layer>
+ <layer height="30" name="Fourth Layer" width="50">
+  <data encoding="base64">

+  </data>
+ </layer>
+ <objectgroup height="30" name="Object_Layer" width="50">
+  <properties>
+   <property name="Objectgroup property" value="Objectgroup value"/>
+  </properties>
+  <object height="131" name="Touching H" type="mytype1" width="154" x="186" y="187"/>
+  <object height="68" name="Touching P" type="mytype2" width="82" x="599" y="159">
+   <properties>
+    <property name="object property" value="object value"/>
+   </properties>
+  </object>
+  <object name="Touching L" x="579" y="352"/>
+  <object name="Touching !" x="814" y="207"/>
+  <object name="Upper Left" x="0" y="0"/>
+  <object name="Upper Right" x="1600" y="0"/>
+  <object name="Lower Right" x="1600" y="960"/>
+  <object name="Lower Left" x="0" y="960"/>
+ </objectgroup>
+</map>
\ No newline at end of file
diff --git a/extensions/gdx-tiled-preprocessor/data/output/tilemap xml.tmx b/extensions/gdx-tiled-preprocessor/data/output/tilemap xml.tmx
new file mode 100644
index 0000000..c01be43
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/data/output/tilemap xml.tmx	
@@ -0,0 +1,57 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?><map height="30" orientation="orthogonal" tileheight="32" tilewidth="32" version="1.0" width="50">
+ <properties>
+  <property name="blended tiles" value="1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,5,6,7,8,9,10,11,12,13,14,15,16"/>
+ </properties>
+ <tileset firstgid="1" name="tileset" tileheight="32" tilewidth="32">
+  <image height="64" source="tileset.png" width="64"/>
+ </tileset>
+ <tileset firstgid="5" name="tileset2" tileheight="32" tilewidth="32">
+  <image height="64" source="tileset2.png" width="64"/>
+ </tileset>
+ <tileset firstgid="9" name="tileset3" tileheight="32" tilewidth="32">
+  <image height="64" source="tileset3.png" width="64"/>
+ </tileset>
+ <tileset firstgid="13" name="tileset4" tileheight="32" tilewidth="32">
+  <image height="64" source="tileset4.png" width="64"/>
+ </tileset>
+ <layer height="30" name="First Layer" width="50">
+  <properties>
+   <property name="Layer Property" value="Layer Value"/>
+  </properties>
+  <data compression="zlib" encoding="base64">
+   eJztk1EOwCAIQ9X7H3r7JoKSDFZIP0iNIUh5ssYY841VXOU5IyK8dPCw4yF9Sc9LqTE3eTc1o3ic3rRytZlYd3/w+MIHefh5aLtw+vdd9+OGUYX96MYj2oOXh7UzHr8ZPKIji0dVL1HzyVaEHsiDPFAVoQfyIA9UReiBPMgDVRF6II9+PB6c+Ahs
+  </data>
+ </layer>
+ <layer height="30" name="Second Layer" width="50">
+  <data compression="zlib" encoding="base64">
+   eJzVV0EOBCEI4+b+/8V73bAqBYpik0lmxgpWFFFEZMh5DLJftr2Ib4b/Wxo0hvzr8mjUvI/xveub5e36W7F7UQdir4OOyL7pEo/sfp/p0A/aN8Krylcn41GZ82+sK8Y5ciIeHrBi5NWBzGVkXNl81RH6jF9xXsPNmrACSJxeQtf4ePc3UiOz7gioHa8/Pf6dDlm0ofDcKcbi3eLu/lvfCGbjZp01u/Vjcbzw5ntUM/K/cr5+2zJj7qJj1p7VEbmvMTiax8iJHlto/vT6r85jKy6rZkNrZvQMiPrP2NjZmnEsHyz/1XUOOxa6b4dajeH/to4vnrEFuA==
+  </data>
+ </layer>
+ <layer height="30" name="Third Layer" width="50">
+  <data compression="zlib" encoding="base64">
+   eJzdlsluwzAMRHWv//97cygMGAqXN0O5hxIIgnAZLhpRWetXrqULjcn8rsdn/73bulhaU4ZJ4mj+vZ8Ig/RW2SqfqF5Fl9mU86mkO3OlRuJH4p057Lqfx0flE7FfwXekI3gZPu2Dnn2Vp4uZzoj2QXLtvkqN1QxIvMIrtyb3jtF7Q/pQ76+jd94NpY/pPuywTuzfG2fSh8rpbr4T/mXzmL4b1FfZB04+pQ+6b8kZqf8v3pbujAn3HH6ckIijma7CyDD/Shw+knuZ9bbW97wiHeFBhpH5VXXRHI5EO63b++rO7eokOVXsKW8qf9V+CpvEKufg9LJj0BiSb/dTcri93DZ1V1OfaIfQeCf3ST4rb7yKTexPH5Kzq7Xasyqu4tPxWHmjprVO7jwVdxdHOC7/Jm9CFjO5sxMs9118E8uNP9HDm3j/ST48vhBs
+  </data>
+ </layer>
+ <layer height="30" name="Fourth Layer" width="50">
+  <data compression="zlib" encoding="base64">
+   eJzlVlsKgDAM8wZ6/9OKoDBKtA/nkmFguI9OkrVNtyzvsIHFwtZ8e/BgafryTlla7D5z7imm/Y6A1RLhGNU9ut5sbu5iULwSLC/UP5a3spZ2n6kxJVQ9TGGOtHjDR0EH4l/hxdTi+VTUW5lA/nMXp9zvUX+qzr3Rsy8yO57i13Oh/ysAvb0y3qyi48Bq1kzoxZuVj953ztDhaahoVOsPtI9A4a1yAPHO5oWtw6uxDJhaPK6ZvDB9q2fsDDoi8Yx+r84Pr85m0XGdVXm7qPD4E3bB/Qp9
+  </data>
+ </layer>
+ <objectgroup height="30" name="Object_Layer" width="50">
+  <properties>
+   <property name="Objectgroup property" value="Objectgroup value"/>
+  </properties>
+  <object height="131" name="Touching H" type="mytype1" width="154" x="186" y="187"/>
+  <object height="68" name="Touching P" type="mytype2" width="82" x="599" y="159">
+   <properties>
+    <property name="object property" value="object value"/>
+   </properties>
+  </object>
+  <object name="Touching L" x="579" y="352"/>
+  <object name="Touching !" x="814" y="207"/>
+  <object name="Upper Left" x="0" y="0"/>
+  <object name="Upper Right" x="1600" y="0"/>
+  <object name="Lower Right" x="1600" y="960"/>
+  <object name="Lower Left" x="0" y="960"/>
+ </objectgroup>
+</map>
\ No newline at end of file
diff --git a/extensions/gdx-tiled-preprocessor/data/output/tilemap zlib.tmx b/extensions/gdx-tiled-preprocessor/data/output/tilemap zlib.tmx
new file mode 100644
index 0000000..e46535c
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/data/output/tilemap zlib.tmx	
@@ -0,0 +1,57 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?><map height="30" orientation="orthogonal" tileheight="32" tilewidth="32" version="1.0" width="50">
+ <properties>
+  <property name="blended tiles" value="1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,5,6,7,8,9,10,11,12,13,14,15,16"/>
+ </properties>
+ <tileset firstgid="1" name="tileset" tileheight="32" tilewidth="32">
+  <image source="tileset.png"/>
+ </tileset>
+ <tileset firstgid="5" name="tileset2" tileheight="32" tilewidth="32">
+  <image source="tileset2.png"/>
+ </tileset>
+ <tileset firstgid="9" name="tileset3" tileheight="32" tilewidth="32">
+  <image source="tileset3.png"/>
+ </tileset>
+ <tileset firstgid="13" name="tileset4" tileheight="32" tilewidth="32">
+  <image source="tileset4.png"/>
+ </tileset>
+ <layer height="30" name="First Layer" width="50">
+  <properties>
+   <property name="Layer Property" value="Layer Value"/>
+  </properties>
+  <data compression="zlib" encoding="base64">
+   eJztk1EOwCAIQ9X7H3r7JoKSDFZIP0iNIUh5ssYY841VXOU5IyK8dPCw4yF9Sc9LqTE3eTc1o3ic3rRytZlYd3/w+MIHefh5aLtw+vdd9+OGUYX96MYj2oOXh7UzHr8ZPKIji0dVL1HzyVaEHsiDPFAVoQfyIA9UReiBPMgDVRF6II9+PB6c+Ahs
+  </data>
+ </layer>
+ <layer height="30" name="Second Layer" width="50">
+  <data compression="zlib" encoding="base64">
+   eJzVV0EOBCEI4+b+/8V73bAqBYpik0lmxgpWFFFEZMh5DLJftr2Ib4b/Wxo0hvzr8mjUvI/xveub5e36W7F7UQdir4OOyL7pEo/sfp/p0A/aN8Krylcn41GZ82+sK8Y5ciIeHrBi5NWBzGVkXNl81RH6jF9xXsPNmrACSJxeQtf4ePc3UiOz7gioHa8/Pf6dDlm0ofDcKcbi3eLu/lvfCGbjZp01u/Vjcbzw5ntUM/K/cr5+2zJj7qJj1p7VEbmvMTiax8iJHlto/vT6r85jKy6rZkNrZvQMiPrP2NjZmnEsHyz/1XUOOxa6b4dajeH/to4vnrEFuA==
+  </data>
+ </layer>
+ <layer height="30" name="Third Layer" width="50">
+  <data compression="zlib" encoding="base64">
+   eJzdlsluwzAMRHWv//97cygMGAqXN0O5hxIIgnAZLhpRWetXrqULjcn8rsdn/73bulhaU4ZJ4mj+vZ8Ig/RW2SqfqF5Fl9mU86mkO3OlRuJH4p057Lqfx0flE7FfwXekI3gZPu2Dnn2Vp4uZzoj2QXLtvkqN1QxIvMIrtyb3jtF7Q/pQ76+jd94NpY/pPuywTuzfG2fSh8rpbr4T/mXzmL4b1FfZB04+pQ+6b8kZqf8v3pbujAn3HH6ckIijma7CyDD/Shw+knuZ9bbW97wiHeFBhpH5VXXRHI5EO63b++rO7eokOVXsKW8qf9V+CpvEKufg9LJj0BiSb/dTcri93DZ1V1OfaIfQeCf3ST4rb7yKTexPH5Kzq7Xasyqu4tPxWHmjprVO7jwVdxdHOC7/Jm9CFjO5sxMs9118E8uNP9HDm3j/ST48vhBs
+  </data>
+ </layer>
+ <layer height="30" name="Fourth Layer" width="50">
+  <data compression="zlib" encoding="base64">
+   eJzlVlsKgDAM8wZ6/9OKoDBKtA/nkmFguI9OkrVNtyzvsIHFwtZ8e/BgafryTlla7D5z7imm/Y6A1RLhGNU9ut5sbu5iULwSLC/UP5a3spZ2n6kxJVQ9TGGOtHjDR0EH4l/hxdTi+VTUW5lA/nMXp9zvUX+qzr3Rsy8yO57i13Oh/ysAvb0y3qyi48Bq1kzoxZuVj953ztDhaahoVOsPtI9A4a1yAPHO5oWtw6uxDJhaPK6ZvDB9q2fsDDoi8Yx+r84Pr85m0XGdVXm7qPD4E3bB/Qp9
+  </data>
+ </layer>
+ <objectgroup height="30" name="Object_Layer" width="50">
+  <properties>
+   <property name="Objectgroup property" value="Objectgroup value"/>
+  </properties>
+  <object height="131" name="Touching H" type="mytype1" width="154" x="186" y="187"/>
+  <object height="68" name="Touching P" type="mytype2" width="82" x="599" y="159">
+   <properties>
+    <property name="object property" value="object value"/>
+   </properties>
+  </object>
+  <object name="Touching L" x="579" y="352"/>
+  <object name="Touching !" x="814" y="207"/>
+  <object name="Upper Left" x="0" y="0"/>
+  <object name="Upper Right" x="1600" y="0"/>
+  <object name="Lower Right" x="1600" y="960"/>
+  <object name="Lower Left" x="0" y="960"/>
+ </objectgroup>
+</map>
\ No newline at end of file
diff --git a/extensions/gdx-tiled-preprocessor/data/output/tileset packfile b/extensions/gdx-tiled-preprocessor/data/output/tileset packfile
new file mode 100644
index 0000000..de8eeae
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/data/output/tileset packfile	
@@ -0,0 +1,33 @@
+
+tileset1.png
+format: RGBA8888
+filter: Nearest,Nearest
+repeat: none
+tileset
+  rotate: false
+  xy: 0, 0
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 3
+tileset
+  rotate: false
+  xy: 0, 34
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 2
+tileset
+  rotate: false
+  xy: 0, 68
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 1
+tileset
+  rotate: false
+  xy: 0, 102
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 0
diff --git a/extensions/gdx-tiled-preprocessor/data/output/tileset1.png b/extensions/gdx-tiled-preprocessor/data/output/tileset1.png
new file mode 100644
index 0000000..e087a62
Binary files /dev/null and b/extensions/gdx-tiled-preprocessor/data/output/tileset1.png differ
diff --git a/extensions/gdx-tiled-preprocessor/data/output/tileset2 packfile b/extensions/gdx-tiled-preprocessor/data/output/tileset2 packfile
new file mode 100644
index 0000000..708fbdc
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/data/output/tileset2 packfile	
@@ -0,0 +1,33 @@
+
+tileset21.png
+format: RGBA8888
+filter: Nearest,Nearest
+repeat: none
+tileset2
+  rotate: false
+  xy: 0, 0
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 3
+tileset2
+  rotate: false
+  xy: 0, 34
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 2
+tileset2
+  rotate: false
+  xy: 0, 68
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 1
+tileset2
+  rotate: false
+  xy: 0, 102
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 0
diff --git a/extensions/gdx-tiled-preprocessor/data/output/tileset21.png b/extensions/gdx-tiled-preprocessor/data/output/tileset21.png
new file mode 100644
index 0000000..3b2481b
Binary files /dev/null and b/extensions/gdx-tiled-preprocessor/data/output/tileset21.png differ
diff --git a/extensions/gdx-tiled-preprocessor/data/output/tileset3 packfile b/extensions/gdx-tiled-preprocessor/data/output/tileset3 packfile
new file mode 100644
index 0000000..483f7fd
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/data/output/tileset3 packfile	
@@ -0,0 +1,33 @@
+
+tileset31.png
+format: RGBA8888
+filter: Nearest,Nearest
+repeat: none
+tileset3
+  rotate: false
+  xy: 0, 0
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 3
+tileset3
+  rotate: false
+  xy: 0, 34
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 2
+tileset3
+  rotate: false
+  xy: 0, 68
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 1
+tileset3
+  rotate: false
+  xy: 0, 102
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 0
diff --git a/extensions/gdx-tiled-preprocessor/data/output/tileset31.png b/extensions/gdx-tiled-preprocessor/data/output/tileset31.png
new file mode 100644
index 0000000..1854f08
Binary files /dev/null and b/extensions/gdx-tiled-preprocessor/data/output/tileset31.png differ
diff --git a/extensions/gdx-tiled-preprocessor/data/output/tileset4 packfile b/extensions/gdx-tiled-preprocessor/data/output/tileset4 packfile
new file mode 100644
index 0000000..7dc7f0c
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/data/output/tileset4 packfile	
@@ -0,0 +1,33 @@
+
+tileset41.png
+format: RGBA8888
+filter: Nearest,Nearest
+repeat: none
+tileset4
+  rotate: false
+  xy: 0, 0
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 3
+tileset4
+  rotate: false
+  xy: 0, 34
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 2
+tileset4
+  rotate: false
+  xy: 0, 68
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 1
+tileset4
+  rotate: false
+  xy: 0, 102
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 0
diff --git a/extensions/gdx-tiled-preprocessor/data/output/tileset41.png b/extensions/gdx-tiled-preprocessor/data/output/tileset41.png
new file mode 100644
index 0000000..8d8b63e
Binary files /dev/null and b/extensions/gdx-tiled-preprocessor/data/output/tileset41.png differ
diff --git a/extensions/gdx-tiled-preprocessor/data/output/tmw-desert-spacing packfile b/extensions/gdx-tiled-preprocessor/data/output/tmw-desert-spacing packfile
new file mode 100644
index 0000000..565c2c9
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/data/output/tmw-desert-spacing packfile	
@@ -0,0 +1,341 @@
+
+tmw-desert-spacing1.png
+format: RGBA8888
+filter: Nearest,Nearest
+repeat: none
+tmw-desert-spacing
+  rotate: false
+  xy: 2, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 47
+tmw-desert-spacing
+  rotate: false
+  xy: 2, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 46
+tmw-desert-spacing
+  rotate: false
+  xy: 2, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 45
+tmw-desert-spacing
+  rotate: false
+  xy: 36, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 44
+tmw-desert-spacing
+  rotate: false
+  xy: 36, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 43
+tmw-desert-spacing
+  rotate: false
+  xy: 36, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 42
+tmw-desert-spacing
+  rotate: false
+  xy: 70, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 41
+tmw-desert-spacing
+  rotate: false
+  xy: 70, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 40
+tmw-desert-spacing
+  rotate: false
+  xy: 70, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 39
+tmw-desert-spacing
+  rotate: false
+  xy: 104, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 38
+tmw-desert-spacing
+  rotate: false
+  xy: 104, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 37
+tmw-desert-spacing
+  rotate: false
+  xy: 104, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 36
+tmw-desert-spacing
+  rotate: false
+  xy: 138, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 35
+tmw-desert-spacing
+  rotate: false
+  xy: 138, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 34
+tmw-desert-spacing
+  rotate: false
+  xy: 138, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 33
+tmw-desert-spacing
+  rotate: false
+  xy: 172, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 32
+tmw-desert-spacing
+  rotate: false
+  xy: 172, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 31
+tmw-desert-spacing
+  rotate: false
+  xy: 172, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 30
+tmw-desert-spacing
+  rotate: false
+  xy: 206, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 29
+tmw-desert-spacing
+  rotate: false
+  xy: 206, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 28
+tmw-desert-spacing
+  rotate: false
+  xy: 206, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 27
+tmw-desert-spacing
+  rotate: false
+  xy: 240, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 26
+tmw-desert-spacing
+  rotate: false
+  xy: 240, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 25
+tmw-desert-spacing
+  rotate: false
+  xy: 240, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 24
+tmw-desert-spacing
+  rotate: false
+  xy: 274, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 23
+tmw-desert-spacing
+  rotate: false
+  xy: 274, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 22
+tmw-desert-spacing
+  rotate: false
+  xy: 274, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 21
+tmw-desert-spacing
+  rotate: false
+  xy: 308, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 20
+tmw-desert-spacing
+  rotate: false
+  xy: 308, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 19
+tmw-desert-spacing
+  rotate: false
+  xy: 308, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 18
+tmw-desert-spacing
+  rotate: false
+  xy: 342, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 17
+tmw-desert-spacing
+  rotate: false
+  xy: 342, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 16
+tmw-desert-spacing
+  rotate: false
+  xy: 342, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 15
+tmw-desert-spacing
+  rotate: false
+  xy: 376, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 14
+tmw-desert-spacing
+  rotate: false
+  xy: 376, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 13
+tmw-desert-spacing
+  rotate: false
+  xy: 376, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 12
+tmw-desert-spacing
+  rotate: false
+  xy: 410, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 11
+tmw-desert-spacing
+  rotate: false
+  xy: 410, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 10
+tmw-desert-spacing
+  rotate: false
+  xy: 410, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 9
+tmw-desert-spacing
+  rotate: false
+  xy: 444, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 8
+tmw-desert-spacing
+  rotate: false
+  xy: 444, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 7
+tmw-desert-spacing
+  rotate: false
+  xy: 444, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 6
+tmw-desert-spacing
+  rotate: false
+  xy: 478, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 5
+tmw-desert-spacing
+  rotate: false
+  xy: 478, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 4
+tmw-desert-spacing
+  rotate: false
+  xy: 478, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 3
+tmw-desert-spacing
+  rotate: false
+  xy: 512, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 2
+tmw-desert-spacing
+  rotate: false
+  xy: 512, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 1
+tmw-desert-spacing
+  rotate: false
+  xy: 512, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 0
diff --git a/extensions/gdx-tiled-preprocessor/data/output/tmw-desert-spacing1.png b/extensions/gdx-tiled-preprocessor/data/output/tmw-desert-spacing1.png
new file mode 100644
index 0000000..25c78a1
Binary files /dev/null and b/extensions/gdx-tiled-preprocessor/data/output/tmw-desert-spacing1.png differ
diff --git a/extensions/gdx-tiled-preprocessor/data/perspective walls test.png b/extensions/gdx-tiled-preprocessor/data/perspective walls test.png
new file mode 100644
index 0000000..0ac0cb7
Binary files /dev/null and b/extensions/gdx-tiled-preprocessor/data/perspective walls test.png differ
diff --git a/extensions/gdx-tiled-preprocessor/data/perspective walls.png b/extensions/gdx-tiled-preprocessor/data/perspective walls.png
new file mode 100644
index 0000000..8b70713
Binary files /dev/null and b/extensions/gdx-tiled-preprocessor/data/perspective walls.png differ
diff --git a/extensions/gdx-tiled-preprocessor/data/perspective walls.tmx b/extensions/gdx-tiled-preprocessor/data/perspective walls.tmx
new file mode 100644
index 0000000..e810d91
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/data/perspective walls.tmx	
@@ -0,0 +1,36 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<map version="1.0" orientation="orthogonal" width="32" height="32" tilewidth="32" tileheight="32">
+ <tileset firstgid="1" name="perspective walls" tilewidth="64" tileheight="64">
+ <image source="perspective walls.png"/>
+ <tile id="13">
+  <properties>
+   <property name="door" value="true"/>
+  </properties>
+ </tile>
+ <tile id="14">
+  <properties>
+   <property name="door" value="true"/>
+  </properties>
+ </tile>
+ <tile id="15">
+  <properties>
+   <property name="pickup" value="true"/>
+  </properties>
+ </tile>
+</tileset>
+ <layer name="Walls" width="32" height="32">
+  <data encoding="base64" compression="zlib">
+   eJztlOkKgCAQhLfb7vd/24SUBqMMNevHfDB4LczusihCCCHkTzRay4XaDP7rxf1882ZpzBqTp/Wo4c7ulRy96LUKRx3EFYF5+GpESpA9V845pT/Oxijn+luIw36k8vf1Rpk1xPepx9vczV+O3GL6n4JJ9vkSOf8/Qwb/r+vHP8ZVzFwTQshf2AA5owLB
+  </data>
+ </layer>
+ <layer name="Walls level 2" width="32" height="32">
+  <data encoding="base64" compression="zlib">
+   eJztzgEJAAAIA7CD/Tsb4yJbgiUA8MO0AwAAhy0rhAAE
+  </data>
+ </layer>
+ <layer name="Walls level 3" width="32" height="32">
+  <data encoding="base64" compression="zlib">
+   eJztzjENAAAIA7Al+PeMgz0cPK2CJgBwN98BAACqBS0QAAQ=
+  </data>
+ </layer>
+</map>
diff --git a/extensions/gdx-tiled-preprocessor/data/tilemap csv.tmx b/extensions/gdx-tiled-preprocessor/data/tilemap csv.tmx
new file mode 100644
index 0000000..c925a95
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/data/tilemap csv.tmx	
@@ -0,0 +1,175 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<map version="1.0" orientation="orthogonal" width="50" height="30" tilewidth="32" tileheight="32">
+ <properties>
+  <property name="blended tiles" value="7,8,12,11,16,15"/>
+ </properties>
+ <tileset firstgid="1" name="tileset" tilewidth="32" tileheight="32">
+  <image source="tileset.png" width="64" height="64"/>
+ </tileset>
+ <tileset firstgid="5" name="tileset2" tilewidth="32" tileheight="32">
+  <image source="tileset2.png" width="64" height="64"/>
+ </tileset>
+ <tileset firstgid="9" name="tileset3" tilewidth="32" tileheight="32">
+  <image source="tileset3.png" width="64" height="64"/>
+ </tileset>
+ <tileset firstgid="13" name="tileset4" tilewidth="32" tileheight="32">
+  <image source="tileset4.png" width="64" height="64"/>
+ </tileset>
+ <layer name="First Layer" width="50" height="30">
+  <properties>
+   <property name="Layer Property" value="Layer Value"/>
+  </properties>
+  <data encoding="csv">
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,1,2,1,1,1,2,1,2,2,2,2,1,2,1,1,1,1,2,2,2,1,1,2,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,1,1,2,1,1,1,2,1,2,1,1,1,1,2,1,1,1,1,2,1,1,2,1,2,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,1,2,1,1,1,2,1,2,1,1,1,1,2,1,1,1,1,2,1,1,2,1,2,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,1,1,2,1,1,1,2,1,2,1,1,1,1,2,1,1,1,1,2,1,1,2,1,2,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,1,2,2,2,2,2,1,2,2,2,1,1,2,1,1,1,1,2,2,2,1,1,2,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,1,1,2,1,1,1,2,1,2,1,1,1,1,2,1,1,1,1,2,1,1,1,1,2,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,1,2,1,1,1,2,1,2,1,1,1,1,2,1,1,1,1,2,1,1,1,1,2,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,1,1,2,1,1,1,2,1,2,1,1,1,1,2,1,1,1,1,2,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,1,2,1,1,1,2,1,2,2,2,2,1,2,2,2,2,1,2,1,1,1,1,2,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2
+</data>
+ </layer>
+ <layer name="Second Layer" width="50" height="30">
+  <data encoding="csv">
+0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,0,7,7,0,0,0,0,0,0,0,0,0,
+7,0,0,0,8,0,0,0,8,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,0,0,0,0,0,
+7,0,0,0,8,0,0,0,8,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,0,0,0,0,
+0,0,0,0,8,0,0,0,8,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,0,
+7,0,0,0,8,0,0,0,8,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+7,0,0,0,8,8,8,8,8,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+7,0,0,0,8,0,0,0,8,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,8,0,0,0,8,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+7,0,0,0,8,0,0,0,8,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,8,0,0,0,8,0,0,0,0,0,0,7,7,7,7,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,
+7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,7,0,0,0,0,0,
+7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,
+7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,
+7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,7,7,
+7,0,7,7,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,7,0,
+7,7,7,7,0,0,0,0,7,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,7,7,0,0,0,0,0,0,7,0,0,7,0,0,0,0,0,0,0,7,0,0,
+0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,7,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,7,0,0,
+0,0,7,7,0,0,7,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,7,0,0,0,0,0,7,0,0,0,7,0,0,0,0,0,7,0,0,0,
+0,0,7,0,0,7,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,7,7,0,0,0,7,0,0,0,0,0,7,0,0,0,0,7,0,0,0,
+0,0,7,0,0,7,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,7,0,0,0,7,0,0,0,0,0,7,0,0,0,0,7,0,0,0,
+0,7,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,7,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,7,0,0,7,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,7,0,7,0,0,0,0,0,0,7,0,0,7,0,0,0,0,
+0,0,0,7,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,7,7,0,7,0,0,0,0,
+0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,7,0,7,0,0,0,0,
+0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,
+0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
+</data>
+ </layer>
+ <layer name="Third Layer" width="50" height="30">
+  <data encoding="csv">
+0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,12,12,12,0,12,12,12,12,12,12,0,0,0,0,0,12,12,12,0,
+0,0,12,0,0,0,0,0,0,0,12,12,0,0,0,0,12,0,0,0,0,0,0,0,12,0,0,0,12,12,12,0,0,0,12,12,0,12,12,0,0,12,0,0,12,12,0,0,0,0,
+0,12,12,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,12,0,0,0,0,0,0,12,0,0,0,12,12,12,12,12,12,0,0,0,0,0,
+0,0,0,0,0,0,0,12,12,0,12,12,12,12,12,0,0,0,0,12,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,12,0,0,0,0,0,0,0,0,12,0,0,0,0,0,
+0,12,0,0,0,12,12,0,0,0,12,11,11,11,12,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,12,0,0,0,0,12,0,12,0,12,12,0,12,0,12,0,0,0,0,0,
+12,0,0,0,12,0,0,0,0,12,12,11,11,11,12,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,12,0,0,0,0,12,12,0,0,0,0,0,0,12,0,12,0,0,0,0,
+0,0,0,12,0,0,0,0,12,0,12,11,11,11,12,0,0,0,0,0,12,0,12,0,0,0,0,0,0,0,0,12,0,12,12,0,12,0,0,0,0,0,0,0,12,12,0,0,0,0,
+12,12,12,0,0,0,0,0,0,0,12,11,11,11,12,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,12,12,0,0,0,12,0,0,0,0,0,0,0,0,0,12,0,0,0,
+12,0,0,0,0,0,0,12,0,0,12,11,11,11,12,0,0,0,0,12,0,0,0,0,0,12,0,0,0,0,0,12,0,0,0,0,0,12,0,0,0,0,0,12,12,12,12,0,0,0,
+12,0,0,0,0,0,0,12,0,0,12,11,11,11,12,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,12,0,0,0,0,12,12,12,12,12,0,0,0,
+0,0,0,0,0,0,0,0,0,0,12,11,11,11,12,0,0,0,12,0,0,0,0,0,0,0,12,0,0,0,0,12,12,12,0,0,0,0,12,0,0,0,0,0,0,12,12,0,0,0,
+0,0,0,0,0,0,12,0,0,0,12,12,12,12,12,0,0,12,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,12,0,12,0,0,0,
+0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,12,12,0,0,0,12,0,0,0,0,12,0,0,0,12,0,0,
+0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,0,0,12,0,0,12,12,0,0,0,0,12,0,0,
+12,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,0,12,12,12,12,0,12,0,0,0,0,0,0,12,0,0,
+0,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,12,12,12,12,0,0,12,0,0,
+0,0,12,0,0,0,12,12,0,12,0,12,12,0,12,0,12,12,12,0,0,12,12,0,0,0,0,0,12,12,0,12,0,0,0,0,0,0,12,0,12,0,0,0,12,12,12,12,0,0,
+0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,12,12,12,12,12,12,0,0,0,12,0,0,0,0,12,0,0,0,0,0,0,0,12,12,0,0,0,
+0,0,12,12,12,12,12,12,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,12,0,0,0,0,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,12,0,0,0,0,
+0,0,0,12,0,0,0,0,12,12,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,12,0,0,0,0,0,0,0,12,12,0,12,0,0,0,
+0,0,0,0,12,0,0,0,0,0,12,12,0,0,0,0,0,12,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,12,0,12,0,0,0,0,0,12,0,0,0,0,12,0,0,
+0,0,0,0,0,12,0,0,0,0,0,0,12,12,0,0,12,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,12,12,0,12,0,12,0,12,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,12,0,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,12,12,0,0,0,0,12,12,0,0,0,0,0,0,0,0,12,0,
+0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,12,0,12,12,0,0,0,0,0,0,0,12,0,0,0,0,12,12,0,12,0,12,0,0,0,12,0,0,0,0,0,0,0,12,0,
+0,0,0,0,0,0,0,12,0,0,0,0,0,0,12,0,0,0,0,0,12,0,12,0,0,0,0,12,0,0,0,12,12,12,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,12,
+0,0,0,0,0,0,0,12,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,12,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,12,12,
+0,0,0,0,0,0,0,12,12,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,12,0,0,
+0,0,0,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,
+0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
+</data>
+ </layer>
+ <layer name="Fourth Layer" width="50" height="30">
+  <data encoding="csv">
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,16,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,16,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,16,16,0,16,16,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,16,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,16,0,16,16,16,0,0,0,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,16,16,0,16,0,0,0,0,0,16,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,16,16,0,0,16,16,16,16,16,16,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,16,0,0,16,16,16,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,16,16,16,16,16,0,0,0,0,0,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,16,16,16,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,16,16,0,16,0,0,0,0,16,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,16,0,0,0,16,0,0,0,0,0,16,16,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,16,0,0,16,16,16,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,16,16,16,16,0,0,16,16,16,16,16,0,16,16,16,16,0,0,15,15,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,16,0,16,16,0,16,16,16,16,16,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,15,15,0,0,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,15,0,0,15,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
+</data>
+ </layer>
+ <objectgroup name="Object_Layer" width="50" height="30">
+  <properties>
+   <property name="Objectgroup property" value="Objectgroup value"/>
+  </properties>
+  <object name="Touching H" type="mytype1" x="186" y="187" width="154" height="131"/>
+  <object name="Touching P" type="mytype2" x="599" y="159" width="82" height="68">
+   <properties>
+    <property name="object property" value="object value"/>
+   </properties>
+  </object>
+  <object name="Touching L" x="579" y="352"/>
+  <object name="Touching !" x="814" y="207"/>
+  <object name="Upper Left" x="0" y="0"/>
+  <object name="Upper Right" x="1600" y="0"/>
+  <object name="Lower Right" x="1600" y="960"/>
+  <object name="Lower Left" x="0" y="960"/>
+  <object name="tile object" type="tile object type" gid="6" x="533" y="272"/>
+ </objectgroup>
+</map>
diff --git a/extensions/gdx-tiled-preprocessor/data/tilemap gzip.tmx b/extensions/gdx-tiled-preprocessor/data/tilemap gzip.tmx
new file mode 100644
index 0000000..4afc4a8
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/data/tilemap gzip.tmx	
@@ -0,0 +1,58 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<map version="1.0" orientation="orthogonal" width="50" height="30" tilewidth="32" tileheight="32">
+ <properties>
+  <property name="blended tiles" value="7,8,12,11,16,15"/>
+ </properties>
+ <tileset firstgid="1" name="tileset" tilewidth="32" tileheight="32">
+  <image source="tileset.png"/>
+ </tileset>
+ <tileset firstgid="5" name="tileset2" tilewidth="32" tileheight="32">
+  <image source="tileset2.png"/>
+ </tileset>
+ <tileset firstgid="9" name="tileset3" tilewidth="32" tileheight="32">
+  <image source="tileset3.png"/>
+ </tileset>
+ <tileset firstgid="13" name="tileset4" tilewidth="32" tileheight="32">
+  <image source="tileset4.png"/>
+ </tileset>
+ <layer name="First Layer" width="50" height="30">
+  <properties>
+   <property name="Layer Property" value="Layer Value"/>
+  </properties>
+  <data encoding="base64" compression="gzip">
+   H4sIAAAAAAAAC+2TUQ7AIAhD1fsfevsmgpIMVkg/SI0hSHmyxhjzjVVc5TkjIrx08LDjIX1Jz0upMTd5NzWjeJzetHK1mVh3f/D4wgd5+Hlou3D6913344ZRhf3oxiPag5eHtTMevxk8oiOLR1UvUfPJVoQeyIM8UBWhB/IgD1RF6IE8yANVEXogj348HkfuS4NwFwAA
+  </data>
+ </layer>
+ <layer name="Second Layer" width="50" height="30">
+  <data encoding="base64" compression="gzip">
+   H4sIAAAAAAAAC9VXQQ4EIQjj5v7/xXvdsCoFimKTSWbGClYUUURkyHkMsl+2vYhvhv9bGjSG/OvyaNS8j/G965vl7fpbsXtRB2Kvg47IvukSj+x+n+nQD9o3wqvKVyfjUZnzb6wrxjlyIh4esGLk1YHMZWRc2XzVEfqMX3Few82asAJInF5C1/h49zdSI7PuCKgdrz89/p0OWbSh8NwpxuLd4u7+W98IZuNmnTW79WNxvPDme1Qz8r9yvn7bMmPuomPWntURua8xOJrHyIkeW2j+9PqvzmMrLqtmQ2tm9AyI+s/Y2NmacSwfLP/VdQ47Frpvh1qN4f+2ji9OrdRgcBcAAA==
+  </data>
+ </layer>
+ <layer name="Third Layer" width="50" height="30">
+  <data encoding="base64" compression="gzip">
+   H4sIAAAAAAAAC92WyW7DMAxEda///3tzKAwYCpc3Q7mHEgiCcBkuGlFZ61eupQuNyfyux2f/vdu6WFpThkniaP69nwiD9FbZKp+oXkWX2ZTzqaQ7c6VG4kfinTnsup/HR+UTsV/Bd6QjeBk+7YOefZWni5nOiPZBcu2+So3VDEi8wiu3JveO0XtD+lDvr6N33g2lj+k+7LBO7N8bZ9KHyuluvhP+ZfOYvhvUV9kHTj6lD7pvyRmp/y/elu6MCfccfpyQiKOZrsLIMP9KHD6Se5n1ttb3vCId4UGGkflVddEcjkQ7rdv76s7t6iQ5Vewpbyp/1X4Km8Qq5+D0smPQGJJv91NyuL3cNnVXU59oh9B4J/dJPitvvIpN7E8fkrOrtdqzKq7i0/FYeaOmtU7uPBV3F0c4Lv8mb0IWM7mzEyz3XXwTy40/0cObeP9JPi2A8mVwFwAA
+  </data>
+ </layer>
+ <layer name="Fourth Layer" width="50" height="30">
+  <data encoding="base64" compression="gzip">
+   H4sIAAAAAAAAC+VWWwqAMAzzBnr/04qgMEq0D+eSYWC4j06StU23LO+wgcXC1nx78GBp+vJOWVrsPnPuKab9joDVEuEY1T263mxu7mJQvBIsL9Q/lreylnafqTElVD1MYY60eMNHQQfiX+HF1OL5VNRbmUD+cxen3O9Rf6rOvdGzLzI7nuLXc6H/KwC9vTLerKLjwGrWTOjFm5WP3nfO0OFpqGhU6w+0j0DhrXIA8c7mha3Dq7EMmFo8rpm8MH2rZ+wMOiLxjH6vzg+vzmbRcZ1Vebuo8PgTdmTO18JwFwAA
+  </data>
+ </layer>
+ <objectgroup name="Object_Layer" width="50" height="30">
+  <properties>
+   <property name="Objectgroup property" value="Objectgroup value"/>
+  </properties>
+  <object name="Touching H" type="mytype1" x="186" y="187" width="154" height="131"/>
+  <object name="Touching P" type="mytype2" x="599" y="159" width="82" height="68">
+   <properties>
+    <property name="object property" value="object value"/>
+   </properties>
+  </object>
+  <object name="Touching L" x="579" y="352"/>
+  <object name="Touching !" x="814" y="207"/>
+  <object name="Upper Left" x="0" y="0"/>
+  <object name="Upper Right" x="1600" y="0"/>
+  <object name="Lower Right" x="1600" y="960"/>
+  <object name="Lower Left" x="0" y="960"/>
+ </objectgroup>
+</map>
diff --git a/extensions/gdx-tiled-preprocessor/data/tilemap uncompressed.tmx b/extensions/gdx-tiled-preprocessor/data/tilemap uncompressed.tmx
new file mode 100644
index 0000000..767856b
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/data/tilemap uncompressed.tmx	
@@ -0,0 +1,58 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<map version="1.0" orientation="orthogonal" width="50" height="30" tilewidth="32" tileheight="32">
+ <properties>
+  <property name="blended tiles" value="7,8,12,11,16,15"/>
+ </properties>
+ <tileset firstgid="1" name="tileset" tilewidth="32" tileheight="32">
+  <image source="tileset.png"/>
+ </tileset>
+ <tileset firstgid="5" name="tileset2" tilewidth="32" tileheight="32">
+  <image source="tileset2.png"/>
+ </tileset>
+ <tileset firstgid="9" name="tileset3" tilewidth="32" tileheight="32">
+  <image source="tileset3.png"/>
+ </tileset>
+ <tileset firstgid="13" name="tileset4" tilewidth="32" tileheight="32">
+  <image source="tileset4.png"/>
+ </tileset>
+ <layer name="First Layer" width="50" height="30">
+  <properties>
+   <property name="Layer Property" value="Layer Value"/>
+  </properties>
+  <data encoding="base64">
+   
+  </data>
+ </layer>
+ <layer name="Second Layer" width="50" height="30">
+  <data encoding="base64">
+   
+  </data>
+ </layer>
+ <layer name="Third Layer" width="50" height="30">
+  <data encoding="base64">
+   
+  </data>
+ </layer>
+ <layer name="Fourth Layer" width="50" height="30">
+  <data encoding="base64">

+  </data>
+ </layer>
+ <objectgroup name="Object_Layer" width="50" height="30">
+  <properties>
+   <property name="Objectgroup property" value="Objectgroup value"/>
+  </properties>
+  <object name="Touching H" type="mytype1" x="186" y="187" width="154" height="131"/>
+  <object name="Touching P" type="mytype2" x="599" y="159" width="82" height="68">
+   <properties>
+    <property name="object property" value="object value"/>
+   </properties>
+  </object>
+  <object name="Touching L" x="579" y="352"/>
+  <object name="Touching !" x="814" y="207"/>
+  <object name="Upper Left" x="0" y="0"/>
+  <object name="Upper Right" x="1600" y="0"/>
+  <object name="Lower Right" x="1600" y="960"/>
+  <object name="Lower Left" x="0" y="960"/>
+ </objectgroup>
+</map>
diff --git a/extensions/gdx-tiled-preprocessor/data/tilemap xml.tmx b/extensions/gdx-tiled-preprocessor/data/tilemap xml.tmx
new file mode 100644
index 0000000..c19144a
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/data/tilemap xml.tmx	
@@ -0,0 +1,58 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<map version="1.0" orientation="orthogonal" width="50" height="30" tilewidth="32" tileheight="32">
+ <properties>
+  <property name="blended tiles" value="7,8,12,11,16,15"/>
+ </properties>
+ <tileset firstgid="1" name="tileset" tilewidth="32" tileheight="32">
+  <image source="tileset.png" width="64" height="64"/>
+ </tileset>
+ <tileset firstgid="5" name="tileset2" tilewidth="32" tileheight="32">
+  <image source="tileset2.png" width="64" height="64"/>
+ </tileset>
+ <tileset firstgid="9" name="tileset3" tilewidth="32" tileheight="32">
+  <image source="tileset3.png" width="64" height="64"/>
+ </tileset>
+ <tileset firstgid="13" name="tileset4" tilewidth="32" tileheight="32">
+  <image source="tileset4.png" width="64" height="64"/>
+ </tileset>
+ <layer name="First Layer" width="50" height="30">
+  <properties>
+   <property name="Layer Property" value="Layer Value"/>
+  </properties>
+  <data encoding="base64" compression="zlib">
+   eJztk1EOwCAIQ9X7H3r7JoKSDFZIP0iNIUh5ssYY841VXOU5IyK8dPCw4yF9Sc9LqTE3eTc1o3ic3rRytZlYd3/w+MIHefh5aLtw+vdd9+OGUYX96MYj2oOXh7UzHr8ZPKIji0dVL1HzyVaEHsiDPFAVoQfyIA9UReiBPMgDVRF6II9+PB6c+Ahs
+  </data>
+ </layer>
+ <layer name="Second Layer" width="50" height="30">
+  <data encoding="base64" compression="zlib">
+   eJzVV0EOBCEI4+b+/8V73bAqBYpik0lmxgpWFFFEZMh5DLJftr2Ib4b/Wxo0hvzr8mjUvI/xveub5e36W7F7UQdir4OOyL7pEo/sfp/p0A/aN8Krylcn41GZ82+sK8Y5ciIeHrBi5NWBzGVkXNl81RH6jF9xXsPNmrACSJxeQtf4ePc3UiOz7gioHa8/Pf6dDlm0ofDcKcbi3eLu/lvfCGbjZp01u/Vjcbzw5ntUM/K/cr5+2zJj7qJj1p7VEbmvMTiax8iJHlto/vT6r85jKy6rZkNrZvQMiPrP2NjZmnEsHyz/1XUOOxa6b4dajeH/to4vnrEFuA==
+  </data>
+ </layer>
+ <layer name="Third Layer" width="50" height="30">
+  <data encoding="base64" compression="zlib">
+   eJzdlsluwzAMRHWv//97cygMGAqXN0O5hxIIgnAZLhpRWetXrqULjcn8rsdn/73bulhaU4ZJ4mj+vZ8Ig/RW2SqfqF5Fl9mU86mkO3OlRuJH4p057Lqfx0flE7FfwXekI3gZPu2Dnn2Vp4uZzoj2QXLtvkqN1QxIvMIrtyb3jtF7Q/pQ76+jd94NpY/pPuywTuzfG2fSh8rpbr4T/mXzmL4b1FfZB04+pQ+6b8kZqf8v3pbujAn3HH6ckIijma7CyDD/Shw+knuZ9bbW97wiHeFBhpH5VXXRHI5EO63b++rO7eokOVXsKW8qf9V+CpvEKufg9LJj0BiSb/dTcri93DZ1V1OfaIfQeCf3ST4rb7yKTexPH5Kzq7Xasyqu4tPxWHmjprVO7jwVdxdHOC7/Jm9CFjO5sxMs9118E8uNP9HDm3j/ST48vhBs
+  </data>
+ </layer>
+ <layer name="Fourth Layer" width="50" height="30">
+  <data encoding="base64" compression="zlib">
+   eJzlVlsKgDAM8wZ6/9OKoDBKtA/nkmFguI9OkrVNtyzvsIHFwtZ8e/BgafryTlla7D5z7imm/Y6A1RLhGNU9ut5sbu5iULwSLC/UP5a3spZ2n6kxJVQ9TGGOtHjDR0EH4l/hxdTi+VTUW5lA/nMXp9zvUX+qzr3Rsy8yO57i13Oh/ysAvb0y3qyi48Bq1kzoxZuVj953ztDhaahoVOsPtI9A4a1yAPHO5oWtw6uxDJhaPK6ZvDB9q2fsDDoi8Yx+r84Pr85m0XGdVXm7qPD4E3bB/Qp9
+  </data>
+ </layer>
+ <objectgroup name="Object_Layer" width="50" height="30">
+  <properties>
+   <property name="Objectgroup property" value="Objectgroup value"/>
+  </properties>
+  <object name="Touching H" type="mytype1" x="186" y="187" width="154" height="131"/>
+  <object name="Touching P" type="mytype2" x="599" y="159" width="82" height="68">
+   <properties>
+    <property name="object property" value="object value"/>
+   </properties>
+  </object>
+  <object name="Touching L" x="579" y="352"/>
+  <object name="Touching !" x="814" y="207"/>
+  <object name="Upper Left" x="0" y="0"/>
+  <object name="Upper Right" x="1600" y="0"/>
+  <object name="Lower Right" x="1600" y="960"/>
+  <object name="Lower Left" x="0" y="960"/>
+ </objectgroup>
+</map>
diff --git a/extensions/gdx-tiled-preprocessor/data/tilemap zlib.tmx b/extensions/gdx-tiled-preprocessor/data/tilemap zlib.tmx
new file mode 100644
index 0000000..4f0355a
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/data/tilemap zlib.tmx	
@@ -0,0 +1,58 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<map version="1.0" orientation="orthogonal" width="50" height="30" tilewidth="32" tileheight="32">
+ <properties>
+  <property name="blended tiles" value="7,8,12,11,16,15"/>
+ </properties>
+ <tileset firstgid="1" name="tileset" tilewidth="32" tileheight="32">
+  <image source="tileset.png"/>
+ </tileset>
+ <tileset firstgid="5" name="tileset2" tilewidth="32" tileheight="32">
+  <image source="tileset2.png"/>
+ </tileset>
+ <tileset firstgid="9" name="tileset3" tilewidth="32" tileheight="32">
+  <image source="tileset3.png"/>
+ </tileset>
+ <tileset firstgid="13" name="tileset4" tilewidth="32" tileheight="32">
+  <image source="tileset4.png"/>
+ </tileset>
+ <layer name="First Layer" width="50" height="30">
+  <properties>
+   <property name="Layer Property" value="Layer Value"/>
+  </properties>
+  <data encoding="base64" compression="zlib">
+   eJztk1EOwCAIQ9X7H3r7JoKSDFZIP0iNIUh5ssYY841VXOU5IyK8dPCw4yF9Sc9LqTE3eTc1o3ic3rRytZlYd3/w+MIHefh5aLtw+vdd9+OGUYX96MYj2oOXh7UzHr8ZPKIji0dVL1HzyVaEHsiDPFAVoQfyIA9UReiBPMgDVRF6II9+PB6c+Ahs
+  </data>
+ </layer>
+ <layer name="Second Layer" width="50" height="30">
+  <data encoding="base64" compression="zlib">
+   eJzVV0EOBCEI4+b+/8V73bAqBYpik0lmxgpWFFFEZMh5DLJftr2Ib4b/Wxo0hvzr8mjUvI/xveub5e36W7F7UQdir4OOyL7pEo/sfp/p0A/aN8Krylcn41GZ82+sK8Y5ciIeHrBi5NWBzGVkXNl81RH6jF9xXsPNmrACSJxeQtf4ePc3UiOz7gioHa8/Pf6dDlm0ofDcKcbi3eLu/lvfCGbjZp01u/Vjcbzw5ntUM/K/cr5+2zJj7qJj1p7VEbmvMTiax8iJHlto/vT6r85jKy6rZkNrZvQMiPrP2NjZmnEsHyz/1XUOOxa6b4dajeH/to4vnrEFuA==
+  </data>
+ </layer>
+ <layer name="Third Layer" width="50" height="30">
+  <data encoding="base64" compression="zlib">
+   eJzdlsluwzAMRHWv//97cygMGAqXN0O5hxIIgnAZLhpRWetXrqULjcn8rsdn/73bulhaU4ZJ4mj+vZ8Ig/RW2SqfqF5Fl9mU86mkO3OlRuJH4p057Lqfx0flE7FfwXekI3gZPu2Dnn2Vp4uZzoj2QXLtvkqN1QxIvMIrtyb3jtF7Q/pQ76+jd94NpY/pPuywTuzfG2fSh8rpbr4T/mXzmL4b1FfZB04+pQ+6b8kZqf8v3pbujAn3HH6ckIijma7CyDD/Shw+knuZ9bbW97wiHeFBhpH5VXXRHI5EO63b++rO7eokOVXsKW8qf9V+CpvEKufg9LJj0BiSb/dTcri93DZ1V1OfaIfQeCf3ST4rb7yKTexPH5Kzq7Xasyqu4tPxWHmjprVO7jwVdxdHOC7/Jm9CFjO5sxMs9118E8uNP9HDm3j/ST48vhBs
+  </data>
+ </layer>
+ <layer name="Fourth Layer" width="50" height="30">
+  <data encoding="base64" compression="zlib">
+   eJzlVlsKgDAM8wZ6/9OKoDBKtA/nkmFguI9OkrVNtyzvsIHFwtZ8e/BgafryTlla7D5z7imm/Y6A1RLhGNU9ut5sbu5iULwSLC/UP5a3spZ2n6kxJVQ9TGGOtHjDR0EH4l/hxdTi+VTUW5lA/nMXp9zvUX+qzr3Rsy8yO57i13Oh/ysAvb0y3qyi48Bq1kzoxZuVj953ztDhaahoVOsPtI9A4a1yAPHO5oWtw6uxDJhaPK6ZvDB9q2fsDDoi8Yx+r84Pr85m0XGdVXm7qPD4E3bB/Qp9
+  </data>
+ </layer>
+ <objectgroup name="Object_Layer" width="50" height="30">
+  <properties>
+   <property name="Objectgroup property" value="Objectgroup value"/>
+  </properties>
+  <object name="Touching H" type="mytype1" x="186" y="187" width="154" height="131"/>
+  <object name="Touching P" type="mytype2" x="599" y="159" width="82" height="68">
+   <properties>
+    <property name="object property" value="object value"/>
+   </properties>
+  </object>
+  <object name="Touching L" x="579" y="352"/>
+  <object name="Touching !" x="814" y="207"/>
+  <object name="Upper Left" x="0" y="0"/>
+  <object name="Upper Right" x="1600" y="0"/>
+  <object name="Lower Right" x="1600" y="960"/>
+  <object name="Lower Left" x="0" y="960"/>
+ </objectgroup>
+</map>
diff --git a/extensions/gdx-tiled-preprocessor/data/tileset.png b/extensions/gdx-tiled-preprocessor/data/tileset.png
new file mode 100644
index 0000000..f86d5f2
Binary files /dev/null and b/extensions/gdx-tiled-preprocessor/data/tileset.png differ
diff --git a/extensions/gdx-tiled-preprocessor/data/tileset2.png b/extensions/gdx-tiled-preprocessor/data/tileset2.png
new file mode 100644
index 0000000..eb0c99c
Binary files /dev/null and b/extensions/gdx-tiled-preprocessor/data/tileset2.png differ
diff --git a/extensions/gdx-tiled-preprocessor/data/tileset3.png b/extensions/gdx-tiled-preprocessor/data/tileset3.png
new file mode 100644
index 0000000..9f666fd
Binary files /dev/null and b/extensions/gdx-tiled-preprocessor/data/tileset3.png differ
diff --git a/extensions/gdx-tiled-preprocessor/data/tileset4.png b/extensions/gdx-tiled-preprocessor/data/tileset4.png
new file mode 100644
index 0000000..9b4eb48
Binary files /dev/null and b/extensions/gdx-tiled-preprocessor/data/tileset4.png differ
diff --git a/extensions/gdx-tiled-preprocessor/data/tmw-desert-spacing.png b/extensions/gdx-tiled-preprocessor/data/tmw-desert-spacing.png
new file mode 100644
index 0000000..4e9995c
Binary files /dev/null and b/extensions/gdx-tiled-preprocessor/data/tmw-desert-spacing.png differ
diff --git a/extensions/gdx-tiled-preprocessor/src/com/badlogic/gdx/tiledmappacker/TileSetLayout.java b/extensions/gdx-tiled-preprocessor/src/com/badlogic/gdx/tiledmappacker/TileSetLayout.java
new file mode 100644
index 0000000..65478cb
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/src/com/badlogic/gdx/tiledmappacker/TileSetLayout.java
@@ -0,0 +1,82 @@
+/*******************************************************************************
+ * Copyright 2011 See AUTHORS file.
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/
+
+package com.badlogic.gdx.tiledmappacker;
+
+import java.awt.image.BufferedImage;
+import java.io.IOException;
+
+import javax.imageio.ImageIO;
+
+import com.badlogic.gdx.files.FileHandle;
+import com.badlogic.gdx.graphics.g2d.tiled.TileSet;
+import com.badlogic.gdx.math.Vector2;
+import com.badlogic.gdx.utils.IntMap;
+
+/** Contains extra information that can only be calculated after a Tiled Map's tile set images are loaded.
+ * @author David Fraska */
+public class TileSetLayout extends TileSet {
+
+	public final BufferedImage image;
+	private final IntMap<Vector2> imageTilePositions;
+	private int numRows;
+	private int numCols;
+	public final int numTiles;
+
+	/** Constructs a Tile Set layout. The tile set image contained in the baseDir should be the original tile set images before
+	 * being processed by {@link TiledMapPacker} (the ones actually read by Tiled).
+	 * @param tileSet the tile set to process
+	 * @param baseDir the directory in which the tile set image is stored */
+	protected TileSetLayout (TileSet tileSet, FileHandle baseDir) throws IOException {
+		super(tileSet);
+
+		image = ImageIO.read(baseDir.child(tileSet.imageName).read());
+
+		imageTilePositions = new IntMap<Vector2>();
+
+		// fill the tile regions
+		int x, y, tile = 0;
+		numRows = 0;
+		numCols = 0;
+		
+		int stopWidth = image.getWidth() - tileSet.tileWidth;
+		int stopHeight = image.getHeight() - tileSet.tileHeight;
+		
+		for (y = tileSet.margin; y <= stopHeight; y += tileSet.tileHeight + tileSet.spacing) {
+			for (x = tileSet.margin; x <= stopWidth; x += tileSet.tileWidth + tileSet.spacing) {
+				if (y == tileSet.margin) numCols++;
+				imageTilePositions.put(tile, new Vector2(x, y));
+				tile++;
+			}
+			numRows++;
+		}
+
+		numTiles = numRows * numCols;
+	}
+
+	public int getNumRows () {
+		return numRows;
+	}
+
+	public int getNumCols () {
+		return numCols;
+	}
+
+	/** Returns the location of the tile in {@link TileSetLayout#image} */
+	public Vector2 getLocation (int tile) {
+		return imageTilePositions.get(tile - firstgid);
+	}
+}
diff --git a/extensions/gdx-tiled-preprocessor/src/com/badlogic/gdx/tiledmappacker/TiledMapPacker.java b/extensions/gdx-tiled-preprocessor/src/com/badlogic/gdx/tiledmappacker/TiledMapPacker.java
new file mode 100644
index 0000000..904a86d
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/src/com/badlogic/gdx/tiledmappacker/TiledMapPacker.java
@@ -0,0 +1,400 @@
+/*******************************************************************************
+ * Copyright 2011 See AUTHORS file.
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the
+ * License. You may obtain a copy of the License at
+ * 
+ * http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS"
+ * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language
+ * governing permissions and limitations under the License.
+ ******************************************************************************/
+
+package com.badlogic.gdx.tiledmappacker;
+
+import java.awt.Graphics;
+import java.awt.image.BufferedImage;
+import java.io.File;
+import java.io.FilenameFilter;
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.StringTokenizer;
+
+import javax.xml.parsers.DocumentBuilder;
+import javax.xml.parsers.DocumentBuilderFactory;
+import javax.xml.parsers.ParserConfigurationException;
+import javax.xml.transform.Transformer;
+import javax.xml.transform.TransformerConfigurationException;
+import javax.xml.transform.TransformerException;
+import javax.xml.transform.TransformerFactory;
+import javax.xml.transform.dom.DOMSource;
+import javax.xml.transform.stream.StreamResult;
+
+import org.w3c.dom.Attr;
+import org.w3c.dom.Document;
+import org.w3c.dom.NamedNodeMap;
+import org.w3c.dom.Node;
+import org.w3c.dom.NodeList;
+import org.xml.sax.SAXException;
+
+import com.badlogic.gdx.files.FileHandle;
+import com.badlogic.gdx.graphics.g2d.tiled.TileAtlas;
+import com.badlogic.gdx.graphics.g2d.tiled.TileMapRenderer;
+import com.badlogic.gdx.graphics.g2d.tiled.TileSet;
+import com.badlogic.gdx.graphics.g2d.tiled.TiledLayer;
+import com.badlogic.gdx.graphics.g2d.tiled.TiledLoader;
+import com.badlogic.gdx.graphics.g2d.tiled.TiledMap;
+import com.badlogic.gdx.math.Vector2;
+import com.badlogic.gdx.tools.imagepacker.TexturePacker;
+import com.badlogic.gdx.tools.imagepacker.TexturePacker.Settings;
+import com.badlogic.gdx.utils.GdxRuntimeException;
+import com.badlogic.gdx.utils.IntArray;
+
+/** Packs a Tiled Map, adding some properties to improve the speed of the {@link TileMapRenderer}. Also runs the texture packer on
+ * the tiles for use with a {@link TileAtlas}
+ * @author David Fraska */
+public class TiledMapPacker {
+
+	private TexturePacker packer;
+	private TiledMap map;
+
+	// private File outputDir;
+	private ArrayList<String> processedTileSets = new ArrayList<String>();
+
+	private ArrayList<Integer> blendedTiles = new ArrayList<Integer>();
+
+	static private class TmxFilter implements FilenameFilter {
+
+		public TmxFilter () {
+		}
+
+		@Override
+		public boolean accept (File dir, String name) {
+			if (name.endsWith(".tmx")) return true;
+
+			return false;
+		}
+
+	}
+
+	TiledMapPackerSettings settings;
+	
+	public TiledMapPacker() {
+		this(new TiledMapPackerSettings());
+	}
+	
+	public TiledMapPacker(TiledMapPackerSettings settings) {
+		this.settings = settings;
+	}
+	
+	/** Typically, you should run the {@link TiledMapPacker#main(String[])} method instead of this method. Packs a directory of
+	 * Tiled Maps, adding properties to improve the speed of the {@link TileMapRenderer}. Also runs the texture packer on the tile
+	 * sets for use with a {@link TileAtlas}
+	 * @param inputDir the input directory containing the tmx files (and tile sets, relative to the path listed in the tmx file)
+	 * @param outputDir The output directory for the tmx files, should be empty before running. WARNING: Use caution if you have a
+	 *           "../" in the path of your tile sets! The output for these tile sets will be relative to the output directory. For
+	 *           example, if your output directory is "C:\mydir\maps" and you have a tileset with the path "../tileset.png", the
+	 *           tileset will be output to "C:\mydir\" and the maps will be in "C:\mydir\maps".
+	 * @param settings the settings used in the TexturePacker */
+	public void processMap (File inputDir, File outputDir, Settings settings) throws IOException {
+		FileHandle inputDirHandle = new FileHandle(inputDir.getAbsolutePath());
+		File[] files = inputDir.listFiles(new TmxFilter());
+
+		for (File file : files) {
+			map = TiledLoader.createMap(new FileHandle(file.getAbsolutePath()));
+
+			IntArray usedIds = null;
+			if (this.settings.stripUnusedTiles) {
+				usedIds = new IntArray(map.layers.size() * map.height * map.width);
+				for (TiledLayer layer : map.layers) {
+					for (int y = 0; y < layer.tiles.length; ++y) {
+						for (int x = 0; x < layer.tiles[y].length; ++x) {
+							usedIds.add(layer.tiles[y][x] & ~0xE0000000);
+						}
+					}
+				}
+			}			
+			
+			for (TileSet set : map.tileSets) {
+				if (!processedTileSets.contains(set.imageName)) {
+					processedTileSets.add(set.imageName);
+					packTileSet(set, usedIds, inputDirHandle, outputDir, settings);
+				}
+			}
+
+			writeUpdatedTMX(outputDir, map.tmxFile);
+		}
+	}
+
+	private void packTileSet (TileSet set, IntArray usedIds, FileHandle inputDirHandle, File outputDir, Settings settings) throws IOException {
+		BufferedImage tile;
+		Vector2 tileLocation;
+		TileSetLayout packerTileSet;
+		Graphics g;
+
+		packer = new TexturePacker(settings);
+
+		TileSetLayout layout = new TileSetLayout(set, inputDirHandle);
+
+		for (int gid = layout.firstgid, i = 0; i < layout.numTiles; gid++, i++) {
+			if (usedIds != null && !usedIds.contains(gid)) {
+				System.out.println("Stripped Id: " + gid);
+				continue;
+			}
+				
+			
+			tileLocation = layout.getLocation(gid);
+			tile = new BufferedImage(layout.tileWidth, layout.tileHeight, BufferedImage.TYPE_4BYTE_ABGR);
+
+			g = tile.createGraphics();
+			g.drawImage(layout.image, 0, 0, layout.tileWidth, layout.tileHeight, (int)tileLocation.x, (int)tileLocation.y,
+				(int)tileLocation.x + layout.tileWidth, (int)tileLocation.y + layout.tileHeight, null);
+
+			if (isBlended(tile)) setBlended(gid);
+
+			packer.addImage(tile, removeExtension(removePath(set.imageName)) + "_" + i);
+		}
+
+		File outputFile = getRelativeFile(outputDir, removeExtension(set.imageName) + " packfile");
+		outputFile.getParentFile().mkdirs();
+		packer.process(outputFile.getParentFile(), outputFile, removeExtension(removePath(set.imageName)));
+	}
+
+	private static String removeExtension (String s) {
+		int extensionIndex = s.lastIndexOf(".");
+		if (extensionIndex == -1) return s;
+
+		return s.substring(0, extensionIndex);
+	}
+
+	private static String removePath (String s) {
+		String temp;
+
+		int index = s.lastIndexOf('\\');
+		if (index != -1)
+			temp = s.substring(index + 1);
+		else
+			temp = s;
+
+		index = temp.lastIndexOf('/');
+		if (index != -1)
+			return s.substring(index + 1);
+		else
+			return s;
+	}
+
+	private static File getRelativeFile (File path, String relativePath) {
+		if (relativePath.trim().length() == 0) return path;
+
+		File child = path;
+
+		StringTokenizer tokenizer = new StringTokenizer(relativePath, "\\/");
+		while (tokenizer.hasMoreElements()) {
+			String token = tokenizer.nextToken();
+			if (token.equals(".."))
+				child = child.getParentFile();
+			else {
+				child = new File(child, token);
+			}
+		}
+
+		return child;
+	}
+
+	private void setBlended (int tileNum) {
+		blendedTiles.add(tileNum);
+	}
+
+	private void writeUpdatedTMX (File outputDir, FileHandle tmxFileHandle) throws IOException {
+		Document doc;
+		DocumentBuilder docBuilder;
+		DocumentBuilderFactory docFactory = DocumentBuilderFactory.newInstance();
+
+		try {
+			docBuilder = docFactory.newDocumentBuilder();
+			doc = docBuilder.parse(tmxFileHandle.read());
+
+			Node map = doc.getFirstChild();
+			while (map.getNodeType() != Node.ELEMENT_NODE || map.getNodeName() != "map") {
+				if ((map = map.getNextSibling()) == null) {
+					throw new GdxRuntimeException("Couldn't find map node!");
+				}
+			}
+
+			setProperty(doc, map, "blended tiles", toCSV(blendedTiles));
+
+			TransformerFactory transformerFactory = TransformerFactory.newInstance();
+			Transformer transformer = transformerFactory.newTransformer();
+			DOMSource source = new DOMSource(doc);
+
+			outputDir.mkdirs();
+			StreamResult result = new StreamResult(new File(outputDir, tmxFileHandle.name()));
+			transformer.transform(source, result);
+
+		} catch (ParserConfigurationException e) {
+			throw new RuntimeException("ParserConfigurationException: " + e.getMessage());
+		} catch (SAXException e) {
+			throw new RuntimeException("SAXException: " + e.getMessage());
+		} catch (TransformerConfigurationException e) {
+			throw new RuntimeException("TransformerConfigurationException: " + e.getMessage());
+		} catch (TransformerException e) {
+			throw new RuntimeException("TransformerException: " + e.getMessage());
+		}
+	}
+
+	private static void setProperty (Document doc, Node parent, String name, String value) {
+		Node properties = getFirstChildNodeByName(parent, "properties");
+		Node property = getFirstChildByNameAttrValue(properties, "property", "name", name);
+
+		NamedNodeMap attributes = property.getAttributes();
+		Node valueNode = attributes.getNamedItem("value");
+		if (valueNode == null) {
+			valueNode = doc.createAttribute("value");
+			valueNode.setNodeValue(value);
+			attributes.setNamedItem(valueNode);
+		} else {
+			valueNode.setNodeValue(value);
+		}
+	}
+
+	private static String toCSV (ArrayList<Integer> values) {
+		String temp = "";
+		for (int i = 0; i < values.size() - 1; i++) {
+			temp += values.get(i) + ",";
+		}
+		if (values.size() > 0) temp += values.get(values.size() - 1);
+		return temp;
+	}
+
+	/** If the child node doesn't exist, it is created. */
+	private static Node getFirstChildNodeByName (Node parent, String child) {
+		NodeList childNodes = parent.getChildNodes();
+		for (int i = 0; i < childNodes.getLength(); i++) {
+			if (childNodes.item(i).getNodeName().equals(child)) {
+				return childNodes.item(i);
+			}
+		}
+
+		Node newNode = parent.getOwnerDocument().createElement(child);
+
+		if (childNodes.item(0) != null)
+			return parent.insertBefore(newNode, childNodes.item(0));
+		else
+			return parent.appendChild(newNode);
+	}
+
+	/** If the child node or attribute doesn't exist, it is created. Usage example: Node property =
+	 * getFirstChildByAttrValue(properties, "property", "name", "blended tiles"); */
+	private static Node getFirstChildByNameAttrValue (Node node, String childName, String attr, String value) {
+		NodeList childNodes = node.getChildNodes();
+		for (int i = 0; i < childNodes.getLength(); i++) {
+			if (childNodes.item(i).getNodeName().equals(childName)) {
+				NamedNodeMap attributes = childNodes.item(i).getAttributes();
+				Node attribute = attributes.getNamedItem(attr);
+				if (attribute.getNodeValue().equals(value)) return childNodes.item(i);
+			}
+		}
+
+		Node newNode = node.getOwnerDocument().createElement(childName);
+		NamedNodeMap attributes = newNode.getAttributes();
+
+		Attr nodeAttr = node.getOwnerDocument().createAttribute(attr);
+		nodeAttr.setNodeValue(value);
+		attributes.setNamedItem(nodeAttr);
+
+		if (childNodes.item(0) != null) {
+			return node.insertBefore(newNode, childNodes.item(0));
+		} else {
+			return node.appendChild(newNode);
+		}
+	}
+
+	private static boolean isBlended (BufferedImage tile) {
+		int[] rgbArray = new int[tile.getWidth() * tile.getHeight()];
+		tile.getRGB(0, 0, tile.getWidth(), tile.getHeight(), rgbArray, 0, tile.getWidth());
+		for (int i = 0; i < tile.getWidth() * tile.getHeight(); i++) {
+			if (((rgbArray[i] >> 24) & 0xff) != 255) {
+				return true;
+			}
+		}
+		return false;
+	}
+
+	private TileSetLayout getTileSetLayout (int tileNum, FileHandle inputDirHandle) throws IOException {
+		int firstgid = 0;
+		int lastgid;
+
+		for (TileSet set : map.tileSets) {
+			TileSetLayout layout = new TileSetLayout(set, inputDirHandle);
+			firstgid = set.firstgid;
+			lastgid = firstgid + layout.numTiles - 1;
+			if (tileNum >= firstgid && tileNum <= lastgid) {
+				return layout;
+			}
+		}
+
+		return null;
+	}
+	
+	/** Processes a directory of Tile Maps, compressing each tile set contained in any map once.
+	 * @param args args[0]: the input directory containing the tmx files (and tile sets, relative to the path listed in the tmx
+	 *           file). args[1]: The output directory for the tmx files, should be empty before running. WARNING: Use caution if
+	 *           you have a "../" in the path of your tile sets! The output for these tile sets will be relative to the output
+	 *           directory. For example, if your output directory is "C:\mydir\output" and you have a tileset with the path
+	 *           "../tileset.png", the tileset will be output to "C:\mydir\" and the maps will be in "C:\mydir\output".
+	 *           args[2]: --strip-unused (optional, include to let the TiledMapPacker remove tiles which are not used. */
+	public static void main (String[] args) {
+		File inputDir = null;
+		File outputDir = null;
+
+		Settings texturePackerSettings = new Settings();
+		
+		texturePackerSettings.padding = 2;
+		texturePackerSettings.duplicatePadding = true;
+
+		TiledMapPackerSettings packerSettings = new TiledMapPackerSettings();
+		
+		switch (args.length) {
+			case 3: {
+				inputDir = new File(args[0]);
+				outputDir = new File(args[1]);
+				if ("--strip-unused".equals(args[2])) {
+					packerSettings.stripUnusedTiles = true;
+				}
+				break;
+			}
+			case 2: {
+				inputDir = new File(args[0]);
+				outputDir = new File(args[1]);
+				break;
+			}
+			case 1: {
+				inputDir = new File(args[0]);
+				outputDir = new File(inputDir, "output/");
+				break;
+			}
+			default: {
+				System.out.println("Usage: INPUTDIR [OUTPUTDIR] [--strip-unused]");
+				System.exit(0);
+			}
+		}
+		
+		TiledMapPacker packer = new TiledMapPacker(packerSettings);
+
+		if (!inputDir.exists()) {
+			throw new RuntimeException("Input directory does not exist");
+		}
+
+		try {
+			packer.processMap(inputDir, outputDir, texturePackerSettings);
+		} catch (IOException e) {
+			throw new RuntimeException("Error processing map: " + e.getMessage());
+		}
+		
+	}
+	
+	public static class TiledMapPackerSettings {
+		public boolean stripUnusedTiles = false;
+	}
+}
diff --git a/extensions/gdx-tools/src/com/badlogic/gdx/tools/FileProcessor.java b/extensions/gdx-tools/src/com/badlogic/gdx/tools/FileProcessor.java
index d6ef4e5..fafe58f 100644
--- a/extensions/gdx-tools/src/com/badlogic/gdx/tools/FileProcessor.java
+++ b/extensions/gdx-tools/src/com/badlogic/gdx/tools/FileProcessor.java
@@ -50,19 +50,6 @@ public class FileProcessor {
 		}
 	};
 
-	public FileProcessor () {
-	}
-
-	/** Copy constructor. */
-	public FileProcessor (FileProcessor processor) {
-		inputFilter = processor.inputFilter;
-		comparator = processor.comparator;
-		inputRegex.addAll(processor.inputRegex);
-		outputSuffix = processor.outputSuffix;
-		recursive = processor.recursive;
-		flattenOutput = processor.flattenOutput;
-	}
-
 	public FileProcessor setInputFilter (FilenameFilter inputFilter) {
 		this.inputFilter = inputFilter;
 		return this;
@@ -130,11 +117,7 @@ public class FileProcessor {
 			if (comparator != null) Collections.sort(dirEntries, entryComparator);
 
 			File inputDir = mapEntry.getKey();
-			File newOutputDir = null;
-			if (flattenOutput)
-				newOutputDir = outputRoot;
-			else if (!dirEntries.isEmpty()) //
-				newOutputDir = dirEntries.get(0).outputDir;
+			File newOutputDir = flattenOutput ? outputRoot : dirEntries.get(0).outputDir;
 			String outputName = inputDir.getName();
 			if (outputSuffix != null) outputName = outputName.replaceAll("(.*)\\..*", "$1") + outputSuffix;
 
@@ -166,16 +149,6 @@ public class FileProcessor {
 
 	private void process (File[] files, File outputRoot, File outputDir, LinkedHashMap<File, ArrayList<Entry>> dirToEntries,
 		int depth) {
-		// Store empty entries for every directory.
-		for (File file : files) {
-			File dir = file.getParentFile();
-			ArrayList<Entry> entries = dirToEntries.get(dir);
-			if (entries == null) {
-				entries = new ArrayList();
-				dirToEntries.put(dir, entries);
-			}
-		}
-
 		for (File file : files) {
 			if (file.isFile()) {
 				if (inputRegex.size > 0) {
@@ -206,7 +179,12 @@ public class FileProcessor {
 					entry.outputFile = outputDir.length() == 0 ? new File(outputName) : new File(outputDir, outputName);
 				}
 
-				dirToEntries.get(dir).add(entry);
+				ArrayList<Entry> entries = dirToEntries.get(dir);
+				if (entries == null) {
+					entries = new ArrayList();
+					dirToEntries.put(dir, entries);
+				}
+				entries.add(entry);
 			}
 			if (recursive && file.isDirectory()) {
 				File subdir = outputDir.getPath().length() == 0 ? new File(file.getName()) : new File(outputDir, file.getName());
@@ -244,9 +222,5 @@ public class FileProcessor {
 			this.inputFile = inputFile;
 			this.outputFile = outputFile;
 		}
-
-		public String toString () {
-			return inputFile.toString();
-		}
 	}
 }
diff --git a/extensions/gdx-tools/src/com/badlogic/gdx/tools/imagepacker/TexturePacker2.java b/extensions/gdx-tools/src/com/badlogic/gdx/tools/imagepacker/TexturePacker2.java
index 916a900..d20718c 100644
--- a/extensions/gdx-tools/src/com/badlogic/gdx/tools/imagepacker/TexturePacker2.java
+++ b/extensions/gdx-tools/src/com/badlogic/gdx/tools/imagepacker/TexturePacker2.java
@@ -12,15 +12,13 @@
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
- ******************************************************************************/
-
+ ******************************************************************************/
 package com.badlogic.gdx.tools.imagepacker;
 
 import java.awt.Color;
 import java.awt.Graphics2D;
 import java.awt.image.BufferedImage;
 import java.io.File;
-import java.io.FileReader;
 import java.io.FileWriter;
 import java.io.IOException;
 import java.util.ArrayList;
@@ -32,18 +30,11 @@ import javax.imageio.ImageWriteParam;
 import javax.imageio.ImageWriter;
 import javax.imageio.stream.ImageOutputStream;
 
-import com.badlogic.gdx.files.FileHandle;
 import com.badlogic.gdx.graphics.Pixmap.Format;
 import com.badlogic.gdx.graphics.Texture.TextureFilter;
 import com.badlogic.gdx.graphics.Texture.TextureWrap;
-import com.badlogic.gdx.graphics.g2d.TextureAtlas;
-import com.badlogic.gdx.graphics.g2d.TextureAtlas.TextureAtlasData;
-import com.badlogic.gdx.graphics.g2d.TextureAtlas.TextureAtlasData.Region;
 import com.badlogic.gdx.math.MathUtils;
 import com.badlogic.gdx.utils.Array;
-import com.badlogic.gdx.utils.GdxRuntimeException;
-import com.badlogic.gdx.utils.JsonReader;
-import com.badlogic.gdx.utils.SerializationException;
 
 /** @author Nathan Sweet */
 public class TexturePacker2 {
@@ -112,14 +103,6 @@ public class TexturePacker2 {
 			width = Math.max(settings.minWidth, width);
 			height = Math.max(settings.minHeight, height);
 
-			if (settings.forceSquareOutput) {
-				if (width > height) {
-					height = width;
-				} else {
-					width = height;
-				}
-			}
-
 			File outputFile;
 			while (true) {
 				outputFile = new File(outputDir, imageName + (fileIndex++ == 0 ? "" : fileIndex) + "." + settings.outputFormat);
@@ -148,10 +131,8 @@ public class TexturePacker2 {
 					int imageHeight = image.getHeight();
 					// Copy corner pixels to fill corners of the padding.
 					g.drawImage(image, rectX - amountX, rectY - amountY, rectX, rectY, 0, 0, 1, 1, null);
-					g.drawImage(image, rectX + imageWidth, rectY - amountY, rectX + imageWidth + amountX, rectY, imageWidth - 1, 0,
-						imageWidth, 1, null);
-					g.drawImage(image, rectX - amountX, rectY + imageHeight, rectX, rectY + imageHeight + amountY, 0, imageHeight - 1,
-						1, imageHeight, null);
+					g.drawImage(image, rectX + imageWidth, rectY - amountY, rectX + imageWidth + amountX, rectY, imageWidth - 1, 0, imageWidth, 1, null);
+					g.drawImage(image, rectX - amountX, rectY + imageHeight, rectX, rectY + imageHeight + amountY, 0, imageHeight - 1, 1, imageHeight, null);
 					g.drawImage(image, rectX + imageWidth, rectY + imageHeight, rectX + imageWidth + amountX, rectY + imageHeight
 						+ amountY, imageWidth - 1, imageHeight - 1, imageWidth, imageHeight, null);
 					// Copy edge pixels into padding.
@@ -200,27 +181,7 @@ public class TexturePacker2 {
 
 	private void writePackFile (File outputDir, Array<Page> pages, String packFileName) throws IOException {
 		File packFile = new File(outputDir, packFileName);
-
-		if (packFile.exists()) {
-			// Make sure there aren't duplicate names.
-			TextureAtlasData textureAtlasData = new TextureAtlasData(new FileHandle(packFile), new FileHandle(packFile), false);
-			for (Page page : pages) {
-				for (Rect rect : page.outputRects) {
-					String rectName = settings.flattenPaths ? new FileHandle(rect.name).name() : rect.name;
-					System.out.println(rectName);
-					for (Region region : textureAtlasData.getRegions()) {
-						if (region.name.equals(rectName)) {
-							throw new GdxRuntimeException("A region with the name \"" + rectName + "\" has already been packed: "
-								+ rect.name);
-						}
-					}
-				}
-			}
-		}
-
 		FileWriter writer = new FileWriter(packFile, true);
-// if (settings.jsonOutput) {
-// } else {
 		for (Page page : pages) {
 			writer.write("\n" + page.imageName + "\n");
 			writer.write("format: " + settings.format + "\n");
@@ -235,13 +196,11 @@ public class TexturePacker2 {
 				}
 			}
 		}
-// }
 		writer.close();
 	}
 
 	private void writeRect (FileWriter writer, Page page, Rect rect) throws IOException {
-		String rectName = settings.flattenPaths ? new FileHandle(rect.name).name() : rect.name;
-		writer.write(rectName + "\n");
+		writer.write(rect.name + "\n");
 		writer.write("  rotate: " + rect.rotated + "\n");
 		writer.write("  xy: " + (page.x + rect.x) + ", " + (page.y + page.height - rect.height - rect.y) + "\n");
 		writer.write("  size: " + rect.image.getWidth() + ", " + rect.image.getHeight() + "\n");
@@ -376,7 +335,6 @@ public class TexturePacker2 {
 		public boolean rotation;
 		public int minWidth = 16, minHeight = 16;
 		public int maxWidth = 1024, maxHeight = 1024;
-		public boolean forceSquareOutput = false;
 		public boolean stripWhitespaceX, stripWhitespaceY;
 		public int alphaThreshold;
 		public TextureFilter filterMin = TextureFilter.Nearest, filterMag = TextureFilter.Nearest;
@@ -388,9 +346,6 @@ public class TexturePacker2 {
 		public boolean ignoreBlankImages = true;
 		public boolean fast;
 		public boolean debug;
-		public boolean combineSubdirectories;
-		public boolean jsonOutput = true;
-		public boolean flattenPaths;
 
 		public Settings () {
 		}
@@ -420,9 +375,6 @@ public class TexturePacker2 {
 			wrapY = settings.wrapY;
 			duplicatePadding = settings.duplicatePadding;
 			debug = settings.debug;
-			combineSubdirectories = settings.combineSubdirectories;
-			jsonOutput = settings.jsonOutput;
-			flattenPaths = settings.flattenPaths;
 		}
 	}
 
@@ -487,4 +439,4 @@ public class TexturePacker2 {
 
 		process(input, output, packFileName);
 	}
-}
+}
\ No newline at end of file
diff --git a/extensions/gdx-tools/src/com/badlogic/gdx/tools/imagepacker/TexturePackerFileProcessor.java b/extensions/gdx-tools/src/com/badlogic/gdx/tools/imagepacker/TexturePackerFileProcessor.java
index 55c37b5..d0442dc 100644
--- a/extensions/gdx-tools/src/com/badlogic/gdx/tools/imagepacker/TexturePackerFileProcessor.java
+++ b/extensions/gdx-tools/src/com/badlogic/gdx/tools/imagepacker/TexturePackerFileProcessor.java
@@ -12,24 +12,19 @@
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
- ******************************************************************************/
-
+ ******************************************************************************/
 package com.badlogic.gdx.tools.imagepacker;
 
+import java.io.File;
+import java.io.FileReader;
+import java.util.ArrayList;
+import java.util.regex.Pattern;
+
 import com.badlogic.gdx.tools.FileProcessor;
 import com.badlogic.gdx.tools.imagepacker.TexturePacker2.Settings;
-import com.badlogic.gdx.utils.GdxRuntimeException;
 import com.badlogic.gdx.utils.Json;
 import com.badlogic.gdx.utils.JsonReader;
 import com.badlogic.gdx.utils.ObjectMap;
-import com.badlogic.gdx.utils.SerializationException;
-
-import java.io.File;
-import java.io.FileReader;
-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.Comparator;
-import java.util.regex.Pattern;
 
 /** @author Nathan Sweet */
 public class TexturePackerFileProcessor extends FileProcessor {
@@ -38,7 +33,6 @@ public class TexturePackerFileProcessor extends FileProcessor {
 	private Json json = new Json();
 	private String packFileName;
 	private File root;
-	ArrayList<File> ignoreDirs = new ArrayList();
 
 	public TexturePackerFileProcessor () {
 		this(new Settings(), "pack.atlas");
@@ -56,46 +50,6 @@ public class TexturePackerFileProcessor extends FileProcessor {
 
 	public ArrayList<Entry> process (File inputFile, File outputRoot) throws Exception {
 		root = inputFile;
-
-		// Collect pack.json setting files.
-		final ArrayList<File> settingsFiles = new ArrayList();
-		FileProcessor settingsProcessor = new FileProcessor() {
-			protected void processFile (Entry inputFile) throws Exception {
-				settingsFiles.add(inputFile.inputFile);
-			}
-		};
-		settingsProcessor.addInputRegex("pack\\.json");
-		settingsProcessor.process(inputFile, null);
-		// Sort parent first.
-		Collections.sort(settingsFiles, new Comparator<File>() {
-			public int compare (File file1, File file2) {
-				return file1.toString().length() - file2.toString().length();
-			}
-		});
-		for (File settingsFile : settingsFiles) {
-			// Find first parent with settings, or use defaults.
-			Settings settings = null;
-			File parent = settingsFile.getParentFile();
-			while (true) {
-				if (parent.equals(root)) break;
-				parent = parent.getParentFile();
-				settings = dirToSettings.get(parent);
-				if (settings != null) {
-					settings = new Settings(settings);
-					break;
-				}
-			}
-			if (settings == null) settings = new Settings(defaultSettings);
-			// Merge settings from current directory.
-			try {
-				json.readFields(settings, new JsonReader().parse(new FileReader(settingsFile)));
-			} catch (SerializationException ex) {
-				throw new GdxRuntimeException("Error reading settings file: " + settingsFile, ex);
-			}
-			dirToSettings.put(settingsFile.getParentFile(), settings);
-		}
-
-		// Do actual processing.
 		return super.process(inputFile, outputRoot);
 	}
 
@@ -121,39 +75,31 @@ public class TexturePackerFileProcessor extends FileProcessor {
 	}
 
 	protected void processDir (Entry inputDir, ArrayList<Entry> files) throws Exception {
-		if (ignoreDirs.contains(inputDir.inputFile)) return;
+		System.out.println(inputDir.inputFile.getName());
 
-		// Find first parent with settings, or use defaults.
+		// Start with a copy of a parent dir's settings or the default settings.
 		Settings settings = null;
 		File parent = inputDir.inputFile;
 		while (true) {
-			settings = dirToSettings.get(parent);
-			if (settings != null) break;
 			if (parent.equals(root)) break;
 			parent = parent.getParentFile();
+			settings = dirToSettings.get(parent);
+			if (settings != null) {
+				settings = new Settings(settings);
+				break;
+			}
 		}
-		if (settings == null) settings = defaultSettings;
-
-		if (settings.combineSubdirectories) {
-			// Collect all files under subdirectories and ignore subdirectories so they won't be packed twice.
-			files = new FileProcessor(this) {
-				protected void processDir (Entry entryDir, ArrayList<Entry> files) {
-					ignoreDirs.add(entryDir.inputFile);
-				}
-
-				protected void processFile (Entry entry) {
-					addProcessedFile(entry);
-				}
-			}.process(inputDir.inputFile, null);
-		}
+		if (settings == null) settings = new Settings(defaultSettings);
+		dirToSettings.put(inputDir.inputFile, settings);
 
-		if (files.isEmpty()) return;
+		// Merge settings from pack.json file.
+		File settingsFile = new File(inputDir.inputFile, "pack.json");
+		if (settingsFile.exists()) json.readFields(settings, new JsonReader().parse(new FileReader(settingsFile)));
 
 		// Pack.
-		System.out.println(inputDir.inputFile.getName());
 		TexturePacker2 packer = new TexturePacker2(root, settings);
 		for (Entry file : files)
 			packer.addImage(file.inputFile);
 		packer.pack(inputDir.outputDir, packFileName);
 	}
-}
+}
\ No newline at end of file
diff --git a/extensions/gdx-tools/src/com/badlogic/gdx/tools/imagepacker/TexturePackerTest.java b/extensions/gdx-tools/src/com/badlogic/gdx/tools/imagepacker/TexturePackerTest.java
index 06543fb..47e83d2 100644
--- a/extensions/gdx-tools/src/com/badlogic/gdx/tools/imagepacker/TexturePackerTest.java
+++ b/extensions/gdx-tools/src/com/badlogic/gdx/tools/imagepacker/TexturePackerTest.java
@@ -81,15 +81,15 @@ public class TexturePackerTest extends ApplicationAdapter {
 		int x = 20, y = 20;
 		for (Page page : pages) {
 			renderer.setColor(Color.GRAY);
-			renderer.begin(ShapeType.Filled);
+			renderer.begin(ShapeType.FilledRectangle);
 			for (int i = 0; i < page.outputRects.size; i++) {
 				Rect rect = page.outputRects.get(i);
-				renderer.rect(x + rect.x + settings.paddingX, y + rect.y + settings.paddingY, rect.width - settings.paddingX,
+				renderer.filledRect(x + rect.x + settings.paddingX, y + rect.y + settings.paddingY, rect.width - settings.paddingX,
 					rect.height - settings.paddingY);
 			}
 			renderer.end();
 			renderer.setColor(Color.RED);
-			renderer.begin(ShapeType.Line);
+			renderer.begin(ShapeType.Rectangle);
 			for (int i = 0; i < page.outputRects.size; i++) {
 				Rect rect = page.outputRects.get(i);
 				renderer.rect(x + rect.x + settings.paddingX, y + rect.y + settings.paddingY, rect.width - settings.paddingX,
diff --git a/extensions/model-loaders/model-loaders-android/libs/armeabi-v7a/libandroidgl20.so b/extensions/model-loaders/model-loaders-android/libs/armeabi-v7a/libandroidgl20.so
new file mode 100644
index 0000000..7a7cd7f
Binary files /dev/null and b/extensions/model-loaders/model-loaders-android/libs/armeabi-v7a/libandroidgl20.so differ
diff --git a/extensions/model-loaders/model-loaders-android/libs/armeabi-v7a/libgdx.so b/extensions/model-loaders/model-loaders-android/libs/armeabi-v7a/libgdx.so
new file mode 100644
index 0000000..8d31a3e
Binary files /dev/null and b/extensions/model-loaders/model-loaders-android/libs/armeabi-v7a/libgdx.so differ
diff --git a/extensions/model-loaders/model-loaders-android/libs/armeabi/libandroidgl20.so b/extensions/model-loaders/model-loaders-android/libs/armeabi/libandroidgl20.so
new file mode 100644
index 0000000..7a7cd7f
Binary files /dev/null and b/extensions/model-loaders/model-loaders-android/libs/armeabi/libandroidgl20.so differ
diff --git a/extensions/model-loaders/model-loaders-android/libs/armeabi/libgdx.so b/extensions/model-loaders/model-loaders-android/libs/armeabi/libgdx.so
new file mode 100644
index 0000000..36f294f
Binary files /dev/null and b/extensions/model-loaders/model-loaders-android/libs/armeabi/libgdx.so differ
diff --git a/extensions/model-loaders/model-loaders-android/project.properties b/extensions/model-loaders/model-loaders-android/project.properties
index c4f09d2..2cc58fa 100644
--- a/extensions/model-loaders/model-loaders-android/project.properties
+++ b/extensions/model-loaders/model-loaders-android/project.properties
@@ -8,4 +8,4 @@
 # project structure.
 
 # Project target.
-target=android-17
+target=android-12
diff --git a/fetch.xml b/fetch.xml
deleted file mode 100755
index dfa1bdb..0000000
--- a/fetch.xml
+++ /dev/null
@@ -1,138 +0,0 @@
-<!-- Call this to fetch all the natives from the build server -->
-<project name="fetch-natives" default="all">
-	<property name="domain" value="http://libgdx.badlogicgames.com/nightlies/dist"/>
-	<target name="fetch">		
-		<!-- create a temporary directory for all android and ios natives, to be distributed
-		     across demos and tests. The xxx-natives.jar files are put into the respective 
-			 project's libs/ folder -->
-		<mkdir dir="tmp"/>
-		<mkdir dir="tmp/armeabi"/>
-		<mkdir dir="tmp/armeabi-v7a"/>
-		<mkdir dir="tmp/ios"/>
-		
-		<!-- core -->
-		<mkdir dir="gdx/libs/ios32"/>
-		<get src="${domain}/gdx-natives.jar" dest="gdx/libs"/>
-		<get src="${domain}/armeabi/libandroidgl20.so" dest="tmp/armeabi"/>
-		<get src="${domain}/armeabi/libgdx.so" dest="tmp/armeabi"/>
-		<get src="${domain}/armeabi-v7a/libandroidgl20.so" dest="tmp/armeabi-v7a"/>
-		<get src="${domain}/armeabi-v7a/libgdx.so" dest="tmp/armeabi-v7a"/>
-		<get src="${domain}/ios/gdx.dll" dest="gdx/libs/ios32"/>
-		<get src="${domain}/ios/gdx.dll.mdb" dest="gdx/libs/ios32"/>
-		<get src="${domain}/ios/libgdx.a" dest="tmp/ios"/>
-		<get src="${domain}/ios/ikvm/bin/libikvm-natives.a" dest="tmp/ios"/>
-		
-		<!-- ios backend -->
-		<mkdir dir="backends/gdx-backend-iosmonotouch/libs/ios32"/>
-		<get src="${domain}/ios/gdx-backend-ios.dll" dest="backends/gdx-backend-iosmonotouch/libs/ios32"/>
-		<get src="${domain}/ios/gdx-backend-ios.dll.mdb" dest="backends/gdx-backend-iosmonotouch/libs/ios32"/>		
-		
-		<!-- audio natives -->
-		<mkdir dir="extensions/gdx-audio/libs/ios32"/>
-		<get src="${domain}/extensions/gdx-audio/gdx-audio-natives.jar" dest="extensions/gdx-audio/libs"/>
-		<get src="${domain}/extensions/gdx-audio/armeabi/libgdx-audio.so" dest="tmp/armeabi"/>
-		<get src="${domain}/extensions/gdx-audio/armeabi-v7a/libgdx-audio.so" dest="tmp/armeabi-v7a"/>
-		
-		<!-- bullet natives -->
-		<mkdir dir="extensions/gdx-bullet/libs/ios32"/>
-		<get src="${domain}/extensions/gdx-bullet/gdx-bullet-natives.jar" dest="extensions/gdx-bullet/libs"/>
-		<get src="${domain}/extensions/gdx-bullet/armeabi/libgdx-bullet.so" dest="tmp/armeabi"/>
-		<get src="${domain}/extensions/gdx-bullet/armeabi-v7a/libgdx-bullet.so" dest="tmp/armeabi-v7a"/>
-		
-		<!-- controllers natives, desktop only -->
-		<mkdir dir="extensions/gdx-controllers/gdx-controllers-desktop/libs/ios32"/>
-		<get src="${domain}/extensions/gdx-controllers/gdx-controllers-desktop-natives.jar" dest="extensions/gdx-controllers/gdx-controllers-desktop/libs"/>
-		
-		<!-- freetype natives -->
-		<mkdir dir="extensions/gdx-freetype/libs/ios32"/>
-		<get src="${domain}/extensions/gdx-freetype/gdx-freetype-natives.jar" dest="extensions/gdx-freetype/libs"/>
-		<get src="${domain}/extensions/gdx-freetype/armeabi/libgdx-freetype.so" dest="tmp/armeabi"/>
-		<get src="${domain}/extensions/gdx-freetype/armeabi-v7a/libgdx-freetype.so" dest="tmp/armeabi-v7a"/>
-		<get src="${domain}/extensions/gdx-freetype/ios/gdx-freetype.dll" dest="extensions/gdx-freetype/libs/ios32"/>
-		<get src="${domain}/extensions/gdx-freetype/ios/gdx-freetype.dll.mdb" dest="extensions/gdx-freetype/libs/ios32"/>
-		<get src="${domain}/extensions/gdx-freetype/ios/libgdx-freetype.a" dest="tmp/ios"/>
-		
-		<!-- image natives -->
-		<mkdir dir="extensions/gdx-image/libs/ios32"/>
-		<get src="${domain}/extensions/gdx-image/gdx-image-natives.jar" dest="extensions/gdx-image/libs"/>
-		<get src="${domain}/extensions/gdx-image/armeabi/libgdx-image.so" dest="tmp/armeabi"/>
-		<get src="${domain}/extensions/gdx-image/armeabi-v7a/libgdx-image.so" dest="tmp/armeabi-v7a"/>	
-
-		<!-- jglfw -->
-		<mkdir dir="backends/gdx-backend-jglfw/libs"/>
-		<get src="http://libgdx.badlogicgames.com/jglfw/nightlies/dist/jglfw-natives.jar" dest="backends/gdx-backend-jglfw/libs/gdx-backend-jglfw-natives.jar"/>
-		<get src="http://libgdx.badlogicgames.com/jglfw/nightlies/dist/jglfw.jar" dest="backends/gdx-backend-jglfw/libs/"/>
-	</target>
-	
-	<target name="copy">
-		<!-- copy all extension natives to android tests -->
-		<copy todir="tests/gdx-tests-android/libs/armeabi">
-			<fileset dir="tmp/armeabi"/>			
-		</copy>
-		<copy todir="tests/gdx-tests-android/libs/armeabi-v7a">
-			<fileset dir="tmp/armeabi-v7a"/>			
-		</copy>
-		
-		<!-- copy all extension natives to ios tests -->
-		<copy todir="tests/gdx-tests-iosmonotouch/gdx-tests-iosmonotouch">
-			<fileset dir="tmp/ios"/>
-		</copy>
-	
-		<!-- filesets to copy to demos -->
-		<fileset id="gdx-armeabi" dir="tmp/armeabi">
-			<include name="**/libandroidgl20.so"/>
-			<include name="**/libgdx.so"/>
-		</fileset>
-		<fileset id="gdx-armeabi-v7a" dir="tmp/armeabi-v7a">
-			<include name="**/libandroidgl20.so"/>
-			<include name="**/libgdx.so"/>
-		</fileset>
-		<fileset id="gdx-ios" dir="tmp/ios">
-			<include name="**/libgdx.a"/>
-			<include name="**/libikvm-natives.a"/>
-		</fileset>
-		
-		<!-- copy to demos -->
-		<!-- invaders -->
-		<copy todir="demos/invaders/gdx-invaders-android/libs/armeabi"><fileset refid="gdx-armeabi"/></copy>
-		<copy todir="demos/invaders/gdx-invaders-android/libs/armeabi-v7a"><fileset refid="gdx-armeabi-v7a"/></copy>
-		<copy todir="demos/invaders/gdx-invaders-ios/gdx-invaders-ios"><fileset refid="gdx-ios"/></copy>
-				
-		<!-- vector pinball -->
-		<copy todir="demos/vector-pinball/gdx-vectorpinball-android/libs/armeabi"><fileset refid="gdx-armeabi"/></copy>
-		<copy todir="demos/vector-pinball/gdx-vectorpinball-android/libs/armeabi-v7a"><fileset refid="gdx-armeabi-v7a"/></copy>
-		<copy todir="demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios"><fileset refid="gdx-ios"/></copy>
-		
-		<!-- super jumper -->
-		<copy todir="demos/superjumper/superjumper-android/libs/armeabi"><fileset refid="gdx-armeabi"/></copy>
-		<copy todir="demos/superjumper/superjumper-android/libs/armeabi-v7a"><fileset refid="gdx-armeabi-v7a"/></copy>
-		<copy todir="demos/superjumper/superjumper-ios/superjumper-ios"><fileset refid="gdx-ios"/></copy>
-		
-		<!-- metagun -->
-		<copy todir="demos/metagun/metagun-android/libs/armeabi"><fileset refid="gdx-armeabi"/></copy>
-		<copy todir="demos/metagun/metagun-android/libs/armeabi-v7a"><fileset refid="gdx-armeabi-v7a"/></copy>
-		
-		<!-- cuboc -->
-		<copy todir="demos/cuboc/cuboc-android/libs/armeabi"><fileset refid="gdx-armeabi"/></copy>
-		<copy todir="demos/cuboc/cuboc-android/libs/armeabi-v7a"><fileset refid="gdx-armeabi-v7a"/></copy>
-		
-		<!-- pax britannica -->
-		<copy todir="demos/pax-britannica/pax-britannica-android/libs/armeabi"><fileset refid="gdx-armeabi"/></copy>
-		<copy todir="demos/pax-britannica/pax-britannica-android/libs/armeabi-v7a"><fileset refid="gdx-armeabi-v7a"/></copy>
-		<copy todir="demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch"><fileset refid="gdx-ios"/></copy>
-		
-		<!-- very angry robots -->
-		<copy todir="demos/very-angry-robots/very-angry-robots-android/libs/armeabi"><fileset refid="gdx-armeabi"/></copy>
-		<copy todir="demos/very-angry-robots/very-angry-robots-android/libs/armeabi-v7a"><fileset refid="gdx-armeabi-v7a"/></copy>
-		
-		<!-- model loaders -->
-		<copy todir="extensions/model-loaders/model-loaders-android/libs/armeabi"><fileset refid="gdx-armeabi"/></copy>
-		<copy todir="extensions/model-loaders/model-loaders-android/libs/armeabi-v7a"><fileset refid="gdx-armeabi-v7a"/></copy>
-		
-		<!-- gdx remote -->
-		<copy todir="extensions/gdx-remote/libs/armeabi"><fileset refid="gdx-armeabi"/></copy>
-		<copy todir="extensions/gdx-remote/libs/armeabi-v7a"><fileset refid="gdx-armeabi-v7a"/></copy>
-	</target>
-	
-	<target name="all" depends="fetch,copy"/>
-</project>
\ No newline at end of file
diff --git a/gdx/CONTRIBUTORS b/gdx/CONTRIBUTORS
index be223a6..aa2e1fb 100644
--- a/gdx/CONTRIBUTORS
+++ b/gdx/CONTRIBUTORS
@@ -19,4 +19,3 @@ Logan Hendershot mobtekdev@gmail.com (tutorials/wiki)
 Soren Nielsen shiu@tophatinteractive.com (artsy fartsy stuff)
 Aurelien Ribon aurelien.ribon@gmail.com (box2d editor & extensions)
 Daniel Heinrich dannynullzwo@gmail.com
-Manuel Bua manuel.bua@gmail.com
diff --git a/gdx/jni/build-ios32.xml b/gdx/jni/build-ios32.xml
deleted file mode 100755
index 54d559c..0000000
--- a/gdx/jni/build-ios32.xml
+++ /dev/null
@@ -1,186 +0,0 @@
-<project name="gdx-IOS-32" basedir="." default="postcompile">
-	<!-- include the environment -->
-	<property environment="env"/>	
-	<!-- output directory for temporary object files -->
-	<property name="buildDir" value="../target/native/ios32" />
-	<!-- output directory for the shared library -->
-	<property name="libsDir" value="../libs/ios32" />
-	<!-- the name of the shared library -->
-	<property name="libName" value="libgdx.a"/>
-	<!-- the jni header jniPlatform to use -->
-	<property name="jniPlatform" value="mac"/>
-	<!-- the compilerPrefix for the C & C++ compilers -->
-	<property name="compilerPrefix" value=""/>	
-	<property name="iphoneos-platform" value="/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin"/>
-	<property name="iphoneos-sdk" value="/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS6.0.sdk/"/>
-	<property name="iphonesimulator-platform" value="/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/usr/bin"/>
-	<property name="iphonesimulator-sdk" value="/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator6.0.sdk/"/>
-	
-	<!-- define gcc compiler, options and files to compile -->
-	<property name="gcc" value="${compilerPrefix}gcc"/>	
-	<property name="gcc-opts" value="-c -Wall -O2"/>
-	<fileset id="gcc-files" dir="./">
-		<exclude name="target/"/>		
-				<include name="memcpy_wrap.c"/>
-		<include name="**/*.c"/>
-
-		
-	</fileset>
-	
-	<!-- define g++ compiler, options and files to compile -->
-	<property name="g++" value="${compilerPrefix}g++"/>
-	<property name="g++-opts" value="-c -Wall -O2"/>
-	<fileset id="g++-files" dir="./">
-		<exclude name="target/"/>
-				<include name="**/*.cpp"/>
-
-		
-	</fileset>
-
-	<!-- define linker and options -->
-	<property name="linker" value="${compilerPrefix}ar"/>
-	<property name="linker-opts" value="rcs"/>
-	<property name="libraries" value=""/>
-	
-	<!-- cleans the build directory, removes all object files and shared libs -->
-	<target name="clean">
-		<delete includeemptydirs="true" quiet="true">
-			<fileset dir="${buildDir}"/>
-			<fileset dir="${libsDir}" includes="**/*" excludes="**/.svn"/>
-		</delete>
-	</target>
-	
-	<target name="clean-objfiles">
-		<delete>
-			<fileset dir="${buildDir}">
-				<include name="**/*.o"/>
-			</fileset>
-		</delete>
-	</target>
-	
-	<target name="create-build-dir">
-		<!-- FIXME this is pretty nasty :/ -->
-		<copy todir="${buildDir}">
-			<fileset refid="g++-files"/>
-			<fileset refid="gcc-files"/>
-		</copy>
-		<delete>
-			<fileset dir="${buildDir}">
-				<include name="*"/>
-				<exclude name="*.o"/>
-			</fileset>
-		</delete>
-	</target>
-
-	<!-- compiles all C and C++ files to object files in the build directory, for 386 builds-->
-	<target name="compile-386" depends="clean,create-build-dir">
-		<mkdir dir="${buildDir}"/>
-		<apply failonerror="true" executable="${iphonesimulator-platform}/${g++}" dest="${buildDir}" verbose="true">
-			<arg line="-isysroot ${iphonesimulator-sdk} -arch i386 ${g++-opts}"/>
-			<arg value="-Ijni-headers"/>
-			<arg value="-Ijni-headers/${jniPlatform}"/>
-			<arg value="-I."/>
-			
-			<srcfile/>
-			<arg value="-o"/>
-			<targetfile/>
-			<fileset refid="g++-files"/>
-			<compositemapper>
-				<mapper type="glob" from="*.cpp" to="*.o"/>
-				<mapper type="glob" from="*.mm" to="*.o"/>
-			</compositemapper>
-		</apply>
-		<apply failonerror="true" executable="${iphonesimulator-platform}/${gcc}" dest="${buildDir}" verbose="true">
-			<arg line="-isysroot ${iphonesimulator-sdk} -arch i386 ${gcc-opts}"/>
-			<arg value="-Ijni-headers"/>
-			<arg value="-Ijni-headers/${jniPlatform}"/>
-			<arg value="-I."/>
-			
-			<srcfile/>
-			<arg value="-o"/>
-			<targetfile/>
-			<fileset refid="gcc-files"/>
-			<compositemapper>
-				<mapper type="glob" from="*.c" to="*.o"/>
-			</compositemapper>
-		</apply>
-	</target>	
-
-	<!-- links the shared library based on the previously compiled object files -->
-	<target name="link-386" depends="compile-386">
-		<fileset dir="${buildDir}" id="objFileSet">
-			<patternset>
-				<include name="**/*.o" />
-			</patternset>
-		</fileset>
-		<pathconvert pathsep=" " property="objFiles" refid="objFileSet" />
-		<mkdir dir="${libsDir}" />
-		<exec executable="${iphonesimulator-platform}/${linker}" failonerror="true" dir="${buildDir}">
-			<arg line="${linker-opts}" />
-			<arg path="${libsDir}/${libName}.386" />
-			<arg line="${objFiles}"/>
-			<arg line="${libraries}" />
-		</exec>
-	</target>
-	
-	<!-- compiles all C and C++ files to object files in the build directory, for 386 builds-->
-	<target name="compile-arm" depends="create-build-dir,clean-objfiles">
-		<mkdir dir="${buildDir}"/>
-		<apply failonerror="true" executable="${iphoneos-platform}/${g++}" dest="${buildDir}" verbose="true">
-			<arg line="-isysroot ${iphoneos-sdk} -arch armv7 ${g++-opts}"/>
-			<arg value="-Ijni-headers"/>
-			<arg value="-Ijni-headers/${jniPlatform}"/>
-			<arg value="-I."/>
-			
-			<srcfile/>
-			<arg value="-o"/>
-			<targetfile/>
-			<fileset refid="g++-files"/>
-			<compositemapper>
-				<mapper type="glob" from="*.cpp" to="*.o"/>
-				<mapper type="glob" from="*.mm" to="*.o"/>
-			</compositemapper>
-		</apply>
-		<apply failonerror="true" executable="${iphoneos-platform}/${gcc}" dest="${buildDir}" verbose="true">
-			<arg line="-isysroot ${iphoneos-sdk} -arch armv7 ${gcc-opts}"/>
-			<arg value="-Ijni-headers"/>
-			<arg value="-Ijni-headers/${jniPlatform}"/>
-			<arg value="-I."/>
-			
-			<srcfile/>
-			<arg value="-o"/>
-			<targetfile/>
-			<fileset refid="gcc-files"/>
-			<compositemapper>
-				<mapper type="glob" from="*.c" to="*.o"/>
-			</compositemapper>
-		</apply>
-	</target>	
-
-	<!-- links the shared library based on the previously compiled object files -->
-	<target name="link-arm" depends="compile-arm">
-		<fileset dir="${buildDir}" id="objFileSet">
-			<patternset>
-				<include name="**/*.o" />
-			</patternset>
-		</fileset>
-		<pathconvert pathsep=" " property="objFiles" refid="objFileSet" />
-		<mkdir dir="${libsDir}" />
-		<exec executable="${iphoneos-platform}/${linker}" failonerror="true" dir="${buildDir}">
-			<arg line="${linker-opts}" />
-			<arg path="${libsDir}/${libName}.armv7" />
-			<arg line="${objFiles}"/>
-			<arg line="${libraries}" />
-		</exec>
-	</target>
-
-	<target name="link-fat">
-		<exec executable="lipo" failonerror="true" dir="${libsDir}">
-			<arg line="-create -output ${libName} ${libName}.386 ${libName}.armv7"/>
-		</exec>
-	</target>
-
-	<target name="postcompile" depends="link-386,link-arm,link-fat">
-		
-	</target>
-</project>
diff --git a/gdx/jni/build.xml b/gdx/jni/build.xml
index 077eade..43dbc5e 100644
--- a/gdx/jni/build.xml
+++ b/gdx/jni/build.xml
@@ -25,7 +25,6 @@
 			<fileset dir="../libs/linux32" includes="libgdx.so"/>
 			<fileset dir="../libs/linux64" includes="libgdx64.so"/>
 			<fileset dir="../libs/android32" includes="libgdx.so"/>
-			<fileset dir="../libs/ios32" includes="libgdx.a"/>
 
 		</jar>
 	</target>
diff --git a/gdx/jni/com.badlogic.gdx.physics.box2d.ChainShape.cpp b/gdx/jni/com.badlogic.gdx.physics.box2d.ChainShape.cpp
index ba87534..f2f43c2 100644
--- a/gdx/jni/com.badlogic.gdx.physics.box2d.ChainShape.cpp
+++ b/gdx/jni/com.badlogic.gdx.physics.box2d.ChainShape.cpp
@@ -6,7 +6,7 @@
 	 JNIEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_box2d_ChainShape_newChainShape(JNIEnv* env, jobject object) {
 
 
-//@line:32
+//@line:31
 
 		return (jlong)(new b2ChainShape());
 	
@@ -17,7 +17,7 @@ JNIEXPORT void JNICALL Java_com_badlogic_gdx_physics_box2d_ChainShape_jniCreateL
 	float* verts = (float*)env->GetPrimitiveArrayCritical(obj_verts, 0);
 
 
-//@line:57
+//@line:55
 
 		b2ChainShape* chain = (b2ChainShape*)addr;
 		b2Vec2* verticesOut = new b2Vec2[numVertices];
@@ -34,7 +34,7 @@ JNIEXPORT void JNICALL Java_com_badlogic_gdx_physics_box2d_ChainShape_jniCreateC
 	float* verts = (float*)env->GetPrimitiveArrayCritical(obj_verts, 0);
 
 
-//@line:78
+//@line:75
 
 		b2ChainShape* chain = (b2ChainShape*)addr;
 		b2Vec2* verticesOut = new b2Vec2[numVertices];
@@ -50,7 +50,7 @@ JNIEXPORT void JNICALL Java_com_badlogic_gdx_physics_box2d_ChainShape_jniCreateC
 JNIEXPORT void JNICALL Java_com_badlogic_gdx_physics_box2d_ChainShape_jniSetPrevVertex(JNIEnv* env, jobject object, jlong addr, jfloat x, jfloat y) {
 
 
-//@line:97
+//@line:94
 
 		b2ChainShape* chain = (b2ChainShape*)addr;
 		chain->SetPrevVertex(b2Vec2(x, y));
@@ -61,7 +61,7 @@ JNIEXPORT void JNICALL Java_com_badlogic_gdx_physics_box2d_ChainShape_jniSetPrev
 JNIEXPORT void JNICALL Java_com_badlogic_gdx_physics_box2d_ChainShape_jniSetNextVertex(JNIEnv* env, jobject object, jlong addr, jfloat x, jfloat y) {
 
 
-//@line:112
+//@line:109
 
 		b2ChainShape* chain = (b2ChainShape*)addr;
 		chain->SetNextVertex(b2Vec2(x, y));
@@ -72,7 +72,7 @@ JNIEXPORT void JNICALL Java_com_badlogic_gdx_physics_box2d_ChainShape_jniSetNext
 JNIEXPORT jint JNICALL Java_com_badlogic_gdx_physics_box2d_ChainShape_jniGetVertexCount(JNIEnv* env, jobject object, jlong addr) {
 
 
-//@line:122
+//@line:119
 
 		b2ChainShape* chain = (b2ChainShape*)addr;
 		return chain->GetVertexCount();
@@ -84,7 +84,7 @@ JNIEXPORT void JNICALL Java_com_badlogic_gdx_physics_box2d_ChainShape_jniGetVert
 	float* verts = (float*)env->GetPrimitiveArrayCritical(obj_verts, 0);
 
 
-//@line:138
+//@line:135
 
 		b2ChainShape* chain = (b2ChainShape*)addr;
 		const b2Vec2 v = chain->GetVertex( index );
diff --git a/gdx/jni/com.badlogic.gdx.physics.box2d.joints.WeldJoint.cpp b/gdx/jni/com.badlogic.gdx.physics.box2d.joints.WeldJoint.cpp
old mode 100644
new mode 100755
diff --git a/gdx/jni/com.badlogic.gdx.physics.box2d.joints.WeldJoint.h b/gdx/jni/com.badlogic.gdx.physics.box2d.joints.WeldJoint.h
old mode 100644
new mode 100755
diff --git a/gdx/jni/gdx2d/gdx2d.c b/gdx/jni/gdx2d/gdx2d.c
index f46eff2..03d6888 100644
--- a/gdx/jni/gdx2d/gdx2d.c
+++ b/gdx/jni/gdx2d/gdx2d.c
@@ -229,7 +229,6 @@ gdx2d_pixmap* gdx2d_load(const unsigned char *buffer, uint32_t len, uint32_t req
 		return NULL;
 
 	gdx2d_pixmap* pixmap = (gdx2d_pixmap*)malloc(sizeof(gdx2d_pixmap));
-	if (!pixmap) return 0;
 	pixmap->width = (uint32_t)width;
 	pixmap->height = (uint32_t)height;
 	pixmap->format = (uint32_t)format;
@@ -256,15 +255,10 @@ uint32_t gdx2d_bytes_per_pixel(uint32_t format) {
 
 gdx2d_pixmap* gdx2d_new(uint32_t width, uint32_t height, uint32_t format) {
 	gdx2d_pixmap* pixmap = (gdx2d_pixmap*)malloc(sizeof(gdx2d_pixmap));
-	if (!pixmap) return 0;
 	pixmap->width = width;
 	pixmap->height = height;
 	pixmap->format = format;
 	pixmap->pixels = (unsigned char*)malloc(width * height * gdx2d_bytes_per_pixel(format));
-	if (!pixmap->pixels) {
-		free((void*)pixmap);
-		return 0;
-	}
 	return pixmap;
 }
 void gdx2d_free(const gdx2d_pixmap* pixmap) {
diff --git a/gdx/libs/gdx-natives.jar b/gdx/libs/gdx-natives.jar
new file mode 100644
index 0000000..32a1664
Binary files /dev/null and b/gdx/libs/gdx-natives.jar differ
diff --git a/gdx/libs/macosx32/libgdx.dylib b/gdx/libs/macosx32/libgdx.dylib
new file mode 100755
index 0000000..bb3ee4e
Binary files /dev/null and b/gdx/libs/macosx32/libgdx.dylib differ
diff --git a/gdx/src/com/badlogic/gdx.gwt.xml b/gdx/src/com/badlogic/gdx.gwt.xml
index a7131c0..24974a5 100644
--- a/gdx/src/com/badlogic/gdx.gwt.xml
+++ b/gdx/src/com/badlogic/gdx.gwt.xml
@@ -77,7 +77,6 @@
 		<include name="math/Intersector.java"/>
 		<include name="utils/JsonReader.java"/>
 		<include name="utils/JsonWriter.java"/>
-		<include name="utils/DataInput.java"/>
 		<include name="graphics/g3d/keyframed/Keyframe.java"/>
 		<include name="graphics/g3d/keyframed/KeyframeAnimation.java"/>
 		<include name="graphics/g3d/keyframed/KeyframeAnimator.java"/>
@@ -137,6 +136,7 @@
 		<include name="math/collision/Segment.java"/>
 		<include name="graphics/glutils/ShapeRenderer.java"/>
 		<include name="graphics/g3d/decals/SimpleOrthoGroupStrategy.java"/>
+		<include name="graphics/g2d/tiled/SimpleTileAtlas.java"/>
 		<include name="assets/loaders/SkinLoader.java"/>
 		<include name="utils/Sort.java"/>
 		<include name="utils/SortedIntList.java"/>
@@ -153,6 +153,14 @@
 		<include name="graphics/TextureDict.java"/>
 		<include name="graphics/TextureRef.java"/>
 		<include name="graphics/g2d/TextureRegion.java"/>
+		<include name="graphics/g2d/tiled/TileAtlas.java"/>
+		<include name="assets/loaders/TileAtlasLoader.java"/>
+		<include name="graphics/g2d/tiled/TileMapRenderer.java"/>
+		<include name="graphics/g2d/tiled/TileSet.java"/>
+		<include name="graphics/g2d/tiled/TiledLayer.java"/>
+		<include name="graphics/g2d/tiled/TiledMap.java"/>
+		<include name="graphics/g2d/tiled/TiledObject.java"/>
+		<include name="graphics/g2d/tiled/TiledObjectGroup.java"/>
 		<include name="utils/TimSort.java"/>
 		<include name="src/com/esotericsoftware/tablelayout/Toolkit.java"/>
 		<include name="math/Vector2.java"/>
@@ -242,19 +250,10 @@
 		<include name="scenes/scene2d/utils/DragListener.java"/>
 		
 		<include name="Net.java"/>
-		<include name="net/HttpStatus.java"/>
 		<include name="net/ServerSocket.java"/>
 		<include name="net/ServerSocketHints.java"/>
 		<include name="net/Socket.java"/>
 		<include name="net/SocketHints.java"/>
 		<include name="graphics/g3d/**/*"/>
-		<include name="maps/**"/>
-		
-		<include name="math/Vector.java"/>
-		<include name="math/Path.java"/>
-		<include name="math/Bezier.java"/>
-		<include name="math/BSpline.java"/>
-		<include name="math/Ellipse.java"/>
-		<include name="math/Polyline.java"/>
 	</source>
 </module>
diff --git a/gdx/src/com/badlogic/gdx/Application.java b/gdx/src/com/badlogic/gdx/Application.java
index 768083f..e277eeb 100644
--- a/gdx/src/com/badlogic/gdx/Application.java
+++ b/gdx/src/com/badlogic/gdx/Application.java
@@ -21,23 +21,17 @@ import com.badlogic.gdx.utils.Clipboard;
 /** <p>
  * An <code>Application</code> is the main entry point of your project. It sets up a window and rendering surface and manages the
  * different aspects of your application, namely {@link Graphics}, {@link Audio}, {@link Input} and {@link Files}. Think of an
- * Application being equivalent to Swing's <code>JFrame</code> or Android's <code>Activity</code>.
+ * Application being equivalent to a JFrame of Activity.
  * </p>
  * 
  * <p>
- * An application can be an instance of any of the following:
- * <ul>
- * <li>a desktop application (see <code>JglfwApplication</code> found in gdx-backends-jglfw.jar)</li>
- * <li>an Android application (see <code>AndroidApplication</code> found in gdx-backends-android.jar)</li>
- * <li>a HTML5 application (see <code>GwtApplication</code> found in gdx-backends-gwt.jar)</li>
- * <li>an iOS application (see <code>IOSApplication</code> found in gdx-backends-iosmonotouch.jar)</li>
- * </ul>
- * Each application class has it's own startup and
+ * An application can either be a desktop application (LwjglApplication found in gdx-backends-lwjgl.jar), or an Android
+ * application (AndroidApplication found in gdx-backends-android.jar). Each application class has it's own startup and
  * initialization methods. Please refer to their documentation for more information.
  * </p>
  * 
  * <p>
- * While game programmers are used to having a main loop, libgdx employs a different concept to accommodate the event based nature
+ * While game programmers are used to having a main loop, libgdx employs a different concept to accomodate the event based nature
  * of Android applications a little more. You application logic must be implemented in a {@link ApplicationListener} which has
  * methods that get called by the Application when the application is created, resumed, paused, disposed or rendered. As a
  * developer you will simply implement the ApplicationListener interface and fill in the functionality accordingly. The
@@ -70,11 +64,11 @@ import com.badlogic.gdx.utils.Clipboard;
  * 
  * <p>
  * {@link Files} offers you various methods to access internal and external files. An internal file is a file that is stored near
- * your application. On Android internal files are equivalent to assets. On the desktop the classpath is first scanned for the
+ * your application. On Android internal file are equivalent to assets. On the desktop the classpath is first scanned for the
  * specified file. If that fails then the root directory of your application is used for a look up. External files are resources
  * you create in your application and write to an external storage. On Android external files reside on the SD-card, on the
- * desktop external files are written to a users home directory. If you know what you are doing you can also specify absolute file names.
- * Absolute filenames are not portable, so take great care when using this feature.
+ * desktop external files are written to a users home directory. If you know what you do you can also specify absolute file names.
+ * This is not portable, so take great care when using this feature.
  * </p>
  * 
  * <p>
@@ -107,9 +101,6 @@ public interface Application {
 	public static final int LOG_INFO = 2;
 	public static final int LOG_ERROR = 1;
 
-	/** @return the {@link ApplicationListener} instance */ 
-	public ApplicationListener getApplicationListener ();
-	
 	/** @return the {@link Graphics} instance */
 	public Graphics getGraphics ();
 
@@ -172,7 +163,7 @@ public interface Application {
 	 * @param runnable the runnable. */
 	public void postRunnable (Runnable runnable);
 
-	/** Schedule an exit from the application. On android, this will cause a call to pause() and dispose() some time in the future, it will not
+	/** Exits the application. On android, this will cause a call to pause() and dispose() some time in the future, it will not
 	 * immediately finish your application. */
 	public void exit ();
 	
diff --git a/gdx/src/com/badlogic/gdx/ApplicationAdapter.java b/gdx/src/com/badlogic/gdx/ApplicationAdapter.java
index cc8e6d1..e004b9c 100644
--- a/gdx/src/com/badlogic/gdx/ApplicationAdapter.java
+++ b/gdx/src/com/badlogic/gdx/ApplicationAdapter.java
@@ -16,7 +16,7 @@
 
 package com.badlogic.gdx;
 
-/** Convenience implementation of {@link ApplicationListener}. Derive from this and only override what you need.
+/** Convenience implementation of {@link ApplicationListener}. Derrive from this and only override what you need.
  * @author mzechner */
 public abstract class ApplicationAdapter implements ApplicationListener {
 	@Override
diff --git a/gdx/src/com/badlogic/gdx/Gdx.java b/gdx/src/com/badlogic/gdx/Gdx.java
index f274afe..01474c6 100644
--- a/gdx/src/com/badlogic/gdx/Gdx.java
+++ b/gdx/src/com/badlogic/gdx/Gdx.java
@@ -20,14 +20,15 @@ import com.badlogic.gdx.graphics.GL10;
 import com.badlogic.gdx.graphics.GL11;
 import com.badlogic.gdx.graphics.GL20;
 import com.badlogic.gdx.graphics.GLCommon;
+import com.badlogic.gdx.graphics.GLU;
 
 /** Environment class holding references to the {@link Application}, {@link Graphics}, {@link Audio}, {@link Files} and
  * {@link Input} instances. The references are held in public static fields. Do not mess with this! This essentially allows you
  * static access to all sub systems. It is your responsiblity to keep things thread safe. Don't use Graphics in a thread that is
  * not the rendering thread or things will go crazy. Really.
  * <p>
- * There's also references to {@link GLCommon}, {@link GL10}, {@link GL11}, and {@link GL20}. The same rules as above apply. Don't
- * mess with this or things will break!
+ * There's also references to {@link GLCommon}, {@link GL10}, {@link GL11}, {@link GL20} and {@link GLU}. The same rules as above
+ * apply. Don't mess with this or things will break!
  * <p>
  * This is kind of messy but better than throwing around Graphics and similar instances. I'm aware of the design faux pas.
  * @author mzechner */
@@ -43,4 +44,5 @@ public class Gdx {
 	public static GL10 gl10;
 	public static GL11 gl11;
 	public static GL20 gl20;
+	public static GLU glu;
 }
diff --git a/gdx/src/com/badlogic/gdx/Graphics.java b/gdx/src/com/badlogic/gdx/Graphics.java
index 37a7723..4989543 100644
--- a/gdx/src/com/badlogic/gdx/Graphics.java
+++ b/gdx/src/com/badlogic/gdx/Graphics.java
@@ -20,6 +20,7 @@ import com.badlogic.gdx.graphics.GL10;
 import com.badlogic.gdx.graphics.GL11;
 import com.badlogic.gdx.graphics.GL20;
 import com.badlogic.gdx.graphics.GLCommon;
+import com.badlogic.gdx.graphics.GLU;
 import com.badlogic.gdx.graphics.Mesh;
 import com.badlogic.gdx.graphics.Pixmap;
 import com.badlogic.gdx.graphics.Texture;
@@ -32,19 +33,15 @@ import com.badlogic.gdx.graphics.glutils.VertexArray;
 import com.badlogic.gdx.graphics.glutils.VertexBufferObject;
 
 /** <p>
- * This interface encapsulates communication with the graphics processor. Depending on the available hardware and the current
- * {@link Application} configuration, access to the {@link GL10}, {@link GL11}, {@link GL20}, and/or {@link GLCommon} are provided
- * here.
+ * This interface encapsulates the communication with the graphics processor. It allows to retrieve {@link GL10}, {@link GL11} and
+ * {@link GL20} instances depending on the available hardware and configuration of the {@link Application}. Additionally it
+ * features methods to generate {@link Pixmap}s and {@link Texture}s.
  * </p>
  * 
  * <p>
- * If supported by the backend, this interface lets you query the available display modes (graphics resolution and color depth)
- * and change it.
- * </p>
- * 
- * <p>
- * This interface can be used to switch between continuous and non-continuous rendering (see
- * {@link #setContinuousRendering(boolean)}), and to explicitly {@link #requestRendering()}.
+ * {@link Texture}s can be either managed or not managed. Managed and Textures will be restored when the OpenGL context is lost.
+ * An OpenGL ES context loss happens when a user pauses the Application ( {@link ApplicationListener#pause()}) and switches to
+ * another application on Android. On the desktop there is no concept of context loss for OpenGL.
  * </p>
  * 
  * <p>
@@ -53,16 +50,21 @@ import com.badlogic.gdx.graphics.glutils.VertexBufferObject;
  * context loss. Explore the com.badlogic.gdx.graphics package for more classes that might come in handy.
  * </p>
  * 
+ * <p>
+ * All graphical resources, be the generated by the {@link Graphics} interface or via a constructor <b>must</b> be disposed when
+ * no longer used!
+ * </p>
+ * 
  * @author mzechner */
 public interface Graphics {
 	/** Enumeration describing different types of {@link Graphics} implementations.
 	 * 
 	 * @author mzechner */
 	public enum GraphicsType {
-		AndroidGL, LWJGL, Angle, WebGL, iOSGL, JGLFW
+		AndroidGL, LWJGL, Angle, WebGL, iOSGL
 	}
 
-	/** Describe a fullscreen display mode
+	/** Class describing a fullscreen display mode
 	 * 
 	 * @author mzechner */
 	public class DisplayMode {
@@ -85,11 +87,11 @@ public interface Graphics {
 
 	/** Class describing the bits per pixel, depth buffer precision, stencil precision and number of MSAA samples. */
 	public static class BufferFormat {
-		/* number of bits per color channel */
+		/** number of bits per color channel **/
 		public final int r, g, b, a;
-		/* number of bits for depth and stencil buffer */
+		/** number of bits for depth and stencil buffer **/
 		public final int depth, stencil;
-		/** number of samples for multi-sample anti-aliasing (MSAA) **/
+		/** number of samples for MSAA **/
 		public final int samples;
 		/** whether coverage sampling anti-aliasing is used. in that case you have to clear the coverage buffer as well! */
 		public final boolean coverageSampling;
@@ -136,6 +138,9 @@ public interface Graphics {
 	/** @return the {@link GL20} instance or null if not supported */
 	public GL20 getGL20 ();
 
+	/** @return the {@link GLU} instance */
+	public GLU getGLU ();
+
 	/** @return the width in pixels of the display surface */
 	public int getWidth ();
 
@@ -178,13 +183,13 @@ public interface Graphics {
 	 * @return whether display mode changes are supported or not. */
 	public boolean supportsDisplayModeChange ();
 
-	/** @return the supported fullscreen {@link DisplayMode}(s). */
+	/** @return the supported fullscreen {@link DisplayMode}. */
 	public DisplayMode[] getDisplayModes ();
 
 	/** @return the display mode of the primary graphics adapter. */
 	public DisplayMode getDesktopDisplayMode ();
 
-	/** Sets the current {@link DisplayMode}. Returns false in case the operation failed. Not all backends support this method. See
+	/** Sets the current {@link DisplayMode}. Returns false in case the operation failed. Not all backends support this methods. See
 	 * {@link Graphics#supportsDisplayModeChange()}.
 	 * 
 	 * @param displayMode the display mode.
diff --git a/gdx/src/com/badlogic/gdx/Input.java b/gdx/src/com/badlogic/gdx/Input.java
index 7952d59..9d1e099 100644
--- a/gdx/src/com/badlogic/gdx/Input.java
+++ b/gdx/src/com/badlogic/gdx/Input.java
@@ -17,25 +17,23 @@
 package com.badlogic.gdx;
 
 /** <p>
- * Interface to the input facilities. This allows polling the state of the keyboard, the touch screen and the accelerometer. On
- * some backends (desktop, gwt, etc) the touch screen is replaced by mouse input. The accelerometer is of course not available on
- * all backends.
+ * Interface to the input facilities. This allows to poll the state of the keyboard, touch screen and accelerometer. On the
+ * desktop the touch screen is replaced by mouse input, the accelerometer is of course not available.
  * </p>
  * 
  * <p>
- * Instead of polling for events, one can process all input events with an {@link InputProcessor}. You can set the InputProcessor via the
+ * Additionally one can process events with an {@link InputProcessor} with this module. You can set the InputProcessor via the
  * {@link #setInputProcessor(InputProcessor)} method. It will be called before the {@link ApplicationListener#render()} method in
  * each frame.
  * </p>
  * 
  * <p>
- * Keyboard keys are translated to the constants in {@link Keys} transparently on all systems. Do not use system specific key
+ * Keyboard keys are translated to the constants in {@link Keys} transparantely on all systems. Do not use system specific key
  * constants.
  * </p>
  * 
  * <p>
- * The class also offers methods to use (and test for the presence of) other input systems like vibration, compass,
- * on-screen keyboards, and cursor capture.  Support for simple input dialogs is also provided.
+ * The class also offers methods to let the phone vibrate as well as getting compass readings.
  * </p>
  * 
  * @author mzechner */
diff --git a/gdx/src/com/badlogic/gdx/InputProcessor.java b/gdx/src/com/badlogic/gdx/InputProcessor.java
index 532164a..b9729ed 100644
--- a/gdx/src/com/badlogic/gdx/InputProcessor.java
+++ b/gdx/src/com/badlogic/gdx/InputProcessor.java
@@ -20,10 +20,11 @@ import com.badlogic.gdx.Input.Buttons;
 
 /** An InputProcessor is used to receive input events from the keyboard and the touch screen (mouse on the desktop). For this it
  * has to be registered with the {@link Input#setInputProcessor(InputProcessor)} method. It will be called each frame before the
- * call to {@link ApplicationListener#render()}. Each method returns a boolean in case you want to use this with the {@link InputMultiplexer}
- * to chain input processors.
+ * call to {@link ApplicationListener#render()}. The methods return a* boolean in case you want to write a multiplexing
+ * InputProcessor that has a chain of child processors that signal whether they processed the event. The {@link InputMultiplexer}
+ * offers you exactly this functionality.
  * 
- * @author mzechner */
+ * @author badlogicgames@gmail.com */
 public interface InputProcessor {
 	/** Called when a key was pressed
 	 * 
diff --git a/gdx/src/com/badlogic/gdx/InputProcessorQueue.java b/gdx/src/com/badlogic/gdx/InputProcessorQueue.java
deleted file mode 100644
index 6fda916..0000000
--- a/gdx/src/com/badlogic/gdx/InputProcessorQueue.java
+++ /dev/null
@@ -1,154 +0,0 @@
-
-package com.badlogic.gdx;
-
-import com.badlogic.gdx.utils.IntArray;
-
-/** Queues events that are later passed to the wrapped {@link InputProcessor}.
- * @author Nathan Sweet */
-public class InputProcessorQueue implements InputProcessor {
-	static private final int KEY_DOWN = 0;
-	static private final int KEY_UP = 1;
-	static private final int KEY_TYPED = 2;
-	static private final int TOUCH_DOWN = 3;
-	static private final int TOUCH_UP = 4;
-	static private final int TOUCH_DRAGGED = 5;
-	static private final int MOUSE_MOVED = 6;
-	static private final int SCROLLED = 7;
-
-	private InputProcessor processor;
-	private final IntArray queue = new IntArray();
-	private final IntArray processingQueue = new IntArray();
-	private long currentEventTime;
-
-	public InputProcessorQueue () {
-	}
-
-	public InputProcessorQueue (InputProcessor processor) {
-		this.processor = processor;
-	}
-
-	public void setProcessor (InputProcessor processor) {
-		this.processor = processor;
-	}
-
-	public InputProcessor getProcessor () {
-		return processor;
-	}
-
-	public void drain () {
-		IntArray q = processingQueue;
-		synchronized (this) {
-			if (processor == null) {
-				queue.clear();
-				return;
-			}
-			q.addAll(queue);
-			queue.clear();
-		}
-		for (int i = 0, n = q.size; i < n;) {
-			currentEventTime = (long)q.get(i++) << 32 | q.get(i++) & 0xFFFFFFFFL;
-			switch (q.get(i++)) {
-			case KEY_DOWN:
-				processor.keyDown(q.get(i++));
-				break;
-			case KEY_UP:
-				processor.keyUp(q.get(i++));
-				break;
-			case KEY_TYPED:
-				processor.keyTyped((char)q.get(i++));
-				break;
-			case TOUCH_DOWN:
-				processor.touchDown(q.get(i++), q.get(i++), q.get(i++), q.get(i++));
-				break;
-			case TOUCH_UP:
-				processor.touchUp(q.get(i++), q.get(i++), q.get(i++), q.get(i++));
-				break;
-			case TOUCH_DRAGGED:
-				processor.touchDragged(q.get(i++), q.get(i++), q.get(i++));
-				break;
-			case MOUSE_MOVED:
-				processor.mouseMoved(q.get(i++), q.get(i++));
-				break;
-			case SCROLLED:
-				processor.scrolled(q.get(i++));
-				break;
-			}
-		}
-		q.clear();
-	}
-
-	private void queueTime () {
-		long time = System.nanoTime();
-		queue.add((int)(time >> 32));
-		queue.add((int)time);
-	}
-
-	public synchronized boolean keyDown (int keycode) {
-		queueTime();
-		queue.add(KEY_DOWN);
-		queue.add(keycode);
-		return false;
-	}
-
-	public synchronized boolean keyUp (int keycode) {
-		queueTime();
-		queue.add(KEY_UP);
-		queue.add(keycode);
-		return false;
-	}
-
-	public synchronized boolean keyTyped (char character) {
-		queueTime();
-		queue.add(KEY_TYPED);
-		queue.add(character);
-		return false;
-	}
-
-	public synchronized boolean touchDown (int screenX, int screenY, int pointer, int button) {
-		queueTime();
-		queue.add(TOUCH_DOWN);
-		queue.add(screenX);
-		queue.add(screenY);
-		queue.add(pointer);
-		queue.add(button);
-		return false;
-	}
-
-	public synchronized boolean touchUp (int screenX, int screenY, int pointer, int button) {
-		queueTime();
-		queue.add(TOUCH_UP);
-		queue.add(screenX);
-		queue.add(screenY);
-		queue.add(pointer);
-		queue.add(button);
-		return false;
-	}
-
-	public synchronized boolean touchDragged (int screenX, int screenY, int pointer) {
-		queueTime();
-		queue.add(TOUCH_DRAGGED);
-		queue.add(screenX);
-		queue.add(screenY);
-		queue.add(pointer);
-		return false;
-	}
-
-	public synchronized boolean mouseMoved (int screenX, int screenY) {
-		queueTime();
-		queue.add(MOUSE_MOVED);
-		queue.add(screenX);
-		queue.add(screenY);
-		return false;
-	}
-
-	public synchronized boolean scrolled (int amount) {
-		queueTime();
-		queue.add(SCROLLED);
-		queue.add(amount);
-		return false;
-	}
-
-	public long getCurrentEventTime () {
-		return currentEventTime;
-	}
-}
diff --git a/gdx/src/com/badlogic/gdx/LifecycleListener.java b/gdx/src/com/badlogic/gdx/LifecycleListener.java
old mode 100644
new mode 100755
diff --git a/gdx/src/com/badlogic/gdx/Net.java b/gdx/src/com/badlogic/gdx/Net.java
old mode 100644
new mode 100755
index ebf4627..1288ee0
--- a/gdx/src/com/badlogic/gdx/Net.java
+++ b/gdx/src/com/badlogic/gdx/Net.java
@@ -26,7 +26,6 @@ import java.util.concurrent.Future;
 
 import com.badlogic.gdx.Net.HttpRequest;
 import com.badlogic.gdx.Net.HttpResponseListener;
-import com.badlogic.gdx.net.HttpStatus;
 import com.badlogic.gdx.net.ServerSocketHints;
 import com.badlogic.gdx.net.Socket;
 import com.badlogic.gdx.net.ServerSocket;
@@ -40,7 +39,7 @@ import com.badlogic.gdx.utils.JsonWriter;
  * To perform an HTTP request create a {@link HttpRequest} with the HTTP method (see {@link HttpMethods} for common methods) and
  * invoke {@link #sendHttpRequest(HttpRequest, HttpResponseListener)} with it and a {@link HttpResponseListener}. After the HTTP
  * request was processed, the {@link HttpResponseListener} is called with a {@link HttpResponse} with the HTTP response values and
- * an status code to determine if the request was successful or not.</p>
+ * an status code to determine if the request was successful or not.
  * 
  * To create a TCP client socket to communicate with a remote TCP server, invoke the
  * {@link #newClientSocket(Protocol, String, int, SocketHints)} method. The returned {@link Socket} offers an {@link InputStream}
@@ -55,6 +54,24 @@ import com.badlogic.gdx.utils.JsonWriter;
  * @author arielsan */
 public interface Net {
 
+	/** Contains information about the HTTP status line returned with the {@link HttpResponse} after a {@link HttpRequest} was
+	 * performed. */
+	public static class HttpStatus {
+
+		int statusCode;
+
+		/** Returns the status code of the HTTP response, normally 2xx status codes indicate success while 4xx and 5xx indicate
+		 * client and server errors, respectively (see <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html">HTTP/1.1:
+		 * Status Code Definitions</a> for more information about HTTP status codes). */
+		public int getStatusCode () {
+			return statusCode;
+		}
+
+		public HttpStatus (int statusCode) {
+			this.statusCode = statusCode;
+		}
+
+	}
 
 	/** HTTP response interface with methods to get the response data as a byte[], a {@link String} or an {@link InputStream}. */
 	public static interface HttpResponse {
@@ -80,6 +97,7 @@ public interface Net {
 	 * <ul>
 	 * <li>GET</li>
 	 * <li>POST</li>
+	 * <li>JSON</li>
 	 * </ul> */
 	public static interface HttpMethods {
 
@@ -281,4 +299,4 @@ public interface Net {
 	 * 
 	 * @param URI the URI to be opened. */
 	public void openURI (String URI);
-}
\ No newline at end of file
+}
diff --git a/gdx/src/com/badlogic/gdx/Preferences.java b/gdx/src/com/badlogic/gdx/Preferences.java
index b8ff72b..1c17cfb 100644
--- a/gdx/src/com/badlogic/gdx/Preferences.java
+++ b/gdx/src/com/badlogic/gdx/Preferences.java
@@ -20,18 +20,12 @@ import java.util.Map;
 
 /** <p>
  * A Preference instance is a hash map holding different values. It is stored alongside your application (SharedPreferences on
- * Android, LocalStorage on GWT, on the desktop a Java Preferences file in a ".prefs" directory will be created, 
- * and on iOS an NSMutableDictonary will be written to the given file). 
+ * Android, flat file in apps root directory on desktop).
  * </p>
  * 
  * <p>
- * Changes to a preferences instance will be cached in memory until {@link #flush()} is invoked.
- * </p>
- * 
- * <p>
- * Use {@link Application#getPreferences(String)} to look up a specific preferences instance.  Note that 
- * on several backends the preferences name will be used as the filename, so make sure the name is valid
- * for a filename.
+ * On the desktop the file will be located in the user directory. Make sure you give the preferences instance a name that can be
+ * used as a filename.
  * </p>
  * 
  * @author mzechner */
diff --git a/gdx/src/com/badlogic/gdx/StreamUtils.java b/gdx/src/com/badlogic/gdx/StreamUtils.java
index 31a8a22..4c0f1ce 100644
--- a/gdx/src/com/badlogic/gdx/StreamUtils.java
+++ b/gdx/src/com/badlogic/gdx/StreamUtils.java
@@ -11,7 +11,7 @@ import java.util.Set;
 
 import com.badlogic.gdx.Net.HttpRequest;
 
-/** Provides utility methods to copy streams */
+/** Provides utility methods to work streams */
 public class StreamUtils {
 
 	/** Copy the data from an {@link InputStream} to an {@link OutputStream}.
diff --git a/gdx/src/com/badlogic/gdx/Version.java b/gdx/src/com/badlogic/gdx/Version.java
index 7df4444..738cde6 100644
--- a/gdx/src/com/badlogic/gdx/Version.java
+++ b/gdx/src/com/badlogic/gdx/Version.java
@@ -20,6 +20,6 @@ package com.badlogic.gdx;
  * 
  * @author mzechner */
 public class Version {
-	/** the current version of libgdx in the major.minor.minorer format **/
-	public static String VERSION = "0.9.9";
+	/** the current version of libgdx in the major.minor format **/
+	public static String VERSION = "0.9.8";
 }
diff --git a/gdx/src/com/badlogic/gdx/android/AndroidWallpaperListener.java b/gdx/src/com/badlogic/gdx/android/AndroidWallpaperListener.java
new file mode 100644
index 0000000..a7e1160
--- /dev/null
+++ b/gdx/src/com/badlogic/gdx/android/AndroidWallpaperListener.java
@@ -0,0 +1,58 @@
+/*
+ * Copyright 2013 Jaroslaw Wisniewski <j.wisniewski@appsisle.com>
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the
+ * License. You may obtain a copy of the License at
+ * 
+ * http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS"
+ * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language
+ * governing permissions and limitations under the License.
+ *
+ */
+
+package com.badlogic.gdx.android;
+
+import com.badlogic.gdx.ApplicationListener;
+
+/**
+ * Implement this listener in your libGDX application additionally to {@link ApplicationListener} if you want 
+ * receive live wallpaper specific events, ex:
+ * MyApplication implements ApplicationListener, AndroidWallpaperListener
+ * 
+ * Notice!
+ * This callbacks will work only if app is running as android live wallpaper: 
+ * you have to link application with AndroidLiveWallpaperService from
+ * in gdx-android-backend
+ * 
+ * Notice libGDX developers!
+ * If you do not like android specific classes in gdx backend, you can rename this class to for example:
+ * com.badlogic.gdx.WallpaperListener so it will be 'generic' and not 'android specific', 
+ * but besides of point of view the fact is that live wallpapers are available only on android devices so far.
+ * 
+ * @author Jaroslaw Wisniewski <j.wisniewski@appsisle.com>
+ *
+ */
+public interface AndroidWallpaperListener {
+
+	/**
+	 * Called on the rendering thread after the live wallpaper's offset had changed.
+	 * @param xOffset
+	 * @param yOffset
+	 * @param xOffsetStep
+	 * @param yOffsetStep
+	 * @param xPixelOffset
+	 * @param yPixelOffset
+	 */
+	abstract void offsetChange (float xOffset, float yOffset, float xOffsetStep, float yOffsetStep, int xPixelOffset, int yPixelOffset);
+
+	/**
+	 * Called after 'isPreview' state had changed. First time called just after application initialization.
+	 * @param isPreview current status, save this value and update always when this method is called if you want
+	 * track live wallpaper isPreview status.
+	 * 
+	 * 
+	 */
+	abstract void previewStateChange (boolean isPreview);
+}
diff --git a/gdx/src/com/badlogic/gdx/assets/AssetManager.java b/gdx/src/com/badlogic/gdx/assets/AssetManager.java
index 70a0b9d..fac8546 100644
--- a/gdx/src/com/badlogic/gdx/assets/AssetManager.java
+++ b/gdx/src/com/badlogic/gdx/assets/AssetManager.java
@@ -32,6 +32,8 @@ import com.badlogic.gdx.assets.loaders.SkinLoader;
 import com.badlogic.gdx.assets.loaders.SoundLoader;
 import com.badlogic.gdx.assets.loaders.TextureAtlasLoader;
 import com.badlogic.gdx.assets.loaders.TextureLoader;
+import com.badlogic.gdx.assets.loaders.TileAtlasLoader;
+import com.badlogic.gdx.assets.loaders.TileMapRendererLoader;
 import com.badlogic.gdx.assets.loaders.resolvers.InternalFileHandleResolver;
 import com.badlogic.gdx.audio.Music;
 import com.badlogic.gdx.audio.Sound;
@@ -39,6 +41,8 @@ import com.badlogic.gdx.graphics.Pixmap;
 import com.badlogic.gdx.graphics.Texture;
 import com.badlogic.gdx.graphics.g2d.BitmapFont;
 import com.badlogic.gdx.graphics.g2d.TextureAtlas;
+import com.badlogic.gdx.graphics.g2d.tiled.TileAtlas;
+import com.badlogic.gdx.graphics.g2d.tiled.TileMapRenderer;
 import com.badlogic.gdx.scenes.scene2d.ui.Skin;
 import com.badlogic.gdx.utils.Array;
 import com.badlogic.gdx.utils.Disposable;
@@ -55,7 +59,7 @@ public class AssetManager implements Disposable {
 	final ObjectMap<String, Class> assetTypes = new ObjectMap<String, Class>();
 	final ObjectMap<String, Array<String>> assetDependencies = new ObjectMap<String, Array<String>>();
 
-	final ObjectMap<Class, ObjectMap<String, AssetLoader>> loaders = new ObjectMap<Class, ObjectMap<String, AssetLoader>>();
+	final ObjectMap<Class, AssetLoader> loaders = new ObjectMap<Class, AssetLoader>();
 	final Array<AssetDescriptor> loadQueue = new Array<AssetDescriptor>();
 	final ExecutorService threadPool;
 
@@ -80,6 +84,8 @@ public class AssetManager implements Disposable {
 		setLoader(TextureAtlas.class, new TextureAtlasLoader(resolver));
 		setLoader(Texture.class, new TextureLoader(resolver));
 		setLoader(Skin.class, new SkinLoader(resolver));
+		setLoader(TileAtlas.class, new TileAtlasLoader(resolver));
+		setLoader(TileMapRenderer.class, new TileMapRendererLoader(resolver));
 		threadPool = Executors.newFixedThreadPool(1, new ThreadFactory() {
 			@Override
 			public Thread newThread (Runnable r) {
@@ -220,33 +226,6 @@ public class AssetManager implements Disposable {
 		return assetContainer.getObject(type) != null;
 	}
 
-	/** Returns the default loader for the given type
-	 * @param type The type of the loader to get
-	 * @return The loader capable of loading the type, or null if none exists */
-	public <T> AssetLoader getLoader (final Class<T> type) {
-		return getLoader(type, null);
-	}
-
-	/** Returns the loader for the given type and the specified filename. If no loader exists for the specific filename, the default
-	 * loader for that type is returned.
-	 * @param type The type of the loader to get
-	 * @param fileName The filename of the asset to get a loader for, or null to get the default loader
-	 * @return The loader capable of loading the type and filename, or null if none exists */
-	public <T> AssetLoader getLoader (final Class<T> type, final String fileName) {
-		final ObjectMap<String, AssetLoader> loaders = this.loaders.get(type);
-		if (loaders == null || loaders.size < 1) return null;
-		if (fileName == null) return loaders.get("");
-		AssetLoader result = null;
-		int l = -1;
-		for (ObjectMap.Entry<String, AssetLoader> entry : loaders.entries()) {
-			if (entry.key.length() > l && fileName.endsWith(entry.key)) {
-				result = entry.value;
-				l = entry.key.length();
-			}
-		}
-		return result;
-	}
-
 	/** Adds the given asset to the loading queue of the AssetManager.
 	 * @param fileName the file name (interpretation depends on {@link AssetLoader})
 	 * @param type the type of the asset. */
@@ -259,7 +238,7 @@ public class AssetManager implements Disposable {
 	 * @param type the type of the asset.
 	 * @param parameter parameters for the AssetLoader. */
 	public synchronized <T> void load (String fileName, Class<T> type, AssetLoaderParameters<T> parameter) {
-		AssetLoader loader = getLoader(type, fileName);
+		AssetLoader loader = loaders.get(type);
 		if (loader == null) throw new GdxRuntimeException("No loader for type: " + type.getSimpleName());
 
 		if (loadQueue.size == 0) {
@@ -344,7 +323,7 @@ public class AssetManager implements Disposable {
 	 * of a single task that happens in the GL thread takes a long time.
 	 * @return true if all loading is finished. */
 	public synchronized boolean update (int millis) {
-		long endTime = System.currentTimeMillis() + millis;
+		long endTime = System.nanoTime() + millis * 1000;
 		while (true) {
 			boolean done = update();
 			if (done || System.currentTimeMillis() > endTime) return done;
@@ -407,32 +386,27 @@ public class AssetManager implements Disposable {
 	/** Adds a {@link AssetLoadingTask} to the task stack for the given asset.
 	 * @param assetDesc */
 	private void addTask (AssetDescriptor assetDesc) {
-		AssetLoader loader = getLoader(assetDesc.type, assetDesc.fileName);
+		AssetLoader loader = loaders.get(assetDesc.type);
 		if (loader == null) throw new GdxRuntimeException("No loader for type: " + assetDesc.type.getSimpleName());
 		tasks.push(new AssetLoadingTask(this, assetDesc, loader, threadPool));
 	}
 
-	/** Adds an asset to this AssetManager */
-	protected <T> void addAsset (final String fileName, Class<T> type, T asset) {
-		// add the asset to the filename lookup
-		assetTypes.put(fileName, type);
-
-		// add the asset to the type lookup
-		ObjectMap<String, RefCountedContainer> typeToAssets = assets.get(type);
-		if (typeToAssets == null) {
-			typeToAssets = new ObjectMap<String, RefCountedContainer>();
-			assets.put(type, typeToAssets);
-		}
-		typeToAssets.put(fileName, new RefCountedContainer(asset));
-	}
-
 	/** Updates the current task on the top of the task stack.
 	 * @return true if the asset is loaded. */
 	private boolean updateTask () {
 		AssetLoadingTask task = tasks.peek();
 		// if the task has finished loading
 		if (task.update()) {
-			addAsset(task.assetDesc.fileName, task.assetDesc.type, task.getAsset());
+			// add the asset to the filename lookup
+			assetTypes.put(task.assetDesc.fileName, task.assetDesc.type);
+
+			// add the asset to the type lookup
+			ObjectMap<String, RefCountedContainer> typeToAssets = assets.get(task.assetDesc.type);
+			if (typeToAssets == null) {
+				typeToAssets = new ObjectMap<String, RefCountedContainer>();
+				assets.put(task.assetDesc.type, typeToAssets);
+			}
+			typeToAssets.put(task.assetDesc.fileName, new RefCountedContainer(task.getAsset()));
 
 			// increase the number of loaded assets and pop the task from the stack
 			if (tasks.size() == 1) loaded++;
@@ -502,21 +476,10 @@ public class AssetManager implements Disposable {
 	 * @param type the type of the asset
 	 * @param loader the loader */
 	public synchronized <T, P extends AssetLoaderParameters<T>> void setLoader (Class<T> type, AssetLoader<T, P> loader) {
-		setLoader(type, null, loader);
-	}
-
-	/** Sets a new {@link AssetLoader} for the given type.
-	 * @param type the type of the asset
-	 * @param suffix the suffix the filename must have for this loader to be used or null to specify the default loader.
-	 * @param loader the loader */
-	public synchronized <T, P extends AssetLoaderParameters<T>> void setLoader (Class<T> type, String suffix,
-		AssetLoader<T, P> loader) {
 		if (type == null) throw new IllegalArgumentException("type cannot be null.");
 		if (loader == null) throw new IllegalArgumentException("loader cannot be null.");
 		log.debug("Loader set: " + type.getSimpleName() + " -> " + loader.getClass().getSimpleName());
-		ObjectMap<String, AssetLoader> loaders = this.loaders.get(type);
-		if (loaders == null) this.loaders.put(type, loaders = new ObjectMap<String, AssetLoader>());
-		loaders.put(suffix == null ? "" : suffix, loader);
+		loaders.put(type, loader);
 	}
 
 	/** @return the number of loaded assets */
diff --git a/gdx/src/com/badlogic/gdx/assets/loaders/TileAtlasLoader.java b/gdx/src/com/badlogic/gdx/assets/loaders/TileAtlasLoader.java
new file mode 100644
index 0000000..ba2a10b
--- /dev/null
+++ b/gdx/src/com/badlogic/gdx/assets/loaders/TileAtlasLoader.java
@@ -0,0 +1,64 @@
+/*******************************************************************************
+ * Copyright 2011 See AUTHORS file.
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/
+
+package com.badlogic.gdx.assets.loaders;
+
+import com.badlogic.gdx.assets.AssetDescriptor;
+import com.badlogic.gdx.assets.AssetLoaderParameters;
+import com.badlogic.gdx.assets.AssetManager;
+import com.badlogic.gdx.graphics.g2d.tiled.TileAtlas;
+import com.badlogic.gdx.graphics.g2d.tiled.TiledMap;
+import com.badlogic.gdx.utils.Array;
+
+/** {@link AssetLoader} for {@link TileAtlas} instances.
+ * @author mzechner */
+public class TileAtlasLoader extends AsynchronousAssetLoader<TileAtlas, TileAtlasLoader.TileAtlasParameter> {
+
+	/** Mandatory {@link AssetLoaderParameters} for loading a {@link TileAtlas}
+	 * @author mzechner */
+	public static class TileAtlasParameter extends AssetLoaderParameters<TileAtlas> {
+		/** the filename of the {@link TiledMap} **/
+		public String tileMapFile;
+		/** the directory containing all the images **/
+		public String inputDirectory;
+	}
+
+	public TileAtlasLoader (FileHandleResolver resolver) {
+		super(resolver);
+	}
+
+	@Override
+	public void loadAsync (AssetManager manager, String fileName, TileAtlasParameter parameter) {
+		if (parameter == null) throw new IllegalArgumentException("Missing TileAtlasParameter: " + fileName);
+
+	}
+
+	@Override
+	public TileAtlas loadSync (AssetManager manager, String fileName, TileAtlasParameter parameter) {
+		if (parameter == null) throw new IllegalArgumentException("Missing TileAtlasParameter: " + fileName);
+
+		return null;
+	}
+
+	@Override
+	public Array<AssetDescriptor> getDependencies (String fileName, TileAtlasParameter parameter) {
+		if (parameter == null) throw new IllegalArgumentException("Missing TileAtlasParameter: " + fileName);
+
+		Array<AssetDescriptor> deps = new Array<AssetDescriptor>();
+		deps.add(new AssetDescriptor(parameter.tileMapFile, TiledMap.class));
+		return deps;
+	}
+}
diff --git a/gdx/src/com/badlogic/gdx/assets/loaders/TileMapRendererLoader.java b/gdx/src/com/badlogic/gdx/assets/loaders/TileMapRendererLoader.java
new file mode 100644
index 0000000..720ea1e
--- /dev/null
+++ b/gdx/src/com/badlogic/gdx/assets/loaders/TileMapRendererLoader.java
@@ -0,0 +1,79 @@
+/*******************************************************************************
+ * Copyright 2011 See AUTHORS file.
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/
+
+package com.badlogic.gdx.assets.loaders;
+
+import com.badlogic.gdx.assets.AssetDescriptor;
+import com.badlogic.gdx.assets.AssetLoaderParameters;
+import com.badlogic.gdx.assets.AssetManager;
+import com.badlogic.gdx.graphics.g2d.tiled.TileAtlas;
+import com.badlogic.gdx.graphics.g2d.tiled.TileMapRenderer;
+import com.badlogic.gdx.graphics.g2d.tiled.TiledLoader;
+import com.badlogic.gdx.graphics.g2d.tiled.TiledMap;
+import com.badlogic.gdx.utils.Array;
+
+/** {@link AssetLoader} for {@link TiledMap} instances.
+ * @author mzechner */
+public class TileMapRendererLoader extends SynchronousAssetLoader<TileMapRenderer, TileMapRendererLoader.TileMapParameter> {
+	/** Parameter for {@link TileMapRendererLoader}.
+	 * @author mzechner */
+	public static class TileMapParameter extends AssetLoaderParameters<TileMapRenderer> {
+		/** the directory the images (pack files) are stored in **/
+		public final String imageDirectory;
+		public final int tilesPerBlockX;
+		public final int tilesPerBlockY;
+		public final float unitsPerTileX;
+		public final float unitsPerTileY;
+
+		public TileMapParameter (String imageDirectory, int tilesPerBlockX, int tilesPerBlockY) {
+			this.imageDirectory = imageDirectory;
+			this.tilesPerBlockX = tilesPerBlockX;
+			this.tilesPerBlockY = tilesPerBlockY;
+			this.unitsPerTileX = 0.0f;
+			this.unitsPerTileY = 0.0f;
+		}
+
+		public TileMapParameter (String imageDirectory, int tilesPerBlockX, int tilesPerBlockY, float unitsPerTileX,
+			float unitsPerTileY) {
+			this.imageDirectory = imageDirectory;
+			this.tilesPerBlockX = tilesPerBlockX;
+			this.tilesPerBlockY = tilesPerBlockY;
+			this.unitsPerTileX = unitsPerTileX;
+			this.unitsPerTileY = unitsPerTileY;
+		}
+	}
+
+	public TileMapRendererLoader (FileHandleResolver resolver) {
+		super(resolver);
+	}
+
+	@Override
+	public Array<AssetDescriptor> getDependencies (String fileName, TileMapParameter parameter) {
+		if (parameter == null) throw new IllegalArgumentException("Missing TileMapRendererParameter: " + fileName);
+		return null;
+	}
+
+	@Override
+	public TileMapRenderer load (AssetManager assetManager, String fileName, TileMapParameter parameter) {
+		TiledMap map = TiledLoader.createMap(resolve(fileName));
+		TileAtlas atlas = new TileAtlas(map, resolve(parameter.imageDirectory));
+		if (parameter.unitsPerTileX == 0 || parameter.unitsPerTileY == 0)
+			return new TileMapRenderer(map, atlas, parameter.tilesPerBlockX, parameter.tilesPerBlockY);
+		else
+			return new TileMapRenderer(map, atlas, parameter.tilesPerBlockX, parameter.tilesPerBlockY, parameter.unitsPerTileX,
+				parameter.unitsPerTileY);
+	}
+}
diff --git a/gdx/src/com/badlogic/gdx/files/FileHandle.java b/gdx/src/com/badlogic/gdx/files/FileHandle.java
index 5f0f145..a002c59 100644
--- a/gdx/src/com/badlogic/gdx/files/FileHandle.java
+++ b/gdx/src/com/badlogic/gdx/files/FileHandle.java
@@ -37,11 +37,6 @@ import java.io.Writer;
 
 /** Represents a file or directory on the filesystem, classpath, Android SD card, or Android assets directory. FileHandles are
  * created via a {@link Files} instance.
- * 
- * Because some of the file types are backed by composite files and may be compressed (for example, if they are in an Android .apk or are
- * found via the classpath), the methods for extracting a {@link #path()} or {@link #file()} may not be appropriate for all types.
- * Use the Reader or Stream methods here to hide these dependencies from your platform independent code.
- * 
  * @author mzechner
  * @author Nathan Sweet */
 public class FileHandle {
@@ -124,7 +119,7 @@ public class FileHandle {
 	}
 
 	/** Returns a stream for reading this file as bytes.
-	 * @throws GdxRuntimeException if the file handle represents a directory, doesn't exist, or could not be read. */
+	 * @throw GdxRuntimeException if the file handle represents a directory, doesn't exist, or could not be read. */
 	public InputStream read () {
 		if (type == FileType.Classpath || (type == FileType.Internal && !file.exists())
 			|| (type == FileType.Local && !file.exists())) {
@@ -142,19 +137,19 @@ public class FileHandle {
 	}
 
 	/** Returns a buffered stream for reading this file as bytes.
-	 * @throws GdxRuntimeException if the file handle represents a directory, doesn't exist, or could not be read. */
+	 * @throw GdxRuntimeException if the file handle represents a directory, doesn't exist, or could not be read. */
 	public BufferedInputStream read (int bufferSize) {
 		return new BufferedInputStream(read(), bufferSize);
 	}
 
 	/** Returns a reader for reading this file as characters.
-	 * @throws GdxRuntimeException if the file handle represents a directory, doesn't exist, or could not be read. */
+	 * @throw GdxRuntimeException if the file handle represents a directory, doesn't exist, or could not be read. */
 	public Reader reader () {
 		return new InputStreamReader(read());
 	}
 
 	/** Returns a reader for reading this file as characters.
-	 * @throws GdxRuntimeException if the file handle represents a directory, doesn't exist, or could not be read. */
+	 * @throw GdxRuntimeException if the file handle represents a directory, doesn't exist, or could not be read. */
 	public Reader reader (String charset) {
 		try {
 			return new InputStreamReader(read(), charset);
@@ -164,13 +159,13 @@ public class FileHandle {
 	}
 
 	/** Returns a buffered reader for reading this file as characters.
-	 * @throws GdxRuntimeException if the file handle represents a directory, doesn't exist, or could not be read. */
+	 * @throw GdxRuntimeException if the file handle represents a directory, doesn't exist, or could not be read. */
 	public BufferedReader reader (int bufferSize) {
 		return new BufferedReader(new InputStreamReader(read()), bufferSize);
 	}
 
 	/** Returns a buffered reader for reading this file as characters.
-	 * @throws GdxRuntimeException if the file handle represents a directory, doesn't exist, or could not be read. */
+	 * @throw GdxRuntimeException if the file handle represents a directory, doesn't exist, or could not be read. */
 	public BufferedReader reader (int bufferSize, String charset) {
 		try {
 			return new BufferedReader(new InputStreamReader(read(), charset), bufferSize);
@@ -180,13 +175,13 @@ public class FileHandle {
 	}
 
 	/** Reads the entire file into a string using the platform's default charset.
-	 * @throws GdxRuntimeException if the file handle represents a directory, doesn't exist, or could not be read. */
+	 * @throw GdxRuntimeException if the file handle represents a directory, doesn't exist, or could not be read. */
 	public String readString () {
 		return readString(null);
 	}
 
 	/** Reads the entire file into a string using the specified charset.
-	 * @throws GdxRuntimeException if the file handle represents a directory, doesn't exist, or could not be read. */
+	 * @throw GdxRuntimeException if the file handle represents a directory, doesn't exist, or could not be read. */
 	public String readString (String charset) {
 		int fileLength = (int)length();
 		if (fileLength == 0) fileLength = 512;
@@ -215,7 +210,7 @@ public class FileHandle {
 	}
 
 	/** Reads the entire file into a byte array.
-	 * @throws GdxRuntimeException if the file handle represents a directory, doesn't exist, or could not be read. */
+	 * @throw GdxRuntimeException if the file handle represents a directory, doesn't exist, or could not be read. */
 	public byte[] readBytes () {
 		int length = (int)length();
 		if (length == 0) length = 512;
@@ -281,7 +276,7 @@ public class FileHandle {
 
 	/** Returns a stream for writing to this file. Parent directories will be created if necessary.
 	 * @param append If false, this file will be overwritten if it exists, otherwise it will be appended.
-	 * @throws GdxRuntimeException if this file handle represents a directory, if it is a {@link FileType#Classpath} or
+	 * @throw GdxRuntimeException if this file handle represents a directory, if it is a {@link FileType#Classpath} or
 	 *        {@link FileType#Internal} file, or if it could not be written. */
 	public OutputStream write (boolean append) {
 		if (type == FileType.Classpath) throw new GdxRuntimeException("Cannot write to a classpath file: " + file);
@@ -299,7 +294,7 @@ public class FileHandle {
 	/** Reads the remaining bytes from the specified stream and writes them to this file. The stream is closed. Parent directories
 	 * will be created if necessary.
 	 * @param append If false, this file will be overwritten if it exists, otherwise it will be appended.
-	 * @throws GdxRuntimeException if this file handle represents a directory, if it is a {@link FileType#Classpath} or
+	 * @throw GdxRuntimeException if this file handle represents a directory, if it is a {@link FileType#Classpath} or
 	 *        {@link FileType#Internal} file, or if it could not be written. */
 	public void write (InputStream input, boolean append) {
 		OutputStream output = null;
@@ -328,7 +323,7 @@ public class FileHandle {
 
 	/** Returns a writer for writing to this file using the default charset. Parent directories will be created if necessary.
 	 * @param append If false, this file will be overwritten if it exists, otherwise it will be appended.
-	 * @throws GdxRuntimeException if this file handle represents a directory, if it is a {@link FileType#Classpath} or
+	 * @throw GdxRuntimeException if this file handle represents a directory, if it is a {@link FileType#Classpath} or
 	 *        {@link FileType#Internal} file, or if it could not be written. */
 	public Writer writer (boolean append) {
 		return writer(append, null);
@@ -337,7 +332,7 @@ public class FileHandle {
 	/** Returns a writer for writing to this file. Parent directories will be created if necessary.
 	 * @param append If false, this file will be overwritten if it exists, otherwise it will be appended.
 	 * @param charset May be null to use the default charset.
-	 * @throws GdxRuntimeException if this file handle represents a directory, if it is a {@link FileType#Classpath} or
+	 * @throw GdxRuntimeException if this file handle represents a directory, if it is a {@link FileType#Classpath} or
 	 *        {@link FileType#Internal} file, or if it could not be written. */
 	public Writer writer (boolean append, String charset) {
 		if (type == FileType.Classpath) throw new GdxRuntimeException("Cannot write to a classpath file: " + file);
@@ -358,7 +353,7 @@ public class FileHandle {
 
 	/** Writes the specified string to the file using the default charset. Parent directories will be created if necessary.
 	 * @param append If false, this file will be overwritten if it exists, otherwise it will be appended.
-	 * @throws GdxRuntimeException if this file handle represents a directory, if it is a {@link FileType#Classpath} or
+	 * @throw GdxRuntimeException if this file handle represents a directory, if it is a {@link FileType#Classpath} or
 	 *        {@link FileType#Internal} file, or if it could not be written. */
 	public void writeString (String string, boolean append) {
 		writeString(string, append, null);
@@ -367,7 +362,7 @@ public class FileHandle {
 	/** Writes the specified string to the file as UTF-8. Parent directories will be created if necessary.
 	 * @param append If false, this file will be overwritten if it exists, otherwise it will be appended.
 	 * @param charset May be null to use the default charset.
-	 * @throws GdxRuntimeException if this file handle represents a directory, if it is a {@link FileType#Classpath} or
+	 * @throw GdxRuntimeException if this file handle represents a directory, if it is a {@link FileType#Classpath} or
 	 *        {@link FileType#Internal} file, or if it could not be written. */
 	public void writeString (String string, boolean append, String charset) {
 		Writer writer = null;
@@ -386,7 +381,7 @@ public class FileHandle {
 
 	/** Writes the specified bytes to the file. Parent directories will be created if necessary.
 	 * @param append If false, this file will be overwritten if it exists, otherwise it will be appended.
-	 * @throws GdxRuntimeException if this file handle represents a directory, if it is a {@link FileType#Classpath} or
+	 * @throw GdxRuntimeException if this file handle represents a directory, if it is a {@link FileType#Classpath} or
 	 *        {@link FileType#Internal} file, or if it could not be written. */
 	public void writeBytes (byte[] bytes, boolean append) {
 		OutputStream output = write(append);
@@ -404,7 +399,7 @@ public class FileHandle {
 
 	/** Writes the specified bytes to the file. Parent directories will be created if necessary.
 	 * @param append If false, this file will be overwritten if it exists, otherwise it will be appended.
-	 * @throws GdxRuntimeException if this file handle represents a directory, if it is a {@link FileType#Classpath} or
+	 * @throw GdxRuntimeException if this file handle represents a directory, if it is a {@link FileType#Classpath} or
 	 *        {@link FileType#Internal} file, or if it could not be written. */
 	public void writeBytes (byte[] bytes, int offset, int length, boolean append) {
 		OutputStream output = write(append);
@@ -423,7 +418,7 @@ public class FileHandle {
 	/** Returns the paths to the children of this directory. Returns an empty list if this file handle represents a file and not a
 	 * directory. On the desktop, an {@link FileType#Internal} handle to a directory on the classpath will return a zero length
 	 * array.
-	 * @throws GdxRuntimeException if this file is an {@link FileType#Classpath} file. */
+	 * @throw GdxRuntimeException if this file is an {@link FileType#Classpath} file. */
 	public FileHandle[] list () {
 		if (type == FileType.Classpath) throw new GdxRuntimeException("Cannot list a classpath directory: " + file);
 		String[] relativePaths = file().list();
@@ -437,7 +432,7 @@ public class FileHandle {
 	/** Returns the paths to the children of this directory with the specified suffix. Returns an empty list if this file handle
 	 * represents a file and not a directory. On the desktop, an {@link FileType#Internal} handle to a directory on the classpath
 	 * will return a zero length array.
-	 * @throws GdxRuntimeException if this file is an {@link FileType#Classpath} file. */
+	 * @throw GdxRuntimeException if this file is an {@link FileType#Classpath} file. */
 	public FileHandle[] list (String suffix) {
 		if (type == FileType.Classpath) throw new GdxRuntimeException("Cannot list a classpath directory: " + file);
 		String[] relativePaths = file().list();
@@ -467,7 +462,7 @@ public class FileHandle {
 	}
 
 	/** Returns a handle to the child with the specified name.
-	 * @throws GdxRuntimeException if this file handle is a {@link FileType#Classpath} or {@link FileType#Internal} and the child
+	 * @throw GdxRuntimeException if this file handle is a {@link FileType#Classpath} or {@link FileType#Internal} and the child
 	 *        doesn't exist. */
 	public FileHandle child (String name) {
 		if (file.getPath().length() == 0) return new FileHandle(new File(name), type);
@@ -475,7 +470,7 @@ public class FileHandle {
 	}
 
 	/** Returns a handle to the sibling with the specified name.
-	 * @throws GdxRuntimeException if this file handle is a {@link FileType#Classpath} or {@link FileType#Internal} and the sibling
+	 * @throw GdxRuntimeException if this file handle is a {@link FileType#Classpath} or {@link FileType#Internal} and the sibling
 	 *        doesn't exist, or this file is the root. */
 	public FileHandle sibling (String name) {
 		if (file.getPath().length() == 0) throw new GdxRuntimeException("Cannot get the sibling of the root.");
@@ -493,7 +488,7 @@ public class FileHandle {
 		return new FileHandle(parent, type);
 	}
 
-	/** @throws GdxRuntimeException if this file handle is a {@link FileType#Classpath} or {@link FileType#Internal} file. */
+	/** @throw GdxRuntimeException if this file handle is a {@link FileType#Classpath} or {@link FileType#Internal} file. */
 	public void mkdirs () {
 		if (type == FileType.Classpath) throw new GdxRuntimeException("Cannot mkdirs with a classpath file: " + file);
 		if (type == FileType.Internal) throw new GdxRuntimeException("Cannot mkdirs with an internal file: " + file);
@@ -514,7 +509,7 @@ public class FileHandle {
 	}
 
 	/** Deletes this file or empty directory and returns success. Will not delete a directory that has children.
-	 * @throws GdxRuntimeException if this file handle is a {@link FileType#Classpath} or {@link FileType#Internal} file. */
+	 * @throw GdxRuntimeException if this file handle is a {@link FileType#Classpath} or {@link FileType#Internal} file. */
 	public boolean delete () {
 		if (type == FileType.Classpath) throw new GdxRuntimeException("Cannot delete a classpath file: " + file);
 		if (type == FileType.Internal) throw new GdxRuntimeException("Cannot delete an internal file: " + file);
@@ -522,7 +517,7 @@ public class FileHandle {
 	}
 
 	/** Deletes this file or directory and all children, recursively.
-	 * @throws GdxRuntimeException if this file handle is a {@link FileType#Classpath} or {@link FileType#Internal} file. */
+	 * @throw GdxRuntimeException if this file handle is a {@link FileType#Classpath} or {@link FileType#Internal} file. */
 	public boolean deleteDirectory () {
 		if (type == FileType.Classpath) throw new GdxRuntimeException("Cannot delete a classpath file: " + file);
 		if (type == FileType.Internal) throw new GdxRuntimeException("Cannot delete an internal file: " + file);
@@ -530,13 +525,13 @@ public class FileHandle {
 	}
 	
 	/** Deletes all children of this directory, recursively.
-	 * @throws GdxRuntimeException if this file handle is a {@link FileType#Classpath} or {@link FileType#Internal} file. */
+	 * @throw GdxRuntimeException if this file handle is a {@link FileType#Classpath} or {@link FileType#Internal} file. */
 	public void emptyDirectory () {
 		emptyDirectory(false);
 	}
 	
 	/** Deletes all children of this directory, recursively. Optionally preserving the folder structure.
-	 * @throws GdxRuntimeException if this file handle is a {@link FileType#Classpath} or {@link FileType#Internal} file. */
+	 * @throw GdxRuntimeException if this file handle is a {@link FileType#Classpath} or {@link FileType#Internal} file. */
 	public void emptyDirectory (boolean preserveTree) {
 		if (type == FileType.Classpath) throw new GdxRuntimeException("Cannot delete a classpath file: " + file);
 		if (type == FileType.Internal) throw new GdxRuntimeException("Cannot delete an internal file: " + file);
@@ -549,7 +544,7 @@ public class FileHandle {
 	 * this handle is a directory, then 1) if the destination is a file, GdxRuntimeException is thrown, or 2) if the destination is
 	 * a directory, this directory is copied into it recursively, overwriting existing files, or 3) if the destination doesn't
 	 * exist, {@link #mkdirs()} is called on the destination and this directory is copied into it recursively.
-	 * @throws GdxRuntimeException if the destination file handle is a {@link FileType#Classpath} or {@link FileType#Internal} file,
+	 * @throw GdxRuntimeException if the destination file handle is a {@link FileType#Classpath} or {@link FileType#Internal} file,
 	 *        or copying failed. */
 	public void copyTo (FileHandle dest) {
 		boolean sourceDir = isDirectory();
@@ -569,7 +564,7 @@ public class FileHandle {
 	}
 
 	/** Moves this file to the specified file, overwriting the file if it already exists.
-	 * @throws GdxRuntimeException if the source or destination file handle is a {@link FileType#Classpath} or
+	 * @throw GdxRuntimeException if the source or destination file handle is a {@link FileType#Classpath} or
 	 *        {@link FileType#Internal} file. */
 	public void moveTo (FileHandle dest) {
 		if (type == FileType.Classpath) throw new GdxRuntimeException("Cannot move a classpath file: " + file);
diff --git a/gdx/src/com/badlogic/gdx/files/FileHandleStream.java b/gdx/src/com/badlogic/gdx/files/FileHandleStream.java
index 66c6225..42f664d 100644
--- a/gdx/src/com/badlogic/gdx/files/FileHandleStream.java
+++ b/gdx/src/com/badlogic/gdx/files/FileHandleStream.java
@@ -26,7 +26,6 @@ import com.badlogic.gdx.Files.FileType;
  * that would manipulate the file instead throw UnsupportedOperationException.
  * @author Nathan Sweet */
 public abstract class FileHandleStream extends FileHandle {
-	/** Create an {@link FileType#Absolute} file at the given location. */
 	public FileHandleStream (String path) {
 		super(new File(path), FileType.Absolute);
 	}
diff --git a/gdx/src/com/badlogic/gdx/files/package-info.java b/gdx/src/com/badlogic/gdx/files/package-info.java
deleted file mode 100644
index 3c21094..0000000
--- a/gdx/src/com/badlogic/gdx/files/package-info.java
+++ /dev/null
@@ -1,10 +0,0 @@
-/**
- * Platform independent wrappers for file handles and file streaming.
- * 
- * Use {@link com.badlogic.gdx.Gdx#files} to get a reference to the {@link com.badlogic.gdx.Files} implementation
- * to create and look up files.
- *  
- */
-package com.badlogic.gdx.files;
-
-// This is a doc-only file and has no actual content.
\ No newline at end of file
diff --git a/gdx/src/com/badlogic/gdx/graphics/Camera.java b/gdx/src/com/badlogic/gdx/graphics/Camera.java
index cdf9838..2ae1ef5 100644
--- a/gdx/src/com/badlogic/gdx/graphics/Camera.java
+++ b/gdx/src/com/badlogic/gdx/graphics/Camera.java
@@ -22,7 +22,6 @@ import com.badlogic.gdx.Input;
 import com.badlogic.gdx.graphics.g2d.SpriteBatch;
 import com.badlogic.gdx.math.Frustum;
 import com.badlogic.gdx.math.Matrix4;
-import com.badlogic.gdx.math.Quaternion;
 import com.badlogic.gdx.math.Vector3;
 import com.badlogic.gdx.math.collision.Ray;
 
@@ -58,6 +57,7 @@ public abstract class Camera {
 	/** the frustum **/
 	public final Frustum frustum = new Frustum();
 
+	private final Matrix4 tmpMat = new Matrix4();
 	private final Vector3 tmpVec = new Vector3();
 
 	/** Recalculates the projection and view matrix of this camera and the {@link Frustum} planes. Use this after you've manipulated
@@ -87,12 +87,6 @@ public abstract class Camera {
 	public void lookAt (float x, float y, float z) {
 		direction.set(x, y, z).sub(position).nor();
 	}
-	
-	/** Recalculates the direction of the camera to look at the point (x, y, z).
-	 * @param target the point to look at */
-	public void lookAt (Vector3 target) {
-		direction.set(target).sub(position).nor();
-	}
 
 	/** Normalizes the up vector by first calculating the right vector via a cross product between direction and up, and then
 	 * recalculating the up vector via a cross product between right and direction. */
@@ -111,8 +105,7 @@ public abstract class Camera {
 	 * @param axisY the y-component of the axis
 	 * @param axisZ the z-component of the axis */
 	public void rotate (float angle, float axisX, float axisY, float axisZ) {
-		direction.rotate(axisX, axisY, axisZ, angle);
-		up.rotate(axisX, axisY, axisZ, angle);
+		rotate(tmpVec.set(axisX, axisY, axisZ), angle);
 	}
 
 	/** Rotates the direction and up vector of this camera by the given angle around the given axis. The direction and up vector
@@ -121,30 +114,13 @@ public abstract class Camera {
 	 * @param axis
 	 * @param angle the angle */
 	public void rotate (Vector3 axis, float angle) {
-		direction.rotate(axis, angle);
-		up.rotate(axis, angle);
-	}
-
-	/** Rotates the direction and up vector of this camera by the given rotation matrix. The direction and up vector
-	 * will not be orthogonalized.
-	 * 
-	 * @param transform The rotation matrix */
-	public void rotate(final Matrix4 transform) {
-		direction.rot(transform);
-		up.rot(transform);
+		tmpMat.setToRotation(axis, angle);
+		direction.mul(tmpMat).nor();
+		up.mul(tmpMat).nor();
 	}
 	
-	/** Rotates the direction and up vector of this camera by the given {@link Quaternion}. The direction and up vector
-	 * will not be orthogonalized.
-	 * 
-	 * @param quat The quaternion */
-	public void rotate(final Quaternion quat) {
-		quat.transform(direction);
-		quat.transform(up);
-	}
-
-	/** Rotates the direction and up vector of this camera by the given angle around the given axis, with the axis attached to given
-	 * point. The direction and up vector will not be orthogonalized.
+	/** Rotates the direction and up vector of this camera by the given angle around the given axis, with the axis attached to given point. 
+	 * The direction and up vector will not be orthogonalized.
 	 * 
 	 * @param point
 	 * @param axis
@@ -157,14 +133,6 @@ public abstract class Camera {
 		tmpVec.rotate(axis, angle);
 		translate(-tmpVec.x, -tmpVec.y, -tmpVec.z);
 	}
-	
-	/** Transform the position, direction and up vector by the given matrix
-	 * 
-	 * @param transform The transform matrix */
-	public void transform(final Matrix4 transform) {
-		position.mul(transform);
-		rotate(transform);
-	}
 
 	/** Moves the camera by the given amount on each axis.
 	 * @param x the displacement on the x-axis
@@ -180,12 +148,13 @@ public abstract class Camera {
 		position.add(vec);
 	}
 
-	/** Function to translate a point given in window (or window) coordinates to world space. It's the same as GLU gluUnProject, but
-	 * does not rely on OpenGL. The x- and y-coordinate of vec are assumed to be in window coordinates (origin is the top left
-	 * corner, y pointing down, x pointing to the right) as reported by the touch methods in {@link Input}. A z-coordinate of 0
-	 * will return a point on the near plane, a z-coordinate of 1 will return a point on the far plane. This method allows you to
-	 * specify the viewport position and dimensions in the coordinate system expected by
-	 * {@link GLCommon#glViewport(int, int, int, int)}, with the origin in the bottom left corner of the screen.
+	/** Function to translate a point given in window (or window) coordinates to world space. It's the same as
+	 * {@link GLU#gluUnProject(float, float, float, float[], int, float[], int, int[], int, float[], int)} but does not rely on
+	 * OpenGL. The x- and y-coordinate of vec are assumed to be in window coordinates (origin is the top left corner, y pointing
+	 * down, x pointing to the right) as reported by the touch methods in {@link Input}. A z-coordinate of 0 will return a point on
+	 * the near plane, a z-coordinate of 1 will return a point on the far plane. This method allows you to specify the viewport
+	 * position and dimensions in the coordinate system expected by {@link GLCommon#glViewport(int, int, int, int)}, with the
+	 * origin in the bottom left corner of the screen.
 	 * 
 	 * @param vec the point in window coordinates (origin top left)
 	 * @param viewportX the coordinate of the top left corner of the viewport in glViewport coordinates (origin bottom left)
@@ -203,32 +172,35 @@ public abstract class Camera {
 		vec.prj(invProjectionView);
 	}
 
-	/** Function to translate a point given in window (or window) coordinates to world space. It's the same as GLU gluUnProject but
-	 * does not rely on OpenGL. The viewport is assumed to span the whole screen and is fetched from {@link Graphics#getWidth()}
-	 * and {@link Graphics#getHeight()}. The x- and y-coordinate of vec are assumed to be in window coordinates (origin is the top
-	 * left corner, y pointing down, x pointing to the right) as reported by the touch methods in {@link Input}. A z-coordinate of
-	 * 0 will return a point on the near plane, a z-coordinate of 1 will return a point on the far plane.
+	/** Function to translate a point given in window (or window) coordinates to world space. It's the same as
+	 * {@link GLU#gluUnProject(float, float, float, float[], int, float[], int, int[], int, float[], int)} but does not rely on
+	 * OpenGL. The viewport is assumed to span the whole screen and is fetched from {@link Graphics#getWidth()} and
+	 * {@link Graphics#getHeight()}. The x- and y-coordinate of vec are assumed to be in window coordinates (origin is the top left
+	 * corner, y pointing down, x pointing to the right) as reported by the touch methods in {@link Input}. A z-coordinate of 0
+	 * will return a point on the near plane, a z-coordinate of 1 will return a point on the far plane.
 	 * 
 	 * @param vec the point in window coordinates */
 	public void unproject (Vector3 vec) {
 		unproject(vec, 0, 0, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
 	}
 
-	/** Projects the {@link Vector3} given in object/world space to window coordinates. It's the same as GLU gluProject with one
-	 * small deviation: The viewport is assumed to span the whole screen. The window coordinate system has its origin in the
-	 * <b>bottom</b> left, with the y-axis pointing <b>upwards</b> and the x-axis pointing to the right. This makes it easily
-	 * useable in conjunction with {@link SpriteBatch} and similar classes.
+	/** Projects the {@link Vector3} given in object/world space to window coordinates. It's the same as
+	 * {@link GLU#gluProject(float, float, float, float[], int, float[], int, int[], int, float[], int)} with one small deviation:
+	 * The viewport is assumed to span the whole screen. The window coordinate system has its origin in the <b>bottom</b> left,
+	 * with the y-axis pointing <b>upwards</b> and the x-axis pointing to the right. This makes it easily useable in conjunction
+	 * with {@link SpriteBatch} and similar classes.
 	 * @param vec the position in object/world space. */
 	public void project (Vector3 vec) {
 		project(vec, 0, 0, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
 	}
 
-	/** Projects the {@link Vector3} given in object/world space to window coordinates. It's the same as GLU gluProject with one
-	 * small deviation: The viewport is assumed to span the whole screen. The window coordinate system has its origin in the
-	 * <b>bottom</b> left, with the y-axis pointing <b>upwards</b> and the x-axis pointing to the right. This makes it easily
-	 * useable in conjunction with {@link SpriteBatch} and similar classes. This method allows you to specify the viewport position
-	 * and dimensions in the coordinate system expected by {@link GLCommon#glViewport(int, int, int, int)}, with the origin in the
-	 * bottom left corner of the screen.
+	/** Projects the {@link Vector3} given in object/world space to window coordinates. It's the same as
+	 * {@link GLU#gluProject(float, float, float, float[], int, float[], int, int[], int, float[], int)} with one small deviation:
+	 * The viewport is assumed to span the whole screen. The window coordinate system has its origin in the <b>bottom</b> left,
+	 * with the y-axis pointing <b>upwards</b> and the x-axis pointing to the right. This makes it easily useable in conjunction
+	 * with {@link SpriteBatch} and similar classes. This method allows you to specify the viewport position and dimensions in the
+	 * coordinate system expected by {@link GLCommon#glViewport(int, int, int, int)}, with the origin in the bottom left corner of
+	 * the screen.
 	 * 
 	 * @param vec the point in object/world space
 	 * @param viewportX the coordinate of the top left corner of the viewport in glViewport coordinates (origin bottom left)
diff --git a/gdx/src/com/badlogic/gdx/graphics/Color.java b/gdx/src/com/badlogic/gdx/graphics/Color.java
index 134852e..04ee24b 100644
--- a/gdx/src/com/badlogic/gdx/graphics/Color.java
+++ b/gdx/src/com/badlogic/gdx/graphics/Color.java
@@ -38,7 +38,6 @@ public class Color {
 	public static final Color MAGENTA = new Color(1, 0, 1, 1);
 	public static final Color CYAN = new Color(0, 1, 1, 1);
 
-	@Deprecated
 	public static Color tmp = new Color();
 
 	/** the red, green, blue and alpha components **/
@@ -77,6 +76,7 @@ public class Color {
 		this.g = color.g;
 		this.b = color.b;
 		this.a = color.a;
+		clamp();
 		return this;
 	}
 
@@ -89,7 +89,8 @@ public class Color {
 		this.g *= color.g;
 		this.b *= color.b;
 		this.a *= color.a;
-		return clamp();
+		clamp();
+		return this;
 	}
 
 	/** Multiplies all components of this Color with the given value.
@@ -101,7 +102,8 @@ public class Color {
 		this.g *= value;
 		this.b *= value;
 		this.a *= value;
-		return clamp();
+		clamp();
+		return this;
 	}
 
 	/** Adds the given color to this color.
@@ -113,7 +115,8 @@ public class Color {
 		this.g += color.g;
 		this.b += color.b;
 		this.a += color.a;
-		return clamp();
+		clamp();
+		return this;
 	}
 
 	/** Subtracts the given color from this color
@@ -125,11 +128,11 @@ public class Color {
 		this.g -= color.g;
 		this.b -= color.b;
 		this.a -= color.a;
-		return clamp();
+		clamp();
+		return this;
 	}
 
-	/** @return this Color for chaining */
-	public Color clamp () {
+	public void clamp () {
 		if (r < 0)
 			r = 0;
 		else if (r > 1) r = 1;
@@ -145,72 +148,13 @@ public class Color {
 		if (a < 0)
 			a = 0;
 		else if (a > 1) a = 1;
-		return this;
 	}
 
-	/** @return this Color for chaining */
-	public Color set (float r, float g, float b, float a) {
+	public void set (float r, float g, float b, float a) {
 		this.r = r;
 		this.g = g;
 		this.b = b;
 		this.a = a;
-		return clamp();
-	}
-
-	/** @return this Color for chaining */
-	public Color add (float r, float g, float b, float a) {
-		this.r += r;
-		this.g += g;
-		this.b += b;
-		this.a += a;
-		return clamp();
-	}
-
-	/** @return this Color for chaining */
-	public Color sub (float r, float g, float b, float a) {
-		this.r -= r;
-		this.g -= g;
-		this.b -= b;
-		this.a -= a;
-		return clamp();
-	}
-
-	/** @return this Color for chaining */
-	public Color mul (float r, float g, float b, float a) {
-		this.r *= r;
-		this.g *= g;
-		this.b *= b;
-		this.a *= a;
-		return clamp();
-	}
-	
-	/** Linearly interpolates between this color and the target color by t which is in the range [0,1]. 
-	 * The result is stored in this color.
-	 * @param target The target color
-	 * @param t The interpolation coefficient
-	 * @return This color for chaining. */
-	public Color lerp(final Color target, final float t) {
-		this.r += t * (target.r - this.r);
-		this.g += t * (target.g - this.g);
-		this.b += t * (target.b - this.b);
-		this.a += t * (target.a - this.a);
-		return clamp();
-	}
-	
-	/** Linearly interpolates between this color and the target color by t which is in the range [0,1]. 
-	 * The result is stored in this color.
-	 * @param r The red component of the target color
-	 * @param g The green component of the target color
-	 * @param b The blue component of the target color
-	 * @param a The alpha component of the target color
-	 * @param t The interpolation coefficient
-	 * @return This color for chaining. */
-	public Color lerp(final float r, final float g, final float b, final float a, final float t) {
-		this.r += t * (r - this.r);
-		this.g += t * (g - this.g);
-		this.b += t * (b - this.b);
-		this.a += t * (a - this.a);
-		return clamp();
 	}
 
 	@Override
diff --git a/gdx/src/com/badlogic/gdx/graphics/GLU.java b/gdx/src/com/badlogic/gdx/graphics/GLU.java
new file mode 100644
index 0000000..e46dd02
--- /dev/null
+++ b/gdx/src/com/badlogic/gdx/graphics/GLU.java
@@ -0,0 +1,34 @@
+/*******************************************************************************
+ * Copyright 2011 See AUTHORS file.
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/
+
+package com.badlogic.gdx.graphics;
+
+/** OpenGL utility class.
+ * @author mzechner */
+public interface GLU {
+	public void gluLookAt (GL10 gl, float eyeX, float eyeY, float eyeZ, float centerX, float centerY, float centerZ, float upX,
+		float upY, float upZ);
+
+	public void gluOrtho2D (GL10 gl, float left, float right, float bottom, float top);
+
+	public void gluPerspective (GL10 gl, float fovy, float aspect, float zNear, float zFar);
+
+	public boolean gluProject (float objX, float objY, float objZ, float[] model, int modelOffset, float[] project,
+		int projectOffset, int[] view, int viewOffset, float[] win, int winOffset);
+
+	public boolean gluUnProject (float winX, float winY, float winZ, float[] model, int modelOffset, float[] project,
+		int projectOffset, int[] view, int viewOffset, float[] obj, int objOffset);
+}
diff --git a/gdx/src/com/badlogic/gdx/graphics/Mesh.java b/gdx/src/com/badlogic/gdx/graphics/Mesh.java
index c9437a9..ab6083d 100644
--- a/gdx/src/com/badlogic/gdx/graphics/Mesh.java
+++ b/gdx/src/com/badlogic/gdx/graphics/Mesh.java
@@ -125,6 +125,46 @@ public class Mesh implements Disposable {
 		addManagedMesh(Gdx.app, this);
 	}
 
+	/** by jw:
+	 * Creates a new Mesh with the given attributes. 
+	 * Adds extra optimizations for dynamic (frequently modified) meshes.
+	 * 
+	 * @param staticVertices whether vertices of this mesh are static or not. Allows for internal optimizations.
+	 * @param staticIndices whether indices of this mesh are static or not. Allows for internal optimizations.
+	 * @param maxVertices the maximum number of vertices this mesh can hold
+	 * @param maxIndices the maximum number of indices this mesh can hold
+	 * @param attributes the {@link VertexAttributes}. Each vertex attribute defines one property of a vertex such as position,
+	 *           normal or texture coordinate 
+	 *           
+	 * @author Jaroslaw Wisniewski <j.wisniewski@appsisle.com>           
+	 **/
+	public Mesh (boolean staticVertices, boolean staticIndices, int maxVertices, int maxIndices, VertexAttributes attributes) {
+		if (Gdx.gl20 != null || Gdx.gl11 != null || Mesh.forceVBO) {
+			
+			// buffers do not update when initialized with ..ObjectSubData classes
+			/*if (staticVertices) 
+				vertices = new VertexBufferObject(staticVertices, maxVertices, attributes);
+			else 
+				vertices = new VertexBufferObjectSubData(staticVertices, maxVertices, attributes);	// when updating vertices - updates buffer instead recreating it
+
+			if (staticIndices) 
+				indices = new IndexBufferObject(staticIndices, maxIndices);
+			else 
+				indices = new IndexBufferObjectSubData(staticIndices, maxIndices);	// when updating indices - updates buffer instead recreating it
+			*/
+			
+			vertices = new VertexBufferObject(staticVertices, maxVertices, attributes);
+			indices = new IndexBufferObject(staticIndices, maxIndices);
+			isVertexArray = false;
+		} else {
+			vertices = new VertexArray(maxVertices, attributes);
+			indices = new IndexArray(maxIndices);
+			isVertexArray = true;
+		}
+
+		addManagedMesh(Gdx.app, this);
+	}
+	
 	/** Creates a new Mesh with the given attributes. This is an expert method with no error checking. Use at your own risk.
 	 * 
 	 * @param type the {@link VertexDataType} to be used, VBO or VA.
diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/Animation.java b/gdx/src/com/badlogic/gdx/graphics/g2d/Animation.java
index 2a29c32..b679557 100644
--- a/gdx/src/com/badlogic/gdx/graphics/g2d/Animation.java
+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/Animation.java
@@ -171,6 +171,7 @@ public class Animation {
 	 * @param stateTime
 	 * @return whether the animation is finished. */
 	public boolean isAnimationFinished (float stateTime) {
+		if(playMode != NORMAL && playMode != REVERSED) return false;
 		int frameNumber = (int)(stateTime / frameDuration);
 		return keyFrames.length - 1 < frameNumber;
 	}
diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/Gdx2DPixmap.java b/gdx/src/com/badlogic/gdx/graphics/g2d/Gdx2DPixmap.java
index 3efad63..cacebfc 100644
--- a/gdx/src/com/badlogic/gdx/graphics/g2d/Gdx2DPixmap.java
+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/Gdx2DPixmap.java
@@ -81,10 +81,9 @@ public class Gdx2DPixmap implements Disposable {
 		format = (int)nativeData[3];
 	}
 
-	/** @throws GdxRuntimeException if allocation failed. */
-	public Gdx2DPixmap (int width, int height, int format) throws GdxRuntimeException {
+	public Gdx2DPixmap (int width, int height, int format) throws IllegalArgumentException {
 		pixelPtr = newPixmap(nativeData, width, height, format);
-		if (pixelPtr == null) throw new GdxRuntimeException("couldn't load pixmap");
+		if (pixelPtr == null) throw new IllegalArgumentException("couldn't load pixmap");
 
 		this.basePtr = nativeData[0];
 		this.width = (int)nativeData[1];
diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/NinePatch.java b/gdx/src/com/badlogic/gdx/graphics/g2d/NinePatch.java
index 7c6e76b..dd0b69a 100644
--- a/gdx/src/com/badlogic/gdx/graphics/g2d/NinePatch.java
+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/NinePatch.java
@@ -21,16 +21,7 @@ import com.badlogic.gdx.graphics.Texture;
 import com.badlogic.gdx.utils.GdxRuntimeException;
 
 /** A 3x3 grid of texture regions. Any of the regions may be omitted. Padding may be set as a hint on how to inset content on top
- * of the ninepatch (by default the eight "edge" textures of the nine-patch define the padding).  When drawn the eight "edge" patches
- * will not be scaled, only the interior patch will be scaled.
- * 
- * <p><b>NOTE</b>: This class expects a "post-processed" nine-patch, and not a raw ".9.png" texture. That is, the textures given to
- * this class should <em>not</em> include the meta-data pixels from a ".9.png" that describe the layout of the ninepatch over the
- * interior of the graphic. That information should be passed into the constructor either implicitly as the size of the individual
- * patch textures, or via the <code>left, right, top, bottom</code> parameters to {@link #NinePatch(Texture, int, int, int, int)}
- * or {@link #NinePatch(TextureRegion, int, int, int, int)}.
- * 
- * <p>A correctly created {@link TextureAtlas} is one way to generate a post-processed nine-patch from a ".9.png" file. */
+ * of the ninepatch. */
 public class NinePatch {
 	public static final int TOP_LEFT = 0;
 	public static final int TOP_CENTER = 1;
@@ -39,11 +30,10 @@ public class NinePatch {
 	public static final int MIDDLE_CENTER = 4;
 	public static final int MIDDLE_RIGHT = 5;
 	public static final int BOTTOM_LEFT = 6;
-	/** Indices for {@link #NinePatch(TextureRegion...)} constructor */  // alphabetically first in javadoc
 	public static final int BOTTOM_CENTER = 7;
 	public static final int BOTTOM_RIGHT = 8;
 
-	static private final Color tmpDrawColor = new Color();
+	static private final Color tempColor = new Color();
 
 	private Texture texture;
 	private int bottomLeft = -1, bottomCenter = -1, bottomRight = -1;
@@ -55,10 +45,7 @@ public class NinePatch {
 	private final Color color = new Color(Color.WHITE);
 	private int padLeft = -1, padRight = -1, padTop = -1, padBottom = -1;
 
-	/** Create a ninepatch by cutting up the given texture into nine patches. The subsequent parameters define the 4 lines that will
-	 * cut the texture region into 9 pieces.
-	 * 
-	 * @param left Pixels from left edge.
+	/** @param left Pixels from left edge.
 	 * @param right Pixels from right edge.
 	 * @param top Pixels from top edge.
 	 * @param bottom Pixels from bottom edge. */
@@ -66,33 +53,30 @@ public class NinePatch {
 		this(new TextureRegion(texture), left, right, top, bottom);
 	}
 
-	/** Create a ninepatch by cutting up the given texture region into nine patches. The subsequent parameters define the 4 lines
-	 * that will cut the texture region into 9 pieces.
-	 * 
-	 * @param left Pixels from left edge.
+	/** @param left Pixels from left edge.
 	 * @param right Pixels from right edge.
 	 * @param top Pixels from top edge.
 	 * @param bottom Pixels from bottom edge. */
 	public NinePatch (TextureRegion region, int left, int right, int top, int bottom) {
 		if (region == null) throw new IllegalArgumentException("region cannot be null.");
-		final int middleWidth = region.getRegionWidth() - left - right;
-		final int middleHeight = region.getRegionHeight() - top - bottom;
+		int middleWidth = region.getRegionWidth() - left - right;
+		int middleHeight = region.getRegionHeight() - top - bottom;
 
 		TextureRegion[] patches = new TextureRegion[9];
 		if (top > 0) {
-			if (left > 0) patches[TOP_LEFT] = new TextureRegion(region, 0, 0, left, top);
-			if (middleWidth > 0) patches[TOP_CENTER] = new TextureRegion(region, left, 0, middleWidth, top);
-			if (right > 0) patches[TOP_RIGHT] = new TextureRegion(region, left + middleWidth, 0, right, top);
+			if (left > 0) patches[0] = new TextureRegion(region, 0, 0, left, top);
+			if (middleWidth > 0) patches[1] = new TextureRegion(region, left, 0, middleWidth, top);
+			if (right > 0) patches[2] = new TextureRegion(region, left + middleWidth, 0, right, top);
 		}
 		if (middleHeight > 0) {
-			if (left > 0) patches[MIDDLE_LEFT] = new TextureRegion(region, 0, top, left, middleHeight);
-			if (middleWidth > 0) patches[MIDDLE_CENTER] = new TextureRegion(region, left, top, middleWidth, middleHeight);
-			if (right > 0) patches[MIDDLE_RIGHT] = new TextureRegion(region, left + middleWidth, top, right, middleHeight);
+			if (left > 0) patches[3] = new TextureRegion(region, 0, top, left, middleHeight);
+			if (middleWidth > 0) patches[4] = new TextureRegion(region, left, top, middleWidth, middleHeight);
+			if (right > 0) patches[5] = new TextureRegion(region, left + middleWidth, top, right, middleHeight);
 		}
 		if (bottom > 0) {
-			if (left > 0) patches[BOTTOM_LEFT] = new TextureRegion(region, 0, top + middleHeight, left, bottom);
-			if (middleWidth > 0) patches[BOTTOM_CENTER] = new TextureRegion(region, left, top + middleHeight, middleWidth, bottom);
-			if (right > 0) patches[BOTTOM_RIGHT] = new TextureRegion(region, left + middleWidth, top + middleHeight, right, bottom);
+			if (left > 0) patches[6] = new TextureRegion(region, 0, top + middleHeight, left, bottom);
+			if (middleWidth > 0) patches[7] = new TextureRegion(region, left, top + middleHeight, middleWidth, bottom);
+			if (right > 0) patches[8] = new TextureRegion(region, left + middleWidth, top + middleHeight, right, bottom);
 		}
 
 		// If split only vertical, move splits from right to center.
@@ -117,24 +101,20 @@ public class NinePatch {
 		load(patches);
 	}
 
-	/** Construct a degenerate "nine" patch with only a center component. */
 	public NinePatch (Texture texture, Color color) {
 		this(texture);
 		setColor(color);
 	}
 
-	/** Construct a degenerate "nine" patch with only a center component. */
 	public NinePatch (Texture texture) {
 		this(new TextureRegion(texture));
 	}
 
-	/** Construct a degenerate "nine" patch with only a center component. */
 	public NinePatch (TextureRegion region, Color color) {
 		this(region);
 		setColor(color);
 	}
 
-	/** Construct a degenerate "nine" patch with only a center component. */
 	public NinePatch (TextureRegion region) {
 		load(new TextureRegion[] {
 			//
@@ -144,9 +124,6 @@ public class NinePatch {
 		});
 	}
 
-	/** Construct a nine patch from the given nine texture regions. The provided patches must be consistently sized (e.g., any left
-	 * edge textures must have the same width, etc). Patches may be <code>null</code>. Patch indices are specified via the public
-	 * members {@link #TOP_LEFT}, {@link #TOP_CENTER}, etc. */ 
 	public NinePatch (TextureRegion... patches) {
 		if (patches == null || patches.length != 9) throw new IllegalArgumentException("NinePatch needs nine TextureRegions");
 
@@ -182,7 +159,7 @@ public class NinePatch {
 	}
 
 	public NinePatch (NinePatch ninePatch) {
-		this(ninePatch, ninePatch.color);
+		this(ninePatch, new Color(ninePatch.color));
 	}
 
 	public NinePatch (NinePatch ninePatch, Color color) {
@@ -212,7 +189,7 @@ public class NinePatch {
 	}
 
 	private void load (TextureRegion[] patches) {
-		final float color = Color.WHITE.toFloatBits(); // placeholder color, overwritten at draw time
+		float color = Color.WHITE.toFloatBits();
 
 		if (patches[BOTTOM_LEFT] != null) {
 			bottomLeft = add(patches[BOTTOM_LEFT], color);
@@ -298,7 +275,6 @@ public class NinePatch {
 		return idx - 4 * 5;
 	}
 
-	/** Set the coordinates and color of a ninth of the patch. */
 	private void set (int idx, float x, float y, float width, float height, float color) {
 		final float fx2 = x + width;
 		final float fy2 = y + height;
@@ -321,11 +297,11 @@ public class NinePatch {
 	}
 
 	public void draw (SpriteBatch batch, float x, float y, float width, float height) {
-		final float centerColumnX = x + leftWidth;
-		final float rightColumnX = x + width - rightWidth;
-		final float middleRowY = y + bottomHeight;
-		final float topRowY = y + height - topHeight;
-		final float c = tmpDrawColor.set(color).mul(batch.getColor()).toFloatBits();
+		float centerColumnX = x + leftWidth;
+		float rightColumnX = x + width - rightWidth;
+		float middleRowY = y + bottomHeight;
+		float topRowY = y + height - topHeight;
+		float c = tempColor.set(color).mul(batch.getColor()).toFloatBits();
 
 		if (bottomLeft != -1) set(bottomLeft, x, y, centerColumnX - x, middleRowY - y, c);
 		if (bottomCenter != -1) set(bottomCenter, centerColumnX, y, rightColumnX - centerColumnX, middleRowY - y, c);
@@ -341,8 +317,6 @@ public class NinePatch {
 		batch.draw(texture, vertices, 0, idx);
 	}
 
-	/** Copy given color. The color will be blended with the batch color, then combined with the texture colors at
-	 * {@link NinePatch#draw(SpriteBatch, float, float, float, float) draw} time. Default is {@link Color#WHITE}. */
 	public void setColor (Color color) {
 		this.color.set(color);
 	}
@@ -355,7 +329,6 @@ public class NinePatch {
 		return leftWidth;
 	}
 
-	/** Set the draw-time width of the three left edge patches */ 
 	public void setLeftWidth (float leftWidth) {
 		this.leftWidth = leftWidth;
 	}
@@ -364,7 +337,6 @@ public class NinePatch {
 		return rightWidth;
 	}
 
-	/** Set the draw-time width of the three right edge patches */ 
 	public void setRightWidth (float rightWidth) {
 		this.rightWidth = rightWidth;
 	}
@@ -373,7 +345,6 @@ public class NinePatch {
 		return topHeight;
 	}
 
-	/** Set the draw-time height of the three top edge patches */ 
 	public void setTopHeight (float topHeight) {
 		this.topHeight = topHeight;
 	}
@@ -382,7 +353,6 @@ public class NinePatch {
 		return bottomHeight;
 	}
 
-	/** Set the draw-time height of the three bottom edge patches */ 
 	public void setBottomHeight (float bottomHeight) {
 		this.bottomHeight = bottomHeight;
 	}
@@ -391,9 +361,6 @@ public class NinePatch {
 		return middleWidth;
 	}
 
-	/** Set the width of the middle column of the patch. At render time, this is implicitly the requested render-width of the entire
-	 * nine patch, minus the left and right width. This value is only used for computing the {@link #getTotalWidth() default total
-	 * width}. */
 	public void setMiddleWidth (float middleWidth) {
 		this.middleWidth = middleWidth;
 	}
@@ -402,9 +369,6 @@ public class NinePatch {
 		return middleHeight;
 	}
 
-	/** Set the height of the middle row of the patch. At render time, this is implicitly the requested render-height of the entire
-	 * nine patch, minus the top and bottom height. This value is only used for computing the {@link #getTotalHeight() default total
-	 * height}. */
 	public void setMiddleHeight (float middleHeight) {
 		this.middleHeight = middleHeight;
 	}
@@ -417,8 +381,6 @@ public class NinePatch {
 		return topHeight + middleHeight + bottomHeight;
 	}
 
-	/** Set the padding for content inside this ninepatch. By default the padding is set to match the exterior of the ninepatch, so
-	 * the content should fit exactly within the middle patch. */
 	public void setPadding (int left, int right, int top, int bottom) {
 		this.padLeft = left;
 		this.padRight = right;
@@ -432,7 +394,6 @@ public class NinePatch {
 		return padLeft;
 	}
 
-	/** See {@link #setPadding(int, int, int, int)} */
 	public void setPadLeft (int left) {
 		this.padLeft = left;
 	}
@@ -443,7 +404,6 @@ public class NinePatch {
 		return padRight;
 	}
 
-	/** See {@link #setPadding(int, int, int, int)} */
 	public void setPadRight (int right) {
 		this.padRight = right;
 	}
@@ -453,8 +413,7 @@ public class NinePatch {
 		if (padTop == -1) return getTopHeight();
 		return padTop;
 	}
-	
-	/** See {@link #setPadding(int, int, int, int)} */
+
 	public void setPadTop (int top) {
 		this.padTop = top;
 	}
@@ -465,7 +424,6 @@ public class NinePatch {
 		return padBottom;
 	}
 
-	/** See {@link #setPadding(int, int, int, int)} */
 	public void setPadBottom (int bottom) {
 		this.padBottom = bottom;
 	}
diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java b/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java
index 8b02c23..b4f8a80 100644
--- a/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java
+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java
@@ -899,17 +899,17 @@ public class ParticleEmitter {
 		return Float.parseFloat(readString(reader, name));
 	}
 
-	public static class Particle extends Sprite {
-		protected int life, currentLife;
-		protected float scale, scaleDiff;
-		protected float rotation, rotationDiff;
-		protected float velocity, velocityDiff;
-		protected float angle, angleDiff;
-		protected float angleCos, angleSin;
-		protected float transparency, transparencyDiff;
-		protected float wind, windDiff;
-		protected float gravity, gravityDiff;
-		protected float[] tint;
+	static class Particle extends Sprite {
+		int life, currentLife;
+		float scale, scaleDiff;
+		float rotation, rotationDiff;
+		float velocity, velocityDiff;
+		float angle, angleDiff;
+		float angleCos, angleSin;
+		float transparency, transparencyDiff;
+		float wind, windDiff;
+		float gravity, gravityDiff;
+		float[] tint;
 
 		public Particle (Sprite sprite) {
 			super(sprite);
diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/SpriteCache.java b/gdx/src/com/badlogic/gdx/graphics/g2d/SpriteCache.java
index 6ba3dcc..4814de9 100644
--- a/gdx/src/com/badlogic/gdx/graphics/g2d/SpriteCache.java
+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/SpriteCache.java
@@ -859,14 +859,13 @@ public class SpriteCache implements Disposable {
 				customShader.setUniformMatrix("u_trans", transformMatrix);
 				customShader.setUniformMatrix("u_projTrans", combinedMatrix);
 				customShader.setUniformi("u_texture", 0);
-				mesh.bind(customShader);
 			} else {
 				shader.begin();
 				shader.setUniformMatrix("u_projectionViewMatrix", combinedMatrix);
 				shader.setUniformi("u_texture", 0);
-				mesh.bind(shader);
 			}
 
+			mesh.bind(shader);
 		}
 		drawing = true;
 	}
@@ -885,8 +884,7 @@ public class SpriteCache implements Disposable {
 			shader.end();
 			GL20 gl = Gdx.gl20;
 			gl.glDepthMask(true);
-			if(customShader != null) mesh.unbind(customShader);
-			else mesh.unbind(shader);
+			mesh.unbind(shader);
 		}
 	}
 
diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/TextureAtlas.java b/gdx/src/com/badlogic/gdx/graphics/g2d/TextureAtlas.java
index f12fae1..1e5d5bf 100644
--- a/gdx/src/com/badlogic/gdx/graphics/g2d/TextureAtlas.java
+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/TextureAtlas.java
@@ -222,9 +222,8 @@ public class TextureAtlas implements Disposable {
 		this(new TextureAtlasData(packFile, imagesDir, flip));
 	}
 
-	/** @param data May be null. */
 	public TextureAtlas (TextureAtlasData data) {
-		if (data != null) load(data);
+		load(data);
 	}
 
 	private void load (TextureAtlasData data) {
@@ -489,8 +488,6 @@ public class TextureAtlas implements Disposable {
 
 		public AtlasRegion (Texture texture, int x, int y, int width, int height) {
 			super(texture, x, y, width, height);
-			originalWidth = width;
-			originalHeight = height;
 			packedWidth = width;
 			packedHeight = height;
 		}
diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/TextureRegion.java b/gdx/src/com/badlogic/gdx/graphics/g2d/TextureRegion.java
index 532a372..9ce40b8 100644
--- a/gdx/src/com/badlogic/gdx/graphics/g2d/TextureRegion.java
+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/TextureRegion.java
@@ -225,8 +225,7 @@ public class TextureRegion {
 
 	/** Helper function to create tiles out of this TextureRegion starting from the top left corner going to the left and ending at
 	 * the bottom right corner. Only complete tiles will be returned so if the region's width or height are not a multiple of the
-	 * tile width and height not all of the region will be used. This will not work on texture regions returned form a TextureAtlas
-	 * that either have whitespace removed or where flipped before the region is split.
+	 * tile width and height not all of the region will be used.
 	 * 
 	 * @param tileWidth a tile's width in pixels
 	 * @param tileHeight a tile's height in pixels
diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/SimpleTileAtlas.java b/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/SimpleTileAtlas.java
new file mode 100644
index 0000000..cbf31e1
--- /dev/null
+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/SimpleTileAtlas.java
@@ -0,0 +1,78 @@
+/*******************************************************************************
+ * Copyright 2011 See AUTHORS file.
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/
+
+package com.badlogic.gdx.graphics.g2d.tiled;
+
+import com.badlogic.gdx.files.FileHandle;
+import com.badlogic.gdx.graphics.Pixmap;
+import com.badlogic.gdx.graphics.Texture;
+import com.badlogic.gdx.graphics.g2d.TextureRegion;
+import com.badlogic.gdx.math.MathUtils;
+
+/** Contains an atlas of tiles by tile id for use with {@link TileMapRenderer} It does not need to be loaded with packed files.
+ * Just plain textures.
+ * @author Tomas Lazaro */
+public class SimpleTileAtlas extends TileAtlas {
+
+	/** Creates a TileAtlas for use with {@link TileMapRenderer}.
+	 * @param map The tiled map
+	 * @param inputDir The directory containing all needed textures in the map */
+	public SimpleTileAtlas (TiledMap map, FileHandle inputDir) {
+		for (TileSet set : map.tileSets) {
+			Pixmap pixmap = new Pixmap(inputDir.child(set.imageName));
+
+			int originalWidth = pixmap.getWidth();
+			int originalHeight = pixmap.getHeight();
+
+			if (!MathUtils.isPowerOfTwo(originalWidth) || !MathUtils.isPowerOfTwo(originalHeight)) {
+				final int width = MathUtils.nextPowerOfTwo(originalWidth);
+				final int height = MathUtils.nextPowerOfTwo(originalHeight);
+
+				Pixmap potPixmap = new Pixmap(width, height, pixmap.getFormat());
+				potPixmap.drawPixmap(pixmap, 0, 0, 0, 0, width, height);
+				pixmap.dispose();
+				pixmap = potPixmap;
+			}
+			Texture texture = new Texture(pixmap);
+			pixmap.dispose();
+			textures.add(texture);
+
+			int idx = 0;
+			TextureRegion[][] regions = split(texture, originalWidth, originalHeight, map.tileWidth, map.tileHeight, set.spacing,
+				set.margin);
+			for (int y = 0; y < regions[0].length; y++) {
+				for (int x = 0; x < regions.length; x++) {
+					regionsMap.put(idx++ + set.firstgid, regions[x][y]);
+				}
+			}
+		}
+	}
+
+	private static TextureRegion[][] split (Texture texture, int totalWidth, int totalHeight, int width, int height, int spacing,
+		int margin) {
+		// TODO add padding support
+		int xSlices = (totalWidth - margin) / (width + spacing);
+		int ySlices = (totalHeight - margin) / (height + spacing);
+
+		TextureRegion[][] res = new TextureRegion[xSlices][ySlices];
+		for (int x = 0; x < xSlices; x++) {
+			for (int y = 0; y < ySlices; y++) {
+				res[x][y] = new TextureRegion(texture, margin + x * (width + spacing), margin + y * (height + spacing), width, height);
+			}
+		}
+		return res;
+	}
+}
diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TileAtlas.java b/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TileAtlas.java
new file mode 100644
index 0000000..df812eb
--- /dev/null
+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TileAtlas.java
@@ -0,0 +1,132 @@
+/*******************************************************************************
+ * Copyright 2011 See AUTHORS file.
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/
+
+package com.badlogic.gdx.graphics.g2d.tiled;
+
+import java.util.HashSet;
+import java.util.StringTokenizer;
+
+import com.badlogic.gdx.files.FileHandle;
+import com.badlogic.gdx.graphics.Texture;
+import com.badlogic.gdx.graphics.g2d.TextureAtlas;
+import com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion;
+import com.badlogic.gdx.graphics.g2d.TextureRegion;
+import com.badlogic.gdx.utils.Array;
+import com.badlogic.gdx.utils.Disposable;
+import com.badlogic.gdx.utils.IntMap;
+
+/** Contains an atlas of tiles by tile id for use with {@link TileMapRenderer}
+ * @author David Fraska */
+public class TileAtlas implements Disposable {
+
+	protected IntMap<TextureRegion> regionsMap = new IntMap<TextureRegion>();
+	protected final HashSet<Texture> textures = new HashSet<Texture>(1);
+
+	/** Protected constructor to allow different implementations */
+	protected TileAtlas () {
+	}
+
+	/** Creates a TileAtlas for use with {@link TileMapRenderer}. Run the map through TiledMapPacker to create the files required.
+	 * @param map The tiled map
+	 * @param inputDir The directory containing all the files created by TiledMapPacker */
+	public TileAtlas (TiledMap map, FileHandle inputDir) {
+		// TODO: Create a constructor that doesn't take a tmx map,
+		for (TileSet set : map.tileSets) {
+			FileHandle packfile = getRelativeFileHandle(inputDir, removeExtension(set.imageName) + " packfile");
+			TextureAtlas textureAtlas = new TextureAtlas(packfile, packfile.parent(), false);
+			Array<AtlasRegion> atlasRegions = textureAtlas.findRegions(removeExtension(removePath(set.imageName)));
+			for (AtlasRegion reg : atlasRegions) {
+				regionsMap.put(reg.index + set.firstgid, reg);
+				if (!textures.contains(reg.getTexture())) {
+					textures.add(reg.getTexture());
+				}
+			}
+		}
+	}
+
+	/** Gets an {@link TextureRegion} for a tile id
+	 * @param id tile id
+	 * @return the {@link TextureRegion} */
+	public TextureRegion getRegion (int id) {
+		return regionsMap.get(id);
+	}
+
+	/** Releases all resources associated with this TileAtlas instance. This releases all the textures backing all AtlasRegions,
+	 * which should no longer be used after calling dispose. */
+	@Override
+	public void dispose () {
+		for (Texture texture : textures) {
+			texture.dispose();
+		}
+		textures.clear();
+	}
+
+	private static String removeExtension (String s) {
+		int extensionIndex = s.lastIndexOf(".");
+		if (extensionIndex == -1) {
+			return s;
+		}
+
+		return s.substring(0, extensionIndex);
+	}
+
+	private static String removePath (String s) {
+		String temp;
+
+		int index = s.lastIndexOf('\\');
+		if (index != -1) {
+			temp = s.substring(index + 1);
+		} else {
+			temp = s;
+		}
+
+		index = temp.lastIndexOf('/');
+		if (index != -1) {
+			return s.substring(index + 1);
+		} else {
+			return s;
+		}
+	}
+
+	private static FileHandle getRelativeFileHandle (FileHandle path, String relativePath) {
+		if (relativePath.trim().length() == 0) {
+			return path;
+		}
+
+		FileHandle child = path;
+
+		StringTokenizer tokenizer = new StringTokenizer(relativePath, "\\/");
+		while (tokenizer.hasMoreTokens()) {
+			String token = tokenizer.nextToken();
+			if (token.equals("..")) {
+				child = child.parent();
+			} else {
+				child = child.child(token);
+			}
+		}
+
+		return child;
+	}
+
+	/** Flips all regions in the atlas on the specified axis.
+	 * @param x - if <code>true</code> region is flipped on the <b>x</b> axis
+	 * @param y - if <code>true</code> region is flipped on the <b>y</b> axis */
+	public void flipRegions (boolean x, boolean y) {
+		for (TextureRegion region : regionsMap.values()) {
+			region.flip(x, y);
+		}
+	}
+}
diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TileMapRenderer.java b/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TileMapRenderer.java
new file mode 100644
index 0000000..e665599
--- /dev/null
+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TileMapRenderer.java
@@ -0,0 +1,553 @@
+/*
+ * Copyright 2010 David Fraska (dfraska@gmail.com)
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the
+ * License. You may obtain a copy of the License at
+ * 
+ * http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS"
+ * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language
+ * governing permissions and limitations under the License.
+ */
+
+package com.badlogic.gdx.graphics.g2d.tiled;
+
+import java.util.StringTokenizer;
+
+import com.badlogic.gdx.Gdx;
+import com.badlogic.gdx.graphics.GL10;
+import com.badlogic.gdx.graphics.GL11;
+import com.badlogic.gdx.graphics.OrthographicCamera;
+import com.badlogic.gdx.graphics.g2d.SpriteCache;
+import com.badlogic.gdx.graphics.g2d.TextureRegion;
+import com.badlogic.gdx.graphics.glutils.ShaderProgram;
+import com.badlogic.gdx.math.MathUtils;
+import com.badlogic.gdx.math.Matrix4;
+import com.badlogic.gdx.math.Vector3;
+import com.badlogic.gdx.utils.Disposable;
+import com.badlogic.gdx.utils.IntArray;
+
+/** A renderer for Tiled maps backed with a Sprite Cache.
+ * @author David Fraska */
+public class TileMapRenderer implements Disposable {
+	private SpriteCache cache;
+	private int normalCacheId[][][], blendedCacheId[][][];
+
+	private TileAtlas atlas;
+	private TiledMap map;
+
+	private int mapHeightUnits, mapWidthUnits;
+	private int tileWidth, tileHeight;
+	private float unitsPerTileX, unitsPerTileY;
+	private int tilesPerBlockX, tilesPerBlockY;
+	private float unitsPerBlockX, unitsPerBlockY;
+	private int[] allLayers;
+	private boolean isSimpleTileAtlas = false;
+
+	private IntArray blendedTiles;
+
+	/** A renderer for static tile maps backed with a Sprite Cache.
+	 * 
+	 * This constructor is for convenience when loading TiledMaps. The normal Tiled coordinate system is used when placing tiles.
+	 * 
+	 * A default shader is used if OpenGL ES 2.0 is enabled.
+	 * 
+	 * The tilesPerBlockX and tilesPerBlockY parameters will need to be adjusted for best performance. Smaller values will cull
+	 * more precisely, but result in longer loading times. Larger values result in shorter loading times, but will cull less
+	 * precisely.
+	 * 
+	 * @param map A tile map's tile numbers, in the order [layer][row][column]
+	 * @param atlas The tile atlas to be used when drawing the map
+	 * @param tilesPerBlockX The width of each block to be drawn, in number of tiles
+	 * @param tilesPerBlockY The height of each block to be drawn, in number of tiles */
+	public TileMapRenderer (TiledMap map, TileAtlas atlas, int tilesPerBlockX, int tilesPerBlockY) {
+		this(map, atlas, tilesPerBlockX, tilesPerBlockY, map.tileWidth, map.tileHeight);
+	}
+
+	/** A renderer for static tile maps backed with a Sprite Cache.
+	 * 
+	 * This constructor is for convenience when loading TiledMaps.
+	 * 
+	 * A default shader is used if OpenGL ES 2.0 is enabled.
+	 * 
+	 * The tilesPerBlockX and tilesPerBlockY parameters will need to be adjusted for best performance. Smaller values will cull
+	 * more precisely, but result in longer loading times. Larger values result in shorter loading times, but will cull less
+	 * precisely.
+	 * 
+	 * @param map A tile map's tile numbers, in the order [layer][row][column]
+	 * @param atlas The tile atlas to be used when drawing the map
+	 * @param tilesPerBlockX The width of each block to be drawn, in number of tiles
+	 * @param tilesPerBlockY The height of each block to be drawn, in number of tiles
+	 * @param unitsPerTileX The number of units per tile in the x direction
+	 * @param unitsPerTileY The number of units per tile in the y direction */
+	public TileMapRenderer (TiledMap map, TileAtlas atlas, int tilesPerBlockX, int tilesPerBlockY, float unitsPerTileX,
+		float unitsPerTileY) {
+		this(map, atlas, tilesPerBlockX, tilesPerBlockY, unitsPerTileX, unitsPerTileY, null);
+	}
+
+	/** A renderer for static tile maps backed with a Sprite Cache.
+	 * 
+	 * This constructor is for convenience when loading TiledMaps. The normal Tiled coordinate system is used when placing tiles.
+	 * 
+	 * The tilesPerBlockX and tilesPerBlockY parameters will need to be adjusted for best performance. Smaller values will cull
+	 * more precisely, but result in longer loading times. Larger values result in shorter loading times, but will cull less
+	 * precisely.
+	 * 
+	 * @param map A tile map's tile numbers, in the order [layer][row][column]
+	 * @param atlas The tile atlas to be used when drawing the map
+	 * @param tilesPerBlockX The width of each block to be drawn, in number of tiles
+	 * @param tilesPerBlockY The height of each block to be drawn, in number of tiles
+	 * @param shader Shader to use for OpenGL ES 2.0, null uses a default shader. Ignored if using OpenGL ES 1.0. */
+	public TileMapRenderer (TiledMap map, TileAtlas atlas, int tilesPerBlockX, int tilesPerBlockY, ShaderProgram shader) {
+		this(map, atlas, tilesPerBlockX, tilesPerBlockY, map.tileWidth, map.tileHeight, shader);
+	}
+
+	public TileMapRenderer (TiledMap map, TileAtlas atlas, int tilesPerBlockX, int tilesPerBlockY, float unitsPerTileX,
+		float unitsPerTileY, ShaderProgram shader) {
+		int[][][] tileMap = new int[map.layers.size()][][];
+		for (int i = 0; i < map.layers.size(); i++) {
+			tileMap[i] = map.layers.get(i).tiles;
+		}
+
+		for (int i = 0; i < map.tileSets.size(); i++) {
+			if (map.tileSets.get(i).tileHeight - map.tileHeight > overdrawY * unitsPerTileY)
+				overdrawY = (map.tileSets.get(i).tileHeight - map.tileHeight) / unitsPerTileY;
+			if (map.tileSets.get(i).tileWidth - map.tileWidth > overdrawX * unitsPerTileX)
+				overdrawX = (map.tileSets.get(i).tileWidth - map.tileWidth) / unitsPerTileX;
+		}
+
+		String blendedTiles = map.properties.get("blended tiles");
+		IntArray blendedTilesArray;
+
+		if (blendedTiles != null) {
+			blendedTilesArray = createFromCSV(blendedTiles);
+		} else {
+			blendedTilesArray = new IntArray(0);
+		}
+
+		init(tileMap, atlas, map.tileWidth, map.tileHeight, unitsPerTileX, unitsPerTileY, blendedTilesArray, tilesPerBlockX,
+			tilesPerBlockY, shader);
+		this.map = map;
+	}
+
+	/** A renderer for static tile maps backed with a Sprite Cache.
+	 * 
+	 * The tilesPerBlockX and tilesPerBlockY parameters will need to be adjusted for best performance. Smaller values will cull
+	 * more precisely, but result in longer loading times. Larger values result in shorter loading times, but will cull less
+	 * precisely.
+	 * 
+	 * A default shader is used if OpenGL ES 2.0 is enabled.
+	 * 
+	 * @param map A tile map's tile numbers, in the order [layer][row][column]
+	 * @param atlas The tile atlas to be used when drawing the map
+	 * @param tileWidth The width of the tiles, in pixels
+	 * @param tileHeight The height of the tiles, in pixels
+	 * @param unitsPerTileX The number of units per tile in the x direction
+	 * @param unitsPerTileY The number of units per tile in the y direction
+	 * @param blendedTiles Array containing tile numbers that require blending
+	 * @param tilesPerBlockX The width of each block to be drawn, in number of tiles
+	 * @param tilesPerBlockY The height of each block to be drawn, in number of tiles */
+	public TileMapRenderer (int[][][] map, TileAtlas atlas, int tileWidth, int tileHeight, float unitsPerTileX,
+		float unitsPerTileY, IntArray blendedTiles, int tilesPerBlockX, int tilesPerBlockY) {
+		init(map, atlas, tileWidth, tileHeight, unitsPerTileX, unitsPerTileY, blendedTiles, tilesPerBlockX, tilesPerBlockY, null);
+	}
+
+	/** A renderer for static tile maps backed with a Sprite Cache.
+	 * 
+	 * The tilesPerBlockX and tilesPerBlockY parameters will need to be adjusted for best performance. Smaller values will cull
+	 * more precisely, but result in longer loading times. Larger values result in shorter loading times, but will cull less
+	 * precisely.
+	 * 
+	 * @param map A tile map's tile numbers, in the order [layer][row][column]
+	 * @param atlas The tile atlas to be used when drawing the map
+	 * @param tileWidth The width of the tiles, in pixels
+	 * @param tileHeight The height of the tiles, in pixels
+	 * @param unitsPerTileX The number of units per tile in the x direction
+	 * @param unitsPerTileY The number of units per tile in the y direction
+	 * @param blendedTiles Array containing tile numbers that require blending
+	 * @param tilesPerBlockX The width of each block to be drawn, in number of tiles
+	 * @param tilesPerBlockY The height of each block to be drawn, in number of tiles
+	 * @param shader Shader to use for OpenGL ES 2.0, null uses a default shader. Ignored if using OpenGL ES 1.0. */
+	public TileMapRenderer (int[][][] map, TileAtlas atlas, int tileWidth, int tileHeight, float unitsPerTileX,
+		float unitsPerTileY, IntArray blendedTiles, int tilesPerBlockX, int tilesPerBlockY, ShaderProgram shader) {
+		init(map, atlas, tileWidth, tileHeight, unitsPerTileX, unitsPerTileY, blendedTiles, tilesPerBlockX, tilesPerBlockY, shader);
+	}
+
+	/** Initializer, used to avoid a "Constructor call must be the first statement in a constructor" syntax error when creating a
+	 * map from a TiledMap */
+	private void init (int[][][] map, TileAtlas atlas, int tileWidth, int tileHeight, float unitsPerTileX, float unitsPerTileY,
+		IntArray blendedTiles, int tilesPerBlockX, int tilesPerBlockY, ShaderProgram shader) {
+		this.atlas = atlas;
+		this.tileWidth = tileWidth;
+		this.tileHeight = tileHeight;
+		this.unitsPerTileX = unitsPerTileX;
+		this.unitsPerTileY = unitsPerTileY;
+
+		this.blendedTiles = blendedTiles;
+		this.tilesPerBlockX = tilesPerBlockX;
+		this.tilesPerBlockY = tilesPerBlockY;
+
+		unitsPerBlockX = unitsPerTileX * tilesPerBlockX;
+		unitsPerBlockY = unitsPerTileY * tilesPerBlockY;
+
+		isSimpleTileAtlas = atlas instanceof SimpleTileAtlas;
+
+		int layer, row, col;
+
+		allLayers = new int[map.length];
+
+		// Calculate maximum cache size and map height in pixels, fill allLayers array
+		int maxCacheSize = 0;
+		int maxHeight = 0;
+		int maxWidth = 0;
+		for (layer = 0; layer < map.length; layer++) {
+			allLayers[layer] = layer;
+			if (map[layer].length > maxHeight) maxHeight = map[layer].length;
+			for (row = 0; row < map[layer].length; row++) {
+				if (map[layer][row].length > maxWidth) maxWidth = map[layer][row].length;
+				for (col = 0; col < map[layer][row].length; col++)
+					if (map[layer][row][col] != 0) maxCacheSize++;
+			}
+		}
+		mapHeightUnits = (int)(maxHeight * unitsPerTileY);
+		mapWidthUnits = (int)(maxWidth * unitsPerTileX);
+
+		if (shader == null)
+			cache = new SpriteCache(maxCacheSize, false);
+		else
+			cache = new SpriteCache(maxCacheSize, shader, false);
+
+		normalCacheId = new int[map.length][][];
+		blendedCacheId = new int[map.length][][];
+		for (layer = 0; layer < map.length; layer++) {
+			normalCacheId[layer] = new int[(int)MathUtils.ceil((float)map[layer].length / tilesPerBlockY)][];
+			blendedCacheId[layer] = new int[(int)MathUtils.ceil((float)map[layer].length / tilesPerBlockY)][];
+			for (row = 0; row < normalCacheId[layer].length; row++) {
+				normalCacheId[layer][row] = new int[(int)MathUtils.ceil((float)map[layer][row].length / tilesPerBlockX)];
+				blendedCacheId[layer][row] = new int[(int)MathUtils.ceil((float)map[layer][row].length / tilesPerBlockX)];
+				for (col = 0; col < normalCacheId[layer][row].length; col++) {
+					if (isSimpleTileAtlas) {
+						// Everything considered blended
+						blendedCacheId[layer][row][col] = addBlock(map[layer], row, col, false);
+					} else {
+						normalCacheId[layer][row][col] = addBlock(map[layer], row, col, false);
+						blendedCacheId[layer][row][col] = addBlock(map[layer], row, col, true);
+					}
+				}
+			}
+		}
+	}
+
+	private static final int FLAG_FLIP_X = 0x80000000;
+	private static final int FLAG_FLIP_Y = 0x40000000;
+	private static final int FLAG_ROTATE = 0x20000000;		
+	private static final int MASK_CLEAR  = 0xE0000000;
+	
+	private int addBlock (int[][] layer, int blockRow, int blockCol, boolean blended) {
+		cache.beginCache();
+
+		int firstCol = blockCol * tilesPerBlockX;
+		int firstRow = blockRow * tilesPerBlockY;
+		int lastCol = firstCol + tilesPerBlockX;
+		int lastRow = firstRow + tilesPerBlockY;
+
+		float offsetX =  ((tileWidth - unitsPerTileX) / 2);
+		float offsetY =  ((tileHeight - unitsPerTileY) / 2);
+		
+		for (int row = firstRow; row < lastRow && row < layer.length; row++) {
+			for (int col = firstCol; col < lastCol && col < layer[row].length; col++) {
+				int tile = layer[row][col];
+				
+				boolean flipX = ((tile & FLAG_FLIP_X) != 0);
+				boolean flipY = ((tile & FLAG_FLIP_Y) != 0);
+				boolean rotate = ((tile & FLAG_ROTATE) != 0);
+				
+				tile = tile & ~MASK_CLEAR;
+				
+				if (tile != 0) {
+					if (blended == blendedTiles.contains(tile)) {
+						TextureRegion reg = atlas.getRegion(tile);
+						if (reg != null) {
+							
+							float x = col * unitsPerTileX - offsetX;
+							float y = (layer.length - row - 1) * unitsPerTileY - offsetY;
+							float width = reg.getRegionWidth();
+							float height = reg.getRegionHeight();							
+							float originX = width * 0.5f;
+							float originY = height * 0.5f;
+							float scaleX = unitsPerTileX / tileWidth;
+							float scaleY = unitsPerTileY / tileHeight;
+							float rotation = 0;
+							int sourceX = reg.getRegionX();
+							int sourceY = reg.getRegionY();
+							int sourceWidth = reg.getRegionWidth();
+							int sourceHeight = reg.getRegionHeight();
+							
+							if (rotate) {
+								if (flipX && flipY) {
+									rotation = -90;
+									sourceX += sourceWidth;
+									sourceWidth = -sourceWidth;									
+								}
+								else
+								if (flipX && !flipY) {
+									rotation = -90;
+								}
+								else
+								if (flipY && !flipX) {
+									rotation = +90;
+								}
+								else
+								if (!flipY && !flipX) {
+									rotation = -90;
+									sourceY += sourceHeight;
+									sourceHeight = -sourceHeight;									
+								}
+							} else {
+								if (flipX) {
+									sourceX += sourceWidth;
+									sourceWidth = -sourceWidth;
+								}
+								if (flipY) {
+									sourceY += sourceHeight;
+									sourceHeight = -sourceHeight;
+								}
+							}
+							
+							cache.add(
+								reg.getTexture(),
+								x,
+								y,
+								originX,
+								originY,
+								width,
+								height,
+								scaleX,
+								scaleY,
+								rotation,
+								sourceX,
+								sourceY,
+								sourceWidth,
+								sourceHeight,
+								false,
+								false
+							);
+						}
+					}
+				}
+			}
+		}
+
+		return cache.endCache();
+	}
+
+	/** Renders the entire map. Use this function only on very small maps or for debugging purposes. The size of the map is based on
+	 * the first layer and the first row's size. */
+	public void render () {
+		render(0, 0, (int)getMapWidthUnits(), (int)(getMapHeightUnits()));
+	}
+
+	/** Renders all layers between the given bounding box in map units. This is the same as calling
+	 * {@link TileMapRenderer#render(float, float, float, float, int[])} with all layers in the layers list. */
+	public void render (float x, float y, float width, float height) {
+		render(x, y, width, height, allLayers);
+	}
+
+	/** Renders specific layers in the given a camera
+	 * @param cam The camera to use */
+	public void render (OrthographicCamera cam) {
+		render(cam, allLayers);
+	}
+
+	Vector3 tmp = new Vector3();
+
+	/** Renders specific layers in the given a camera.
+	 * @param cam The camera to use
+	 * @param layers The list of layers to draw, 0 being the lowest layer. You will get an IndexOutOfBoundsException if a layer
+	 *           number is too high. */
+	public void render (OrthographicCamera cam, int[] layers) {
+		getProjectionMatrix().set(cam.combined);
+		tmp.set(0, 0, 0);
+		cam.unproject(tmp);
+		render(tmp.x, tmp.y, cam.viewportWidth * cam.zoom, cam.viewportHeight * cam.zoom, layers);
+	}
+
+	/** Sets the amount of overdraw in the X direction (in units). Use this if an actual tile width is greater than the tileWidth
+	 * specified in the constructor. Use the value actual_tile_width - tileWidth (from the constructor). */
+	public float overdrawX;
+
+	/** Sets the amount of overdraw in the Y direction (in units). Use this if an actual tile height is greater than the tileHeight
+	 * specified in the constructor. Use the value actual_tile_height - tileHeight (from the constructor). */
+	public float overdrawY;
+
+	private int initialRow, initialCol, currentRow, currentCol, lastRow, lastCol, currentLayer;
+
+	/** Renders specific layers between the given bounding box in map units.
+	 * @param x The x coordinate to start drawing
+	 * @param y the y coordinate to start drawing
+	 * @param width the width of the tiles to draw
+	 * @param height the width of the tiles to draw
+	 * @param layers The list of layers to draw, 0 being the lowest layer. You will get an IndexOutOfBoundsException if a layer
+	 *           number is too high. */
+	public void render (float x, float y, float width, float height, int[] layers) {
+		lastRow = (int)((mapHeightUnits - (y - height + overdrawY)) / (unitsPerBlockY));
+		initialRow = (int)((mapHeightUnits - (y - overdrawY)) / (unitsPerBlockY));
+		initialRow = (initialRow > 0) ? initialRow : 0; // Clamp initial Row > 0
+
+		lastCol = (int)((x + width + overdrawX) / (unitsPerBlockX));
+		initialCol = (int)((x - overdrawX) / (unitsPerBlockX));
+		initialCol = (initialCol > 0) ? initialCol : 0; // Clamp initial Col > 0
+
+		Gdx.gl.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
+
+		cache.begin();
+		if (isSimpleTileAtlas) {
+			// Without this special case the top left corner doesn't work properly on mutilayered maps
+			Gdx.gl.glEnable(GL10.GL_BLEND);
+			for (currentLayer = 0; currentLayer < layers.length; currentLayer++) {
+				for (currentRow = initialRow; currentRow <= lastRow && currentRow < getLayerHeightInBlocks(currentLayer); currentRow++) {
+					for (currentCol = initialCol; currentCol <= lastCol
+						&& currentCol < getLayerWidthInBlocks(currentLayer, currentRow); currentCol++) {
+						cache.draw(blendedCacheId[layers[currentLayer]][currentRow][currentCol]);
+					}
+				}
+			}
+		} else {
+			for (currentLayer = 0; currentLayer < layers.length; currentLayer++) {
+				for (currentRow = initialRow; currentRow <= lastRow && currentRow < getLayerHeightInBlocks(currentLayer); currentRow++) {
+					for (currentCol = initialCol; currentCol <= lastCol
+						&& currentCol < getLayerWidthInBlocks(currentLayer, currentRow); currentCol++) {
+						Gdx.gl.glDisable(GL10.GL_BLEND);
+						cache.draw(normalCacheId[layers[currentLayer]][currentRow][currentCol]);
+						Gdx.gl.glEnable(GL10.GL_BLEND);
+						cache.draw(blendedCacheId[layers[currentLayer]][currentRow][currentCol]);
+					}
+				}
+			}
+		}
+		cache.end();
+		Gdx.gl.glDisable(GL10.GL_BLEND);
+	}
+
+	private int getLayerWidthInBlocks (int layer, int row) {
+		int normalCacheWidth = 0;
+		if (normalCacheId != null && normalCacheId[layer] != null && normalCacheId[layer][row] != null) {
+			normalCacheWidth = normalCacheId[layer][row].length;
+		}
+
+		int blendedCacheWidth = 0;
+		if (blendedCacheId != null && blendedCacheId[layer] != null && blendedCacheId[layer][row] != null) {
+			blendedCacheWidth = blendedCacheId[layer][row].length;
+		}
+
+		return Math.max(normalCacheWidth, blendedCacheWidth);
+	}
+
+	private int getLayerHeightInBlocks (int layer) {
+		int normalCacheHeight = 0;
+		if (normalCacheId != null && normalCacheId[layer] != null) {
+			normalCacheHeight = normalCacheId[layer].length;
+		}
+
+		int blendedCacheHeight = 0;
+		if (blendedCacheId != null && blendedCacheId[layer] != null) {
+			blendedCacheHeight = blendedCacheId[layer].length;
+		}
+
+		return Math.max(normalCacheHeight, blendedCacheHeight);
+	}
+
+	public Matrix4 getProjectionMatrix () {
+		return cache.getProjectionMatrix();
+	}
+
+	public Matrix4 getTransformMatrix () {
+		return cache.getTransformMatrix();
+	}
+
+	/** Computes the Tiled Map row given a Y coordinate in units
+	 * @param worldY the Y coordinate in units */
+	public int getRow (int worldY) {
+		return (int)(worldY / unitsPerTileY);
+	}
+
+	/** Computes the Tiled Map column given an X coordinate in units
+	 * @param worldX the X coordinate in units */
+	public int getCol (int worldX) {
+		return (int)(worldX / unitsPerTileX);
+	}
+
+	/** Returns the initial drawn block row, for debugging purposes. Use this along with {@link TileMapRenderer#getLastRow()} to
+	 * compute the number of rows drawn in the last call to {@link TileMapRenderer#render(float, float, float, float, int[])}. */
+	public int getInitialRow () {
+		return initialRow;
+	}
+
+	/** Returns the initial drawn block column, for debugging purposes. Use this along with {@link TileMapRenderer#getLastCol()} to
+	 * compute the number of columns drawn in the last call to {@link TileMapRenderer#render(float, float, float, float, int[])}. */
+	public int getInitialCol () {
+		return initialCol;
+	}
+
+	/** Returns the final drawn block row, for debugging purposes. Use this along with {@link TileMapRenderer#getInitialRow()} to
+	 * compute the number of rows drawn in the last call to {@link TileMapRenderer#render(float, float, float, float, int[])}. */
+	public int getLastRow () {
+		return lastRow;
+	}
+
+	/** Returns the final drawn block column, for debugging purposes. Use this along with {@link TileMapRenderer#getInitialCol()} to
+	 * compute the number of columns drawn in the last call to {@link TileMapRenderer#render(float, float, float, float, int[])}. */
+	public int getLastCol () {
+		return lastCol;
+	}
+
+	public float getUnitsPerTileX () {
+		return unitsPerTileX;
+	}
+
+	public float getUnitsPerTileY () {
+		return unitsPerTileY;
+	}
+
+	public int getMapHeightUnits () {
+		return mapHeightUnits;
+	}
+
+	public int getMapWidthUnits () {
+		return mapWidthUnits;
+	}
+
+	private static int parseIntWithDefault (String string, int defaultValue) {
+		if (string == null) return defaultValue;
+		try {
+			return Integer.parseInt(string);
+		} catch (NumberFormatException e) {
+			return defaultValue;
+		}
+	}
+
+	/** Releases all resources held by this TiledMapRenderer. */
+	@Override
+	public void dispose () {
+		cache.dispose();
+	}
+
+	public TiledMap getMap () {
+		return map;
+	}
+
+	public TileAtlas getAtlas () {
+		return atlas;
+	}
+
+	private static IntArray createFromCSV (String values) {
+		IntArray list = new IntArray(false, (values.length() + 1) / 2);
+		StringTokenizer st = new StringTokenizer(values, ",");
+		while (st.hasMoreTokens()) {
+			list.add(Integer.parseInt(st.nextToken()));
+		}
+		list.shrink();
+		return list;
+	}
+}
diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TileSet.java b/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TileSet.java
new file mode 100644
index 0000000..60a84c1
--- /dev/null
+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TileSet.java
@@ -0,0 +1,41 @@
+/*******************************************************************************
+ * Copyright 2011 See AUTHORS file.
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the
+ * License. You may obtain a copy of the License at
+ * 
+ * http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS"
+ * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language
+ * governing permissions and limitations under the License.
+ ******************************************************************************/
+
+package com.badlogic.gdx.graphics.g2d.tiled;
+
+/** Contains a Tiled Map tile set
+ * @author David Fraska */
+public class TileSet {
+	public int firstgid;
+	public int tileWidth;
+	public int tileHeight;
+	public int margin = 0, spacing = 0;
+	public String imageName;
+	public String name;
+
+	/** Contains a Tiled Map tile set */
+	protected TileSet () {
+	}
+
+	/** Copy constructor
+	 * @param set The set to be copied */
+	protected TileSet (TileSet set) {
+		this.firstgid = set.firstgid;
+		this.tileWidth = set.tileWidth;
+		this.tileHeight = set.tileHeight;
+		this.margin = set.margin;
+		this.spacing = set.spacing;
+		this.imageName = set.imageName;
+		this.name = set.name;
+	}
+}
diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TiledLayer.java b/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TiledLayer.java
new file mode 100644
index 0000000..0fcc54d
--- /dev/null
+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TiledLayer.java
@@ -0,0 +1,42 @@
+/*******************************************************************************
+ * Copyright 2011 See AUTHORS file.
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/
+
+package com.badlogic.gdx.graphics.g2d.tiled;
+
+import java.util.HashMap;
+
+/** Contains Tiled map layer information
+ * @author David Fraska */
+public class TiledLayer {
+	public String name;
+
+	/** Contains the layer properties with a key of the property name. */
+	public HashMap<String, String> properties = new HashMap<String, String>(0);
+
+	// public final int width, height;
+
+	/** Contains the tile ids, addressed as [row][column]. */
+	public int[][] tiles;
+
+	public int getWidth () {
+		if (tiles[0] == null) return 0;
+		return tiles[0].length;
+	}
+
+	public int getHeight () {
+		return tiles.length;
+	}
+}
diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TiledLoader.java b/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TiledLoader.java
new file mode 100644
index 0000000..50325b4
--- /dev/null
+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TiledLoader.java
@@ -0,0 +1,541 @@
+/*******************************************************************************
+ * Copyright 2011 See AUTHORS file.
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the
+ * License. You may obtain a copy of the License at
+ * 
+ * http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS"
+ * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language
+ * governing permissions and limitations under the License.
+ ******************************************************************************/
+
+package com.badlogic.gdx.graphics.g2d.tiled;
+
+import java.io.ByteArrayInputStream;
+import java.io.IOException;
+import java.util.Stack;
+import java.util.StringTokenizer;
+import java.util.zip.DataFormatException;
+import java.util.zip.GZIPInputStream;
+import java.util.zip.Inflater;
+
+import com.badlogic.gdx.Gdx;
+import com.badlogic.gdx.files.FileHandle;
+import com.badlogic.gdx.utils.Base64Coder;
+import com.badlogic.gdx.utils.GdxRuntimeException;
+import com.badlogic.gdx.utils.XmlReader;
+
+/** Loads a Tiled Map from a tmx file
+ * @author David Fraska */
+public class TiledLoader {
+
+	/** Loads a <code>TiledMap</code> from a <code>String</code>.
+	 * @param tmxData The tmx file's content. */
+	public static TiledMap createMap (String tmxData) {
+		return createMap(null, tmxData);
+	}
+
+	/** Loads a Tiled Map from a tmx file
+	 * @param tmxFile the map's tmx file */
+	public static TiledMap createMap (FileHandle tmxFile) {
+		return createMap(tmxFile, null);
+	}
+
+	/** Loads a TiledMap from a tmx file.
+	 * @param tmxFile The tmx file. NULL to force load from <code>tmxData</code>.
+	 * @param tmxData The tmx file's content. NULL to force load from <code>tmxFile</code>. */
+	private static TiledMap createMap (FileHandle tmxFile, String tmxData) {
+		final TiledMap map;
+
+		map = new TiledMap();
+		map.tmxFile = tmxFile;
+
+		try {
+			XmlReader xmlReader = new XmlReader() {
+
+				Stack<String> currBranch = new Stack<String>();
+
+				boolean awaitingData = false;
+				TiledLayer currLayer;
+				int currLayerWidth = 0, currLayerHeight = 0;
+				TileSet currTileSet;
+				TiledObjectGroup currObjectGroup;
+				TiledObject currObject;
+				int currTile;
+
+				class Polyline {
+					String name;
+					String points;
+
+					public Polyline (String name) {
+						this.name = name;
+					}
+
+					public Polyline () {
+					}
+				}
+
+				Polyline polyline, polygon;
+
+				class Property {
+					String parentType, name, value;
+				}
+
+				Property currProperty;
+
+				String encoding, dataString, compression;
+				byte[] data;
+
+				int dataCounter = 0, row, col;
+
+				@Override
+				protected void open (String name) {
+					currBranch.push(name);
+
+					if ("layer".equals(name)) {
+						currLayer = new TiledLayer();
+						return;
+					}
+
+					if ("tileset".equals(name)) {
+						currTileSet = new TileSet();
+						return;
+					}
+
+					if ("data".equals(name)) {
+						dataString = ""; // clear the string for new data
+						awaitingData = true;
+						return;
+					}
+
+					if ("objectgroup".equals(name)) {
+						currObjectGroup = new TiledObjectGroup();
+						return;
+					}
+
+					if ("object".equals(name)) {
+						currObject = new TiledObject();
+						return;
+					}
+
+					if ("property".equals(name)) {
+						currProperty = new Property();
+						currProperty.parentType = currBranch.get(currBranch.size() - 3);
+						return;
+					}
+
+					if ("polyline".equals(name)) {
+						polyline = new Polyline("polyline");
+						return;
+					}
+
+					if ("polygon".equals(name)) {
+						polygon = new Polyline("polygon");
+						return;
+					}
+				}
+
+				@Override
+				protected void attribute (String name, String value) {
+					String element = currBranch.peek();
+
+					if ("layer".equals(element)) {
+						if ("width".equals(name)) {
+							currLayerWidth = Integer.parseInt(value);
+						} else if ("height".equals(name)) {
+							currLayerHeight = Integer.parseInt(value);
+						}
+
+						if (currLayerWidth != 0 && currLayerHeight != 0) {
+							currLayer.tiles = new int[currLayerHeight][currLayerWidth];
+						}
+						if ("name".equals(name)) {
+							currLayer.name = value;
+						}
+						return;
+					}
+
+					if ("tileset".equals(element)) {
+						if ("firstgid".equals(name)) {
+							currTileSet.firstgid = Integer.parseInt(value);
+							return;
+						}
+						if ("tilewidth".equals(name)) {
+							currTileSet.tileWidth = Integer.parseInt(value);
+							return;
+						}
+						if ("tileheight".equals(name)) {
+							currTileSet.tileHeight = Integer.parseInt(value);
+							return;
+						}
+						if ("name".equals(name)) {
+							currTileSet.name = value;
+							return;
+						}
+						if ("spacing".equals(name)) {
+							currTileSet.spacing = Integer.parseInt(value);
+							return;
+						}
+						if ("margin".equals(name)) {
+							currTileSet.margin = Integer.parseInt(value);
+							return;
+						}
+						return;
+					}
+
+					if ("image".equals(element)) {
+						if ("source".equals(name)) {
+							currTileSet.imageName = value;
+							return;
+						}
+						return;
+					}
+
+					if ("data".equals(element)) {
+						if ("encoding".equals(name)) {
+							encoding = value;
+							return;
+						}
+						if ("compression".equals(name)) {
+							compression = value;
+							return;
+						}
+						return;
+					}
+
+					if ("objectgroup".equals(element)) {
+						if ("name".equals(name)) {
+							currObjectGroup.name = value;
+							return;
+						}
+						if ("height".equals(name)) {
+							currObjectGroup.height = Integer.parseInt(value);
+							return;
+						}
+						if ("width".equals(name)) {
+							currObjectGroup.width = Integer.parseInt(value);
+							return;
+						}
+						return;
+					}
+
+					if ("object".equals(element)) {
+						if ("name".equals(name)) {
+							currObject.name = value;
+							return;
+						}
+						if ("type".equals(name)) {
+							currObject.type = value;
+							return;
+						}
+						if ("x".equals(name)) {
+							currObject.x = Integer.parseInt(value);
+							return;
+						}
+						if ("y".equals(name)) {
+							currObject.y = Integer.parseInt(value);
+							return;
+						}
+						if ("width".equals(name)) {
+							currObject.width = Integer.parseInt(value);
+							return;
+						}
+						if ("height".equals(name)) {
+							currObject.height = Integer.parseInt(value);
+							return;
+						}
+						if ("gid".equals(name)) {
+							currObject.gid = Integer.parseInt(value);
+							return;
+						}
+						return;
+					}
+
+					if ("map".equals(element)) {
+						if ("orientation".equals(name)) {
+							map.orientation = value;
+							return;
+						}
+						if ("width".equals(name)) {
+							map.width = Integer.parseInt(value);
+							return;
+						}
+						if ("height".equals(name)) {
+							map.height = Integer.parseInt(value);
+							return;
+						}
+						if ("tilewidth".equals(name)) {
+							map.tileWidth = Integer.parseInt(value);
+							return;
+						}
+						if ("tileheight".equals(name)) {
+							map.tileHeight = Integer.parseInt(value);
+							return;
+						}
+						return;
+					}
+
+					if ("tile".equals(element)) {
+						if (awaitingData) { // Actually getting tile data
+							if ("gid".equals(name)) {
+								col = dataCounter % currLayerWidth;
+								row = dataCounter / currLayerWidth;
+								if (row < currLayerHeight) {
+									currLayer.tiles[row][col] = Integer.parseInt(value);
+								} else {
+									Gdx.app.log("TiledLoader", "Warning: extra XML gid values ignored! Your map is likely corrupt!");
+								}
+								dataCounter++;
+							}
+						} else { // Not getting tile data, must be a tile Id (for properties)
+							if ("id".equals(name)) {
+								currTile = Integer.parseInt(value);
+							}
+						}
+						return;
+					}
+
+					if ("property".equals(element)) {
+						if ("name".equals(name)) {
+							currProperty.name = value;
+							return;
+						}
+						if ("value".equals(name)) {
+							currProperty.value = value;
+							return;
+						}
+						return;
+					}
+
+					if ("polyline".equals(element)) {
+						if ("points".equals(name)) {
+							polyline.points = value;
+							return;
+						}
+						return;
+					}
+
+					if ("polygon".equals(element)) {
+						if ("points".equals(name)) {
+							polygon.points = value;
+							return;
+						}
+						return;
+					}
+				}
+
+				@Override
+				protected void text (String text) {
+					if (awaitingData) {
+						dataString = dataString.concat(text);
+					}
+				}
+
+				@Override
+				protected void close () {
+					String element = currBranch.pop();
+
+					if ("layer".equals(element)) {
+						map.layers.add(currLayer);
+						currLayer = null;
+						return;
+					}
+
+					if ("tileset".equals(element)) {
+						map.tileSets.add(currTileSet);
+						currTileSet = null;
+						return;
+					}
+
+					if ("object".equals(element)) {
+						currObjectGroup.objects.add(currObject);
+						currObject = null;
+						return;
+					}
+
+					if ("objectgroup".equals(element)) {
+						map.objectGroups.add(currObjectGroup);
+						currObjectGroup = null;
+						return;
+					}
+
+					if ("property".equals(element)) {
+						putProperty(currProperty);
+						currProperty = null;
+						return;
+					}
+
+					if ("polyline".equals(element)) {
+						putPolyLine(polyline);
+						polyline = null;
+						return;
+					}
+
+					if ("polygon".equals(element)) {
+						putPolyLine(polygon);
+						polygon = null;
+						return;
+					}
+
+					if ("data".equals(element)) {
+
+						// decode and uncompress the data
+						if ("base64".equals(encoding)) {
+							if (dataString == null | "".equals(dataString.trim())) return;
+
+							data = Base64Coder.decode(dataString.trim());
+
+							if ("gzip".equals(compression)) {
+								unGZip();
+							} else if ("zlib".equals(compression)) {
+								unZlib();
+							} else if (compression == null) {
+								arrangeData();
+							}
+
+						} else if ("csv".equals(encoding) && compression == null) {
+							fromCSV();
+
+						} else if (encoding == null && compression == null) {
+							// startElement() handles most of this
+							dataCounter = 0;// reset counter in case another layer comes through
+						} else {
+							throw new GdxRuntimeException("Unsupported encoding and/or compression format");
+						}
+
+						awaitingData = false;
+						return;
+					}
+
+					if ("property".equals(element)) {
+						putProperty(currProperty);
+						currProperty = null;
+					}
+				}
+
+				private void putPolyLine (Polyline polyLine) {
+					if (polyLine == null) {
+						return;
+					}
+
+					if ("polyline".equals(polyLine.name)) {
+						currObject.polyline = polyLine.points;
+						return;
+					}
+
+					if ("polygon".equals(polyLine.name)) {
+						currObject.polygon = polyLine.points;
+						return;
+					}
+
+					return;
+				}
+
+				private void putProperty (Property property) {
+					if ("tile".equals(property.parentType)) {
+						map.setTileProperty(currTile + currTileSet.firstgid, property.name, property.value);
+						return;
+					}
+
+					if ("map".equals(property.parentType)) {
+						map.properties.put(property.name, property.value);
+						return;
+					}
+
+					if ("layer".equals(property.parentType)) {
+						currLayer.properties.put(property.name, property.value);
+						return;
+					}
+
+					if ("objectgroup".equals(property.parentType)) {
+						currObjectGroup.properties.put(property.name, property.value);
+						return;
+					}
+
+					if ("object".equals(property.parentType)) {
+						currObject.properties.put(property.name, property.value);
+						return;
+					}
+				}
+
+				private void fromCSV () {
+					StringTokenizer st = new StringTokenizer(dataString.trim(), ",");
+					for (int row = 0; row < currLayerHeight; row++) {
+						for (int col = 0; col < currLayerWidth; col++) {
+							currLayer.tiles[row][col] = (int) Long.parseLong(st.nextToken().trim());
+						}
+					}
+				}
+
+				private void arrangeData () {
+					int byteCounter = 0;
+					for (int row = 0; row < currLayerHeight; row++) {
+						for (int col = 0; col < currLayerWidth; col++) {
+							currLayer.tiles[row][col] = unsignedByteToInt(data[byteCounter++])
+								| unsignedByteToInt(data[byteCounter++]) << 8 | unsignedByteToInt(data[byteCounter++]) << 16
+								| unsignedByteToInt(data[byteCounter++]) << 24;
+						}
+					}
+				}
+
+				private void unZlib () {
+					Inflater zlib = new Inflater();
+					byte[] readTemp = new byte[4];
+
+					zlib.setInput(data, 0, data.length);
+
+					for (int row = 0; row < currLayerHeight; row++) {
+						for (int col = 0; col < currLayerWidth; col++) {
+							try {
+								zlib.inflate(readTemp, 0, 4);
+								currLayer.tiles[row][col] = unsignedByteToInt(readTemp[0]) | unsignedByteToInt(readTemp[1]) << 8
+									| unsignedByteToInt(readTemp[2]) << 16 | unsignedByteToInt(readTemp[3]) << 24;
+							} catch (DataFormatException e) {
+								throw new GdxRuntimeException("Error Reading TMX Layer Data.", e);
+							}
+						}
+					}
+				}
+
+				private void unGZip () {
+					GZIPInputStream GZIS = null;
+					try {
+						GZIS = new GZIPInputStream(new ByteArrayInputStream(data), data.length);
+					} catch (IOException e) {
+						throw new GdxRuntimeException("Error Reading TMX Layer Data - IOException: " + e.getMessage());
+					}
+
+					// Read the GZIS data into an array, 4 bytes = 1 GID
+					byte[] readTemp = new byte[4];
+					for (int row = 0; row < currLayerHeight; row++) {
+						for (int col = 0; col < currLayerWidth; col++) {
+							try {
+								GZIS.read(readTemp, 0, 4);
+								currLayer.tiles[row][col] = unsignedByteToInt(readTemp[0]) | unsignedByteToInt(readTemp[1]) << 8
+									| unsignedByteToInt(readTemp[2]) << 16 | unsignedByteToInt(readTemp[3]) << 24;
+							} catch (IOException e) {
+								throw new GdxRuntimeException("Error Reading TMX Layer Data.", e);
+							}
+						}
+					}
+				}
+			};
+			// Is it a file?
+			if (tmxFile != null) {
+				xmlReader.parse(tmxFile);
+			} else {
+				xmlReader.parse(tmxData);
+			}
+		} catch (IOException e) {
+			throw new GdxRuntimeException("Error Parsing TMX file", e);
+		}
+
+		return map;
+	}
+
+	static int unsignedByteToInt (byte b) {
+		return (int)b & 0xFF;
+	}
+}
diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TiledMap.java b/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TiledMap.java
new file mode 100644
index 0000000..c398346
--- /dev/null
+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TiledMap.java
@@ -0,0 +1,76 @@
+/*******************************************************************************
+ * Copyright 2011 See AUTHORS file.
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/
+
+package com.badlogic.gdx.graphics.g2d.tiled;
+
+import java.util.ArrayList;
+import java.util.HashMap;
+
+import com.badlogic.gdx.files.FileHandle;
+
+/** Contains information from a Tiled Map. Use {@link TiledLoader#createMap(FileHandle)} to fill it.
+ * @author David Fraska */
+public class TiledMap {
+	public ArrayList<TiledLayer> layers = new ArrayList<TiledLayer>(4);
+	public ArrayList<TiledObjectGroup> objectGroups = new ArrayList<TiledObjectGroup>(1);
+	public ArrayList<TileSet> tileSets = new ArrayList<TileSet>(5);
+
+	/** Stores the map properties with a key of the property name. */
+	public HashMap<String, String> properties = new HashMap<String, String>(2);
+	private ArrayList<TileProperty> tileProperties = new ArrayList<TileProperty>(0);
+
+	public FileHandle tmxFile;
+	public String orientation;
+	public int width, height, tileWidth, tileHeight;
+
+	/** Sets a tile's property. Typically only called by {@link TiledLoader#createMap(FileHandle)}
+	 * @param id The tile's id
+	 * @param name The property name
+	 * @param value The property value */
+	public void setTileProperty (int id, String name, String value) {
+		for (TileProperty tp : tileProperties) {
+			if (tp.id == id) {
+				tp.propertyMap.put(name, value);
+				return;
+			}
+		}
+
+		// no TileProperty found with the correct id, add a new one
+		TileProperty tempProperty = new TileProperty();
+		tempProperty.id = id;
+		tempProperty.propertyMap.put(name, value);
+		tileProperties.add(tempProperty);
+	}
+
+	/** Gets a tile's property.
+	 * @param id The tile's id
+	 * @param name The property name
+	 * @return The property value */
+	public String getTileProperty (int id, String name) {
+		for (TileProperty tp : tileProperties) {
+			if (tp.id == id) {
+				return tp.propertyMap.get(name);
+			}
+		}
+
+		return null;
+	}
+
+	class TileProperty {
+		int id;
+		HashMap<String, String> propertyMap = new HashMap<String, String>();
+	}
+}
diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TiledObject.java b/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TiledObject.java
new file mode 100644
index 0000000..ceff95d
--- /dev/null
+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TiledObject.java
@@ -0,0 +1,31 @@
+/*******************************************************************************
+ * Copyright 2011 See AUTHORS file.
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/
+
+package com.badlogic.gdx.graphics.g2d.tiled;
+
+import java.util.HashMap;
+
+/** Contains a Tiled map object
+ * @author David Fraska */
+public class TiledObject {
+	public String name, type;
+	public int x, y, width = 0, height = 0, gid = 0;
+
+	/** Contains the object properties with a key of the property name. */
+	public HashMap<String, String> properties = new HashMap<String, String>();
+
+	public String polyline, polygon;
+}
diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TiledObjectGroup.java b/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TiledObjectGroup.java
new file mode 100644
index 0000000..f5b82b1
--- /dev/null
+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TiledObjectGroup.java
@@ -0,0 +1,32 @@
+/*******************************************************************************
+ * Copyright 2011 See AUTHORS file.
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/
+
+package com.badlogic.gdx.graphics.g2d.tiled;
+
+import java.util.ArrayList;
+import java.util.HashMap;
+
+/** Contains a Tiled map object group/layer
+ * @author David Fraska */
+public class TiledObjectGroup {
+	public int width, height;
+	public String name;
+
+	/** Contains the object group properties with a key of the property name. */
+	public HashMap<String, String> properties = new HashMap<String, String>();
+
+	public ArrayList<TiledObject> objects = new ArrayList<TiledObject>();
+}
diff --git a/gdx/src/com/badlogic/gdx/graphics/glutils/ETC1.java b/gdx/src/com/badlogic/gdx/graphics/glutils/ETC1.java
index 492441a..6b8880e 100644
--- a/gdx/src/com/badlogic/gdx/graphics/glutils/ETC1.java
+++ b/gdx/src/com/badlogic/gdx/graphics/glutils/ETC1.java
@@ -23,11 +23,9 @@ import java.nio.ByteBuffer;
 import java.util.zip.GZIPInputStream;
 import java.util.zip.GZIPOutputStream;
 
-import com.badlogic.gdx.Gdx;
 import com.badlogic.gdx.files.FileHandle;
 import com.badlogic.gdx.graphics.Pixmap;
 import com.badlogic.gdx.graphics.Pixmap.Format;
-import com.badlogic.gdx.math.MathUtils;
 import com.badlogic.gdx.utils.BufferUtils;
 import com.badlogic.gdx.utils.Disposable;
 import com.badlogic.gdx.utils.GdxRuntimeException;
@@ -56,7 +54,6 @@ public class ETC1 {
 			this.height = height;
 			this.compressedData = compressedData;
 			this.dataOffset = dataOffset;
-			checkNPOT();
 		}
 
 		public ETC1Data (FileHandle pkmFile) {
@@ -85,13 +82,6 @@ public class ETC1 {
 			height = getHeightPKM(compressedData, 0);
 			dataOffset = PKM_HEADER_SIZE;
 			compressedData.position(dataOffset);
-			checkNPOT();
-		}
-		
-		private void checkNPOT() {
-			if(!MathUtils.isPowerOfTwo(width) || !MathUtils.isPowerOfTwo(height)) {
-				Gdx.app.debug("ETC1Data", "warning: non-power-of-two ETC1 textures may crash the driver of PowerVR GPUs");
-			}
 		}
 
 		/** @return whether this ETC1Data has a PKM header */
diff --git a/gdx/src/com/badlogic/gdx/graphics/glutils/FrameBuffer.java b/gdx/src/com/badlogic/gdx/graphics/glutils/FrameBuffer.java
index 00b0044..0b5bc7f 100644
--- a/gdx/src/com/badlogic/gdx/graphics/glutils/FrameBuffer.java
+++ b/gdx/src/com/badlogic/gdx/graphics/glutils/FrameBuffer.java
@@ -119,7 +119,7 @@ public class FrameBuffer implements Disposable {
 		   if (Gdx.app.getType() == ApplicationType.iOS) {
 		     IntBuffer intbuf = ByteBuffer.allocateDirect(16 * Integer.SIZE / 8).order(ByteOrder.nativeOrder()).asIntBuffer();
 		     gl.glGetIntegerv(GL20.GL_FRAMEBUFFER_BINDING, intbuf);
-		     defaultFramebufferHandle = intbuf.get(0);
+		     defaultFramebufferHandle = intbuf.get();
 		   }
 		   else {
 		     defaultFramebufferHandle = 0;
diff --git a/gdx/src/com/badlogic/gdx/graphics/glutils/ShaderProgram.java b/gdx/src/com/badlogic/gdx/graphics/glutils/ShaderProgram.java
index 8a91c61..9403f88 100644
--- a/gdx/src/com/badlogic/gdx/graphics/glutils/ShaderProgram.java
+++ b/gdx/src/com/badlogic/gdx/graphics/glutils/ShaderProgram.java
@@ -99,9 +99,6 @@ public class ShaderProgram implements Disposable {
 	/** uniform types **/
 	private final ObjectIntMap<String> uniformTypes = new ObjectIntMap<String>();
 
-	/** uniform sizes **/
-	private final ObjectIntMap<String> uniformSizes = new ObjectIntMap<String>();
-
 	/** uniform names **/
 	private String[] uniformNames;
 
@@ -111,9 +108,6 @@ public class ShaderProgram implements Disposable {
 	/** attribute types **/
 	private final ObjectIntMap<String> attributeTypes = new ObjectIntMap<String>();
 
-	/** attribute sizes **/
-	private final ObjectIntMap<String> attributeSizes = new ObjectIntMap<String>();
-
 	/** attribute names **/
 	private String[] attributeNames;
 
@@ -835,13 +829,12 @@ public class ShaderProgram implements Disposable {
 
 		for (int i = 0; i < numUniforms; i++) {
 			params.clear();
-			params.put(0, 1);
+			params.put(0, 256);
 			type.clear();
 			String name = Gdx.gl20.glGetActiveUniform(program, i, params, type);
 			int location = Gdx.gl20.glGetUniformLocation(program, name);
 			uniforms.put(name, location);
 			uniformTypes.put(name, type.get(0));
-			uniformSizes.put(name, params.get(0));
 			uniformNames[i] = name;
 		}
 	}
@@ -855,13 +848,12 @@ public class ShaderProgram implements Disposable {
 
 		for (int i = 0; i < numAttributes; i++) {
 			params.clear();
-			params.put(0, 1);
+			params.put(0, 256);
 			type.clear();
 			String name = Gdx.gl20.glGetActiveAttrib(program, i, params, type);
 			int location = Gdx.gl20.glGetAttribLocation(program, name);
 			attributes.put(name, location);
 			attributeTypes.put(name, type.get(0));
-			attributeSizes.put(name, params.get(0));
 			attributeNames[i] = name;
 		}
 	}
@@ -892,16 +884,6 @@ public class ShaderProgram implements Disposable {
 			return location;
 	}
 
-	/** @param name the name of the attribute
-	 * @return the size of the attribute or 0. */
-	public int getAttributeSize (String name) {
-		int size = attributeSizes.get(name, -1);
-		if (size == -1)
-			return 0;
-		else
-			return size;
-	}
-
 	/** @param name the name of the uniform
 	 * @return whether the uniform is available in the shader */
 	public boolean hasUniform (String name) {
@@ -928,16 +910,6 @@ public class ShaderProgram implements Disposable {
 			return location;
 	}
 
-	/** @param name the name of the uniform
-	 * @return the size of the uniform or 0. */
-	public int getUniformSize (String name) {
-		int size = uniformSizes.get(name, -1);
-		if (size == -1)
-			return 0;
-		else
-			return size;
-	}
-
 	/** @return the attributes */
 	public String[] getAttributes () {
 		return attributeNames;
diff --git a/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java b/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java
index 0f7e69c..047d023 100644
--- a/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java
+++ b/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java
@@ -20,7 +20,6 @@ import com.badlogic.gdx.Gdx;
 import com.badlogic.gdx.graphics.Camera;
 import com.badlogic.gdx.graphics.Color;
 import com.badlogic.gdx.graphics.GL10;
-import com.badlogic.gdx.graphics.glutils.ShapeRenderer.ShapeType;
 import com.badlogic.gdx.math.MathUtils;
 import com.badlogic.gdx.math.Matrix4;
 import com.badlogic.gdx.utils.GdxRuntimeException;
@@ -44,14 +43,12 @@ import com.badlogic.gdx.utils.GdxRuntimeException;
  * shapeRenderer.begin(ShapeType.Line);
  * shapeRenderer.color(1, 1, 0, 1);
  * shapeRenderer.line(x, y, x2, y2);
- * shapeRenderer.rect(x, y, width, height);
- * shapeRenderer.circle(x, y, radius);
+ * shapeRenderer.line(x3, y3, x4, y4);
  * shapeRenderer.end();
  * 
- * shapeRenderer.begin(ShapeType.Filled);
+ * shapeRenderer.begin(ShapeType.Box);
  * shapeRenderer.color(0, 1, 0, 1);
- * shapeRenderer.rect(x, y, width, height);
- * shapeRenderer.circle(x, y, radius);
+ * shapeRenderer.box(x, y, z, width, height, depth);
  * shapeRenderer.end();
  * }
  * </pre>
@@ -61,7 +58,7 @@ import com.badlogic.gdx.utils.GdxRuntimeException;
  * rectangle around its center using the z-axis as the rotation axis and placing it's center at (20, 12, 2):
  * 
  * <pre>
- * shapeRenderer.begin(ShapeType.Line);
+ * shapeRenderer.begin(ShapeType.Rectangle);
  * shapeRenderer.identity();
  * shapeRenderer.translate(20, 12, 2);
  * shapeRenderer.rotate(0, 0, 1, 90);
@@ -75,14 +72,24 @@ import com.badlogic.gdx.utils.GdxRuntimeException;
  * The projection and transformation matrices are a state of the ShapeRenderer, just like the color and will be applied to all
  * shapes until they are changed.
  * 
- * @author mzechner, stbachmann */
+ * @author mzechner */
 public class ShapeRenderer {
 	/** Shape types to be used with {@link #begin(ShapeType)}.
-	 * @author mzechner, stbachmann */
+	 * @author mzechner */
 	public enum ShapeType {
-		Point(GL10.GL_POINTS),
-		Line(GL10.GL_LINES),
-		Filled(GL10.GL_TRIANGLES);
+		Point(GL10.GL_POINTS), //
+		Line(GL10.GL_LINES), //
+		Rectangle(GL10.GL_LINES), //
+		FilledRectangle(GL10.GL_TRIANGLES), //
+		Box(GL10.GL_LINES), //
+		Circle(GL10.GL_LINES), //
+		FilledCircle(GL10.GL_TRIANGLES), //
+		Triangle(GL10.GL_LINES), //
+		FilledTriangle(GL10.GL_TRIANGLES), //
+		Cone(GL10.GL_LINES), //
+		FilledCone(GL10.GL_TRIANGLES), //
+		Curve(GL10.GL_LINES), //
+		;
 
 		private final int glType;
 
@@ -94,7 +101,7 @@ public class ShapeRenderer {
 			return glType;
 		}
 	}
-	
+
 	ImmediateModeRenderer renderer;
 	boolean matrixDirty = false;
 	Matrix4 projView = new Matrix4();
@@ -116,7 +123,7 @@ public class ShapeRenderer {
 		projView.setToOrtho2D(0, 0, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
 		matrixDirty = true;
 	}
-	
+
 	/** Sets the {@link Color} to be used by shapes.
 	 * @param color */
 	public void setColor (Color color) {
@@ -177,7 +184,7 @@ public class ShapeRenderer {
 		transform.scale(scaleX, scaleY, scaleZ);
 		matrixDirty = true;
 	}
-	
+
 	/** Starts a new batch of shapes. All shapes within the batch have to have the type specified. E.g. if {@link ShapeType#Point}
 	 * is specified, only call #point().
 	 * 
@@ -196,12 +203,12 @@ public class ShapeRenderer {
 		}
 		renderer.begin(combined, currType.getGlType());
 	}
-	
+
 	/** Draws a point. The {@link ShapeType} passed to begin has to be {@link ShapeType#Point}.
 	 * @param x
 	 * @param y
 	 * @param z */
-	public void point(float x, float y, float z){
+	public void point (float x, float y, float z) {
 		if (currType != ShapeType.Point) throw new GdxRuntimeException("Must call begin(ShapeType.Point)");
 		checkDirty();
 		checkFlush(1);
@@ -216,7 +223,7 @@ public class ShapeRenderer {
 	 * @param x2
 	 * @param y2
 	 * @param z2 */
-	public void line(float x, float y, float z, float x2, float y2, float z2){
+	public void line (float x, float y, float z, float x2, float y2, float z2) {
 		if (currType != ShapeType.Line) throw new GdxRuntimeException("Must call begin(ShapeType.Line)");
 		checkDirty();
 		checkFlush(2);
@@ -225,13 +232,13 @@ public class ShapeRenderer {
 		renderer.color(color.r, color.g, color.b, color.a);
 		renderer.vertex(x2, y2, z2);
 	}
-	
+
 	/** Draws a line in the x/y plane. The {@link ShapeType} passed to begin has to be {@link ShapeType#Line}.
 	 * @param x
 	 * @param y
 	 * @param x2
 	 * @param y2 */
-	public void line(float x, float y, float x2, float y2){
+	public void line (float x, float y, float x2, float y2) {
 		if (currType != ShapeType.Line) throw new GdxRuntimeException("Must call begin(ShapeType.Line)");
 		checkDirty();
 		checkFlush(2);
@@ -240,9 +247,24 @@ public class ShapeRenderer {
 		renderer.color(color.r, color.g, color.b, color.a);
 		renderer.vertex(x2, y2, 0);
 	}
-	
-	public void curve(float x1, float y1, float cx1, float cy1, float cx2, float cy2, float x2, float y2, int segments){
-		if (currType != ShapeType.Line) throw new GdxRuntimeException("Must call begin(ShapeType.Line)");
+
+	/** Calls {@link #curve(float, float, float, float, float, float, float, float, int)} by estimating the number of segments
+	 * needed for a smooth curve. */
+	public void curve (float x1, float y1, float cx1, float cy1, float cx2, float cy2, float x2, float y2) {
+		float dx1 = cx1 - x1;
+		float dy1 = cy1 - y1;
+		float dx2 = cx2 - cx1;
+		float dy2 = cy2 - cy1;
+		float dx3 = x2 - cx2;
+		float dy3 = y2 - cy2;
+		float length = (float)Math.sqrt(dx1 * dx1 + dy1 * dy1) + (float)Math.sqrt(dx2 * dx2 + dy2 * dy2)
+			+ (float)Math.sqrt(dx3 * dx3 + dy3 * dy3);
+		curve(x1, y1, cx1, cy1, cx2, cy2, x2, y2, 4 * (int)Math.cbrt(length));
+	}
+
+	/** Draws a curve in the x/y plane. The {@link ShapeType} passed to begin has to be {@link ShapeType#Curve}. */
+	public void curve (float x1, float y1, float cx1, float cy1, float cx2, float cy2, float x2, float y2, int segments) {
+		if (currType != ShapeType.Curve) throw new GdxRuntimeException("Must call begin(ShapeType.Curve)");
 		checkDirty();
 		checkFlush(segments * 2 + 2);
 
@@ -291,159 +313,101 @@ public class ShapeRenderer {
 		renderer.color(color.r, color.g, color.b, color.a);
 		renderer.vertex(x2, y2, 0);
 	}
-	
-	public void triangle(float x1, float y1, float x2, float y2, float x3, float y3){
-		if (currType != ShapeType.Filled && currType != ShapeType.Line) 
-			throw new GdxRuntimeException("Must call begin(ShapeType.Filled) or begin(ShapeType.Line)");
+
+	/** Draws a rectangle in the x/y plane. The x and y coordinate specify the bottom left corner of the rectangle. The
+	 * {@link ShapeType} passed to begin has to be {@link ShapeType#Rectangle}.
+	 * @param x
+	 * @param y
+	 * @param width
+	 * @param height */
+	public void rect (float x, float y, float width, float height) {
+		if (currType != ShapeType.Rectangle) throw new GdxRuntimeException("Must call begin(ShapeType.Rectangle)");
 		checkDirty();
-		checkFlush(6);
-		if(currType == ShapeType.Line){
-			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x1, y1, 0);
-			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x2, y2, 0);
-	
-			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x2, y2, 0);
-			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x3, y3, 0);
-	
-			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x3, y3, 0);
-			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x1, y1, 0);
-		}
-		else {
-			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x1, y1, 0);
-			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x2, y2, 0);
-			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x3, y3, 0);
-		}
+		checkFlush(8);
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x, y, 0);
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x + width, y, 0);
+
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x + width, y, 0);
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x + width, y + height, 0);
+
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x + width, y + height, 0);
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x, y + height, 0);
+
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x, y + height, 0);
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x, y, 0);
 	}
-	
-	/** Draws a rectangle in the x/y plane. The x and y coordinate specify the bottom left corner of the rectangle. The
-	 * {@link ShapeType} passed to begin has to be {@link ShapeType#Filled} or  {@link ShapeType#Line}.
+
+	/** Draws a filled rectangle in the x/y plane. The x and y coordinate specify the bottom left corner of the rectangle. The
+	 * {@link ShapeType} passed to begin has to be {@link ShapeType#FilledRectangle}.
 	 * @param x
 	 * @param y
 	 * @param width
 	 * @param height */
-	public void rect(float x, float y, float width, float height){
-		if (currType != ShapeType.Filled && currType != ShapeType.Line) 
-			throw new GdxRuntimeException("Must call begin(ShapeType.Filled) or begin(ShapeType.Line)");
-		
+	public void filledRect (float x, float y, float width, float height) {
+		if (currType != ShapeType.FilledRectangle) throw new GdxRuntimeException("Must call begin(ShapeType.FilledRectangle)");
 		checkDirty();
 		checkFlush(8);
-		
-		if(currType == ShapeType.Line){
-			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x, y, 0);
-			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x + width, y, 0);
-	
-			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x + width, y, 0);
-			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x + width, y + height, 0);
-	
-			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x + width, y + height, 0);
-			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x, y + height, 0);
-	
-			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x, y + height, 0);
-			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x, y, 0);
-		}
-		else {
-			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x, y, 0);
-			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x + width, y, 0);
-			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x + width, y + height, 0);
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x, y, 0);
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x + width, y, 0);
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x + width, y + height, 0);
 
-			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x + width, y + height, 0);
-			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x, y + height, 0);
-			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x, y, 0);
-		}
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x + width, y + height, 0);
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x, y + height, 0);
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x, y, 0);
 	}
-	
-	
-	/** Draws a rectangle in the x/y plane. The x and y coordinate specify the bottom left corner of the rectangle. The
-	 * {@link ShapeType} passed to begin has to be {@link ShapeType#Filled} or  {@link ShapeType#Line}.
+
+	/** Draws a filled rectangle in the x/y plane. The x and y coordinate specify the bottom left corner of the rectangle. The
+	 * {@link ShapeType} passed to begin has to be {@link ShapeType#FilledRectangle}. The 4 color parameters specify the color for
+	 * the bottom left, bottom right, top right and top left corner of the rectangle, allowing you to create gradients.
 	 * @param x
 	 * @param y
 	 * @param width
-	 * @param height 
-	 * @param col1 The color at (x, y) 
-	 * @param col2 The color at (x + width, y)
-	 * @param col3 The color at (x + width, y + height)
-	 * @param col4 The color at (x, y + height) */
-	public void rect(float x, float y, float width, float height, Color col1, Color col2, Color col3, Color col4){
-		if (currType != ShapeType.Filled && currType != ShapeType.Line) 
-			throw new GdxRuntimeException("Must call begin(ShapeType.Filled) or begin(ShapeType.Line)");
-		
+	 * @param height */
+	public void filledRect (float x, float y, float width, float height, Color c1, Color c2, Color c3, Color c4) {
+		if (currType != ShapeType.FilledRectangle) throw new GdxRuntimeException("Must call begin(ShapeType.FilledRectangle)");
 		checkDirty();
 		checkFlush(8);
-		
-		if(currType == ShapeType.Line){
-			renderer.color(col1.r, col1.g, col1.b, col1.a);
-			renderer.vertex(x, y, 0);
-			renderer.color(col2.r, col2.g, col2.b, col2.a);
-			renderer.vertex(x + width, y, 0);
-	
-			renderer.color(col2.r, col2.g, col2.b, col2.a);
-			renderer.vertex(x + width, y, 0);
-			renderer.color(col3.r, col3.g, col3.b, col3.a);
-			renderer.vertex(x + width, y + height, 0);
-	
-			renderer.color(col3.r, col3.g, col3.b, col3.a);
-			renderer.vertex(x + width, y + height, 0);
-			renderer.color(col4.r, col4.g, col4.b, col4.a);
-			renderer.vertex(x, y + height, 0);
-	
-			renderer.color(col4.r, col4.g, col4.b, col4.a);
-			renderer.vertex(x, y + height, 0);
-			renderer.color(col1.r, col1.g, col1.b, col1.a);
-			renderer.vertex(x, y, 0);
-		}
-		else {
-			renderer.color(col1.r, col1.g, col1.b, col1.a);
-			renderer.vertex(x, y, 0);
-			renderer.color(col2.r, col2.g, col2.b, col2.a);
-			renderer.vertex(x + width, y, 0);
-			renderer.color(col3.r, col3.g, col3.b, col3.a);
-			renderer.vertex(x + width, y + height, 0);
-
-			renderer.color(col3.r, col3.g, col3.b, col3.a);
-			renderer.vertex(x + width, y + height, 0);
-			renderer.color(col4.r, col4.g, col4.b, col4.a);
-			renderer.vertex(x, y + height, 0);
-			renderer.color(col1.r, col1.g, col1.b, col1.a);
-			renderer.vertex(x, y, 0);
-		}
+		renderer.color(c1.r, c1.g, c1.b, c1.a);
+		renderer.vertex(x, y, 0);
+		renderer.color(c2.r, c2.g, c2.b, c2.a);
+		renderer.vertex(x + width, y, 0);
+		renderer.color(c3.r, c3.g, c3.b, c3.a);
+		renderer.vertex(x + width, y + height, 0);
+
+		renderer.color(c3.r, c3.g, c3.b, c3.a);
+		renderer.vertex(x + width, y + height, 0);
+		renderer.color(c4.r, c4.g, c4.b, c4.a);
+		renderer.vertex(x, y + height, 0);
+		renderer.color(c1.r, c1.g, c1.b, c1.a);
+		renderer.vertex(x, y, 0);
 	}
-	
+
 	/** Draws a box. The x, y and z coordinate specify the bottom left front corner of the rectangle. The {@link ShapeType} passed
-	 * to begin has to be {@link ShapeType#Line}.
+	 * to begin has to be {@link ShapeType#Box}.
 	 * @param x
 	 * @param y
 	 * @param width
 	 * @param height */
-	public void box(float x, float y, float z, float width, float height, float depth){
-		if (currType != ShapeType.Line) throw new GdxRuntimeException("Must call begin(ShapeType.Line)");
-		
+	public void box (float x, float y, float z, float width, float height, float depth) {
+		if (currType != ShapeType.Box) throw new GdxRuntimeException("Must call begin(ShapeType.Box)");
 		checkDirty();
 		checkFlush(16);
-		
+
 		depth = -depth;
-		
 		renderer.color(color.r, color.g, color.b, color.a);
 		renderer.vertex(x, y, z);
 		renderer.color(color.r, color.g, color.b, color.a);
@@ -504,16 +468,15 @@ public class ShapeRenderer {
 		renderer.color(color.r, color.g, color.b, color.a);
 		renderer.vertex(x, y + height, z + depth);
 	}
-	
+
 	/** Calls {@link #circle(float, float, float, int)} by estimating the number of segments needed for a smooth circle. */
 	public void circle (float x, float y, float radius) {
 		circle(x, y, radius, (int)(6 * (float)Math.cbrt(radius)));
 	}
-	
-	public void circle(float x, float y, float radius, int segments){
+
+	public void circle (float x, float y, float radius, int segments) {
 		if (segments <= 0) throw new IllegalArgumentException("segments must be >= 0.");
-		if (currType != ShapeType.Filled && currType != ShapeType.Line) 
-			throw new GdxRuntimeException("Must call begin(ShapeType.Filled) or begin(ShapeType.Line)");
+		if (currType != ShapeType.Circle) throw new GdxRuntimeException("Must call begin(ShapeType.Circle)");
 		checkDirty();
 		checkFlush(segments * 2 + 2);
 
@@ -521,177 +484,175 @@ public class ShapeRenderer {
 		float cos = MathUtils.cos(angle);
 		float sin = MathUtils.sin(angle);
 		float cx = radius, cy = 0;
-		if(currType == ShapeType.Line){
-			for (int i = 0; i < segments; i++) {
-				renderer.color(color.r, color.g, color.b, color.a);
-				renderer.vertex(x + cx, y + cy, 0);
-				float temp = cx;
-				cx = cos * cx - sin * cy;
-				cy = sin * temp + cos * cy;
-				renderer.color(color.r, color.g, color.b, color.a);
-				renderer.vertex(x + cx, y + cy, 0);
-			}
-			// Ensure the last segment is identical to the first.
+		for (int i = 0; i < segments; i++) {
+			renderer.color(color.r, color.g, color.b, color.a);
+			renderer.vertex(x + cx, y + cy, 0);
+			float temp = cx;
+			cx = cos * cx - sin * cy;
+			cy = sin * temp + cos * cy;
 			renderer.color(color.r, color.g, color.b, color.a);
 			renderer.vertex(x + cx, y + cy, 0);
 		}
-		else {
-			segments--;
-			for (int i = 0; i < segments; i++) {
-				renderer.color(color.r, color.g, color.b, color.a);
-				renderer.vertex(x, y, 0);
-				renderer.color(color.r, color.g, color.b, color.a);
-				renderer.vertex(x + cx, y + cy, 0);
-				float temp = cx;
-				cx = cos * cx - sin * cy;
-				cy = sin * temp + cos * cy;
-				renderer.color(color.r, color.g, color.b, color.a);
-				renderer.vertex(x + cx, y + cy, 0);
-			}
-			// Ensure the last segment is identical to the first.
+		// Ensure the last segment is identical to the first.
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x + cx, y + cy, 0);
+		float temp = cx;
+		cx = radius;
+		cy = 0;
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x + cx, y + cy, 0);
+	}
+
+	/** Calls {@link #filledCircle(float, float, float, int)} by estimating the number of segments needed for a smooth circle. */
+	public void filledCircle (float x, float y, float radius) {
+		filledCircle(x, y, radius, (int)(6 * (float)Math.cbrt(radius)));
+	}
+
+	public void filledCircle (float x, float y, float radius, int segments) {
+		if (segments <= 0) throw new IllegalArgumentException("segments must be >= 0.");
+		if (currType != ShapeType.FilledCircle) throw new GdxRuntimeException("Must call begin(ShapeType.FilledCircle)");
+		checkDirty();
+		checkFlush(segments * 3 + 3);
+
+		int inc = 360 / segments;
+		float angle = 2 * 3.1415926f / segments;
+		float cos = MathUtils.cos(angle);
+		float sin = MathUtils.sin(angle);
+		float cx = radius, cy = 0;
+		segments--;
+		for (int i = 0; i < segments; i++) {
 			renderer.color(color.r, color.g, color.b, color.a);
 			renderer.vertex(x, y, 0);
 			renderer.color(color.r, color.g, color.b, color.a);
 			renderer.vertex(x + cx, y + cy, 0);
+			float temp = cx;
+			cx = cos * cx - sin * cy;
+			cy = sin * temp + cos * cy;
+			renderer.color(color.r, color.g, color.b, color.a);
+			renderer.vertex(x + cx, y + cy, 0);
 		}
-		
-		float temp = cx;
+		// Ensure the last segment is identical to the first.
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x, y, 0);
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x + cx, y + cy, 0);
 		cx = radius;
 		cy = 0;
 		renderer.color(color.r, color.g, color.b, color.a);
 		renderer.vertex(x + cx, y + cy, 0);
 	}
-	
-	/** Calls {@link #cone(float, float, float, float, float, int)} by estimating the number of segments needed for a smooth
-	 * circular base. */
+
+	public void triangle (float x1, float y1, float x2, float y2, float x3, float y3) {
+		if (currType != ShapeType.Triangle) throw new GdxRuntimeException("Must call begin(ShapeType.Triangle)");
+		checkDirty();
+		checkFlush(6);
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x1, y1, 0);
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x2, y2, 0);
+
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x2, y2, 0);
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x3, y3, 0);
+
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x3, y3, 0);
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x1, y1, 0);
+	}
+
+	public void filledTriangle (float x1, float y1, float x2, float y2, float x3, float y3) {
+		if (currType != ShapeType.FilledTriangle) throw new GdxRuntimeException("Must call begin(ShapeType.FilledTriangle)");
+		checkDirty();
+		checkFlush(3);
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x1, y1, 0);
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x2, y2, 0);
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x3, y3, 0);
+	}
+
 	public void cone (float x, float y, float z, float radius, float height) {
-		cone(x, y, z, radius, height, (int)(4 * (float)Math.sqrt(radius)));
+		cone(x, y, z, radius, height, (int)(6 * (float)Math.cbrt(radius)));
 	}
-	
-	public void cone(float x, float y, float z, float radius, float height, int segments){
-		if (segments <= 0) throw new IllegalArgumentException("segments must be >= 0.");
-		if (currType != ShapeType.Filled && currType != ShapeType.Line) 
-			throw new GdxRuntimeException("Must call begin(ShapeType.Filled) or begin(ShapeType.Line)");
+
+	public void cone (float x, float y, float z, float radius, float height, int segments) {
+		if (currType != ShapeType.Cone) throw new GdxRuntimeException("Must call begin(ShapeType.Cone)");
 		checkDirty();
 		checkFlush(segments * 4 + 2);
 		float angle = 2 * 3.1415926f / segments;
 		float cos = MathUtils.cos(angle);
 		float sin = MathUtils.sin(angle);
 		float cx = radius, cy = 0;
-		if(currType == ShapeType.Line){
-			for (int i = 0; i < segments; i++) {
-				renderer.color(color.r, color.g, color.b, color.a);
-				renderer.vertex(x + cx, y + cy, z);
-				renderer.color(color.r, color.g, color.b, color.a);
-				renderer.vertex(x, y, z + height);
-				renderer.color(color.r, color.g, color.b, color.a);
-				renderer.vertex(x + cx, y + cy, z);
-				float temp = cx;
-				cx = cos * cx - sin * cy;
-				cy = sin * temp + cos * cy;
-				renderer.color(color.r, color.g, color.b, color.a);
-				renderer.vertex(x + cx, y + cy, z);
-			}
-			// Ensure the last segment is identical to the first.
+		for (int i = 0; i < segments; i++) {
 			renderer.color(color.r, color.g, color.b, color.a);
 			renderer.vertex(x + cx, y + cy, z);
-		}
-		else {
-			segments--;
-			for (int i = 0; i < segments; i++) {
-				renderer.color(color.r, color.g, color.b, color.a);
-				renderer.vertex(x, y, z);
-				renderer.color(color.r, color.g, color.b, color.a);
-				renderer.vertex(x + cx, y + cy, z);
-				float temp = cx;
-				float temp2 = cy;
-				cx = cos * cx - sin * cy;
-				cy = sin * temp + cos * cy;
-				renderer.color(color.r, color.g, color.b, color.a);
-				renderer.vertex(x + cx, y + cy, z);
-				renderer.color(color.r, color.g, color.b, color.a);
-				renderer.vertex(x + temp, y + temp2, z);
-				renderer.color(color.r, color.g, color.b, color.a);
-				renderer.vertex(x + cx, y + cy, z);
-				renderer.color(color.r, color.g, color.b, color.a);
-				renderer.vertex(x, y, z + height);
-			}
-			// Ensure the last segment is identical to the first.
 			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x, y, z);
+			renderer.vertex(x, y, z + height);
+			renderer.color(color.r, color.g, color.b, color.a);
+			renderer.vertex(x + cx, y + cy, z);
+			float temp = cx;
+			cx = cos * cx - sin * cy;
+			cy = sin * temp + cos * cy;
 			renderer.color(color.r, color.g, color.b, color.a);
 			renderer.vertex(x + cx, y + cy, z);
 		}
+		// Ensure the last segment is identical to the first.
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x + cx, y + cy, z);
+		float temp = cx;
 		cx = radius;
 		cy = 0;
 		renderer.color(color.r, color.g, color.b, color.a);
 		renderer.vertex(x + cx, y + cy, z);
 	}
-	
-	/** Draws a polygon in the x/y plane. The vertices must contain at least 3 points (6 floats x,y). The
-	 * {@link ShapeType} passed to begin has to be {@link ShapeType#Line}.
-	 * @param vertices */
-	public void polygon(float[] vertices){
-		if (currType != ShapeType.Line) throw new GdxRuntimeException("Must call begin(ShapeType.Line)");
-		if (vertices.length < 6) throw new IllegalArgumentException("Polygons must contain at least 3 points.");
-		if (vertices.length % 2 != 0) throw new IllegalArgumentException("Polygons must have a pair number of vertices.");
-		final int numFloats = vertices.length;
-		
-		checkDirty();
-		checkFlush(numFloats);
-		
-		float firstX = vertices[0];
-		float firstY = vertices[1];
-		
-		for (int i = 0; i < numFloats; i += 2) {
-			float x1 = vertices[i];
-			float y1 = vertices[i + 1];
-			
-			float x2;
-			float y2;
-			
-			if(i + 2 >= numFloats){
-				x2 = firstX;
-				y2 = firstY;
-			}else{
-				x2 = vertices[i + 2];
-				y2 = vertices[i + 3];
-			}
-			
-			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x1, y1, 0);
-			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x2, y2, 0);
-		}
+
+	/** Calls {@link #filledCone(float, float, float, float, float, int)} by estimating the number of segments needed for a smooth
+	 * circular base. */
+	public void filledCone (float x, float y, float z, float radius, float height) {
+		filledCone(x, y, z, radius, height, (int)(4 * (float)Math.sqrt(radius)));
 	}
-	
-	/** Draws a polyline in the x/y plane. The vertices must contain at least 2 points (4 floats x,y). The
-	 * {@link ShapeType} passed to begin has to be {@link ShapeType#Line}.
-	 * @param vertices */
-	public void polyline(float[] vertices) {
-		if (currType != ShapeType.Line) throw new GdxRuntimeException("Must call begin(ShapeType.Line)");
-		if (vertices.length < 4) throw new IllegalArgumentException("Polylines must contain at least 2 points.");
-		if (vertices.length % 2 != 0) throw new IllegalArgumentException("Polylines must have a pair number of vertices.");
-		final int numFloats = vertices.length;
 
+	public void filledCone (float x, float y, float z, float radius, float height, int segments) {
+		if (segments <= 0) throw new IllegalArgumentException("segments must be >= 0.");
+		if (currType != ShapeType.FilledCone) throw new GdxRuntimeException("Must call begin(ShapeType.FilledCone)");
 		checkDirty();
-		checkFlush(numFloats);
-
-		for (int i = 0; i < numFloats - 2; i += 2) {
-			float x1 = vertices[i];
-			float y1 = vertices[i + 1];
-
-			float x2;
-			float y2;
-
-			x2 = vertices[i + 2];
-			y2 = vertices[i + 3];
-
+		checkFlush(segments * 6 + 3);
+		int inc = 360 / segments;
+		float angle = 2 * 3.1415926f / segments;
+		float cos = MathUtils.cos(angle);
+		float sin = MathUtils.sin(angle);
+		float cx = radius, cy = 0;
+		segments--;
+		for (int i = 0; i < segments; i++) {
+			renderer.color(color.r, color.g, color.b, color.a);
+			renderer.vertex(x, y, z);
 			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x1, y1, 0);
+			renderer.vertex(x + cx, y + cy, z);
+			float temp = cx;
+			float temp2 = cy;
+			cx = cos * cx - sin * cy;
+			cy = sin * temp + cos * cy;
 			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x2, y2, 0);
+			renderer.vertex(x + cx, y + cy, z);
+			renderer.color(color.r, color.g, color.b, color.a);
+			renderer.vertex(x + temp, y + temp2, z);
+			renderer.color(color.r, color.g, color.b, color.a);
+			renderer.vertex(x + cx, y + cy, z);
+			renderer.color(color.r, color.g, color.b, color.a);
+			renderer.vertex(x, y, z + height);
 		}
+		// Ensure the last segment is identical to the first.
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x, y, z);
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x + cx, y + cy, z);
+		cx = radius;
+		cy = 0;
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x + cx, y + cy, z);
 	}
 
 	private void checkDirty () {
diff --git a/gdx/src/com/badlogic/gdx/maps/ImageResolver.java b/gdx/src/com/badlogic/gdx/maps/ImageResolver.java
deleted file mode 100755
index 0f14607..0000000
--- a/gdx/src/com/badlogic/gdx/maps/ImageResolver.java
+++ /dev/null
@@ -1,60 +0,0 @@
-package com.badlogic.gdx.maps;
-
-import com.badlogic.gdx.assets.AssetManager;
-import com.badlogic.gdx.graphics.Texture;
-import com.badlogic.gdx.graphics.g2d.TextureAtlas;
-import com.badlogic.gdx.graphics.g2d.TextureRegion;
-import com.badlogic.gdx.utils.ObjectMap;
-
-/**
- * Resolves an image by a string, wrapper around a Map or AssetManager
- * to load maps either directly or via AssetManager.
- * @author mzechner
- *
- */
-public interface ImageResolver {
-	/**
-	 * @param name
-	 * @return the Texture for the given image name or null.
-	 */
-	public TextureRegion getImage(String name);
-	
-	public static class DirectImageResolver implements ImageResolver {
-		private final ObjectMap<String, Texture> images;
-		
-		public DirectImageResolver(ObjectMap<String, Texture> images) {
-			this.images = images;
-		}
-
-		@Override
-		public TextureRegion getImage (String name) {
-			return new TextureRegion(images.get(name));
-		}
-	}
-	
-	public static class AssetManagerImageResolver implements ImageResolver {
-		private final AssetManager assetManager;
-		
-		public AssetManagerImageResolver(AssetManager assetManager) {
-			this.assetManager = assetManager;
-		}
-		
-		@Override
-		public TextureRegion getImage (String name) {
-			return new TextureRegion(assetManager.get(name, Texture.class));
-		}
-	}
-	
-	public static class TextureAtlasImageResolver implements ImageResolver {
-		private final TextureAtlas atlas;
-		
-		public TextureAtlasImageResolver(TextureAtlas atlas) {
-			this.atlas = atlas;
-		}
-		
-		@Override
-		public TextureRegion getImage (String name) {
-			return atlas.findRegion(name);
-		}
-	}
-}
diff --git a/gdx/src/com/badlogic/gdx/maps/Map.java b/gdx/src/com/badlogic/gdx/maps/Map.java
deleted file mode 100644
index 61f0296..0000000
--- a/gdx/src/com/badlogic/gdx/maps/Map.java
+++ /dev/null
@@ -1,79 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-
-package com.badlogic.gdx.maps;
-
-import com.badlogic.gdx.assets.AssetManager;
-import com.badlogic.gdx.graphics.Texture;
-import com.badlogic.gdx.maps.objects.CircleMapObject;
-import com.badlogic.gdx.maps.objects.PolygonMapObject;
-import com.badlogic.gdx.maps.objects.TextureMapObject;
-import com.badlogic.gdx.maps.tiled.TiledMap;
-import com.badlogic.gdx.utils.Disposable;
-
-/**
- * A generic level map implementation.</p>
- * 
- * A map has {@link MapProperties} which describe general attributes. Availability of properties
- * depends on the type of map, e.g. what format is was loaded from etc.</p>
- * 
- * A map has {@link MapLayers}. Map layers are ordered and indexed. A {@link MapLayer} contains
- * {@link MapObjects} which represent things within the layer. Different types
- * of {@link MapObject} are available, e.g. {@link CircleMapObject}, {@link TextureMapObject}, 
- * and so on.</p>
- * 
- * A map can be rendered by a {@link MapRenderer}. A MapRenderer implementation may chose to only
- * render specific MapObject or MapLayer types.</p>
- * 
- * There are more specialized implementations of Map for specific use cases. e.g.
- * the {@link TiledMap} class and its associated classes add functionality specifically for
- * tile maps on top of the basic map functionality.</p>
- * 
- * Maps must be disposed through a call to {@link #dispose()} when no longer used.
- */
-public class Map implements Disposable {
-	private MapLayers layers = new MapLayers();
-	private MapProperties properties = new MapProperties();
-	
-	/**
-	 * Creates empty map
-	 */
-	public Map() {
-		
-	}
-	
-	/**
-	 * @return the map's layers
-	 */
-	public MapLayers getLayers() {
-		return layers;
-	}
-
-	/**
-	 * @return the map's properties
-	 */
-	public MapProperties getProperties() {
-		return properties;
-	}
-
-	/**
-	 * Disposes all resources like {@link Texture} instances that
-	 * the map may own.
-	 */
-	@Override
-	public void dispose () {
-	}
-}
diff --git a/gdx/src/com/badlogic/gdx/maps/MapLayer.java b/gdx/src/com/badlogic/gdx/maps/MapLayer.java
deleted file mode 100644
index 1218182..0000000
--- a/gdx/src/com/badlogic/gdx/maps/MapLayer.java
+++ /dev/null
@@ -1,84 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-
-package com.badlogic.gdx.maps;
-
-/**
- * Map layer containing a set of objects and properties
- */
-public class MapLayer {
-	private String name = "";
-	private float opacity = 1.0f;
-	private boolean visible = true;
-	private MapObjects objects = new MapObjects();
-	private MapProperties properties = new MapProperties();
-
-	/**
-	 * @return layer's name
-	 */
-	public String getName() {
-		return name;
-	}
-	
-	/**
-	 * @param name new name for the layer
-	 */
-	public void setName(String name) {
-		this.name = name;
-	}
-	
-	/**
-	 * @return layer's opacity
-	 */
-	public float getOpacity() {
-		return opacity;
-	}
-
-	/**
-	 * @param opacity new opacity for the layer
-	 */
-	public void setOpacity(float opacity) {
-		this.opacity = opacity;
-	}
-	
-	/**
-	 * @return collection of objects contained in the layer
-	 */
-	public MapObjects getObjects() {
-		return objects;
-	}
-	
-	/**
-	 * @return whether the layer is visible or not
-	 */
-	public boolean isVisible() {
-		return visible;
-	}
-
-	/**
-	 * @param visible toggles layer's visibility
-	 */
-	public void setVisible(boolean visible) {
-		this.visible = visible;
-	}
-
-	/**
-	 * @return layer's set of properties
-	 */
-	public MapProperties getProperties() {
-		return properties;
-	}
-}
diff --git a/gdx/src/com/badlogic/gdx/maps/MapLayers.java b/gdx/src/com/badlogic/gdx/maps/MapLayers.java
deleted file mode 100644
index 850bbc1..0000000
--- a/gdx/src/com/badlogic/gdx/maps/MapLayers.java
+++ /dev/null
@@ -1,92 +0,0 @@
-package com.badlogic.gdx.maps;
-
-import java.util.Iterator;
-
-import com.badlogic.gdx.utils.Array;
-
-/**
- * Ordered list of {@link MapLayer} instances owned by a {@link Map}
- */
-public class MapLayers implements Iterable<MapLayer> {
-	private Array<MapLayer> layers = new Array<MapLayer>();
-
-	/**
-	 * @param index
-	 * @return layer at index
-	 */
-	public MapLayer get(int index) {
-		return layers.get(index);
-	}
-	
-	/**
-	 * @param name
-	 * @return first layer matching the name, null otherwise
-	 */
-	public MapLayer get(String name) {
-		for (MapLayer layer : layers) {
-			if (name.equals(layer.getName())) {
-				return layer;
-			}
-		}
-		return null;
-	}
-	
-	/** @return number of layers in the collection */
-	public int getCount() {
-		return layers.size;
-	}
-
-	/**
-	 * @param layer layer to be added to the set
-	 */
-	public void add(MapLayer layer) {
-		this.layers.add(layer);
-	}
-	
-	/**
-	 * @param index removes layer at index
-	 */
-	public void remove(int index) {
-		layers.removeIndex(index);
-	}
-	
-	/**
-	 * @param layer layer to be removed
-	 */
-	public void remove(MapLayer layer) {
-		layers.removeValue(layer, true);
-	}
-
-	/**
-	 * @param type
-	 * @return array with all the layers matching type
-	 */
-	public <T extends MapLayer> Array<T> getByType(Class<T> type) {
-		return getByType(type, new Array<T>());
-	}
-	
-	/**
-	 * 
-	 * @param type
-	 * @param fill array to be filled with the matching layers
-	 * @return array with all the layers matching type
-	 */
-	public <T extends MapLayer> Array<T> getByType(Class<T> type, Array<T> fill) {
-		fill.clear();
-		for (MapLayer layer : layers) {
-			if (type.isInstance(layer)) {
-				fill.add((T) layer);
-			}
-		}
-		return fill;
-	}
-
-	/**
-	 * @return iterator to set of layers
-	 */
-	@Override
-	public Iterator<MapLayer> iterator() {
-		return layers.iterator();
-	}
-	
-}
diff --git a/gdx/src/com/badlogic/gdx/maps/MapObject.java b/gdx/src/com/badlogic/gdx/maps/MapObject.java
deleted file mode 100644
index 3f4cf9a..0000000
--- a/gdx/src/com/badlogic/gdx/maps/MapObject.java
+++ /dev/null
@@ -1,77 +0,0 @@
-package com.badlogic.gdx.maps;
-
-import com.badlogic.gdx.graphics.Color;
-
-/**
- * Generic Map entity with basic attributes like name, opacity, color 
- */
-public class MapObject {
-	private String name = "";
-	private float opacity = 1.0f;
-	private boolean visible = true;
-	private MapProperties properties = new MapProperties();
-	private Color color = Color.WHITE.cpy();
-	
-	/**
-	 * @return object's name
-	 */
-	public String getName() {
-		return name;
-	}
-	
-	/**
-	 * @param name new name for the object
-	 */
-	public void setName(String name) {
-		this.name = name;
-	}
-	
-	/**
-	 * @return object's color
-	 */
-	public Color getColor() {
-		return color;
-	}
-	
-	/**
-	 * @param color new color for the object
-	 */
-	public void setColor(Color color) {
-		this.color = color;
-	}
-
-	/**
-	 * @return object's opacity
-	 */
-	public float getOpacity() {
-		return opacity;
-	}
-
-	/**
-	 * @param opacity new opacity value for the object
-	 */
-	public void setOpacity(float opacity) {
-		this.opacity = opacity;
-	}
-	
-	/**
-	 * @return whether the object is visible or not
-	 */
-	public boolean isVisible() {
-		return visible;
-	}
-
-	/**
-	 * @param visible toggles object's visibility
-	 */
-	public void setVisible(boolean visible) {
-		this.visible = visible;
-	}
-	
-	/**
-	 * @return object's properties set
-	 */
-	public MapProperties getProperties() {
-		return properties;
-	}
-}
diff --git a/gdx/src/com/badlogic/gdx/maps/MapObjects.java b/gdx/src/com/badlogic/gdx/maps/MapObjects.java
deleted file mode 100644
index 2099ec0..0000000
--- a/gdx/src/com/badlogic/gdx/maps/MapObjects.java
+++ /dev/null
@@ -1,101 +0,0 @@
-package com.badlogic.gdx.maps;
-
-import java.util.Iterator;
-
-import com.badlogic.gdx.utils.Array;
-
-/**
- * @brief Collection of MapObject instances
- */
-public class MapObjects implements Iterable<MapObject> {
-
-	private Array<MapObject> objects;
-
-	/**
-	 * Creates and empty set of MapObject instances
-	 */
-	public MapObjects() {
-		objects = new Array<MapObject>();
-	}
-	
-	/**
-	 * @param index
-	 * @return MapObject at index
-	 */
-	public MapObject get(int index) {
-		return objects.get(index);
-	}
-	
-	/**
-	 * @param name
-	 * @return name matching object, null if it´s not in the set
-	 */
-	public MapObject get(String name) {
-		for (MapObject object : objects) {
-			if (name.equals(object.getName())) {
-				return object;
-			}
-		}
-		return null;
-	}
-	
-	/**
-	 * @param object instance to be added to the collection
-	 */
-	public void add(MapObject object) {
-		this.objects.add(object);
-	}
-	
-	/**
-	 * @param index removes MapObject instance at index
-	 */
-	public void remove(int index) {
-		objects.removeIndex(index);
-	}
-	
-	/**
-	 * @param object instance to be removed
-	 */
-	public void remove(MapObject object) {
-		objects.removeValue(object, true);
-	}
-	
-	/**
-	 * @return number of objects in the collection
-	 */
-	public int getCount() {
-		return objects.size;
-	}
-
-	/**
-	 * @param type class of the objects we want to retrieve
-	 * @return array filled with all the objects in the collection matching type
-	 */
-	public <T extends MapObject> Array<T> getByType(Class<T> type) {
-		return getByType(type, new Array<T>());
-	}
-	
-	/**
-	 * @param type class of the objects we want to retrieve
-	 * @param fill collection to put the returned objects in
-	 * @return array filled with all the objects in the collection matching type
-	 */
-	public <T extends MapObject> Array<T> getByType(Class<T> type, Array<T> fill) {
-		fill.clear();
-		for (MapObject object : objects) {
-			if (type.isInstance(object)) {
-				fill.add((T) object);
-			}
-		}
-		return fill;
-	}
-
-	/**
-	 * @return iterator for the objects within the collection
-	 */
-	@Override
-	public Iterator<MapObject> iterator() {
-		return objects.iterator();
-	}
-	
-}
diff --git a/gdx/src/com/badlogic/gdx/maps/MapProperties.java b/gdx/src/com/badlogic/gdx/maps/MapProperties.java
deleted file mode 100644
index 56e68f4..0000000
--- a/gdx/src/com/badlogic/gdx/maps/MapProperties.java
+++ /dev/null
@@ -1,107 +0,0 @@
-package com.badlogic.gdx.maps;
-
-import java.util.Iterator;
-
-import com.badlogic.gdx.graphics.Color;
-import com.badlogic.gdx.math.Vector2;
-import com.badlogic.gdx.utils.ObjectMap;
-
-/**
- * @brief Set of string indexed values representing map elements' properties, allowing
- * to retrieve, modify and add properties to the set.
- */
-public class MapProperties {
-
-	private ObjectMap<String, Object> properties;
-	
-	/**
-	 * Creates an empty properties set
-	 */
-	public MapProperties() {
-		properties = new ObjectMap<String, Object>();
-	}
-
-	/**
-	 * @param key property name 
-	 * @return true if and only if the property exists
-	 */
-	public boolean containsKey(String key) {
-		return properties.containsKey(key);
-	}
-	
-	/**
-	 * @param key property name 
-	 * @return the value for that property if it exists, otherwise, null
-	 */
-	public Object get(String key) {
-		return properties.get(key);
-	}
-	
-	/**
-	 * Returns the object for the given key, casting it to clazz.
-	 * @param key the key of the object
-	 * @param clazz the class of the object
-	 * @return the object or null if the object is not in the map
-	 * @throws ClassCastException if the object with the given key is not of type clazz
-	 */
-	public <T> T get(String key, Class<T> clazz) {
-		return (T)get(key);
-	}
-	
-	/**
-	 * Returns the object for the given key, casting it to clazz.
-	 * @param key the key of the object
-	 * @param defaultValue the default value
-	 * @param clazz the class of the object
-	 * @return the object or the defaultValue if the object is not in the map
-	 * @throws ClassCastException if the object with the given key is not of type clazz
-	 */
-	public <T> T get(String key, T defaultValue, Class<T> clazz) {
-		Object object = get(key);
-		return object == null? defaultValue: (T)object;
-	}
-	
-	/**
-	 * @param key property name
-	 * @param value value to be inserted or modified (if it already existed)
-	 */
-	public void put(String key, Object value) {
-		properties.put(key, value);
-	}
-	
-	/**
-	 * @param properties set of properties to be added
-	 */
-	public void putAll(MapProperties properties) {
-		this.properties.putAll(properties.properties);
-	}
-	
-	/**
-	 * @param key property name to be removed
-	 */
-	public void remove(String key) {
-		properties.remove(key);
-	}
-	
-	/**
-	 * Removes all properties
-	 */
-	public void clear() {
-		properties.clear();
-	}
-	
-	/**
-	 * @return iterator for the property names
-	 */
-	public Iterator<String> getKeys() {
-		return properties.keys();
-	}
-	
-	/**
-	 * @return iterator to properties' values
-	 */
-	public Iterator<Object> getValues() {
-		return properties.values();
-	}
-
-}
diff --git a/gdx/src/com/badlogic/gdx/maps/MapRenderer.java b/gdx/src/com/badlogic/gdx/maps/MapRenderer.java
deleted file mode 100644
index d79e183..0000000
--- a/gdx/src/com/badlogic/gdx/maps/MapRenderer.java
+++ /dev/null
@@ -1,42 +0,0 @@
-package com.badlogic.gdx.maps;
-
-import com.badlogic.gdx.graphics.OrthographicCamera;
-import com.badlogic.gdx.math.Matrix4;
-
-/**
- * @brief models a common way of rendering Map objects
- */
-public interface MapRenderer {
-	/**
-	 * Sets the projection matrix and viewbounds from the given camera. If
-	 * the camera changes, you have to call this method again. The viewbounds
-	 * are taken from the camera's position and viewport size as well as the 
-	 * scale. This method will only work if the camera's direction vector
-	 * is (0,0,-1) and its up vector is (0, 1, 0), which are the defaults. 
-	 * @param camera the {@link OrthographicCamera}
-	 */
-	public void setView(OrthographicCamera camera);
-	
-	/**
-	 * Sets the projection matrix for rendering, as well as the bounds of the map
-	 * which should be rendered. Make sure that the frustum spanned by the projection
-	 * matrix coincides with the viewbounds.
-	 * @param projectionMatrix
-	 * @param viewboundsX
-	 * @param viewboundsY
-	 * @param viewboundsWidth
-	 * @param viewboundsHeight
-	 */
-	public void setView(Matrix4 projectionMatrix, float viewboundsX, float viewboundsY, float viewboundsWidth, float viewboundsHeight);
-	
-	/**
-	 * Renders all the layers of a map.
-	 */
-	public void render();
-	
-	/** Renders the given layers of a map.
-	 * 
-	 * @param layers
-	 */
-	public void render(int[] layers);
-}
diff --git a/gdx/src/com/badlogic/gdx/maps/objects/CircleMapObject.java b/gdx/src/com/badlogic/gdx/maps/objects/CircleMapObject.java
deleted file mode 100644
index cdc4b71..0000000
--- a/gdx/src/com/badlogic/gdx/maps/objects/CircleMapObject.java
+++ /dev/null
@@ -1,38 +0,0 @@
-package com.badlogic.gdx.maps.objects;
-
-import com.badlogic.gdx.maps.MapObject;
-import com.badlogic.gdx.math.Circle;
-
-/**
- * @brief represents circle shaped map objects
- */
-public class CircleMapObject extends MapObject {
-	
-	private Circle circle;
-	
-	/**
-	 * @return circle shape
-	 */
-	public Circle getCircle() {
-		return circle;
-	}
-	
-	/**
-	 * Creates a circle map object at (0,0) with r=1.0
-	 */
-	public CircleMapObject() {
-		this(0.0f, 0.0f, 1.0f);
-	}
-	
-	/**
-	 * Creates circle map object
-	 * 
-	 * @param x
-	 * @param y
-	 * @param radius
-	 */
-	public CircleMapObject(float x, float y, float radius) {
-		super();
-		circle = new Circle(x, y, radius);
-	}
-}
diff --git a/gdx/src/com/badlogic/gdx/maps/objects/EllipseMapObject.java b/gdx/src/com/badlogic/gdx/maps/objects/EllipseMapObject.java
deleted file mode 100644
index 1b20e64..0000000
--- a/gdx/src/com/badlogic/gdx/maps/objects/EllipseMapObject.java
+++ /dev/null
@@ -1,36 +0,0 @@
-package com.badlogic.gdx.maps.objects;
-
-import com.badlogic.gdx.maps.MapObject;
-import com.badlogic.gdx.math.Ellipse;
-import com.badlogic.gdx.math.Rectangle;
-
-public class EllipseMapObject extends MapObject {
-
-	private Ellipse ellipse;
-	
-	/**
-	 * @return ellipse shape
-	 */
-	public Ellipse getEllipse() {
-		return ellipse;
-	}
-	
-	/**
-	 * Creates an ellipse object which lower left corner is at (0, 0) with width=1 and height=1
-	 */
-	public EllipseMapObject() {
-		this(0.0f, 0.0f, 1.0f, 1.0f);
-	}
-	
-	/**
-	 * @param x
-	 * @param y
-	 * @param width
-	 * @param height
-	 */
-	public EllipseMapObject(float x, float y, float width, float height) {
-		super();
-		ellipse = new Ellipse(x, y, width, height);
-	}
-	
-}
diff --git a/gdx/src/com/badlogic/gdx/maps/objects/PolygonMapObject.java b/gdx/src/com/badlogic/gdx/maps/objects/PolygonMapObject.java
deleted file mode 100644
index 2d23f1c..0000000
--- a/gdx/src/com/badlogic/gdx/maps/objects/PolygonMapObject.java
+++ /dev/null
@@ -1,51 +0,0 @@
-/**
- * 
- */
-package com.badlogic.gdx.maps.objects;
-
-import com.badlogic.gdx.maps.MapObject;
-import com.badlogic.gdx.math.Polygon;
-
-/**
- * @brief represents polygon map objects
- */
-public class PolygonMapObject extends MapObject {
-
-	private Polygon polygon;
-	
-	/**
-	 * @return polygon shape
-	 */
-	public Polygon getPolygon() {
-		return polygon;
-	}
-	
-	/**
-	 * @param polygon new object's polygon shape
-	 */
-	public void setPolygon(Polygon polygon) {
-		this.polygon = polygon;
-	}
-	
-	/**
-	 * Creates empty polygon map object
-	 */
-	public PolygonMapObject() {
-		this(new float[0]);
-	}
-	
-	/**
-	 * @param vertices polygon defining vertices (at least 3)
-	 */
-	public PolygonMapObject(float[] vertices) {
-		polygon = new Polygon(vertices);
-	}
-	
-	/**
-	 * @param polygon the polygon
-	 */
-	public PolygonMapObject(Polygon polygon) {
-		this.polygon = polygon;
-	}
-	
-}
diff --git a/gdx/src/com/badlogic/gdx/maps/objects/PolylineMapObject.java b/gdx/src/com/badlogic/gdx/maps/objects/PolylineMapObject.java
deleted file mode 100644
index cb49bb8..0000000
--- a/gdx/src/com/badlogic/gdx/maps/objects/PolylineMapObject.java
+++ /dev/null
@@ -1,48 +0,0 @@
-package com.badlogic.gdx.maps.objects;
-
-import com.badlogic.gdx.maps.MapObject;
-import com.badlogic.gdx.math.Polyline;
-
-/**
- * @brief Represents polyline map objects
- */
-public class PolylineMapObject extends MapObject {
-
-	private Polyline polyline;
-	
-	/**
-	 * @return polyline shape
-	 */
-	public Polyline getPolyline() {
-		return polyline;
-	}
-	
-	/**
-	 * @param polyline new object's polyline shape
-	 */
-	public void setPolyline(Polyline polyline) {
-		this.polyline = polyline;
-	}
-	
-	/**
-	 * Creates empty polyline 
-	 */
-	public PolylineMapObject() {
-		this(new float[0]);
-	}
-	
-	/**
-	 * @param vertices polyline defining vertices
-	 */
-	public PolylineMapObject(float[] vertices) {
-		polyline = new Polyline(vertices);
-	}
-
-	/**
-	 * @param polyline the polyline
-	 */
-	public PolylineMapObject(Polyline polyline) {
-		this.polyline = polyline;
-	}
-	
-}
diff --git a/gdx/src/com/badlogic/gdx/maps/objects/RectangleMapObject.java b/gdx/src/com/badlogic/gdx/maps/objects/RectangleMapObject.java
deleted file mode 100644
index 6f73e38..0000000
--- a/gdx/src/com/badlogic/gdx/maps/objects/RectangleMapObject.java
+++ /dev/null
@@ -1,38 +0,0 @@
-package com.badlogic.gdx.maps.objects;
-
-import com.badlogic.gdx.maps.MapObject;
-import com.badlogic.gdx.math.Rectangle;
-
-/**
- * @brief Represents rectangle shaped map object
- */
-public class RectangleMapObject extends MapObject {
-	
-	private Rectangle rectangle;
-	
-	/**
-	 * @return rectangle shape
-	 */
-	public Rectangle getRectangle() {
-		return rectangle;
-	}
-	
-	/**
-	 * Creates a rectangle object which lower left corner is at (0, 0) with width=1 and height=1
-	 */
-	public RectangleMapObject() {
-		this(0.0f, 0.0f, 1.0f, 1.0f);
-	}
-	
-	/**
-	 * @param x
-	 * @param y
-	 * @param width
-	 * @param height
-	 */
-	public RectangleMapObject(float x, float y, float width, float height) {
-		super();
-		rectangle = new Rectangle(x, y, width, height);
-	}
-	
-}
diff --git a/gdx/src/com/badlogic/gdx/maps/objects/TextureMapObject.java b/gdx/src/com/badlogic/gdx/maps/objects/TextureMapObject.java
deleted file mode 100644
index 5f74e90..0000000
--- a/gdx/src/com/badlogic/gdx/maps/objects/TextureMapObject.java
+++ /dev/null
@@ -1,148 +0,0 @@
-package com.badlogic.gdx.maps.objects;
-
-import com.badlogic.gdx.graphics.g2d.TextureRegion;
-import com.badlogic.gdx.maps.MapObject;
-
-/**
- * @brief Represents a map object containing a texture (region)
- */
-public class TextureMapObject extends MapObject {
-	
-	private float x = 0.0f;
-	private float y = 0.0f;
-	private float originX = 0.0f;
-	private float originY = 0.0f;
-	private float scaleX = 1.0f;
-	private float scaleY = 1.0f;
-	private float rotation = 0.0f;
-	private TextureRegion textureRegion = null;
-
-	/**
-	 * @return x axis coordinate
-	 */
-	public float getX() {
-		return x;
-	}
-
-	/**
-	 * @param x new x axis coordinate
-	 */
-	public void setX(float x) {
-		this.x = x;
-	}
-
-	/**
-	 * @return y axis coordinate
-	 */
-	public float getY() {
-		return y;
-	}
-
-	/**
-	 * @param y new y axis coordinate
-	 */
-	public void setY(float y) {
-		this.y = y;
-	}
-	
-	/**
-	 * @return x axis origin
-	 */
-	public float getOriginX() {
-		return originX;
-	}
-
-	/**
-	 * @param x new x axis origin
-	 */
-	public void setOriginX(float x) {
-		this.originX = x;
-	}
-
-	/**
-	 * @return y axis origin
-	 */
-	public float getOriginY() {
-		return originY;
-	}
-
-	/**
-	 * @param y new axis origin
-	 */
-	public void setOriginY(float y) {
-		this.originY = y;
-	}
-	
-	/**
-	 * @return x axis scale
-	 */
-	public float getScaleX() {
-		return scaleX;
-	}
-
-	/**
-	 * @param x new x axis scale 
-	 */
-	public void setScaleX(float x) {
-		this.scaleX = x;
-	}
-
-	/**
-	 * @return y axis scale
-	 */
-	public float getScaleY() {
-		return scaleY;
-	}
-
-	/**
-	 * @param y new y axis scale
-	 */
-	public void setScaleY(float y) {
-		this.scaleY = y;
-	}
-	
-	/**
-	 * @return texture's rotation in radians
-	 */
-	public float getRotation() {
-		return rotation;
-	}
-	
-	/**
-	 * @param rotation new texture's rotation in radians
-	 */
-	public void setRotation(float rotation) {
-		this.rotation = rotation;
-	}
-
-	/**
-	 * @return region
-	 */
-	public TextureRegion getTextureRegion() {
-		return textureRegion;
-	}
-	
-	/**
-	 * @param region new texture region
-	 */
-	public void setTextureRegion(TextureRegion region) {
-		textureRegion = region;
-	}
-	
-	/**
-	 * Creates empty texture map object
-	 */
-	public TextureMapObject() {
-		this(null);
-	}
-	
-	/**
-	 * Creates texture map object with the given region
-	 * 
-	 * @param textureRegion
-	 */
-	public TextureMapObject(TextureRegion textureRegion) {
-		super();
-		this.textureRegion = textureRegion;
-	}
-}
diff --git a/gdx/src/com/badlogic/gdx/maps/tiled/TideMapLoader.java b/gdx/src/com/badlogic/gdx/maps/tiled/TideMapLoader.java
deleted file mode 100644
index a287df5..0000000
--- a/gdx/src/com/badlogic/gdx/maps/tiled/TideMapLoader.java
+++ /dev/null
@@ -1,293 +0,0 @@
-package com.badlogic.gdx.maps.tiled;
-
-import java.io.IOException;
-import java.util.StringTokenizer;
-
-import com.badlogic.gdx.assets.AssetDescriptor;
-import com.badlogic.gdx.assets.AssetLoaderParameters;
-import com.badlogic.gdx.assets.AssetManager;
-import com.badlogic.gdx.assets.loaders.FileHandleResolver;
-import com.badlogic.gdx.assets.loaders.SynchronousAssetLoader;
-import com.badlogic.gdx.assets.loaders.resolvers.InternalFileHandleResolver;
-import com.badlogic.gdx.files.FileHandle;
-import com.badlogic.gdx.graphics.Texture;
-import com.badlogic.gdx.graphics.g2d.TextureRegion;
-import com.badlogic.gdx.maps.ImageResolver;
-import com.badlogic.gdx.maps.MapProperties;
-import com.badlogic.gdx.maps.ImageResolver.AssetManagerImageResolver;
-import com.badlogic.gdx.maps.ImageResolver.DirectImageResolver;
-import com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile;
-import com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile;
-import com.badlogic.gdx.maps.tiled.TiledMapTileLayer.Cell;
-import com.badlogic.gdx.utils.Array;
-import com.badlogic.gdx.utils.GdxRuntimeException;
-import com.badlogic.gdx.utils.ObjectMap;
-import com.badlogic.gdx.utils.XmlReader;
-import com.badlogic.gdx.utils.XmlReader.Element;
-
-public class TideMapLoader extends SynchronousAssetLoader<TiledMap, TideMapLoader.Parameters> {
-
-	public static class Parameters extends AssetLoaderParameters<TiledMap> {
-		
-	}
-	
-	private XmlReader xml = new XmlReader();
-	private Element root;
-	
-	public TideMapLoader() {
-		super(new InternalFileHandleResolver());
-	}
-	
-	public TideMapLoader (FileHandleResolver resolver) {
-		super(resolver);
-	}
-
-	public TiledMap load (String fileName) {
-		try {
-			FileHandle tideFile = resolve(fileName);
-			root = xml.parse(tideFile);
-			ObjectMap<String, Texture> textures = new ObjectMap<String, Texture>();
-			for(FileHandle textureFile: loadTileSheets(root, tideFile)) {
-				textures.put(textureFile.path(), new Texture(textureFile));
-			}
-			DirectImageResolver imageResolver = new DirectImageResolver(textures);
-			TiledMap map = loadMap(root, tideFile, imageResolver);
-			map.setOwnedTextures(textures.values().toArray());
-			return map;
-		} catch(IOException e) {
-			throw new GdxRuntimeException("Couldn't load tilemap '" + fileName + "'", e);
-		}
-
-	}
-	
-	@Override
-	public TiledMap load (AssetManager assetManager, String fileName, Parameters parameter) {
-		FileHandle tideFile = resolve(fileName);
-		try {
-			return loadMap(root, tideFile, new AssetManagerImageResolver(assetManager));
-		} catch (Exception e) {
-			throw new GdxRuntimeException("Couldn't load tilemap '" + fileName + "'", e);
-		}
-	}
-
-	@Override
-	public Array<AssetDescriptor> getDependencies (String fileName, Parameters parameter) {
-		Array<AssetDescriptor> dependencies = new Array<AssetDescriptor>();
-		try {
-			FileHandle tmxFile = resolve(fileName);
-			root = xml.parse(tmxFile);
-			for(FileHandle image: loadTileSheets(root, tmxFile)) {
-				dependencies.add(new AssetDescriptor(image.path(), Texture.class));
-			}
-			return dependencies;
-		} catch (IOException e) {
-			throw new GdxRuntimeException("Couldn't load tilemap '" + fileName + "'", e);
-		}
-	}
-	
-	/**
-	 * Loads the map data, given the XML root element and an {@link ImageResolver} used
-	 * to return the tileset Textures
-	 * @param root the XML root element 
-	 * @param tmxFile the Filehandle of the tmx file
-	 * @param imageResolver the {@link ImageResolver}
-	 * @return the {@link TiledMap}
-	 */
-	private TiledMap loadMap(Element root, FileHandle tmxFile, ImageResolver imageResolver) {
-		TiledMap map = new TiledMap();
-		Element properties = root.getChildByName("properties");
-		if (properties != null) {
-			loadProperties(map.getProperties(), properties);
-		}
-		Element tilesheets = root.getChildByName("TileSheets");
-		for (Element tilesheet : tilesheets.getChildrenByName("TileSheet")) {
-			loadTileSheet(map, tilesheet, tmxFile, imageResolver);
-		}
-		Element layers = root.getChildByName("Layers");
-		for (Element layer : layers.getChildrenByName("Layer")) {
-			loadLayer(map, layer);
-		}
-		return map;
-	}
-	
-	/**
-	 * Loads the tilesets
-	 * @param root the root XML element
-	 * @return a list of filenames for images containing tiles
-	 * @throws IOException 
-	 */
-	private Array<FileHandle> loadTileSheets(Element root, FileHandle tideFile) throws IOException {
-		Array<FileHandle> images = new Array<FileHandle>();
-		Element tilesheets = root.getChildByName("TileSheets");
-		for (Element tileset : tilesheets.getChildrenByName("TileSheet")) {
-			Element imageSource = tileset.getChildByName("ImageSource");
-			FileHandle image = getRelativeFileHandle(tideFile, imageSource.getText());
-			images.add(image);
-		}
-		return images;
-	}
-	
-	private void loadTileSheet(TiledMap map, Element element, FileHandle tideFile, ImageResolver imageResolver) {
-		if (element.getName().equals("TileSheet")) {
-			String id = element.getAttribute("Id");
-			String description = element.getChildByName("Description").getText();
-			String imageSource = element.getChildByName("ImageSource").getText();
-			
-			Element alignment = element.getChildByName("Alignment");
-			String sheetSize = alignment.getAttribute("SheetSize");
-			String tileSize = alignment.getAttribute("TileSize");
-			String margin = alignment.getAttribute("Margin");
-			String spacing = alignment.getAttribute("Spacing");
-			
-			String[] sheetSizeParts = sheetSize.split(" x ");
-			int sheetSizeX = Integer.parseInt(sheetSizeParts[0]);
-			int sheetSizeY = Integer.parseInt(sheetSizeParts[1]);
-			
-			String[] tileSizeParts = tileSize.split(" x ");
-			int tileSizeX = Integer.parseInt(tileSizeParts[0]);
-			int tileSizeY = Integer.parseInt(tileSizeParts[1]);
-			
-			String[] marginParts = margin.split(" x ");
-			int marginX = Integer.parseInt(marginParts[0]);
-			int marginY = Integer.parseInt(marginParts[1]);
-
-			String[] spacingParts = margin.split(" x ");
-			int spacingX = Integer.parseInt(spacingParts[0]);
-			int spacingY = Integer.parseInt(spacingParts[1]);
-
-			FileHandle image = getRelativeFileHandle(tideFile, imageSource);
-			TextureRegion texture = imageResolver.getImage(image.path());
-			
-			// TODO: Actually load the tilesheet
-			// Need to make global ids as Tide doesn't have global ids.
-			TiledMapTileSets tilesets = map.getTileSets();
-			int firstgid = 1;
-			for (TiledMapTileSet tileset : tilesets) {
-				firstgid += tileset.size();
-			}
-			
-			TiledMapTileSet tileset = new TiledMapTileSet();
-			tileset.setName(id);
-			tileset.getProperties().put("firstgid", firstgid);
-			int gid = firstgid;
-			
-			int stopWidth = texture.getRegionWidth() - tileSizeX;
-			int stopHeight = texture.getRegionHeight() - tileSizeY;
-			
-			for (int y = marginY; y <= stopHeight; y += tileSizeY + spacingY) {
-				for (int x = marginX; x <= stopWidth; x += tileSizeX + spacingX) {
-					TiledMapTile tile = new StaticTiledMapTile(new TextureRegion(texture, x, y, tileSizeX, tileSizeY));
-					tile.setId(gid);
-					tileset.putTile(gid++, tile);
-				}
-			}
-			
-			Element properties = element.getChildByName("Properties");
-			if (properties != null) {
-				loadProperties(tileset.getProperties(), properties);
-			}
-			
-			tilesets.addTileSet(tileset);
-		}
-	}
-	
-	private void loadLayer(TiledMap map, Element element) {
-		if (element.getName().equals("Layer")) {
-			String id = element.getAttribute("Id");
-			String visible = element.getAttribute("Visible");
-			
-			Element dimensions = element.getChildByName("Dimensions");
-			String layerSize = dimensions.getAttribute("LayerSize");
-			String tileSize = dimensions.getAttribute("TileSize");
-			
-			String[] layerSizeParts = layerSize.split(" x ");
-			int layerSizeX = Integer.parseInt(layerSizeParts[0]);
-			int layerSizeY = Integer.parseInt(layerSizeParts[1]);
-			
-			String[] tileSizeParts = tileSize.split(" x ");
-			int tileSizeX = Integer.parseInt(tileSizeParts[0]);
-			int tileSizeY = Integer.parseInt(tileSizeParts[1]);
-			
-			TiledMapTileLayer layer = new TiledMapTileLayer(layerSizeX, layerSizeY, tileSizeX, tileSizeY);
-			Element tileArray = element.getChildByName("TileArray");
-			Array<Element> rows = tileArray.getChildrenByName("Row");
-			TiledMapTileSets tilesets = map.getTileSets();
-			TiledMapTileSet currentTileSet = null;
-			int firstgid = 0;
-			int x, y;
-			for (int row = 0, rowCount = rows.size; row < rowCount; row++) {
-				Element currentRow = rows.get(row);
-				y = rowCount -1 - row;
-				x = 0;
-				for (int child = 0, childCount = currentRow.getChildCount(); child < childCount; child++) {
-					Element currentChild = currentRow.getChild(child);
-					String name = currentChild.getName();
-					if (name.equals("TileSheet")) {
-						currentTileSet = tilesets.getTileSet(currentChild.getAttribute("Ref"));
-						firstgid = currentTileSet.getProperties().get("firstgid", Integer.class);
-					} else if (name.equals("Null")) {
-						x += currentChild.getIntAttribute("Count");
-					} else if (name.equals("Static")) {
-						Cell cell = new Cell();
-						cell.setTile(currentTileSet.getTile(firstgid + currentChild.getIntAttribute("Index")));
-						layer.setCell(x++, y, cell);
-					} else if (name.equals("Animated")) {
-						// Create an AnimatedTile
-						int interval = currentChild.getInt("Interval");
-						Element frames = currentChild.getChildByName("Frames");
-						Array<StaticTiledMapTile> frameTiles = new Array<StaticTiledMapTile>();
-						for (int frameChild = 0, frameChildCount = frames.getChildCount(); frameChild < frameChildCount; frameChild++) {
-							Element frame = frames.getChild(frameChild);
-							String frameName = frame.getName();
-							if (frameName.equals("TileSheet")) {
-								currentTileSet = tilesets.getTileSet(frame.getAttribute("Ref"));
-								firstgid = currentTileSet.getProperties().get("firstgid", Integer.class);
-							} else if (frameName.equals("Static")) {
-								frameTiles.add((StaticTiledMapTile) currentTileSet.getTile(firstgid + frame.getIntAttribute("Index")));
-							}
-						}
-						Cell cell = new Cell();
-						cell.setTile(new AnimatedTiledMapTile(interval / 1000f, frameTiles));
-						layer.setCell(x++, y, cell); //TODO: Reuse existing animated tiles
-					}
-				}
-			}
-			map.getLayers().add(layer);
-		}
-	}
-	
-	private void loadProperties(MapProperties properties, Element element) {
-		if (element.getName().equals("Properties")) {
-			for (Element property : element.getChildrenByName("Property")) {
-				String key = property.getAttribute("Key", null);
-				String type = property.getAttribute("Type", null);
-				String value = property.getText();
-				
-				if (type.equals("Int32")) {
-					properties.put(key, Integer.parseInt(value));
-				} else if (type.equals("String")) {
-					properties.put(key, value);
-				} else if (type.equals("Boolean")) {
-					properties.put(key, value.equalsIgnoreCase("true"));
-				} else {
-					properties.put(key, value);					
-				}
-			}
-		}
-	}
-	
-	private static FileHandle getRelativeFileHandle(FileHandle file, String path) {
-		StringTokenizer tokenizer = new StringTokenizer(path, "\\/");
-		FileHandle result = file.parent();
-		while (tokenizer.hasMoreElements()) {
-			String token = tokenizer.nextToken();
-			if (token.equals(".."))
-				result = result.parent();
-			else {
-				result = result.child(token);
-			}
-		}
-		return result;		
-	}
-
-}
diff --git a/gdx/src/com/badlogic/gdx/maps/tiled/TiledMap.java b/gdx/src/com/badlogic/gdx/maps/tiled/TiledMap.java
deleted file mode 100644
index 75a2b10..0000000
--- a/gdx/src/com/badlogic/gdx/maps/tiled/TiledMap.java
+++ /dev/null
@@ -1,49 +0,0 @@
-package com.badlogic.gdx.maps.tiled;
-
-import com.badlogic.gdx.assets.AssetManager;
-import com.badlogic.gdx.graphics.Texture;
-import com.badlogic.gdx.maps.Map;
-import com.badlogic.gdx.utils.Array;
-
-/**
- * @brief Represents a tiled map, adds the concept of tiles and tilesets
- * 
- * @see Map
- */
-public class TiledMap extends Map {
-	private TiledMapTileSets tilesets;
-	private Array<Texture> ownedTextures;
-	
-	/**
-	 * @return collection of tilesets for this map
-	 */
-	public TiledMapTileSets getTileSets() {
-		return tilesets;
-	}
-	
-	/**
-	 * Creates empty TiledMap
-	 */
-	public TiledMap() {
-		tilesets = new TiledMapTileSets();
-	}
-	
-	/**
-	 * Used by TmxMapLoader to set textures when loading the map
-	 * directly, without {@link AssetManager}. To be disposed in
-	 * {@link #dispose()}.
-	 * @param textures
-	 */
-	public void setOwnedTextures(Array<Texture> textures) {
-		this.ownedTextures = textures;
-	}
-	
-	@Override
-	public void dispose() {
-		if(ownedTextures != null) {
-			for(Texture texture: ownedTextures) {
-				texture.dispose();
-			}
-		}
-	}
-}
diff --git a/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapRenderer.java b/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapRenderer.java
deleted file mode 100644
index 759b478..0000000
--- a/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapRenderer.java
+++ /dev/null
@@ -1,13 +0,0 @@
-package com.badlogic.gdx.maps.tiled;
-
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.*;
-
-import com.badlogic.gdx.graphics.glutils.ShapeRenderer;
-import com.badlogic.gdx.maps.MapObject;
-import com.badlogic.gdx.maps.MapRenderer;
-import com.badlogic.gdx.math.Polygon;
-
-public interface TiledMapRenderer extends MapRenderer {
-	public void renderObject(MapObject object);
-	public void renderTileLayer(TiledMapTileLayer layer);
-}
\ No newline at end of file
diff --git a/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapTile.java b/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapTile.java
deleted file mode 100644
index 5434d34..0000000
--- a/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapTile.java
+++ /dev/null
@@ -1,42 +0,0 @@
-package com.badlogic.gdx.maps.tiled;
-
-import com.badlogic.gdx.graphics.g2d.TextureRegion;
-import com.badlogic.gdx.maps.MapProperties;
-
-/**
- * @brief Generalises the concept of tile in a TiledMap
- *
- */
-public interface TiledMapTile {
-
-	public enum BlendMode {
-		NONE,
-		ALPHA
-	}
-
-	public int getId();
-	public void setId(int id);
-	
-	/**
-	 * @return the {@link BlendMode} to use for rendering the tile
-	 */	
-	public BlendMode getBlendMode();
-	
-	/**
-	 * Sets the {@link BlendMode} to use for rendering the tile
-	 * 
-	 * @param blendMode the blend mode to use for rendering the tile
-	 */
-	public void setBlendMode(BlendMode blendMode);
-	
-	/**
-	 * @return texture region used to render the tile
-	 */
-	public TextureRegion getTextureRegion();
-
-	/**
-	 * @return tile's properties set
-	 */
-	public MapProperties getProperties();
-	
-}
diff --git a/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapTileLayer.java b/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapTileLayer.java
deleted file mode 100644
index d3eeb62..0000000
--- a/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapTileLayer.java
+++ /dev/null
@@ -1,170 +0,0 @@
-package com.badlogic.gdx.maps.tiled;
-
-import com.badlogic.gdx.maps.MapLayer;
-
-/**
- * @brief Layer for a TiledMap 
- */
-public class TiledMapTileLayer extends MapLayer {
-
-	private int width;
-	private int height;
-	
-	private float tileWidth;
-	private float tileHeight;
-	
-	private Cell[][] cells;
-	
-	/**
-	 * @return layer's witdth in tiles
-	 */
-	public int getWidth() {
-		return width;
-	}
-	
-	/**
-	 * @return layer's height in tiles
-	 */
-	public int getHeight() {
-		return height;
-	}
-	
-	/**
-	 * @return tiles' width in pixels
-	 */
-	public float getTileWidth() {
-		return tileWidth;
-	}
-	
-	/**
-	 * @return tiles' height in pixels
-	 */
-	public float getTileHeight() {
-		return tileHeight;
-	}
-	
-	/**
-	 * Creates TiledMap layer
-	 * 
-	 * @param width layer width in tiles
-	 * @param height layer height in tiles
-	 * @param tileWidth tile width in pixels
-	 * @param tileHeight tile height in pixels 
-	 */
-	public TiledMapTileLayer(int width, int height, int tileWidth, int tileHeight) {
-		super();
-		this.width = width;
-		this.height = height;
-		this.tileWidth = tileWidth;
-		this.tileHeight = tileHeight;
-		this.cells = new Cell[width][height];
-	}
-	
-	/**
-	 * @param x
-	 * @param y 
-	 * @return cell at (x, y)
-	 */
-	public Cell getCell(int x, int y) {
-		if(x < 0 || x >= width) return null;
-		if(y < 0 || y >= height) return null;
-		return cells[x][y];
-	}
-	
-	/**
-	 * Sets the {@link Cell} at the given coordinates.
-	 * @param x
-	 * @param y
-	 * @param cell
-	 */
-	public void setCell(int x, int y, Cell cell) {
-		if(x < 0 || x >= width) return;
-		if(y < 0 || y >= height) return;
-		cells[x][y] = cell;
-	}
-	
-	/**
-	 * @brief represents a cell in a TiledLayer: TiledMapTile, flip and rotation properties.
-	 */
-	public static class Cell {
-		
-		private TiledMapTile tile;
-		
-		private boolean flipHorizontally;
-		
-		private boolean flipVertically;
-		
-		private int rotation;
-		
-		/**
-		 * @return The tile currently assigned to this cell.
-		 */
-		public TiledMapTile getTile() {
-			return tile;
-		}
-		
-		/**
-		 * Sets the tile to be used for this cell.
-		 * 
-		 * @param tile
-		 */
-		public void setTile(TiledMapTile tile) {
-			this.tile = tile;
-		}
-
-		/**
-		 * @return Whether the tile should be flipped horizontally.
-		 */		
-		public boolean getFlipHorizontally() {
-			return flipHorizontally;
-		}
-		
-		/**
-		 * Sets whether to flip the tile horizontally.
-		 * 
-		 * @param flipHorizontally
-		 */
-		public void setFlipHorizontally(boolean flipHorizontally) {
-			this.flipHorizontally = flipHorizontally;
-		}
-		
-		/**
-		 * @return Whether the tile should be flipped vertically.
-		 */
-		public boolean getFlipVertically() {
-			return flipVertically;
-		}
-		
-		/**
-		 * Sets whether to flip the tile vertically.
-		 * 
-		 * @param flipVertically
-		 */
-		public void setFlipVertically(boolean flipVertically) {
-			this.flipVertically = flipVertically;
-		}
-		
-		/**
-		 * @return The rotation of this cell, in degrees.
-		 */
-		public int getRotation() {
-			return rotation;
-		}
-		
-		/**
-		 * Sets the rotation of this cell, in degrees.
-		 * 
-		 * @param rotation
-		 */
-		public void setRotation(int rotation) {
-			this.rotation = rotation;
-		}
-		
-		public static final int ROTATE_0 = 0;
-		public static final int ROTATE_90 = 1;
-		public static final int ROTATE_180 = 2;
-		public static final int ROTATE_270 = 3;
-		
-	}
-	
-}
diff --git a/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapTileSet.java b/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapTileSet.java
deleted file mode 100644
index ed5ff81..0000000
--- a/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapTileSet.java
+++ /dev/null
@@ -1,76 +0,0 @@
-package com.badlogic.gdx.maps.tiled;
-
-import com.badlogic.gdx.maps.MapProperties;
-import com.badlogic.gdx.utils.IntMap;
-
-/**
- * @brief Set of TiledMapTile instances used to compose a TiledMapLayer
- */
-public class TiledMapTileSet {
-	
-	private String name;
-	
-	private IntMap<TiledMapTile> tiles;
-
-	private MapProperties properties;
-
-	/**
-	 * @return tileset's name
-	 */
-	public String getName() {
-		return name;
-	}
-	
-	/**
-	 * @param name new name for the tileset
-	 */
-	public void setName(String name) {
-		this.name = name;
-	}
-	
-	/**
-	 * @return tileset's properties set
-	 */
-	public MapProperties getProperties() {
-		return properties;
-	}
-	
-	/**
-	 * Creates empty tileset
-	 */
-	public TiledMapTileSet() {
-		tiles = new IntMap<TiledMapTile>();
-		properties = new MapProperties();
-	}
-	
-	/**
-	 * @param id
-	 * @return tile matching id, null if it doesn't exist
-	 */
-	public TiledMapTile getTile(int id) {
-		return tiles.get(id);
-	}
-	
-	/**
-	 * Adds or replaces tile with that id
-	 * 
-	 * @param id
-	 * @param tile
-	 */
-	public void putTile(int id, TiledMapTile tile) {
-		tiles.put(id, tile);
-	}
-	
-	/**
-	 * @param id tile's id to be removed
-	 */
-	public void removeTile(int id) {
-		tiles.remove(id);
-	}
-
-	public int size() {
-		return tiles.size;
-	}
-	
-}
-
diff --git a/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapTileSets.java b/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapTileSets.java
deleted file mode 100644
index 82b8fa5..0000000
--- a/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapTileSets.java
+++ /dev/null
@@ -1,87 +0,0 @@
-package com.badlogic.gdx.maps.tiled;
-
-import java.util.Iterator;
-
-import com.badlogic.gdx.utils.Array;
-
-/**
- * @brief Collection of TiledMapTileSet
- */
-public class TiledMapTileSets implements Iterable<TiledMapTileSet> {
-	
-	private Array<TiledMapTileSet> tilesets;
-	
-	/**
-	 * Creates empty collection of tilesets
-	 */
-	public TiledMapTileSets() {
-		tilesets = new Array<TiledMapTileSet>();
-	}
-	
-	/**
-	 * @param index
-	 * @return tileset at index
-	 */
-	public TiledMapTileSet getTileSet(int index) {
-		return tilesets.get(index);
-	}
-	
-	/**
-	 * @param name
-	 * @return tileset with matching name, null if it doesn't exist
-	 */
-	public TiledMapTileSet getTileSet(String name) {
-		for (TiledMapTileSet tileset : tilesets) {
-			if (name.equals(tileset.getName())) {
-				return tileset;
-			}
-		}
-		return null;
-	}
-	
-	/**
-	 * @param tileset set to be added to the collection
-	 */
-	public void addTileSet(TiledMapTileSet tileset) {
-		tilesets.add(tileset);
-	}
-	
-	/**
-	 * Removes tileset at index
-	 * 
-	 * @param index
-	 */
-	public void removeTileSet(int index) {
-		tilesets.removeIndex(index);
-	}
-	
-	/**
-	 * @param tileset set to be removed
-	 */
-	public void removeTileSet(TiledMapTileSet tileset) {
-		tilesets.removeValue(tileset, true);
-	}
-	
-	/**
-	 * @param id
-	 * @return tile with matching id, null if it doesn't exist
-	 */
-	public TiledMapTile getTile(int id) {
-		for (TiledMapTileSet tileset : tilesets) {
-			TiledMapTile tile = tileset.getTile(id);
-			if (tile != null) {
-				return tile;
-			}
-		}
-		return null;
-	}
-	
-	/**
-	 * @return iterator to tilesets
-	 */
-	@Override
-	public Iterator<TiledMapTileSet> iterator() {
-		return tilesets.iterator();
-	}
-	
-}
diff --git a/gdx/src/com/badlogic/gdx/maps/tiled/TmxMapLoader.java b/gdx/src/com/badlogic/gdx/maps/tiled/TmxMapLoader.java
deleted file mode 100644
index 1941297..0000000
--- a/gdx/src/com/badlogic/gdx/maps/tiled/TmxMapLoader.java
+++ /dev/null
@@ -1,681 +0,0 @@
-package com.badlogic.gdx.maps.tiled;
-
-import java.io.ByteArrayInputStream;
-import java.io.IOException;
-import java.util.StringTokenizer;
-import java.util.zip.DataFormatException;
-import java.util.zip.GZIPInputStream;
-import java.util.zip.Inflater;
-
-import com.badlogic.gdx.assets.AssetDescriptor;
-import com.badlogic.gdx.assets.AssetLoaderParameters;
-import com.badlogic.gdx.assets.AssetManager;
-import com.badlogic.gdx.assets.loaders.FileHandleResolver;
-import com.badlogic.gdx.assets.loaders.SynchronousAssetLoader;
-import com.badlogic.gdx.assets.loaders.TextureLoader;
-import com.badlogic.gdx.assets.loaders.TextureLoader.TextureParameter;
-import com.badlogic.gdx.assets.loaders.resolvers.InternalFileHandleResolver;
-import com.badlogic.gdx.files.FileHandle;
-import com.badlogic.gdx.graphics.Texture;
-import com.badlogic.gdx.graphics.g2d.TextureRegion;
-import com.badlogic.gdx.maps.ImageResolver;
-import com.badlogic.gdx.maps.ImageResolver.AssetManagerImageResolver;
-import com.badlogic.gdx.maps.ImageResolver.DirectImageResolver;
-import com.badlogic.gdx.maps.MapLayer;
-import com.badlogic.gdx.maps.MapObject;
-import com.badlogic.gdx.maps.MapProperties;
-import com.badlogic.gdx.maps.objects.EllipseMapObject;
-import com.badlogic.gdx.maps.objects.PolygonMapObject;
-import com.badlogic.gdx.maps.objects.PolylineMapObject;
-import com.badlogic.gdx.maps.objects.RectangleMapObject;
-import com.badlogic.gdx.maps.tiled.TiledMapTileLayer.Cell;
-import com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile;
-import com.badlogic.gdx.math.Polygon;
-import com.badlogic.gdx.math.Polyline;
-import com.badlogic.gdx.utils.Array;
-import com.badlogic.gdx.utils.Base64Coder;
-import com.badlogic.gdx.utils.GdxRuntimeException;
-import com.badlogic.gdx.utils.ObjectMap;
-import com.badlogic.gdx.utils.XmlReader;
-import com.badlogic.gdx.utils.XmlReader.Element;
-
-/**
- * @brief synchronous loader for TMX maps created with the Tiled tool
- */
-public class TmxMapLoader extends SynchronousAssetLoader<TiledMap, TmxMapLoader.Parameters> {
-
-	public static class Parameters extends AssetLoaderParameters<TiledMap> {
-		/** Whether to load the map for a y-up coordinate system */
-		public boolean yUp = true;
-		/** generate mipmaps? **/
-		public boolean generateMipMaps = false;
-	}
-	
-	protected static final int FLAG_FLIP_HORIZONTALLY = 0x80000000;
-	protected static final int FLAG_FLIP_VERTICALLY = 0x40000000;
-	protected static final int FLAG_FLIP_DIAGONALLY = 0x20000000;
-	protected static final int MASK_CLEAR  = 0xE0000000;
-	
-	protected XmlReader xml = new XmlReader();
-	protected Element root;
-	protected boolean yUp;
-
-	protected int mapWidthInPixels;
-	protected int mapHeightInPixels;
-	
-	public TmxMapLoader() {
-		super(new InternalFileHandleResolver());
-	}
-	
-	/**
-	 * Creates loader 
-	 *  
-	 * @param resolver
-	 */
-	public TmxMapLoader(FileHandleResolver resolver) {
-		super(resolver);
-	}
-
-	/**
-	 * Loads the {@link TiledMap} from the given file. The file is
-	 * resolved via the {@link FileHandleResolver} set in the constructor
-	 * of this class. By default it will resolve to an internal file. The
-	 * map will be loaded for a y-up coordinate system.
-	 * @param fileName the filename
-	 * @return the TiledMap
-	 */
-	public TiledMap load(String fileName) {
-		return load(fileName, new TmxMapLoader.Parameters());
-	}
-
-	/**
-	 * Loads the {@link TiledMap} from the given file. The file is
-	 * resolved via the {@link FileHandleResolver} set in the constructor
-	 * of this class. By default it will resolve to an internal file.
-	 * @param fileName the filename
-	 * @param parameters specifies whether to use y-up, generate mip maps etc.
-	 * @return the TiledMap
-	 */
-	public TiledMap load(String fileName, TmxMapLoader.Parameters parameters) {
-		try {
-			this.yUp = parameters.yUp;
-			FileHandle tmxFile = resolve(fileName);
-			root = xml.parse(tmxFile);
-			ObjectMap<String, Texture> textures = new ObjectMap<String, Texture>();
-			for(FileHandle textureFile: loadTilesets(root, tmxFile)) {
-				textures.put(textureFile.path(), new Texture(textureFile, parameters.generateMipMaps));
-			}
-			DirectImageResolver imageResolver = new DirectImageResolver(textures);
-			TiledMap map = loadTilemap(root, tmxFile, imageResolver);
-			map.setOwnedTextures(textures.values().toArray());
-			return map;
-		} catch(IOException e) {
-			throw new GdxRuntimeException("Couldn't load tilemap '" + fileName + "'", e);
-		}
-	}
-	
-	@Override
-	public TiledMap load(AssetManager assetManager, String fileName, Parameters parameter) {
-		FileHandle tmxFile = resolve(fileName);
-		if (parameter != null) {
-			yUp = parameter.yUp;
-		} else {
-			yUp = true;
-		}
-		try {
-			return loadTilemap(root, tmxFile, new AssetManagerImageResolver(assetManager));
-		} catch (Exception e) {
-			throw new GdxRuntimeException("Couldn't load tilemap '" + fileName + "'", e);
-		}
-	}
-
-	/**
-	 * Retrieves TiledMap resource dependencies
-	 * 
-	 * @param fileName
-	 * @param parameter not used for now
-	 * @return dependencies for the given .tmx file
-	 */
-	@Override
-	public Array<AssetDescriptor> getDependencies(String fileName, Parameters parameter) {
-		Array<AssetDescriptor> dependencies = new Array<AssetDescriptor>();
-		try {
-			FileHandle tmxFile = resolve(fileName);
-			root = xml.parse(tmxFile);
-			boolean generateMipMaps = (parameter!=null?parameter.generateMipMaps: false);
-			TextureLoader.TextureParameter texParams = new TextureParameter();
-			texParams.genMipMaps = generateMipMaps;
-			for(FileHandle image: loadTilesets(root, tmxFile)) {
-				dependencies.add(new AssetDescriptor(image.path(), Texture.class, texParams));
-			}
-			return dependencies;
-		} catch (IOException e) {
-			throw new GdxRuntimeException("Couldn't load tilemap '" + fileName + "'", e);
-		}
-	}
-	
-	/**
-	 * Loads the map data, given the XML root element and an {@link ImageResolver} used
-	 * to return the tileset Textures
-	 * @param root the XML root element 
-	 * @param tmxFile the Filehandle of the tmx file
-	 * @param imageResolver the {@link ImageResolver}
-	 * @return the {@link TiledMap}
-	 */
-	protected TiledMap loadTilemap(Element root, FileHandle tmxFile, ImageResolver imageResolver) {
-		TiledMap map = new TiledMap();
-		
-		String mapOrientation = root.getAttribute("orientation", null);
-		int mapWidth = root.getIntAttribute("width", 0);
-		int mapHeight = root.getIntAttribute("height", 0);
-		int tileWidth = root.getIntAttribute("tilewidth", 0);
-		int tileHeight = root.getIntAttribute("tileheight", 0);
-		String mapBackgroundColor = root.getAttribute("backgroundcolor", null);
-		
-		MapProperties mapProperties = map.getProperties();
-		if (mapOrientation != null) {
-			mapProperties.put("orientation", mapBackgroundColor);
-		}
-		mapProperties.put("width", mapWidth);
-		mapProperties.put("height", mapHeight);
-		mapProperties.put("tilewidth", tileWidth);
-		mapProperties.put("tileheight", tileHeight);
-		if (mapBackgroundColor != null) {
-			mapProperties.put("backgroundcolor", mapBackgroundColor);
-		}
-		mapWidthInPixels = mapWidth * tileWidth;
-		mapHeightInPixels = mapHeight * tileHeight;
-		
-		Element properties = root.getChildByName("properties");
-		if (properties != null) {
-			loadProperties(map.getProperties(), properties);
-		}
-		Array<Element> tilesets = root.getChildrenByName("tileset");
-		for (Element element : tilesets) {
-			loadTileSet(map, element, tmxFile, imageResolver);
-			root.removeChild(element);
-		}
-		for (int i = 0, j = root.getChildCount(); i < j; i++) {
-			Element element = root.getChild(i);
-			String name = element.getName();
-			if (name.equals("layer")) {
-				loadTileLayer(map, element);
-			} else if (name.equals("objectgroup")) {
-				loadObjectGroup(map, element);
-			}
-		}
-		return map;
-	}
-	
-	/**
-	 * Loads the tilesets
-	 * @param root the root XML element
-	 * @return a list of filenames for images containing tiles
-	 * @throws IOException 
-	 */
-	protected Array<FileHandle> loadTilesets(Element root, FileHandle tmxFile) throws IOException {
-		Array<FileHandle> images = new Array<FileHandle>();
-		for (Element tileset : root.getChildrenByName("tileset")) {
-			String source = tileset.getAttribute("source", null);
-			FileHandle image = null;
-			if (source != null) {
-				FileHandle tsx = getRelativeFileHandle(tmxFile, source);
-				tileset = xml.parse(tsx);
-				String imageSource = tileset.getChildByName("image").getAttribute("source");
-				image = getRelativeFileHandle(tsx, imageSource);
-			} else {
-				String imageSource = tileset.getChildByName("image").getAttribute("source");
-				image = getRelativeFileHandle(tmxFile, imageSource);
-			}
-			images.add(image);
-		}
-		return images;
-	}
-
-	/**
-	 * Loads the specified tileset data, adding it to the collection of the specified map, given the XML element, the tmxFile 
-	 * and an {@link ImageResolver} used to retrieve the tileset Textures.
-	 *
-	 * <p>
-	 * Default tileset's property keys that are loaded by default are:
-	 * </p>
-	 *
-	 * <ul>
-	 * <li><em>firstgid</em>, (int, defaults to 1) the first valid global id used for tile numbering</li>
-	 * <li><em>imagesource</em>, (String, defaults to empty string) the tileset source image filename</li>
-	 * <li><em>imagewidth</em>, (int, defaults to 0) the tileset source image width</li>
-	 * <li><em>imageheight</em>, (int, defaults to 0) the tileset source image height</li>
-	 * <li><em>tilewidth</em>, (int, defaults to 0) the tile width</li>
-	 * <li><em>tileheight</em>, (int, defaults to 0) the tile height</li>
-	 * <li><em>margin</em>, (int, defaults to 0) the tileset margin</li>
-	 * <li><em>spacing</em>, (int, defaults to 0) the tileset spacing</li>
-	 * </ul>
-	 *
-	 * <p>
-	 * The values are extracted from the specified Tmx file, if a value can't be found then the default is used.
-	 * </p>
-	 * @param map the Map whose tilesets collection will be populated
-	 * @param element the XML element identifying the tileset to load
-	 * @param tmxFile the Filehandle of the tmx file
-	 * @param imageResolver the {@link ImageResolver}
-	 */
-
-	protected void loadTileSet(TiledMap map, Element element, FileHandle tmxFile, ImageResolver imageResolver) {
-		if (element.getName().equals("tileset")) {
-			String name = element.get("name", null);
-			int firstgid = element.getIntAttribute("firstgid", 1);
-			int tilewidth = element.getIntAttribute("tilewidth", 0);
-			int tileheight = element.getIntAttribute("tileheight", 0);
-			int spacing = element.getIntAttribute("spacing", 0);
-			int margin = element.getIntAttribute("margin", 0);			
-			String source = element.getAttribute("source", null);
-
-			String imageSource = "";
-			int imageWidth = 0, imageHeight = 0;
-
-			FileHandle image = null;
-			if (source != null) {
-				FileHandle tsx = getRelativeFileHandle(tmxFile, source);
-				try {
-					element = xml.parse(tsx);
-					name = element.get("name", null);
-					tilewidth = element.getIntAttribute("tilewidth", 0);
-					tileheight = element.getIntAttribute("tileheight", 0);
-					spacing = element.getIntAttribute("spacing", 0);
-					margin = element.getIntAttribute("margin", 0);
-					imageSource = element.getChildByName("image").getAttribute("source");
-					imageWidth = element.getChildByName("image").getIntAttribute("width", 0);
-					imageHeight = element.getChildByName("image").getIntAttribute("height", 0);
-					image = getRelativeFileHandle(tsx, imageSource);
-				} catch (IOException e) {
-					throw new GdxRuntimeException("Error parsing external tileset.");
-				}
-			} else {
-				imageSource = element.getChildByName("image").getAttribute("source");
-				imageWidth = element.getChildByName("image").getIntAttribute("width", 0);
-				imageHeight = element.getChildByName("image").getIntAttribute("height", 0);
-				image = getRelativeFileHandle(tmxFile, imageSource);
-			}
-
-			TextureRegion texture = imageResolver.getImage(image.path());
-
-			TiledMapTileSet tileset = new TiledMapTileSet();
-			MapProperties props = tileset.getProperties();
-			tileset.setName(name);
-			props.put("firstgid", firstgid);
-			props.put("imagesource", imageSource);
-			props.put("imagewidth", imageWidth);
-			props.put("imageheight", imageHeight);
-			props.put("tilewidth", tilewidth);
-			props.put("tileheight", tileheight);
-			props.put("margin", margin);
-			props.put("spacing", spacing);
-
-			int stopWidth = texture.getRegionWidth() - tilewidth;
-			int stopHeight = texture.getRegionHeight() - tileheight;
-
-			int id = firstgid;
-			
-			for (int y = margin; y <= stopHeight; y += tileheight + spacing) {
-				for (int x = margin; x <= stopWidth; x += tilewidth + spacing) {
-					TextureRegion tileRegion = new TextureRegion(texture, x, y, tilewidth, tileheight);
-					if (!yUp) {
-						tileRegion.flip(false, true);
-					}
-					TiledMapTile tile = new StaticTiledMapTile(tileRegion);
-					tile.setId(id);
-					tileset.putTile(id++, tile);
-				}
-			}
-			
-			Array<Element> tileElements = element.getChildrenByName("tile");
-			
-			for (Element tileElement : tileElements) {
-				int localtid = tileElement.getIntAttribute("id", 0);
-				TiledMapTile tile = tileset.getTile(firstgid + localtid);
-				if (tile!= null) {
-					Element properties = tileElement.getChildByName("properties");
-					if (properties != null) {
-						loadProperties(tile.getProperties(), properties);
-					}
-				}
-			}
-			
-			Element properties = element.getChildByName("properties");
-			if (properties != null) {
-				loadProperties(tileset.getProperties(), properties);
-			}
-			map.getTileSets().addTileSet(tileset);
-		}		
-	}
-	
-	protected void loadTileLayer(TiledMap map, Element element) {
-		if (element.getName().equals("layer")) {
-			String name = element.getAttribute("name", null);
-			int width = element.getIntAttribute("width", 0);
-			int height = element.getIntAttribute("height", 0);
-			int tileWidth = element.getParent().getIntAttribute("tilewidth", 0);
-			int tileHeight = element.getParent().getIntAttribute("tileheight", 0);
-			boolean visible = element.getIntAttribute("visible", 1) == 1;
-			float opacity = element.getFloatAttribute("opacity", 1.0f);
-			TiledMapTileLayer layer = new TiledMapTileLayer(width, height, tileWidth, tileHeight);
-			layer.setVisible(visible);
-			layer.setOpacity(opacity);
-			layer.setName(name);
-			
-			TiledMapTileSets tilesets = map.getTileSets();
-			
-			Element data = element.getChildByName("data");
-			String encoding = data.getAttribute("encoding", null);
-			String compression = data.getAttribute("compression", null);
-			if (encoding.equals("csv")) {
-				String[] array = data.getText().split(",");
-				for (int y = 0; y < height; y++) {
-					for (int x = 0; x < width; x++) {
-						int id = (int) Long.parseLong(array[y * width + x].trim());
-						
-						final boolean flipHorizontally = ((id & FLAG_FLIP_HORIZONTALLY) != 0);
-						final boolean flipVertically = ((id & FLAG_FLIP_VERTICALLY) != 0);
-						final boolean flipDiagonally = ((id & FLAG_FLIP_DIAGONALLY) != 0);
-
-						id = id & ~MASK_CLEAR;
-						
-						tilesets.getTile(id);
-						TiledMapTile tile = tilesets.getTile(id);
-						if (tile != null) {
-							Cell cell = new Cell();
-							if (flipDiagonally) {
-								if (flipHorizontally && flipVertically) {
-									cell.setFlipHorizontally(true);
-									cell.setRotation(Cell.ROTATE_270);
-								} else if (flipHorizontally) {
-									cell.setRotation(Cell.ROTATE_270);
-								} else if (flipVertically) {
-									cell.setRotation(Cell.ROTATE_90);
-								} else {
-									cell.setFlipVertically(true);
-									cell.setRotation(Cell.ROTATE_270);
-								}
-							} else {
-								cell.setFlipHorizontally(flipHorizontally);
-								cell.setFlipVertically(flipVertically);
-							}
-							cell.setTile(tile);
-							layer.setCell(x, yUp ? height - 1 - y : y, cell);
-						}
-					}
-				}
-			} else {
-				if(encoding.equals("base64")) {
-					byte[] bytes = Base64Coder.decode(data.getText());
-					if (compression == null) {
-						int read = 0;
-						for (int y = 0; y < height; y++) {
-							for (int x = 0; x < width; x++) {
-								
-								int id =
-								unsignedByteToInt(bytes[read++]) |
-								unsignedByteToInt(bytes[read++]) << 8 |
-								unsignedByteToInt(bytes[read++]) << 16 |
-								unsignedByteToInt(bytes[read++]) << 24;
-								
-								final boolean flipHorizontally = ((id & FLAG_FLIP_HORIZONTALLY) != 0);
-								final boolean flipVertically = ((id & FLAG_FLIP_VERTICALLY) != 0);
-								final boolean flipDiagonally = ((id & FLAG_FLIP_DIAGONALLY) != 0);
-
-								id = id & ~MASK_CLEAR;
-								
-								tilesets.getTile(id);
-								TiledMapTile tile = tilesets.getTile(id);
-								if (tile != null) {
-									Cell cell = new Cell();
-									if (flipDiagonally) {
-										if (flipHorizontally && flipVertically) {
-											cell.setFlipHorizontally(true);
-											cell.setRotation(Cell.ROTATE_270);
-										} else if (flipHorizontally) {
-											cell.setRotation(Cell.ROTATE_270);
-										} else if (flipVertically) {
-											cell.setRotation(Cell.ROTATE_90);
-										} else {
-											cell.setFlipVertically(true);
-											cell.setRotation(Cell.ROTATE_270);
-										}
-									} else {
-										cell.setFlipHorizontally(flipHorizontally);
-										cell.setFlipVertically(flipVertically);
-									}
-									cell.setTile(tile);
-									layer.setCell(x, yUp ? height - 1 - y : y, cell);
-								}
-							}
-						}
-					} else if (compression.equals("gzip")) {
-						GZIPInputStream GZIS = null;
-						try {
-							GZIS = new GZIPInputStream(new ByteArrayInputStream(bytes), bytes.length);
-						} catch (IOException e) {
-							throw new GdxRuntimeException("Error Reading TMX Layer Data - IOException: " + e.getMessage());
-						}
-
-						byte[] temp = new byte[4];
-						for (int y = 0; y < height; y++) {
-							for (int x = 0; x < width; x++) {
-								try {
-									GZIS.read(temp, 0, 4);
-									int id =
-									unsignedByteToInt(temp[0]) |
-									unsignedByteToInt(temp[1]) << 8 |
-									unsignedByteToInt(temp[2]) << 16 |
-									unsignedByteToInt(temp[3]) << 24;
-
-									final boolean flipHorizontally = ((id & FLAG_FLIP_HORIZONTALLY) != 0);
-									final boolean flipVertically = ((id & FLAG_FLIP_VERTICALLY) != 0);
-									final boolean flipDiagonally = ((id & FLAG_FLIP_DIAGONALLY) != 0);
-
-									id = id & ~MASK_CLEAR;
-									
-									tilesets.getTile(id);
-									TiledMapTile tile = tilesets.getTile(id);
-									if (tile != null) {
-										Cell cell = new Cell();
-										if (flipDiagonally) {
-											if (flipHorizontally && flipVertically) {
-												cell.setFlipHorizontally(true);
-												cell.setRotation(Cell.ROTATE_270);
-											} else if (flipHorizontally) {
-												cell.setRotation(Cell.ROTATE_270);
-											} else if (flipVertically) {
-												cell.setRotation(Cell.ROTATE_90);
-											} else {
-												cell.setFlipVertically(true);
-												cell.setRotation(Cell.ROTATE_270);
-											}
-										} else {
-											cell.setFlipHorizontally(flipHorizontally);
-											cell.setFlipVertically(flipVertically);
-										}
-										cell.setTile(tile);
-										layer.setCell(x, yUp ? height - 1 - y : y, cell);
-									}
-								} catch (IOException e) {
-									throw new GdxRuntimeException("Error Reading TMX Layer Data.", e);
-								}
-							}
-						}
-					} else if (compression.equals("zlib")) {
-						Inflater zlib = new Inflater();
-						
-						byte[] temp = new byte[4];
-
-						zlib.setInput(bytes, 0, bytes.length);
-
-						for (int y = 0; y < height; y++) {
-							for (int x = 0; x < width; x++) {
-								try {
-									zlib.inflate(temp, 0, 4);
-									int id =
-									unsignedByteToInt(temp[0]) |
-									unsignedByteToInt(temp[1]) << 8 |
-									unsignedByteToInt(temp[2]) << 16 |
-									unsignedByteToInt(temp[3]) << 24;
-									
-									final boolean flipHorizontally = ((id & FLAG_FLIP_HORIZONTALLY) != 0);
-									final boolean flipVertically = ((id & FLAG_FLIP_VERTICALLY) != 0);
-									final boolean flipDiagonally = ((id & FLAG_FLIP_DIAGONALLY) != 0);
-
-									id = id & ~MASK_CLEAR;
-									
-									tilesets.getTile(id);
-									TiledMapTile tile = tilesets.getTile(id);
-									if (tile != null) {
-										Cell cell = new Cell();
-										if (flipDiagonally) {
-											if (flipHorizontally && flipVertically) {
-												cell.setFlipHorizontally(true);
-												cell.setRotation(Cell.ROTATE_270);
-											} else if (flipHorizontally) {
-												cell.setRotation(Cell.ROTATE_270);
-											} else if (flipVertically) {
-												cell.setRotation(Cell.ROTATE_90);
-											} else {
-												cell.setFlipVertically(true);
-												cell.setRotation(Cell.ROTATE_270);
-											}
-										} else {
-											cell.setFlipHorizontally(flipHorizontally);
-											cell.setFlipVertically(flipVertically);
-										}
-										cell.setTile(tile);
-										layer.setCell(x, yUp ? height - 1 - y : y, cell);
-									}
-			
-								} catch (DataFormatException e) {
-									throw new GdxRuntimeException("Error Reading TMX Layer Data.", e);
-								}
-							}
-						}
-					}
-				}
-			}
-			Element properties = element.getChildByName("properties");
-			if (properties != null) {
-				loadProperties(layer.getProperties(), properties);
-			}
-			map.getLayers().add(layer);
-		}		
-	}
-	
-	protected void loadObjectGroup(TiledMap map, Element element) {
-		if (element.getName().equals("objectgroup")) {
-			String name = element.getAttribute("name", null);
-			MapLayer layer = new MapLayer();
-			layer.setName(name);
-			Element properties = element.getChildByName("properties");
-			if (properties != null) {
-				loadProperties(layer.getProperties(), properties);
-			}
-			
-			for (Element objectElement : element.getChildrenByName("object")) {
-				loadObject(layer, objectElement);
-			}
-
-			map.getLayers().add(layer);
-		}
-	}
-	
-	protected void loadObject(MapLayer layer, Element element) {
-		if (element.getName().equals("object")) {
-			MapObject object = null;
-			
-			int x = element.getIntAttribute("x", 0);
-			int y = (yUp ? mapHeightInPixels - element.getIntAttribute("y", 0) : element.getIntAttribute("y", 0));
-
-			int width = element.getIntAttribute("width", 0);
-			int height = element.getIntAttribute("height", 0);
-			
-			if (element.getChildCount() > 0) {
-				Element child = null;
-				if ((child = element.getChildByName("polygon")) != null) {
-					String[] points = child.getAttribute("points").split(" ");
-					float[] vertices = new float[points.length * 2];
-					for (int i = 0; i < points.length; i++) {
-						String[] point = points[i].split(",");
-						vertices[i * 2] = Integer.parseInt(point[0]);
-						vertices[i * 2 + 1] = Integer.parseInt(point[1]);
-						if (yUp) {
-							vertices[i * 2 + 1] *= -1;
-						}
-					}
-					Polygon polygon = new Polygon(vertices);
-					polygon.setPosition(x, y);
-					object = new PolygonMapObject(polygon);
-				} else if ((child = element.getChildByName("polyline")) != null) {
-					String[] points = child.getAttribute("points").split(" ");
-					float[] vertices = new float[points.length * 2];
-					for (int i = 0; i < points.length; i++) {
-						String[] point = points[i].split(",");
-						vertices[i * 2] = Integer.parseInt(point[0]);
-						vertices[i * 2 + 1] = Integer.parseInt(point[1]);
-						if (yUp) {
-							vertices[i * 2 + 1] *= -1;
-						}
-					}
-					Polyline polyline = new Polyline(vertices);
-					polyline.setPosition(x, y);
-					object = new PolylineMapObject(polyline);
-				} else if ((child = element.getChildByName("ellipse")) != null) {
-					object = new EllipseMapObject(x, yUp ? y - height : y, width, height);
-				}
-			}
-			if (object == null) {
-				object = new RectangleMapObject(x, yUp ? y - height : y, width, height);
-			}
-			object.setName(element.getAttribute("name", null));
-			String type = element.getAttribute("type", null);
-			if (type != null) {
-				object.getProperties().put("type", type);
-			}
-			object.getProperties().put("x", x);
-			object.getProperties().put("y", yUp ? y - height : y);
-			object.setVisible(element.getIntAttribute("visible", 1) == 1);
-			Element properties = element.getChildByName("properties");
-			if (properties != null) {
-				loadProperties(object.getProperties(), properties);
-			}
-			layer.getObjects().add(object);
-		}
-	}
-	
-	protected void loadProperties(MapProperties properties, Element element) {
-		if (element.getName().equals("properties")) {
-			for (Element property : element.getChildrenByName("property")) {
-				String name = property.getAttribute("name", null);
-				String value = property.getAttribute("value", null);
-				if (value == null) {
-					value = property.getText();
-				}
-				properties.put(name, value);
-			}
-		}
-	}
-	
-	protected static FileHandle getRelativeFileHandle(FileHandle file, String path) {
-		StringTokenizer tokenizer = new StringTokenizer(path, "\\/");
-		FileHandle result = file.parent();
-		while (tokenizer.hasMoreElements()) {
-			String token = tokenizer.nextToken();
-			if (token.equals(".."))
-				result = result.parent();
-			else {
-				result = result.child(token);
-			}
-		}
-		return result;		
-	}
-	
-	protected static int unsignedByteToInt (byte b) {
-		return (int) b & 0xFF;
-	}
-
-}
diff --git a/gdx/src/com/badlogic/gdx/maps/tiled/renderers/BatchTiledMapRenderer.java b/gdx/src/com/badlogic/gdx/maps/tiled/renderers/BatchTiledMapRenderer.java
deleted file mode 100755
index b4d7188..0000000
--- a/gdx/src/com/badlogic/gdx/maps/tiled/renderers/BatchTiledMapRenderer.java
+++ /dev/null
@@ -1,108 +0,0 @@
-package com.badlogic.gdx.maps.tiled.renderers;
-
-import com.badlogic.gdx.graphics.OrthographicCamera;
-import com.badlogic.gdx.graphics.g2d.SpriteBatch;
-import com.badlogic.gdx.maps.MapLayer;
-import com.badlogic.gdx.maps.MapObject;
-import com.badlogic.gdx.maps.tiled.TiledMap;
-import com.badlogic.gdx.maps.tiled.TiledMapRenderer;
-import com.badlogic.gdx.maps.tiled.TiledMapTileLayer;
-import com.badlogic.gdx.math.Matrix4;
-import com.badlogic.gdx.math.Rectangle;
-import com.badlogic.gdx.utils.Disposable;
-
-public abstract class BatchTiledMapRenderer implements TiledMapRenderer, Disposable {
-	
-	protected TiledMap map;
-
-	protected float unitScale;
-	
-	protected SpriteBatch spriteBatch;
-	
-	protected Rectangle viewBounds; 
-
-	public TiledMap getMap() {
-		return map;			
-	}
-	
-	public float getUnitScale() {
-		return unitScale;
-	}
-	
-	public SpriteBatch getSpriteBatch() {
-		return spriteBatch;
-	}
-
-	public Rectangle getViewBounds() {
-		return viewBounds;
-	}
-	
-	public BatchTiledMapRenderer(TiledMap map) {
-		this.map = map;
-		this.unitScale = 1;
-		this.spriteBatch = new SpriteBatch();
-		this.viewBounds = new Rectangle();
-	}
-	
-	public BatchTiledMapRenderer(TiledMap map, float unitScale) {
-		this.map = map;
-		this.unitScale = unitScale;
-		this.viewBounds = new Rectangle();
-		this.spriteBatch = new SpriteBatch();
-	}
-	
-	@Override
-	public void setView(OrthographicCamera camera) {
-		spriteBatch.setProjectionMatrix(camera.combined);
-		float width = camera.viewportWidth * camera.zoom;
-		float height = camera.viewportHeight * camera.zoom;
-		viewBounds.set(camera.position.x - width / 2, camera.position.y - height / 2, width, height);
-	}
-	
-	@Override
-	public void setView (Matrix4 projection, float x, float y, float width, float height) {
-		spriteBatch.setProjectionMatrix(projection);
-		viewBounds.set(x, y, width, height);
-	}
-	
-	@Override
-	public void render () {
-		spriteBatch.begin();
-		for (MapLayer layer : map.getLayers()) {
-			if (layer.isVisible()) {
-				if (layer instanceof TiledMapTileLayer) {
-					renderTileLayer((TiledMapTileLayer) layer);
-				} else {
-					for (MapObject object : layer.getObjects()) {
-						renderObject(object);
-					}
-				}					
-			}				
-		}
-		spriteBatch.end();
-	}
-	
-	@Override
-	public void render (int[] layers) {
-		spriteBatch.begin();
-		for (int layerIdx : layers) {
-			MapLayer layer = map.getLayers().get(layerIdx);
-			if (layer.isVisible()) {
-				if (layer instanceof TiledMapTileLayer) {
-					renderTileLayer((TiledMapTileLayer) layer);
-				} else {
-					for (MapObject object : layer.getObjects()) {
-						renderObject(object);
-					}
-				}					
-			}				
-		}		
-		spriteBatch.end();
-	}
-
-	@Override
-	public void dispose () {
-		spriteBatch.dispose();
-	}
-	
-}
\ No newline at end of file
diff --git a/gdx/src/com/badlogic/gdx/maps/tiled/renderers/IsometricTiledMapRenderer.java b/gdx/src/com/badlogic/gdx/maps/tiled/renderers/IsometricTiledMapRenderer.java
deleted file mode 100755
index 56b770f..0000000
--- a/gdx/src/com/badlogic/gdx/maps/tiled/renderers/IsometricTiledMapRenderer.java
+++ /dev/null
@@ -1,186 +0,0 @@
-package com.badlogic.gdx.maps.tiled.renderers;
-
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.C1;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.C2;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.C3;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.C4;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.U1;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.U2;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.U3;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.U4;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.V1;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.V2;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.V3;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.V4;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.X1;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.X2;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.X3;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.X4;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.Y1;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.Y2;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.Y3;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.Y4;
-
-import com.badlogic.gdx.graphics.Color;
-import com.badlogic.gdx.graphics.g2d.TextureRegion;
-import com.badlogic.gdx.maps.MapObject;
-import com.badlogic.gdx.maps.tiled.TiledMap;
-import com.badlogic.gdx.maps.tiled.TiledMapTile;
-import com.badlogic.gdx.maps.tiled.TiledMapTileLayer;
-import com.badlogic.gdx.maps.tiled.TiledMapTileLayer.Cell;
-
-public class IsometricTiledMapRenderer extends  BatchTiledMapRenderer {
-
-	private TiledMap map;
-	
-	private float[] vertices = new float[20];
-	
-	public IsometricTiledMapRenderer(TiledMap map) {
-		super(map);
-	}
-	
-	public IsometricTiledMapRenderer(TiledMap map, float unitScale) {
-		super(map, unitScale);
-	}	
-	
-	@Override
-	public void renderObject (MapObject object) {
-		
-	}
-	
-	@Override
-	public void renderTileLayer (TiledMapTileLayer layer) {
-
-		final float color = Color.toFloatBits(1, 1, 1, layer.getOpacity());
-		
-		int col1 = 0;
-		int col2 = layer.getWidth() - 1;
-		
-		int row1 = 0;
-		int row2 = layer.getHeight() - 1;
-		
-		float tileWidth = layer.getTileWidth() * unitScale;
-		float tileHeight = layer.getTileHeight() * unitScale;
-		float halfTileWidth = tileWidth * 0.5f;
-		float halfTileHeight = tileHeight * 0.5f;
-		
-		for (int row = row2; row >= row1; row--) {
-			for (int col = col1; col <= col2; col++) {
-				float x = (col * halfTileWidth) + (row * halfTileWidth);
-				float y = (row * halfTileHeight) - (col * halfTileHeight);
-
-				final TiledMapTileLayer.Cell cell = layer.getCell(col, row);
-				if(cell == null) continue;
-				final TiledMapTile tile = cell.getTile();
-				if (tile != null) {
-					
-					final boolean flipX = cell.getFlipHorizontally();
-					final boolean flipY = cell.getFlipVertically();
-					final int rotations = cell.getRotation();
-					
-					TextureRegion region = tile.getTextureRegion();
-					
-					float x1 = x;
-					float y1 = y;
-					float x2 = x1 + region.getRegionWidth() * unitScale;
-					float y2 = y1 + region.getRegionHeight() * unitScale;
-					
-					float u1 = region.getU();
-					float v1 = region.getV2();
-					float u2 = region.getU2();
-					float v2 = region.getV();
-					
-					vertices[X1] = x1;
-					vertices[Y1] = y1;
-					vertices[C1] = color;
-					vertices[U1] = u1;
-					vertices[V1] = v1;
-					
-					vertices[X2] = x1;
-					vertices[Y2] = y2;
-					vertices[C2] = color;
-					vertices[U2] = u1;
-					vertices[V2] = v2;
-					
-					vertices[X3] = x2;
-					vertices[Y3] = y2;
-					vertices[C3] = color;
-					vertices[U3] = u2;
-					vertices[V3] = v2;
-					
-					vertices[X4] = x2;
-					vertices[Y4] = y1;
-					vertices[C4] = color;
-					vertices[U4] = u2;
-					vertices[V4] = v1;							
-					
-					if (flipX) {
-						float temp = vertices[U1];
-						vertices[U1] = vertices[U3];
-						vertices[U3] = temp;
-						temp = vertices[U2];
-						vertices[U2] = vertices[U4];
-						vertices[U4] = temp;
-					}
-					if (flipY) {
-						float temp = vertices[V1];
-						vertices[V1] = vertices[V3];
-						vertices[V3] = temp;
-						temp = vertices[V2];
-						vertices[V2] = vertices[V4];
-						vertices[V4] = temp;
-					}
-					if (rotations != 0) {
-						switch (rotations) {
-							case Cell.ROTATE_90: {
-								float tempV = vertices[V1];
-								vertices[V1] = vertices[V2];
-								vertices[V2] = vertices[V3];
-								vertices[V3] = vertices[V4];
-								vertices[V4] = tempV;
-
-								float tempU = vertices[U1];
-								vertices[U1] = vertices[U2];
-								vertices[U2] = vertices[U3];
-								vertices[U3] = vertices[U4];
-								vertices[U4] = tempU;									
-								break;
-							}
-							case Cell.ROTATE_180: {
-								float tempU = vertices[U1];
-								vertices[U1] = vertices[U3];
-								vertices[U3] = tempU;
-								tempU = vertices[U2];
-								vertices[U2] = vertices[U4];
-								vertices[U4] = tempU;									
-								float tempV = vertices[V1];
-								vertices[V1] = vertices[V3];
-								vertices[V3] = tempV;
-								tempV = vertices[V2];
-								vertices[V2] = vertices[V4];
-								vertices[V4] = tempV;
-								break;
-							}
-							case Cell.ROTATE_270: {
-								float tempV = vertices[V1];
-								vertices[V1] = vertices[V4];
-								vertices[V4] = vertices[V3];
-								vertices[V3] = vertices[V2];
-								vertices[V2] = tempV;
-
-								float tempU = vertices[U1];
-								vertices[U1] = vertices[U4];
-								vertices[U4] = vertices[U3];
-								vertices[U3] = vertices[U2];
-								vertices[U2] = tempU;									
-								break;
-							}
-						}								
-					}
-					spriteBatch.draw(region.getTexture(), vertices, 0, 20);
-				}					
-			}
-		}
-	}
-	
-}
\ No newline at end of file
diff --git a/gdx/src/com/badlogic/gdx/maps/tiled/renderers/OrthogonalTiledMapRenderer.java b/gdx/src/com/badlogic/gdx/maps/tiled/renderers/OrthogonalTiledMapRenderer.java
deleted file mode 100755
index da6b5b0..0000000
--- a/gdx/src/com/badlogic/gdx/maps/tiled/renderers/OrthogonalTiledMapRenderer.java
+++ /dev/null
@@ -1,194 +0,0 @@
-package com.badlogic.gdx.maps.tiled.renderers;
-
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.C1;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.C2;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.C3;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.C4;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.U1;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.U2;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.U3;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.U4;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.V1;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.V2;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.V3;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.V4;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.X1;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.X2;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.X3;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.X4;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.Y1;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.Y2;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.Y3;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.Y4;
-
-import com.badlogic.gdx.graphics.Color;
-import com.badlogic.gdx.graphics.g2d.TextureRegion;
-import com.badlogic.gdx.maps.MapObject;
-import com.badlogic.gdx.maps.tiled.TiledMap;
-import com.badlogic.gdx.maps.tiled.TiledMapTile;
-import com.badlogic.gdx.maps.tiled.TiledMapTileLayer;
-import com.badlogic.gdx.maps.tiled.TiledMapTileLayer.Cell;
-import com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile;
-
-public class OrthogonalTiledMapRenderer extends BatchTiledMapRenderer {
-	
-	private float[] vertices = new float[20];
-	
-	public OrthogonalTiledMapRenderer(TiledMap map) {
-		super(map);
-	}
-
-	public OrthogonalTiledMapRenderer(TiledMap map, float unitScale) {
-		super(map, unitScale);
-	}		
-	
-	@Override
-	public void renderObject (MapObject object) {
-		
-	}
-
-	@Override
-	public void renderTileLayer (TiledMapTileLayer layer) {
-		
-		final float color = Color.toFloatBits(1, 1, 1, layer.getOpacity());
-		
-		final int layerWidth = layer.getWidth();
-		final int layerHeight = layer.getHeight();
-		
-		final float layerTileWidth = layer.getTileWidth() * unitScale;
-		final float layerTileHeight = layer.getTileHeight() * unitScale;
-		
-		final int col1 = Math.max(0, (int) (viewBounds.x / layerTileWidth));
-		final int col2 = Math.min(layerWidth, (int) ((viewBounds.x + viewBounds.width + layerTileWidth) / layerTileWidth));
-
-		final int row1 = Math.max(0, (int) (viewBounds.y / layerTileHeight));
-		final int row2 = Math.min(layerHeight, (int) ((viewBounds.y + viewBounds.height + layerTileHeight) / layerTileHeight));				
-		
-		float y = row1 * layerTileHeight;
-		float xStart = col1 * layerTileWidth;
-		final float[] vertices = this.vertices;
-		
-		for (int row = row1; row < row2; row++) {
-			float x = xStart;
-			for (int col = col1; col < col2; col++) {
-				final TiledMapTileLayer.Cell cell = layer.getCell(col, row);
-				if(cell == null) {
-					x += layerTileWidth;
-					continue;
-				}
-				final TiledMapTile tile = cell.getTile();
-				if (tile != null) {
-					if (tile instanceof AnimatedTiledMapTile) continue;
-					
-					final boolean flipX = cell.getFlipHorizontally();
-					final boolean flipY = cell.getFlipVertically();
-					final int rotations = cell.getRotation();
-					
-					TextureRegion region = tile.getTextureRegion();
-					
-					float x1 = x;
-					float y1 = y;
-					float x2 = x1 + region.getRegionWidth() * unitScale;
-					float y2 = y1 + region.getRegionHeight() * unitScale;
-					
-					float u1 = region.getU();
-					float v1 = region.getV2();
-					float u2 = region.getU2();
-					float v2 = region.getV();
-					
-					vertices[X1] = x1;
-					vertices[Y1] = y1;
-					vertices[C1] = color;
-					vertices[U1] = u1;
-					vertices[V1] = v1;
-					
-					vertices[X2] = x1;
-					vertices[Y2] = y2;
-					vertices[C2] = color;
-					vertices[U2] = u1;
-					vertices[V2] = v2;
-					
-					vertices[X3] = x2;
-					vertices[Y3] = y2;
-					vertices[C3] = color;
-					vertices[U3] = u2;
-					vertices[V3] = v2;
-					
-					vertices[X4] = x2;
-					vertices[Y4] = y1;
-					vertices[C4] = color;
-					vertices[U4] = u2;
-					vertices[V4] = v1;							
-					
-					if (flipX) {
-						float temp = vertices[U1];
-						vertices[U1] = vertices[U3];
-						vertices[U3] = temp;
-						temp = vertices[U2];
-						vertices[U2] = vertices[U4];
-						vertices[U4] = temp;
-					}
-					if (flipY) {
-						float temp = vertices[V1];
-						vertices[V1] = vertices[V3];
-						vertices[V3] = temp;
-						temp = vertices[V2];
-						vertices[V2] = vertices[V4];
-						vertices[V4] = temp;
-					}
-					if (rotations != 0) {
-						switch (rotations) {
-							case Cell.ROTATE_90: {
-								float tempV = vertices[V1];
-								vertices[V1] = vertices[V2];
-								vertices[V2] = vertices[V3];
-								vertices[V3] = vertices[V4];
-								vertices[V4] = tempV;
-
-								float tempU = vertices[U1];
-								vertices[U1] = vertices[U2];
-								vertices[U2] = vertices[U3];
-								vertices[U3] = vertices[U4];
-								vertices[U4] = tempU;									
-								break;
-							}
-							case Cell.ROTATE_180: {
-								float tempU = vertices[U1];
-								vertices[U1] = vertices[U3];
-								vertices[U3] = tempU;
-								tempU = vertices[U2];
-								vertices[U2] = vertices[U4];
-								vertices[U4] = tempU;									
-								float tempV = vertices[V1];
-								vertices[V1] = vertices[V3];
-								vertices[V3] = tempV;
-								tempV = vertices[V2];
-								vertices[V2] = vertices[V4];
-								vertices[V4] = tempV;
-								break;
-							}
-							case Cell.ROTATE_270: {
-								float tempV = vertices[V1];
-								vertices[V1] = vertices[V4];
-								vertices[V4] = vertices[V3];
-								vertices[V3] = vertices[V2];
-								vertices[V2] = tempV;
-
-								float tempU = vertices[U1];
-								vertices[U1] = vertices[U4];
-								vertices[U4] = vertices[U3];
-								vertices[U3] = vertices[U2];
-								vertices[U2] = tempU;									
-								break;
-							}
-						}								
-					}
-					spriteBatch.draw(region.getTexture(), vertices, 0, 20);
-					x += layerTileWidth;
-				}
-			}
-			y += layerTileHeight;
-		}			
-	}
-	
-}
\ No newline at end of file
diff --git a/gdx/src/com/badlogic/gdx/maps/tiled/renderers/OrthogonalTiledMapRenderer2.java b/gdx/src/com/badlogic/gdx/maps/tiled/renderers/OrthogonalTiledMapRenderer2.java
deleted file mode 100755
index 8ba4f99..0000000
--- a/gdx/src/com/badlogic/gdx/maps/tiled/renderers/OrthogonalTiledMapRenderer2.java
+++ /dev/null
@@ -1,290 +0,0 @@
-package com.badlogic.gdx.maps.tiled.renderers;
-
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.C1;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.C2;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.C3;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.C4;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.U1;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.U2;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.U3;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.U4;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.V1;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.V2;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.V3;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.V4;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.X1;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.X2;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.X3;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.X4;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.Y1;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.Y2;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.Y3;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.Y4;
-
-import com.badlogic.gdx.Gdx;
-import com.badlogic.gdx.graphics.Color;
-import com.badlogic.gdx.graphics.GL10;
-import com.badlogic.gdx.graphics.GL11;
-import com.badlogic.gdx.graphics.OrthographicCamera;
-import com.badlogic.gdx.graphics.g2d.SpriteCache;
-import com.badlogic.gdx.graphics.g2d.TextureRegion;
-import com.badlogic.gdx.maps.MapLayer;
-import com.badlogic.gdx.maps.MapObject;
-import com.badlogic.gdx.maps.tiled.TiledMap;
-import com.badlogic.gdx.maps.tiled.TiledMapRenderer;
-import com.badlogic.gdx.maps.tiled.TiledMapTile;
-import com.badlogic.gdx.maps.tiled.TiledMapTileLayer;
-import com.badlogic.gdx.maps.tiled.TiledMapTileLayer.Cell;
-import com.badlogic.gdx.math.Matrix4;
-import com.badlogic.gdx.math.Rectangle;
-import com.badlogic.gdx.utils.Disposable;
-
-public class OrthogonalTiledMapRenderer2 implements TiledMapRenderer, Disposable {
-
-	protected TiledMap map;
-
-	protected float unitScale;
-	
-	protected SpriteCache spriteCache;
-	
-	protected Rectangle viewBounds; 
-	
-	private float[] vertices = new float[20];
-	
-	public boolean recache;
-	
-	public OrthogonalTiledMapRenderer2(TiledMap map) {
-		this.map = map;
-		this.unitScale = 1;
-		this.spriteCache = new SpriteCache(4000, true);
-		this.viewBounds = new Rectangle();
-	}
-	
-	public OrthogonalTiledMapRenderer2(TiledMap map, float unitScale) {
-		this.map = map;
-		this.unitScale = unitScale;
-		this.viewBounds = new Rectangle();
-		this.spriteCache = new SpriteCache(4000, true);
-	}
-	
-	@Override
-	public void setView(OrthographicCamera camera) {
-		spriteCache.setProjectionMatrix(camera.combined);
-		float width = camera.viewportWidth * camera.zoom;
-		float height = camera.viewportHeight * camera.zoom;
-		viewBounds.set(camera.position.x - width / 2, camera.position.y - height / 2, width, height);
-		recache = true;
-	}
-	
-	@Override
-	public void setView (Matrix4 projection, float x, float y, float width, float height) {
-		spriteCache.setProjectionMatrix(projection);
-		viewBounds.set(x, y, width, height);
-		recache = true;
-	}
-
-	public void begin () {
-		if (recache) {
-			cached = false;
-			recache = false;
-			spriteCache.clear();
-		}
-		if (!cached) {
-			spriteCache.beginCache();	
-		} else {
-			Gdx.gl.glEnable(GL10.GL_BLEND);
-			Gdx.gl.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
-			spriteCache.begin();
-		}
-		
-	}
-
-	public void end () {
-		if (!cached) {
-			spriteCache.endCache();
-			cached = true;
-			Gdx.gl.glEnable(GL10.GL_BLEND);
-			Gdx.gl.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
-			spriteCache.begin();
-			spriteCache.draw(0);
-			spriteCache.end();
-			Gdx.gl.glDisable(GL10.GL_BLEND);
-		} else {
-			spriteCache.end();
-			Gdx.gl.glDisable(GL10.GL_BLEND);
-		}
-	}
-
-	@Override
-	public void render () {
-		begin();
-		if (cached) {
-			spriteCache.draw(0);
-		} else {
-			for (MapLayer layer : map.getLayers()) {
-				if (layer.isVisible()) {
-					if (layer instanceof TiledMapTileLayer) {
-						renderTileLayer((TiledMapTileLayer) layer);
-					} else {
-						for (MapObject object : layer.getObjects()) {
-							renderObject(object);
-						}
-					}					
-				}				
-			}				
-		}
-		end();
-	}
-	
-	@Override
-	public void render (int[] layers) {
-		// FIXME not implemented
-		throw new UnsupportedOperationException("Not implemented");
-	}
-
-	@Override
-	public void renderObject (MapObject object) {
-		// TODO Auto-generated method stub
-		
-	}
-
-	boolean cached = false;
-	int count = 0;
-	@Override
-	public void renderTileLayer (TiledMapTileLayer layer) {
-		final float color = Color.toFloatBits(1, 1, 1, layer.getOpacity());
-	
-		final int layerWidth = layer.getWidth();
-		final int layerHeight = layer.getHeight();
-		
-		final float layerTileWidth = layer.getTileWidth() * unitScale;
-		final float layerTileHeight = layer.getTileHeight() * unitScale;
-		
-		final int col1 = Math.max(0, (int) (viewBounds.x / layerTileWidth));
-		final int col2 = Math.min(layerWidth, (int) ((viewBounds.x + viewBounds.width + layerTileWidth) / layerTileWidth));
-
-		final int row1 = Math.max(0, (int) (viewBounds.y / layerTileHeight));
-		final int row2 = Math.min(layerHeight, (int) ((viewBounds.y + viewBounds.height + layerTileHeight) / layerTileHeight));				
-		
-		for (int row = row1; row < row2; row++) {
-			for (int col = col1; col < col2; col++) {
-				final TiledMapTileLayer.Cell cell = layer.getCell(col, row);
-				if(cell == null) continue;
-				final TiledMapTile tile = cell.getTile();
-				if (tile != null) {
-					count++;
-					final boolean flipX = cell.getFlipHorizontally();
-					final boolean flipY = cell.getFlipVertically();
-					final int rotations = cell.getRotation();
-					
-					TextureRegion region = tile.getTextureRegion();
-					
-					float x1 = col * layerTileWidth;
-					float y1 = row * layerTileHeight;
-					float x2 = x1 + region.getRegionWidth() * unitScale;
-					float y2 = y1 + region.getRegionHeight() * unitScale;
-					
-					float u1 = region.getU();
-					float v1 = region.getV2();
-					float u2 = region.getU2();
-					float v2 = region.getV();
-					
-					vertices[X1] = x1;
-					vertices[Y1] = y1;
-					vertices[C1] = color;
-					vertices[U1] = u1;
-					vertices[V1] = v1;
-					
-					vertices[X2] = x1;
-					vertices[Y2] = y2;
-					vertices[C2] = color;
-					vertices[U2] = u1;
-					vertices[V2] = v2;
-					
-					vertices[X3] = x2;
-					vertices[Y3] = y2;
-					vertices[C3] = color;
-					vertices[U3] = u2;
-					vertices[V3] = v2;
-					
-					vertices[X4] = x2;
-					vertices[Y4] = y1;
-					vertices[C4] = color;
-					vertices[U4] = u2;
-					vertices[V4] = v1;							
-					
-					if (flipX) {
-						float temp = vertices[U1];
-						vertices[U1] = vertices[U3];
-						vertices[U3] = temp;
-						temp = vertices[U2];
-						vertices[U2] = vertices[U4];
-						vertices[U4] = temp;
-					}
-					if (flipY) {
-						float temp = vertices[V1];
-						vertices[V1] = vertices[V3];
-						vertices[V3] = temp;
-						temp = vertices[V2];
-						vertices[V2] = vertices[V4];
-						vertices[V4] = temp;
-					}
-					if (rotations != 0) {
-						switch (rotations) {
-							case Cell.ROTATE_90: {
-								float tempV = vertices[V1];
-								vertices[V1] = vertices[V2];
-								vertices[V2] = vertices[V3];
-								vertices[V3] = vertices[V4];
-								vertices[V4] = tempV;
-
-								float tempU = vertices[U1];
-								vertices[U1] = vertices[U2];
-								vertices[U2] = vertices[U3];
-								vertices[U3] = vertices[U4];
-								vertices[U4] = tempU;									
-								break;
-							}
-							case Cell.ROTATE_180: {
-								float tempU = vertices[U1];
-								vertices[U1] = vertices[U3];
-								vertices[U3] = tempU;
-								tempU = vertices[U2];
-								vertices[U2] = vertices[U4];
-								vertices[U4] = tempU;									
-								float tempV = vertices[V1];
-								vertices[V1] = vertices[V3];
-								vertices[V3] = tempV;
-								tempV = vertices[V2];
-								vertices[V2] = vertices[V4];
-								vertices[V4] = tempV;
-								break;
-							}
-							case Cell.ROTATE_270: {
-								float tempV = vertices[V1];
-								vertices[V1] = vertices[V4];
-								vertices[V4] = vertices[V3];
-								vertices[V3] = vertices[V2];
-								vertices[V2] = tempV;
-
-								float tempU = vertices[U1];
-								vertices[U1] = vertices[U4];
-								vertices[U4] = vertices[U3];
-								vertices[U3] = vertices[U2];
-								vertices[U2] = tempU;									
-								break;
-							}
-						}								
-					}
-					spriteCache.add(region.getTexture(), vertices, 0, 20);
-				}
-			}
-		}
-	}
-
-	@Override
-	public void dispose () {
-		spriteCache.dispose();
-	}
-	
-}
\ No newline at end of file
diff --git a/gdx/src/com/badlogic/gdx/maps/tiled/tiles/AnimatedTiledMapTile.java b/gdx/src/com/badlogic/gdx/maps/tiled/tiles/AnimatedTiledMapTile.java
deleted file mode 100644
index 7191a7a..0000000
--- a/gdx/src/com/badlogic/gdx/maps/tiled/tiles/AnimatedTiledMapTile.java
+++ /dev/null
@@ -1,59 +0,0 @@
-package com.badlogic.gdx.maps.tiled.tiles;
-
-import com.badlogic.gdx.graphics.g2d.Animation;
-import com.badlogic.gdx.graphics.g2d.TextureRegion;
-import com.badlogic.gdx.maps.MapProperties;
-import com.badlogic.gdx.maps.tiled.TiledMapTile;
-import com.badlogic.gdx.utils.Array;
-
-public class AnimatedTiledMapTile implements TiledMapTile {
-
-	private int id;
-	
-	private Array<StaticTiledMapTile> frameTiles;
-	
-	private float animationTime;
-	
-	@Override
-	public int getId () {
-		return id;
-	}
-
-	@Override
-	public void setId (int id) {
-		this.id = id;
-	}
-	
-	@Override
-	public BlendMode getBlendMode () {
-		// TODO Auto-generated method stub
-		return null;
-	}
-
-	@Override
-	public void setBlendMode (BlendMode blendMode) {
-		// TODO Auto-generated method stub
-		
-	}
-
-	@Override
-	public TextureRegion getTextureRegion () {
-		// TODO Auto-generated method stub
-		return null;
-	}
-
-	@Override
-	public MapProperties getProperties () {
-		// TODO Auto-generated method stub
-		return null;
-	}
-
-	public AnimatedTiledMapTile(float interval, Array<StaticTiledMapTile> frameTiles) {
-
-	}
-	
-	public void setAnimationTime(float animationTime) {
-		this.animationTime = animationTime;
-	}
-	
-}
diff --git a/gdx/src/com/badlogic/gdx/maps/tiled/tiles/StaticTiledMapTile.java b/gdx/src/com/badlogic/gdx/maps/tiled/tiles/StaticTiledMapTile.java
deleted file mode 100644
index 017e10c..0000000
--- a/gdx/src/com/badlogic/gdx/maps/tiled/tiles/StaticTiledMapTile.java
+++ /dev/null
@@ -1,81 +0,0 @@
-package com.badlogic.gdx.maps.tiled.tiles;
-
-import com.badlogic.gdx.graphics.g2d.TextureRegion;
-import com.badlogic.gdx.maps.MapProperties;
-import com.badlogic.gdx.maps.tiled.TiledMapTile;
-
-/**
- * @brief Represents a non changing TiledMapTile (can be cached)
- */
-public class StaticTiledMapTile implements TiledMapTile {
-
-	private int id;
-	
-	private BlendMode blendMode = BlendMode.ALPHA;
-	
-	private MapProperties properties;
-	
-	private TextureRegion textureRegion;	
-
-	@Override
-	public int getId () {
-		return id;
-	}
-
-	@Override
-	public void setId (int id) {
-		this.id = id;
-	}
-	
-	@Override
-	public BlendMode getBlendMode () {
-		return blendMode;
-	}
-
-	@Override
-	public void setBlendMode (BlendMode blendMode) {
-		this.blendMode = blendMode;
-	}	
-	
-	/**
-	 * @return tile's properties set
-	 */
-	@Override
-	public MapProperties getProperties() {
-		if (properties == null) {
-			properties = new MapProperties();
-		}
-		return properties;
-	}
-
-	/**
-	 * @return texture region used to render the tile
-	 */
-	@Override
-	public TextureRegion getTextureRegion() {
-		return textureRegion;
-	}
-	
-	/**
-	 * Creates a static tile with the given region
-	 * 
-	 * @param textureRegion
-	 */
-	public StaticTiledMapTile(TextureRegion textureRegion) {
-		this.textureRegion = textureRegion;
-	}
-	
-	/**
-	 * Copy constructor
-	 * 
-	 * @param copy
-	 */
-	public StaticTiledMapTile(StaticTiledMapTile copy) {
-		if (copy.properties != null) {
-			getProperties().putAll(copy.properties);	
-		}
-		this.textureRegion = copy.textureRegion;
-		this.id = copy.id;
-	}
-	
-}
diff --git a/gdx/src/com/badlogic/gdx/math/BSpline.java b/gdx/src/com/badlogic/gdx/math/BSpline.java
deleted file mode 100644
index 9eaa0c8..0000000
--- a/gdx/src/com/badlogic/gdx/math/BSpline.java
+++ /dev/null
@@ -1,197 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-
-package com.badlogic.gdx.math;
-
-import com.badlogic.gdx.utils.Array;
-
-/** @author Xoppa */
-public class BSpline<T extends Vector<T>> implements Path<T> {
-	private final static float d6 = 1f / 6f;
-	
-	/** Calculates the cubic b-spline value for the given position (t).
-	 * @param out The Vector to set to the result.
-	 * @param t The position (0<=t<=1) on the spline
-	 * @param points The control points
-	 * @param continuous If true the b-spline restarts at 0 when reaching 1
-	 * @param tmp A temporary vector used for the calculation
-	 * @return The value of out */
-	public static <T extends Vector<T>> T cubic(final T out, final float t, final T[] points, final boolean continuous, final T tmp) {
-		final int n = continuous ? points.length : points.length - 3;
-		float u = t * n;
-		int i = (t >= 1f) ? (n - 1) : (int)u;
-		u -= (float)i;
-		return cubic(out, i, u, points, continuous, tmp);
-	}
-	
-	/** Calculates the cubic b-spline value for the given span (i) at the given position (u).
-	 * @param out The Vector to set to the result.
-	 * @param i The span (0<=i<spanCount) spanCount = continuous ? points.length : points.length - 3 (cubic degree)
-	 * @param u The position (0<=u<=1) on the span
-	 * @param points The control points
-	 * @param continuous If true the b-spline restarts at 0 when reaching 1
-	 * @param tmp A temporary vector used for the calculation
-	 * @return The value of out */
-	public static <T extends Vector<T>> T cubic(final T out, final int i, final float u, final T[] points, final boolean continuous, final T tmp) {
-		final int n = points.length;
-		final float dt = 1f - u;
-		final float t2 = u * u;
-		final float t3 = t2 * u;
-		out.set(points[i]).scl((3f * t3 - 6f * t2 + 4f) * d6);
-		if (continuous || i > 0) out.add(tmp.set(points[(n+i-1)%n]).scl(dt * dt * dt * d6));
-		if (continuous || i < (n - 1)) out.add(tmp.set(points[(i + 1)%n]).scl((-3f * t3 + 3f * t2 + 3f * u + 1f) * d6));
-		if (continuous || i < (n - 2)) out.add(tmp.set(points[(i + 2)%n]).scl(t3 * d6));
-		return out;
-	}
-	
-	/** Calculates the n-degree b-spline value for the given position (t).
-	 * @param out The Vector to set to the result.
-	 * @param t The position (0<=t<=1) on the spline
-	 * @param points The control points
-	 * @param degree The degree of the b-spline
-	 * @param continuous If true the b-spline restarts at 0 when reaching 1
-	 * @param tmp A temporary vector used for the calculation
-	 * @return The value of out */
-	public static <T extends Vector<T>> T calculate(final T out, final float t, final T[] points, final int degree, final boolean continuous, final T tmp) {
-		final int n = continuous ? points.length : points.length - degree;
-		float u = t * n;
-		int i = (t >= 1f) ? (n - 1) : (int)u;
-		u -= (float)i;
-		return calculate(out, i, u, points, degree, continuous, tmp);
-	}
-	
-	/** Calculates the n-degree b-spline value for the given span (i) at the given position (u).
-	 * @param out The Vector to set to the result.
-	 * @param i The span (0<=i<spanCount) spanCount = continuous ? points.length : points.length - degree
-	 * @param u The position (0<=u<=1) on the span
-	 * @param points The control points
-	 * @param degree The degree of the b-spline
-	 * @param continuous If true the b-spline restarts at 0 when reaching 1
-	 * @param tmp A temporary vector used for the calculation
-	 * @return The value of out */
-	public static <T extends Vector<T>> T calculate(final T out, final int i, final float u, final T[] points, final int degree, final boolean continuous, final T tmp) {
-		switch(degree) {
-		case 3: return cubic(out, i, u, points, continuous, tmp);
-		}
-		return out;
-	}
-	
-	public T[] controlPoints;
-	public Array<T> knots;
-	public int degree;
-	public boolean continuous;
-	public int spanCount;
-	private T tmp;
-	
-	public BSpline() { }
-	public BSpline(final T[] controlPoints, final int degree, final boolean continuous) {
-		set(controlPoints, degree, continuous);
-	}
-	
-	public BSpline set(final T[] controlPoints, final int degree, final boolean continuous) {
-		if (tmp == null)
-			tmp = controlPoints[0].cpy();
-		this.controlPoints = controlPoints;
-		this.degree = degree;
-		this.continuous = continuous;
-		this.spanCount = continuous ? controlPoints.length : controlPoints.length - degree;
-		if (knots == null)
-			knots = new Array<T>(spanCount);
-		else {
-			knots.clear();
-			knots.ensureCapacity(spanCount);
-		}
-		for (int i = 0; i < spanCount; i++)
-			knots.add(calculate(controlPoints[0].cpy(), continuous ? i : (int)(i + 0.5f * degree), 0f, controlPoints, degree, continuous, tmp));
-		return this;
-	}
-
-	@Override
-	public T valueAt (T out, float t) {
-		final int n = spanCount;
-		float u = t * n;
-		int i = (t >= 1f) ? (n - 1) : (int)u;
-		u -= (float)i;
-		return valueAt(out, i, u);
-	}
-	
-	/** @return The value of the spline at position u of the specified span */ 
-	public T valueAt(final T out, final int span, final float u) {
-		return calculate(out, continuous ? span : (span + (int)(degree*0.5f)), u, controlPoints, degree, continuous, tmp);
-	}
-	
-	/** @return The span closest to the specified value */ 
-	public int nearest(final T in) {
-		return nearest(in, 0, spanCount);
-	}
-	
-	/** @return The span closest to the specified value, restricting to the specified spans. */
-	public int nearest(final T in, int start, final int count) {
-		while (start < 0) start += spanCount;
-		int result = start % spanCount;
-		float dst = in.dst2(knots.get(result));
-		for (int i = 1; i < count; i++) {
-			final int idx = (start + i) % spanCount;
-			final float d = in.dst2(knots.get(idx));
-			if (d < dst) {
-				dst = d;
-				result = idx;
-			}
-		}
-		return result;
-	}
-	
-	@Override
-	public float approximate (T v) {
-		return approximate(v, nearest(v));
-	}
-	
-	public float approximate(final T in, int start, final int count) {
-		return approximate(in, nearest(in, start, count));
-	}
-	
-	public float approximate(final T in, final int near) {
-		int n = near;
-		final T nearest = knots.get(n);
-		final T previous = knots.get(n>0?n-1:spanCount-1);
-		final T next = knots.get((n+1)%spanCount);
-		final float dstPrev2 = in.dst2(previous);
-		final float dstNext2 = in.dst2(next);
-		T P1, P2, P3;
-		if (dstNext2 < dstPrev2) {
-			P1 = nearest;
-			P2 = next;
-			P3 = in;
-		} else {
-			P1 = previous;
-			P2 = nearest;
-			P3 = in;
-			n = n>0?n-1:spanCount-1;
-		}
-		float L1 = P1.dst(P2);
-		float L2 = P3.dst(P2);
-		float L3 = P3.dst(P1);
-		float s = (L2*L2 + L1*L1 - L3*L3) / (2*L1);
-		float u = MathUtils.clamp((L1-s)/L1, 0f, 1f);
-		return ((float)n + u) / spanCount;
-	}
-	
-	@Override
-	public float locate (T v) {
-		// TODO Add a precise method
-		return approximate(v);
-	}
-}
diff --git a/gdx/src/com/badlogic/gdx/math/Bezier.java b/gdx/src/com/badlogic/gdx/math/Bezier.java
deleted file mode 100644
index b3196d2..0000000
--- a/gdx/src/com/badlogic/gdx/math/Bezier.java
+++ /dev/null
@@ -1,131 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-
-package com.badlogic.gdx.math;
-
-import com.badlogic.gdx.utils.Array;
-import com.badlogic.gdx.utils.GdxRuntimeException;
-
-/** Implementation of the Bezier curve.
- * @author Xoppa */
-public class Bezier<T extends Vector<T>> implements Path<T> {
-	// TODO implement Serializable
-	
-	/** Simple linear interpolation 
-	 * @param out The {@link Vector} to set to the result.
-	 * @param t The location (ranging 0..1) on the line.
-	 * @param p0 The start point.
-	 * @param p1 The end point.
-	 * @param tmp A temporary vector to be used by the calculation.
-	 * @return The value specified by out for chaining */
-	public static <T extends Vector<T>> T linear(final T out, final float t, final T p0, final T p1, final T tmp) {
-		return out.set(p0).scl(1f - t).add(tmp.set(p1).scl(t)); // Could just use lerp...
-	}
-	
-	/** Quadratic Bezier curve 
-	 * @param out The {@link Vector} to set to the result.
-	 * @param t The location (ranging 0..1) on the curve.
-	 * @param p0 The first bezier point.
-	 * @param p1 The second bezier point.
-	 * @param p2 The third bezier point.
-	 * @param tmp A temporary vector to be used by the calculation.
-	 * @return The value specified by out for chaining */
-	public static <T extends Vector<T>> T quadratic(final T out, final float t, final T p0, final T p1, final T p2, final T tmp) {
-		final float dt = 1f - t;
-		return out.set(p0).scl(dt*dt).add(tmp.set(p1).scl(2*dt*t)).add(tmp.set(p2).scl(t*t));
-	}
-	
-	/** Cubic Bezier curve
-	 * @param out The {@link Vector} to set to the result.
-	 * @param t The location (ranging 0..1) on the curve.
-	 * @param p0 The first bezier point.
-	 * @param p1 The second bezier point.
-	 * @param p2 The third bezier point.
-	 * @param p3 The fourth bezier point.
-	 * @param tmp A temporary vector to be used by the calculation.
-	 * @return The value specified by out for chaining */
-	public static <T extends Vector<T>> T cubic(final T out, final float t, final T p0, final T p1, final T p2, final T p3, final T tmp) {
-		final float dt = 1f - t;
-		final float dt2 = dt * dt;
-		final float t2 = t * t;
-		return out.set(p0).scl(dt2*dt).add(tmp.set(p1).scl(3*dt2*t)).add(tmp.set(p2).scl(3*dt*t2)).add(tmp.set(p3).scl(t2*t));
-	}
-	
-	public Array<T> points = new Array<T>();
-	private T tmp;
-	
-	public Bezier() {	}
-	public Bezier(final T... points) {
-		set(points);
-	}
-	public Bezier(final T[] points, final int offset, final int length) {
-		set(points, offset, length);
-	}
-	public Bezier(final Array<T> points, final int offset, final int length) {
-		set(points, offset, length);
-	}
-	
-	public Bezier set(final T... points) {
-		return set(points, 0, points.length);
-	}
-	public Bezier set(final T[] points, final int offset, final int length) {
-		if (length < 2 || length > 4)
-			throw new GdxRuntimeException("Only first, second and third degree Bezier curves are supported.");
-		if (tmp == null)
-			tmp = points[0].cpy();
-		this.points.clear();
-		this.points.addAll(points, offset, length);
-		return this;
-	}
-	public Bezier set(final Array<T> points, final int offset, final int length) {
-		if (length < 2 || length > 4)
-			throw new GdxRuntimeException("Only first, second and third degree Bezier curves are supported.");
-		if (tmp == null)
-			tmp = points.get(0).cpy();
-		this.points.clear();
-		this.points.addAll(points, offset, length);
-		return this;
-	}
-	
-	public T valueAt(final T out, final float t) {
-		final int n = points.size; 
-		if (n == 2)
-			linear(out, t, points.get(0), points.get(1), tmp);
-		else if (n == 3)
-			quadratic(out, t, points.get(0), points.get(1), points.get(2), tmp);
-		else if (n == 4)
-			cubic(out, t, points.get(0), points.get(1), points.get(2), points.get(3), tmp);
-		return out;
-	}
-	
-	public float approximate(final T v) {
-		// TODO: make a real approximate method
-		T p1 = points.get(0);
-		T p2 = points.get(points.size-1);
-		T p3 = v;
-		float l1 = p1.dst(p2);
-		float l2 = p3.dst(p2);
-		float l3 = p3.dst(p1);
-		float s = (l2*l2 + l1*l1 - l3*l3) / (2*l1);
-		return MathUtils.clamp((l1-s)/l1, 0f, 1f);
-	}
-	
-	@Override
-	public float locate (T v) {
-		// TODO implement a precise method
-		return approximate(v);
-	}
-}
diff --git a/gdx/src/com/badlogic/gdx/math/CatmullRomSpline.java b/gdx/src/com/badlogic/gdx/math/CatmullRomSpline.java
index 3105f03..0f660c8 100644
--- a/gdx/src/com/badlogic/gdx/math/CatmullRomSpline.java
+++ b/gdx/src/com/badlogic/gdx/math/CatmullRomSpline.java
@@ -16,139 +16,227 @@
 
 package com.badlogic.gdx.math;
 
-import com.badlogic.gdx.Gdx;
-import com.badlogic.gdx.utils.Array;
-
-/** @author Xoppa */
-public class CatmullRomSpline<T extends Vector<T>> implements Path<T> {
-	/** Calculates the catmullrom value for the given position (t).
-	 * @param out The Vector to set to the result.
-	 * @param t The position (0<=t<=1) on the spline
-	 * @param points The control points
-	 * @param continuous If true the b-spline restarts at 0 when reaching 1
-	 * @param tmp A temporary vector used for the calculation
-	 * @return The value of out */
-	public static <T extends Vector<T>> T calculate(final T out, final float t, final T[] points, final boolean continuous, final T tmp) {
-		final int n = continuous ? points.length : points.length - 3;
-		float u = t * n;
-		int i = (t >= 1f) ? (n - 1) : (int)u;
-		u -= (float)i;
-		return calculate(out, i, u, points, continuous, tmp);
-	}
-	
-	/** Calculates the catmullrom value for the given span (i) at the given position (u).
-	 * @param out The Vector to set to the result.
-	 * @param i The span (0<=i<spanCount) spanCount = continuous ? points.length : points.length - degree
-	 * @param u The position (0<=u<=1) on the span
-	 * @param points The control points
-	 * @param continuous If true the b-spline restarts at 0 when reaching 1
-	 * @param tmp A temporary vector used for the calculation
-	 * @return The value of out */
-	public static <T extends Vector<T>> T calculate(final T out, final int i, final float u, final T[] points, final boolean continuous, final T tmp) {
-		final int n = points.length;
-		final float u2 = u * u;
-		final float u3 = u2 * u;
-		out.set(points[i]).scl(1.5f * u3 - 2.5f * u2 + 1.0f);
-		if (continuous || i > 0) out.add(tmp.set(points[(n+i-1)%n]).scl(-0.5f * u3 + u2 - 0.5f * u));
-		if (continuous || i < (n - 1)) out.add(tmp.set(points[(i + 1)%n]).scl(-1.5f * u3 + 2f * u2 + 0.5f * u));
-		if (continuous || i < (n - 2)) out.add(tmp.set(points[(i + 2)%n]).scl(0.5f * u3 - 0.5f * u2));
-		return out;
-	}
-	
-	public T[] controlPoints;
-	public boolean continuous;
-	public int spanCount;
-	private T tmp;
-	private T tmp2;
-	
-	public CatmullRomSpline() { }
-	public CatmullRomSpline(final T[] controlPoints, final boolean continuous) {
-		set(controlPoints, continuous);
-	}
-	
-	public CatmullRomSpline set(final T[] controlPoints, final boolean continuous) {
-		if (tmp == null)
-			tmp = controlPoints[0].cpy();
-		if (tmp2 == null)
-			tmp2 = controlPoints[0].cpy();
-		this.controlPoints = controlPoints;
-		this.continuous = continuous;
-		this.spanCount = continuous ? controlPoints.length : controlPoints.length - 3;
-		return this;
-	}
+import java.io.Serializable;
+import java.util.ArrayList;
+import java.util.List;
 
-	@Override
-	public T valueAt (T out, float t) {
-		final int n = spanCount;
-		float u = t * n;
-		int i = (t >= 1f) ? (n - 1) : (int)u;
-		u -= (float)i;
-		return valueAt(out, i, u);
-	}
-	
-	/** @return The value of the spline at position u of the specified span */ 
-	public T valueAt(final T out, final int span, final float u) {
-		return calculate(out, continuous ? span : (span + 1), u, controlPoints, continuous, tmp);
+/** Encapsulates a catmull rom spline with n control points, n >= 4. For more information on this type of spline see
+ * http://www.mvps.org/directx/articles/catmull/.
+ * 
+ * @author badlogicgames@gmail.com */
+public class CatmullRomSpline implements Serializable {
+	private static final long serialVersionUID = -3290464799289771451L;
+	private List<Vector3> controlPoints = new ArrayList<Vector3>();
+	Vector3 T1 = new Vector3();
+	Vector3 T2 = new Vector3();
+
+	/** Adds a new control point
+	 * 
+	 * @param point the point */
+	public void add (Vector3 point) {
+		controlPoints.add(point);
 	}
-	
-	/** @return The span closest to the specified value */ 
-	public int nearest(final T in) {
-		return nearest(in, 0, spanCount);
+
+	/** @return all control points */
+	public List<Vector3> getControlPoints () {
+		return controlPoints;
 	}
-	
-	/** @return The span closest to the specified value, restricting to the specified spans. */
-	public int nearest(final T in, int start, final int count) {
-		while (start < 0) start += spanCount;
-		int result = start % spanCount;
-		float dst = in.dst2(controlPoints[result]);
-		for (int i = 1; i < count; i++) {
-			final int idx = (start + i) % spanCount;
-			final float d = in.dst2(controlPoints[idx]);
-			if (d < dst) {
-				dst = d;
-				result = idx;
+
+	/** Returns a path, between every two control points numPoints are generated and the control points themselves are added too.
+	 * The first and the last controlpoint are omitted. if there's less than 4 controlpoints an empty path is returned.
+	 * 
+	 * @param numPoints number of points returned for a segment
+	 * @return the path */
+	public List<Vector3> getPath (int numPoints) {
+		ArrayList<Vector3> points = new ArrayList<Vector3>();
+
+		if (controlPoints.size() < 4) return points;
+
+		Vector3 T1 = new Vector3();
+		Vector3 T2 = new Vector3();
+
+		for (int i = 1; i <= controlPoints.size() - 3; i++) {
+			points.add(controlPoints.get(i));
+			float increment = 1.0f / (numPoints + 1);
+			float t = increment;
+
+			T1.set(controlPoints.get(i + 1)).sub(controlPoints.get(i - 1)).mul(0.5f);
+			T2.set(controlPoints.get(i + 2)).sub(controlPoints.get(i)).mul(0.5f);
+
+			for (int j = 0; j < numPoints; j++) {
+				float h1 = 2 * t * t * t - 3 * t * t + 1; // calculate basis
+				// function 1
+				float h2 = -2 * t * t * t + 3 * t * t; // calculate basis
+				// function 2
+				float h3 = t * t * t - 2 * t * t + t; // calculate basis
+				// function 3
+				float h4 = t * t * t - t * t; // calculate basis function 4
+
+				Vector3 point = new Vector3(controlPoints.get(i)).mul(h1);
+				point.add(controlPoints.get(i + 1).tmp().mul(h2));
+				point.add(T1.tmp().mul(h3));
+				point.add(T2.tmp().mul(h4));
+				points.add(point);
+				t += increment;
 			}
 		}
-		return result;
+
+		if (controlPoints.size() >= 4) points.add(controlPoints.get(controlPoints.size() - 2));
+
+		return points;
 	}
-	
-	@Override
-	public float approximate (T v) {
-		return approximate(v, nearest(v));
+
+	/** Returns a path, between every two control points numPoints are generated and the control points themselves are added too.
+	 * The first and the last controlpoint are omitted. if there's less than 4 controlpoints an empty path is returned.
+	 * 
+	 * @param points the array of Vector3 instances to store the path in
+	 * @param numPoints number of points returned for a segment */
+	public void getPath (Vector3[] points, int numPoints) {
+		int idx = 0;
+		if (controlPoints.size() < 4) return;
+
+		for (int i = 1; i <= controlPoints.size() - 3; i++) {
+			points[idx++].set(controlPoints.get(i));
+			float increment = 1.0f / (numPoints + 1);
+			float t = increment;
+
+			T1.set(controlPoints.get(i + 1)).sub(controlPoints.get(i - 1)).mul(0.5f);
+			T2.set(controlPoints.get(i + 2)).sub(controlPoints.get(i)).mul(0.5f);
+
+			for (int j = 0; j < numPoints; j++) {
+				float h1 = 2 * t * t * t - 3 * t * t + 1; // calculate basis
+				// function 1
+				float h2 = -2 * t * t * t + 3 * t * t; // calculate basis
+				// function 2
+				float h3 = t * t * t - 2 * t * t + t; // calculate basis
+				// function 3
+				float h4 = t * t * t - t * t; // calculate basis function 4
+
+				Vector3 point = points[idx++].set(controlPoints.get(i)).mul(h1);
+				point.add(controlPoints.get(i + 1).tmp().mul(h2));
+				point.add(T1.tmp().mul(h3));
+				point.add(T2.tmp().mul(h4));
+				t += increment;
+			}
+		}
+
+		points[idx].set(controlPoints.get(controlPoints.size() - 2));
 	}
-	
-	public float approximate(final T in, int start, final int count) {
-		return approximate(in, nearest(in, start, count));
+
+	/** Returns all tangents for the points in a path. Same semantics as getPath.
+	 * 
+	 * @param numPoints number of points returned for a segment
+	 * @return the tangents of the points in the path */
+	public List<Vector3> getTangents (int numPoints) {
+		ArrayList<Vector3> tangents = new ArrayList<Vector3>();
+
+		if (controlPoints.size() < 4) return tangents;
+
+		Vector3 T1 = new Vector3();
+		Vector3 T2 = new Vector3();
+
+		for (int i = 1; i <= controlPoints.size() - 3; i++) {
+			float increment = 1.0f / (numPoints + 1);
+			float t = increment;
+
+			T1.set(controlPoints.get(i + 1)).sub(controlPoints.get(i - 1)).mul(0.5f);
+			T2.set(controlPoints.get(i + 2)).sub(controlPoints.get(i)).mul(0.5f);
+
+			tangents.add(new Vector3(T1).nor());
+
+			for (int j = 0; j < numPoints; j++) {
+				float h1 = 6 * t * t - 6 * t; // calculate basis function 1
+				float h2 = -6 * t * t + 6 * t; // calculate basis function 2
+				float h3 = 3 * t * t - 4 * t + 1; // calculate basis function 3
+				float h4 = 3 * t * t - 2 * t; // calculate basis function 4
+
+				Vector3 point = new Vector3(controlPoints.get(i)).mul(h1);
+				point.add(controlPoints.get(i + 1).tmp().mul(h2));
+				point.add(T1.tmp().mul(h3));
+				point.add(T2.tmp().mul(h4));
+				tangents.add(point.nor());
+				t += increment;
+			}
+		}
+
+		if (controlPoints.size() >= 4)
+			tangents.add(T1.set(controlPoints.get(controlPoints.size() - 1)).sub(controlPoints.get(controlPoints.size() - 3))
+				.mul(0.5f).cpy().nor());
+
+		return tangents;
 	}
-	
-	public float approximate(final T in, final int near) {
-		int n = near;
-		final T nearest = controlPoints[n];
-		final T previous = controlPoints[n>0?n-1:spanCount-1];
-		final T next = controlPoints[(n+1)%spanCount];
-		final float dstPrev2 = in.dst2(previous);
-		final float dstNext2 = in.dst2(next);
-		T P1, P2, P3;
-		if (dstNext2 < dstPrev2) {
-			P1 = nearest;
-			P2 = next;
-			P3 = in;
-		} else {
-			P1 = previous;
-			P2 = nearest;
-			P3 = in;
-			n = n>0?n-1:spanCount-1;
+
+	/** Returns all tangent's normals in 2D space for the points in a path. The controlpoints have to lie in the x/y plane for this
+	 * to work. Same semantics as getPath.
+	 * 
+	 * @param numPoints number of points returned for a segment
+	 * @return the tangents of the points in the path */
+	public List<Vector3> getTangentNormals2D (int numPoints) {
+		ArrayList<Vector3> tangents = new ArrayList<Vector3>();
+
+		if (controlPoints.size() < 4) return tangents;
+
+		Vector3 T1 = new Vector3();
+		Vector3 T2 = new Vector3();
+
+		for (int i = 1; i <= controlPoints.size() - 3; i++) {
+			float increment = 1.0f / (numPoints + 1);
+			float t = increment;
+
+			T1.set(controlPoints.get(i + 1)).sub(controlPoints.get(i - 1)).mul(0.5f);
+			T2.set(controlPoints.get(i + 2)).sub(controlPoints.get(i)).mul(0.5f);
+
+			Vector3 normal = new Vector3(T1).nor();
+			float x = normal.x;
+			normal.x = normal.y;
+			normal.y = -x;
+			tangents.add(normal);
+
+			for (int j = 0; j < numPoints; j++) {
+				float h1 = 6 * t * t - 6 * t; // calculate basis function 1
+				float h2 = -6 * t * t + 6 * t; // calculate basis function 2
+				float h3 = 3 * t * t - 4 * t + 1; // calculate basis function 3
+				float h4 = 3 * t * t - 2 * t; // calculate basis function 4
+
+				Vector3 point = new Vector3(controlPoints.get(i)).mul(h1);
+				point.add(controlPoints.get(i + 1).tmp().mul(h2));
+				point.add(T1.tmp().mul(h3));
+				point.add(T2.tmp().mul(h4));
+				point.nor();
+				x = point.x;
+				point.x = point.y;
+				point.y = -x;
+				tangents.add(point);
+				t += increment;
+			}
 		}
-		float L1 = P1.dst(P2);
-		float L2 = P3.dst(P2);
-		float L3 = P3.dst(P1);
-		float s = (L2*L2 + L1*L1 - L3*L3) / (2*L1);
-		float u = MathUtils.clamp((L1-s)/L1, 0f, 1f);
-		return ((float)n + u) / spanCount;
+
+		return tangents;
 	}
-	
-	@Override
-	public float locate (T v) {
-		return approximate(v);
+
+	/** Returns the tangent's normals using the tangent and provided up vector doing a cross product.
+	 * 
+	 * @param numPoints number of points per segment
+	 * @param up up vector
+	 * @return a list of tangent normals */
+	public List<Vector3> getTangentNormals (int numPoints, Vector3 up) {
+		List<Vector3> tangents = getTangents(numPoints);
+		ArrayList<Vector3> normals = new ArrayList<Vector3>();
+
+		for (Vector3 tangent : tangents)
+			normals.add(new Vector3(tangent).crs(up).nor());
+
+		return normals;
+	}
+
+	public List<Vector3> getTangentNormals (int numPoints, List<Vector3> up) {
+		List<Vector3> tangents = getTangents(numPoints);
+		ArrayList<Vector3> normals = new ArrayList<Vector3>();
+
+		int i = 0;
+		for (Vector3 tangent : tangents)
+			normals.add(new Vector3(tangent).crs(up.get(i++)).nor());
+
+		return normals;
 	}
 }
diff --git a/gdx/src/com/badlogic/gdx/math/EarClippingTriangulator.java b/gdx/src/com/badlogic/gdx/math/EarClippingTriangulator.java
index 701d735..7402e66 100644
--- a/gdx/src/com/badlogic/gdx/math/EarClippingTriangulator.java
+++ b/gdx/src/com/badlogic/gdx/math/EarClippingTriangulator.java
@@ -21,10 +21,8 @@ import java.util.Collections;
 import java.util.List;
 
 /** A simple implementation of the ear cutting algorithm to triangulate simple polygons without holes. For more information:
- * <ul>
- * <li><a href="http://cgm.cs.mcgill.ca/~godfried/teaching/cg-projects/97/Ian/algorithm2.html">http://cgm.cs.mcgill.ca/~godfried/teaching/cg-projects/97/Ian/algorithm2.html</a></li>
- * <li><a href="http://www.geometrictools.com/Documentation/TriangulationByEarClipping.pdf">http://www.geometrictools.com/Documentation/TriangulationByEarClipping.pdf</a></li>
- * </ul>
+ * http://cgm.cs.mcgill.ca/~godfried/teaching/cg-projects/97/Ian/algorithm2.html
+ * http://www.geometrictools.com/Documentation/TriangulationByEarClipping.pdf
  * 
  * @author badlogicgames@gmail.com
  * @author Nicolas Gramlich (Improved performance. Collinear edges are now supported.)
diff --git a/gdx/src/com/badlogic/gdx/math/Ellipse.java b/gdx/src/com/badlogic/gdx/math/Ellipse.java
deleted file mode 100755
index 22b169b..0000000
--- a/gdx/src/com/badlogic/gdx/math/Ellipse.java
+++ /dev/null
@@ -1,57 +0,0 @@
-
-package com.badlogic.gdx.math;
-
-import java.io.Serializable;
-
-import com.badlogic.gdx.math.Vector2;
-
-/** A convenient 2D ellipse class, based on the circle class
- * @author tonyp7 */
-public class Ellipse implements Serializable {
-
-	public float x, y;
-	public float width, height;
-	private float halfWidth, halfHeight;
-
-	private static final long serialVersionUID = 7381533206532032099L;
-
-	/** Construct a new ellipse with all values set to zero */
-	public Ellipse () {
-
-	}
-
-	public Ellipse (float x, float y, float width, float height) {
-		this.x = x;
-		this.y = y;
-		this.width = width;
-		this.height = height;
-	}
-
-	public Ellipse (Vector2 position, float width, float height) {
-		this.x = position.x;
-		this.y = position.y;
-		this.width = width;
-		this.height = height;
-	}
-
-	public boolean contains (float x, float y) {
-		x = x - this.x;
-		y = y - this.y;
-		halfWidth = width * 0.5f;
-		halfHeight = height * 0.5f;
-
-		return (x * x) / (halfWidth * halfWidth) + (y * y) / (halfHeight * halfHeight) <= 1.0f;
-	}
-
-	public boolean contains (Vector2 point) {
-		return contains(point.x, point.y);
-	}
-
-	public void set (float x, float y, float width, float height) {
-		this.x = x;
-		this.y = y;
-		this.width = width;
-		this.height = height;
-	}
-
-}
diff --git a/gdx/src/com/badlogic/gdx/math/FloatCounter.java b/gdx/src/com/badlogic/gdx/math/FloatCounter.java
index e6e85e7..c802486 100644
--- a/gdx/src/com/badlogic/gdx/math/FloatCounter.java
+++ b/gdx/src/com/badlogic/gdx/math/FloatCounter.java
@@ -18,11 +18,7 @@ package com.badlogic.gdx.math;
 
 import com.badlogic.gdx.utils.StringBuilder;
 
-/** 
- * Track properties of a stream of float values.  The properties (total value, minimum, etc) are updated as
- * values are {@link #put(float)} into the stream.
- * 
- * @author xoppa */
+/** @author xoppa */
 public class FloatCounter {	
 	/** The amount of values added */
 	public int count;
diff --git a/gdx/src/com/badlogic/gdx/math/Frustum.java b/gdx/src/com/badlogic/gdx/math/Frustum.java
index 082d7a3..4f7abe6 100644
--- a/gdx/src/com/badlogic/gdx/math/Frustum.java
+++ b/gdx/src/com/badlogic/gdx/math/Frustum.java
@@ -16,16 +16,11 @@
 
 package com.badlogic.gdx.math;
 
-import com.badlogic.gdx.graphics.Camera;
 import com.badlogic.gdx.graphics.OrthographicCamera;
 import com.badlogic.gdx.graphics.PerspectiveCamera;
 import com.badlogic.gdx.math.Plane.PlaneSide;
 import com.badlogic.gdx.math.collision.BoundingBox;
 
-/**
- * A truncated rectangular pyramid.  Used to define the viewable region and its projection onto the screen.  
- * See {@link Camera#frustum}.
- */
 public class Frustum {
 	protected static final Vector3[] clipSpacePlanePoints = {new Vector3(-1, -1, -1), new Vector3(1, -1, -1),
 		new Vector3(1, 1, -1), new Vector3(-1, 1, -1), // near clip
diff --git a/gdx/src/com/badlogic/gdx/math/Intersector.java b/gdx/src/com/badlogic/gdx/math/Intersector.java
index ef81092..7560140 100644
--- a/gdx/src/com/badlogic/gdx/math/Intersector.java
+++ b/gdx/src/com/badlogic/gdx/math/Intersector.java
@@ -364,7 +364,7 @@ public final class Intersector {
 	 * @param box The box
 	 * @param intersection The intersection point (optional)
 	 * @return Whether an intersection is present. */
-	public static boolean intersectRayBounds(Ray ray, BoundingBox box, Vector3 intersection)
+	boolean intersectRayBounds(Ray ray, BoundingBox box, Vector3 intersection)
 	{
 		Vector3.tmp.set(ray.origin);
 		Vector3.tmp2.set(ray.origin);
@@ -717,7 +717,10 @@ public final class Intersector {
 	}
 
 	public static boolean overlapRectangles (Rectangle r1, Rectangle r2) {
-		return r1.overlaps(r2);
+		if (r1.x < r2.x + r2.width && r1.x + r1.width > r2.x && r1.y < r2.y + r2.height && r1.y + r1.height > r2.y)
+			return true;
+		else
+			return false;
 	}
 
 	public static boolean overlapCircleRectangle (Circle c, Rectangle r) {
diff --git a/gdx/src/com/badlogic/gdx/math/MathUtils.java b/gdx/src/com/badlogic/gdx/math/MathUtils.java
index 36ce643..11056e3 100644
--- a/gdx/src/com/badlogic/gdx/math/MathUtils.java
+++ b/gdx/src/com/badlogic/gdx/math/MathUtils.java
@@ -30,7 +30,6 @@ public class MathUtils {
 	// ---
 
 	static public final float PI = 3.1415927f;
-	public static final float PI2 = PI * 2;
 
 	static private final int SIN_BITS = 13; // Adjust for accuracy.
 	static private final int SIN_MASK = ~(-1 << SIN_BITS);
@@ -128,10 +127,6 @@ public class MathUtils {
 			add = 0;
 		}
 		float invDiv = 1 / ((x < y ? y : x) * INV_ATAN2_DIM_MINUS_1);
-		
-		if (invDiv == Float.POSITIVE_INFINITY)
-			return ((float)Math.atan2(y, x) + add) * mul;
-		
 		int xi = (int)(x * invDiv);
 		int yi = (int)(y * invDiv);
 		return (Atan2.table[yi * ATAN2_DIM + xi] + add) * mul;
@@ -151,22 +146,20 @@ public class MathUtils {
 		return start + random.nextInt(end - start + 1);
 	}
 
-	/** Returns a random boolean value. */
 	static public final boolean randomBoolean () {
 		return random.nextBoolean();
 	}
 
-	/** Returns random number between 0.0 (inclusive) and 1.0 (exclusive). */
 	static public final float random () {
 		return random.nextFloat();
 	}
 
-	/** Returns a random number between 0 (inclusive) and the specified value (exclusive). */
+	/** Returns a random number between 0 (inclusive) and the specified value (inclusive). */
 	static public final float random (float range) {
 		return random.nextFloat() * range;
 	}
 
-	/** Returns a random number between start (inclusive) and end (exclusive). */
+	/** Returns a random number between start (inclusive) and end (inclusive). */
 	static public final float random (float start, float end) {
 		return start + random.nextFloat() * (end - start);
 	}
@@ -214,9 +207,8 @@ public class MathUtils {
 	static private final int BIG_ENOUGH_INT = 16 * 1024;
 	static private final double BIG_ENOUGH_FLOOR = BIG_ENOUGH_INT;
 	static private final double CEIL = 0.9999999;
-//	static private final double BIG_ENOUGH_CEIL = NumberUtils
-//		.longBitsToDouble(NumberUtils.doubleToLongBits(BIG_ENOUGH_INT + 1) - 1);
-	static private final double BIG_ENOUGH_CEIL = 16384.999999999996;
+	static private final double BIG_ENOUGH_CEIL = NumberUtils
+		.longBitsToDouble(NumberUtils.doubleToLongBits(BIG_ENOUGH_INT + 1) - 1);
 	static private final double BIG_ENOUGH_ROUND = BIG_ENOUGH_INT + 0.5f;
 
 	/** Returns the largest integer less than or equal to the specified float. This method will only properly floor floats from
diff --git a/gdx/src/com/badlogic/gdx/math/Matrix4.java b/gdx/src/com/badlogic/gdx/math/Matrix4.java
index 99a0bba..a692a4c 100644
--- a/gdx/src/com/badlogic/gdx/math/Matrix4.java
+++ b/gdx/src/com/badlogic/gdx/math/Matrix4.java
@@ -100,26 +100,16 @@ public class Matrix4 implements Serializable {
 	 * @param quaternion The quaternion that is to be used to set this matrix.
 	 * @return This matrix for the purpose of chaining methods together. */
 	public Matrix4 set (Quaternion quaternion) {
-		return set(quaternion.x, quaternion.y, quaternion.z, quaternion.w);
-	}
-	
-	/** Sets the matrix to a rotation matrix representing the quaternion.
-	 * 
-	 * @param x The X component of the quaternion that is to be used to set this matrix.
-	 * @param y The Y component of the quaternion that is to be used to set this matrix.
-	 * @param z The Z component of the quaternion that is to be used to set this matrix.
-	 * @param w The W component of the quaternion that is to be used to set this matrix.
-	 * @return This matrix for the purpose of chaining methods together. */
-	public Matrix4 set(float x, float y, float z, float w) {
-		float l_xx = x * x;
-		float l_xy = x * y;
-		float l_xz = x * z;
-		float l_xw = x * w;
-		float l_yy = y * y;
-		float l_yz = y * z;
-		float l_yw = y * w;
-		float l_zz = z * z;
-		float l_zw = z * w;
+		// Compute quaternion factors
+		float l_xx = quaternion.x * quaternion.x;
+		float l_xy = quaternion.x * quaternion.y;
+		float l_xz = quaternion.x * quaternion.z;
+		float l_xw = quaternion.x * quaternion.w;
+		float l_yy = quaternion.y * quaternion.y;
+		float l_yz = quaternion.y * quaternion.z;
+		float l_yw = quaternion.y * quaternion.w;
+		float l_zz = quaternion.z * quaternion.z;
+		float l_zw = quaternion.z * quaternion.w;
 		// Set matrix from quaternion
 		val[M00] = 1 - 2 * (l_yy + l_zz);
 		val[M01] = 2 * (l_xy - l_zw);
@@ -345,7 +335,7 @@ public class Matrix4 implements Serializable {
 	 * @param near The near plane
 	 * @param far The far plane
 	 * @param fov The field of view in degrees
-	 * @param aspectRatio The "width over height" aspect ratio
+	 * @param aspectRatio The aspect ratio
 	 * @return This matrix for the purpose of chaining methods together. */
 	public Matrix4 setToProjection (float near, float far, float fov, float aspectRatio) {
 		idt();
@@ -441,17 +431,6 @@ public class Matrix4 implements Serializable {
 		return this;
 	}
 
-	/** Sets the 4th column to the translation vector.
-	 * 
-	 * @param vector The translation vector
-	 * @return This matrix for the purpose of chaining methods together. */
-	public Matrix4 setTranslation (Vector3 vector) {
-		val[M03] = vector.x;
-		val[M13] = vector.y;
-		val[M23] = vector.z;
-		return this;
-	}
-
 	/** Sets this matrix to a translation matrix, overwriting it first by an identity matrix and then setting the 4th column to the
 	 * translation vector.
 	 * 
@@ -546,7 +525,7 @@ public class Matrix4 implements Serializable {
 			idt();
 			return this;
 		}
-		return set(quat.setFromAxis(axisX, axisY, axisZ, angle));
+		return set(quat.set(tmpV.set(axisX, axisY, axisZ), angle));
 	}
 
 	/** Set the matrix to a rotation matrix between two vectors.
@@ -554,6 +533,7 @@ public class Matrix4 implements Serializable {
 	 * @param v2 The target vector
 	 * @return This matrix for the purpose of chaining methods together */
 	public Matrix4 setToRotation (final Vector3 v1, final Vector3 v2) {
+		idt();
 		return set(quat.setFromCross(v1, v2));
 	}
 	
@@ -565,10 +545,13 @@ public class Matrix4 implements Serializable {
 	 * @param y2 The target vector y value
 	 * @param z2 The target vector z value
 	 * @return This matrix for the purpose of chaining methods together */
-	public Matrix4 setToRotation (final float x1, final float y1, final float z1, final float x2, final float y2, final float z2) {
+		public Matrix4 setToRotation (final float x1, final float y1, final float z1, final float x2, final float y2, final float z2) {
+		idt();
 		return set(quat.setFromCross(x1, y1, z1, x2, y2, z2));
 	}
 	
+	static final Vector3 tmpV = new Vector3();
+	
 	/** Sets this matrix to a rotation matrix from the given euler angles.
 	 * @param yaw the yaw in degrees
 	 * @param pitch the pitch in degress
@@ -605,9 +588,9 @@ public class Matrix4 implements Serializable {
 		return this;
 	}
 
-	static final Vector3 l_vez = new Vector3();
-	static final Vector3 l_vex = new Vector3();
-	static final Vector3 l_vey = new Vector3();
+	static Vector3 l_vez = new Vector3();
+	static Vector3 l_vex = new Vector3();
+	static Vector3 l_vey = new Vector3();
 
 	/** Sets the matrix to a look at matrix with a direction and an up vector. Multiply with a translation matrix to get a camera
 	 * model view matrix.
@@ -651,9 +634,9 @@ public class Matrix4 implements Serializable {
 		return this;
 	}
 
-	static final Vector3 right = new Vector3();
-	static final Vector3 tmpForward = new Vector3();
-	static final Vector3 tmpUp = new Vector3();
+	static Vector3 right = new Vector3();
+	static Vector3 tmpForward = new Vector3();
+	static Vector3 tmpUp = new Vector3();
 
 	public Matrix4 setToWorld (Vector3 position, Vector3 forward, Vector3 up) {
 		tmpForward.set(forward).nor();
@@ -1052,7 +1035,7 @@ public class Matrix4 implements Serializable {
 	 * @return This matrix for the purpose of chaining methods together. */
 	public Matrix4 rotate (float axisX, float axisY, float axisZ, float angle) {
 		if (angle == 0) return this;
-		quat.setFromAxis(axisX, axisY, axisZ, angle);
+		quat.set(tmpV.set(axisX, axisY, axisZ), angle);
 		return rotate(quat);
 	}
 
@@ -1066,14 +1049,6 @@ public class Matrix4 implements Serializable {
 		mul(val, tmp);
 		return this;
 	}
-	
-	/** Postmultiplies this matrix by the rotation between two vectors.
-	 * @param v1 The base vector
-	 * @param v2 The target vector
-	 * @return This matrix for the purpose of chaining methods together */	
-	public Matrix4 rotate (final Vector3 v1, final Vector3 v2) {
-		return rotate(quat.setFromCross(v1, v2));
-	}
 
 	/** Postmultiplies this matrix with a scale matrix. Postmultiplication is also used by OpenGL ES' 1.x
 	 * glTranslate/glRotate/glScale.
diff --git a/gdx/src/com/badlogic/gdx/math/Path.java b/gdx/src/com/badlogic/gdx/math/Path.java
deleted file mode 100644
index 9e0b158..0000000
--- a/gdx/src/com/badlogic/gdx/math/Path.java
+++ /dev/null
@@ -1,16 +0,0 @@
-package com.badlogic.gdx.math;
-
-/** Interface that specifies a path of type T within the window 0.0<=t<=1.0.
- * @author Xoppa */
-public interface Path<T> {
-	/** @return The value of the path at t where 0<=t<=1 */
-	T valueAt(T out, float t);
-	/** @return The approximated value (between 0 and 1) on the path which is closest to the specified value.
-	 * Note that the implementation of this method might be optimized for speed against precision, 
-	 * see {@link #locate(Object)} for a more precise (but more intensive) method. */
-	float approximate(T v);
-	/** @return The precise location (between 0 and 1) on the path which is closest to the specified value.
-	 * Note that the implementation of this method might be CPU intensive, see {@link #approximate(Object)} for
-	 * a faster (but less precise) method. */
-	float locate(T v);
-}
diff --git a/gdx/src/com/badlogic/gdx/math/Polygon.java b/gdx/src/com/badlogic/gdx/math/Polygon.java
index f9402a9..269c454 100644
--- a/gdx/src/com/badlogic/gdx/math/Polygon.java
+++ b/gdx/src/com/badlogic/gdx/math/Polygon.java
@@ -25,10 +25,6 @@ public class Polygon {
 	private float scaleX = 1, scaleY = 1;
 	private boolean dirty = true;
 	private Rectangle bounds;
-	
-	public Polygon () {
-		this.localVertices = new float[0];
-	}
 
 	public Polygon (float[] vertices) {
 		if (vertices.length < 6) throw new IllegalArgumentException("polygons must contain at least 3 points.");
@@ -147,13 +143,6 @@ public class Polygon {
 		return area;
 	}
 
-	/** Returns an axis-aligned bounding box of this polygon.  
-	 * 
-	 * Note the returned Rectangle is cached in this polygon, and will
-	 * be reused if this Polygon is changed.
-	 * 
-	 * @return this polygon's bounding box Rectangle
-	 */
 	public Rectangle getBoundingRectangle () {
 		float[] vertices = getTransformedVertices();
 
diff --git a/gdx/src/com/badlogic/gdx/math/Polyline.java b/gdx/src/com/badlogic/gdx/math/Polyline.java
deleted file mode 100644
index 5910c2e..0000000
--- a/gdx/src/com/badlogic/gdx/math/Polyline.java
+++ /dev/null
@@ -1,200 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-
-package com.badlogic.gdx.math;
-
-public class Polyline {
-	private final float[] localVertices;
-	private float[] worldVertices;
-	private float x, y;
-	private float originX, originY;
-	private float rotation;
-	private float scaleX = 1, scaleY = 1;
-	private float length;
-	private float scaledLength;
-	private boolean calculateScaledLength = true;
-	private boolean calculateLength = true;
-	private boolean dirty = true;
-	
-	public Polyline () {
-		this.localVertices = new float[0];
-	}
-
-	public Polyline (float[] vertices) {
-		if (vertices.length < 4) throw new IllegalArgumentException("polylines must contain at least 2 points.");
-		this.localVertices = vertices;
-	}
-	
-	/** Returns vertices without scaling or rotation and without being offset by the polyline position. */
-	public float[] getVertices () {
-		return localVertices;
-	}
-	
-	/** Returns vertices scaled, rotated, and offset by the polygon position. */
-	public float[] getTransformedVertices () {
-		if (!dirty) return worldVertices;
-		dirty = false;
-
-		final float[] localVertices = this.localVertices;
-		if (worldVertices == null || worldVertices.length < localVertices.length) worldVertices = new float[localVertices.length];
-
-		final float[] worldVertices = this.worldVertices;
-		final float positionX = x;
-		final float positionY = y;
-		final float originX = this.originX;
-		final float originY = this.originY;
-		final float scaleX = this.scaleX;
-		final float scaleY = this.scaleY;
-		final boolean scale = scaleX != 1 || scaleY != 1;
-		final float rotation = this.rotation;
-		final float cos = MathUtils.cosDeg(rotation);
-		final float sin = MathUtils.sinDeg(rotation);
-
-		for (int i = 0, n = localVertices.length; i < n; i += 2) {
-			float x = localVertices[i] - originX;
-			float y = localVertices[i + 1] - originY;
-
-			// scale if needed
-			if (scale) {
-				x *= scaleX;
-				y *= scaleY;
-			}
-
-			// rotate if needed
-			if (rotation != 0) {
-				float oldX = x;
-				x = cos * x - sin * y;
-				y = sin * oldX + cos * y;
-			}
-
-			worldVertices[i] = positionX + x + originX;
-			worldVertices[i + 1] = positionY + y + originY;
-		}
-		return worldVertices;
-	}
-	
-	/** Returns the euclidian length of the polyline without scaling */
-	public float getLength () {
-		if (!calculateLength) return length;
-		calculateLength = false;
-		
-		length = 0;
-		for (int i = 0, n = localVertices.length - 2; i < n ; i += 2) {
-			float x = localVertices[i + 2] -  localVertices[i];
-			float y = localVertices[i + 1] -  localVertices[i + 3];
-			length += (float)Math.sqrt(x * x + y * y);
-		}
-		
-		return length;
-	}
-	
-	/** Returns the euclidian length of the polyline */
-	public float getScaledLength () {
-		if (!calculateScaledLength) return scaledLength;
-		calculateScaledLength = false;
-		
-		scaledLength = 0;
-		for (int i = 0, n = localVertices.length - 2; i < n ; i += 2) {
-			float x = localVertices[i + 2] * scaleX - localVertices[i] * scaleX;
-			float y = localVertices[i + 1] * scaleY - localVertices[i + 3] * scaleY;
-			scaledLength += (float)Math.sqrt(x * x + y * y);
-		}
-		
-		return scaledLength;
-	}
-	
-	public float getX () {
-		return x;
-	}
-
-	public float getY () {
-		return y;
-	}
-
-	public float getOriginX () {
-		return originX;
-	}
-
-	public float getOriginY () {
-		return originY;
-	}
-
-	public float getRotation () {
-		return rotation;
-	}
-
-	public float getScaleX () {
-		return scaleX;
-	}
-
-	public float getScaleY () {
-		return scaleY;
-	}
-
-	public void setOrigin (float originX, float originY) {
-		this.originX = originX;
-		this.originY = originY;
-		dirty = true;
-	}
-	
-	public void setPosition (float x, float y) {
-		this.x = x;
-		this.y = y;
-		dirty = true;
-	}
-	
-	public void setRotation (float degrees) {
-		this.rotation = degrees;
-		dirty = true;
-	}
-
-	public void rotate (float degrees) {
-		rotation += degrees;
-		dirty = true;
-	}
-
-	public void setScale (float scaleX, float scaleY) {
-		this.scaleX = scaleX;
-		this.scaleY = scaleY;
-		dirty = true;
-		calculateScaledLength = true;
-	}
-
-	public void scale (float amount) {
-		this.scaleX += amount;
-		this.scaleY += amount;
-		dirty = true;
-		calculateScaledLength = true;
-	}
-
-	public void calculateLength () {
-		calculateLength = true;
-	}
-	
-	public void calculateScaledLength () {
-		calculateScaledLength = true;
-	}
-	
-	public void dirty () {
-		dirty = true;
-	}
-
-	public void translate (float x, float y) {
-		this.x += x;
-		this.y += y;
-		dirty = true;
-	}
-}
\ No newline at end of file
diff --git a/gdx/src/com/badlogic/gdx/math/Quaternion.java b/gdx/src/com/badlogic/gdx/math/Quaternion.java
index 757510d..f27bc2c 100644
--- a/gdx/src/com/badlogic/gdx/math/Quaternion.java
+++ b/gdx/src/com/badlogic/gdx/math/Quaternion.java
@@ -18,9 +18,7 @@ package com.badlogic.gdx.math;
 
 import java.io.Serializable;
 
-/** A simple quaternion class. See 
- * <a href="http://en.wikipedia.org/wiki/Quaternion">http://en.wikipedia.org/wiki/Quaternion</a>
- * for more information.
+/** A simple quaternion class. See http://en.wikipedia.org/wiki/Quaternion for more information.
  * 
  * @author badlogicgames@gmail.com
  * @author vesuvio */
@@ -90,7 +88,10 @@ public class Quaternion implements Serializable {
 	 * @param angle The angle in degrees
 	 * @return This quaternion for chaining. */
 	public Quaternion set (Vector3 axis, float angle) {
-		return setFromAxis(axis.x, axis.y, axis.z, angle);
+		float l_ang = (float)Math.toRadians(angle);
+		float l_sin = (float)Math.sin(l_ang / 2);
+		float l_cos = (float)Math.cos(l_ang / 2);
+		return this.set(axis.x * l_sin, axis.y * l_sin, axis.z * l_sin, l_cos).nor();
 	}
 
 	/** @return a copy of this quaternion */
@@ -171,7 +172,7 @@ public class Quaternion implements Serializable {
 	/** Transforms the given vector using this quaternion
 	 * 
 	 * @param v Vector to transform */
-	public Vector3 transform (Vector3 v) {
+	public void transform (Vector3 v) {
 		tmp2.set(this);
 		tmp2.conjugate();
 		tmp2.mulLeft(tmp1.set(v.x, v.y, v.z, 0)).mulLeft(this);
@@ -179,7 +180,6 @@ public class Quaternion implements Serializable {
 		v.x = tmp2.x;
 		v.y = tmp2.y;
 		v.z = tmp2.z;
-		return v;
 	}
 
 	/** Multiplies this quaternion with another one
@@ -187,10 +187,10 @@ public class Quaternion implements Serializable {
 	 * @param q Quaternion to multiply with
 	 * @return This quaternion for chaining */
 	public Quaternion mul (Quaternion q) {
-		final float newX = w * q.x + x * q.w + y * q.z - z * q.y;
-		final float newY = w * q.y + y * q.w + z * q.x - x * q.z;
-		final float newZ = w * q.z + z * q.w + x * q.y - y * q.x;
-		final float newW = w * q.w - x * q.x - y * q.y - z * q.z;
+		float newX = w * q.x + x * q.w + y * q.z - z * q.y;
+		float newY = w * q.y + y * q.w + z * q.x - x * q.z;
+		float newZ = w * q.z + z * q.w + x * q.y - y * q.x;
+		float newW = w * q.w - x * q.x - y * q.y - z * q.z;
 		x = newX;
 		y = newY;
 		z = newZ;
@@ -203,10 +203,10 @@ public class Quaternion implements Serializable {
 	 * @param q Quaternion to multiply with
 	 * @return This quaternion for chaining */
 	public Quaternion mulLeft (Quaternion q) {
-		final float newX = q.w * x + q.x * w + q.y * z - q.z * y;
-		final float newY = q.w * y + q.y * w + q.z * x - q.x * z;
-		final float newZ = q.w * z + q.z * w + q.x * y - q.y * x;
-		final float newW = q.w * w - q.x * x - q.y * y - q.z * z;
+		float newX = q.w * x + q.x * w + q.y * z - q.z * y;
+		float newY = q.w * y + q.y * w + q.z * x - q.x * z;
+		float newZ = q.w * z + q.z * w + q.x * y - q.y * x;
+		float newW = q.w * w - q.x * x - q.y * y - q.z * z;
 		x = newX;
 		y = newY;
 		z = newZ;
@@ -219,16 +219,16 @@ public class Quaternion implements Serializable {
 	/** Fills a 4x4 matrix with the rotation matrix represented by this quaternion.
 	 * 
 	 * @param matrix Matrix to fill */
-	public void toMatrix (final float[] matrix) {
-		final float xx = x * x;
-		final float xy = x * y;
-		final float xz = x * z;
-		final float xw = x * w;
-		final float yy = y * y;
-		final float yz = y * z;
-		final float yw = y * w;
-		final float zz = z * z;
-		final float zw = z * w;
+	public void toMatrix (float[] matrix) {
+		float xx = x * x;
+		float xy = x * y;
+		float xz = x * z;
+		float xw = x * w;
+		float yy = y * y;
+		float yz = y * z;
+		float yw = y * w;
+		float zz = z * z;
+		float zw = z * w;
 		// Set matrix from quaternion
 		matrix[Matrix4.M00] = 1 - 2 * (yy + zz);
 		matrix[Matrix4.M01] = 2 * (xy - zw);
@@ -251,7 +251,8 @@ public class Quaternion implements Serializable {
 	/** Sets the quaternion to an identity Quaternion
 	 * @return this quaternion for chaining */
 	public Quaternion idt () {
-		return this.set(0, 0, 0, 1);
+		this.set(0, 0, 0, 1);
+		return this;
 	}
 
 	// todo : the setFromAxis(v3,float) method should replace the set(v3,float) method
@@ -260,25 +261,22 @@ public class Quaternion implements Serializable {
 	 * @param axis The axis
 	 * @param angle The angle in degrees
 	 * @return This quaternion for chaining. */
-	public Quaternion setFromAxis (final Vector3 axis, final float angle) {
+	public Quaternion setFromAxis (Vector3 axis, float angle) {
 		return setFromAxis(axis.x, axis.y, axis.z, angle);
 	}
 
 	/** Sets the quaternion components from the given axis and angle around that axis.
+	 * 
 	 * @param x X direction of the axis
 	 * @param y Y direction of the axis
 	 * @param z Z direction of the axis
 	 * @param angle The angle in degrees
 	 * @return This quaternion for chaining. */
-	public Quaternion setFromAxis (final float x, final float y, final float z, final float angle) {
-		float d = Vector3.len(x, y, z);
-		if (d == 0f)
-			return idt();
-		d = 1f /d;
+	public Quaternion setFromAxis (float x, float y, float z, float angle) {
 		float l_ang = angle * MathUtils.degreesToRadians;
-		float l_sin = (float)Math.sin(l_ang / 2);
-		float l_cos = (float)Math.cos(l_ang / 2);
-		return this.set(d * x * l_sin, d * y * l_sin, d * z * l_sin, l_cos).nor();
+		float l_sin = MathUtils.sin(l_ang / 2);
+		float l_cos = MathUtils.cos(l_ang / 2);
+		return this.set(x * l_sin, y * l_sin, z * l_sin, l_cos).nor();
 	}
 
 // fromRotationMatrix(xAxis.x, yAxis.x, zAxis.x, xAxis.y, yAxis.y, zAxis.y,
@@ -355,27 +353,25 @@ public class Quaternion implements Serializable {
 	}
 	
 	/** Set this quaternion to the rotation between two vectors.
-	 * @param v1 The base vector, which should be normalized.
-	 * @param v2 The target vector, which should be normalized.
+	 * @param v1 The base vector
+	 * @param v2 The target vector
 	 * @return This quaternion for chaining */
 	public Quaternion setFromCross (final Vector3 v1, final Vector3 v2) {
-		final float dot = MathUtils.clamp(v1.dot(v2), -1f, 1f);
-		final float angle = (float)Math.acos(dot) * MathUtils.radiansToDegrees;
-		return setFromAxis(v1.y * v2.z - v1.z * v2.y, v1.z * v2.x - v1.x * v2.z, v1.x * v2.y - v1.y * v2.x, angle);
+		final float dot = MathUtils.clamp(Vector3.tmp.set(v1).nor().dot(Vector3.tmp2.set(v2).nor()), -1f, 1f);
+		return setFromAxis(Vector3.tmp.crs(Vector3.tmp2), (float)Math.acos(dot));
 	}
 	
 	/** Set this quaternion to the rotation between two vectors.
-	 * @param x1 The base vectors x value, which should be normalized.
-	 * @param y1 The base vectors y value, which should be normalized.
-	 * @param z1 The base vectors z value, which should be normalized.
-	 * @param x2 The target vector x value, which should be normalized.
-	 * @param y2 The target vector y value, which should be normalized.
-	 * @param z2 The target vector z value, which should be normalized.
+	 * @param x1 The base vectors x value
+	 * @param y1 The base vectors y value
+	 * @param z1 The base vectors z value
+	 * @param x2 The target vector x value
+	 * @param y2 The target vector y value
+	 * @param z2 The target vector z value
 	 * @return This quaternion for chaining */
 	public Quaternion setFromCross (final float x1, final float y1, final float z1, final float x2, final float y2, final float z2) {
-		final float dot = MathUtils.clamp(Vector3.dot(x1, y1, z1, x2, y2, z2), -1f, 1f);
-		final float angle = (float)Math.acos(dot) * MathUtils.radiansToDegrees;
-		return setFromAxis(y1 * z2 - z1 * y2, z1 * x2 - x1 * z2, x1 * y2 - y1 * x2, angle);
+		final float dot = MathUtils.clamp(Vector3.tmp.set(x1, y1, z1).nor().dot(Vector3.tmp2.set(x2, y2, z2).nor()), -1f, 1f);
+		return setFromAxis(Vector3.tmp.crs(Vector3.tmp2), (float)Math.acos(dot));
 	}
 
 	/** Spherical linear interpolation between this quaternion and the other quaternion, based on the alpha value in the range
diff --git a/gdx/src/com/badlogic/gdx/math/Vector.java b/gdx/src/com/badlogic/gdx/math/Vector.java
deleted file mode 100644
index 73783d2..0000000
--- a/gdx/src/com/badlogic/gdx/math/Vector.java
+++ /dev/null
@@ -1,90 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-
-package com.badlogic.gdx.math;
-
-/** Encapsulates a general vector. Allows chaining operations by returning a reference to itself in all modification methods. See
- * {@link Vector2} and {@link Vector3} for specific implementations.
- * @author Xoppa */
-public interface Vector<T extends Vector> {
-	/** @return a copy of this vector */
-	T cpy ();
-
-	/** @return The euclidian length */
-	float len ();
-
-	/** @return The squared euclidian length */
-	float len2 ();
-	
-	/** Limits this vector's length to given value
-	 * @return This vector for chaining */
-	T limit (float limit);
-
-	/** Clamps this vector's length to given value
-	 * @param min Min length
-	 * @param max Max length
-	 * @return This vector for chaining */
-	T clamp (float min, float max);
-	
-	/** Sets this vector from the given vector
-	 * @param v The vector
-	 * @return This vector for chaining */
-	T set (T v);
-
-	/** Substracts the given vector from this vector.
-	 * @param v The vector
-	 * @return This vector for chaining */
-	T sub (T v);
-
-	/** Normalizes this vector
-	 * @return This vector for chaining */
-	T nor ();
-
-	/** Adds the given vector to this vector
-	 * @param v The vector
-	 * @return This vector for chaining */
-	T add (T v);
-
-	/** @param v The other vector
-	 * @return The dot product between this and the other vector */
-	float dot (T v);
-
-	/** Scales this vector by a scalar
-	 * @param scalar The scalar
-	 * @return This vector for chaining */
-	T scl (float scalar);
-
-	/** Scales this vector by another vector
-	 * @return This vector for chaining */
-	T scl (T v);
-
-	/** @param v The other vector
-	 * @return the distance between this and the other vector */
-	float dst (T v);
-
-	/** @param v The other vector
-	 * @return the squared distance between this and the other vector */
-	float dst2 (T v);
-
-	/** Linearly interpolates between this vector and the target vector by alpha which is in the range [0,1]. The result is stored
-	 * in this vector.
-	 * @param target The target vector
-	 * @param alpha The interpolation coefficient
-	 * @return This vector for chaining. */
-	T lerp (T target, float alpha);
-
-	// TODO: T crs(T v);
-}
diff --git a/gdx/src/com/badlogic/gdx/math/Vector2.java b/gdx/src/com/badlogic/gdx/math/Vector2.java
index 48bad38..32a2a40 100644
--- a/gdx/src/com/badlogic/gdx/math/Vector2.java
+++ b/gdx/src/com/badlogic/gdx/math/Vector2.java
@@ -22,9 +22,13 @@ import com.badlogic.gdx.utils.NumberUtils;
 
 /** Encapsulates a 2D vector. Allows chaining methods by returning a reference to itself
  * @author badlogicgames@gmail.com */
-public class Vector2 implements Serializable, Vector<Vector2> {
+public class Vector2 implements Serializable {
 	private static final long serialVersionUID = 913902788239530931L;
 
+	/** Static temporary vector. Use with care! Use only when sure other code will not also use this.
+	 * @see #tmp() **/
+	public final static Vector2 tmp = new Vector2(), tmp2 = new Vector2(), tmp3 = new Vector2();
+
 	public final static Vector2 X = new Vector2(1, 0);
 	public final static Vector2 Y = new Vector2(0, 1);
 	public final static Vector2 Zero = new Vector2(0, 0);
@@ -134,53 +138,30 @@ public class Vector2 implements Serializable, Vector<Vector2> {
 	/** Multiplies this vector by a scalar
 	 * @param scalar The scalar
 	 * @return This vector for chaining */
-	public Vector2 scl (float scalar) {
+	public Vector2 mul (float scalar) {
 		x *= scalar;
 		y *= scalar;
 		return this;
 	}
-	
-	/** @deprecated Use {@link #scl(float)} instead. */
-	public Vector2 mul (float scalar) {
-		return scl(scalar);
-	}
 
 	/** Multiplies this vector by a scalar
 	 * @return This vector for chaining */
-	public Vector2 scl (float x, float y) {
+	public Vector2 mul (float x, float y) {
 		this.x *= x;
 		this.y *= y;
 		return this;
 	}
-	
-	/** @deprecated Use {@link #scl(float, float)} instead. */
-	public Vector2 mul (float x, float y) {
-		return scl(x,y);
-	}
-	
-	/** Multiplies this vector by a vector
-	 * @return This vector for chaining */
-	public Vector2 scl (Vector2 v) {
-		this.x *= v.x;
-		this.y *= v.y;
-		return this;
-	}
-	
-	/** @deprecated Use {@link #scl(Vector2)} instead. */
-	public Vector2 mul (Vector2 v) {
-		return scl(v);
-	}
 
 	public Vector2 div (float value) {
-		return this.mul(1 / value);
+		return this.mul(1/value);
 	}
 
 	public Vector2 div (float vx, float vy) {
-		return this.mul(1 / vx, 1 / vy);
+		return this.mul(1/vx, 1/vy);
 	}
 
 	public Vector2 div (Vector2 other) {
-		return this.mul(1 / other.x, 1 / other.y);
+		return this.mul(1/other.x, 1/other.y);
 	}
 
 	/** @param v The other vector
@@ -216,32 +197,6 @@ public class Vector2 implements Serializable, Vector<Vector2> {
 		final float y_d = y - this.y;
 		return x_d * x_d + y_d * y_d;
 	}
-	
-	/** Limits this vector's length to given value
-	 * @param limit Max length
-	 * @return This vector for chaining */
-	public Vector2 limit (float limit) {
-		if (len2() > limit * limit) {
-			nor();
-			mul(limit);
-		}
-		return this;
-	}
-	
-	/** Clamps this vector's length to given value
-	 * @param min Min length
-	 * @param max Max length
-	 * @return This vector for chaining */
-	public Vector2 clamp (float min, float max) {
-		final float l2 = len2();
-		if (l2 == 0f)
-			return this;
-		if (l2 > max * max)
-			return nor().mul(max);
-		if (l2 < min * min)
-			return nor().mul(min);
-		return this;
-	}
 
 	public String toString () {
 		return "[" + x + ":" + y + "]";
@@ -257,6 +212,15 @@ public class Vector2 implements Serializable, Vector<Vector2> {
 		return this;
 	}
 
+	/** NEVER EVER SAVE THIS REFERENCE! Do not use this unless you are aware of the side-effects, e.g. other methods might call this
+	 * as well.
+	 * 
+	 * @return a temporary copy of this vector. Use with care as this is backed by a single static Vector2 instance. v1.tmp().add(
+	 *         v2.tmp() ) will not work! */
+	public Vector2 tmp () {
+		return tmp.set(this);
+	}
+
 	/** Multiplies this vector by the given matrix
 	 * @param mat the matrix
 	 * @return this vector */
@@ -290,7 +254,7 @@ public class Vector2 implements Serializable, Vector<Vector2> {
 		if (angle < 0) angle += 360;
 		return angle;
 	}
-
+	
 	/** Sets the angle of the vector.
 	 * @param angle The angle to set. */
 	public void setAngle (float angle) {
@@ -321,10 +285,9 @@ public class Vector2 implements Serializable, Vector<Vector2> {
 	 * @param alpha The interpolation coefficient
 	 * @return This vector for chaining. */
 	public Vector2 lerp (Vector2 target, float alpha) {
-		final float invAlpha = 1.0f - alpha;
-		this.x = (x * invAlpha) + (target.x * alpha);
-		this.y = (y * invAlpha) + (target.y * alpha);
-		return this;
+		Vector2 r = this.mul(1.0f - alpha);
+		r.add(target.tmp().mul(alpha));
+		return r;
 	}
 
 	@Override
@@ -357,15 +320,4 @@ public class Vector2 implements Serializable, Vector<Vector2> {
 		if (Math.abs(obj.y - y) > epsilon) return false;
 		return true;
 	}
-	
-	/** Compares this vector with the other vector, using the supplied epsilon for fuzzy equality testing.
-	 * @param x
-	 * @param y
-	 * @param epsilon
-	 * @return whether the vectors are the same. */
-	public boolean epsilonEquals (float x, float y, float epsilon) {
-		if (Math.abs(x - this.x) > epsilon) return false;
-		if (Math.abs(y - this.y) > epsilon) return false;
-		return true;
-	}
 }
diff --git a/gdx/src/com/badlogic/gdx/math/Vector3.java b/gdx/src/com/badlogic/gdx/math/Vector3.java
index c51ed22..8d25d8d 100644
--- a/gdx/src/com/badlogic/gdx/math/Vector3.java
+++ b/gdx/src/com/badlogic/gdx/math/Vector3.java
@@ -22,7 +22,7 @@ import com.badlogic.gdx.utils.NumberUtils;
 
 /** Encapsulates a 3D vector. Allows chaining operations by returning a reference to itself in all modification methods.
  * @author badlogicgames@gmail.com */
-public class Vector3 implements Serializable, Vector<Vector3> {
+public class Vector3 implements Serializable {
 	private static final long serialVersionUID = 3840054589595372522L;
 
 	/** the x-component of this vector **/
@@ -32,16 +32,13 @@ public class Vector3 implements Serializable, Vector<Vector3> {
 	/** the x-component of this vector **/
 	public float z;
 
-	/** @deprecated
-	 * Static temporary vector. Use with care! Use only when sure other code will not also use this.
+	/** Static temporary vector. Use with care! Use only when sure other code will not also use this.
 	 * @see #tmp() **/
 	public final static Vector3 tmp = new Vector3();
-	/** @deprecated
-	 * Static temporary vector. Use with care! Use only when sure other code will not also use this.
+	/** Static temporary vector. Use with care! Use only when sure other code will not also use this.
 	 * @see #tmp() **/
 	public final static Vector3 tmp2 = new Vector3();
-	/** @deprecated
-	 * Static temporary vector. Use with care! Use only when sure other code will not also use this.
+	/** Static temporary vector. Use with care! Use only when sure other code will not also use this.
 	 * @see #tmp() **/
 	public final static Vector3 tmp3 = new Vector3();
 
@@ -66,14 +63,14 @@ public class Vector3 implements Serializable, Vector<Vector3> {
 
 	/** Creates a vector from the given vector
 	 * @param vector The vector */
-	public Vector3 (final Vector3 vector) {
+	public Vector3 (Vector3 vector) {
 		this.set(vector);
 	}
 
 	/** Creates a vector from the given array. The array must have at least 3 elements.
 	 * 
 	 * @param values The array */
-	public Vector3 (final float[] values) {
+	public Vector3 (float[] values) {
 		this.set(values[0], values[1], values[2]);
 	}
 
@@ -94,7 +91,7 @@ public class Vector3 implements Serializable, Vector<Vector3> {
 	 * 
 	 * @param vector The vector
 	 * @return This vector for chaining */
-	public Vector3 set (final Vector3 vector) {
+	public Vector3 set (Vector3 vector) {
 		return this.set(vector.x, vector.y, vector.z);
 	}
 
@@ -102,7 +99,7 @@ public class Vector3 implements Serializable, Vector<Vector3> {
 	 * 
 	 * @param values The array
 	 * @return this vector for chaining */
-	public Vector3 set (final float[] values) {
+	public Vector3 set (float[] values) {
 		return this.set(values[0], values[1], values[2]);
 	}
 
@@ -111,8 +108,7 @@ public class Vector3 implements Serializable, Vector<Vector3> {
 		return new Vector3(this);
 	}
 
-	/** @deprecated
-	 * NEVER EVER SAVE THIS REFERENCE! Do not use this unless you are aware of the side-effects, e.g. other methods might call this
+	/** NEVER EVER SAVE THIS REFERENCE! Do not use this unless you are aware of the side-effects, e.g. other methods might call this
 	 * as well.
 	 * 
 	 * @return a temporary copy of this vector */
@@ -120,8 +116,7 @@ public class Vector3 implements Serializable, Vector<Vector3> {
 		return tmp.set(this);
 	}
 
-	/** @deprecated
-	 * NEVER EVER SAVE THIS REFERENCE! Do not use this unless you are aware of the side-effects, e.g. other methods might call this
+	/** NEVER EVER SAVE THIS REFERENCE! Do not use this unless you are aware of the side-effects, e.g. other methods might call this
 	 * as well.
 	 * 
 	 * @return a temporary copy of this vector */
@@ -129,8 +124,7 @@ public class Vector3 implements Serializable, Vector<Vector3> {
 		return tmp2.set(this);
 	}
 
-	/** @deprecated
-	 * NEVER EVER SAVE THIS REFERENCE! Do not use this unless you are aware of the side-effects, e.g. other methods might call this
+	/** NEVER EVER SAVE THIS REFERENCE! Do not use this unless you are aware of the side-effects, e.g. other methods might call this
 	 * as well.
 	 * 
 	 * @return a temporary copy of this vector */
@@ -142,7 +136,7 @@ public class Vector3 implements Serializable, Vector<Vector3> {
 	 * 
 	 * @param vector The other vector
 	 * @return This vector for chaining */
-	public Vector3 add (final Vector3 vector) {
+	public Vector3 add (Vector3 vector) {
 		return this.add(vector.x, vector.y, vector.z);
 	}
 
@@ -166,7 +160,7 @@ public class Vector3 implements Serializable, Vector<Vector3> {
 	/** Subtracts the given vector from this vector
 	 * @param a_vec The other vector
 	 * @return This vector for chaining */
-	public Vector3 sub (final Vector3 a_vec) {
+	public Vector3 sub (Vector3 a_vec) {
 		return this.sub(a_vec.x, a_vec.y, a_vec.z);
 	}
 
@@ -188,72 +182,46 @@ public class Vector3 implements Serializable, Vector<Vector3> {
 		return this.set(this.x - value, this.y - value, this.z - value);
 	}
 
-	/** Scales this vector by the given value
+	/** Multiplies all components of this vector by the given value
+	 * 
 	 * @param value The value
 	 * @return This vector for chaining */
-	public Vector3 scl (float value) {
-		return this.set(this.x * value, this.y * value, this.z * value);
-	}
-	
-	/** @deprecated Use {@link #scl(float)} instead. */
 	public Vector3 mul (float value) {
-		return scl(value);
+		return this.set(this.x * value, this.y * value, this.z * value);
 	}
 
-	/** Scales this vector by the given vector3's values
+	/** Multiplies all components of this vector by the given vector3's values
+	 * 
 	 * @param other The vector3 to multiply by
 	 * @return This vector for chaining */
-	public Vector3 scl (final Vector3 other) {
-		return this.set(x * other.x, y * other.y, z * other.z);
-	}
-	
-	/** @deprecated Use {@link #scl(Vector3)} instead. */
-	public Vector3 mul (final Vector3 other) {
-		return scl(other);
+	public Vector3 mul (Vector3 other) {
+		return this.mul(other.x, other.y, other.z);
 	}
 
-	/** Scales this vector by the given values
+	/** Multiplies all components of this vector by the given values
+	 * 
 	 * @param vx X value
 	 * @param vy Y value
 	 * @param vz Z value
 	 * @return This vector for chaining */
-	public Vector3 scl (float vx, float vy, float vz) {
-		return this.set(this.x * vx, this.y * vy, this.z * vz);
-	}
-	
-	/** @deprecated Use {@link #scl(float, float, float)} instead. */
 	public Vector3 mul (float vx, float vy, float vz) {
-		return scl(vx, vy, vz);
+		return this.set(this.x * vx, this.y * vy, this.z * vz);
 	}
 
-	/** @deprecated Use {@link #scl(float, float, float)} instead. */
-	public Vector3 scale (float scalarX, float scalarY, float scalarZ) {
-		return scl(scalarX, scalarY, scalarZ);
-	}
-	
-	/** @deprecated Use {@link #scl(float)} instead.
-	 * Divides all components of this vector by the given value
+	/** Divides all components of this vector by the given value
+	 * 
 	 * @param value The value
 	 * @return This vector for chaining */
 	public Vector3 div (float value) {
-		return this.scl(1f/value);
+		return this.mul(1/value);
 	}
 
-	/** @deprecated Use {@link #scl(float, float, float)} instead.
-	 * Divides this vector by the given vector */
 	public Vector3 div (float vx, float vy, float vz) {
-		return this.set(x/vx, y/vy, z/vz);
+		return this.mul(1/vx, 1/vy, 1/vz);
 	}
 
-	/** @deprecated Use {@link #scl(Vector3)} instead. 
-	 * Divides this vector by the given vector */
-	public Vector3 div (final Vector3 other) {
-		return this.set(x/other.x, y/other.y, z/other.z);
-	}
-	
-	/** @return The euclidian length */
-	public static float len (final float x, final float y, final float z) {
-		return (float)Math.sqrt(x * x + y * y + z * z);
+	public Vector3 div (Vector3 other) {
+		return this.mul(1/other.x, 1/other.y, 1/other.z);
 	}
 
 	/** @return The euclidian length */
@@ -262,109 +230,52 @@ public class Vector3 implements Serializable, Vector<Vector3> {
 	}
 
 	/** @return The squared euclidian length */
-	public static float len2 (final float x, final float y, final float z) {
-		return x * x + y * y + z * z;
-	}
-	
-	/** @return The squared euclidian length */
 	public float len2 () {
 		return x * x + y * y + z * z;
 	}
 
 	/** @param vector The other vector
 	 * @return Wether this and the other vector are equal */
-	public boolean idt (final Vector3 vector) {
+	public boolean idt (Vector3 vector) {
 		return x == vector.x && y == vector.y && z == vector.z;
 	}
-	
-	/** @return The euclidian distance between the two specified vectors */
-	public static float dst (final float x1, final float y1, final float z1, final float x2, final float y2, final float z2) {
-		final float a = x2 - x1;
-		final float b = y2 - y1;
-		final float c = z2 - z1;
-		return (float)Math.sqrt(a * a + b * b + c * c); 
-	}
 
 	/** @param vector The other vector
 	 * @return The euclidian distance between this and the other vector */
-	public float dst (final Vector3 vector) {
-		final float a = vector.x - x;
-		final float b = vector.y - y;
-		final float c = vector.z - z;
-		return (float)Math.sqrt(a * a + b * b + c * c);
-	}
+	public float dst (Vector3 vector) {
+		float a = vector.x - x;
+		float b = vector.y - y;
+		float c = vector.z - z;
 
-	/** @return the distance between this point and the given point */
-	public float dst (float x, float y, float z) {
-		final float a = x - this.x;
-		final float b = y - this.y;
-		final float c = z - this.z;
-		return (float)Math.sqrt(a * a + b * b + c * c);
-	}
-	
-	/** @return the squared distance between the given points */
-	public static float dst2(final float x1, final float y1, final float z1, final float x2, final float y2, final float z2) {
-		final float a = x2 - x1;
-		final float b = y2 - y1;
-		final float c = z2 - z1;
-		return a * a + b * b + c * c; 
-	}
-	
-	/** Returns the squared distance between this point and the given point
-	 * @param point The other point
-	 * @return The squared distance */
-	public float dst2 (Vector3 point) {
-		final float a = point.x - x;
-		final float b = point.y - y;
-		final float c = point.z - z;
-		return a * a + b * b + c * c;
-	}
-	
-	/** Returns the squared distance between this point and the given point
-	 * @param x The x-component of the other point
-	 * @param y The y-component of the other point
-	 * @param z The z-component of the other point
-	 * @return The squared distance */
-	public float dst2 (float x, float y, float z) {
-		final float a = x - this.x;
-		final float b = y - this.y;
-		final float c = z - this.z;
-		return a * a + b * b + c * c;
+		a *= a;
+		b *= b;
+		c *= c;
+
+		return (float)Math.sqrt(a + b + c);
 	}
 
 	/** Normalizes this vector to unit length
+	 * 
 	 * @return This vector for chaining */
 	public Vector3 nor () {
-		final float len2 = this.len2();
-		if (len2 == 0f || len2 == 1f)
+		float len = this.len();
+		if (len == 0) {
 			return this;
-		return this.scl(1f/(float)Math.sqrt(len2));
-	}
-	
-	/** @return The dot product between the two vectors */
-	public static float dot(float x1, float y1, float z1, float x2, float y2, float z2) {
-		return x1 * x2 + y1 * y2 + z1 * z2;
+		} else {
+			return this.div(len);
+		}
 	}
 
 	/** @param vector The other vector
 	 * @return The dot product between this and the other vector */
-	public float dot (final Vector3 vector) {
+	public float dot (Vector3 vector) {
 		return x * vector.x + y * vector.y + z * vector.z;
 	}
 
-	/** Returns the dot product between this and the given vector.
-	 * @param x The x-component of the other vector
-	 * @param y The y-component of the other vector
-	 * @param z The z-component of the other vector
-	 * @return The dot product */
-	public float dot (float x, float y, float z) {
-		return this.x * x + this.y * y + this.z * z;
-	}
-	
 	/** Sets this vector to the cross product between it and the other vector.
 	 * @param vector The other vector
 	 * @return This vector for chaining */
-	public Vector3 crs (final Vector3 vector) {
+	public Vector3 crs (Vector3 vector) {
 		return this.set(y * vector.z - z * vector.y, z * vector.x - x * vector.z, x * vector.y - y * vector.x);
 	}
 
@@ -380,38 +291,32 @@ public class Vector3 implements Serializable, Vector<Vector3> {
 	/** Multiplies the vector by the given matrix.
 	 * @param matrix The matrix
 	 * @return This vector for chaining */
-	public Vector3 mul (final Matrix4 matrix) {
-		final float l_mat[] = matrix.val;
+	public Vector3 mul (Matrix4 matrix) {
+		float l_mat[] = matrix.val;
 		return this.set(x * l_mat[Matrix4.M00] + y * l_mat[Matrix4.M01] + z * l_mat[Matrix4.M02] + l_mat[Matrix4.M03], x
 			* l_mat[Matrix4.M10] + y * l_mat[Matrix4.M11] + z * l_mat[Matrix4.M12] + l_mat[Matrix4.M13], x * l_mat[Matrix4.M20] + y
 			* l_mat[Matrix4.M21] + z * l_mat[Matrix4.M22] + l_mat[Matrix4.M23]);
 	}
 
-	/** Multiplies the vector by the given {@link Quaternion}.
-	 * @return This vector for chaining */	
-	public Vector3 mul (final Quaternion quat) {
-		return quat.transform(this);
-	}
-	
 	/** Multiplies this vector by the given matrix dividing by w. This is mostly used to project/unproject vectors via a perspective
 	 * projection matrix.
 	 * 
 	 * @param matrix The matrix.
 	 * @return This vector for chaining */
-	public Vector3 prj (final Matrix4 matrix) {
-		final float l_mat[] = matrix.val;
-		final float l_w = 1f / (x * l_mat[Matrix4.M30] + y * l_mat[Matrix4.M31] + z * l_mat[Matrix4.M32] + l_mat[Matrix4.M33]);
-		return this.set((x * l_mat[Matrix4.M00] + y * l_mat[Matrix4.M01] + z * l_mat[Matrix4.M02] + l_mat[Matrix4.M03]) * l_w, (x
+	public Vector3 prj (Matrix4 matrix) {
+		float l_mat[] = matrix.val;
+		float l_w = x * l_mat[Matrix4.M30] + y * l_mat[Matrix4.M31] + z * l_mat[Matrix4.M32] + l_mat[Matrix4.M33];
+		return this.set((x * l_mat[Matrix4.M00] + y * l_mat[Matrix4.M01] + z * l_mat[Matrix4.M02] + l_mat[Matrix4.M03]) / l_w, (x
 			* l_mat[Matrix4.M10] + y * l_mat[Matrix4.M11] + z * l_mat[Matrix4.M12] + l_mat[Matrix4.M13])
-			* l_w, (x * l_mat[Matrix4.M20] + y * l_mat[Matrix4.M21] + z * l_mat[Matrix4.M22] + l_mat[Matrix4.M23]) * l_w);
+			/ l_w, (x * l_mat[Matrix4.M20] + y * l_mat[Matrix4.M21] + z * l_mat[Matrix4.M22] + l_mat[Matrix4.M23]) / l_w);
 	}
 
 	/** Multiplies this vector by the first three columns of the matrix, essentially only applying rotation and scaling.
 	 * 
 	 * @param matrix The matrix
 	 * @return This vector for chaining */
-	public Vector3 rot (final Matrix4 matrix) {
-		final float l_mat[] = matrix.val;
+	public Vector3 rot (Matrix4 matrix) {
+		float l_mat[] = matrix.val;
 		return this.set(x * l_mat[Matrix4.M00] + y * l_mat[Matrix4.M01] + z * l_mat[Matrix4.M02], x * l_mat[Matrix4.M10] + y
 			* l_mat[Matrix4.M11] + z * l_mat[Matrix4.M12], x * l_mat[Matrix4.M20] + y * l_mat[Matrix4.M21] + z * l_mat[Matrix4.M22]);
 	}
@@ -423,7 +328,7 @@ public class Vector3 implements Serializable, Vector<Vector3> {
 	 * @param axisZ the z-component of the axis
 	 * @return This vector for chaining */
 	public Vector3 rotate (float angle, float axisX, float axisY, float axisZ) {
-		return this.mul(tmpMat.setToRotation(axisX, axisY, axisZ, angle));
+		return rotate(tmp.set(axisX, axisY, axisZ), angle);
 	}
 	
 	/** Rotates this vector by the given angle around the given axis.
@@ -431,30 +336,20 @@ public class Vector3 implements Serializable, Vector<Vector3> {
 	 * @param axis
 	 * @param angle the angle
 	 * @return This vector for chaining */
-	public Vector3 rotate (final Vector3 axis, float angle) {
+	public Vector3 rotate (Vector3 axis, float angle) {
 		tmpMat.setToRotation(axis, angle);
 		return this.mul(tmpMat);
 	}
 
 	/** @return Whether this vector is a unit length vector */
 	public boolean isUnit () {
-		return isUnit(0.000000001f);
-	}
-	
-	/** @return Whether this vector is a unit length vector within the given margin */
-	public boolean isUnit(final float margin) {
-		return Math.abs(len2() - 1f) < margin * margin;
+		return this.len() == 1;
 	}
 
 	/** @return Whether this vector is a zero vector */
 	public boolean isZero () {
 		return x == 0 && y == 0 && z == 0;
 	}
-	
-	/** @return Whether the length of this vector is smaller than the given margin */
-	public boolean isZero (final float margin) {
-		return len2() < margin * margin;
-	}
 
 	/** Linearly interpolates between this vector and the target vector by alpha which is in the range [0,1]. The result is stored
 	 * in this vector.
@@ -462,10 +357,10 @@ public class Vector3 implements Serializable, Vector<Vector3> {
 	 * @param target The target vector
 	 * @param alpha The interpolation coefficient
 	 * @return This vector for chaining. */
-	public Vector3 lerp (final Vector3 target, float alpha) {
-		scl(1.0f - alpha);
-		add(target.x * alpha, target.y * alpha, target.z * alpha);
-		return this;
+	public Vector3 lerp (Vector3 target, float alpha) {
+		Vector3 r = this.mul(1.0f - alpha);
+		r.add(target.tmp().mul(alpha));
+		return r;
 	}
 
 	/** Spherically interpolates between this vector and the target vector by alpha which is in the range [0,1]. The result is
@@ -474,55 +369,79 @@ public class Vector3 implements Serializable, Vector<Vector3> {
 	 * @param target The target vector
 	 * @param alpha The interpolation coefficient
 	 * @return This vector for chaining. */
-	public Vector3 slerp (final Vector3 target, float alpha) {
-		final float dot = dot(target);
-		// If the inputs are too close for comfort, simply linearly interpolate.
-		if (dot > 0.9995 || dot < -0.9995)
-			return lerp(target, alpha);
-
-		// theta0 = angle between input vectors
-		final float theta0 = (float)Math.acos(dot);
-		// theta = angle between this vector and result
-		final float theta = theta0 * alpha;
-		
-		final float st = (float)Math.sin(theta);
-		final float tx = target.x - x * dot;
-		final float ty = target.y - y * dot;
-		final float tz = target.z - z * dot;
-		final float l2 = tx * tx + ty * ty + tz * tz;
-		final float dl = st * ((l2 < 0.0001f) ? 1f : 1f / (float)Math.sqrt(l2));
-		
-		return scl((float)Math.cos(theta)).add(tx * dl, ty * dl, tz * dl).nor();
+	public Vector3 slerp (Vector3 target, float alpha) {
+		float dot = dot(target);
+		if (dot > 0.99995 || dot < 0.9995) {
+			this.add(target.tmp().sub(this).mul(alpha));
+			this.nor();
+			return this;
+		}
+
+		if (dot > 1) dot = 1;
+		if (dot < -1) dot = -1;
+
+		float theta0 = (float)Math.acos(dot);
+		float theta = theta0 * alpha;
+		Vector3 v2 = target.tmp().sub(x * dot, y * dot, z * dot);
+		v2.nor();
+		return this.mul((float)Math.cos(theta)).add(v2.mul((float)Math.sin(theta))).nor();
 	}
 
+	/** {@inheritDoc} */
 	public String toString () {
 		return x + "," + y + "," + z;
 	}
-	
-	/** Limits this vector's length to given value
-	 * @param limit Max length
-	 * @return This vector for chaining */
-	public Vector3 limit (float limit) {
-		if (len2() > limit * limit)
-			nor().scl(limit);
-		return this;
+
+	/** Returns the dot product between this and the given vector.
+	 * 
+	 * @param x The x-component of the other vector
+	 * @param y The y-component of the other vector
+	 * @param z The z-component of the other vector
+	 * @return The dot product */
+	public float dot (float x, float y, float z) {
+		return this.x * x + this.y * y + this.z * z;
 	}
-	
-	/** Clamps this vector's length to given value
-	 * @param min Min length
-	 * @param max Max length
-	 * @return This vector for chaining */
-	public Vector3 clamp (float min, float max) {
-		final float l2 = len2();
-		if (l2 == 0f)
-			return this;
-		if (l2 > max * max)
-			return nor().scl(max);
-		if (l2 < min * min)
-			return nor().scl(min);
-		return this;
+
+	/** Returns the squared distance between this point and the given point
+	 * 
+	 * @param point The other point
+	 * @return The squared distance */
+	public float dst2 (Vector3 point) {
+
+		float a = point.x - x;
+		float b = point.y - y;
+		float c = point.z - z;
+
+		a *= a;
+		b *= b;
+		c *= c;
+
+		return a + b + c;
+	}
+
+	/** Returns the squared distance between this point and the given point
+	 * 
+	 * @param x The x-component of the other point
+	 * @param y The y-component of the other point
+	 * @param z The z-component of the other point
+	 * @return The squared distance */
+	public float dst2 (float x, float y, float z) {
+		float a = x - this.x;
+		float b = y - this.y;
+		float c = z - this.z;
+
+		a *= a;
+		b *= b;
+		c *= c;
+
+		return a + b + c;
+	}
+
+	public float dst (float x, float y, float z) {
+		return (float)Math.sqrt(dst2(x, y, z));
 	}
 
+	/** {@inheritDoc} */
 	@Override
 	public int hashCode () {
 		final int prime = 31;
@@ -533,6 +452,7 @@ public class Vector3 implements Serializable, Vector<Vector3> {
 		return result;
 	}
 
+	/** {@inheritDoc} */
 	@Override
 	public boolean equals (Object obj) {
 		if (this == obj) return true;
@@ -549,7 +469,7 @@ public class Vector3 implements Serializable, Vector<Vector3> {
 	 * @param obj
 	 * @param epsilon
 	 * @return whether the vectors are the same. */
-	public boolean epsilonEquals (final Vector3 obj, float epsilon) {
+	public boolean epsilonEquals (Vector3 obj, float epsilon) {
 		if (obj == null) return false;
 		if (Math.abs(obj.x - x) > epsilon) return false;
 		if (Math.abs(obj.y - y) > epsilon) return false;
@@ -565,4 +485,16 @@ public class Vector3 implements Serializable, Vector<Vector3> {
 		if (Math.abs(z - this.z) > epsilon) return false;
 		return true;
 	}
+
+	/** Scales the vector components by the given scalars.
+	 * 
+	 * @param scalarX
+	 * @param scalarY
+	 * @param scalarZ */
+	public Vector3 scale (float scalarX, float scalarY, float scalarZ) {
+		x *= scalarX;
+		y *= scalarY;
+		z *= scalarZ;
+		return this;
+	}
 }
diff --git a/gdx/src/com/badlogic/gdx/net/HttpStatus.java b/gdx/src/com/badlogic/gdx/net/HttpStatus.java
deleted file mode 100644
index 973a083..0000000
--- a/gdx/src/com/badlogic/gdx/net/HttpStatus.java
+++ /dev/null
@@ -1,154 +0,0 @@
-package com.badlogic.gdx.net;
-
-import com.badlogic.gdx.Net;
-import com.badlogic.gdx.Net.HttpRequest;
-import com.badlogic.gdx.Net.HttpResponse;
-
-/** This implementation is widely based Apache's HttpStatus which uses license (Apache license 2.0) -
- * http://www.apache.org/licenses/LICENSE-2.0 For more information on the Apache Software Foundation, please see
- * <http://www.apache.org/>.
- * 
- * Contains information about the HTTP status line returned with the {@link HttpResponse} after a {@link HttpRequest} was
- * performed. Also contains constants enumerating the HTTP Status Codes. All status codes defined in RFC1945 (HTTP/1.0), RFC2616
- * (HTTP/1.1), and RFC2518 (WebDAV) are listed. */
-public class HttpStatus {
-
-	int statusCode;
-
-	/** Returns the status code of the HTTP response, normally 2xx status codes indicate success while 4xx and 5xx indicate client
-	 * and server errors, respectively (see <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html">HTTP/1.1: Status Code
-	 * Definitions</a> for more information about HTTP status codes). */
-	public int getStatusCode () {
-		return statusCode;
-	}
-
-	public HttpStatus (int statusCode) {
-		this.statusCode = statusCode;
-	}
-
-	/*
-	 * Constants enumerating the HTTP status codes. All status codes defined in RFC1945 (HTTP/1.0), RFC2616 (HTTP/1.1), and RFC2518
-	 * (WebDAV) are listed.
-	 */
-
-	// --- 1xx Informational ---
-
-	/** <tt>100 Continue</tt> (HTTP/1.1 - RFC 2616) */
-	public static final int SC_CONTINUE = 100;
-	/** <tt>101 Switching Protocols</tt> (HTTP/1.1 - RFC 2616) */
-	public static final int SC_SWITCHING_PROTOCOLS = 101;
-	/** <tt>102 Processing</tt> (WebDAV - RFC 2518) */
-	public static final int SC_PROCESSING = 102;
-
-	// --- 2xx Success ---
-
-	/** <tt>200 OK</tt> (HTTP/1.0 - RFC 1945) */
-	public static final int SC_OK = 200;
-	/** <tt>201 Created</tt> (HTTP/1.0 - RFC 1945) */
-	public static final int SC_CREATED = 201;
-	/** <tt>202 Accepted</tt> (HTTP/1.0 - RFC 1945) */
-	public static final int SC_ACCEPTED = 202;
-	/** <tt>203 Non Authoritative Information</tt> (HTTP/1.1 - RFC 2616) */
-	public static final int SC_NON_AUTHORITATIVE_INFORMATION = 203;
-	/** <tt>204 No Content</tt> (HTTP/1.0 - RFC 1945) */
-	public static final int SC_NO_CONTENT = 204;
-	/** <tt>205 Reset Content</tt> (HTTP/1.1 - RFC 2616) */
-	public static final int SC_RESET_CONTENT = 205;
-	/** <tt>206 Partial Content</tt> (HTTP/1.1 - RFC 2616) */
-	public static final int SC_PARTIAL_CONTENT = 206;
-	/** <tt>207 Multi-Status</tt> (WebDAV - RFC 2518) or <tt>207 Partial Update
-	 * OK</tt> (HTTP/1.1 - draft-ietf-http-v11-spec-rev-01?) */
-	public static final int SC_MULTI_STATUS = 207;
-
-	// --- 3xx Redirection ---
-
-	/** <tt>300 Mutliple Choices</tt> (HTTP/1.1 - RFC 2616) */
-	public static final int SC_MULTIPLE_CHOICES = 300;
-	/** <tt>301 Moved Permanently</tt> (HTTP/1.0 - RFC 1945) */
-	public static final int SC_MOVED_PERMANENTLY = 301;
-	/** <tt>302 Moved Temporarily</tt> (Sometimes <tt>Found</tt>) (HTTP/1.0 - RFC 1945) */
-	public static final int SC_MOVED_TEMPORARILY = 302;
-	/** <tt>303 See Other</tt> (HTTP/1.1 - RFC 2616) */
-	public static final int SC_SEE_OTHER = 303;
-	/** <tt>304 Not Modified</tt> (HTTP/1.0 - RFC 1945) */
-	public static final int SC_NOT_MODIFIED = 304;
-	/** <tt>305 Use Proxy</tt> (HTTP/1.1 - RFC 2616) */
-	public static final int SC_USE_PROXY = 305;
-	/** <tt>307 Temporary Redirect</tt> (HTTP/1.1 - RFC 2616) */
-	public static final int SC_TEMPORARY_REDIRECT = 307;
-
-	// --- 4xx Client Error ---
-
-	/** <tt>400 Bad Request</tt> (HTTP/1.1 - RFC 2616) */
-	public static final int SC_BAD_REQUEST = 400;
-	/** <tt>401 Unauthorized</tt> (HTTP/1.0 - RFC 1945) */
-	public static final int SC_UNAUTHORIZED = 401;
-	/** <tt>402 Payment Required</tt> (HTTP/1.1 - RFC 2616) */
-	public static final int SC_PAYMENT_REQUIRED = 402;
-	/** <tt>403 Forbidden</tt> (HTTP/1.0 - RFC 1945) */
-	public static final int SC_FORBIDDEN = 403;
-	/** <tt>404 Not Found</tt> (HTTP/1.0 - RFC 1945) */
-	public static final int SC_NOT_FOUND = 404;
-	/** <tt>405 Method Not Allowed</tt> (HTTP/1.1 - RFC 2616) */
-	public static final int SC_METHOD_NOT_ALLOWED = 405;
-	/** <tt>406 Not Acceptable</tt> (HTTP/1.1 - RFC 2616) */
-	public static final int SC_NOT_ACCEPTABLE = 406;
-	/** <tt>407 Proxy Authentication Required</tt> (HTTP/1.1 - RFC 2616) */
-	public static final int SC_PROXY_AUTHENTICATION_REQUIRED = 407;
-	/** <tt>408 Request Timeout</tt> (HTTP/1.1 - RFC 2616) */
-	public static final int SC_REQUEST_TIMEOUT = 408;
-	/** <tt>409 Conflict</tt> (HTTP/1.1 - RFC 2616) */
-	public static final int SC_CONFLICT = 409;
-	/** <tt>410 Gone</tt> (HTTP/1.1 - RFC 2616) */
-	public static final int SC_GONE = 410;
-	/** <tt>411 Length Required</tt> (HTTP/1.1 - RFC 2616) */
-	public static final int SC_LENGTH_REQUIRED = 411;
-	/** <tt>412 Precondition Failed</tt> (HTTP/1.1 - RFC 2616) */
-	public static final int SC_PRECONDITION_FAILED = 412;
-	/** <tt>413 Request Entity Too Large</tt> (HTTP/1.1 - RFC 2616) */
-	public static final int SC_REQUEST_TOO_LONG = 413;
-	/** <tt>414 Request-URI Too Long</tt> (HTTP/1.1 - RFC 2616) */
-	public static final int SC_REQUEST_URI_TOO_LONG = 414;
-	/** <tt>415 Unsupported Media Type</tt> (HTTP/1.1 - RFC 2616) */
-	public static final int SC_UNSUPPORTED_MEDIA_TYPE = 415;
-	/** <tt>416 Requested Range Not Satisfiable</tt> (HTTP/1.1 - RFC 2616) */
-	public static final int SC_REQUESTED_RANGE_NOT_SATISFIABLE = 416;
-	/** <tt>417 Expectation Failed</tt> (HTTP/1.1 - RFC 2616) */
-	public static final int SC_EXPECTATION_FAILED = 417;
-
-	/** Static constant for a 418 error. <tt>418 Unprocessable Entity</tt> (WebDAV drafts?) or
-	 * <tt>418 Reauthentication Required</tt> (HTTP/1.1 drafts?) */
-	// not used
-	// public static final int SC_UNPROCESSABLE_ENTITY = 418;
-
-	/** Static constant for a 419 error. <tt>419 Insufficient Space on Resource</tt> (WebDAV - draft-ietf-webdav-protocol-05?) or
-	 * <tt>419 Proxy Reauthentication Required</tt> (HTTP/1.1 drafts?) */
-	public static final int SC_INSUFFICIENT_SPACE_ON_RESOURCE = 419;
-	/** Static constant for a 420 error. <tt>420 Method Failure</tt> (WebDAV - draft-ietf-webdav-protocol-05?) */
-	public static final int SC_METHOD_FAILURE = 420;
-	/** <tt>422 Unprocessable Entity</tt> (WebDAV - RFC 2518) */
-	public static final int SC_UNPROCESSABLE_ENTITY = 422;
-	/** <tt>423 Locked</tt> (WebDAV - RFC 2518) */
-	public static final int SC_LOCKED = 423;
-	/** <tt>424 Failed Dependency</tt> (WebDAV - RFC 2518) */
-	public static final int SC_FAILED_DEPENDENCY = 424;
-
-	// --- 5xx Server Error ---
-
-	/** <tt>500 Server Error</tt> (HTTP/1.0 - RFC 1945) */
-	public static final int SC_INTERNAL_SERVER_ERROR = 500;
-	/** <tt>501 Not Implemented</tt> (HTTP/1.0 - RFC 1945) */
-	public static final int SC_NOT_IMPLEMENTED = 501;
-	/** <tt>502 Bad Gateway</tt> (HTTP/1.0 - RFC 1945) */
-	public static final int SC_BAD_GATEWAY = 502;
-	/** <tt>503 Service Unavailable</tt> (HTTP/1.0 - RFC 1945) */
-	public static final int SC_SERVICE_UNAVAILABLE = 503;
-	/** <tt>504 Gateway Timeout</tt> (HTTP/1.1 - RFC 2616) */
-	public static final int SC_GATEWAY_TIMEOUT = 504;
-	/** <tt>505 HTTP Version Not Supported</tt> (HTTP/1.1 - RFC 2616) */
-	public static final int SC_HTTP_VERSION_NOT_SUPPORTED = 505;
-
-	/** <tt>507 Insufficient Storage</tt> (WebDAV - RFC 2518) */
-	public static final int SC_INSUFFICIENT_STORAGE = 507;
-
-}
diff --git a/gdx/src/com/badlogic/gdx/net/NetJavaImpl.java b/gdx/src/com/badlogic/gdx/net/NetJavaImpl.java
index d16fab5..61249f8 100644
--- a/gdx/src/com/badlogic/gdx/net/NetJavaImpl.java
+++ b/gdx/src/com/badlogic/gdx/net/NetJavaImpl.java
@@ -1,3 +1,4 @@
+
 package com.badlogic.gdx.net;
 
 import java.io.BufferedReader;
@@ -20,6 +21,7 @@ import com.badlogic.gdx.Net.HttpMethods;
 import com.badlogic.gdx.Net.HttpRequest;
 import com.badlogic.gdx.Net.HttpResponse;
 import com.badlogic.gdx.Net.HttpResponseListener;
+import com.badlogic.gdx.Net.HttpStatus;
 import com.badlogic.gdx.StreamUtils;
 import com.badlogic.gdx.utils.GdxRuntimeException;
 
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/Actor.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/Actor.java
index d3a07fe..635de91 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/Actor.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/Actor.java
@@ -22,8 +22,6 @@ import com.badlogic.gdx.math.MathUtils;
 import com.badlogic.gdx.math.Rectangle;
 import com.badlogic.gdx.math.Vector2;
 import com.badlogic.gdx.scenes.scene2d.InputEvent.Type;
-import com.badlogic.gdx.scenes.scene2d.actions.Actions;
-import com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener;
 import com.badlogic.gdx.scenes.scene2d.utils.ClickListener;
 import com.badlogic.gdx.scenes.scene2d.utils.ScissorStack;
 import com.badlogic.gdx.utils.Array;
@@ -31,22 +29,12 @@ import com.badlogic.gdx.utils.DelayedRemovalArray;
 import com.badlogic.gdx.utils.GdxRuntimeException;
 import com.badlogic.gdx.utils.Pools;
 
-/** 2D scene graph node. An actor has a position, rectangular size, origin, scale, rotation, Z index, and color. The position
- * corresponds to the unrotated, unscaled bottom left corner of the actor. The position is relative to the actor's parent. The
- * origin is relative to the position and is used for scale and rotation.
+/** 2D scene graph node. An actor has a position, rectangular size, origin, scale, rotation, and color. The position corresponds to
+ * the unrotated, unscaled bottom left corner of the actor. The position is relative to the actor's parent. The origin is relative
+ * to the position and is used for scale and rotation.
  * <p>
- * An actor has a list of in-progress {@link Action actions} that are applied to the actor (over time). These are generally used to
- * change the presentation of the actor (moving it, resizing it, etc). See {@link #act(float)} and {@link Action}.
- * <p>
- * An actor has two kinds of listeners associated with it: "capture" and regular. The listeners are notified of events the actor
- * or its children receive. The capture listeners are designed to allow a parent or container actor to hide events from child
- * actors. The regular listeners are designed to allow an actor to respond to events that have been delivered. See {@link #fire}
- * for more details.
- * <p>
- * An {@link InputListener} can receive all the basic input events, and more complex listeners (like {@link ClickListener} and
- * {@link ActorGestureListener}) can listen for and combine primitive events and recognize complex interactions like multi-click
- * or pinch.
- * 
+ * An actor also has a list of actions that can manipulate the actor over time, and a list of listeners that are notified of
+ * events the actor receives.
  * @author mzechner
  * @author Nathan Sweet */
 public class Actor {
@@ -73,7 +61,7 @@ public class Actor {
 	 * {@link SpriteBatch#begin()} must be called before the method returns.
 	 * <p>
 	 * The default implementation does nothing.
-	 * @param parentAlpha Should be multiplied with the actor's alpha, allowing a parent's alpha to affect all children. */
+	 * @param parentAlpha Should be multipied with the actor's alpha, allowing a parent's alpha to affect all children. */
 	public void draw (SpriteBatch batch, float parentAlpha) {
 	}
 
@@ -96,15 +84,11 @@ public class Actor {
 	/** Sets this actor as the event {@link Event#setTarget(Actor) target} and propagates the event to this actor and ancestor
 	 * actors as necessary. If this actor is not in the stage, the stage must be set before calling this method.
 	 * <p>
-	 * Events are fired in 2 phases.
-	 * <ol>
-	 * <li>The first phase (the "capture" phase) notifies listeners on each actor starting at the root and propagating downward to
-	 * (and including) this actor.</li>
-	 * <li>The second phase notifies listeners on each actor starting at this actor and, if {@link Event#getBubbles()} is true,
-	 * propagating upward to the root.</li>
-	 * </ol>
-	 * If the event is {@link Event#stop() stopped} at any time, it will not propagate to the next actor.
-	 * @return true if the event was {@link Event#cancel() cancelled}. */
+	 * Events are fired in 2 phases. The first phase notifies listeners on each actor starting at the root and propagating downward
+	 * to (and including) this actor. The second phase notifes listeners on each actor starting at this actor and, if
+	 * {@link Event#getBubbles()} is true, propagating upward to the root. If the event is {@link Event#stop() stopped} at any time,
+	 * it will not propagate to the next actor.
+	 * @return true of the event was {@link Event#cancel() cancelled}. */
 	public boolean fire (Event event) {
 		if (event.getStage() == null) event.setStage(getStage());
 		event.setTarget(this);
@@ -185,11 +169,9 @@ public class Actor {
 	 * {@link #isVisible() visible}, or null if no actor was hit. The point is specified in the actor's local coordinate system (0,0
 	 * is the bottom left of the actor and width,height is the upper right).
 	 * <p>
-	 * This method is used to delegate touchDown, mouse, and enter/exit events. If this method returns null, those events will not
-	 * occur on this Actor.
+	 * This method is used to delegate touchDown events. If this method returns null, touchDown will not occur.
 	 * <p>
 	 * The default implementation returns this actor if the point is within this actor's bounds.
-	 * 
 	 * @param touchable If true, the hit detection will respect the {@link #setTouchable(Touchable) touchability}.
 	 * @see Touchable */
 	public Actor hit (float x, float y, boolean touchable) {
@@ -204,10 +186,10 @@ public class Actor {
 		return false;
 	}
 
-	/** Add a listener to receive events that {@link #hit(float, float, boolean) hit} this actor. See {@link #fire(Event)}.
-	 * 
+	/**
 	 * @see InputListener
-	 * @see ClickListener */
+	 * @see ClickListener
+	 */
 	public boolean addListener (EventListener listener) {
 		if (!listeners.contains(listener, true)) {
 			listeners.add(listener);
@@ -259,18 +241,6 @@ public class Actor {
 		actions.clear();
 	}
 
-	/** Removes all listeners on this actor. */
-	public void clearListeners () {
-		listeners.clear();
-		captureListeners.clear();
-	}
-
-	/** Removes all actions and listeners on this actor. */
-	public void clear () {
-		clearActions();
-		clearListeners();
-	}
-
 	/** Returns the stage that this actor is currently in, or null if not in a stage. */
 	public Stage getStage () {
 		return stage;
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/Event.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/Event.java
index 516b369..95a66f8 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/Event.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/Event.java
@@ -19,16 +19,6 @@ package com.badlogic.gdx.scenes.scene2d;
 import com.badlogic.gdx.utils.Pool.Poolable;
 
 /** The base class for all events.
- * <p>
- * By default an event will "bubble" up through an actor's parent's handlers (see {@link #setBubbles(boolean)}).
- * <p>
- * An actor's capture listeners can {@link #stop()} an event to prevent child actors from seeing it. 
- * <p>
- * An Event may be marked as "handled" which will end its propagation outside of the Stage (see {@link #handle()}).  
- * The default {@link Actor#fire(Event)} will mark events handled if an {@link EventListener} returns true.
- * <p>
- * A cancelled event will be stopped and handled.  Additionally, many actors will undo the side-effects of a canceled event.  (See {@link #cancel()}.)
- * 
  * @see InputEvent
  * @see Actor#fire(Event) */
 public class Event implements Poolable {
@@ -41,13 +31,13 @@ public class Event implements Poolable {
 	private boolean stopped; // true means event propagation was stopped
 	private boolean cancelled; // true means propagation was stopped and any action that this event would cause should not happen
 
-	/** Marks this event as handled. This does not affect event propagation inside scene2d, but causes the {@link Stage}
+	/** Marks this event has being handled. This does not affect event propagation inside scene2d, but causes the {@link Stage}
 	 * event methods to return false, which will eat the event so it is not passed on to the application under the stage. */
 	public void handle () {
 		handled = true;
 	}
 
-	/** Marks this event cancelled. This {@link #handle() handles} the event and {@link #stop() stops} the event
+	/** Marks this event has being cancelled. This {@link #handle() handles} the event and {@link #stop() stops} the event
 	 * propagation. It also cancels any default action that would have been taken by the code that fired the event. Eg, if the
 	 * event is for a checkbox being checked, cancelling the event could uncheck the checkbox. */
 	public void cancel () {
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/EventListener.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/EventListener.java
index ac08856..843a852 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/EventListener.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/EventListener.java
@@ -20,10 +20,5 @@ package com.badlogic.gdx.scenes.scene2d;
  * @see InputListener
  * @see InputEvent */
 public interface EventListener {
-	/**
-	 * Try to handle the given event, if it is applicable.
-	 *  
-	 * @return true if the event should be considered {@link Event#handle() handled} by scene2d. 
-	 */
 	public boolean handle (Event event);
 }
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/Group.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/Group.java
index 3c37a0e..ab41c0e 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/Group.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/Group.java
@@ -268,7 +268,7 @@ public class Group extends Actor implements Cullable {
 	}
 
 	/** Removes all actors from this group. */
-	public void clearChildren () {
+	public void clear () {
 		Actor[] actors = children.begin();
 		for (int i = 0, n = children.size; i < n; i++) {
 			Actor child = actors[i];
@@ -280,12 +280,6 @@ public class Group extends Actor implements Cullable {
 		childrenChanged();
 	}
 
-	/** Removes all children, actions, and listeners from this group. */
-	public void clear () {
-		super.clear();
-		clearChildren();
-	}
-
 	/** Returns the first actor found with the specified name. Note this recursively compares the name of every actor in the group. */
 	public Actor findActor (String name) {
 		Array<Actor> children = this.children;
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/InputEvent.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/InputEvent.java
index 62b2cb5..474bc41 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/InputEvent.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/InputEvent.java
@@ -33,7 +33,7 @@ public class InputEvent extends Event {
 		button = -1;
 	}
 
-	/** The stage x coordinate where the event occurred. Valid for: touchDown, touchDragged, touchUp, mouseMoved, enter, and exit. */
+	/** The stage x coordinate where the event occured. Valid for: touchDown, touchDragged, touchUp, mouseMoved, enter, and exit. */
 	public float getStageX () {
 		return stageX;
 	}
@@ -42,7 +42,7 @@ public class InputEvent extends Event {
 		this.stageX = stageX;
 	}
 
-	/** The stage x coordinate where the event occurred. Valid for: touchDown, touchDragged, touchUp, mouseMoved, enter, and exit. */
+	/** The stage x coordinate where the event occured. Valid for: touchDown, touchDragged, touchUp, mouseMoved, enter, and exit. */
 	public float getStageY () {
 		return stageY;
 	}
@@ -122,27 +122,7 @@ public class InputEvent extends Event {
 		return type.toString();
 	}
 
-	/** Types of low-level input events supported by stage2d. */
 	static public enum Type {
-		/** A new touch for a pointer on the stage was detected */
-		touchDown, 
-		/** A pointer has stopped touching the stage. */
-		touchUp, 
-		/** A pointer that is touching the stage has moved. */
-		touchDragged, 
-		/** The mouse pointer has moved (without a mouse button being active). */
-		mouseMoved, 
-		/** The mouse pointer or an active touch have entered (i.e., {@link Actor#hit(float, float, boolean) hit}) an actor. */ 
-		enter, 
-		/** The mouse pointer or an active touch have exited an actor. */ 
-		exit, 
-		/** The mouse scroll wheel has changed. */
-		scrolled, 
-		/** A keyboard key has been pressed. */
-		keyDown, 
-		/** A keyboard key has been released. */
-		keyUp, 
-		/** A keyboard key has been pressed and released. */
-		keyTyped
+		touchDown, touchUp, touchDragged, mouseMoved, enter, exit, scrolled, keyDown, keyUp, keyTyped
 	}
 }
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/InputListener.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/InputListener.java
index ef95e43..668768a 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/InputListener.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/InputListener.java
@@ -18,23 +18,8 @@ package com.badlogic.gdx.scenes.scene2d;
 
 import com.badlogic.gdx.math.Vector2;
 
-/** EventListener for low-level input events.  Unpacks {@link InputEvent}s and calls the appropriate method.  By default
- * the methods here do nothing with the event.  Users are expected to override the methods they are interested in, like this:
- * 
- * <pre>
- * actor.addListener(new InputListener() {
- *    public boolean touchDown(InputEvent event, float x, float y, int pointer, int button) {
- *       Gdx.app.log("Example", "touch started at (" +x+ ", " +y+ ")");
- *    }
- *    public void touchUp(InputEvent event, float x, float y, int pointer, int button) {
- *       Gdx.app.log("Example", "touch done at (" +x+ ", " +y+ ")");
- *    }
- * });
- * </pre>
- */
+/** Listener for actor input events. */
 public class InputListener implements EventListener {
-	static private final Vector2 tmpCoords = new Vector2();
-	
 	public boolean handle (Event e) {
 		if (!(e instanceof InputEvent)) return false;
 		InputEvent event = (InputEvent)e;
@@ -48,27 +33,27 @@ public class InputListener implements EventListener {
 			return keyTyped(event, event.getCharacter());
 		}
 
-		tmpCoords.set(event.getStageX(), event.getStageY());
-		event.getListenerActor().stageToLocalCoordinates(tmpCoords);
+		Vector2 coords = Vector2.tmp.set(event.getStageX(), event.getStageY());
+		event.getListenerActor().stageToLocalCoordinates(coords);
 
 		switch (event.getType()) {
 		case touchDown:
-			return touchDown(event, tmpCoords.x, tmpCoords.y, event.getPointer(), event.getButton());
+			return touchDown(event, coords.x, coords.y, event.getPointer(), event.getButton());
 		case touchUp:
-			touchUp(event, tmpCoords.x, tmpCoords.y, event.getPointer(), event.getButton());
+			touchUp(event, coords.x, coords.y, event.getPointer(), event.getButton());
 			return true;
 		case touchDragged:
-			touchDragged(event, tmpCoords.x, tmpCoords.y, event.getPointer());
+			touchDragged(event, coords.x, coords.y, event.getPointer());
 			return true;
 		case mouseMoved:
-			return mouseMoved(event, tmpCoords.x, tmpCoords.y);
+			return mouseMoved(event, coords.x, coords.y);
 		case scrolled:
-			return scrolled(event, tmpCoords.x, tmpCoords.y, event.getScrollAmount());
+			return scrolled(event, coords.x, coords.y, event.getScrollAmount());
 		case enter:
-			enter(event, tmpCoords.x, tmpCoords.y, event.getPointer(), event.getRelatedActor());
+			enter(event, coords.x, coords.y, event.getPointer(), event.getRelatedActor());
 			return false;
 		case exit:
-			exit(event, tmpCoords.x, tmpCoords.y, event.getPointer(), event.getRelatedActor());
+			exit(event, coords.x, coords.y, event.getPointer(), event.getRelatedActor());
 			return false;
 		}
 		return false;
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java
index 38de320..be0d727 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java
@@ -37,26 +37,18 @@ import com.badlogic.gdx.utils.Pool.Poolable;
 import com.badlogic.gdx.utils.Pools;
 import com.badlogic.gdx.utils.SnapshotArray;
 
-/** A 2D scene graph containing hierarchies of {@link Actor actors}. Stage handles the viewport and distributes input events.
+/** A 2D scenegraph containing hierarchies of {@link Actor actors}. Stage handles the viewport and distributing input events.
  * <p>
  * A stage fills the whole screen. {@link #setViewport} controls the coordinates used within the stage and sets up the camera used
- * to convert between stage coordinates and screen coordinates.
+ * to convert between stage coordinates and screen coordinates. *
  * <p>
  * A stage must receive input events so it can distribute them to actors. This is typically done by passing the stage to
  * {@link Input#setInputProcessor(com.badlogic.gdx.InputProcessor) Gdx.input.setInputProcessor}. An {@link InputMultiplexer} may be
  * used to handle input events before or after the stage does. If an actor handles an event by returning true from the input
  * method, then the stage's input method will also return true, causing subsequent InputProcessors to not receive the event.
- * <p>
- * The Stage and its constituents (like Actors and Listeners) are not thread-safe and should only be updated and queried from a
- * single thread (presumably the main render thread). Methods should be reentrant, so you can update Actors and Stages from within
- * callbacks and handlers.
- * 
  * @author mzechner
  * @author Nathan Sweet */
 public class Stage extends InputAdapter implements Disposable {
-	static private final Vector2 actorCoords = new Vector2();
-	static private final Vector3 cameraCoords = new Vector3();
-
 	private float width, height;
 	private float gutterWidth, gutterHeight;
 	private float centerX, centerY;
@@ -514,7 +506,7 @@ public class Stage extends InputAdapter implements Disposable {
 		return root.removeCaptureListener(listener);
 	}
 
-	/** Removes the root's children, actions, and listeners. */
+	/** Clears the stage, removing all actors. */
 	public void clear () {
 		unfocusAll();
 		root.clear();
@@ -645,28 +637,26 @@ public class Stage extends InputAdapter implements Disposable {
 	 * @param touchable If true, the hit detection will respect the {@link Actor#setTouchable(Touchable) touchability}.
 	 * @return May be null if no actor was hit. */
 	public Actor hit (float stageX, float stageY, boolean touchable) {
+		Vector2 actorCoords = Vector2.tmp;
 		root.parentToLocalCoordinates(actorCoords.set(stageX, stageY));
 		return root.hit(actorCoords.x, actorCoords.y, touchable);
 	}
 
 	/** Transforms the screen coordinates to stage coordinates.
-	 * 
-	 * @param screenCoords input screen coordinates and output for resulting stage coordinates. */
+	 * @param screenCoords Stores the result. */
 	public Vector2 screenToStageCoordinates (Vector2 screenCoords) {
-		camera.unproject(cameraCoords.set(screenCoords.x, screenCoords.y, 0));
-		screenCoords.x = cameraCoords.x;
-		screenCoords.y = cameraCoords.y;
+		camera.unproject(Vector3.tmp.set(screenCoords.x, screenCoords.y, 0));
+		screenCoords.x = Vector3.tmp.x;
+		screenCoords.y = Vector3.tmp.y;
 		return screenCoords;
 	}
 
-	/** Transforms the stage coordinates to screen coordinates.
-	 * 
-	 * @param stageCoords input stage coordinates and output for resulting screen coordinates */
+	/** Transforms the stage coordinates to screen coordinates. */
 	public Vector2 stageToScreenCoordinates (Vector2 stageCoords) {
-		cameraCoords.set(stageCoords.x, stageCoords.y, 0);
-		camera.project(cameraCoords);
-		stageCoords.x = cameraCoords.x;
-		stageCoords.y = cameraCoords.y;
+		Vector3.tmp.set(stageCoords.x, stageCoords.y, 0);
+		camera.project(Vector3.tmp);
+		stageCoords.x = Vector3.tmp.x;
+		stageCoords.y = Vector3.tmp.y;
 		return stageCoords;
 	}
 
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/Actions.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/Actions.java
index 57431f7..31344da 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/Actions.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/Actions.java
@@ -20,7 +20,6 @@ import com.badlogic.gdx.graphics.Color;
 import com.badlogic.gdx.math.Interpolation;
 import com.badlogic.gdx.scenes.scene2d.Action;
 import com.badlogic.gdx.scenes.scene2d.Actor;
-import com.badlogic.gdx.scenes.scene2d.EventListener;
 import com.badlogic.gdx.scenes.scene2d.Touchable;
 import com.badlogic.gdx.utils.Pool;
 import com.badlogic.gdx.utils.Pools;
@@ -36,32 +35,13 @@ public class Actions {
 		return action;
 	}
 
-	static public AddAction addAction (Action action) {
-		AddAction addAction = action(AddAction.class);
-		addAction.setAction(action);
-		return addAction;
-	}
-
-	static public AddAction addAction (Action action, Actor targetActor) {
+	static public AddAction add (Actor targetActor, Action action) {
 		AddAction addAction = action(AddAction.class);
 		addAction.setTargetActor(targetActor);
 		addAction.setAction(action);
 		return addAction;
 	}
 
-	static public RemoveAction removeAction (Action action) {
-		RemoveAction removeAction = action(RemoveAction.class);
-		removeAction.setAction(action);
-		return removeAction;
-	}
-
-	static public RemoveAction removeAction (Action action, Actor targetActor) {
-		RemoveAction removeAction = action(RemoveAction.class);
-		removeAction.setTargetActor(targetActor);
-		removeAction.setAction(action);
-		return removeAction;
-	}
-
 	/** Moves the actor instantly. */
 	static public MoveToAction moveTo (float x, float y) {
 		return moveTo(x, y, 0, null);
@@ -440,34 +420,4 @@ public class Actions {
 		afterAction.setAction(action);
 		return afterAction;
 	}
-
-	static public AddListenerAction addListener (EventListener listener, boolean capture) {
-		AddListenerAction addAction = action(AddListenerAction.class);
-		addAction.setListener(listener);
-		addAction.setCapture(capture);
-		return addAction;
-	}
-
-	static public AddListenerAction addListener (EventListener listener, boolean capture, Actor targetActor) {
-		AddListenerAction addAction = action(AddListenerAction.class);
-		addAction.setTargetActor(targetActor);
-		addAction.setListener(listener);
-		addAction.setCapture(capture);
-		return addAction;
-	}
-
-	static public RemoveListenerAction removeListener (EventListener listener, boolean capture) {
-		RemoveListenerAction addAction = action(RemoveListenerAction.class);
-		addAction.setListener(listener);
-		addAction.setCapture(capture);
-		return addAction;
-	}
-
-	static public RemoveListenerAction removeListener (EventListener listener, boolean capture, Actor targetActor) {
-		RemoveListenerAction addAction = action(RemoveListenerAction.class);
-		addAction.setTargetActor(targetActor);
-		addAction.setListener(listener);
-		addAction.setCapture(capture);
-		return addAction;
-	}
 }
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddAction.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddAction.java
index dd11d0b..8933c58 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddAction.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddAction.java
@@ -12,8 +12,7 @@
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
- ******************************************************************************/
-
+ ******************************************************************************/
 package com.badlogic.gdx.scenes.scene2d.actions;
 
 import com.badlogic.gdx.scenes.scene2d.Action;
@@ -26,7 +25,7 @@ public class AddAction extends Action {
 	private Action action;
 
 	public boolean act (float delta) {
-		(targetActor != null ? targetActor : actor).addAction(action);
+		targetActor.addAction(action);
 		return true;
 	}
 
@@ -34,7 +33,6 @@ public class AddAction extends Action {
 		return targetActor;
 	}
 
-	/** Sets the actor to add an action to. If null (the default), the {@link #getActor() actor} will be used. */
 	public void setTargetActor (Actor actor) {
 		this.targetActor = actor;
 	}
@@ -56,4 +54,4 @@ public class AddAction extends Action {
 		targetActor = null;
 		action = null;
 	}
-}
+}
\ No newline at end of file
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java
deleted file mode 100644
index 8509aed..0000000
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java
+++ /dev/null
@@ -1,69 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-
-package com.badlogic.gdx.scenes.scene2d.actions;
-
-import com.badlogic.gdx.scenes.scene2d.Action;
-import com.badlogic.gdx.scenes.scene2d.Actor;
-import com.badlogic.gdx.scenes.scene2d.EventListener;
-
-/** Adds a listener to an actor.
- * @author Nathan Sweet */
-public class AddListenerAction extends Action {
-	private Actor targetActor;
-	private EventListener listener;
-	private boolean capture;
-
-	public boolean act (float delta) {
-		Actor actor = (targetActor != null ? targetActor : this.actor);
-		if (capture)
-			targetActor.addCaptureListener(listener);
-		else
-			targetActor.addListener(listener);
-		return true;
-	}
-
-	public Actor getTargetActor () {
-		return targetActor;
-	}
-
-	/** Sets the actor to add a listneer to. If null (the default), the {@link #getActor() actor} will be used. */
-	public void setTargetActor (Actor actor) {
-		this.targetActor = actor;
-	}
-
-	public EventListener getListener () {
-		return listener;
-	}
-
-	public void setListener (EventListener listener) {
-		this.listener = listener;
-	}
-
-	public boolean getCapture () {
-		return capture;
-	}
-
-	public void setCapture (boolean capture) {
-		this.capture = capture;
-	}
-
-	public void reset () {
-		super.reset();
-		targetActor = null;
-		listener = null;
-	}
-}
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/RemoveAction.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/RemoveAction.java
deleted file mode 100644
index 3460108..0000000
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/RemoveAction.java
+++ /dev/null
@@ -1,55 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-
-package com.badlogic.gdx.scenes.scene2d.actions;
-
-import com.badlogic.gdx.scenes.scene2d.Action;
-import com.badlogic.gdx.scenes.scene2d.Actor;
-
-/** Removes an action from an actor.
- * @author Nathan Sweet */
-public class RemoveAction extends Action {
-	private Actor targetActor;
-	private Action action;
-
-	public boolean act (float delta) {
-		(targetActor != null ? targetActor : actor).removeAction(action);
-		return true;
-	}
-
-	public Actor getTargetActor () {
-		return targetActor;
-	}
-
-	/** Sets the actor to remove an action from. If null (the default), the {@link #getActor() actor} will be used. */
-	public void setTargetActor (Actor actor) {
-		this.targetActor = actor;
-	}
-
-	public Action getAction () {
-		return action;
-	}
-
-	public void setAction (Action action) {
-		this.action = action;
-	}
-
-	public void reset () {
-		super.reset();
-		targetActor = null;
-		action = null;
-	}
-}
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/RemoveActorAction.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/RemoveActorAction.java
index 25ce733..0a83d5f 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/RemoveActorAction.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/RemoveActorAction.java
@@ -19,7 +19,7 @@ package com.badlogic.gdx.scenes.scene2d.actions;
 import com.badlogic.gdx.scenes.scene2d.Action;
 import com.badlogic.gdx.scenes.scene2d.Actor;
 
-/** Removes an actor from the stage.
+/** Removes the actor the action is attached to or another actor.
  * @author Nathan Sweet */
 public class RemoveActorAction extends Action {
 	private Actor removeActor;
@@ -46,7 +46,7 @@ public class RemoveActorAction extends Action {
 		return removeActor;
 	}
 
-	/** Sets the actor to remove. If null (the default), the {@link #getActor() actor} will be used. */
+	/** Sets the actor to remove. If null (the default), the {@link #getActor() actor} will be removed. */
 	public void setRemoveActor (Actor removeActor) {
 		this.removeActor = removeActor;
 	}
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/RemoveListenerAction.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/RemoveListenerAction.java
deleted file mode 100644
index 2869484..0000000
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/RemoveListenerAction.java
+++ /dev/null
@@ -1,69 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-
-package com.badlogic.gdx.scenes.scene2d.actions;
-
-import com.badlogic.gdx.scenes.scene2d.Action;
-import com.badlogic.gdx.scenes.scene2d.Actor;
-import com.badlogic.gdx.scenes.scene2d.EventListener;
-
-/** Removes a listener from an actor.
- * @author Nathan Sweet */
-public class RemoveListenerAction extends Action {
-	private Actor targetActor;
-	private EventListener listener;
-	private boolean capture;
-
-	public boolean act (float delta) {
-		Actor actor = (targetActor != null ? targetActor : this.actor);
-		if (capture)
-			actor.removeCaptureListener(listener);
-		else
-			actor.removeListener(listener);
-		return true;
-	}
-
-	public Actor getTargetActor () {
-		return targetActor;
-	}
-
-	/** Sets the actor to remove a listner from. If null (the default), the {@link #getActor() actor} will be used. */
-	public void setTargetActor (Actor actor) {
-		this.targetActor = actor;
-	}
-
-	public EventListener getListener () {
-		return listener;
-	}
-
-	public void setListener (EventListener listener) {
-		this.listener = listener;
-	}
-
-	public boolean getCapture () {
-		return capture;
-	}
-
-	public void setCapture (boolean capture) {
-		this.capture = capture;
-	}
-
-	public void reset () {
-		super.reset();
-		targetActor = null;
-		listener = null;
-	}
-}
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/RepeatAction.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/RepeatAction.java
index f7bed8f..8fbfa7e 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/RepeatAction.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/RepeatAction.java
@@ -27,7 +27,6 @@ public class RepeatAction extends DelegateAction {
 	public boolean act (float delta) {
 		if (executedCount == repeatCount) return true;
 		if (action.act(delta)) {
-			if (finished) return true;
 			if (repeatCount > 0) executedCount++;
 			if (executedCount == repeatCount) return true;
 			if (action != null) action.restart();
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Button.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Button.java
index 8ddfc2b..91f42a4 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Button.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Button.java
@@ -132,10 +132,6 @@ public class Button extends Table {
 		return clickListener.isOver();
 	}
 
-	public ClickListener getClickListener () {
-		return clickListener;
-	}
-
 	public boolean isDisabled () {
 		return isDisabled;
 	}
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ButtonGroup.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ButtonGroup.java
index 244c7c3..3de1422 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ButtonGroup.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ButtonGroup.java
@@ -71,7 +71,7 @@ public class ButtonGroup {
 		if (text == null) throw new IllegalArgumentException("text cannot be null.");
 		for (int i = 0, n = buttons.size; i < n; i++) {
 			Button button = buttons.get(i);
-			if (button instanceof TextButton && text.contentEquals(((TextButton)button).getText())) {
+			if (button instanceof TextButton && text.equals(((TextButton)button).getText())) {
 				button.setChecked(true);
 				return;
 			}
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/CheckBox.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/CheckBox.java
index 22b88bc..eb8b716 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/CheckBox.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/CheckBox.java
@@ -38,7 +38,7 @@ public class CheckBox extends TextButton {
 
 	public CheckBox (String text, CheckBoxStyle style) {
 		super(text, style);
-		clearChildren();
+		clear();
 		add(image = new Image(style.checkboxOff));
 		Label label = getLabel();
 		add(label);
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Dialog.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Dialog.java
index d03a754..871bcf7 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Dialog.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Dialog.java
@@ -19,6 +19,7 @@ package com.badlogic.gdx.scenes.scene2d.ui;
 import static com.badlogic.gdx.scenes.scene2d.actions.Actions.*;
 
 import com.badlogic.gdx.Input.Keys;
+import com.badlogic.gdx.graphics.g2d.SpriteBatch;
 import com.badlogic.gdx.math.Interpolation;
 import com.badlogic.gdx.scenes.scene2d.Actor;
 import com.badlogic.gdx.scenes.scene2d.Group;
@@ -28,8 +29,10 @@ import com.badlogic.gdx.scenes.scene2d.Stage;
 import com.badlogic.gdx.scenes.scene2d.actions.Actions;
 import com.badlogic.gdx.scenes.scene2d.ui.Label.LabelStyle;
 import com.badlogic.gdx.scenes.scene2d.ui.TextButton.TextButtonStyle;
+import com.badlogic.gdx.scenes.scene2d.utils.Align;
 import com.badlogic.gdx.scenes.scene2d.utils.ChangeListener;
 import com.badlogic.gdx.scenes.scene2d.utils.FocusListener;
+import com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent;
 import com.badlogic.gdx.utils.ObjectMap;
 
 /** Displays a dialog, which is a modal window containing a content table with a button table underneath it. Methods are provided
@@ -46,13 +49,6 @@ public class Dialog extends Window {
 	boolean cancelHide;
 	Actor previousKeyboardFocus, previousScrollFocus;
 
-	InputListener ignoreTouchDown = new InputListener() {
-		public boolean touchDown (InputEvent event, float x, float y, int pointer, int button) {
-			event.cancel();
-			return false;
-		}
-	};
-
 	public Dialog (String title, Skin skin) {
 		super(title, skin.get(WindowStyle.class));
 		this.skin = skin;
@@ -83,7 +79,6 @@ public class Dialog extends Window {
 
 		buttonTable.addListener(new ChangeListener() {
 			public void changed (ChangeEvent event, Actor actor) {
-				if (!values.containsKey(actor)) return;
 				while (actor.getParent() != buttonTable)
 					actor = actor.getParent();
 				result(values.get(actor));
@@ -103,8 +98,7 @@ public class Dialog extends Window {
 
 			private void focusChanged (FocusEvent event) {
 				Stage stage = getStage();
-				if (isModal && stage != null && stage.getRoot().getChildren().size > 0
-					&& stage.getRoot().getChildren().peek() == Dialog.this) { // Dialog is top most actor.
+				if (isModal && stage != null && stage.getRoot().getChildren().peek() == Dialog.this) { // Dialog is top most actor.
 					Actor newFocusedActor = event.getRelatedActor();
 					if (newFocusedActor == null || !newFocusedActor.isDescendantOf(Dialog.this)) event.cancel();
 				}
@@ -174,7 +168,6 @@ public class Dialog extends Window {
 	/** {@link #pack() Packs} the dialog and adds it to the stage, centered. */
 	public Dialog show (Stage stage) {
 		clearActions();
-		removeCaptureListener(ignoreTouchDown);
 		previousKeyboardFocus = stage.getKeyboardFocus();
 		previousScrollFocus = stage.getScrollFocus();
 		pack();
@@ -192,12 +185,7 @@ public class Dialog extends Window {
 	/** Hides the dialog. Called automatically when a button is clicked. The default implementation fades out the dialog over
 	 * {@link #fadeDuration} seconds and then removes it from the stage. */
 	public void hide () {
-		if (fadeDuration > 0) {
-			addCaptureListener(ignoreTouchDown);
-			addAction(sequence(fadeOut(fadeDuration, Interpolation.fade), Actions.removeListener(ignoreTouchDown, true),
-				Actions.removeActor()));
-		} else
-			remove();
+		addAction(sequence(fadeOut(fadeDuration, Interpolation.fade), Actions.removeActor()));
 	}
 
 	protected void setParent (Group parent) {
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/List.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/List.java
index 6f1b523..db27a04 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/List.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/List.java
@@ -72,11 +72,9 @@ public class List extends Widget implements Cullable {
 		selectedIndex = (int)((getHeight() - y) / itemHeight);
 		selectedIndex = Math.max(0, selectedIndex);
 		selectedIndex = Math.min(items.length - 1, selectedIndex);
-		if (oldIndex != selectedIndex) {
-			ChangeEvent changeEvent = Pools.obtain(ChangeEvent.class);
-			if (fire(changeEvent)) selectedIndex = oldIndex;
-			Pools.free(changeEvent);
-		}
+		ChangeEvent changeEvent = Pools.obtain(ChangeEvent.class);
+		if (fire(changeEvent)) selectedIndex = oldIndex;
+		Pools.free(changeEvent);
 	}
 
 	public void setStyle (ListStyle style) {
@@ -108,11 +106,10 @@ public class List extends Widget implements Cullable {
 
 		font.setColor(fontColorUnselected.r, fontColorUnselected.g, fontColorUnselected.b, fontColorUnselected.a * parentAlpha);
 		float itemY = getHeight();
-        float padding = selectedDrawable.getLeftWidth() + selectedDrawable.getRightWidth();
 		for (int i = 0; i < items.length; i++) {
 			if (cullingArea == null || (itemY - itemHeight <= cullingArea.y + cullingArea.height && itemY >= cullingArea.y)) {
 				if (selectedIndex == i) {
-					selectedDrawable.draw(batch, x, y + itemY - itemHeight, Math.max(prefWidth, getWidth() + padding), itemHeight);
+					selectedDrawable.draw(batch, x, y + itemY - itemHeight, Math.max(prefWidth, getWidth()), itemHeight);
 					font.setColor(fontColorSelected.r, fontColorSelected.g, fontColorSelected.b, fontColorSelected.a * parentAlpha);
 				}
 				font.draw(batch, items[i], x + textOffsetX, y + itemY - textOffsetY);
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java
index caea4a2..8a064c8 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java
@@ -96,8 +96,9 @@ public class ScrollPane extends WidgetGroup {
 	/** @param widget May be null. */
 	public ScrollPane (Actor widget, ScrollPaneStyle style) {
 		if (style == null) throw new IllegalArgumentException("style cannot be null.");
+		this.widget = widget;
 		this.style = style;
-		setWidget(widget);
+		if (widget != null) setWidget(widget);
 		setWidth(150);
 		setHeight(150);
 
@@ -567,7 +568,6 @@ public class ScrollPane extends WidgetGroup {
 	/** Sets the {@link Actor} embedded in this scroll pane.
 	 * @param widget May be null to remove any current actor. */
 	public void setWidget (Actor widget) {
-		if(widget == this) throw new IllegalArgumentException("widget cannot be same object");
 		if (this.widget != null) super.removeActor(this.widget);
 		this.widget = widget;
 		if (widget != null) super.addActor(widget);
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/SelectBox.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/SelectBox.java
index 6e0a7cc..42ac35c 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/SelectBox.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/SelectBox.java
@@ -43,8 +43,6 @@ import com.badlogic.gdx.utils.Pools;
  * @author mzechner
  * @author Nathan Sweet */
 public class SelectBox extends Widget {
-	static final Vector2 tmpCoords = new Vector2();
-
 	SelectBoxStyle style;
 	String[] items;
 	int selectedIndex = 0;
@@ -76,8 +74,9 @@ public class SelectBox extends Widget {
 					return true;
 				}
 				Stage stage = getStage();
-				stage.screenToStageCoordinates(tmpCoords.set(screenCoords));
-				list = new SelectList(tmpCoords.x, tmpCoords.y);
+				Vector2 stageCoords = Vector2.tmp;
+				stage.screenToStageCoordinates(stageCoords.set(screenCoords.x, screenCoords.y));
+				list = new SelectList(stageCoords.x, stageCoords.y);
 				stage.addActor(list);
 				return true;
 			}
@@ -195,14 +194,12 @@ public class SelectBox extends Widget {
 	}
 
 	public void hideList () {
-		if (list == null || list.getParent() == null) return;
-
-		getStage().removeCaptureListener(list.stageListener);
+		if (list.getParent() == null) return;
 		list.addAction(sequence(fadeOut(0.15f, Interpolation.fade), removeActor()));
 	}
 
 	class SelectList extends Actor {
-		final Vector2 oldScreenCoords = new Vector2();
+		Vector2 oldScreenCoords = new Vector2();
 		float itemHeight;
 		float textOffsetX, textOffsetY;
 		int listSelectedIndex = SelectBox.this.selectedIndex;
@@ -210,11 +207,11 @@ public class SelectBox extends Widget {
 		InputListener stageListener = new InputListener() {
 			public boolean touchDown (InputEvent event, float x, float y, int pointer, int button) {
 				if (pointer == 0 && button != 0) return false;
-				stageToLocalCoordinates(tmpCoords.set(event.getStageX(), event.getStageY()));
-				x = tmpCoords.x;
-				y = tmpCoords.y;
+				stageToLocalCoordinates(Vector2.tmp);
+				x = Vector2.tmp.x;
+				y = Vector2.tmp.y;
 				if (x > 0 && x < getWidth() && y > 0 && y < getHeight()) {
-					listSelectedIndex = (int) ((getHeight() - style.listBackground.getTopHeight() - y) / itemHeight);
+					listSelectedIndex = (int)((getHeight() - y) / itemHeight);
 					listSelectedIndex = Math.max(0, listSelectedIndex);
 					listSelectedIndex = Math.min(items.length - 1, listSelectedIndex);
 					selectedIndex = listSelectedIndex;
@@ -229,12 +226,13 @@ public class SelectBox extends Widget {
 
 			public void touchUp (InputEvent event, float x, float y, int pointer, int button) {
 				hideList();
+				event.getStage().removeCaptureListener(stageListener);
 			}
 
 			public boolean mouseMoved (InputEvent event, float x, float y) {
-				stageToLocalCoordinates(tmpCoords.set(event.getStageX(), event.getStageY()));
-				x = tmpCoords.x;
-				y = tmpCoords.y;
+				stageToLocalCoordinates(Vector2.tmp);
+				x = Vector2.tmp.x;
+				y = Vector2.tmp.y;
 				if (x > 0 && x < getWidth() && y > 0 && y < getHeight()) {
 					listSelectedIndex = (int)((getHeight() - style.listBackground.getTopHeight() - y) / itemHeight);
 					listSelectedIndex = Math.max(0, listSelectedIndex);
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Slider.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Slider.java
index f3455b8..53380bc 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Slider.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Slider.java
@@ -28,7 +28,7 @@ import com.badlogic.gdx.scenes.scene2d.utils.ChangeListener.ChangeEvent;
 import com.badlogic.gdx.scenes.scene2d.utils.Drawable;
 import com.badlogic.gdx.utils.Pools;
 
-/** A slider is a horizontal indicator that allows a user to set a value. The slider has a range (min, max) and a stepping between
+/** A slider is a horizontal indicator that allows a user to set a value. The slider his a range (min, max) and a stepping between
  * each value the slider represents.
  * <p>
  * {@link ChangeEvent} is fired when the slider knob is moved. Cancelling the event will move the knob to where it was previously.
@@ -134,11 +134,9 @@ public class Slider extends Widget {
 			bg.draw(batch, x + (int)((width - bg.getMinWidth()) * 0.5f), y, bg.getMinWidth(), height);
 
 			float sliderPosHeight = height - (bg.getTopHeight() + bg.getBottomHeight());
-			if(min!=max){
-				sliderPos = (value - min) / (max - min) * (sliderPosHeight - knobHeight);
-				sliderPos = Math.max(0, sliderPos);
-				sliderPos = Math.min(sliderPosHeight - knobHeight, sliderPos) + bg.getBottomHeight();
-			}
+			sliderPos = (value - min) / (max - min) * (sliderPosHeight - knobHeight);
+			sliderPos = Math.max(0, sliderPos);
+			sliderPos = Math.min(sliderPosHeight - knobHeight, sliderPos) + bg.getBottomHeight();
 
 			float knobHeightHalf = knobHeight * 0.5f;
 			if (knobBefore != null) {
@@ -154,11 +152,9 @@ public class Slider extends Widget {
 			bg.draw(batch, x, y + (int)((height - bg.getMinHeight()) * 0.5f), width, bg.getMinHeight());
 
 			float sliderPosWidth = width - (bg.getLeftWidth() + bg.getRightWidth());
-			if(min!=max){
-				sliderPos = (value - min) / (max - min) * (sliderPosWidth - knobWidth);
-				sliderPos = Math.max(0, sliderPos);
-				sliderPos = Math.min(sliderPosWidth - knobWidth, sliderPos) + bg.getLeftWidth();
-			}
+			sliderPos = (value - min) / (max - min) * (sliderPosWidth - knobWidth);
+			sliderPos = Math.max(0, sliderPos);
+			sliderPos = Math.min(sliderPosWidth - knobWidth, sliderPos) + bg.getLeftWidth();
 
 			float knobHeightHalf = knobHeight * 0.5f;
 			if (knobBefore != null) {
@@ -219,6 +215,7 @@ public class Slider extends Widget {
 
 	/** Sets the slider position, rounded to the nearest step size and clamped to the minumum and maximim values. */
 	public void setValue (float value) {
+		if (value < min || value > max) throw new IllegalArgumentException("value must be >= min and <= max: " + value);
 		value = MathUtils.clamp(Math.round(value / stepSize) * stepSize, min, max);
 		float oldValue = this.value;
 		if (value == oldValue) return;
@@ -236,11 +233,10 @@ public class Slider extends Widget {
 
 	/** Sets the range of this slider. The slider's current value is reset to min. */
 	public void setRange (float min, float max) {
-		if (min > max) throw new IllegalArgumentException("min must be <= max");
+		if (min >= max) throw new IllegalArgumentException("min must be < max");
 		this.min = min;
 		this.max = max;
-		if (value<min) setValue(min);
-		else if (value>max) setValue(max);
+		setValue(min);
 	}
 
 	/** Sets the step size of the slider */
@@ -310,4 +306,4 @@ public class Slider extends Widget {
 			this.knob = style.knob;
 		}
 	}
-}
+}
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java
index 7b8a409..9e25796 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java
@@ -177,8 +177,8 @@ public class Table extends WidgetGroup {
 	}
 
 	/** Removes all actors and cells from the table. */
-	public void clearChildren () {
-		super.clearChildren();
+	public void clear () {
+		super.clear();
 		layout.clear();
 		invalidate();
 	}
@@ -250,8 +250,8 @@ public class Table extends WidgetGroup {
 		layout.layout();
 	}
 
-	/** Removes all actors and cells from the table (same as {@link #clearChildren()}) and additionally resets all table properties
-	 * and cell, column, and row defaults. */
+	/** Removes all actors and cells from the table (same as {@link #clear()}) and additionally resets all table properties and
+	 * cell, column, and row defaults. */
 	public void reset () {
 		layout.reset();
 	}
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java
index 67bebe9..7b69f18 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java
@@ -63,10 +63,6 @@ public class TextField extends Widget {
 	static private final char DELETE = 127;
 	static private final char BULLET = 149;
 
-	static private final Vector2 tmp1 = new Vector2();
-	static private final Vector2 tmp2 = new Vector2();
-	static private final Vector2 tmp3 = new Vector2();
-
 	TextFieldStyle style;
 	String text, messageText;
 	private CharSequence displayText;
@@ -104,7 +100,7 @@ public class TextField extends Widget {
 	float keyRepeatInitialTime = 0.4f;
 	float keyRepeatTime = 0.1f;
 	boolean rightAligned;
-
+	
 	int maxLength = 0;
 
 	public TextField (String text, Skin skin) {
@@ -133,7 +129,7 @@ public class TextField extends Widget {
 			public boolean touchDown (InputEvent event, float x, float y, int pointer, int button) {
 				if (!super.touchDown(event, x, y, pointer, button)) return false;
 				if (pointer == 0 && button != 0) return false;
-				if (disabled) return true;
+				if (disabled) return true;				
 				clearSelection();
 				setCursorPosition(x);
 				selectionStart = cursor;
@@ -364,12 +360,12 @@ public class TextField extends Widget {
 			}
 		});
 	}
-
-	public void setMaxLength (int maxLength) {
+	
+	public void setMaxLength(int maxLength) {
 		this.maxLength = maxLength;
 	}
-
-	public int getMaxLength () {
+	
+	public int getMaxLength() {
 		return this.maxLength;
 	}
 
@@ -486,7 +482,7 @@ public class TextField extends Widget {
 				} else
 					font.setColor(0.7f, 0.7f, 0.7f, parentAlpha);
 				BitmapFont messageFont = style.messageFont != null ? style.messageFont : font;
-				messageFont.draw(batch, messageText, x + bgLeftWidth, y + textY + yOffset);
+				font.draw(batch, messageText, x + bgLeftWidth, y + textY + yOffset);
 			}
 		} else {
 			font.setColor(fontColor.r, fontColor.g, fontColor.b, fontColor.a * parentAlpha);
@@ -593,14 +589,14 @@ public class TextField extends Widget {
 	public void next (boolean up) {
 		Stage stage = getStage();
 		if (stage == null) return;
-		getParent().localToStageCoordinates(tmp1.set(getX(), getY()));
-		TextField textField = findNextTextField(stage.getActors(), null, tmp2, tmp1, up);
+		getParent().localToStageCoordinates(Vector2.tmp.set(getX(), getY()));
+		TextField textField = findNextTextField(stage.getActors(), null, Vector2.tmp2, Vector2.tmp, up);
 		if (textField == null) { // Try to wrap around.
 			if (up)
-				tmp1.set(Float.MIN_VALUE, Float.MIN_VALUE);
+				Vector2.tmp.set(Float.MIN_VALUE, Float.MIN_VALUE);
 			else
-				tmp1.set(Float.MAX_VALUE, Float.MAX_VALUE);
-			textField = findNextTextField(getStage().getActors(), null, tmp2, tmp1, up);
+				Vector2.tmp.set(Float.MAX_VALUE, Float.MAX_VALUE);
+			textField = findNextTextField(getStage().getActors(), null, Vector2.tmp2, Vector2.tmp, up);
 		}
 		if (textField != null)
 			stage.setKeyboardFocus(textField);
@@ -613,7 +609,7 @@ public class TextField extends Widget {
 			Actor actor = actors.get(i);
 			if (actor == this) continue;
 			if (actor instanceof TextField) {
-				Vector2 actorCoords = actor.getParent().localToStageCoordinates(tmp3.set(actor.getX(), actor.getY()));
+				Vector2 actorCoords = actor.getParent().localToStageCoordinates(Vector2.tmp3.set(actor.getX(), actor.getY()));
 				if ((actorCoords.y < currentCoords.y || (actorCoords.y == currentCoords.y && actorCoords.x > currentCoords.x)) ^ up) {
 					if (best == null
 						|| (actorCoords.y > bestCoords.y || (actorCoords.y == bestCoords.y && actorCoords.x < bestCoords.x)) ^ up) {
@@ -648,7 +644,7 @@ public class TextField extends Widget {
 	}
 
 	/** Sets the text that will be drawn in the text field if no text has been entered.
-	 * @param messageText may be null. */
+	 * @parma messageText May be null. */
 	public void setMessageText (String messageText) {
 		this.messageText = messageText;
 	}
@@ -769,16 +765,16 @@ public class TextField extends Widget {
 	public boolean isDisabled () {
 		return disabled;
 	}
-
-	public boolean isPasswordMode () {
+	
+	public boolean isPasswordMode(){
 		return passwordMode;
 	}
-
-	public TextFieldFilter getTextFieldFilter () {
+	
+	public TextFieldFilter getTextFieldFilter(){
 		return filter;
 	}
 
-	class KeyRepeatTask extends Task {
+ 	class KeyRepeatTask extends Task {
 		int keycode;
 
 		public void run () {
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Tree.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Tree.java
index 0ced3cc..b4c41d6 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Tree.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Tree.java
@@ -12,8 +12,7 @@
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
- ******************************************************************************/
-
+ ******************************************************************************/
 package com.badlogic.gdx.scenes.scene2d.ui;
 
 import com.badlogic.gdx.Gdx;
@@ -144,8 +143,8 @@ public class Tree extends WidgetGroup {
 	}
 
 	/** Removes all tree nodes. */
-	public void clearChildren () {
-		super.clearChildren();
+	public void clear () {
+		super.clear();
 		rootNodes.clear();
 		selectedNodes.clear();
 		setOverNode(null);
@@ -515,7 +514,6 @@ public class Tree extends WidgetGroup {
 			return children;
 		}
 
-		/** @return May be null. */
 		public Node getParent () {
 			return parent;
 		}
@@ -597,4 +595,4 @@ public class Tree extends WidgetGroup {
 			this.selection = style.selection;
 		}
 	}
-}
+}
\ No newline at end of file
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Window.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Window.java
index ed4d439..2a2ce5c 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Window.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Window.java
@@ -36,9 +36,6 @@ import com.badlogic.gdx.scenes.scene2d.utils.Drawable;
  * children to the window, it can be convenient to call {@link #pack()} to size the window to the size of the children.
  * @author Nathan Sweet */
 public class Window extends Table {
-	static private final Vector2 tmpPosition = new Vector2();
-	static private final Vector2 tmpSize = new Vector2();
-
 	private WindowStyle style;
 	private String title;
 	private BitmapFontCache titleCache;
@@ -144,10 +141,9 @@ public class Window extends Table {
 			Color color = getColor();
 			batch.setColor(color.r, color.g, color.b, color.a * parentAlpha);
 			Stage stage = getStage();
-			stageToLocalCoordinates(/* in/out */tmpPosition.set(0, 0));
-			stageToLocalCoordinates(/* in/out */tmpSize.set(stage.getWidth(), stage.getHeight()));
-			style.stageBackground
-				.draw(batch, getX() + tmpPosition.x, getY() + tmpPosition.y, getX() + tmpSize.x, getY() + tmpSize.y);
+			Vector2 position = stageToLocalCoordinates(Vector2.tmp.set(0, 0));
+			Vector2 size = stageToLocalCoordinates(Vector2.tmp2.set(stage.getWidth(), stage.getHeight()));
+			style.stageBackground.draw(batch, getX() + position.x, getY() + position.y, getX() + size.x, getY() + size.y);
 		}
 
 		super.drawBackground(batch, parentAlpha);
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/ActorGestureListener.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/ActorGestureListener.java
index dc42434..f43f01a 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/ActorGestureListener.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/ActorGestureListener.java
@@ -29,8 +29,6 @@ import com.badlogic.gdx.scenes.scene2d.InputEvent;
  * @see GestureDetector
  * @author Nathan Sweet */
 public class ActorGestureListener implements EventListener {
-	static final Vector2 tmpCoords = new Vector2();
-
 	private final GestureDetector detector;
 	InputEvent event;
 	Actor actor, touchDownTarget;
@@ -47,14 +45,14 @@ public class ActorGestureListener implements EventListener {
 			private final Vector2 pointer1 = new Vector2(), pointer2 = new Vector2();
 
 			public boolean tap (float stageX, float stageY, int count, int button) {
-				actor.stageToLocalCoordinates(tmpCoords.set(stageX, stageY));
-				ActorGestureListener.this.tap(event, tmpCoords.x, tmpCoords.y, count, button);
+				actor.stageToLocalCoordinates(Vector2.tmp.set(stageX, stageY));
+				ActorGestureListener.this.tap(event, Vector2.tmp.x, Vector2.tmp.y, count, button);
 				return true;
 			}
 
 			public boolean longPress (float stageX, float stageY) {
-				actor.stageToLocalCoordinates(tmpCoords.set(stageX, stageY));
-				return ActorGestureListener.this.longPress(actor, tmpCoords.x, tmpCoords.y);
+				actor.stageToLocalCoordinates(Vector2.tmp.set(stageX, stageY));
+				return ActorGestureListener.this.longPress(actor, Vector2.tmp.x, Vector2.tmp.y);
 			}
 
 			public boolean fling (float velocityX, float velocityY, int button) {
@@ -63,8 +61,8 @@ public class ActorGestureListener implements EventListener {
 			}
 
 			public boolean pan (float stageX, float stageY, float deltaX, float deltaY) {
-				actor.stageToLocalCoordinates(tmpCoords.set(stageX, stageY));
-				ActorGestureListener.this.pan(event, tmpCoords.x, tmpCoords.y, deltaX, deltaY);
+				actor.stageToLocalCoordinates(Vector2.tmp.set(stageX, stageY));
+				ActorGestureListener.this.pan(event, Vector2.tmp.x, Vector2.tmp.y, deltaX, deltaY);
 				return true;
 			}
 
@@ -94,15 +92,15 @@ public class ActorGestureListener implements EventListener {
 			actor = event.getListenerActor();
 			touchDownTarget = event.getTarget();
 			detector.touchDown(event.getStageX(), event.getStageY(), event.getPointer(), event.getButton());
-			actor.stageToLocalCoordinates(tmpCoords.set(event.getStageX(), event.getStageY()));
-			touchDown(event, tmpCoords.x, tmpCoords.y, event.getPointer(), event.getButton());
+			actor.stageToLocalCoordinates(Vector2.tmp.set(event.getStageX(), event.getStageY()));
+			touchDown(event, Vector2.tmp.x, Vector2.tmp.y, event.getPointer(), event.getButton());
 			return true;
 		case touchUp:
 			this.event = event;
 			actor = event.getListenerActor();
 			detector.touchUp(event.getStageX(), event.getStageY(), event.getPointer(), event.getButton());
-			actor.stageToLocalCoordinates(tmpCoords.set(event.getStageX(), event.getStageY()));
-			touchUp(event, tmpCoords.x, tmpCoords.y, event.getPointer(), event.getButton());
+			actor.stageToLocalCoordinates(Vector2.tmp.set(event.getStageX(), event.getStageY()));
+			touchUp(event, Vector2.tmp.x, Vector2.tmp.y, event.getPointer(), event.getButton());
 			return true;
 		case touchDragged:
 			this.event = event;
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/ClickListener.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/ClickListener.java
index bf96bff..ce6fef7 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/ClickListener.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/ClickListener.java
@@ -68,9 +68,9 @@ public class ClickListener extends InputListener {
 	public void touchUp (InputEvent event, float x, float y, int pointer, int button) {
 		if (pointer == pressedPointer) {
 			if (!cancelled) {
-				over = isOver(event.getListenerActor(), x, y);
-				if (over && pointer == 0 && this.button != -1 && button != this.button) over = false;
-				if (over) {
+				boolean validClick = isOver(event.getListenerActor(), x, y);
+				if (validClick && pointer == 0 && this.button != -1 && button != this.button) validClick = false;
+				if (validClick) {
 					long time = TimeUtils.nanoTime();
 					if (time - lastTapTime > tapCountInterval) tapCount = 0;
 					tapCount++;
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/DragAndDrop.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/DragAndDrop.java
index 2be80c4..13c8e52 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/DragAndDrop.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/DragAndDrop.java
@@ -28,8 +28,6 @@ import com.badlogic.gdx.utils.ObjectMap;
 /** Manages drag and drop operations through registered drag sources and drop targets.
  * @author Nathan Sweet */
 public class DragAndDrop {
-	static final Vector2 tmpVector = new Vector2();
-
 	Source source;
 	Payload payload;
 	Actor dragActor;
@@ -42,18 +40,10 @@ public class DragAndDrop {
 	float dragActorX = 14, dragActorY = -20;
 	long dragStartTime;
 	int dragTime = 250;
-	int activePointer = -1;
 
 	public void addSource (final Source source) {
 		DragListener listener = new DragListener() {
 			public void dragStart (InputEvent event, float x, float y, int pointer) {
-				if (activePointer != -1) {
-					event.stop();
-					return;
-				}
-
-				activePointer = pointer;
-
 				dragStartTime = System.currentTimeMillis();
 				payload = source.dragStart(event, getTouchDownX(), getTouchDownY(), pointer);
 				event.stop();
@@ -61,8 +51,6 @@ public class DragAndDrop {
 
 			public void drag (InputEvent event, float x, float y, int pointer) {
 				if (payload == null) return;
-				if (pointer != activePointer) return;
-
 				Stage stage = event.getStage();
 
 				Touchable dragActorTouchable = null;
@@ -81,8 +69,8 @@ public class DragAndDrop {
 						Target target = targets.get(i);
 						if (!target.actor.isAscendantOf(hit)) continue;
 						newTarget = target;
-						target.actor.stageToLocalCoordinates(tmpVector.set(event.getStageX(), event.getStageY()));
-						isValidTarget = target.drag(source, payload, tmpVector.x, tmpVector.y, pointer);
+						target.actor.stageToLocalCoordinates(Vector2.tmp.set(event.getStageX(), event.getStageY()));
+						isValidTarget = target.drag(source, payload, Vector2.tmp.x, Vector2.tmp.y, pointer);
 						break;
 					}
 				}
@@ -114,15 +102,11 @@ public class DragAndDrop {
 
 			public void dragStop (InputEvent event, float x, float y, int pointer) {
 				if (payload == null) return;
-				if (pointer != activePointer) return;
-
-				activePointer = -1;
-
 				if (System.currentTimeMillis() - dragStartTime < dragTime) isValidTarget = false;
 				if (dragActor != null) dragActor.remove();
 				if (isValidTarget) {
-					target.actor.stageToLocalCoordinates(tmpVector.set(event.getStageX(), event.getStageY()));
-					target.drop(source, payload, tmpVector.x, tmpVector.y, pointer);
+					target.actor.stageToLocalCoordinates(Vector2.tmp.set(event.getStageX(), event.getStageY()));
+					target.drop(source, payload, Vector2.tmp.x, Vector2.tmp.y, pointer);
 				}
 				source.dragStop(event, x, y, pointer, isValidTarget ? target : null);
 				if (target != null) target.reset(source, payload);
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/NinePatchDrawable.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/NinePatchDrawable.java
index ee57246..7e7bfc4 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/NinePatchDrawable.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/NinePatchDrawable.java
@@ -31,7 +31,7 @@ import com.badlogic.gdx.graphics.g2d.SpriteBatch;
 public class NinePatchDrawable extends BaseDrawable {
 	private NinePatch patch;
 
-	/** Creates an uninitialized NinePatchDrawable. The ninepatch must be {@link #setPatch(NinePatch) set} before use. */
+	/** Creates an unitialized NinePatchDrawable. The ninepatch must be set before use. */
 	public NinePatchDrawable () {
 	}
 
diff --git a/gdx/src/com/badlogic/gdx/utils/Array.java b/gdx/src/com/badlogic/gdx/utils/Array.java
index 6bbca3f..b87585a 100644
--- a/gdx/src/com/badlogic/gdx/utils/Array.java
+++ b/gdx/src/com/badlogic/gdx/utils/Array.java
@@ -17,6 +17,7 @@
 package com.badlogic.gdx.utils;
 
 import com.badlogic.gdx.math.MathUtils;
+
 import java.util.Comparator;
 import java.util.Iterator;
 import java.util.NoSuchElementException;
@@ -33,7 +34,6 @@ public class Array<T> implements Iterable<T> {
 	public boolean ordered;
 
 	private ArrayIterator iterator;
-	private Predicate.PredicateIterable<T> predicateIterable;
 
 	/** Creates an ordered array with a capacity of 16. */
 	public Array () {
@@ -151,9 +151,7 @@ public class Array<T> implements Iterable<T> {
 		items[second] = firstValue;
 	}
 
-	/** Returns if this array contains value.
-	 * @param identity If true, == comparison will be used. If false, .equals() comparison will be used.
-	 * @return true if array contains value, false if it doesn't */
+	/** @param identity If true, == comparison will be used. If false, .equals() comaparison will be used. */
 	public boolean contains (T value, boolean identity) {
 		T[] items = this.items;
 		int i = size - 1;
@@ -167,9 +165,6 @@ public class Array<T> implements Iterable<T> {
 		return false;
 	}
 
-	/** Returns an index of first occurrence of value in array or -1 if no such value exists
-	 * @param identity If true, == comparison will be used. If false, .equals() comparison will be used.
-	 * @return An index of first occurrence of value in array or -1 if no such value exists */
 	public int indexOf (T value, boolean identity) {
 		T[] items = this.items;
 		if (identity || value == null) {
@@ -182,10 +177,6 @@ public class Array<T> implements Iterable<T> {
 		return -1;
 	}
 
-	/** Returns an index of last occurrence of value in array or -1 if no such value exists. Search is started from the end of an
-	 * array.
-	 * @param identity If true, == comparison will be used. If false, .equals() comparison will be used.
-	 * @return An index of last occurrence of value in array or -1 if no such value exists */
 	public int lastIndexOf (T value, boolean identity) {
 		T[] items = this.items;
 		if (identity || value == null) {
@@ -198,9 +189,6 @@ public class Array<T> implements Iterable<T> {
 		return -1;
 	}
 
-	/** Removes value from an array if it exists.
-	 * @param identity If true, == comparison will be used. If false, .equals() comparison will be used.
-	 * @return true if value was found and removed, false otherwise */
 	public boolean removeValue (T value, boolean identity) {
 		T[] items = this.items;
 		if (identity || value == null) {
@@ -283,7 +271,6 @@ public class Array<T> implements Iterable<T> {
 
 	/** Returns the first item. */
 	public T first () {
-		if (size == 0) throw new IllegalStateException("Array is empty.");
 		return items[0];
 	}
 
@@ -357,17 +344,6 @@ public class Array<T> implements Iterable<T> {
 		return iterator;
 	}
 
-	/** Returns an iterable for the selected items in the array. Remove is supported, but not between hasNext() and next(). Note
-	 * that the same iteratable instance is returned each time this method is called. Use the {@link Predicate.PredicateIterable}
-	 * constructor for nested or multithreaded iteration. */
-	public Iterable<T> select (Predicate<T> predicate) {
-		if (predicateIterable == null)
-			predicateIterable = new Predicate.PredicateIterable<T>(this, predicate);
-		else
-			predicateIterable.set(this, predicate);
-		return predicateIterable;
-	}
-
 	/** Reduces the size of the array to the specified size. If the array is already smaller than the specified size, no action is
 	 * taken. */
 	public void truncate (int newSize) {
diff --git a/gdx/src/com/badlogic/gdx/utils/ArrayMap.java b/gdx/src/com/badlogic/gdx/utils/ArrayMap.java
index 642e620..2c7f92b 100644
--- a/gdx/src/com/badlogic/gdx/utils/ArrayMap.java
+++ b/gdx/src/com/badlogic/gdx/utils/ArrayMap.java
@@ -157,12 +157,10 @@ public class ArrayMap<K, V> {
 	}
 
 	public K firstKey () {
-		if (size == 0) throw new IllegalStateException("Map is empty.");
 		return keys[0];
 	}
 
 	public V firstValue () {
-		if (size == 0) throw new IllegalStateException("Map is empty.");
 		return values[0];
 	}
 
diff --git a/gdx/src/com/badlogic/gdx/utils/Bits.java b/gdx/src/com/badlogic/gdx/utils/Bits.java
deleted file mode 100755
index a15bfc4..0000000
--- a/gdx/src/com/badlogic/gdx/utils/Bits.java
+++ /dev/null
@@ -1,75 +0,0 @@
-
-package com.badlogic.gdx.utils;
-
-import java.util.Arrays;
-
-/** A bitset, without size limitation, allows comparison via bitwise operators to other bitfields.
- * @author mzechner */
-public class Bits {
-	long[] bits = { 0 };
-
-	/**
-	 * @param index the index of the bit
-	 * @return whether the bit is set
-	 * @throws ArrayIndexOutOfBoundsException if index < 0
-	 */
-	public boolean get (int index) {
-		final int word = index >>> 6;
-		if(word >= bits.length) return false;
-		return (bits[word] & (1L << (index & 0x3F))) != 0L;
-	}
-
-	/**
-	 * @param index the index of the bit to set
-	 * @throws ArrayIndexOutOfBoundsException if index < 0
-	 */
-	public void set (int index) {
-		final int word = index >>> 6;
-		checkCapacity(word);
-		bits[word] |= 1L << (index & 0x3F);
-	}
-	
-	/**
-	 * @param index the index of the bit to flip
-	 */
-	public void flip(int index) {
-		final int word = index >>> 6;
-		checkCapacity(word);
-		bits[word] ^= 1L << (index & 0x3F);
-	}
-	
-	private void checkCapacity(int len) {
-		if(len> bits.length) {
-			long[] newBits = new long[len+1];
-			System.arraycopy(bits, 0, newBits, 0, bits.length);
-			bits = newBits;
-		}
-	}
-
-	/**
-	 * @param index the index of the bit to clear
-	 * @throws ArrayIndexOutOfBoundsException if index < 0
-	 */
-	public void clear (int index) {
-		final int word = index >>> 6;
-		if(word >= bits.length) return;
-		bits[word] &= ~(1L << (index & 0x3F));
-	}
-
-	/**
-	 * Clears the entire bitset
-	 */
-	public void clear () {
-		int length = bits.length;
-		for (int i = 0; i < length; i++) {
-			bits[i] = 0L;
-		}
-	}
-	
-	/**
-	 * @return the number of bits currently stored, <b>not</b> the highset set bit!
-	 */
-	public int numBits() {
-		return bits.length << 6;
-	}
-}
diff --git a/gdx/src/com/badlogic/gdx/utils/BooleanArray.java b/gdx/src/com/badlogic/gdx/utils/BooleanArray.java
index a3da3d6..fe76f0d 100644
--- a/gdx/src/com/badlogic/gdx/utils/BooleanArray.java
+++ b/gdx/src/com/badlogic/gdx/utils/BooleanArray.java
@@ -176,7 +176,6 @@ public class BooleanArray {
 
 	/** Returns the first item. */
 	public boolean first () {
-		if (size == 0) throw new IllegalStateException("Array is empty.");
 		return items[0];
 	}
 
diff --git a/gdx/src/com/badlogic/gdx/utils/CharArray.java b/gdx/src/com/badlogic/gdx/utils/CharArray.java
index a99b25b..44e66f9 100644
--- a/gdx/src/com/badlogic/gdx/utils/CharArray.java
+++ b/gdx/src/com/badlogic/gdx/utils/CharArray.java
@@ -207,7 +207,6 @@ public class CharArray {
 
 	/** Returns the first item. */
 	public char first () {
-		if (size == 0) throw new IllegalStateException("Array is empty.");
 		return items[0];
 	}
 
diff --git a/gdx/src/com/badlogic/gdx/utils/FloatArray.java b/gdx/src/com/badlogic/gdx/utils/FloatArray.java
index 9522552..bcf4d93 100644
--- a/gdx/src/com/badlogic/gdx/utils/FloatArray.java
+++ b/gdx/src/com/badlogic/gdx/utils/FloatArray.java
@@ -207,7 +207,6 @@ public class FloatArray {
 
 	/** Returns the first item. */
 	public float first () {
-		if (size == 0) throw new IllegalStateException("Array is empty.");
 		return items[0];
 	}
 
diff --git a/gdx/src/com/badlogic/gdx/utils/GdxBuild.java b/gdx/src/com/badlogic/gdx/utils/GdxBuild.java
index 3aab4b9..d7a81a6 100644
--- a/gdx/src/com/badlogic/gdx/utils/GdxBuild.java
+++ b/gdx/src/com/badlogic/gdx/utils/GdxBuild.java
@@ -45,9 +45,8 @@ public class GdxBuild {
 		BuildTarget lin64 = BuildTarget.newDefaultTarget(TargetOs.Linux, true);
 		BuildTarget android = BuildTarget.newDefaultTarget(TargetOs.Android, false);
 		BuildTarget mac = BuildTarget.newDefaultTarget(TargetOs.MacOsX, false);
-		BuildTarget ios = BuildTarget.newDefaultTarget(TargetOs.IOS, false);
 		new AntScriptGenerator().generate(new BuildConfig("gdx", "../target/native", LIBS_DIR, JNI_DIR), mac, win32home, win32,
-			win64, lin32, lin64, android, ios);
+			win64, lin32, lin64, android);
 
 		// build natives
 		// BuildExecutor.executeAnt("jni/build-windows32home.xml", "-v");
diff --git a/gdx/src/com/badlogic/gdx/utils/IntArray.java b/gdx/src/com/badlogic/gdx/utils/IntArray.java
index a60788d..9ab0f6b 100644
--- a/gdx/src/com/badlogic/gdx/utils/IntArray.java
+++ b/gdx/src/com/badlogic/gdx/utils/IntArray.java
@@ -207,7 +207,6 @@ public class IntArray {
 
 	/** Returns the first item. */
 	public int first () {
-		if (size == 0) throw new IllegalStateException("Array is empty.");
 		return items[0];
 	}
 
diff --git a/gdx/src/com/badlogic/gdx/utils/Json.java b/gdx/src/com/badlogic/gdx/utils/Json.java
index a519e84..da4b9bf 100644
--- a/gdx/src/com/badlogic/gdx/utils/Json.java
+++ b/gdx/src/com/badlogic/gdx/utils/Json.java
@@ -35,7 +35,6 @@ import java.util.ArrayList;
 import java.util.Collection;
 import java.util.Collections;
 import java.util.HashMap;
-import java.util.List;
 import java.util.Map;
 
 /** Reads/writes Java objects to/from JSON, automatically.
@@ -484,7 +483,7 @@ public class Json {
 				return;
 			}
 
-			if (Enum.class.isAssignableFrom(actualType)) {
+			if (actualType.isEnum()) {
 				writer.value(value);
 				return;
 			}
@@ -832,8 +831,9 @@ public class Json {
 					newArray.add(readValue(elementType, null, array.get(i)));
 				return (T)newArray;
 			}
-			if (List.class.isAssignableFrom(type)) {
-				List newArray = type == null ? new ArrayList(array.size) : (List)newInstance(type);
+			if (ArrayList.class.isAssignableFrom(type)) {
+				ArrayList newArray = type == null ? new ArrayList() : (ArrayList)newInstance(type);
+				newArray.ensureCapacity(array.size);
 				for (int i = 0, n = array.size; i < n; i++)
 					newArray.add(readValue(elementType, null, array.get(i)));
 				return (T)newArray;
@@ -879,7 +879,7 @@ public class Json {
 			}
 			if (type == boolean.class || type == Boolean.class) return (T)Boolean.valueOf(string);
 			if (type == char.class || type == Character.class) return (T)(Character)string.charAt(0);
-			if (Enum.class.isAssignableFrom(type)) {
+			if (type.isEnum()) {
 				Object[] constants = type.getEnumConstants();
 				for (int i = 0, n = constants.length; i < n; i++)
 					if (string.equals(constants[i].toString())) return (T)constants[i];
diff --git a/gdx/src/com/badlogic/gdx/utils/JsonWriter.java b/gdx/src/com/badlogic/gdx/utils/JsonWriter.java
index 21aac12..abc3cd3 100644
--- a/gdx/src/com/badlogic/gdx/utils/JsonWriter.java
+++ b/gdx/src/com/badlogic/gdx/utils/JsonWriter.java
@@ -149,7 +149,8 @@ public class JsonWriter extends Writer {
 		json,
 		/** Like JSON, but names are only quoted if necessary. */
 		javascript,
-		/** Like JSON, but names and values are only quoted if necessary. */
+		/** Like JSON, but names and values are only quoted if necessary. This is best for object serialization, because it has a
+		 * difference between a String field being null and "null". */
 		minimal;
 
 		static private Pattern javascriptPattern = Pattern.compile("[a-zA-Z_$][a-zA-Z_$0-9]*");
@@ -157,7 +158,8 @@ public class JsonWriter extends Writer {
 		static private Pattern minimalNamePattern = Pattern.compile("[a-zA-Z0-9_$][^:}\\], ]*");
 
 		public String quoteValue (Object value) {
-			if (value == null || value instanceof Number || value instanceof Boolean) return String.valueOf(value);
+			if (this != OutputType.json && (value == null || value instanceof Number || value instanceof Boolean))
+				return String.valueOf(value);
 			String string = String.valueOf(value).replace("\\", "\\\\");
 			if (this == OutputType.minimal && !string.equals("true") && !string.equals("false") && !string.equals("null")
 				&& minimalValuePattern.matcher(string).matches()) return string;
diff --git a/gdx/src/com/badlogic/gdx/utils/LongArray.java b/gdx/src/com/badlogic/gdx/utils/LongArray.java
index 60cf13f..274d500 100644
--- a/gdx/src/com/badlogic/gdx/utils/LongArray.java
+++ b/gdx/src/com/badlogic/gdx/utils/LongArray.java
@@ -207,7 +207,6 @@ public class LongArray {
 
 	/** Returns the first item. */
 	public long first () {
-		if (size == 0) throw new IllegalStateException("Array is empty.");
 		return items[0];
 	}
 
diff --git a/gdx/src/com/badlogic/gdx/utils/Predicate.java b/gdx/src/com/badlogic/gdx/utils/Predicate.java
deleted file mode 100644
index ef795d6..0000000
--- a/gdx/src/com/badlogic/gdx/utils/Predicate.java
+++ /dev/null
@@ -1,114 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-
-package com.badlogic.gdx.utils;
-
-import java.util.Iterator;
-
-import com.badlogic.gdx.utils.Array.ArrayIterator;
-
-/** Interface used to select items within an iterator against a predicate.
- * @author Xoppa
- */
-public interface Predicate<T> {
-	boolean evaluate(T arg0);
-	
-	public class PredicateIterator<T> implements Iterator<T> {
-		public Iterator<T> iterator;
-		public Predicate<T> predicate;
-		public boolean end = false;
-		public boolean peeked = false;
-		public T next = null;
-
-		public PredicateIterator(final Iterable<T> iterable, final Predicate<T> predicate) {
-			this(iterable.iterator(), predicate);
-		}
-		
-		public PredicateIterator(final Iterator<T> iterator, final Predicate<T> predicate) {
-			set(iterator, predicate);
-		}
-		
-		public void set(final Iterable<T> iterable, final Predicate<T> predicate) {
-			set(iterable.iterator(), predicate);
-		}
-		
-		public void set(final Iterator<T> iterator, final Predicate<T> predicate) {
-			this.iterator = iterator;
-			this.predicate = predicate;
-			end = peeked = false;
-			next = null;
-		}
-		
-		@Override
-		public boolean hasNext() {
-			if (end) return false;
-			if (next != null) return true;
-			peeked = true;
-			while(iterator.hasNext()) {
-				final T n = iterator.next();
-				if (predicate.evaluate(n)) {
-					next = n;
-					return true;
-				}
-			}
-			end = true;
-			return false;
-		}
-
-		@Override
-		public T next() {
-			if (next == null && !hasNext())
-				return null;
-			final T result = next;
-			next = null;
-			peeked = false;
-			return result;
-		}
-
-		@Override
-		public void remove() {
-			if (peeked)
-				throw new GdxRuntimeException("Cannot remove between a call to hasNext() and next().");
-			iterator.remove();
-		}
-	}
-	
-	public static class PredicateIterable<T> implements Iterable<T> {
-		public Iterable<T> iterable;
-		public Predicate<T> predicate;
-		public PredicateIterator<T> iterator = null;
-		
-		public PredicateIterable(Iterable<T> iterable, Predicate<T> predicate) {
-			set(iterable, predicate);
-		}
-		
-		public void set(Iterable<T> iterable, Predicate<T> predicate) {
-			this.iterable = iterable;
-			this.predicate = predicate;
-		}
-
-		/** Returns an iterator. Note that the same iterator instance is returned each time this method is called. 
-		 * Use the {@link Predicate.PredicateIterator} constructor for nested or multithreaded iteration. */
-		@Override
-		public Iterator<T> iterator() {
-			if (iterator == null)
-				iterator = new PredicateIterator<T>(iterable.iterator(), predicate);
-			else
-				iterator.set(iterable.iterator(), predicate);
-			return iterator;
-		}
-	}
-}
diff --git a/gdx/src/com/badlogic/gdx/utils/Scaling.java b/gdx/src/com/badlogic/gdx/utils/Scaling.java
index d399079..b2151b2 100644
--- a/gdx/src/com/badlogic/gdx/utils/Scaling.java
+++ b/gdx/src/com/badlogic/gdx/utils/Scaling.java
@@ -44,7 +44,7 @@ public enum Scaling {
 	/** The source is not scaled. */
 	none;
 
-	static private final Vector2 temp = new Vector2();
+	static private Vector2 temp = new Vector2();
 
 	/** Returns the size of the source scaled to the target. Note the same Vector2 instance is always returned and should never be
 	 * cached. */
diff --git a/gdx/src/com/badlogic/gdx/utils/SharedLibraryLoader.java b/gdx/src/com/badlogic/gdx/utils/SharedLibraryLoader.java
index f49f1d8..adecee9 100644
--- a/gdx/src/com/badlogic/gdx/utils/SharedLibraryLoader.java
+++ b/gdx/src/com/badlogic/gdx/utils/SharedLibraryLoader.java
@@ -30,13 +30,11 @@ import java.util.zip.ZipFile;
 /** Loads shared libraries from a natives jar file (desktop) or arm folders (Android). For desktop projects, have the natives jar
  * in the classpath, for Android projects put the shared libraries in the libs/armeabi and libs/armeabi-v7a folders.
  * 
- * @author mzechner
- * @author Nathan Sweet */
+ * @author mzechner */
 public class SharedLibraryLoader {
 	static public boolean isWindows = System.getProperty("os.name").contains("Windows");
 	static public boolean isLinux = System.getProperty("os.name").contains("Linux");
 	static public boolean isMac = System.getProperty("os.name").contains("Mac");
-	static public boolean isIos = false;
 	static public boolean isAndroid = false;
 	static public boolean is64Bit = System.getProperty("os.arch").equals("amd64");
 	static {
@@ -48,10 +46,6 @@ public class SharedLibraryLoader {
 			isMac = false;
 			is64Bit = false;
 		}
-		if (!isAndroid && !isWindows && !isLinux && !isMac) {
-			isIos = true;
-			is64Bit = false;
-		}
 	}
 
 	static private HashSet<String> loadedLibraries = new HashSet();
@@ -69,7 +63,7 @@ public class SharedLibraryLoader {
 
 	/** Returns a CRC of the remaining bytes in the stream. */
 	public String crc (InputStream input) {
-		if (input == null) throw new IllegalArgumentException("input cannot be null.");
+		if (input == null) return "" + System.nanoTime(); // fallback
 		CRC32 crc = new CRC32();
 		byte[] buffer = new byte[4096];
 		try {
@@ -98,26 +92,14 @@ public class SharedLibraryLoader {
 	/** Loads a shared library for the platform the application is running on.
 	 * @param libraryName The platform independent library name. If not contain a prefix (eg lib) or suffix (eg .dll). */
 	public synchronized void load (String libraryName) {
-		// in case of iOS, things have been linked statically to the executable, bail out.
-		if (isIos) return;
-
 		libraryName = mapLibraryName(libraryName);
 		if (loadedLibraries.contains(libraryName)) return;
 
 		try {
 			if (isAndroid)
 				System.loadLibrary(libraryName);
-			else {
-				File f = extractFile(libraryName, null);
-				if (f != null){
-					System.load(f.getAbsolutePath());
-				}else{
-					// fallback for applets, see https://code.google.com/p/libgdx/issues/detail?id=1290
-					String fallback = new File(System.getProperty("java.library.path")+"/"+libraryName).getAbsolutePath();
-					System.load(fallback);
-				}
-			}
-			
+			else
+				System.load(extractFile(libraryName, null).getAbsolutePath());
 		} catch (Throwable ex) {
 			throw new GdxRuntimeException("Couldn't load shared library '" + libraryName + "' for target: "
 				+ System.getProperty("os.name") + (is64Bit ? ", 64-bit" : ", 32-bit"), ex);
@@ -126,11 +108,7 @@ public class SharedLibraryLoader {
 	}
 
 	private InputStream readFile (String path) {
-		if (nativesJar == null) {
-			InputStream input = SharedLibraryLoader.class.getResourceAsStream("/" + path);
-			if (input == null) throw new GdxRuntimeException("Unable to read file for extraction: " + path);
-			return input;
-		}
+		if (nativesJar == null) return SharedLibraryLoader.class.getResourceAsStream("/" + path);
 
 		// Read from JAR.
 		try {
@@ -167,6 +145,7 @@ public class SharedLibraryLoader {
 		if (extractedCrc == null || !extractedCrc.equals(sourceCrc)) {
 			try {
 				InputStream input = readFile(sourcePath);
+				if (input == null) return null;
 				extractedDir.mkdirs();
 				FileOutputStream output = new FileOutputStream(extractedFile);
 				byte[] buffer = new byte[4096];
@@ -181,7 +160,6 @@ public class SharedLibraryLoader {
 				throw new GdxRuntimeException("Error extracting file: " + sourcePath, ex);
 			}
 		}
-		if (!extractedFile.exists()) throw new GdxRuntimeException("Unable to extract file: " + sourcePath);
-		return extractedFile;
+		return extractedFile.exists() ? extractedFile : null;
 	}
 }
diff --git a/gdx/src/com/badlogic/gdx/utils/ShortArray.java b/gdx/src/com/badlogic/gdx/utils/ShortArray.java
deleted file mode 100644
index cc3cc9c..0000000
--- a/gdx/src/com/badlogic/gdx/utils/ShortArray.java
+++ /dev/null
@@ -1,317 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-
-package com.badlogic.gdx.utils;
-
-import java.util.Arrays;
-
-import com.badlogic.gdx.math.MathUtils;
-
-/** A resizable, ordered or unordered short array. Avoids the boxing that occurs with ArrayList<Short>. If unordered, this class
- * avoids a memory copy when removing elements (the last element is moved to the removed element's position).
- * @author Nathan Sweet */
-public class ShortArray {
-	public short[] items;
-	public int size;
-	public boolean ordered;
-
-	/** Creates an ordered array with a capacity of 16. */
-	public ShortArray () {
-		this(true, 16);
-	}
-
-	/** Creates an ordered array with the specified capacity. */
-	public ShortArray (int capacity) {
-		this(true, capacity);
-	}
-
-	/** @param ordered If false, methods that remove elements may change the order of other elements in the array, which avoids a
-	 *           memory copy.
-	 * @param capacity Any elements added beyond this will cause the backing array to be grown. */
-	public ShortArray (boolean ordered, int capacity) {
-		this.ordered = ordered;
-		items = new short[capacity];
-	}
-
-	/** Creates a new array containing the elements in the specific array. The new array will be ordered if the specific array is
-	 * ordered. The capacity is set to the number of elements, so any subsequent elements added will cause the backing array to be
-	 * grown. */
-	public ShortArray (ShortArray array) {
-		this.ordered = array.ordered;
-		size = array.size;
-		items = new short[size];
-		System.arraycopy(array.items, 0, items, 0, size);
-	}
-
-	/** Creates a new ordered array containing the elements in the specified array. The capacity is set to the number of elements,
-	 * so any subsequent elements added will cause the backing array to be grown. */
-	public ShortArray (short[] array) {
-		this(true, array);
-	}
-
-	/** Creates a new array containing the elements in the specified array. The capacity is set to the number of elements, so any
-	 * subsequent elements added will cause the backing array to be grown.
-	 * @param ordered If false, methods that remove elements may change the order of other elements in the array, which avoids a
-	 *           memory copy. */
-	public ShortArray (boolean ordered, short[] array) {
-		this(ordered, array.length);
-		size = array.length;
-		System.arraycopy(array, 0, items, 0, size);
-	}
-
-	public void add (short value) {
-		short[] items = this.items;
-		if (size == items.length) items = resize(Math.max(8, (int)(size * 1.75f)));
-		items[size++] = value;
-	}
-
-	public void addAll (ShortArray array) {
-		addAll(array, 0, array.size);
-	}
-
-	public void addAll (ShortArray array, int offset, int length) {
-		if (offset + length > array.size)
-			throw new IllegalArgumentException("offset + length must be <= size: " + offset + " + " + length + " <= " + array.size);
-		addAll(array.items, offset, length);
-	}
-
-	public void addAll (short[] array) {
-		addAll(array, 0, array.length);
-	}
-
-	public void addAll (short[] array, int offset, int length) {
-		short[] items = this.items;
-		int sizeNeeded = size + length - offset;
-		if (sizeNeeded >= items.length) items = resize(Math.max(8, (int)(sizeNeeded * 1.75f)));
-		System.arraycopy(array, offset, items, size, length);
-		size += length;
-	}
-
-	public short get (int index) {
-		if (index >= size) throw new IndexOutOfBoundsException(String.valueOf(index));
-		return items[index];
-	}
-
-	public void set (int index, short value) {
-		if (index >= size) throw new IndexOutOfBoundsException(String.valueOf(index));
-		items[index] = value;
-	}
-
-	public void insert (int index, short value) {
-		short[] items = this.items;
-		if (size == items.length) items = resize(Math.max(8, (int)(size * 1.75f)));
-		if (ordered)
-			System.arraycopy(items, index, items, index + 1, size - index);
-		else
-			items[size] = items[index];
-		size++;
-		items[index] = value;
-	}
-
-	public void swap (int first, int second) {
-		if (first >= size) throw new IndexOutOfBoundsException(String.valueOf(first));
-		if (second >= size) throw new IndexOutOfBoundsException(String.valueOf(second));
-		short[] items = this.items;
-		short firstValue = items[first];
-		items[first] = items[second];
-		items[second] = firstValue;
-	}
-
-	public boolean contains (short value) {
-		int i = size - 1;
-		short[] items = this.items;
-		while (i >= 0)
-			if (items[i--] == value) return true;
-		return false;
-	}
-
-	public int indexOf (short value) {
-		short[] items = this.items;
-		for (int i = 0, n = size; i < n; i++)
-			if (items[i] == value) return i;
-		return -1;
-	}
-
-	public int lastIndexOf (char value) {
-		short[] items = this.items;
-		for (int i = size - 1; i >= 0; i--)
-			if (items[i] == value) return i;
-		return -1;
-	}
-
-	public boolean removeValue (short value) {
-		short[] items = this.items;
-		for (int i = 0, n = size; i < n; i++) {
-			if (items[i] == value) {
-				removeIndex(i);
-				return true;
-			}
-		}
-		return false;
-	}
-
-	/** Removes and returns the item at the specified index. */
-	public short removeIndex (int index) {
-		if (index >= size) throw new IndexOutOfBoundsException(String.valueOf(index));
-		short[] items = this.items;
-		short value = items[index];
-		size--;
-		if (ordered)
-			System.arraycopy(items, index + 1, items, index, size - index);
-		else
-			items[index] = items[size];
-		return value;
-	}
-
-	/** Removes from this array all of elements contained in the specified array.
-	 * @return true if this array was modified. */
-	public boolean removeAll (ShortArray array) {
-		int size = this.size;
-		int startSize = size;
-		short[] items = this.items;
-		for (int i = 0, n = array.size; i < n; i++) {
-			short item = array.get(i);
-			for (int ii = 0; ii < size; ii++) {
-				if (item == items[ii]) {
-					removeIndex(ii);
-					size--;
-					break;
-				}
-			}
-		}
-		return size != startSize;
-	}
-
-	/** Removes and returns the last item. */
-	public short pop () {
-		return items[--size];
-	}
-
-	/** Returns the last item. */
-	public short peek () {
-		return items[size - 1];
-	}
-
-	/** Returns the first item. */
-	public short first () {
-		if (size == 0) throw new IllegalStateException("Array is empty.");
-		return items[0];
-	}
-
-	public void clear () {
-		size = 0;
-	}
-
-	/** Reduces the size of the backing array to the size of the actual items. This is useful to release memory when many items have
-	 * been removed, or if it is known that more items will not be added. */
-	public void shrink () {
-		resize(size);
-	}
-
-	/** Increases the size of the backing array to acommodate the specified number of additional items. Useful before adding many
-	 * items to avoid multiple backing array resizes.
-	 * @return {@link #items} */
-	public short[] ensureCapacity (int additionalCapacity) {
-		int sizeNeeded = size + additionalCapacity;
-		if (sizeNeeded >= items.length) resize(Math.max(8, sizeNeeded));
-		return items;
-	}
-
-	protected short[] resize (int newSize) {
-		short[] newItems = new short[newSize];
-		short[] items = this.items;
-		System.arraycopy(items, 0, newItems, 0, Math.min(size, newItems.length));
-		this.items = newItems;
-		return newItems;
-	}
-
-	public void sort () {
-		Arrays.sort(items, 0, size);
-	}
-
-	public void reverse () {
-		for (int i = 0, lastIndex = size - 1, n = size / 2; i < n; i++) {
-			int ii = lastIndex - i;
-			short temp = items[i];
-			items[i] = items[ii];
-			items[ii] = temp;
-		}
-	}
-
-	public void shuffle () {
-		for (int i = size - 1; i >= 0; i--) {
-			int ii = MathUtils.random(i);
-			short temp = items[i];
-			items[i] = items[ii];
-			items[ii] = temp;
-		}
-	}
-
-	/** Reduces the size of the array to the specified size. If the array is already smaller than the specified size, no action is
-	 * taken. */
-	public void truncate (int newSize) {
-		if (size > newSize) size = newSize;
-	}
-
-	/** Returns a random item from the array, or zero if the array is empty. */
-	public short random () {
-		if (size == 0) return 0;
-		return items[MathUtils.random(0, size - 1)];
-	}
-
-	public short[] toArray () {
-		short[] array = new short[size];
-		System.arraycopy(items, 0, array, 0, size);
-		return array;
-	}
-
-	public boolean equals (Object object) {
-		if (object == this) return true;
-		if (!(object instanceof ShortArray)) return false;
-		ShortArray array = (ShortArray)object;
-		int n = size;
-		if (n != array.size) return false;
-		for (int i = 0; i < n; i++)
-			if (items[i] != array.items[i]) return false;
-		return true;
-	}
-
-	public String toString () {
-		if (size == 0) return "[]";
-		short[] items = this.items;
-		StringBuilder buffer = new StringBuilder(32);
-		buffer.append('[');
-		buffer.append(items[0]);
-		for (int i = 1; i < size; i++) {
-			buffer.append(", ");
-			buffer.append(items[i]);
-		}
-		buffer.append(']');
-		return buffer.toString();
-	}
-
-	public String toString (String separator) {
-		if (size == 0) return "";
-		short[] items = this.items;
-		StringBuilder buffer = new StringBuilder(32);
-		buffer.append(items[0]);
-		for (int i = 1; i < size; i++) {
-			buffer.append(separator);
-			buffer.append(items[i]);
-		}
-		return buffer.toString();
-	}
-}
diff --git a/gdx/src/com/badlogic/gdx/utils/StringBuilder.java b/gdx/src/com/badlogic/gdx/utils/StringBuilder.java
index 7980019..6e120df 100644
--- a/gdx/src/com/badlogic/gdx/utils/StringBuilder.java
+++ b/gdx/src/com/badlogic/gdx/utils/StringBuilder.java
@@ -706,7 +706,7 @@ public class StringBuilder implements Appendable, CharSequence {
 	}
 
 	/** Appends the string representation of the specified {@code int} value. The {@code int} value is converted to a string
-	 * without memory allocation.
+	 * according to the rule defined by {@link String#valueOf(int)}.
 	 * 
 	 * @param i the {@code int} value to append.
 	 * @return this builder.
@@ -736,10 +736,11 @@ public class StringBuilder implements Appendable, CharSequence {
 	}
 
 	/** Appends the string representation of the specified {@code long} value. The {@code long} value is converted to a string
-	 * without memory allocation.
+	 * according to the rule defined by {@link String#valueOf(long)}.
 	 * 
 	 * @param lng the {@code long} value.
-	 * @return this builder. */
+	 * @return this builder.
+	 * @see String#valueOf(long) */
 	public StringBuilder append (long lng) {
 		if (lng == Long.MIN_VALUE) {
 			append0("-9223372036854775808");
@@ -777,7 +778,8 @@ public class StringBuilder implements Appendable, CharSequence {
 	 * according to the rule defined by {@link String#valueOf(float)}.
 	 * 
 	 * @param f the {@code float} value to append.
-	 * @return this builder. */
+	 * @return this builder.
+	 * @see String#valueOf(float) */
 	public StringBuilder append (float f) {
 		append0(Float.toString(f));
 		return this;
diff --git a/gdx/src/com/badlogic/gdx/utils/Timer.java b/gdx/src/com/badlogic/gdx/utils/Timer.java
index c18d63f..7fccd77 100644
--- a/gdx/src/com/badlogic/gdx/utils/Timer.java
+++ b/gdx/src/com/badlogic/gdx/utils/Timer.java
@@ -28,15 +28,11 @@ public class Timer {
 			public void run () {
 				while (true) {
 					synchronized (instances) {
-						long timeMillis = System.nanoTime() / 1000000;
-						long waitMillis = Long.MAX_VALUE;
-						for (int i = 0, n = instances.size; i < n; i++) {
-							try {
-								waitMillis = instances.get(i).update(timeMillis, waitMillis);
-							} catch (Throwable ex) {
-								throw new GdxRuntimeException("Task failed: " + instances.get(i).getClass().getName(), ex);
-							}
-						}
+						float time = System.nanoTime() * MathUtils.nanoToSec;
+						float wait = Float.MAX_VALUE;
+						for (int i = 0, n = instances.size; i < n; i++)
+							wait = Math.min(wait, instances.get(i).update(time));
+						long waitMillis = (long)(wait * 1000);
 						try {
 							if (waitMillis > 0) instances.wait(waitMillis);
 						} catch (InterruptedException ignored) {
@@ -79,10 +75,10 @@ public class Timer {
 	/** Schedules a task to occur once after the specified delay and then a number of additional times at the specified interval. */
 	public void scheduleTask (Task task, float delaySeconds, float intervalSeconds, int repeatCount) {
 		if (task.repeatCount != CANCELLED) throw new IllegalArgumentException("The same task may not be scheduled twice.");
-		task.executeTimeMillis = System.nanoTime() / 1000000 + (long)(delaySeconds * 1000);
-		task.intervalMillis = (long)(intervalSeconds * 1000);
+		task.executeTime = System.nanoTime() * MathUtils.nanoToSec + delaySeconds;
+		task.intervalSeconds = intervalSeconds;
 		task.repeatCount = repeatCount;
-		synchronized (tasks) {
+		synchronized(tasks) {
 			tasks.add(task);
 		}
 		wake();
@@ -106,26 +102,24 @@ public class Timer {
 
 	/** Cancels all tasks. */
 	public void clear () {
-		synchronized (tasks) {
+		synchronized(tasks) {
 			for (int i = 0, n = tasks.size; i < n; i++)
 				tasks.get(i).cancel();
 			tasks.clear();
 		}
 	}
 
-	long update (long timeMillis, long waitMillis) {
-		synchronized (tasks) {
+	float update (float time) {
+		float wait = Float.MAX_VALUE;
+		synchronized(tasks) {
 			for (int i = 0, n = tasks.size; i < n; i++) {
 				Task task = tasks.get(i);
-				if (task.executeTimeMillis > timeMillis) {
-					waitMillis = Math.min(waitMillis, task.executeTimeMillis - timeMillis);
+				if (task.executeTime > time) {
+					wait = Math.min(wait, task.executeTime - time);
 					continue;
 				}
 				if (task.repeatCount != CANCELLED) {
-					if (task.repeatCount == 0) {
-						// Set cancelled before run so it may be rescheduled in run.
-						task.repeatCount = CANCELLED;
-					}
+					if (task.repeatCount == 0) task.repeatCount = CANCELLED; // Set cancelled before run so it may be rescheduled in run.
 					Gdx.app.postRunnable(task);
 				}
 				if (task.repeatCount == CANCELLED) {
@@ -133,13 +127,13 @@ public class Timer {
 					i--;
 					n--;
 				} else {
-					task.executeTimeMillis = timeMillis + task.intervalMillis;
-					waitMillis = Math.min(waitMillis, task.intervalMillis);
+					task.executeTime = time + task.intervalSeconds;
+					wait = Math.min(wait, task.executeTime - time);
 					if (task.repeatCount > 0) task.repeatCount--;
 				}
 			}
 		}
-		return waitMillis;
+		return wait;
 	}
 
 	static private void wake () {
@@ -176,8 +170,8 @@ public class Timer {
 	 * @see Timer
 	 * @author Nathan Sweet */
 	static abstract public class Task implements Runnable {
-		long executeTimeMillis;
-		long intervalMillis;
+		float executeTime;
+		float intervalSeconds;
 		int repeatCount = CANCELLED;
 
 		/** If this is the last time the task will be ran or the task is first cancelled, it may be scheduled again in this method. */
@@ -185,7 +179,7 @@ public class Timer {
 
 		/** Cancels the task. It will not be executed until it is scheduled again. This method can be called at any time. */
 		public void cancel () {
-			executeTimeMillis = 0;
+			executeTime = 0;
 			repeatCount = CANCELLED;
 		}
 
diff --git a/tests/gdx-tests-android/assets/data/gleed.png b/tests/gdx-tests-android/assets/data/gleed.png
new file mode 100644
index 0000000..0845bb2
Binary files /dev/null and b/tests/gdx-tests-android/assets/data/gleed.png differ
diff --git a/tests/gdx-tests-android/assets/data/gleedtest.xml b/tests/gdx-tests-android/assets/data/gleedtest.xml
new file mode 100644
index 0000000..6766f80
--- /dev/null
+++ b/tests/gdx-tests-android/assets/data/gleedtest.xml
@@ -0,0 +1,470 @@
+<?xml version="1.0"?>
+<Level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" Name="Level_01" Visible="true">
+    <Layers>
+        <Layer Name="Background" Visible="true">
+            <Items>
+                <Item xsi:type="TextureItem" Name="Texture_0009" Visible="true">
+                    <Position>
+                        <X>282</X>
+                        <Y>40</Y>
+                    </Position>
+                    <CustomProperties />
+                    <Rotation>0.234532237</Rotation>
+                    <Scale>
+                        <X>1</X>
+                        <Y>1</Y>
+                    </Scale>
+                    <TintColor>
+                        <R>255</R>
+                        <G>255</G>
+                        <B>255</B>
+                        <A>255</A>
+                        <PackedValue>4294967295</PackedValue>
+                    </TintColor>
+                    <FlipHorizontally>false</FlipHorizontally>
+                    <FlipVertically>false</FlipVertically>
+                    <texture_filename>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\33.png</texture_filename>
+                    <asset_name>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\33</asset_name>
+                    <Origin>
+                        <X>492</X>
+                        <Y>271</Y>
+                    </Origin>
+                </Item>
+                <Item xsi:type="TextureItem" Name="Texture_0008" Visible="true">
+                    <Position>
+                        <X>-448</X>
+                        <Y>64</Y>
+                    </Position>
+                    <CustomProperties />
+                    <Rotation>-0.11706543</Rotation>
+                    <Scale>
+                        <X>1.36714649</X>
+                        <Y>1.36714649</Y>
+                    </Scale>
+                    <TintColor>
+                        <R>255</R>
+                        <G>255</G>
+                        <B>255</B>
+                        <A>255</A>
+                        <PackedValue>4294967295</PackedValue>
+                    </TintColor>
+                    <FlipHorizontally>false</FlipHorizontally>
+                    <FlipVertically>false</FlipVertically>
+                    <texture_filename>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\33.png</texture_filename>
+                    <asset_name>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\33</asset_name>
+                    <Origin>
+                        <X>492</X>
+                        <Y>271</Y>
+                    </Origin>
+                </Item>
+                <Item xsi:type="TextureItem" Name="Texture_0010" Visible="true">
+                    <Position>
+                        <X>698</X>
+                        <Y>25</Y>
+                    </Position>
+                    <CustomProperties />
+                    <Rotation>-0.244658068</Rotation>
+                    <Scale>
+                        <X>1.1061945</X>
+                        <Y>1.1061945</Y>
+                    </Scale>
+                    <TintColor>
+                        <R>255</R>
+                        <G>255</G>
+                        <B>255</B>
+                        <A>255</A>
+                        <PackedValue>4294967295</PackedValue>
+                    </TintColor>
+                    <FlipHorizontally>false</FlipHorizontally>
+                    <FlipVertically>false</FlipVertically>
+                    <texture_filename>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\33.png</texture_filename>
+                    <asset_name>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\33</asset_name>
+                    <Origin>
+                        <X>492</X>
+                        <Y>271</Y>
+                    </Origin>
+                </Item>
+                <Item xsi:type="TextureItem" Name="Texture_0030" Visible="true">
+                    <Position>
+                        <X>679</X>
+                        <Y>115</Y>
+                    </Position>
+                    <CustomProperties />
+                    <Rotation>0</Rotation>
+                    <Scale>
+                        <X>1</X>
+                        <Y>1</Y>
+                    </Scale>
+                    <TintColor>
+                        <R>255</R>
+                        <G>255</G>
+                        <B>255</B>
+                        <A>255</A>
+                        <PackedValue>4294967295</PackedValue>
+                    </TintColor>
+                    <FlipHorizontally>false</FlipHorizontally>
+                    <FlipVertically>false</FlipVertically>
+                    <texture_filename>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\09.png</texture_filename>
+                    <asset_name>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\09</asset_name>
+                    <Origin>
+                        <X>270</X>
+                        <Y>129</Y>
+                    </Origin>
+                </Item>
+                <Item xsi:type="TextureItem" Name="Texture_0033" Visible="true">
+                    <Position>
+                        <X>142</X>
+                        <Y>-19</Y>
+                    </Position>
+                    <CustomProperties />
+                    <Rotation>0.326056719</Rotation>
+                    <Scale>
+                        <X>2.07078218</X>
+                        <Y>2.07078218</Y>
+                    </Scale>
+                    <TintColor>
+                        <R>255</R>
+                        <G>255</G>
+                        <B>255</B>
+                        <A>255</A>
+                        <PackedValue>4294967295</PackedValue>
+                    </TintColor>
+                    <FlipHorizontally>false</FlipHorizontally>
+                    <FlipVertically>false</FlipVertically>
+                    <texture_filename>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\35.png</texture_filename>
+                    <asset_name>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\35</asset_name>
+                    <Origin>
+                        <X>128</X>
+                        <Y>256</Y>
+                    </Origin>
+                </Item>
+                <Item xsi:type="TextureItem" Name="Texture_0034" Visible="true">
+                    <Position>
+                        <X>284</X>
+                        <Y>34</Y>
+                    </Position>
+                    <CustomProperties />
+                    <Rotation>-0.00541815162</Rotation>
+                    <Scale>
+                        <X>2.07078218</X>
+                        <Y>2.07078218</Y>
+                    </Scale>
+                    <TintColor>
+                        <R>255</R>
+                        <G>255</G>
+                        <B>255</B>
+                        <A>255</A>
+                        <PackedValue>4294967295</PackedValue>
+                    </TintColor>
+                    <FlipHorizontally>false</FlipHorizontally>
+                    <FlipVertically>false</FlipVertically>
+                    <texture_filename>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\35.png</texture_filename>
+                    <asset_name>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\35</asset_name>
+                    <Origin>
+                        <X>128</X>
+                        <Y>256</Y>
+                    </Origin>
+                </Item>
+                <Item xsi:type="TextureItem" Name="Texture_0035" Visible="true">
+                    <Position>
+                        <X>76</X>
+                        <Y>-30</Y>
+                    </Position>
+                    <CustomProperties />
+                    <Rotation>0.463031918</Rotation>
+                    <Scale>
+                        <X>2.07078218</X>
+                        <Y>2.07078218</Y>
+                    </Scale>
+                    <TintColor>
+                        <R>255</R>
+                        <G>255</G>
+                        <B>255</B>
+                        <A>255</A>
+                        <PackedValue>4294967295</PackedValue>
+                    </TintColor>
+                    <FlipHorizontally>false</FlipHorizontally>
+                    <FlipVertically>false</FlipVertically>
+                    <texture_filename>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\35.png</texture_filename>
+                    <asset_name>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\35</asset_name>
+                    <Origin>
+                        <X>128</X>
+                        <Y>256</Y>
+                    </Origin>
+                </Item>
+            </Items>
+            <ScrollSpeed>
+                <X>1</X>
+                <Y>1</Y>
+            </ScrollSpeed>
+        </Layer>
+        <Layer Name="Foreground" Visible="true">
+            <Items>
+                <Item xsi:type="TextureItem" Name="Texture_0004" Visible="true">
+                    <Position>
+                        <X>434</X>
+                        <Y>217</Y>
+                    </Position>
+                    <CustomProperties />
+                    <Rotation>0</Rotation>
+                    <Scale>
+                        <X>1</X>
+                        <Y>1</Y>
+                    </Scale>
+                    <TintColor>
+                        <R>255</R>
+                        <G>255</G>
+                        <B>255</B>
+                        <A>255</A>
+                        <PackedValue>4294967295</PackedValue>
+                    </TintColor>
+                    <FlipHorizontally>false</FlipHorizontally>
+                    <FlipVertically>false</FlipVertically>
+                    <texture_filename>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\18.png</texture_filename>
+                    <asset_name>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\18</asset_name>
+                    <Origin>
+                        <X>152</X>
+                        <Y>108</Y>
+                    </Origin>
+                </Item>
+                <Item xsi:type="TextureItem" Name="Texture_0021" Visible="true">
+                    <Position>
+                        <X>-235</X>
+                        <Y>133</Y>
+                    </Position>
+                    <CustomProperties />
+                    <Rotation>0</Rotation>
+                    <Scale>
+                        <X>1</X>
+                        <Y>1</Y>
+                    </Scale>
+                    <TintColor>
+                        <R>255</R>
+                        <G>255</G>
+                        <B>255</B>
+                        <A>255</A>
+                        <PackedValue>4294967295</PackedValue>
+                    </TintColor>
+                    <FlipHorizontally>true</FlipHorizontally>
+                    <FlipVertically>false</FlipVertically>
+                    <texture_filename>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\00.png</texture_filename>
+                    <asset_name>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\00</asset_name>
+                    <Origin>
+                        <X>252</X>
+                        <Y>325</Y>
+                    </Origin>
+                </Item>
+                <Item xsi:type="TextureItem" Name="Texture_0024" Visible="true">
+                    <Position>
+                        <X>-8</X>
+                        <Y>300</Y>
+                    </Position>
+                    <CustomProperties />
+                    <Rotation>0</Rotation>
+                    <Scale>
+                        <X>1</X>
+                        <Y>1</Y>
+                    </Scale>
+                    <TintColor>
+                        <R>255</R>
+                        <G>255</G>
+                        <B>255</B>
+                        <A>255</A>
+                        <PackedValue>4294967295</PackedValue>
+                    </TintColor>
+                    <FlipHorizontally>true</FlipHorizontally>
+                    <FlipVertically>false</FlipVertically>
+                    <texture_filename>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\04.png</texture_filename>
+                    <asset_name>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\04</asset_name>
+                    <Origin>
+                        <X>85</X>
+                        <Y>178</Y>
+                    </Origin>
+                </Item>
+                <Item xsi:type="TextureItem" Name="Texture_0006" Visible="true">
+                    <Position>
+                        <X>150</X>
+                        <Y>160</Y>
+                    </Position>
+                    <CustomProperties />
+                    <Rotation>0</Rotation>
+                    <Scale>
+                        <X>1.39679921</X>
+                        <Y>1.39679921</Y>
+                    </Scale>
+                    <TintColor>
+                        <R>255</R>
+                        <G>255</G>
+                        <B>255</B>
+                        <A>255</A>
+                        <PackedValue>4294967295</PackedValue>
+                    </TintColor>
+                    <FlipHorizontally>false</FlipHorizontally>
+                    <FlipVertically>false</FlipVertically>
+                    <texture_filename>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\08.png</texture_filename>
+                    <asset_name>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\08</asset_name>
+                    <Origin>
+                        <X>181</X>
+                        <Y>65</Y>
+                    </Origin>
+                </Item>
+                <Item xsi:type="TextureItem" Name="Texture_0007" Visible="true">
+                    <Position>
+                        <X>704</X>
+                        <Y>218</Y>
+                    </Position>
+                    <CustomProperties />
+                    <Rotation>0</Rotation>
+                    <Scale>
+                        <X>1</X>
+                        <Y>1</Y>
+                    </Scale>
+                    <TintColor>
+                        <R>255</R>
+                        <G>255</G>
+                        <B>255</B>
+                        <A>255</A>
+                        <PackedValue>4294967295</PackedValue>
+                    </TintColor>
+                    <FlipHorizontally>false</FlipHorizontally>
+                    <FlipVertically>false</FlipVertically>
+                    <texture_filename>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\18.png</texture_filename>
+                    <asset_name>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\18</asset_name>
+                    <Origin>
+                        <X>152</X>
+                        <Y>108</Y>
+                    </Origin>
+                </Item>
+                <Item xsi:type="TextureItem" Name="Texture_0014" Visible="true">
+                    <Position>
+                        <X>-56</X>
+                        <Y>153</Y>
+                    </Position>
+                    <CustomProperties />
+                    <Rotation>0</Rotation>
+                    <Scale>
+                        <X>0.5000956</X>
+                        <Y>0.5000956</Y>
+                    </Scale>
+                    <TintColor>
+                        <R>255</R>
+                        <G>255</G>
+                        <B>255</B>
+                        <A>255</A>
+                        <PackedValue>4294967295</PackedValue>
+                    </TintColor>
+                    <FlipHorizontally>false</FlipHorizontally>
+                    <FlipVertically>false</FlipVertically>
+                    <texture_filename>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\32.png</texture_filename>
+                    <asset_name>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\32</asset_name>
+                    <Origin>
+                        <X>91</X>
+                        <Y>80</Y>
+                    </Origin>
+                </Item>
+                <Item xsi:type="TextureItem" Name="Texture_0015" Visible="true">
+                    <Position>
+                        <X>637</X>
+                        <Y>164</Y>
+                    </Position>
+                    <CustomProperties />
+                    <Rotation>0</Rotation>
+                    <Scale>
+                        <X>0.5395949</X>
+                        <Y>0.5395949</Y>
+                    </Scale>
+                    <TintColor>
+                        <R>255</R>
+                        <G>255</G>
+                        <B>255</B>
+                        <A>255</A>
+                        <PackedValue>4294967295</PackedValue>
+                    </TintColor>
+                    <FlipHorizontally>false</FlipHorizontally>
+                    <FlipVertically>false</FlipVertically>
+                    <texture_filename>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\31.png</texture_filename>
+                    <asset_name>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\31</asset_name>
+                    <Origin>
+                        <X>223</X>
+                        <Y>181</Y>
+                    </Origin>
+                </Item>
+                <Item xsi:type="TextureItem" Name="Texture_0020" Visible="true">
+                    <Position>
+                        <X>972</X>
+                        <Y>217</Y>
+                    </Position>
+                    <CustomProperties />
+                    <Rotation>0</Rotation>
+                    <Scale>
+                        <X>1</X>
+                        <Y>1</Y>
+                    </Scale>
+                    <TintColor>
+                        <R>255</R>
+                        <G>255</G>
+                        <B>255</B>
+                        <A>255</A>
+                        <PackedValue>4294967295</PackedValue>
+                    </TintColor>
+                    <FlipHorizontally>false</FlipHorizontally>
+                    <FlipVertically>false</FlipVertically>
+                    <texture_filename>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\18.png</texture_filename>
+                    <asset_name>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\18</asset_name>
+                    <Origin>
+                        <X>152</X>
+                        <Y>108</Y>
+                    </Origin>
+                </Item>
+                <Item xsi:type="TextureItem" Name="Texture_0029" Visible="true">
+                    <Position>
+                        <X>-570</X>
+                        <Y>158</Y>
+                    </Position>
+                    <CustomProperties />
+                    <Rotation>0</Rotation>
+                    <Scale>
+                        <X>1</X>
+                        <Y>1</Y>
+                    </Scale>
+                    <TintColor>
+                        <R>255</R>
+                        <G>255</G>
+                        <B>255</B>
+                        <A>255</A>
+                        <PackedValue>4294967295</PackedValue>
+                    </TintColor>
+                    <FlipHorizontally>true</FlipHorizontally>
+                    <FlipVertically>false</FlipVertically>
+                    <texture_filename>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\01.png</texture_filename>
+                    <asset_name>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\01</asset_name>
+                    <Origin>
+                        <X>108</X>
+                        <Y>287</Y>
+                    </Origin>
+                </Item>
+            </Items>
+            <ScrollSpeed>
+                <X>1</X>
+                <Y>1</Y>
+            </ScrollSpeed>
+        </Layer>
+    </Layers>
+    <CustomProperties>
+        <Property Name="assetRoot" Type="string" Description="">
+            <string>data/braid</string>
+        </Property>
+        <Property Name="atlas" Type="string" Description="">
+            <string>data/gleedtiles.txt</string>
+        </Property>
+    </CustomProperties>
+    <EditorRelated>
+        <NextItemNumber>35</NextItemNumber>
+        <ContentRootFolder>C:\</ContentRootFolder>
+        <CameraPosition>
+            <X>116.666916</X>
+            <Y>-41.666748</Y>
+        </CameraPosition>
+        <Version>1.3.0.0</Version>
+    </EditorRelated>
+</Level>
\ No newline at end of file
diff --git a/tests/gdx-tests-android/assets/data/gleedtiles.txt b/tests/gdx-tests-android/assets/data/gleedtiles.txt
new file mode 100644
index 0000000..3148c77
--- /dev/null
+++ b/tests/gdx-tests-android/assets/data/gleedtiles.txt
@@ -0,0 +1,298 @@
+gleed.png
+format: RGBA8888
+filter: Linear,Linear
+repeat: none
+16
+  rotate: false
+  xy: 2778, 1102
+  size: 302, 238
+  orig: 302, 238
+  offset: 0, 0
+  index: -1
+02
+  rotate: false
+  xy: 2778, 2
+  size: 274, 391
+  orig: 274, 391
+  offset: 0, 0
+  index: -1
+31
+  rotate: false
+  xy: 3055, 1342
+  size: 446, 362
+  orig: 446, 362
+  offset: 0, 0
+  index: -1
+09
+  rotate: false
+  xy: 2459, 1781
+  size: 541, 258
+  orig: 541, 258
+  offset: 0, 0
+  index: -1
+38
+  rotate: false
+  xy: 1751, 2
+  size: 701, 534
+  orig: 701, 534
+  offset: 0, 0
+  index: -1
+24
+  rotate: false
+  xy: 3002, 1781
+  size: 258, 248
+  orig: 258, 248
+  offset: 0, 0
+  index: -1
+10
+  rotate: false
+  xy: 2760, 395
+  size: 291, 289
+  orig: 291, 289
+  offset: 0, 0
+  index: -1
+17
+  rotate: false
+  xy: 2454, 423
+  size: 302, 238
+  orig: 302, 238
+  offset: 0, 0
+  index: -1
+03
+  rotate: false
+  xy: 3082, 1061
+  size: 177, 234
+  orig: 177, 234
+  offset: 0, 0
+  index: -1
+32
+  rotate: false
+  xy: 1032, 574
+  size: 183, 160
+  orig: 183, 160
+  offset: 0, 0
+  index: -1
+39
+  rotate: false
+  xy: 1246, 1390
+  size: 965, 603
+  orig: 965, 603
+  offset: 0, 0
+  index: -1
+25
+  rotate: false
+  xy: 3261, 1061
+  size: 226, 213
+  orig: 226, 213
+  offset: 0, 0
+  index: -1
+11
+  rotate: false
+  xy: 1217, 574
+  size: 184, 135
+  orig: 184, 135
+  offset: 0, 0
+  index: -1
+40
+  rotate: false
+  xy: 1643, 1255
+  size: 492, 116
+  orig: 492, 116
+  offset: 0, 0
+  index: -1
+18
+  rotate: false
+  xy: 2454, 205
+  size: 304, 216
+  orig: 304, 216
+  offset: 0, 0
+  index: -1
+04
+  rotate: false
+  xy: 3688, 332
+  size: 171, 357
+  orig: 171, 357
+  offset: 0, 0
+  index: -1
+33
+  rotate: false
+  xy: 1279, 711
+  size: 984, 542
+  orig: 984, 542
+  offset: 0, 0
+  index: -1
+26
+  rotate: false
+  xy: 2137, 1255
+  size: 308, 108
+  orig: 308, 108
+  offset: 0, 0
+  index: -1
+12
+  rotate: false
+  xy: 804, 579
+  size: 160, 178
+  orig: 160, 178
+  offset: 0, 0
+  index: -1
+41
+  rotate: false
+  xy: 2, 1417
+  size: 1242, 626
+  orig: 1242, 626
+  offset: 0, 0
+  index: -1
+19
+  rotate: false
+  xy: 2454, 2
+  size: 308, 201
+  orig: 308, 201
+  offset: 0, 0
+  index: -1
+05
+  rotate: false
+  xy: 966, 579
+  size: 64, 165
+  orig: 64, 165
+  offset: 0, 0
+  index: -1
+34
+  rotate: false
+  xy: 2213, 1365
+  size: 840, 414
+  orig: 840, 414
+  offset: 0, 0
+  index: -1
+20
+  rotate: false
+  xy: 1792, 646
+  size: 88, 63
+  orig: 88, 63
+  offset: 0, 0
+  index: -1
+27
+  rotate: false
+  xy: 3460, 1706
+  size: 226, 190
+  orig: 226, 190
+  offset: 0, 0
+  index: -1
+13
+  rotate: false
+  xy: 509, 764
+  size: 768, 624
+  orig: 768, 624
+  offset: 0, 0
+  index: -1
+06
+  rotate: false
+  xy: 3262, 1706
+  size: 196, 208
+  orig: 196, 208
+  offset: 0, 0
+  index: -1
+35
+  rotate: false
+  xy: 2778, 686
+  size: 118, 414
+  orig: 256, 512
+  offset: 78, 30
+  index: -1
+21
+  rotate: false
+  xy: 2180, 538
+  size: 151, 98
+  orig: 151, 98
+  offset: 0, 0
+  index: -1
+28
+  rotate: false
+  xy: 2213, 1781
+  size: 244, 264
+  orig: 244, 264
+  offset: 0, 0
+  index: -1
+14
+  rotate: false
+  xy: 2898, 686
+  size: 566, 373
+  orig: 566, 373
+  offset: 0, 0
+  index: -1
+00
+  rotate: false
+  xy: 2, 764
+  size: 505, 651
+  orig: 505, 651
+  offset: 0, 0
+  index: -1
+07
+  rotate: false
+  xy: 2180, 638
+  size: 89, 71
+  orig: 89, 71
+  offset: 0, 0
+  index: -1
+36
+  rotate: false
+  xy: 1022, 2
+  size: 727, 570
+  orig: 727, 570
+  offset: 0, 0
+  index: -1
+22
+  rotate: false
+  xy: 1792, 538
+  size: 386, 106
+  orig: 386, 106
+  offset: 0, 0
+  index: -1
+29
+  rotate: false
+  xy: 3054, 332
+  size: 248, 328
+  orig: 248, 328
+  offset: 0, 0
+  index: -1
+15
+  rotate: false
+  xy: 2265, 711
+  size: 511, 485
+  orig: 511, 485
+  offset: 0, 0
+  index: -1
+01
+  rotate: false
+  xy: 804, 2
+  size: 216, 575
+  orig: 216, 575
+  offset: 0, 0
+  index: -1
+30
+  rotate: false
+  xy: 3055, 2
+  size: 994, 328
+  orig: 994, 328
+  offset: 0, 0
+  index: -1
+08
+  rotate: false
+  xy: 1279, 1255
+  size: 362, 130
+  orig: 362, 130
+  offset: 0, 0
+  index: -1
+37
+  rotate: false
+  xy: 2, 2
+  size: 800, 760
+  orig: 800, 760
+  offset: 0, 0
+  index: -1
+23
+  rotate: false
+  xy: 1403, 574
+  size: 387, 107
+  orig: 387, 107
+  offset: 0, 0
+  index: -1
diff --git a/tests/gdx-tests-android/assets/data/maps/tide/Map01.tide b/tests/gdx-tests-android/assets/data/maps/tide/Map01.tide
deleted file mode 100644
index e1e638c..0000000
--- a/tests/gdx-tests-android/assets/data/maps/tide/Map01.tide
+++ /dev/null
@@ -1,1327 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Map Id="Level Map 01">
-  <Description><![CDATA[This is the first level.]]></Description>
-  <TileSheets>
-    <TileSheet Id="Background01">
-      <Description><![CDATA[]]></Description>
-      <ImageSource><![CDATA[TileSheets\Background01.png]]></ImageSource>
-      <Alignment SheetSize="2 x 3" TileSize="320 x 240" Margin="0 x 0" Spacing="0 x 0" />
-      <Properties />
-    </TileSheet>
-    <TileSheet Id="Background02">
-      <Description><![CDATA[]]></Description>
-      <ImageSource><![CDATA[TileSheets\Background02.png]]></ImageSource>
-      <Alignment SheetSize="2 x 2" TileSize="320 x 240" Margin="0 x 0" Spacing="0 x 0" />
-      <Properties />
-    </TileSheet>
-    <TileSheet Id="Background03">
-      <Description><![CDATA[]]></Description>
-      <ImageSource><![CDATA[TileSheets\Background03.png]]></ImageSource>
-      <Alignment SheetSize="2 x 2" TileSize="320 x 240" Margin="0 x 0" Spacing="0 x 0" />
-      <Properties />
-    </TileSheet>
-    <TileSheet Id="TileSheet01">
-      <Description><![CDATA[]]></Description>
-      <ImageSource><![CDATA[TileSheets\TileSheet01.png]]></ImageSource>
-      <Alignment SheetSize="16 x 16" TileSize="32 x 32" Margin="0 x 0" Spacing="0 x 0" />
-      <Properties>
-        <Property Key="CacheTimestamp" Type="String"><![CDATA[2010-05-25-20-35-13]]></Property>
-      </Properties>
-    </TileSheet>
-  </TileSheets>
-  <Layers>
-    <Layer Id="Background01" Visible="True">
-      <Description><![CDATA[]]></Description>
-      <Dimensions LayerSize="4 x 3" TileSize="320 x 240" />
-      <TileArray>
-        <Row>
-          <TileSheet Ref="Background01" />
-          <Static Index="4" BlendMode="Alpha" />
-          <Static Index="4" BlendMode="Alpha" />
-          <Static Index="4" BlendMode="Alpha" />
-          <Static Index="4" BlendMode="Alpha" />
-        </Row>
-        <Row>
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-        </Row>
-        <Row>
-          <Static Index="2" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Static Index="2" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-        </Row>
-      </TileArray>
-      <Properties />
-    </Layer>
-    <Layer Id="Background02" Visible="True">
-      <Description><![CDATA[]]></Description>
-      <Dimensions LayerSize="8 x 3" TileSize="320 x 240" />
-      <TileArray>
-        <Row>
-          <Null Count="8" />
-        </Row>
-        <Row>
-          <TileSheet Ref="Background02" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-        </Row>
-        <Row>
-          <Static Index="2" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Static Index="2" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Static Index="2" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Static Index="2" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-        </Row>
-      </TileArray>
-      <Properties />
-    </Layer>
-    <Layer Id="Background03" Visible="True">
-      <Description><![CDATA[]]></Description>
-      <Dimensions LayerSize="16 x 3" TileSize="320 x 240" />
-      <TileArray>
-        <Row>
-          <Null Count="16" />
-        </Row>
-        <Row>
-          <Null Count="16" />
-        </Row>
-        <Row>
-          <TileSheet Ref="Background03" />
-          <Static Index="2" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Static Index="2" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Static Index="2" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Static Index="2" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Static Index="2" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Static Index="2" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Static Index="2" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Static Index="2" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-        </Row>
-      </TileArray>
-      <Properties />
-    </Layer>
-    <Layer Id="Foreground" Visible="True">
-      <Description><![CDATA[Foreground layer]]></Description>
-      <Dimensions LayerSize="400 x 24" TileSize="32 x 32" />
-      <TileArray>
-        <Row>
-          <Null Count="400" />
-        </Row>
-        <Row>
-          <Null Count="400" />
-        </Row>
-        <Row>
-          <Null Count="28" />
-          <TileSheet Ref="TileSheet01" />
-          <Static Index="96" BlendMode="Alpha" />
-          <Static Index="97" BlendMode="Alpha" />
-          <Null Count="370" />
-        </Row>
-        <Row>
-          <Null Count="27" />
-          <Static Index="96" BlendMode="Alpha" />
-          <Static Index="104" BlendMode="Alpha" />
-          <Static Index="104" BlendMode="Alpha" />
-          <Static Index="97" BlendMode="Alpha" />
-          <Null Count="369" />
-        </Row>
-        <Row>
-          <Null Count="25" />
-          <Static Index="96" BlendMode="Alpha" />
-          <Static Index="100" BlendMode="Alpha" />
-          <Static Index="104" BlendMode="Alpha" />
-          <Static Index="104" BlendMode="Alpha" />
-          <Static Index="102" BlendMode="Alpha" />
-          <Static Index="99" BlendMode="Alpha" />
-          <Null Count="369" />
-        </Row>
-        <Row>
-          <Null Count="25" />
-          <Static Index="98" BlendMode="Alpha" />
-          <Static Index="101" BlendMode="Alpha" />
-          <Static Index="101" BlendMode="Alpha" />
-          <Static Index="99" BlendMode="Alpha" />
-          <Null Count="371" />
-        </Row>
-        <Row>
-          <Null Count="47" />
-          <Static Index="96" BlendMode="Alpha" />
-          <Static Index="100" BlendMode="Alpha" />
-          <Static Index="97" BlendMode="Alpha" />
-          <Null Count="350" />
-        </Row>
-        <Row>
-          <Null Count="46" />
-          <Static Index="96" BlendMode="Alpha" />
-          <Static Index="104" BlendMode="Alpha" />
-          <Static Index="102" BlendMode="Alpha" />
-          <Static Index="99" BlendMode="Alpha" />
-          <Null Count="13" />
-          <Static Index="96" BlendMode="Alpha" />
-          <Static Index="100" BlendMode="Alpha" />
-          <Static Index="97" BlendMode="Alpha" />
-          <Null Count="334" />
-        </Row>
-        <Row>
-          <Null Count="46" />
-          <Static Index="98" BlendMode="Alpha" />
-          <Static Index="99" BlendMode="Alpha" />
-          <Null Count="15" />
-          <Static Index="98" BlendMode="Alpha" />
-          <Static Index="103" BlendMode="Alpha" />
-          <Static Index="104" BlendMode="Alpha" />
-          <Static Index="100" BlendMode="Alpha" />
-          <Static Index="100" BlendMode="Alpha" />
-          <Static Index="100" BlendMode="Alpha" />
-          <Static Index="100" BlendMode="Alpha" />
-          <Static Index="100" BlendMode="Alpha" />
-          <Static Index="97" BlendMode="Alpha" />
-          <Null Count="328" />
-        </Row>
-        <Row>
-          <Null Count="65" />
-          <Static Index="98" BlendMode="Alpha" />
-          <Static Index="101" BlendMode="Alpha" />
-          <Static Index="101" BlendMode="Alpha" />
-          <Static Index="101" BlendMode="Alpha" />
-          <Static Index="101" BlendMode="Alpha" />
-          <Static Index="103" BlendMode="Alpha" />
-          <Static Index="104" BlendMode="Alpha" />
-          <Static Index="97" BlendMode="Alpha" />
-          <Null Count="327" />
-        </Row>
-        <Row>
-          <Null Count="25" />
-          <Static Index="108" BlendMode="Alpha" />
-          <Static Index="4" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="5" BlendMode="Alpha" />
-          <Static Index="107" BlendMode="Alpha" />
-          <Null Count="41" />
-          <Static Index="98" BlendMode="Alpha" />
-          <Static Index="99" BlendMode="Alpha" />
-          <Null Count="327" />
-        </Row>
-        <Row>
-          <Null Count="13" />
-          <Static Index="96" BlendMode="Alpha" />
-          <Static Index="100" BlendMode="Alpha" />
-          <Static Index="100" BlendMode="Alpha" />
-          <Static Index="97" BlendMode="Alpha" />
-          <Null Count="1" />
-          <Static Index="108" BlendMode="Alpha" />
-          <Static Index="4" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="5" BlendMode="Alpha" />
-          <Static Index="107" BlendMode="Alpha" />
-          <Null Count="2" />
-          <Static Index="9" BlendMode="Alpha" />
-          <Static Index="10" BlendMode="Alpha" />
-          <Static Index="11" BlendMode="Alpha" />
-          <Null Count="5" />
-          <Static Index="96" BlendMode="Alpha" />
-          <Static Index="100" BlendMode="Alpha" />
-          <Static Index="97" BlendMode="Alpha" />
-          <Null Count="363" />
-        </Row>
-        <Row>
-          <Null Count="11" />
-          <Static Index="96" BlendMode="Alpha" />
-          <Static Index="100" BlendMode="Alpha" />
-          <Static Index="104" BlendMode="Alpha" />
-          <Static Index="104" BlendMode="Alpha" />
-          <Static Index="102" BlendMode="Alpha" />
-          <Static Index="99" BlendMode="Alpha" />
-          <Null Count="2" />
-          <Static Index="2" BlendMode="Alpha" />
-          <Animated Interval="100">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="56" BlendMode="Alpha" />
-              <Static Index="57" BlendMode="Alpha" />
-              <Static Index="58" BlendMode="Alpha" />
-              <Static Index="57" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Animated Interval="100">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="56" BlendMode="Alpha" />
-              <Static Index="57" BlendMode="Alpha" />
-              <Static Index="58" BlendMode="Alpha" />
-              <Static Index="57" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="3" BlendMode="Alpha" />
-          <Null Count="10" />
-          <Static Index="96" BlendMode="Alpha" />
-          <Static Index="104" BlendMode="Alpha" />
-          <Static Index="104" BlendMode="Alpha" />
-          <Static Index="104" BlendMode="Alpha" />
-          <Static Index="100" BlendMode="Alpha" />
-          <Static Index="97" BlendMode="Alpha" />
-          <Null Count="13" />
-          <Static Index="108" BlendMode="Alpha" />
-          <Static Index="4" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="5" BlendMode="Alpha" />
-          <Static Index="107" BlendMode="Alpha" />
-          <Null Count="343" />
-        </Row>
-        <Row>
-          <Null Count="8" />
-          <Static Index="15" BlendMode="Alpha" />
-          <Null Count="2" />
-          <Static Index="98" BlendMode="Alpha" />
-          <Static Index="101" BlendMode="Alpha" />
-          <Static Index="101" BlendMode="Alpha" />
-          <Static Index="99" BlendMode="Alpha" />
-          <Null Count="4" />
-          <Static Index="9" BlendMode="Alpha" />
-          <Animated Interval="50">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="72" BlendMode="Alpha" />
-              <Static Index="73" BlendMode="Alpha" />
-              <Static Index="74" BlendMode="Alpha" />
-              <Static Index="75" BlendMode="Alpha" />
-              <Static Index="76" BlendMode="Alpha" />
-              <Static Index="77" BlendMode="Alpha" />
-              <Static Index="78" BlendMode="Alpha" />
-              <Static Index="79" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Animated Interval="50">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="72" BlendMode="Alpha" />
-              <Static Index="73" BlendMode="Alpha" />
-              <Static Index="74" BlendMode="Alpha" />
-              <Static Index="75" BlendMode="Alpha" />
-              <Static Index="76" BlendMode="Alpha" />
-              <Static Index="77" BlendMode="Alpha" />
-              <Static Index="78" BlendMode="Alpha" />
-              <Static Index="79" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="11" BlendMode="Alpha" />
-          <Null Count="7" />
-          <Static Index="108" BlendMode="Alpha" />
-          <Static Index="7" BlendMode="Alpha" />
-          <Static Index="107" BlendMode="Alpha" />
-          <Static Index="98" BlendMode="Alpha" />
-          <Static Index="103" BlendMode="Alpha" />
-          <Static Index="104" BlendMode="Alpha" />
-          <Static Index="104" BlendMode="Alpha" />
-          <Static Index="102" BlendMode="Alpha" />
-          <Static Index="99" BlendMode="Alpha" />
-          <Null Count="14" />
-          <Static Index="9" BlendMode="Alpha" />
-          <Static Index="10" BlendMode="Alpha" />
-          <Static Index="11" BlendMode="Alpha" />
-          <Null Count="6" />
-          <Static Index="15" BlendMode="Alpha" />
-          <Null Count="337" />
-        </Row>
-        <Row>
-          <Null Count="20" />
-          <Animated Interval="50">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="64" BlendMode="Alpha" />
-              <Static Index="65" BlendMode="Alpha" />
-              <Static Index="66" BlendMode="Alpha" />
-              <Static Index="67" BlendMode="Alpha" />
-              <Static Index="68" BlendMode="Alpha" />
-              <Static Index="69" BlendMode="Alpha" />
-              <Static Index="70" BlendMode="Alpha" />
-              <Static Index="71" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Animated Interval="50">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="64" BlendMode="Alpha" />
-              <Static Index="65" BlendMode="Alpha" />
-              <Static Index="66" BlendMode="Alpha" />
-              <Static Index="67" BlendMode="Alpha" />
-              <Static Index="68" BlendMode="Alpha" />
-              <Static Index="69" BlendMode="Alpha" />
-              <Static Index="70" BlendMode="Alpha" />
-              <Static Index="71" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Null Count="9" />
-          <Static Index="8" BlendMode="Alpha" />
-          <Null Count="3" />
-          <Static Index="98" BlendMode="Alpha" />
-          <Static Index="99" BlendMode="Alpha" />
-          <Null Count="14" />
-          <Static Index="15" BlendMode="Alpha" />
-          <Null Count="348" />
-        </Row>
-        <Row>
-          <Null Count="7" />
-          <Static Index="114" BlendMode="Alpha" />
-          <Static Index="115" BlendMode="Alpha" />
-          <Null Count="11" />
-          <Animated Interval="50">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="64" BlendMode="Alpha" />
-              <Static Index="65" BlendMode="Alpha" />
-              <Static Index="66" BlendMode="Alpha" />
-              <Static Index="67" BlendMode="Alpha" />
-              <Static Index="68" BlendMode="Alpha" />
-              <Static Index="69" BlendMode="Alpha" />
-              <Static Index="70" BlendMode="Alpha" />
-              <Static Index="71" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Animated Interval="50">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="64" BlendMode="Alpha" />
-              <Static Index="65" BlendMode="Alpha" />
-              <Static Index="66" BlendMode="Alpha" />
-              <Static Index="67" BlendMode="Alpha" />
-              <Static Index="68" BlendMode="Alpha" />
-              <Static Index="69" BlendMode="Alpha" />
-              <Static Index="70" BlendMode="Alpha" />
-              <Static Index="71" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Null Count="3" />
-          <Static Index="114" BlendMode="Alpha" />
-          <Static Index="115" BlendMode="Alpha" />
-          <Null Count="31" />
-          <Static Index="114" BlendMode="Alpha" />
-          <Static Index="115" BlendMode="Alpha" />
-          <Null Count="340" />
-        </Row>
-        <Row>
-          <Null Count="3" />
-          <Static Index="108" BlendMode="Alpha" />
-          <Static Index="4" BlendMode="Alpha" />
-          <Static Index="5" BlendMode="Alpha" />
-          <Static Index="107" BlendMode="Alpha" />
-          <Static Index="112" BlendMode="Alpha" />
-          <Static Index="113" BlendMode="Alpha" />
-          <Null Count="5" />
-          <Static Index="20" BlendMode="Alpha" />
-          <Static Index="21" BlendMode="Alpha" />
-          <Static Index="5" BlendMode="Alpha" />
-          <Static Index="107" BlendMode="Alpha" />
-          <Null Count="2" />
-          <Animated Interval="50">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="64" BlendMode="Alpha" />
-              <Static Index="65" BlendMode="Alpha" />
-              <Static Index="66" BlendMode="Alpha" />
-              <Static Index="67" BlendMode="Alpha" />
-              <Static Index="68" BlendMode="Alpha" />
-              <Static Index="69" BlendMode="Alpha" />
-              <Static Index="70" BlendMode="Alpha" />
-              <Static Index="71" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Animated Interval="50">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="64" BlendMode="Alpha" />
-              <Static Index="65" BlendMode="Alpha" />
-              <Static Index="66" BlendMode="Alpha" />
-              <Static Index="67" BlendMode="Alpha" />
-              <Static Index="68" BlendMode="Alpha" />
-              <Static Index="69" BlendMode="Alpha" />
-              <Static Index="70" BlendMode="Alpha" />
-              <Static Index="71" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Null Count="1" />
-          <Static Index="108" BlendMode="Alpha" />
-          <Static Index="4" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="19" BlendMode="Alpha" />
-          <Null Count="10" />
-          <Static Index="114" BlendMode="Alpha" />
-          <Static Index="115" BlendMode="Alpha" />
-          <Null Count="9" />
-          <Static Index="15" BlendMode="Alpha" />
-          <Null Count="8" />
-          <Static Index="112" BlendMode="Alpha" />
-          <Static Index="113" BlendMode="Alpha" />
-          <Null Count="340" />
-        </Row>
-        <Row>
-          <Null Count="2" />
-          <Static Index="13" BlendMode="Alpha" />
-          <Null Count="1" />
-          <Static Index="2" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Null Count="1" />
-          <Static Index="112" BlendMode="Alpha" />
-          <Static Index="117" BlendMode="Alpha" />
-          <Static Index="115" BlendMode="Alpha" />
-          <Null Count="3" />
-          <Static Index="16" BlendMode="Alpha" />
-          <Static Index="22" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Animated Interval="100">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="32" BlendMode="Alpha" />
-              <Static Index="33" BlendMode="Alpha" />
-              <Static Index="34" BlendMode="Alpha" />
-              <Static Index="35" BlendMode="Alpha" />
-              <Static Index="36" BlendMode="Alpha" />
-              <Static Index="37" BlendMode="Alpha" />
-              <Static Index="38" BlendMode="Alpha" />
-              <Static Index="39" BlendMode="Alpha" />
-              <Static Index="40" BlendMode="Alpha" />
-              <Static Index="39" BlendMode="Alpha" />
-              <Static Index="38" BlendMode="Alpha" />
-              <Static Index="37" BlendMode="Alpha" />
-              <Static Index="36" BlendMode="Alpha" />
-              <Static Index="35" BlendMode="Alpha" />
-              <Static Index="34" BlendMode="Alpha" />
-              <Static Index="33" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Animated Interval="100">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="40" BlendMode="Alpha" />
-              <Static Index="39" BlendMode="Alpha" />
-              <Static Index="38" BlendMode="Alpha" />
-              <Static Index="37" BlendMode="Alpha" />
-              <Static Index="36" BlendMode="Alpha" />
-              <Static Index="35" BlendMode="Alpha" />
-              <Static Index="34" BlendMode="Alpha" />
-              <Static Index="33" BlendMode="Alpha" />
-              <Static Index="32" BlendMode="Alpha" />
-              <Static Index="33" BlendMode="Alpha" />
-              <Static Index="34" BlendMode="Alpha" />
-              <Static Index="35" BlendMode="Alpha" />
-              <Static Index="36" BlendMode="Alpha" />
-              <Static Index="37" BlendMode="Alpha" />
-              <Static Index="38" BlendMode="Alpha" />
-              <Static Index="39" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Animated Interval="100">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="32" BlendMode="Alpha" />
-              <Static Index="33" BlendMode="Alpha" />
-              <Static Index="34" BlendMode="Alpha" />
-              <Static Index="35" BlendMode="Alpha" />
-              <Static Index="36" BlendMode="Alpha" />
-              <Static Index="37" BlendMode="Alpha" />
-              <Static Index="38" BlendMode="Alpha" />
-              <Static Index="39" BlendMode="Alpha" />
-              <Static Index="40" BlendMode="Alpha" />
-              <Static Index="39" BlendMode="Alpha" />
-              <Static Index="38" BlendMode="Alpha" />
-              <Static Index="37" BlendMode="Alpha" />
-              <Static Index="36" BlendMode="Alpha" />
-              <Static Index="35" BlendMode="Alpha" />
-              <Static Index="34" BlendMode="Alpha" />
-              <Static Index="33" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Animated Interval="50">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="80" BlendMode="Alpha" />
-              <Static Index="81" BlendMode="Alpha" />
-              <Static Index="82" BlendMode="Alpha" />
-              <Static Index="83" BlendMode="Alpha" />
-              <Static Index="84" BlendMode="Alpha" />
-              <Static Index="85" BlendMode="Alpha" />
-              <Static Index="86" BlendMode="Alpha" />
-              <Static Index="87" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Animated Interval="50">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="80" BlendMode="Alpha" />
-              <Static Index="81" BlendMode="Alpha" />
-              <Static Index="82" BlendMode="Alpha" />
-              <Static Index="83" BlendMode="Alpha" />
-              <Static Index="84" BlendMode="Alpha" />
-              <Static Index="85" BlendMode="Alpha" />
-              <Static Index="86" BlendMode="Alpha" />
-              <Static Index="87" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Animated Interval="100">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="32" BlendMode="Alpha" />
-              <Static Index="33" BlendMode="Alpha" />
-              <Static Index="34" BlendMode="Alpha" />
-              <Static Index="35" BlendMode="Alpha" />
-              <Static Index="36" BlendMode="Alpha" />
-              <Static Index="37" BlendMode="Alpha" />
-              <Static Index="38" BlendMode="Alpha" />
-              <Static Index="39" BlendMode="Alpha" />
-              <Static Index="40" BlendMode="Alpha" />
-              <Static Index="39" BlendMode="Alpha" />
-              <Static Index="38" BlendMode="Alpha" />
-              <Static Index="37" BlendMode="Alpha" />
-              <Static Index="36" BlendMode="Alpha" />
-              <Static Index="35" BlendMode="Alpha" />
-              <Static Index="34" BlendMode="Alpha" />
-              <Static Index="33" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Animated Interval="100">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="40" BlendMode="Alpha" />
-              <Static Index="39" BlendMode="Alpha" />
-              <Static Index="38" BlendMode="Alpha" />
-              <Static Index="37" BlendMode="Alpha" />
-              <Static Index="36" BlendMode="Alpha" />
-              <Static Index="35" BlendMode="Alpha" />
-              <Static Index="34" BlendMode="Alpha" />
-              <Static Index="33" BlendMode="Alpha" />
-              <Static Index="32" BlendMode="Alpha" />
-              <Static Index="33" BlendMode="Alpha" />
-              <Static Index="34" BlendMode="Alpha" />
-              <Static Index="35" BlendMode="Alpha" />
-              <Static Index="36" BlendMode="Alpha" />
-              <Static Index="37" BlendMode="Alpha" />
-              <Static Index="38" BlendMode="Alpha" />
-              <Static Index="39" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="2" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="18" BlendMode="Alpha" />
-          <Static Index="24" BlendMode="Alpha" />
-          <Static Index="25" BlendMode="Alpha" />
-          <Null Count="8" />
-          <Static Index="112" BlendMode="Alpha" />
-          <Static Index="113" BlendMode="Alpha" />
-          <Null Count="16" />
-          <Static Index="20" BlendMode="Alpha" />
-          <Static Index="21" BlendMode="Alpha" />
-          <Static Index="112" BlendMode="Alpha" />
-          <Static Index="113" BlendMode="Alpha" />
-          <Static Index="24" BlendMode="Alpha" />
-          <Static Index="25" BlendMode="Alpha" />
-          <Null Count="338" />
-        </Row>
-        <Row>
-          <Null Count="2" />
-          <Static Index="12" BlendMode="Alpha" />
-          <Null Count="1" />
-          <Static Index="2" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Static Index="114" BlendMode="Alpha" />
-          <Static Index="112" BlendMode="Alpha" />
-          <Static Index="112" BlendMode="Alpha" />
-          <Static Index="113" BlendMode="Alpha" />
-          <Null Count="1" />
-          <Static Index="20" BlendMode="Alpha" />
-          <Static Index="21" BlendMode="Alpha" />
-          <Static Index="17" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Animated Interval="100">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="48" BlendMode="Alpha" />
-              <Static Index="49" BlendMode="Alpha" />
-              <Static Index="50" BlendMode="Alpha" />
-              <Static Index="51" BlendMode="Alpha" />
-              <Static Index="52" BlendMode="Alpha" />
-              <Static Index="53" BlendMode="Alpha" />
-              <Static Index="54" BlendMode="Alpha" />
-              <Static Index="55" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="41" BlendMode="Alpha" />
-          <Static Index="41" BlendMode="Alpha" />
-          <Static Index="41" BlendMode="Alpha" />
-          <Static Index="41" BlendMode="Alpha" />
-          <Animated Interval="100">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="48" BlendMode="Alpha" />
-              <Static Index="49" BlendMode="Alpha" />
-              <Static Index="50" BlendMode="Alpha" />
-              <Static Index="51" BlendMode="Alpha" />
-              <Static Index="52" BlendMode="Alpha" />
-              <Static Index="53" BlendMode="Alpha" />
-              <Static Index="54" BlendMode="Alpha" />
-              <Static Index="55" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="41" BlendMode="Alpha" />
-          <Static Index="2" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Animated Interval="100">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="56" BlendMode="Alpha" />
-              <Static Index="57" BlendMode="Alpha" />
-              <Static Index="58" BlendMode="Alpha" />
-              <Static Index="57" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="23" BlendMode="Alpha" />
-          <Static Index="19" BlendMode="Alpha" />
-          <Null Count="7" />
-          <Static Index="112" BlendMode="Alpha" />
-          <Static Index="117" BlendMode="Alpha" />
-          <Static Index="115" BlendMode="Alpha" />
-          <Null Count="14" />
-          <Static Index="16" BlendMode="Alpha" />
-          <Static Index="22" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="112" BlendMode="Alpha" />
-          <Static Index="113" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="23" BlendMode="Alpha" />
-          <Static Index="19" BlendMode="Alpha" />
-          <Null Count="337" />
-        </Row>
-        <Row>
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="22" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Animated Interval="100">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="48" BlendMode="Alpha" />
-              <Static Index="49" BlendMode="Alpha" />
-              <Static Index="50" BlendMode="Alpha" />
-              <Static Index="51" BlendMode="Alpha" />
-              <Static Index="52" BlendMode="Alpha" />
-              <Static Index="53" BlendMode="Alpha" />
-              <Static Index="54" BlendMode="Alpha" />
-              <Static Index="55" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="41" BlendMode="Alpha" />
-          <Static Index="41" BlendMode="Alpha" />
-          <Static Index="41" BlendMode="Alpha" />
-          <Static Index="41" BlendMode="Alpha" />
-          <Animated Interval="100">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="48" BlendMode="Alpha" />
-              <Static Index="49" BlendMode="Alpha" />
-              <Static Index="50" BlendMode="Alpha" />
-              <Static Index="51" BlendMode="Alpha" />
-              <Static Index="52" BlendMode="Alpha" />
-              <Static Index="53" BlendMode="Alpha" />
-              <Static Index="54" BlendMode="Alpha" />
-              <Static Index="55" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="41" BlendMode="Alpha" />
-          <Static Index="2" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Animated Interval="50">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="72" BlendMode="Alpha" />
-              <Static Index="73" BlendMode="Alpha" />
-              <Static Index="74" BlendMode="Alpha" />
-              <Static Index="75" BlendMode="Alpha" />
-              <Static Index="76" BlendMode="Alpha" />
-              <Static Index="77" BlendMode="Alpha" />
-              <Static Index="78" BlendMode="Alpha" />
-              <Static Index="79" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="18" BlendMode="Alpha" />
-          <Static Index="24" BlendMode="Alpha" />
-          <Static Index="25" BlendMode="Alpha" />
-          <Null Count="4" />
-          <Static Index="114" BlendMode="Alpha" />
-          <Static Index="112" BlendMode="Alpha" />
-          <Static Index="112" BlendMode="Alpha" />
-          <Static Index="113" BlendMode="Alpha" />
-          <Null Count="1" />
-          <Static Index="20" BlendMode="Alpha" />
-          <Static Index="21" BlendMode="Alpha" />
-          <Static Index="5" BlendMode="Alpha" />
-          <Static Index="106" BlendMode="Alpha" />
-          <Static Index="106" BlendMode="Alpha" />
-          <Static Index="106" BlendMode="Alpha" />
-          <Static Index="106" BlendMode="Alpha" />
-          <Static Index="106" BlendMode="Alpha" />
-          <Static Index="106" BlendMode="Alpha" />
-          <Static Index="106" BlendMode="Alpha" />
-          <Static Index="106" BlendMode="Alpha" />
-          <Static Index="4" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="5" BlendMode="Alpha" />
-          <Static Index="107" BlendMode="Alpha" />
-          <Null Count="6" />
-          <Static Index="114" BlendMode="Alpha" />
-          <Static Index="115" BlendMode="Alpha" />
-          <Null Count="325" />
-        </Row>
-        <Row>
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Animated Interval="100">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="48" BlendMode="Alpha" />
-              <Static Index="49" BlendMode="Alpha" />
-              <Static Index="50" BlendMode="Alpha" />
-              <Static Index="51" BlendMode="Alpha" />
-              <Static Index="52" BlendMode="Alpha" />
-              <Static Index="53" BlendMode="Alpha" />
-              <Static Index="54" BlendMode="Alpha" />
-              <Static Index="55" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="41" BlendMode="Alpha" />
-          <Static Index="41" BlendMode="Alpha" />
-          <Static Index="41" BlendMode="Alpha" />
-          <Static Index="41" BlendMode="Alpha" />
-          <Animated Interval="100">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="48" BlendMode="Alpha" />
-              <Static Index="49" BlendMode="Alpha" />
-              <Static Index="50" BlendMode="Alpha" />
-              <Static Index="51" BlendMode="Alpha" />
-              <Static Index="52" BlendMode="Alpha" />
-              <Static Index="53" BlendMode="Alpha" />
-              <Static Index="54" BlendMode="Alpha" />
-              <Static Index="55" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="41" BlendMode="Alpha" />
-          <Static Index="2" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Animated Interval="50">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="64" BlendMode="Alpha" />
-              <Static Index="65" BlendMode="Alpha" />
-              <Static Index="66" BlendMode="Alpha" />
-              <Static Index="67" BlendMode="Alpha" />
-              <Static Index="68" BlendMode="Alpha" />
-              <Static Index="69" BlendMode="Alpha" />
-              <Static Index="70" BlendMode="Alpha" />
-              <Static Index="71" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="23" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="22" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Null Count="8" />
-          <Static Index="2" BlendMode="Alpha" />
-          <Animated Interval="100">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="56" BlendMode="Alpha" />
-              <Static Index="57" BlendMode="Alpha" />
-              <Static Index="58" BlendMode="Alpha" />
-              <Static Index="57" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="5" BlendMode="Alpha" />
-          <Static Index="107" BlendMode="Alpha" />
-          <Null Count="1" />
-          <Static Index="114" BlendMode="Alpha" />
-          <Static Index="116" BlendMode="Alpha" />
-          <Static Index="113" BlendMode="Alpha" />
-          <Null Count="325" />
-        </Row>
-        <Row>
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Animated Interval="100">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="48" BlendMode="Alpha" />
-              <Static Index="49" BlendMode="Alpha" />
-              <Static Index="50" BlendMode="Alpha" />
-              <Static Index="51" BlendMode="Alpha" />
-              <Static Index="52" BlendMode="Alpha" />
-              <Static Index="53" BlendMode="Alpha" />
-              <Static Index="54" BlendMode="Alpha" />
-              <Static Index="55" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="41" BlendMode="Alpha" />
-          <Static Index="41" BlendMode="Alpha" />
-          <Static Index="41" BlendMode="Alpha" />
-          <Static Index="41" BlendMode="Alpha" />
-          <Animated Interval="100">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="48" BlendMode="Alpha" />
-              <Static Index="49" BlendMode="Alpha" />
-              <Static Index="50" BlendMode="Alpha" />
-              <Static Index="51" BlendMode="Alpha" />
-              <Static Index="52" BlendMode="Alpha" />
-              <Static Index="53" BlendMode="Alpha" />
-              <Static Index="54" BlendMode="Alpha" />
-              <Static Index="55" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="41" BlendMode="Alpha" />
-          <Static Index="2" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Animated Interval="50">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="64" BlendMode="Alpha" />
-              <Static Index="65" BlendMode="Alpha" />
-              <Static Index="66" BlendMode="Alpha" />
-              <Static Index="67" BlendMode="Alpha" />
-              <Static Index="68" BlendMode="Alpha" />
-              <Static Index="69" BlendMode="Alpha" />
-              <Static Index="70" BlendMode="Alpha" />
-              <Static Index="71" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Null Count="8" />
-          <Static Index="2" BlendMode="Alpha" />
-          <Animated Interval="50">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="72" BlendMode="Alpha" />
-              <Static Index="73" BlendMode="Alpha" />
-              <Static Index="74" BlendMode="Alpha" />
-              <Static Index="75" BlendMode="Alpha" />
-              <Static Index="76" BlendMode="Alpha" />
-              <Static Index="77" BlendMode="Alpha" />
-              <Static Index="78" BlendMode="Alpha" />
-              <Static Index="79" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Animated Interval="100">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="56" BlendMode="Alpha" />
-              <Static Index="57" BlendMode="Alpha" />
-              <Static Index="58" BlendMode="Alpha" />
-              <Static Index="57" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Static Index="19" BlendMode="Alpha" />
-          <Static Index="114" BlendMode="Alpha" />
-          <Static Index="112" BlendMode="Alpha" />
-          <Static Index="113" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Null Count="323" />
-        </Row>
-        <Row>
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="26" BlendMode="Alpha" />
-          <Static Index="27" BlendMode="Alpha" />
-          <Static Index="27" BlendMode="Alpha" />
-          <Static Index="27" BlendMode="Alpha" />
-          <Static Index="27" BlendMode="Alpha" />
-          <Static Index="27" BlendMode="Alpha" />
-          <Static Index="28" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Animated Interval="50">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="64" BlendMode="Alpha" />
-              <Static Index="65" BlendMode="Alpha" />
-              <Static Index="66" BlendMode="Alpha" />
-              <Static Index="67" BlendMode="Alpha" />
-              <Static Index="68" BlendMode="Alpha" />
-              <Static Index="69" BlendMode="Alpha" />
-              <Static Index="70" BlendMode="Alpha" />
-              <Static Index="71" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Null Count="8" />
-          <Static Index="2" BlendMode="Alpha" />
-          <Animated Interval="50">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="64" BlendMode="Alpha" />
-              <Static Index="65" BlendMode="Alpha" />
-              <Static Index="66" BlendMode="Alpha" />
-              <Static Index="67" BlendMode="Alpha" />
-              <Static Index="68" BlendMode="Alpha" />
-              <Static Index="69" BlendMode="Alpha" />
-              <Static Index="70" BlendMode="Alpha" />
-              <Static Index="71" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Animated Interval="50">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="72" BlendMode="Alpha" />
-              <Static Index="73" BlendMode="Alpha" />
-              <Static Index="74" BlendMode="Alpha" />
-              <Static Index="75" BlendMode="Alpha" />
-              <Static Index="76" BlendMode="Alpha" />
-              <Static Index="77" BlendMode="Alpha" />
-              <Static Index="78" BlendMode="Alpha" />
-              <Static Index="79" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Animated Interval="100">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="56" BlendMode="Alpha" />
-              <Static Index="57" BlendMode="Alpha" />
-              <Static Index="58" BlendMode="Alpha" />
-              <Static Index="57" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="4" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="5" BlendMode="Alpha" />
-          <Static Index="112" BlendMode="Alpha" />
-          <Static Index="113" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Null Count="323" />
-        </Row>
-        <Row>
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Animated Interval="50">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="64" BlendMode="Alpha" />
-              <Static Index="65" BlendMode="Alpha" />
-              <Static Index="66" BlendMode="Alpha" />
-              <Static Index="67" BlendMode="Alpha" />
-              <Static Index="68" BlendMode="Alpha" />
-              <Static Index="69" BlendMode="Alpha" />
-              <Static Index="70" BlendMode="Alpha" />
-              <Static Index="71" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Null Count="8" />
-          <Static Index="2" BlendMode="Alpha" />
-          <Animated Interval="50">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="64" BlendMode="Alpha" />
-              <Static Index="65" BlendMode="Alpha" />
-              <Static Index="66" BlendMode="Alpha" />
-              <Static Index="67" BlendMode="Alpha" />
-              <Static Index="68" BlendMode="Alpha" />
-              <Static Index="69" BlendMode="Alpha" />
-              <Static Index="70" BlendMode="Alpha" />
-              <Static Index="71" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Animated Interval="50">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="64" BlendMode="Alpha" />
-              <Static Index="65" BlendMode="Alpha" />
-              <Static Index="66" BlendMode="Alpha" />
-              <Static Index="67" BlendMode="Alpha" />
-              <Static Index="68" BlendMode="Alpha" />
-              <Static Index="69" BlendMode="Alpha" />
-              <Static Index="70" BlendMode="Alpha" />
-              <Static Index="71" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Animated Interval="50">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="72" BlendMode="Alpha" />
-              <Static Index="73" BlendMode="Alpha" />
-              <Static Index="74" BlendMode="Alpha" />
-              <Static Index="75" BlendMode="Alpha" />
-              <Static Index="76" BlendMode="Alpha" />
-              <Static Index="77" BlendMode="Alpha" />
-              <Static Index="78" BlendMode="Alpha" />
-              <Static Index="79" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Animated Interval="100">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="56" BlendMode="Alpha" />
-              <Static Index="57" BlendMode="Alpha" />
-              <Static Index="58" BlendMode="Alpha" />
-              <Static Index="57" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="2" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Static Index="112" BlendMode="Alpha" />
-          <Static Index="113" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Null Count="323" />
-        </Row>
-      </TileArray>
-      <Properties>
-        <Property Key="FogEffect" Type="Boolean"><![CDATA[True]]></Property>
-        <Property Key="FogDistance" Type="Int32"><![CDATA[20]]></Property>
-      </Properties>
-    </Layer>
-  </Layers>
-  <Properties>
-    <Property Key="@TileBrush@Tile Brush 2@" Type="String"><![CDATA[Foreground|0,0,TileSheet01,108|1,0,,4|2,0,,5|3,0,,107|1,1,,2|2,1,,3|1,2,,2|2,2,,3]]></Property>
-    <Property Key="@TileBrush@Tile Brush 1@" Type="String"><![CDATA[Foreground|2,2,TileSheet01,117|2,1,,113|2,3,,112|3,3,,113|3,2,,115|2,0,,115|1,0,,114|0,3,,114|1,1,,112|1,3,,112|1,2,,112]]></Property>
-  </Properties>
-</Map>
\ No newline at end of file
diff --git a/tests/gdx-tests-android/assets/data/maps/tide/TileSheets/Background01.png b/tests/gdx-tests-android/assets/data/maps/tide/TileSheets/Background01.png
deleted file mode 100644
index 538f24f..0000000
Binary files a/tests/gdx-tests-android/assets/data/maps/tide/TileSheets/Background01.png and /dev/null differ
diff --git a/tests/gdx-tests-android/assets/data/maps/tide/TileSheets/Background02.png b/tests/gdx-tests-android/assets/data/maps/tide/TileSheets/Background02.png
deleted file mode 100644
index 5d1fd00..0000000
Binary files a/tests/gdx-tests-android/assets/data/maps/tide/TileSheets/Background02.png and /dev/null differ
diff --git a/tests/gdx-tests-android/assets/data/maps/tide/TileSheets/Background03.png b/tests/gdx-tests-android/assets/data/maps/tide/TileSheets/Background03.png
deleted file mode 100644
index 6a8af2f..0000000
Binary files a/tests/gdx-tests-android/assets/data/maps/tide/TileSheets/Background03.png and /dev/null differ
diff --git a/tests/gdx-tests-android/assets/data/maps/tide/TileSheets/TileSheet01.png b/tests/gdx-tests-android/assets/data/maps/tide/TileSheets/TileSheet01.png
deleted file mode 100644
index 5ec66d3..0000000
Binary files a/tests/gdx-tests-android/assets/data/maps/tide/TileSheets/TileSheet01.png and /dev/null differ
diff --git a/tests/gdx-tests-android/assets/data/maps/tiled/isometric_grass_and_water.png b/tests/gdx-tests-android/assets/data/maps/tiled/isometric_grass_and_water.png
deleted file mode 100644
index b342a0c..0000000
Binary files a/tests/gdx-tests-android/assets/data/maps/tiled/isometric_grass_and_water.png and /dev/null differ
diff --git a/tests/gdx-tests-android/assets/data/maps/tiled/isometric_grass_and_water.tmx b/tests/gdx-tests-android/assets/data/maps/tiled/isometric_grass_and_water.tmx
deleted file mode 100644
index b7bb262..0000000
--- a/tests/gdx-tests-android/assets/data/maps/tiled/isometric_grass_and_water.tmx
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<map version="1.0" orientation="isometric" width="25" height="25" tilewidth="64" tileheight="32">
- <tileset firstgid="1" name="isometric_grass_and_water" tilewidth="64" tileheight="64">
-  <tileoffset x="0" y="16"/>
-  <image source="isometric_grass_and_water.png" width="256" height="384"/>
-  <terraintypes>
-   <terrain name="Grass" tile="0"/>
-   <terrain name="Water" tile="22"/>
-  </terraintypes>
-  <tile id="0" terrain="0,0,0,0"/>
-  <tile id="1" terrain="0,0,0,0"/>
-  <tile id="2" terrain="0,0,0,0"/>
-  <tile id="3" terrain="0,0,0,0"/>
-  <tile id="4" terrain="0,0,0,1"/>
-  <tile id="5" terrain="0,0,1,0"/>
-  <tile id="6" terrain="1,0,0,0"/>
-  <tile id="7" terrain="0,1,0,0"/>
-  <tile id="8" terrain="0,1,1,1"/>
-  <tile id="9" terrain="1,0,1,1"/>
-  <tile id="10" terrain="1,1,1,0"/>
-  <tile id="11" terrain="1,1,0,1"/>
-  <tile id="12" terrain="0,0,1,1"/>
-  <tile id="13" terrain="1,0,1,0"/>
-  <tile id="14" terrain="1,1,0,0"/>
-  <tile id="15" terrain="0,1,0,1"/>
-  <tile id="16" terrain="0,0,1,1"/>
-  <tile id="17" terrain="1,0,1,0"/>
-  <tile id="18" terrain="1,1,0,0"/>
-  <tile id="19" terrain="0,1,0,1"/>
-  <tile id="20" terrain="0,1,1,0"/>
-  <tile id="21" terrain="1,0,0,1"/>
-  <tile id="22" terrain="1,1,1,1"/>
-  <tile id="23" terrain="1,1,1,1"/>
- </tileset>
- <layer name="Tile Layer 1" width="25" height="25">
-  <data encoding="base64" compression="zlib">
-   eJx1lttywjAMROVgyqVtAoFC/v9L68xoh5PFPGhIYktrrVYyS0QszZ7Nvpvd0n7y24L1Q7MhrTSreN/le821HZ7lv9qYa6sdE0cYs/kX7PXYwtfaevYp7WDrd+SnHByjYr/npP1zZ4/elcuM71rjeckdc5KNHX75fMwc9s2uzb6AsYstJzwrv5/Tz89SLIZy8v203llV8xl7yMU+462/v81OqA114/UhrzUxRqwprnh6ZGzp2PNQfPqRu/X9hnMV8F/xLg1L42erDf2oaa2RI2qPtbgbhmw2H69nMUxx/gVccXdC3AW/o/HV60vW59Lhu8arDxmfGIPFUV1qbLVQEIs4PlOeHQxqVjmzr5mLYsmf+5Qj5yM1r3Ne4p1D5VcMh3qWZibLx2fYkBhPYOv81I9wbrGd45zFU7zrndpwDjkHXXfej9zHc3EG+D3AWcCZMJif7hTnVxr6i9edtoBDz8N7kxqbY6sN9gJnsnqIOqCme7Un76579sIV8dccHvHqZefH76BP9wjzkVapM2rL+5/8cR6QS9eh8p2AT12y5oO9+7yh5hzLZypnHX29/pzB9PE7bOg8Mza5KvGu4R7mp/89zqvr7x+TnxEn
-  </data>
- </layer>
-</map>
diff --git a/tests/gdx-tests-android/assets/data/maps/tiled/super-koalio/koalio.png b/tests/gdx-tests-android/assets/data/maps/tiled/super-koalio/koalio.png
deleted file mode 100755
index 1bdca3e..0000000
Binary files a/tests/gdx-tests-android/assets/data/maps/tiled/super-koalio/koalio.png and /dev/null differ
diff --git a/tests/gdx-tests-android/assets/data/maps/tiled/super-koalio/level1.tmx b/tests/gdx-tests-android/assets/data/maps/tiled/super-koalio/level1.tmx
deleted file mode 100755
index 419496f..0000000
--- a/tests/gdx-tests-android/assets/data/maps/tiled/super-koalio/level1.tmx
+++ /dev/null
@@ -1,16 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<map version="1.0" orientation="orthogonal" width="212" height="20" tilewidth="16" tileheight="16">
- <tileset firstgid="1" name="tileSet-hd" tilewidth="16" tileheight="16">
-  <image source="tileSet.png" trans="fe80fe" width="256" height="256"/>
- </tileset>
- <layer name="background" width="212" height="20">
-  <data encoding="base64">

-  </data>
- </layer>
- <layer name="walls" width="212" height="20">
-  <data encoding="base64">

-  </data>
- </layer>
-</map>
diff --git a/tests/gdx-tests-android/assets/data/maps/tiled/super-koalio/tileSet.png b/tests/gdx-tests-android/assets/data/maps/tiled/super-koalio/tileSet.png
deleted file mode 100755
index 939276a..0000000
Binary files a/tests/gdx-tests-android/assets/data/maps/tiled/super-koalio/tileSet.png and /dev/null differ
diff --git a/tests/gdx-tests-android/assets/data/maps/tiled/tiles.png b/tests/gdx-tests-android/assets/data/maps/tiled/tiles.png
deleted file mode 100644
index 5ec66d3..0000000
Binary files a/tests/gdx-tests-android/assets/data/maps/tiled/tiles.png and /dev/null differ
diff --git a/tests/gdx-tests-android/assets/data/maps/tiled/tiles.tmx b/tests/gdx-tests-android/assets/data/maps/tiled/tiles.tmx
deleted file mode 100644
index ea97abe..0000000
--- a/tests/gdx-tests-android/assets/data/maps/tiled/tiles.tmx
+++ /dev/null
@@ -1,32 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<map version="1.0" orientation="orthogonal" width="15" height="10" tilewidth="32" tileheight="32">
- <tileset firstgid="1" source="tiles.tsx"/>
- <layer name="Tile Layer 2" width="15" height="10">
-  <data encoding="csv">
-0,0,0,0,97,98,0,0,0,0,0,97,98,0,0,
-0,0,0,97,105,105,98,0,0,97,101,105,105,98,0,
-0,0,0,99,102,102,100,0,97,105,105,105,105,105,98,
-115,116,0,0,0,0,0,0,99,102,102,102,102,102,100,
-113,114,0,0,0,0,0,0,0,0,0,0,0,0,0,
-113,114,0,0,0,0,0,0,16,0,0,0,0,0,0,
-113,114,115,116,0,0,0,0,0,0,0,0,0,115,116,
-113,114,113,114,0,0,0,0,0,0,0,0,0,113,114,
-113,114,113,114,0,0,0,0,0,0,0,0,0,113,114,
-113,114,113,114,0,0,0,0,0,0,0,0,0,113,114
-</data>
- </layer>
- <layer name="Tile Layer 1" width="15" height="10">
-  <data encoding="csv">
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,109,5,2,6,108,0,
-0,0,0,0,0,0,0,0,0,0,3,1,4,0,0,
-0,0,0,0,0,0,0,0,0,0,10,11,12,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,17,2,2,25,26,0,0,0,0,0,0,0,
-0,0,17,18,57,57,1,24,25,26,0,0,0,0,0,
-2,2,18,1,73,73,1,1,1,24,2,2,2,2,2
-</data>
- </layer>
-</map>
diff --git a/tests/gdx-tests-android/assets/data/maps/tiled/tiles.tsx b/tests/gdx-tests-android/assets/data/maps/tiled/tiles.tsx
deleted file mode 100644
index 54acd70..0000000
--- a/tests/gdx-tests-android/assets/data/maps/tiled/tiles.tsx
+++ /dev/null
@@ -1,4 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<tileset name="tiles" tilewidth="32" tileheight="32">
- <image source="tiles.png" width="512" height="512"/>
-</tileset>
diff --git a/tests/gdx-tests-android/assets/data/tiledmap/alignment test.tmx b/tests/gdx-tests-android/assets/data/tiledmap/alignment test.tmx
new file mode 100644
index 0000000..b24849d
--- /dev/null
+++ b/tests/gdx-tests-android/assets/data/tiledmap/alignment test.tmx	
@@ -0,0 +1,38 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?><map height="14" orientation="orthogonal" tileheight="64" tilewidth="64" version="1.0" width="14"><properties><property name="blended tiles" value="1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40"/></properties>
+ <tileset firstgid="1" name="perspective walls" tileheight="64" tilewidth="64">
+  <image source="perspective walls.png"/>
+  <tile id="13">
+   <properties>
+    <property name="door" value="true"/>
+   </properties>
+  </tile>
+  <tile id="14">
+   <properties>
+    <property name="door" value="true"/>
+   </properties>
+  </tile>
+  <tile id="15">
+   <properties>
+    <property name="pickup" value="true"/>
+   </properties>
+  </tile>
+ </tileset>
+ <tileset firstgid="17" name="perspective walls test" tileheight="64" tilewidth="64">
+  <image source="perspective walls test.png"/>
+ </tileset>
+ <layer height="14" name="Walls" width="14">
+  <data encoding="base64">
+   JAAAACUAAAAlAAAAJQAAACUAAAAlAAAAJQAAACUAAAAlAAAAJQAAACUAAAAlAAAAJQAAACMAAAAnAAAAAQAAABEAAAAAAAAAAgAAABIAAAAAAAAAAwAAABMAAAAAAAAABAAAABQAAAAAAAAAKAAAACcAAAARAAAAAQAAAAAAAAASAAAAAgAAAAAAAAATAAAAAwAAAAAAAAAUAAAABAAAAAAAAAAoAAAAJwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAnAAAABQAAABUAAAAAAAAABgAAABYAAAAAAAAABwAAABcAAAAAAAAACAAAABgAAAAAAAAAKAAAACcAAAAVAAAABQAAAAAAAAAWAAAABgAAAAAAAAAXAAAABwAAAAAAAAAYAAAACAAAAAAAAAAoAAAAJwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAnAAAACQAAABkAAAAAAAAACgAAABoAAAAAAAAACwAAABsAAAAAAAAADAAAABwAAAAAAAAAKAAAACcAAAAZAAAACQAAAAAAAAAaAAAACgAAAAAAAAAbAAAACwAAAAAAAAAcAAAADAAAAAAAAAAoAAAAJwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAnAAAADQAAAB0AAAAAAAAADgAAAB4AAAAAAAAADwAAAB8AAAAAAAAAEAAAACAAAAAAAAAAKAAAACcAAAAdAAAADQAAAAAAAAAeAAAADgAAAAAAAAAfAAAADwAAAAAAAAAgAAAAEAAAAAAAAAAoAAAAJwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAiAAAAJgAAACYAAAAmAAAAJgAAACYAAAAmAAAAJgAAACYAAAAmAAAAJgAAACYAAAAmAAAAIQAAAA==
+  </data>
+ </layer>
+ <layer height="14" name="Walls level 2" width="14">
+  <data encoding="base64">

+  </data>
+ </layer>
+ <layer height="14" name="Walls level 3" width="14">
+  <data encoding="base64">

+  </data>
+ </layer>
+</map>
\ No newline at end of file
diff --git a/tests/gdx-tests-android/assets/data/tiledmap/flip_rotate/flip_rotate.tmx b/tests/gdx-tests-android/assets/data/tiledmap/flip_rotate/flip_rotate.tmx
new file mode 100644
index 0000000..84b2f34
--- /dev/null
+++ b/tests/gdx-tests-android/assets/data/tiledmap/flip_rotate/flip_rotate.tmx
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?><map height="10" orientation="orthogonal" tileheight="32" tilewidth="32" version="1.0" width="15"><properties><property name="blended tiles" value=""/></properties>
+ <tileset firstgid="1" margin="1" name="tmw-desert-spacing" spacing="1" tileheight="32" tilewidth="32">
+  <image height="199" source="tmw-desert-spacing.png" width="265"/>
+ </tileset>
+ <layer height="10" name="Tile Layer 1" width="15">
+  <data compression="gzip" encoding="base64">
+   H4sIAAAAAAAAC2NkYGBgZGBoAGIHID4AxAugdAIQP4CKK0DVwGiY+KjeUb1Y9QIAiUtw8VgCAAA=
+  </data>
+ </layer>
+</map>
\ No newline at end of file
diff --git a/tests/gdx-tests-android/assets/data/tiledmap/flip_rotate/tmw-desert-spacing packfile b/tests/gdx-tests-android/assets/data/tiledmap/flip_rotate/tmw-desert-spacing packfile
new file mode 100644
index 0000000..565c2c9
--- /dev/null
+++ b/tests/gdx-tests-android/assets/data/tiledmap/flip_rotate/tmw-desert-spacing packfile	
@@ -0,0 +1,341 @@
+
+tmw-desert-spacing1.png
+format: RGBA8888
+filter: Nearest,Nearest
+repeat: none
+tmw-desert-spacing
+  rotate: false
+  xy: 2, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 47
+tmw-desert-spacing
+  rotate: false
+  xy: 2, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 46
+tmw-desert-spacing
+  rotate: false
+  xy: 2, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 45
+tmw-desert-spacing
+  rotate: false
+  xy: 36, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 44
+tmw-desert-spacing
+  rotate: false
+  xy: 36, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 43
+tmw-desert-spacing
+  rotate: false
+  xy: 36, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 42
+tmw-desert-spacing
+  rotate: false
+  xy: 70, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 41
+tmw-desert-spacing
+  rotate: false
+  xy: 70, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 40
+tmw-desert-spacing
+  rotate: false
+  xy: 70, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 39
+tmw-desert-spacing
+  rotate: false
+  xy: 104, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 38
+tmw-desert-spacing
+  rotate: false
+  xy: 104, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 37
+tmw-desert-spacing
+  rotate: false
+  xy: 104, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 36
+tmw-desert-spacing
+  rotate: false
+  xy: 138, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 35
+tmw-desert-spacing
+  rotate: false
+  xy: 138, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 34
+tmw-desert-spacing
+  rotate: false
+  xy: 138, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 33
+tmw-desert-spacing
+  rotate: false
+  xy: 172, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 32
+tmw-desert-spacing
+  rotate: false
+  xy: 172, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 31
+tmw-desert-spacing
+  rotate: false
+  xy: 172, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 30
+tmw-desert-spacing
+  rotate: false
+  xy: 206, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 29
+tmw-desert-spacing
+  rotate: false
+  xy: 206, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 28
+tmw-desert-spacing
+  rotate: false
+  xy: 206, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 27
+tmw-desert-spacing
+  rotate: false
+  xy: 240, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 26
+tmw-desert-spacing
+  rotate: false
+  xy: 240, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 25
+tmw-desert-spacing
+  rotate: false
+  xy: 240, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 24
+tmw-desert-spacing
+  rotate: false
+  xy: 274, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 23
+tmw-desert-spacing
+  rotate: false
+  xy: 274, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 22
+tmw-desert-spacing
+  rotate: false
+  xy: 274, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 21
+tmw-desert-spacing
+  rotate: false
+  xy: 308, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 20
+tmw-desert-spacing
+  rotate: false
+  xy: 308, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 19
+tmw-desert-spacing
+  rotate: false
+  xy: 308, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 18
+tmw-desert-spacing
+  rotate: false
+  xy: 342, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 17
+tmw-desert-spacing
+  rotate: false
+  xy: 342, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 16
+tmw-desert-spacing
+  rotate: false
+  xy: 342, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 15
+tmw-desert-spacing
+  rotate: false
+  xy: 376, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 14
+tmw-desert-spacing
+  rotate: false
+  xy: 376, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 13
+tmw-desert-spacing
+  rotate: false
+  xy: 376, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 12
+tmw-desert-spacing
+  rotate: false
+  xy: 410, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 11
+tmw-desert-spacing
+  rotate: false
+  xy: 410, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 10
+tmw-desert-spacing
+  rotate: false
+  xy: 410, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 9
+tmw-desert-spacing
+  rotate: false
+  xy: 444, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 8
+tmw-desert-spacing
+  rotate: false
+  xy: 444, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 7
+tmw-desert-spacing
+  rotate: false
+  xy: 444, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 6
+tmw-desert-spacing
+  rotate: false
+  xy: 478, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 5
+tmw-desert-spacing
+  rotate: false
+  xy: 478, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 4
+tmw-desert-spacing
+  rotate: false
+  xy: 478, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 3
+tmw-desert-spacing
+  rotate: false
+  xy: 512, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 2
+tmw-desert-spacing
+  rotate: false
+  xy: 512, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 1
+tmw-desert-spacing
+  rotate: false
+  xy: 512, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 0
diff --git a/tests/gdx-tests-android/assets/data/tiledmap/flip_rotate/tmw-desert-spacing1.png b/tests/gdx-tests-android/assets/data/tiledmap/flip_rotate/tmw-desert-spacing1.png
new file mode 100644
index 0000000..2d7262b
Binary files /dev/null and b/tests/gdx-tests-android/assets/data/tiledmap/flip_rotate/tmw-desert-spacing1.png differ
diff --git a/tests/gdx-tests-android/assets/data/tiledmap/margin spacing doctype test.tmx b/tests/gdx-tests-android/assets/data/tiledmap/margin spacing doctype test.tmx
new file mode 100644
index 0000000..bf944c7
--- /dev/null
+++ b/tests/gdx-tests-android/assets/data/tiledmap/margin spacing doctype test.tmx	
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?><map height="40" orientation="orthogonal" tileheight="32" tilewidth="32" version="1.0" width="40"><properties><property name="blended tiles" value=""/></properties>
+ <tileset firstgid="1" margin="1" name="Desert" spacing="1" tileheight="32" tilewidth="32">
+  <image source="tmw-desert-spacing.png"/>
+ </tileset>
+ <layer height="40" name="Ground" width="40">
+  <data compression="gzip" encoding="base64">
+   H4sIAAAAAAAAA+2Y2QrCMBBFo31wA+sCrlirdd/q/3+dIzZUhtAmMRlH6cPBBlJyvDO2g5EQIvJIFwiBnudzbLgp/JYMvH4lv2dWI2AMTBj4qKgBdSBA3j7OmgIzA+ZAC2gDHYIsVsDagMSj36HAbwOcgO0X/YrySzTzpPDbMfS7Iy/sdxGv/r8S++Gew+uyvHBfuvBT/Q4OKD95XeaHc3WV3x6tpY9pfr7riz0xx6x+upwd+DUymiJ/FxURaO6TLD70C0U+X8jvWkRHc5/qPhu/scjniz4wKGGouU91n8/eoyYW6jmHk2dM6GMzm1F43bJPnWfn+/sncXS+Ljp+T6d7tpfSL2Xoh/uam59Nfd/nCyq/1MAPZ8ktP1WtOftR5mczm1H6/QsxA4dfAWfF7b/BqsYVFZ/xABSXR5cAGQAA
+  </data>
+ </layer>
+</map>
\ No newline at end of file
diff --git a/tests/gdx-tests-android/assets/data/tiledmap/perspective walls packfile b/tests/gdx-tests-android/assets/data/tiledmap/perspective walls packfile
new file mode 100644
index 0000000..98d5e30
--- /dev/null
+++ b/tests/gdx-tests-android/assets/data/tiledmap/perspective walls packfile	
@@ -0,0 +1,117 @@
+
+perspective walls1.png
+format: RGBA8888
+filter: Nearest,Nearest
+repeat: none
+perspective walls
+  rotate: false
+  xy: 0, 0
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 2
+perspective walls
+  rotate: false
+  xy: 66, 0
+  size: 56, 64
+  orig: 64, 64
+  offset: 8, 0
+  index: 11
+perspective walls
+  rotate: false
+  xy: 0, 66
+  size: 56, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 9
+perspective walls
+  rotate: false
+  xy: 58, 66
+  size: 48, 64
+  orig: 64, 64
+  offset: 8, 0
+  index: 1
+perspective walls
+  rotate: false
+  xy: 0, 132
+  size: 40, 64
+  orig: 64, 64
+  offset: 12, 0
+  index: 14
+perspective walls
+  rotate: false
+  xy: 42, 132
+  size: 64, 56
+  orig: 64, 64
+  offset: 0, 0
+  index: 10
+perspective walls
+  rotate: false
+  xy: 0, 198
+  size: 64, 56
+  orig: 64, 64
+  offset: 0, 8
+  index: 8
+perspective walls
+  rotate: false
+  xy: 66, 198
+  size: 56, 56
+  orig: 64, 64
+  offset: 8, 0
+  index: 7
+perspective walls
+  rotate: false
+  xy: 0, 256
+  size: 56, 56
+  orig: 64, 64
+  offset: 0, 0
+  index: 6
+perspective walls
+  rotate: false
+  xy: 58, 256
+  size: 56, 56
+  orig: 64, 64
+  offset: 0, 8
+  index: 5
+perspective walls
+  rotate: false
+  xy: 0, 314
+  size: 56, 56
+  orig: 64, 64
+  offset: 8, 8
+  index: 4
+perspective walls
+  rotate: false
+  xy: 58, 314
+  size: 64, 48
+  orig: 64, 64
+  offset: 0, 8
+  index: 0
+perspective walls
+  rotate: false
+  xy: 0, 372
+  size: 48, 48
+  orig: 64, 64
+  offset: 8, 8
+  index: 3
+perspective walls
+  rotate: false
+  xy: 50, 372
+  size: 40, 41
+  orig: 64, 64
+  offset: 20, 19
+  index: 12
+perspective walls
+  rotate: false
+  xy: 0, 422
+  size: 64, 40
+  orig: 64, 64
+  offset: 0, 12
+  index: 13
+perspective walls
+  rotate: false
+  xy: 108, 66
+  size: 12, 16
+  orig: 64, 64
+  offset: 2, 0
+  index: 15
diff --git a/tests/gdx-tests-android/assets/data/tiledmap/perspective walls test packfile b/tests/gdx-tests-android/assets/data/tiledmap/perspective walls test packfile
new file mode 100644
index 0000000..db2a5b5
--- /dev/null
+++ b/tests/gdx-tests-android/assets/data/tiledmap/perspective walls test packfile	
@@ -0,0 +1,173 @@
+
+perspective walls test1.png
+format: RGBA8888
+filter: Nearest,Nearest
+repeat: none
+perspective walls test
+  rotate: false
+  xy: 0, 0
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 23
+perspective walls test
+  rotate: false
+  xy: 66, 0
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 22
+perspective walls test
+  rotate: false
+  xy: 132, 0
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 21
+perspective walls test
+  rotate: false
+  xy: 198, 0
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 20
+perspective walls test
+  rotate: false
+  xy: 264, 0
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 19
+perspective walls test
+  rotate: false
+  xy: 330, 0
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 18
+perspective walls test
+  rotate: false
+  xy: 396, 0
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 17
+perspective walls test
+  rotate: false
+  xy: 0, 66
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 16
+perspective walls test
+  rotate: false
+  xy: 0, 132
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 15
+perspective walls test
+  rotate: false
+  xy: 0, 198
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 14
+perspective walls test
+  rotate: false
+  xy: 0, 264
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 13
+perspective walls test
+  rotate: false
+  xy: 0, 330
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 12
+perspective walls test
+  rotate: false
+  xy: 0, 396
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 11
+perspective walls test
+  rotate: false
+  xy: 66, 66
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 10
+perspective walls test
+  rotate: false
+  xy: 132, 66
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 9
+perspective walls test
+  rotate: false
+  xy: 198, 66
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 8
+perspective walls test
+  rotate: false
+  xy: 264, 66
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 7
+perspective walls test
+  rotate: false
+  xy: 330, 66
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 6
+perspective walls test
+  rotate: false
+  xy: 396, 66
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 5
+perspective walls test
+  rotate: false
+  xy: 66, 132
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 4
+perspective walls test
+  rotate: false
+  xy: 66, 198
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 3
+perspective walls test
+  rotate: false
+  xy: 66, 264
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 2
+perspective walls test
+  rotate: false
+  xy: 66, 330
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 1
+perspective walls test
+  rotate: false
+  xy: 66, 396
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 0
diff --git a/tests/gdx-tests-android/assets/data/tiledmap/perspective walls test1.png b/tests/gdx-tests-android/assets/data/tiledmap/perspective walls test1.png
new file mode 100644
index 0000000..69362bc
Binary files /dev/null and b/tests/gdx-tests-android/assets/data/tiledmap/perspective walls test1.png differ
diff --git a/tests/gdx-tests-android/assets/data/tiledmap/perspective walls.tmx b/tests/gdx-tests-android/assets/data/tiledmap/perspective walls.tmx
new file mode 100644
index 0000000..4dca724
--- /dev/null
+++ b/tests/gdx-tests-android/assets/data/tiledmap/perspective walls.tmx	
@@ -0,0 +1,35 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?><map height="32" orientation="orthogonal" tileheight="32" tilewidth="32" version="1.0" width="32"><properties><property name="blended tiles" value="1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40"/></properties>
+ <tileset firstgid="1" name="perspective walls" tileheight="64" tilewidth="64">
+ <image source="perspective walls.png"/>
+ <tile id="13">
+  <properties>
+   <property name="door" value="true"/>
+  </properties>
+ </tile>
+ <tile id="14">
+  <properties>
+   <property name="door" value="true"/>
+  </properties>
+ </tile>
+ <tile id="15">
+  <properties>
+   <property name="pickup" value="true"/>
+  </properties>
+ </tile>
+</tileset>
+ <layer height="32" name="Walls" width="32">
+  <data compression="zlib" encoding="base64">
+   eJztlOkKgCAQhLfb7vd/24SUBqMMNevHfDB4LczusihCCCHkTzRay4XaDP7rxf1882ZpzBqTp/Wo4c7ulRy96LUKRx3EFYF5+GpESpA9V845pT/Oxijn+luIw36k8vf1Rpk1xPepx9vczV+O3GL6n4JJ9vkSOf8/Qwb/r+vHP8ZVzFwTQshf2AA5owLB
+  </data>
+ </layer>
+ <layer height="32" name="Walls level 2" width="32">
+  <data compression="zlib" encoding="base64">
+   eJztzgEJAAAIA7CD/Tsb4yJbgiUA8MO0AwAAhy0rhAAE
+  </data>
+ </layer>
+ <layer height="32" name="Walls level 3" width="32">
+  <data compression="zlib" encoding="base64">
+   eJztzjENAAAIA7Al+PeMgz0cPK2CJgBwN98BAACqBS0QAAQ=
+  </data>
+ </layer>
+</map>
\ No newline at end of file
diff --git a/tests/gdx-tests-android/assets/data/tiledmap/perspective walls1.png b/tests/gdx-tests-android/assets/data/tiledmap/perspective walls1.png
new file mode 100644
index 0000000..4b1fc75
Binary files /dev/null and b/tests/gdx-tests-android/assets/data/tiledmap/perspective walls1.png differ
diff --git a/tests/gdx-tests-android/assets/data/tiledmap/tilemap csv.tmx b/tests/gdx-tests-android/assets/data/tiledmap/tilemap csv.tmx
new file mode 100644
index 0000000..d4ab951
--- /dev/null
+++ b/tests/gdx-tests-android/assets/data/tiledmap/tilemap csv.tmx	
@@ -0,0 +1,174 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?><map height="30" orientation="orthogonal" tileheight="32" tilewidth="32" version="1.0" width="50">
+ <properties>
+  <property name="blended tiles" value="1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,5,6,7,8,9,10,11,12,13,14,15,16"/>
+ </properties>
+ <tileset firstgid="1" name="tileset" tileheight="32" tilewidth="32">
+  <image height="64" source="tileset.png" width="64"/>
+ </tileset>
+ <tileset firstgid="5" name="tileset2" tileheight="32" tilewidth="32">
+  <image height="64" source="tileset2.png" width="64"/>
+ </tileset>
+ <tileset firstgid="9" name="tileset3" tileheight="32" tilewidth="32">
+  <image height="64" source="tileset3.png" width="64"/>
+ </tileset>
+ <tileset firstgid="13" name="tileset4" tileheight="32" tilewidth="32">
+  <image height="64" source="tileset4.png" width="64"/>
+ </tileset>
+ <layer height="30" name="First Layer" width="50">
+  <properties>
+   <property name="Layer Property" value="Layer Value"/>
+  </properties>
+  <data encoding="csv">
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,1,2,1,1,1,2,1,2,2,2,2,1,2,1,1,1,1,2,2,2,1,1,2,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,1,1,2,1,1,1,2,1,2,1,1,1,1,2,1,1,1,1,2,1,1,2,1,2,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,1,2,1,1,1,2,1,2,1,1,1,1,2,1,1,1,1,2,1,1,2,1,2,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,1,1,2,1,1,1,2,1,2,1,1,1,1,2,1,1,1,1,2,1,1,2,1,2,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,1,2,2,2,2,2,1,2,2,2,1,1,2,1,1,1,1,2,2,2,1,1,2,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,1,1,2,1,1,1,2,1,2,1,1,1,1,2,1,1,1,1,2,1,1,1,1,2,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,1,2,1,1,1,2,1,2,1,1,1,1,2,1,1,1,1,2,1,1,1,1,2,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,1,1,2,1,1,1,2,1,2,1,1,1,1,2,1,1,1,1,2,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,1,2,1,1,1,2,1,2,2,2,2,1,2,2,2,2,1,2,1,1,1,1,2,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2
+</data>
+ </layer>
+ <layer height="30" name="Second Layer" width="50">
+  <data encoding="csv">
+0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,0,7,7,0,0,0,0,0,0,0,0,0,
+7,0,0,0,8,0,0,0,8,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,0,0,0,0,0,
+7,0,0,0,8,0,0,0,8,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,0,0,0,0,
+0,0,0,0,8,0,0,0,8,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,0,
+7,0,0,0,8,0,0,0,8,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+7,0,0,0,8,8,8,8,8,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+7,0,0,0,8,0,0,0,8,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,8,0,0,0,8,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+7,0,0,0,8,0,0,0,8,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,8,0,0,0,8,0,0,0,0,0,0,7,7,7,7,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,
+7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,7,0,0,0,0,0,
+7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,
+7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,
+7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,7,7,
+7,0,7,7,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,7,0,
+7,7,7,7,0,0,0,0,7,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,7,7,0,0,0,0,0,0,7,0,0,7,0,0,0,0,0,0,0,7,0,0,
+0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,7,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,7,0,0,
+0,0,7,7,0,0,7,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,7,0,0,0,0,0,7,0,0,0,7,0,0,0,0,0,7,0,0,0,
+0,0,7,0,0,7,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,7,7,0,0,0,7,0,0,0,0,0,7,0,0,0,0,7,0,0,0,
+0,0,7,0,0,7,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,7,0,0,0,7,0,0,0,0,0,7,0,0,0,0,7,0,0,0,
+0,7,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,7,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,7,0,0,7,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,7,0,7,0,0,0,0,0,0,7,0,0,7,0,0,0,0,
+0,0,0,7,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,7,7,0,7,0,0,0,0,
+0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,7,0,7,0,0,0,0,
+0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,
+0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
+</data>
+ </layer>
+ <layer height="30" name="Third Layer" width="50">
+  <data encoding="csv">
+0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,12,12,12,0,12,12,12,12,12,12,0,0,0,0,0,12,12,12,0,
+0,0,12,0,0,0,0,0,0,0,12,12,0,0,0,0,12,0,0,0,0,0,0,0,12,0,0,0,12,12,12,0,0,0,12,12,0,12,12,0,0,12,0,0,12,12,0,0,0,0,
+0,12,12,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,12,0,0,0,0,0,0,12,0,0,0,12,12,12,12,12,12,0,0,0,0,0,
+0,0,0,0,0,0,0,12,12,0,12,12,12,12,12,0,0,0,0,12,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,12,0,0,0,0,0,0,0,0,12,0,0,0,0,0,
+0,12,0,0,0,12,12,0,0,0,12,11,11,11,12,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,12,0,0,0,0,12,0,12,0,12,12,0,12,0,12,0,0,0,0,0,
+12,0,0,0,12,0,0,0,0,12,12,11,11,11,12,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,12,0,0,0,0,12,12,0,0,0,0,0,0,12,0,12,0,0,0,0,
+0,0,0,12,0,0,0,0,12,0,12,11,11,11,12,0,0,0,0,0,12,0,12,0,0,0,0,0,0,0,0,12,0,12,12,0,12,0,0,0,0,0,0,0,12,12,0,0,0,0,
+12,12,12,0,0,0,0,0,0,0,12,11,11,11,12,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,12,12,0,0,0,12,0,0,0,0,0,0,0,0,0,12,0,0,0,
+12,0,0,0,0,0,0,12,0,0,12,11,11,11,12,0,0,0,0,12,0,0,0,0,0,12,0,0,0,0,0,12,0,0,0,0,0,12,0,0,0,0,0,12,12,12,12,0,0,0,
+12,0,0,0,0,0,0,12,0,0,12,11,11,11,12,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,12,0,0,0,0,12,12,12,12,12,0,0,0,
+0,0,0,0,0,0,0,0,0,0,12,11,11,11,12,0,0,0,12,0,0,0,0,0,0,0,12,0,0,0,0,12,12,12,0,0,0,0,12,0,0,0,0,0,0,12,12,0,0,0,
+0,0,0,0,0,0,12,0,0,0,12,12,12,12,12,0,0,12,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,12,0,12,0,0,0,
+0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,12,12,0,0,0,12,0,0,0,0,12,0,0,0,12,0,0,
+0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,0,0,12,0,0,12,12,0,0,0,0,12,0,0,
+12,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,0,12,12,12,12,0,12,0,0,0,0,0,0,12,0,0,
+0,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,12,12,12,12,0,0,12,0,0,
+0,0,12,0,0,0,12,12,0,12,0,12,12,0,12,0,12,12,12,0,0,12,12,0,0,0,0,0,12,12,0,12,0,0,0,0,0,0,12,0,12,0,0,0,12,12,12,12,0,0,
+0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,12,12,12,12,12,12,0,0,0,12,0,0,0,0,12,0,0,0,0,0,0,0,12,12,0,0,0,
+0,0,12,12,12,12,12,12,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,12,0,0,0,0,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,12,0,0,0,0,
+0,0,0,12,0,0,0,0,12,12,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,12,0,0,0,0,0,0,0,12,12,0,12,0,0,0,
+0,0,0,0,12,0,0,0,0,0,12,12,0,0,0,0,0,12,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,12,0,12,0,0,0,0,0,12,0,0,0,0,12,0,0,
+0,0,0,0,0,12,0,0,0,0,0,0,12,12,0,0,12,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,12,12,0,12,0,12,0,12,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,12,0,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,12,12,0,0,0,0,12,12,0,0,0,0,0,0,0,0,12,0,
+0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,12,0,12,12,0,0,0,0,0,0,0,12,0,0,0,0,12,12,0,12,0,12,0,0,0,12,0,0,0,0,0,0,0,12,0,
+0,0,0,0,0,0,0,12,0,0,0,0,0,0,12,0,0,0,0,0,12,0,12,0,0,0,0,12,0,0,0,12,12,12,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,12,
+0,0,0,0,0,0,0,12,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,12,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,12,12,
+0,0,0,0,0,0,0,12,12,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,12,0,0,
+0,0,0,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,
+0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
+</data>
+ </layer>
+ <layer height="30" name="Fourth Layer" width="50">
+  <data encoding="csv">
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,16,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,16,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,16,16,0,16,16,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,16,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,16,0,16,16,16,0,0,0,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,16,16,0,16,0,0,0,0,0,16,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,16,16,0,0,16,16,16,16,16,16,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,16,0,0,16,16,16,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,16,16,16,16,16,0,0,0,0,0,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,16,16,16,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,16,16,0,16,0,0,0,0,16,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,16,0,0,0,16,0,0,0,0,0,16,16,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,16,0,0,16,16,16,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,16,16,16,16,0,0,16,16,16,16,16,0,16,16,16,16,0,0,15,15,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,16,0,16,16,0,16,16,16,16,16,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,15,15,0,0,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,15,0,0,15,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
+</data>
+ </layer>
+ <objectgroup height="30" name="Object_Layer" width="50">
+  <properties>
+   <property name="Objectgroup property" value="Objectgroup value"/>
+  </properties>
+  <object height="131" name="Touching H" type="mytype1" width="154" x="186" y="187"/>
+  <object height="68" name="Touching P" type="mytype2" width="82" x="599" y="159">
+   <properties>
+    <property name="object property" value="object value"/>
+   </properties>
+  </object>
+  <object name="Touching L" x="579" y="352"/>
+  <object name="Touching !" x="814" y="207"/>
+  <object name="Upper Left" x="0" y="0"/>
+  <object name="Upper Right" x="1600" y="0"/>
+  <object name="Lower Right" x="1600" y="960"/>
+  <object name="Lower Left" x="0" y="960"/>
+  <object gid="6" name="tile object" type="tile object type" x="533" y="272"/>
+ </objectgroup>
+</map>
\ No newline at end of file
diff --git a/tests/gdx-tests-android/assets/data/tiledmap/tilemap gzip.tmx b/tests/gdx-tests-android/assets/data/tiledmap/tilemap gzip.tmx
new file mode 100644
index 0000000..922f507
--- /dev/null
+++ b/tests/gdx-tests-android/assets/data/tiledmap/tilemap gzip.tmx	
@@ -0,0 +1,57 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?><map height="30" orientation="orthogonal" tileheight="32" tilewidth="32" version="1.0" width="50">
+ <properties>
+  <property name="blended tiles" value="1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,5,6,7,8,9,10,11,12,13,14,15,16"/>
+ </properties>
+ <tileset firstgid="1" name="tileset" tileheight="32" tilewidth="32">
+  <image source="tileset.png"/>
+ </tileset>
+ <tileset firstgid="5" name="tileset2" tileheight="32" tilewidth="32">
+  <image source="tileset2.png"/>
+ </tileset>
+ <tileset firstgid="9" name="tileset3" tileheight="32" tilewidth="32">
+  <image source="tileset3.png"/>
+ </tileset>
+ <tileset firstgid="13" name="tileset4" tileheight="32" tilewidth="32">
+  <image source="tileset4.png"/>
+ </tileset>
+ <layer height="30" name="First Layer" width="50">
+  <properties>
+   <property name="Layer Property" value="Layer Value"/>
+  </properties>
+  <data compression="gzip" encoding="base64">
+   H4sIAAAAAAAAC+2TUQ7AIAhD1fsfevsmgpIMVkg/SI0hSHmyxhjzjVVc5TkjIrx08LDjIX1Jz0upMTd5NzWjeJzetHK1mVh3f/D4wgd5+Hlou3D6913344ZRhf3oxiPag5eHtTMevxk8oiOLR1UvUfPJVoQeyIM8UBWhB/IgD1RF6IE8yANVEXogj348HkfuS4NwFwAA
+  </data>
+ </layer>
+ <layer height="30" name="Second Layer" width="50">
+  <data compression="gzip" encoding="base64">
+   H4sIAAAAAAAAC9VXQQ4EIQjj5v7/xXvdsCoFimKTSWbGClYUUURkyHkMsl+2vYhvhv9bGjSG/OvyaNS8j/G965vl7fpbsXtRB2Kvg47IvukSj+x+n+nQD9o3wqvKVyfjUZnzb6wrxjlyIh4esGLk1YHMZWRc2XzVEfqMX3Few82asAJInF5C1/h49zdSI7PuCKgdrz89/p0OWbSh8NwpxuLd4u7+W98IZuNmnTW79WNxvPDme1Qz8r9yvn7bMmPuomPWntURua8xOJrHyIkeW2j+9PqvzmMrLqtmQ2tm9AyI+s/Y2NmacSwfLP/VdQ47Frpvh1qN4f+2ji9OrdRgcBcAAA==
+  </data>
+ </layer>
+ <layer height="30" name="Third Layer" width="50">
+  <data compression="gzip" encoding="base64">
+   H4sIAAAAAAAAC92WyW7DMAxEda///3tzKAwYCpc3Q7mHEgiCcBkuGlFZ61eupQuNyfyux2f/vdu6WFpThkniaP69nwiD9FbZKp+oXkWX2ZTzqaQ7c6VG4kfinTnsup/HR+UTsV/Bd6QjeBk+7YOefZWni5nOiPZBcu2+So3VDEi8wiu3JveO0XtD+lDvr6N33g2lj+k+7LBO7N8bZ9KHyuluvhP+ZfOYvhvUV9kHTj6lD7pvyRmp/y/elu6MCfccfpyQiKOZrsLIMP9KHD6Se5n1ttb3vCId4UGGkflVddEcjkQ7rdv76s7t6iQ5Vewpbyp/1X4Km8Qq5+D0smPQGJJv91NyuL3cNnVXU59oh9B4J/dJPitvvIpN7E8fkrOrtdqzKq7i0/FYeaOmtU7uPBV3F0c4Lv8mb0IWM7mzEyz3XXwTy40/0cObeP9JPi2A8mVwFwAA
+  </data>
+ </layer>
+ <layer height="30" name="Fourth Layer" width="50">
+  <data compression="gzip" encoding="base64">
+   H4sIAAAAAAAAC+VWWwqAMAzzBnr/04qgMEq0D+eSYWC4j06StU23LO+wgcXC1nx78GBp+vJOWVrsPnPuKab9joDVEuEY1T263mxu7mJQvBIsL9Q/lreylnafqTElVD1MYY60eMNHQQfiX+HF1OL5VNRbmUD+cxen3O9Rf6rOvdGzLzI7nuLXc6H/KwC9vTLerKLjwGrWTOjFm5WP3nfO0OFpqGhU6w+0j0DhrXIA8c7mha3Dq7EMmFo8rpm8MH2rZ+wMOiLxjH6vzg+vzmbRcZ1Vebuo8PgTdmTO18JwFwAA
+  </data>
+ </layer>
+ <objectgroup height="30" name="Object_Layer" width="50">
+  <properties>
+   <property name="Objectgroup property" value="Objectgroup value"/>
+  </properties>
+  <object height="131" name="Touching H" type="mytype1" width="154" x="186" y="187"/>
+  <object height="68" name="Touching P" type="mytype2" width="82" x="599" y="159">
+   <properties>
+    <property name="object property" value="object value"/>
+   </properties>
+  </object>
+  <object name="Touching L" x="579" y="352"/>
+  <object name="Touching !" x="814" y="207"/>
+  <object name="Upper Left" x="0" y="0"/>
+  <object name="Upper Right" x="1600" y="0"/>
+  <object name="Lower Right" x="1600" y="960"/>
+  <object name="Lower Left" x="0" y="960"/>
+ </objectgroup>
+</map>
\ No newline at end of file
diff --git a/tests/gdx-tests-android/assets/data/tiledmap/tilemap uncompressed.tmx b/tests/gdx-tests-android/assets/data/tiledmap/tilemap uncompressed.tmx
new file mode 100644
index 0000000..53bf310
--- /dev/null
+++ b/tests/gdx-tests-android/assets/data/tiledmap/tilemap uncompressed.tmx	
@@ -0,0 +1,57 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?><map height="30" orientation="orthogonal" tileheight="32" tilewidth="32" version="1.0" width="50">
+ <properties>
+  <property name="blended tiles" value="1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,5,6,7,8,9,10,11,12,13,14,15,16"/>
+ </properties>
+ <tileset firstgid="1" name="tileset" tileheight="32" tilewidth="32">
+  <image source="tileset.png"/>
+ </tileset>
+ <tileset firstgid="5" name="tileset2" tileheight="32" tilewidth="32">
+  <image source="tileset2.png"/>
+ </tileset>
+ <tileset firstgid="9" name="tileset3" tileheight="32" tilewidth="32">
+  <image source="tileset3.png"/>
+ </tileset>
+ <tileset firstgid="13" name="tileset4" tileheight="32" tilewidth="32">
+  <image source="tileset4.png"/>
+ </tileset>
+ <layer height="30" name="First Layer" width="50">
+  <properties>
+   <property name="Layer Property" value="Layer Value"/>
+  </properties>
+  <data encoding="base64">
+   AgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAABAAAAAgAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAIAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAQAAAAIAAAABAAAAAQAAAAIAAAABAAAAAQAAAAEAAAACAAAAAQAAAAIAAAACAAAAAgAAAAIAAAABAAAAAgAAAAEAAAABAAAAAQAAAAEAAAACAAAAAgAAAAIAAAABAAAAAQAAAAIAAAABAAAAAQAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAACAAAAAQAAAAEAAAABAAAAAgAAAAEAAAABAAAAAQAAAAIAAAABAAAAAgAAAAEAAAABAAAAAQAAAAEAAAACAAAAAQAAAAEAAAABAAAAAQAAAAIAAAABAAAAAQAAAAIAAAABAAAAAgAAAAEAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAEAAAACAAAAAQAAAAEAAAACAAAAAQAAAAEAAAABAAAAAgAAAAEAAAACAAAAAQAAAAEAAAABAAAAAQAAAAIAAAABAAAAAQAAAAEAAAABAAAAAgAAAAEAAAABAAAAAgAAAAEAAAACAAAAAQAAAAEAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAgAAAAEAAAABAAAAAQAAAAIAAAABAAAAAQAAAAEAAAACAAAAAQAAAAIAAAABAAAAAQAAAAEAAAABAAAAAgAAAAEAAAABAAAAAQAAAAEAAAACAAAAAQAAAAEAAAACAAAAAQAAAAIAAAABAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAABAAAAAgAAAAEAAAABAAAAAgAAAAIAAAACAAAAAgAAAAIAAAABAAAAAgAAAAIAAAACAAAAAQAAAAEAAAACAAAAAQAAAAEAAAABAAAAAQAAAAIAAAACAAAAAgAAAAEAAAABAAAAAgAAAAEAAAABAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAIAAAABAAAAAQAAAAEAAAACAAAAAQAAAAEAAAABAAAAAgAAAAEAAAACAAAAAQAAAAEAAAABAAAAAQAAAAIAAAABAAAAAQAAAAEAAAABAAAAAgAAAAEAAAABAAAAAQAAAAEAAAACAAAAAQAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAQAAAAIAAAABAAAAAQAAAAIAAAABAAAAAQAAAAEAAAACAAAAAQAAAAIAAAABAAAAAQAAAAEAAAABAAAAAgAAAAEAAAABAAAAAQAAAAEAAAACAAAAAQAAAAEAAAABAAAAAQAAAAIAAAABAAAAAQAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAACAAAAAQAAAAEAAAABAAAAAgAAAAEAAAABAAAAAQAAAAIAAAABAAAAAgAAAAEAAAABAAAAAQAAAAEAAAACAAAAAQAAAAEAAAABAAAAAQAAAAIAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAEAAAACAAAAAQAAAAEAAAACAAAAAQAAAAEAAAABAAAAAgAAAAEAAAACAAAAAgAAAAIAAAACAAAAAQAAAAIAAAACAAAAAgAAAAIAAAABAAAAAgAAAAEAAAABAAAAAQAAAAEAAAACAAAAAQAAAAEAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAgAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAABAAAAAgAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAgAAAAEAAAACAAAA
+  </data>
+ </layer>
+ <layer height="30" name="Second Layer" width="50">
+  <data encoding="base64">
+   
+  </data>
+ </layer>
+ <layer height="30" name="Third Layer" width="50">
+  <data encoding="base64">
+   
+  </data>
+ </layer>
+ <layer height="30" name="Fourth Layer" width="50">
+  <data encoding="base64">

+  </data>
+ </layer>
+ <objectgroup height="30" name="Object_Layer" width="50">
+  <properties>
+   <property name="Objectgroup property" value="Objectgroup value"/>
+  </properties>
+  <object height="131" name="Touching H" type="mytype1" width="154" x="186" y="187"/>
+  <object height="68" name="Touching P" type="mytype2" width="82" x="599" y="159">
+   <properties>
+    <property name="object property" value="object value"/>
+   </properties>
+  </object>
+  <object name="Touching L" x="579" y="352"/>
+  <object name="Touching !" x="814" y="207"/>
+  <object name="Upper Left" x="0" y="0"/>
+  <object name="Upper Right" x="1600" y="0"/>
+  <object name="Lower Right" x="1600" y="960"/>
+  <object name="Lower Left" x="0" y="960"/>
+ </objectgroup>
+</map>
\ No newline at end of file
diff --git a/tests/gdx-tests-android/assets/data/tiledmap/tilemap xml.tmx b/tests/gdx-tests-android/assets/data/tiledmap/tilemap xml.tmx
new file mode 100644
index 0000000..c01be43
--- /dev/null
+++ b/tests/gdx-tests-android/assets/data/tiledmap/tilemap xml.tmx	
@@ -0,0 +1,57 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?><map height="30" orientation="orthogonal" tileheight="32" tilewidth="32" version="1.0" width="50">
+ <properties>
+  <property name="blended tiles" value="1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,5,6,7,8,9,10,11,12,13,14,15,16"/>
+ </properties>
+ <tileset firstgid="1" name="tileset" tileheight="32" tilewidth="32">
+  <image height="64" source="tileset.png" width="64"/>
+ </tileset>
+ <tileset firstgid="5" name="tileset2" tileheight="32" tilewidth="32">
+  <image height="64" source="tileset2.png" width="64"/>
+ </tileset>
+ <tileset firstgid="9" name="tileset3" tileheight="32" tilewidth="32">
+  <image height="64" source="tileset3.png" width="64"/>
+ </tileset>
+ <tileset firstgid="13" name="tileset4" tileheight="32" tilewidth="32">
+  <image height="64" source="tileset4.png" width="64"/>
+ </tileset>
+ <layer height="30" name="First Layer" width="50">
+  <properties>
+   <property name="Layer Property" value="Layer Value"/>
+  </properties>
+  <data compression="zlib" encoding="base64">
+   eJztk1EOwCAIQ9X7H3r7JoKSDFZIP0iNIUh5ssYY841VXOU5IyK8dPCw4yF9Sc9LqTE3eTc1o3ic3rRytZlYd3/w+MIHefh5aLtw+vdd9+OGUYX96MYj2oOXh7UzHr8ZPKIji0dVL1HzyVaEHsiDPFAVoQfyIA9UReiBPMgDVRF6II9+PB6c+Ahs
+  </data>
+ </layer>
+ <layer height="30" name="Second Layer" width="50">
+  <data compression="zlib" encoding="base64">
+   eJzVV0EOBCEI4+b+/8V73bAqBYpik0lmxgpWFFFEZMh5DLJftr2Ib4b/Wxo0hvzr8mjUvI/xveub5e36W7F7UQdir4OOyL7pEo/sfp/p0A/aN8Krylcn41GZ82+sK8Y5ciIeHrBi5NWBzGVkXNl81RH6jF9xXsPNmrACSJxeQtf4ePc3UiOz7gioHa8/Pf6dDlm0ofDcKcbi3eLu/lvfCGbjZp01u/Vjcbzw5ntUM/K/cr5+2zJj7qJj1p7VEbmvMTiax8iJHlto/vT6r85jKy6rZkNrZvQMiPrP2NjZmnEsHyz/1XUOOxa6b4dajeH/to4vnrEFuA==
+  </data>
+ </layer>
+ <layer height="30" name="Third Layer" width="50">
+  <data compression="zlib" encoding="base64">
+   eJzdlsluwzAMRHWv//97cygMGAqXN0O5hxIIgnAZLhpRWetXrqULjcn8rsdn/73bulhaU4ZJ4mj+vZ8Ig/RW2SqfqF5Fl9mU86mkO3OlRuJH4p057Lqfx0flE7FfwXekI3gZPu2Dnn2Vp4uZzoj2QXLtvkqN1QxIvMIrtyb3jtF7Q/pQ76+jd94NpY/pPuywTuzfG2fSh8rpbr4T/mXzmL4b1FfZB04+pQ+6b8kZqf8v3pbujAn3HH6ckIijma7CyDD/Shw+knuZ9bbW97wiHeFBhpH5VXXRHI5EO63b++rO7eokOVXsKW8qf9V+CpvEKufg9LJj0BiSb/dTcri93DZ1V1OfaIfQeCf3ST4rb7yKTexPH5Kzq7Xasyqu4tPxWHmjprVO7jwVdxdHOC7/Jm9CFjO5sxMs9118E8uNP9HDm3j/ST48vhBs
+  </data>
+ </layer>
+ <layer height="30" name="Fourth Layer" width="50">
+  <data compression="zlib" encoding="base64">
+   eJzlVlsKgDAM8wZ6/9OKoDBKtA/nkmFguI9OkrVNtyzvsIHFwtZ8e/BgafryTlla7D5z7imm/Y6A1RLhGNU9ut5sbu5iULwSLC/UP5a3spZ2n6kxJVQ9TGGOtHjDR0EH4l/hxdTi+VTUW5lA/nMXp9zvUX+qzr3Rsy8yO57i13Oh/ysAvb0y3qyi48Bq1kzoxZuVj953ztDhaahoVOsPtI9A4a1yAPHO5oWtw6uxDJhaPK6ZvDB9q2fsDDoi8Yx+r84Pr85m0XGdVXm7qPD4E3bB/Qp9
+  </data>
+ </layer>
+ <objectgroup height="30" name="Object_Layer" width="50">
+  <properties>
+   <property name="Objectgroup property" value="Objectgroup value"/>
+  </properties>
+  <object height="131" name="Touching H" type="mytype1" width="154" x="186" y="187"/>
+  <object height="68" name="Touching P" type="mytype2" width="82" x="599" y="159">
+   <properties>
+    <property name="object property" value="object value"/>
+   </properties>
+  </object>
+  <object name="Touching L" x="579" y="352"/>
+  <object name="Touching !" x="814" y="207"/>
+  <object name="Upper Left" x="0" y="0"/>
+  <object name="Upper Right" x="1600" y="0"/>
+  <object name="Lower Right" x="1600" y="960"/>
+  <object name="Lower Left" x="0" y="960"/>
+ </objectgroup>
+</map>
\ No newline at end of file
diff --git a/tests/gdx-tests-android/assets/data/tiledmap/tilemap zlib.tmx b/tests/gdx-tests-android/assets/data/tiledmap/tilemap zlib.tmx
new file mode 100644
index 0000000..e46535c
--- /dev/null
+++ b/tests/gdx-tests-android/assets/data/tiledmap/tilemap zlib.tmx	
@@ -0,0 +1,57 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?><map height="30" orientation="orthogonal" tileheight="32" tilewidth="32" version="1.0" width="50">
+ <properties>
+  <property name="blended tiles" value="1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,5,6,7,8,9,10,11,12,13,14,15,16"/>
+ </properties>
+ <tileset firstgid="1" name="tileset" tileheight="32" tilewidth="32">
+  <image source="tileset.png"/>
+ </tileset>
+ <tileset firstgid="5" name="tileset2" tileheight="32" tilewidth="32">
+  <image source="tileset2.png"/>
+ </tileset>
+ <tileset firstgid="9" name="tileset3" tileheight="32" tilewidth="32">
+  <image source="tileset3.png"/>
+ </tileset>
+ <tileset firstgid="13" name="tileset4" tileheight="32" tilewidth="32">
+  <image source="tileset4.png"/>
+ </tileset>
+ <layer height="30" name="First Layer" width="50">
+  <properties>
+   <property name="Layer Property" value="Layer Value"/>
+  </properties>
+  <data compression="zlib" encoding="base64">
+   eJztk1EOwCAIQ9X7H3r7JoKSDFZIP0iNIUh5ssYY841VXOU5IyK8dPCw4yF9Sc9LqTE3eTc1o3ic3rRytZlYd3/w+MIHefh5aLtw+vdd9+OGUYX96MYj2oOXh7UzHr8ZPKIji0dVL1HzyVaEHsiDPFAVoQfyIA9UReiBPMgDVRF6II9+PB6c+Ahs
+  </data>
+ </layer>
+ <layer height="30" name="Second Layer" width="50">
+  <data compression="zlib" encoding="base64">
+   eJzVV0EOBCEI4+b+/8V73bAqBYpik0lmxgpWFFFEZMh5DLJftr2Ib4b/Wxo0hvzr8mjUvI/xveub5e36W7F7UQdir4OOyL7pEo/sfp/p0A/aN8Krylcn41GZ82+sK8Y5ciIeHrBi5NWBzGVkXNl81RH6jF9xXsPNmrACSJxeQtf4ePc3UiOz7gioHa8/Pf6dDlm0ofDcKcbi3eLu/lvfCGbjZp01u/Vjcbzw5ntUM/K/cr5+2zJj7qJj1p7VEbmvMTiax8iJHlto/vT6r85jKy6rZkNrZvQMiPrP2NjZmnEsHyz/1XUOOxa6b4dajeH/to4vnrEFuA==
+  </data>
+ </layer>
+ <layer height="30" name="Third Layer" width="50">
+  <data compression="zlib" encoding="base64">
+   eJzdlsluwzAMRHWv//97cygMGAqXN0O5hxIIgnAZLhpRWetXrqULjcn8rsdn/73bulhaU4ZJ4mj+vZ8Ig/RW2SqfqF5Fl9mU86mkO3OlRuJH4p057Lqfx0flE7FfwXekI3gZPu2Dnn2Vp4uZzoj2QXLtvkqN1QxIvMIrtyb3jtF7Q/pQ76+jd94NpY/pPuywTuzfG2fSh8rpbr4T/mXzmL4b1FfZB04+pQ+6b8kZqf8v3pbujAn3HH6ckIijma7CyDD/Shw+knuZ9bbW97wiHeFBhpH5VXXRHI5EO63b++rO7eokOVXsKW8qf9V+CpvEKufg9LJj0BiSb/dTcri93DZ1V1OfaIfQeCf3ST4rb7yKTexPH5Kzq7Xasyqu4tPxWHmjprVO7jwVdxdHOC7/Jm9CFjO5sxMs9118E8uNP9HDm3j/ST48vhBs
+  </data>
+ </layer>
+ <layer height="30" name="Fourth Layer" width="50">
+  <data compression="zlib" encoding="base64">
+   eJzlVlsKgDAM8wZ6/9OKoDBKtA/nkmFguI9OkrVNtyzvsIHFwtZ8e/BgafryTlla7D5z7imm/Y6A1RLhGNU9ut5sbu5iULwSLC/UP5a3spZ2n6kxJVQ9TGGOtHjDR0EH4l/hxdTi+VTUW5lA/nMXp9zvUX+qzr3Rsy8yO57i13Oh/ysAvb0y3qyi48Bq1kzoxZuVj953ztDhaahoVOsPtI9A4a1yAPHO5oWtw6uxDJhaPK6ZvDB9q2fsDDoi8Yx+r84Pr85m0XGdVXm7qPD4E3bB/Qp9
+  </data>
+ </layer>
+ <objectgroup height="30" name="Object_Layer" width="50">
+  <properties>
+   <property name="Objectgroup property" value="Objectgroup value"/>
+  </properties>
+  <object height="131" name="Touching H" type="mytype1" width="154" x="186" y="187"/>
+  <object height="68" name="Touching P" type="mytype2" width="82" x="599" y="159">
+   <properties>
+    <property name="object property" value="object value"/>
+   </properties>
+  </object>
+  <object name="Touching L" x="579" y="352"/>
+  <object name="Touching !" x="814" y="207"/>
+  <object name="Upper Left" x="0" y="0"/>
+  <object name="Upper Right" x="1600" y="0"/>
+  <object name="Lower Right" x="1600" y="960"/>
+  <object name="Lower Left" x="0" y="960"/>
+ </objectgroup>
+</map>
\ No newline at end of file
diff --git a/tests/gdx-tests-android/assets/data/tiledmap/tileset packfile b/tests/gdx-tests-android/assets/data/tiledmap/tileset packfile
new file mode 100644
index 0000000..de8eeae
--- /dev/null
+++ b/tests/gdx-tests-android/assets/data/tiledmap/tileset packfile	
@@ -0,0 +1,33 @@
+
+tileset1.png
+format: RGBA8888
+filter: Nearest,Nearest
+repeat: none
+tileset
+  rotate: false
+  xy: 0, 0
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 3
+tileset
+  rotate: false
+  xy: 0, 34
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 2
+tileset
+  rotate: false
+  xy: 0, 68
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 1
+tileset
+  rotate: false
+  xy: 0, 102
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 0
diff --git a/tests/gdx-tests-android/assets/data/tiledmap/tileset1.png b/tests/gdx-tests-android/assets/data/tiledmap/tileset1.png
new file mode 100644
index 0000000..e087a62
Binary files /dev/null and b/tests/gdx-tests-android/assets/data/tiledmap/tileset1.png differ
diff --git a/tests/gdx-tests-android/assets/data/tiledmap/tileset2 packfile b/tests/gdx-tests-android/assets/data/tiledmap/tileset2 packfile
new file mode 100644
index 0000000..708fbdc
--- /dev/null
+++ b/tests/gdx-tests-android/assets/data/tiledmap/tileset2 packfile	
@@ -0,0 +1,33 @@
+
+tileset21.png
+format: RGBA8888
+filter: Nearest,Nearest
+repeat: none
+tileset2
+  rotate: false
+  xy: 0, 0
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 3
+tileset2
+  rotate: false
+  xy: 0, 34
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 2
+tileset2
+  rotate: false
+  xy: 0, 68
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 1
+tileset2
+  rotate: false
+  xy: 0, 102
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 0
diff --git a/tests/gdx-tests-android/assets/data/tiledmap/tileset21.png b/tests/gdx-tests-android/assets/data/tiledmap/tileset21.png
new file mode 100644
index 0000000..3b2481b
Binary files /dev/null and b/tests/gdx-tests-android/assets/data/tiledmap/tileset21.png differ
diff --git a/tests/gdx-tests-android/assets/data/tiledmap/tileset3 packfile b/tests/gdx-tests-android/assets/data/tiledmap/tileset3 packfile
new file mode 100644
index 0000000..483f7fd
--- /dev/null
+++ b/tests/gdx-tests-android/assets/data/tiledmap/tileset3 packfile	
@@ -0,0 +1,33 @@
+
+tileset31.png
+format: RGBA8888
+filter: Nearest,Nearest
+repeat: none
+tileset3
+  rotate: false
+  xy: 0, 0
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 3
+tileset3
+  rotate: false
+  xy: 0, 34
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 2
+tileset3
+  rotate: false
+  xy: 0, 68
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 1
+tileset3
+  rotate: false
+  xy: 0, 102
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 0
diff --git a/tests/gdx-tests-android/assets/data/tiledmap/tileset31.png b/tests/gdx-tests-android/assets/data/tiledmap/tileset31.png
new file mode 100644
index 0000000..1854f08
Binary files /dev/null and b/tests/gdx-tests-android/assets/data/tiledmap/tileset31.png differ
diff --git a/tests/gdx-tests-android/assets/data/tiledmap/tileset4 packfile b/tests/gdx-tests-android/assets/data/tiledmap/tileset4 packfile
new file mode 100644
index 0000000..7dc7f0c
--- /dev/null
+++ b/tests/gdx-tests-android/assets/data/tiledmap/tileset4 packfile	
@@ -0,0 +1,33 @@
+
+tileset41.png
+format: RGBA8888
+filter: Nearest,Nearest
+repeat: none
+tileset4
+  rotate: false
+  xy: 0, 0
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 3
+tileset4
+  rotate: false
+  xy: 0, 34
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 2
+tileset4
+  rotate: false
+  xy: 0, 68
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 1
+tileset4
+  rotate: false
+  xy: 0, 102
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 0
diff --git a/tests/gdx-tests-android/assets/data/tiledmap/tileset41.png b/tests/gdx-tests-android/assets/data/tiledmap/tileset41.png
new file mode 100644
index 0000000..8d8b63e
Binary files /dev/null and b/tests/gdx-tests-android/assets/data/tiledmap/tileset41.png differ
diff --git a/tests/gdx-tests-android/assets/data/tiledmap/tmw-desert-spacing packfile b/tests/gdx-tests-android/assets/data/tiledmap/tmw-desert-spacing packfile
new file mode 100644
index 0000000..565c2c9
--- /dev/null
+++ b/tests/gdx-tests-android/assets/data/tiledmap/tmw-desert-spacing packfile	
@@ -0,0 +1,341 @@
+
+tmw-desert-spacing1.png
+format: RGBA8888
+filter: Nearest,Nearest
+repeat: none
+tmw-desert-spacing
+  rotate: false
+  xy: 2, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 47
+tmw-desert-spacing
+  rotate: false
+  xy: 2, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 46
+tmw-desert-spacing
+  rotate: false
+  xy: 2, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 45
+tmw-desert-spacing
+  rotate: false
+  xy: 36, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 44
+tmw-desert-spacing
+  rotate: false
+  xy: 36, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 43
+tmw-desert-spacing
+  rotate: false
+  xy: 36, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 42
+tmw-desert-spacing
+  rotate: false
+  xy: 70, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 41
+tmw-desert-spacing
+  rotate: false
+  xy: 70, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 40
+tmw-desert-spacing
+  rotate: false
+  xy: 70, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 39
+tmw-desert-spacing
+  rotate: false
+  xy: 104, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 38
+tmw-desert-spacing
+  rotate: false
+  xy: 104, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 37
+tmw-desert-spacing
+  rotate: false
+  xy: 104, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 36
+tmw-desert-spacing
+  rotate: false
+  xy: 138, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 35
+tmw-desert-spacing
+  rotate: false
+  xy: 138, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 34
+tmw-desert-spacing
+  rotate: false
+  xy: 138, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 33
+tmw-desert-spacing
+  rotate: false
+  xy: 172, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 32
+tmw-desert-spacing
+  rotate: false
+  xy: 172, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 31
+tmw-desert-spacing
+  rotate: false
+  xy: 172, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 30
+tmw-desert-spacing
+  rotate: false
+  xy: 206, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 29
+tmw-desert-spacing
+  rotate: false
+  xy: 206, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 28
+tmw-desert-spacing
+  rotate: false
+  xy: 206, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 27
+tmw-desert-spacing
+  rotate: false
+  xy: 240, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 26
+tmw-desert-spacing
+  rotate: false
+  xy: 240, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 25
+tmw-desert-spacing
+  rotate: false
+  xy: 240, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 24
+tmw-desert-spacing
+  rotate: false
+  xy: 274, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 23
+tmw-desert-spacing
+  rotate: false
+  xy: 274, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 22
+tmw-desert-spacing
+  rotate: false
+  xy: 274, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 21
+tmw-desert-spacing
+  rotate: false
+  xy: 308, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 20
+tmw-desert-spacing
+  rotate: false
+  xy: 308, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 19
+tmw-desert-spacing
+  rotate: false
+  xy: 308, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 18
+tmw-desert-spacing
+  rotate: false
+  xy: 342, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 17
+tmw-desert-spacing
+  rotate: false
+  xy: 342, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 16
+tmw-desert-spacing
+  rotate: false
+  xy: 342, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 15
+tmw-desert-spacing
+  rotate: false
+  xy: 376, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 14
+tmw-desert-spacing
+  rotate: false
+  xy: 376, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 13
+tmw-desert-spacing
+  rotate: false
+  xy: 376, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 12
+tmw-desert-spacing
+  rotate: false
+  xy: 410, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 11
+tmw-desert-spacing
+  rotate: false
+  xy: 410, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 10
+tmw-desert-spacing
+  rotate: false
+  xy: 410, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 9
+tmw-desert-spacing
+  rotate: false
+  xy: 444, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 8
+tmw-desert-spacing
+  rotate: false
+  xy: 444, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 7
+tmw-desert-spacing
+  rotate: false
+  xy: 444, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 6
+tmw-desert-spacing
+  rotate: false
+  xy: 478, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 5
+tmw-desert-spacing
+  rotate: false
+  xy: 478, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 4
+tmw-desert-spacing
+  rotate: false
+  xy: 478, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 3
+tmw-desert-spacing
+  rotate: false
+  xy: 512, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 2
+tmw-desert-spacing
+  rotate: false
+  xy: 512, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 1
+tmw-desert-spacing
+  rotate: false
+  xy: 512, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 0
diff --git a/tests/gdx-tests-android/assets/data/tiledmap/tmw-desert-spacing1.png b/tests/gdx-tests-android/assets/data/tiledmap/tmw-desert-spacing1.png
new file mode 100644
index 0000000..25c78a1
Binary files /dev/null and b/tests/gdx-tests-android/assets/data/tiledmap/tmw-desert-spacing1.png differ
diff --git a/tests/gdx-tests-android/libs/armeabi-v7a/libandroidgl20.so b/tests/gdx-tests-android/libs/armeabi-v7a/libandroidgl20.so
new file mode 100644
index 0000000..7a7cd7f
Binary files /dev/null and b/tests/gdx-tests-android/libs/armeabi-v7a/libandroidgl20.so differ
diff --git a/tests/gdx-tests-android/libs/armeabi-v7a/libgdx-audio.so b/tests/gdx-tests-android/libs/armeabi-v7a/libgdx-audio.so
new file mode 100644
index 0000000..5cc1530
Binary files /dev/null and b/tests/gdx-tests-android/libs/armeabi-v7a/libgdx-audio.so differ
diff --git a/tests/gdx-tests-android/libs/armeabi-v7a/libgdx-bullet.so b/tests/gdx-tests-android/libs/armeabi-v7a/libgdx-bullet.so
new file mode 100644
index 0000000..9b29f0e
Binary files /dev/null and b/tests/gdx-tests-android/libs/armeabi-v7a/libgdx-bullet.so differ
diff --git a/tests/gdx-tests-android/libs/armeabi-v7a/libgdx-freetype.so b/tests/gdx-tests-android/libs/armeabi-v7a/libgdx-freetype.so
new file mode 100644
index 0000000..93b065f
Binary files /dev/null and b/tests/gdx-tests-android/libs/armeabi-v7a/libgdx-freetype.so differ
diff --git a/tests/gdx-tests-android/libs/armeabi-v7a/libgdx-image.so b/tests/gdx-tests-android/libs/armeabi-v7a/libgdx-image.so
new file mode 100644
index 0000000..3e551ee
Binary files /dev/null and b/tests/gdx-tests-android/libs/armeabi-v7a/libgdx-image.so differ
diff --git a/tests/gdx-tests-android/libs/armeabi-v7a/libgdx-stb-truetype.so b/tests/gdx-tests-android/libs/armeabi-v7a/libgdx-stb-truetype.so
new file mode 100644
index 0000000..89fc918
Binary files /dev/null and b/tests/gdx-tests-android/libs/armeabi-v7a/libgdx-stb-truetype.so differ
diff --git a/tests/gdx-tests-android/libs/armeabi-v7a/libgdx.so b/tests/gdx-tests-android/libs/armeabi-v7a/libgdx.so
new file mode 100644
index 0000000..8d31a3e
Binary files /dev/null and b/tests/gdx-tests-android/libs/armeabi-v7a/libgdx.so differ
diff --git a/tests/gdx-tests-android/libs/armeabi/libandroidgl20.so b/tests/gdx-tests-android/libs/armeabi/libandroidgl20.so
new file mode 100644
index 0000000..7a7cd7f
Binary files /dev/null and b/tests/gdx-tests-android/libs/armeabi/libandroidgl20.so differ
diff --git a/tests/gdx-tests-android/libs/armeabi/libgdx-audio.so b/tests/gdx-tests-android/libs/armeabi/libgdx-audio.so
new file mode 100644
index 0000000..5cf4b11
Binary files /dev/null and b/tests/gdx-tests-android/libs/armeabi/libgdx-audio.so differ
diff --git a/tests/gdx-tests-android/libs/armeabi/libgdx-bullet.so b/tests/gdx-tests-android/libs/armeabi/libgdx-bullet.so
new file mode 100644
index 0000000..b388e1b
Binary files /dev/null and b/tests/gdx-tests-android/libs/armeabi/libgdx-bullet.so differ
diff --git a/tests/gdx-tests-android/libs/armeabi/libgdx-freetype.so b/tests/gdx-tests-android/libs/armeabi/libgdx-freetype.so
new file mode 100644
index 0000000..04d1c93
Binary files /dev/null and b/tests/gdx-tests-android/libs/armeabi/libgdx-freetype.so differ
diff --git a/tests/gdx-tests-android/libs/armeabi/libgdx-image.so b/tests/gdx-tests-android/libs/armeabi/libgdx-image.so
new file mode 100644
index 0000000..27c680c
Binary files /dev/null and b/tests/gdx-tests-android/libs/armeabi/libgdx-image.so differ
diff --git a/tests/gdx-tests-android/libs/armeabi/libgdx-stb-truetype.so b/tests/gdx-tests-android/libs/armeabi/libgdx-stb-truetype.so
new file mode 100644
index 0000000..9ed3ca8
Binary files /dev/null and b/tests/gdx-tests-android/libs/armeabi/libgdx-stb-truetype.so differ
diff --git a/tests/gdx-tests-android/libs/armeabi/libgdx.so b/tests/gdx-tests-android/libs/armeabi/libgdx.so
new file mode 100644
index 0000000..36f294f
Binary files /dev/null and b/tests/gdx-tests-android/libs/armeabi/libgdx.so differ
diff --git a/tests/gdx-tests-android/src/com/badlogic/gdx/tests/android/LiveWallpaper.java b/tests/gdx-tests-android/src/com/badlogic/gdx/tests/android/LiveWallpaper.java
index d64ab56..4a51bb9 100755
--- a/tests/gdx-tests-android/src/com/badlogic/gdx/tests/android/LiveWallpaper.java
+++ b/tests/gdx-tests-android/src/com/badlogic/gdx/tests/android/LiveWallpaper.java
@@ -15,33 +15,47 @@
  ******************************************************************************/
 package com.badlogic.gdx.tests.android;
 
+import android.util.Log;
+
 import com.badlogic.gdx.ApplicationAdapter;
 import com.badlogic.gdx.ApplicationListener;
 import com.badlogic.gdx.Gdx;
+import com.badlogic.gdx.android.AndroidWallpaperListener;
 import com.badlogic.gdx.backends.android.AndroidApplicationConfiguration;
 import com.badlogic.gdx.backends.android.AndroidLiveWallpaperService;
 import com.badlogic.gdx.graphics.GL10;
 import com.badlogic.gdx.math.MathUtils;
 import com.badlogic.gdx.tests.Box2DTest;
 import com.badlogic.gdx.tests.MeshShaderTest;
+import com.badlogic.gdx.tests.SpritePerformanceTest2;
 import com.badlogic.gdx.tests.WaterRipples;
 
 public class LiveWallpaper extends AndroidLiveWallpaperService {
+	
 	@Override
-	public ApplicationListener createListener (boolean isPreview) {
-		return new MeshShaderTest();
-	}
-
-	@Override
-	public AndroidApplicationConfiguration createConfig () {
+	public void onCreateApplication () {
+		super.onCreateApplication();
+		
 		AndroidApplicationConfiguration config = new AndroidApplicationConfiguration();
 		config.useGL20 = true;
-		return config;
+		
+		ApplicationListener listener = new MyLiveWallpaperListener();
+		initialize(listener, config);
 	}
+	
+	// implement AndroidWallpaperListener additionally to ApplicationListener 
+	// if you want to receive callbacks specific to live wallpapers
+	public static class MyLiveWallpaperListener extends MeshShaderTest implements AndroidWallpaperListener {
+		
+		@Override
+		public void offsetChange (float xOffset, float yOffset, float xOffsetStep, float yOffsetStep, int xPixelOffset,
+			int yPixelOffset) {
+			Log.i("LiveWallpaper test", "offsetChange(xOffset:"+xOffset+" yOffset:"+yOffset+" xOffsetSteep:"+xOffsetStep+" yOffsetStep:"+yOffsetStep+" xPixelOffset:"+xPixelOffset+" yPixelOffset:"+yPixelOffset+")");
+		}
 
-	@Override
-	public void offsetChange (ApplicationListener listener, float xOffset, float yOffset, float xOffsetStep, float yOffsetStep,
-		int xPixelOffset, int yPixelOffset) {
-		Gdx.app.log("LiveWallpaper", "offset changed: " + xOffset + ", " + yOffset);
+		@Override
+		public void previewStateChange (boolean isPreview) {
+			Log.i("LiveWallpaper test", "previewStateChange(isPreview:"+isPreview+")");
+		}
 	}
 }
\ No newline at end of file
diff --git a/tests/gdx-tests-gwt/.settings/com.google.gdt.eclipse.core.prefs b/tests/gdx-tests-gwt/.settings/com.google.gdt.eclipse.core.prefs
index f2d1bdc..920a7e7 100644
--- a/tests/gdx-tests-gwt/.settings/com.google.gdt.eclipse.core.prefs
+++ b/tests/gdx-tests-gwt/.settings/com.google.gdt.eclipse.core.prefs
@@ -1,5 +1,5 @@
 eclipse.preferences.version=1
 jarsExcludedFromWebInfLib=
-lastWarOutDir=/Users/badlogic/workspace/libgdx/tests/gdx-tests-gwt/war
+lastWarOutDir=D\:/workspaces/libgdx-new/libgdx/tests/gdx-tests-gwt/war
 warSrcDir=war
 warSrcDirIsOutput=false
diff --git a/tests/gdx-tests-gwt/src/com/badlogic/gdx/tests/gwt/client/GwtTestStarter.java b/tests/gdx-tests-gwt/src/com/badlogic/gdx/tests/gwt/client/GwtTestStarter.java
index b01548d..2786213 100644
--- a/tests/gdx-tests-gwt/src/com/badlogic/gdx/tests/gwt/client/GwtTestStarter.java
+++ b/tests/gdx-tests-gwt/src/com/badlogic/gdx/tests/gwt/client/GwtTestStarter.java
@@ -25,7 +25,7 @@ import com.badlogic.gdx.tests.gwt.GwtTestWrapper;
 public class GwtTestStarter extends GwtApplication {
 	@Override
 	public GwtApplicationConfiguration getConfig () {
-		return new GwtApplicationConfiguration(480, 320);
+		return new GwtApplicationConfiguration(640, 640);
 	}
 
 	@Override
diff --git a/tests/gdx-tests-gwt/war/index.html b/tests/gdx-tests-gwt/war/index.html
index e40006b..b95a852 100644
--- a/tests/gdx-tests-gwt/war/index.html
+++ b/tests/gdx-tests-gwt/war/index.html
@@ -2,13 +2,9 @@
 <html>
   <head>
     <meta http-equiv="content-type" content="text/html; charset=UTF-8">
-    <title>libGDX GWT Test Runner</title>
-  </head>
-  <body>
-    <h1>libGDX GWT Test Runner</h1>
-    UI should load here shortly:<br>
     <div id="embed-com.badlogic.gdx.tests.gwt.GdxTestsGwt"></div>
-    <small>This page is from <code>tests/gdx-tests-gwt/war/index.html</code></small>
     <script type="text/javascript" language="javascript" src="com.badlogic.gdx.tests.gwt.GdxTestsGwt/com.badlogic.gdx.tests.gwt.GdxTestsGwt.nocache.js"></script>
+  </head>
+  <body>
   </body>
 </html>
diff --git a/tests/gdx-tests-iosmonotouch/gdx-tests-iosmonotouch.userprefs b/tests/gdx-tests-iosmonotouch/gdx-tests-iosmonotouch.userprefs
index 708b968..9985554 100644
--- a/tests/gdx-tests-iosmonotouch/gdx-tests-iosmonotouch.userprefs
+++ b/tests/gdx-tests-iosmonotouch/gdx-tests-iosmonotouch.userprefs
@@ -1,6 +1,6 @@
 ﻿<Properties>
   <MonoDevelop.Ide.Workspace ActiveConfiguration="Debug|iPhoneSimulator" />
-  <MonoDevelop.Ide.Workbench ActiveDocument="gdx-tests-iosmonotouch/Main.cs">
+  <MonoDevelop.Ide.Workbench>
     <Files>
       <File FileName="gdx-tests-iosmonotouch/Main.cs" Line="20" Column="4" />
       <File FileName="../gdx-tests-android/assets/data/uiskin.atlas" Line="1" Column="1" />
diff --git a/tests/gdx-tests-iosmonotouch/gdx-tests-iosmonotouch/convert.properties b/tests/gdx-tests-iosmonotouch/gdx-tests-iosmonotouch/convert.properties
deleted file mode 100644
index 39ba25e..0000000
--- a/tests/gdx-tests-iosmonotouch/gdx-tests-iosmonotouch/convert.properties
+++ /dev/null
@@ -1,6 +0,0 @@
-SRC =       ../../gdx-tests/src/
-CLASSPATH = ../../../gdx/bin
-EXCLUDE   = **/Internatio*.java
-IN        = -r:../../../gdx/libs/ios32/gdx.dll -recurse:target/*.class
-OUT       = gdx-tests.dll
-
diff --git a/tests/gdx-tests-iosmonotouch/gdx-tests-iosmonotouch/convert.xml b/tests/gdx-tests-iosmonotouch/gdx-tests-iosmonotouch/convert.xml
index 8848391..1e0a84b 100644
--- a/tests/gdx-tests-iosmonotouch/gdx-tests-iosmonotouch/convert.xml
+++ b/tests/gdx-tests-iosmonotouch/gdx-tests-iosmonotouch/convert.xml
@@ -1,25 +1,28 @@
 <project name="gdx" default="convert" basedir=".">
 	<property environment="env"/>
-	<property file="convert.properties" />
-	<property name="IKVM_HOME" value="../../../../backends/gdx-backend-iosmonotouch/libs/ikvm"/>
+	<property name="IKVM_HOME" value="${env.IKVM_HOME}"/>
 	<property name="MONO_HOME" value="/Developer/MonoTouch/usr/lib/mono/2.1"/>
+	<property name="IN" value="-recurse:target/core/*.class"/>
+	<property name="OUT" value="gdx.dll"/>
+	<property name="SRC" value="src/"/>
+	<property name="CLASSPATH" value=""/>
+	<property name="EXCLUDE" value=""/>
 
 	<target name="compile">
 		<delete dir="target"/>
 		<mkdir dir="target"/>
-		<javac srcdir="${SRC}" debug="on" source="1.6" target="1.6" destdir="target" classpath="${CLASSPATH}">
+		<javac srcdir="${SRC}" destdir="target" classpath="${CLASSPATH}" debug="true" debuglevel="lines, vars, and source">
 			<include name="**/*.java"/>
 			<exclude name="${EXCLUDE}"/>
 		</javac>
 	</target>
 
-	<target name="convert" depends="compile">
+	<target name="convert">
 		<exec executable="mono">
 			<arg value="${IKVM_HOME}/bin/ikvmc.exe"/>
 			<arg value="-nostdlib"/>
 			<arg value="-target:library"/>
 			<arg value="-debug"/>
-			<arg value="-srcpath:${SRC}"/>
 			<arg value="-out:${OUT}"/>
 			<arg value="-r:${MONO_HOME}/mscorlib.dll"/>
 			<arg value="-r:${MONO_HOME}/System.dll"/>
@@ -31,4 +34,4 @@
 			<arg line="${IN}"/>
 		</exec>
 	</target>
-</project>
+</project>
\ No newline at end of file
diff --git a/tests/gdx-tests-iosmonotouch/gdx-tests-iosmonotouch/libgdx.a b/tests/gdx-tests-iosmonotouch/gdx-tests-iosmonotouch/libgdx.a
new file mode 100644
index 0000000..79e81af
Binary files /dev/null and b/tests/gdx-tests-iosmonotouch/gdx-tests-iosmonotouch/libgdx.a differ
diff --git a/tests/gdx-tests-iosmonotouch/gdx-tests-iosmonotouch/libikvm-natives.a b/tests/gdx-tests-iosmonotouch/gdx-tests-iosmonotouch/libikvm-natives.a
new file mode 100644
index 0000000..29296a2
Binary files /dev/null and b/tests/gdx-tests-iosmonotouch/gdx-tests-iosmonotouch/libikvm-natives.a differ
diff --git a/tests/gdx-tests-jglfw/.classpath b/tests/gdx-tests-jglfw/.classpath
deleted file mode 100644
index 212e591..0000000
--- a/tests/gdx-tests-jglfw/.classpath
+++ /dev/null
@@ -1,15 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<classpath>
-	<classpathentry kind="src" path="src"/>
-	<classpathentry kind="src" path="tests-assets"/>
-	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx"/>
-	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx-backend-jglfw"/>
-	<classpathentry combineaccessrules="false" kind="src" path="/gdx-bullet"/>
-	<classpathentry combineaccessrules="false" kind="src" path="/gdx-controllers"/>
-	<classpathentry combineaccessrules="false" kind="src" path="/gdx-freetype"/>
-	<classpathentry combineaccessrules="false" kind="src" path="/gdx-image"/>
-	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx-tests"/>
-	<classpathentry combineaccessrules="false" kind="src" path="/gdx-controllers-desktop"/>
-	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6"/>
-	<classpathentry kind="output" path="bin"/>
-</classpath>
diff --git a/tests/gdx-tests-jglfw/.project b/tests/gdx-tests-jglfw/.project
deleted file mode 100644
index 722e77e..0000000
--- a/tests/gdx-tests-jglfw/.project
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<projectDescription>
-	<name>gdx-tests-jglfw</name>
-	<comment></comment>
-	<projects>
-	</projects>
-	<buildSpec>
-		<buildCommand>
-			<name>org.eclipse.jdt.core.javabuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-	</buildSpec>
-	<natures>
-		<nature>org.eclipse.jdt.core.javanature</nature>
-	</natures>
-	<linkedResources>
-		<link>
-			<name>tests-assets</name>
-			<type>2</type>
-			<locationURI>PARENT-1-PROJECT_LOC/gdx-tests-android/assets</locationURI>
-		</link>
-	</linkedResources>
-</projectDescription>
diff --git a/tests/gdx-tests-jglfw/.settings/org.eclipse.jdt.core.prefs b/tests/gdx-tests-jglfw/.settings/org.eclipse.jdt.core.prefs
deleted file mode 100644
index 8000cd6..0000000
--- a/tests/gdx-tests-jglfw/.settings/org.eclipse.jdt.core.prefs
+++ /dev/null
@@ -1,11 +0,0 @@
-eclipse.preferences.version=1
-org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
-org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.6
-org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
-org.eclipse.jdt.core.compiler.compliance=1.6
-org.eclipse.jdt.core.compiler.debug.lineNumber=generate
-org.eclipse.jdt.core.compiler.debug.localVariable=generate
-org.eclipse.jdt.core.compiler.debug.sourceFile=generate
-org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
-org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
-org.eclipse.jdt.core.compiler.source=1.6
diff --git a/tests/gdx-tests-jglfw/src/com/badlogic/gdx/jglfw/tests/JglfwDebugStarter.java b/tests/gdx-tests-jglfw/src/com/badlogic/gdx/jglfw/tests/JglfwDebugStarter.java
deleted file mode 100644
index 2ada9cb..0000000
--- a/tests/gdx-tests-jglfw/src/com/badlogic/gdx/jglfw/tests/JglfwDebugStarter.java
+++ /dev/null
@@ -1,26 +0,0 @@
-
-package com.badlogic.gdx.jglfw.tests;
-
-import com.badlogic.gdx.backends.jglfw.JglfwApplication;
-import com.badlogic.gdx.backends.jglfw.JglfwApplicationConfiguration;
-import com.badlogic.gdx.tests.superkoalio.SuperKoalio;
-import com.badlogic.gdx.tests.utils.GdxTest;
-import com.badlogic.gdx.utils.SharedLibraryLoader;
-
-public class JglfwDebugStarter {
-	public static void main (String[] argv) {
-		// this is only here for me to debug native code faster
-		new SharedLibraryLoader("../../extensions/gdx-audio/libs/gdx-audio-natives.jar").load("gdx-audio");
-		new SharedLibraryLoader("../../extensions/gdx-image/libs/gdx-image-natives.jar").load("gdx-image");
-		new SharedLibraryLoader("../../extensions/gdx-freetype/libs/gdx-freetype-natives.jar").load("gdx-freetype");
-		new SharedLibraryLoader("../../extensions/gdx-controllers/gdx-controllers-desktop/libs/gdx-controllers-desktop-natives.jar")
-			.load("gdx-controllers-desktop");
-		new SharedLibraryLoader("../../gdx/libs/gdx-natives.jar").load("gdx");
-
-		GdxTest test = new SuperKoalio();
-		JglfwApplicationConfiguration config = new JglfwApplicationConfiguration();
-		config.vSync = true;
-		config.useGL20 = test.needsGL20();
-		new JglfwApplication(test, config);
-	}
-}
diff --git a/tests/gdx-tests-jglfw/src/com/badlogic/gdx/jglfw/tests/JglfwTestStarter.java b/tests/gdx-tests-jglfw/src/com/badlogic/gdx/jglfw/tests/JglfwTestStarter.java
deleted file mode 100644
index 9bcaf36..0000000
--- a/tests/gdx-tests-jglfw/src/com/badlogic/gdx/jglfw/tests/JglfwTestStarter.java
+++ /dev/null
@@ -1,146 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-
-package com.badlogic.gdx.jglfw.tests;
-
-import com.badlogic.gdx.LifecycleListener;
-import com.badlogic.gdx.Preferences;
-import com.badlogic.gdx.backends.jglfw.JglfwApplication;
-import com.badlogic.gdx.backends.jglfw.JglfwApplicationConfiguration;
-import com.badlogic.gdx.backends.jglfw.JglfwFiles;
-import com.badlogic.gdx.backends.jglfw.JglfwPreferences;
-import com.badlogic.gdx.files.FileHandle;
-import com.badlogic.gdx.tests.utils.GdxTest;
-import com.badlogic.gdx.tests.utils.GdxTests;
-import com.badlogic.gdx.utils.GdxRuntimeException;
-
-import java.awt.BorderLayout;
-import java.awt.EventQueue;
-import java.awt.HeadlessException;
-import java.awt.event.ActionEvent;
-import java.awt.event.ActionListener;
-import java.awt.event.KeyAdapter;
-import java.awt.event.KeyEvent;
-import java.awt.event.MouseAdapter;
-import java.awt.event.MouseEvent;
-
-import javax.swing.DefaultListSelectionModel;
-import javax.swing.JButton;
-import javax.swing.JFrame;
-import javax.swing.JList;
-import javax.swing.JPanel;
-import javax.swing.JScrollPane;
-import javax.swing.ListSelectionModel;
-import javax.swing.UIManager;
-
-public class JglfwTestStarter extends JFrame {
-	public JglfwTestStarter () throws HeadlessException {
-		super("JGLFW libgdx Tests");
-		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
-		setContentPane(new TestList());
-		pack();
-		setSize(getWidth(), 600);
-		setLocationRelativeTo(null);
-		setVisible(true);
-	}
-
-	/** Runs the {@link GdxTest} with the given name.
-	 * @param testName the name of a test class
-	 * @return {@code true} if the test was found and run, {@code false} otherwise */
-	public static JglfwApplication runTest (String testName) {
-		final GdxTest test = GdxTests.newTest(testName);
-		if (test == null) throw new GdxRuntimeException("Test not found: " + testName);
-
-		final JglfwApplicationConfiguration config = new JglfwApplicationConfiguration();
-		config.width = 640;
-		config.height = 480;
-		config.title = testName;
-		config.useGL20 = test.needsGL20();
-		config.forceExit = false;
-		return new JglfwApplication(test, config);
-	}
-
-	class TestList extends JPanel {
-		public TestList () {
-			setLayout(new BorderLayout());
-
-			final JButton button = new JButton("Run Test");
-
-			final JList list = new JList(GdxTests.getNames().toArray());
-			JScrollPane pane = new JScrollPane(list);
-
-			DefaultListSelectionModel m = new DefaultListSelectionModel();
-			m.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
-			m.setLeadAnchorNotificationEnabled(false);
-			list.setSelectionModel(m);
-
-			list.addMouseListener(new MouseAdapter() {
-				public void mouseClicked (MouseEvent event) {
-					if (event.getClickCount() == 2) button.doClick();
-				}
-			});
-
-			list.addKeyListener(new KeyAdapter() {
-				public void keyPressed (KeyEvent e) {
-					if (e.getKeyCode() == KeyEvent.VK_ENTER) button.doClick();
-				}
-			});
-
-			final Preferences prefs = new JglfwPreferences(new FileHandle(new JglfwFiles().getExternalStoragePath()
-				+ ".prefs/jglfw-tests"));
-			list.setSelectedValue(prefs.getString("last", null), true);
-
-			button.addActionListener(new ActionListener() {
-				@Override
-				public void actionPerformed (ActionEvent e) {
-					String testName = (String)list.getSelectedValue();
-					prefs.putString("last", testName);
-					prefs.flush();
-					JglfwTestStarter.this.setVisible(false);
-					runTest(testName).addLifecycleListener(new LifecycleListener() {
-						public void resume () {
-						}
-
-						public void pause () {
-						}
-
-						public void dispose () {
-							JglfwTestStarter.this.setVisible(true);
-						}
-					});
-				}
-			});
-
-			add(pane, BorderLayout.CENTER);
-			add(button, BorderLayout.SOUTH);
-		}
-	}
-
-	/** Runs a libgdx test.
-	 * 
-	 * If no arguments are provided on the command line, shows a list of tests to choose from. If an argument is present, the test
-	 * with that name will immediately be run.
-	 * 
-	 * @param argv command line arguments */
-	public static void main (String[] argv) throws Exception {
-		if (argv.length > 0) {
-			runTest(argv[0]);
-			return;
-		}
-		UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
-		new JglfwTestStarter();
-	}
-}
diff --git a/tests/gdx-tests-lwjgl/src/com/badlogic/gdx/tests/lwjgl/LocalLwjglTest.java b/tests/gdx-tests-lwjgl/src/com/badlogic/gdx/tests/lwjgl/LocalLwjglTest.java
index 5eb1130..e36477c 100644
--- a/tests/gdx-tests-lwjgl/src/com/badlogic/gdx/tests/lwjgl/LocalLwjglTest.java
+++ b/tests/gdx-tests-lwjgl/src/com/badlogic/gdx/tests/lwjgl/LocalLwjglTest.java
@@ -65,7 +65,7 @@ public class LocalLwjglTest extends ApplicationAdapter {
 
 		renderer.setColor(1, 0, 0, 1);
 		renderer.translate(0, -4, 0);
-		renderer.begin(ShapeType.Filled);
+		renderer.begin(ShapeType.Triangle);
 		for (int i = 0; i < triangles.size(); i += 3) {
 			Vector2 v1 = triangles.get(i);
 			Vector2 v2 = triangles.get(i + 1);
diff --git a/tests/gdx-tests-lwjgl/src/com/badlogic/gdx/tests/lwjgl/LwjglCanvasTest.java b/tests/gdx-tests-lwjgl/src/com/badlogic/gdx/tests/lwjgl/LwjglCanvasTest.java
deleted file mode 100644
index b2b9c8b..0000000
--- a/tests/gdx-tests-lwjgl/src/com/badlogic/gdx/tests/lwjgl/LwjglCanvasTest.java
+++ /dev/null
@@ -1,45 +0,0 @@
-package com.badlogic.gdx.tests.lwjgl;
-
-import java.awt.BorderLayout;
-import java.awt.Container;
-
-import javax.swing.JFrame;
-import javax.swing.SwingUtilities;
-
-import com.badlogic.gdx.ApplicationAdapter;
-import com.badlogic.gdx.Gdx;
-import com.badlogic.gdx.backends.lwjgl.LwjglAWTCanvas;
-import com.badlogic.gdx.backends.lwjgl.LwjglCanvas;
-import com.badlogic.gdx.graphics.GL10;
-import com.badlogic.gdx.graphics.g2d.BitmapFont;
-import com.badlogic.gdx.graphics.g2d.SpriteBatch;
-import com.badlogic.gdx.tests.MusicTest;
-import com.badlogic.gdx.tests.ObjTest;
-import com.badlogic.gdx.tests.UITest;
-import com.badlogic.gdx.tests.lwjgl.SwingLwjglTest.WindowCreator;
-
-public class LwjglCanvasTest extends JFrame {
-	LwjglCanvas canvas;
-
-	public LwjglCanvasTest () {
-		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
-
-		Container container = getContentPane();
-		canvas = new LwjglCanvas(new UITest(), false);
-
-		container.add(canvas.getCanvas(), BorderLayout.CENTER);
-
-		pack();
-		setVisible(true);
-		setSize(800, 480);
-	}
-
-	public static void main (String[] args) {
-		SwingUtilities.invokeLater(new Runnable() {
-			@Override
-			public void run () {
-				new LwjglCanvasTest();
-			}
-		});
-	}
-}
diff --git a/tests/gdx-tests-lwjgl/src/com/badlogic/gdx/tests/lwjgl/LwjglDebugStarter.java b/tests/gdx-tests-lwjgl/src/com/badlogic/gdx/tests/lwjgl/LwjglDebugStarter.java
index f4e82ec..3d0debe 100644
--- a/tests/gdx-tests-lwjgl/src/com/badlogic/gdx/tests/lwjgl/LwjglDebugStarter.java
+++ b/tests/gdx-tests-lwjgl/src/com/badlogic/gdx/tests/lwjgl/LwjglDebugStarter.java
@@ -18,18 +18,11 @@ package com.badlogic.gdx.tests.lwjgl;
 
 import com.badlogic.gdx.backends.lwjgl.LwjglApplication;
 import com.badlogic.gdx.backends.lwjgl.LwjglApplicationConfiguration;
-import com.badlogic.gdx.math.MathUtils;
-import com.badlogic.gdx.tests.AnimationTest;
-import com.badlogic.gdx.tests.ETC1Test;
-import com.badlogic.gdx.tests.FullscreenTest;
-import com.badlogic.gdx.tests.InputTest;
-import com.badlogic.gdx.tests.SpriteCacheTest;
-import com.badlogic.gdx.tests.TideMapAssetManagerTest;
-import com.badlogic.gdx.tests.TideMapDirectLoaderTest;
-import com.badlogic.gdx.tests.TiledMapAssetManagerTest;
-import com.badlogic.gdx.tests.TiledMapDirectLoaderTest;
-import com.badlogic.gdx.tests.bench.TiledMapBench;
-import com.badlogic.gdx.tests.superkoalio.SuperKoalio;
+import com.badlogic.gdx.tests.AssetManagerTest;
+import com.badlogic.gdx.tests.GamepadTest;
+import com.badlogic.gdx.tests.InverseKinematicsTest;
+import com.badlogic.gdx.tests.YDownTest;
+import com.badlogic.gdx.tests.extensions.FreeTypeTest;
 import com.badlogic.gdx.tests.utils.GdxTest;
 import com.badlogic.gdx.utils.SharedLibraryLoader;
 
@@ -42,10 +35,11 @@ public class LwjglDebugStarter {
 		new SharedLibraryLoader("../../extensions/gdx-controllers/gdx-controllers-desktop/libs/gdx-controllers-desktop-natives.jar").load("gdx-controllers-desktop");
 		new SharedLibraryLoader("../../gdx/libs/gdx-natives.jar").load("gdx");
 
-		
-		GdxTest test = new SuperKoalio();
+		GdxTest test = new GamepadTest();
 		LwjglApplicationConfiguration config = new LwjglApplicationConfiguration();
 		config.useGL20 = test.needsGL20();
 		new LwjglApplication(test, config);
 	}
+	
+	
 }
diff --git a/tests/gdx-tests/.classpath b/tests/gdx-tests/.classpath
index 1c176ac..f84152d 100644
--- a/tests/gdx-tests/.classpath
+++ b/tests/gdx-tests/.classpath
@@ -1,12 +1,13 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<classpath>
-	<classpathentry excluding="**/.svn/*" kind="src" path="src"/>
-	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6"/>
-	<classpathentry combineaccessrules="false" kind="src" path="/gdx"/>
-	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx-audio"/>
-	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx-freetype"/>
-	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx-image"/>
-	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx-bullet"/>
-	<classpathentry combineaccessrules="false" kind="src" path="/gdx-controllers"/>
-	<classpathentry kind="output" path="bin"/>
-</classpath>
+<?xml version="1.0" encoding="UTF-8"?>
+<classpath>
+	<classpathentry excluding="**/.svn/*" kind="src" path="src"/>
+	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6"/>
+	<classpathentry combineaccessrules="false" kind="src" path="/gdx"/>
+	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx-audio"/>
+	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx-freetype"/>
+	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx-image"/>
+	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx-bullet"/>
+	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx-gleed"/>
+	<classpathentry combineaccessrules="false" kind="src" path="/gdx-controllers"/>
+	<classpathentry kind="output" path="bin"/>
+</classpath>
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/GdxTests.gwt.xml b/tests/gdx-tests/src/com/badlogic/gdx/GdxTests.gwt.xml
index 66adb59..8f34583 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/GdxTests.gwt.xml
+++ b/tests/gdx-tests/src/com/badlogic/gdx/GdxTests.gwt.xml
@@ -26,12 +26,11 @@
 		<exclude name="**/VorbisTest.java"/> <!-- native -->
 		<exclude name="**/WavTest.java"/> <!-- naive -->
 		<exclude name="**/AssetsFileGenerator.java"/> <!-- utility -->
-		<exclude name="**/GdxTests.java"/> <!-- utility -->
-		<exclude name="**/InternationalFontsTest.java"/> <!-- utility -->
+		<exclude name="**/GdxTests.java"/> <!-- utilty -->
+		<exclude name="**/InternationalFontsTest.java"/> <!-- utilty -->
 		<exclude name="**/BulletTestCollection.java"/> <!-- native -->
 		<exclude name="**/bullet/"/> <!-- native -->
 		<exclude name="**/FloatTextureTest.java"/> <!-- GLES 2.0 extension -->
 		<exclude name="**/GLEEDTest.java"/>
-		<exclude name="**/NetAPITest.java"/> <!-- abuses FileHandle() -->
 	</source>
 </module>
\ No newline at end of file
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontMetricsTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontMetricsTest.java
index e4fe4a1..73cc4a5 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontMetricsTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontMetricsTest.java
@@ -83,9 +83,9 @@ public class BitmapFontMetricsTest extends GdxTest {
 
 		spriteBatch.end();
 
-		renderer.begin(ShapeType.Filled);
+		renderer.begin(ShapeType.FilledRectangle);
 		renderer.setColor(Color.BLACK);
-		renderer.rect(x - 3, y - 3, 6, 6);
+		renderer.filledRect(x - 3, y - 3, 6, 6);
 		renderer.end();
 
 		float baseline = y - font.getCapHeight();
@@ -104,7 +104,7 @@ public class BitmapFontMetricsTest extends GdxTest {
 		renderer.line(0, y - font.getLineHeight(), 9999, y - font.getLineHeight());
 		renderer.end();
 
-		renderer.begin(ShapeType.Line);
+		renderer.begin(ShapeType.Rectangle);
 		renderer.setColor(Color.BLUE);
 		renderer.rect(x, y, bounds.width, -bounds.height);
 		renderer.end();
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontTest.java
index 57e9b7c..7869b90 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontTest.java
@@ -76,7 +76,7 @@ public class BitmapFontTest extends GdxTest {
 
 		spriteBatch.end();
 
-		renderer.begin(ShapeType.Line);
+		renderer.begin(ShapeType.Rectangle);
 		renderer.rect(x, viewHeight - y, x + alignmentWidth, 300);
 		renderer.end();
 	}
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/Box2DTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/Box2DTest.java
index 58becee..7149b7a 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/Box2DTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/Box2DTest.java
@@ -310,7 +310,7 @@ public class Box2DTest extends GdxTest implements InputProcessor {
 		transform.rotate(0, 0, 1, (float)Math.toDegrees(angle));
 
 		// render the box
-		renderer.begin(ShapeType.Line);
+		renderer.begin(ShapeType.Rectangle);
 		renderer.setTransformMatrix(transform);
 		renderer.setColor(1, 1, 1, 1);
 		renderer.rect(-halfWidth, -halfHeight, halfWidth * 2, halfHeight * 2);
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/BulletTestCollection.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/BulletTestCollection.java
index 59c1a30..ae256e1 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/BulletTestCollection.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/BulletTestCollection.java
@@ -32,11 +32,8 @@ import com.badlogic.gdx.scenes.scene2d.ui.Label;
 import com.badlogic.gdx.scenes.scene2d.utils.Align;
 import com.badlogic.gdx.tests.box2d.Box2DTest;
 import com.badlogic.gdx.tests.bullet.BulletTest;
-import com.badlogic.gdx.tests.bullet.CollisionTest;
-import com.badlogic.gdx.tests.bullet.CollisionWorldTest;
 import com.badlogic.gdx.tests.bullet.ConstraintsTest;
 import com.badlogic.gdx.tests.bullet.ConvexHullTest;
-import com.badlogic.gdx.tests.bullet.FrustumCullingTest;
 import com.badlogic.gdx.tests.bullet.InternalTickTest;
 import com.badlogic.gdx.tests.bullet.KinematicTest;
 import com.badlogic.gdx.tests.bullet.MeshShapeTest;
@@ -51,7 +48,7 @@ import com.badlogic.gdx.tests.utils.GdxTest;
 public class BulletTestCollection extends GdxTest implements InputProcessor, GestureListener {
 	protected final BulletTest[] tests = {new ShootTest(), new KinematicTest(), new ConstraintsTest(), 
 		new MeshShapeTest(), new ConvexHullTest(), new RayCastTest(), new RayPickRagdollTest(), new InternalTickTest(), 
-		new CollisionWorldTest(), new CollisionTest(), new FrustumCullingTest(), new SoftBodyTest(), new SoftMeshTest()};
+		new SoftBodyTest(), new SoftMeshTest()};
 	
 	protected int testIndex = 0;
 	
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/FilesTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/FilesTest.java
index 1eb87c2..59bed7f 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/FilesTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/FilesTest.java
@@ -403,7 +403,7 @@ public class FilesTest extends GdxTest {
 		if (handle.delete()) fail();
 		if (handle.list().length != 0) fail();
 		if (handle.child("meow").exists()) fail();
-		if (handle.parent().exists()) fail();
+		if (!handle.parent().exists()) fail();
 		try {
 			handle.read().close();
 			fail();
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/FullscreenTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/FullscreenTest.java
index 069451d..5511a48 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/FullscreenTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/FullscreenTest.java
@@ -29,7 +29,6 @@ public class FullscreenTest extends GdxTest {
 
 	Mesh mesh;
 	Texture texture;
-	boolean fullscreen = false;
 
 	@Override
 	public void create () {
@@ -42,6 +41,7 @@ public class FullscreenTest extends GdxTest {
 		for (DisplayMode mode : modes) {
 			System.out.println(mode);
 		}
+		Gdx.graphics.setDisplayMode(800, 600, true);
 		Gdx.app.log("FullscreenTest", Gdx.graphics.getBufferFormat().toString());
 	}
 
@@ -59,14 +59,7 @@ public class FullscreenTest extends GdxTest {
 		mesh.render(GL10.GL_TRIANGLES);
 
 		if (Gdx.input.justTouched()) {
-			if(fullscreen) {
-				Gdx.graphics.setDisplayMode(480, 320, false);
-				fullscreen = false;
-			} else {
-				DisplayMode desktopDisplayMode = Gdx.graphics.getDesktopDisplayMode();
-				Gdx.graphics.setDisplayMode(desktopDisplayMode.width, desktopDisplayMode.height, true);
-				fullscreen = true;
-			}
+			Gdx.graphics.setDisplayMode(480, 320, false);
 		}
 	}
 
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/GamepadTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/GamepadTest.java
index e6434b8..f016624 100755
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/GamepadTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/GamepadTest.java
@@ -107,7 +107,7 @@ public class GamepadTest extends GdxTest {
 		});
 	}
 	
-	void print(String message) {
+	private void print(String message) {
 		String[] lines = console.getItems();
 		String[] newLines = new String[lines.length + 1];
 		System.arraycopy(lines, 0, newLines, 0, lines.length);
@@ -118,7 +118,7 @@ public class GamepadTest extends GdxTest {
 		scrollPane.setScrollPercentY(1.0f);
 	}
 	
-	void clear() {
+	private void clear() {
 		console.setItems(new Object[0]);
 	}
 
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/InterpolationTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/InterpolationTest.java
index fe1dd2e..19f299e 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/InterpolationTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/InterpolationTest.java
@@ -89,7 +89,7 @@ public class InterpolationTest extends GdxTest {
 
 		renderer.setProjectionMatrix(stage.getCamera().combined);
 
-		renderer.begin(ShapeType.Line);
+		renderer.begin(ShapeType.Box);
 		renderer.box(x, y, 0, size, size, 0);
 		renderer.end();
 
@@ -108,8 +108,8 @@ public class InterpolationTest extends GdxTest {
 
 		timer += Gdx.graphics.getDeltaTime();
 		Vector2 current = getCurrentPosition();
-		renderer.begin(ShapeType.Filled);
-		renderer.rect(current.x, current.y, 20, 20);
+		renderer.begin(ShapeType.FilledRectangle);
+		renderer.filledRect(current.x, current.y, 20, 20);
 		renderer.end();
 
 		stage.act(Gdx.graphics.getDeltaTime());
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/MultitouchTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/MultitouchTest.java
index 99e45d0..93f88bd 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/MultitouchTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/MultitouchTest.java
@@ -39,7 +39,7 @@ public class MultitouchTest extends GdxTest {
 		Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
 		camera.update();
 		renderer.setProjectionMatrix(camera.combined);
-		renderer.begin(ShapeType.Filled);
+		renderer.begin(ShapeType.FilledTriangle);
 		int size = Math.max(Gdx.graphics.getWidth(), Gdx.graphics.getHeight()) / 10;
 		for (int i = 0; i < 10; i++) {
 			if (Gdx.input.isTouched(i) == false) continue;
@@ -48,7 +48,7 @@ public class MultitouchTest extends GdxTest {
 			float y = Gdx.graphics.getHeight() - Gdx.input.getY(i) - 1;
 			Color color = colors[i % colors.length];
 			renderer.setColor(color);
-			renderer.triangle(x, y + size, x + size, y - size, x - size, y - size);
+			renderer.filledTriangle(x, y + size, x + size, y - size, x - size, y - size);
 		}
 		renderer.end();
 	}
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/NinePatchTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/NinePatchTest.java
deleted file mode 100644
index 85920d0..0000000
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/NinePatchTest.java
+++ /dev/null
@@ -1,211 +0,0 @@
-package com.badlogic.gdx.tests;
-
-import com.badlogic.gdx.Gdx;
-import com.badlogic.gdx.graphics.Color;
-import com.badlogic.gdx.graphics.GL10;
-import com.badlogic.gdx.graphics.OrthographicCamera;
-import com.badlogic.gdx.graphics.Pixmap;
-import com.badlogic.gdx.graphics.Texture;
-import com.badlogic.gdx.graphics.g2d.NinePatch;
-import com.badlogic.gdx.graphics.g2d.SpriteBatch;
-import com.badlogic.gdx.graphics.g2d.TextureRegion;
-import com.badlogic.gdx.graphics.glutils.ShapeRenderer;
-import com.badlogic.gdx.math.Interpolation;
-import com.badlogic.gdx.math.MathUtils;
-import com.badlogic.gdx.scenes.scene2d.Action;
-import com.badlogic.gdx.tests.utils.GdxTest;
-import com.badlogic.gdx.utils.Array;
-
-public class NinePatchTest extends GdxTest {
-	/** A string name for the type of test, and the NinePatch being tested. */
-	private static class TestPatch {
-		public final String name;
-		public final NinePatch ninePatch;
-		
-		TestPatch(String n) {
-			this.name = n;
-			this.ninePatch = NinePatchTest.newNinePatch(); 
-		}
-
-		TestPatch(String n, NinePatch np) {
-			this.name = n;
-			this.ninePatch = np;
-		}
-	}
-	
-	private OrthographicCamera camera;
-	private SpriteBatch b;
-	private Array<TestPatch> ninePatches = new Array<TestPatch>(10);
-
-	private final long start = System.currentTimeMillis();
-	
-	@Override
-	public void create () { 
-		TestPatch tp;
-
-		// Create all the NinePatches to test
-		ninePatches.add(new TestPatch("default"));
-		
-		tp = new TestPatch("20px width");
-		int bWidth = 20;
-		tp.ninePatch.setLeftWidth(bWidth);
-		tp.ninePatch.setRightWidth(bWidth);
-		tp.ninePatch.setTopHeight(bWidth);
-		tp.ninePatch.setBottomHeight(bWidth);
-		ninePatches.add(tp);
-		
-		tp = new TestPatch("fat left");
-		tp.ninePatch.setLeftWidth(3 * tp.ninePatch.getRightWidth());
-		ninePatches.add(tp);
-		
-		tp = new TestPatch("fat top");
-		tp.ninePatch.setTopHeight(3 * tp.ninePatch.getBottomHeight());
-		ninePatches.add(tp);
-		
-		tp = new TestPatch("degenerate", newDegenerateNinePatch());
-		ninePatches.add(tp);
-		
-		tp = new TestPatch("upper-left quad", newULQuadPatch());
-		ninePatches.add(tp);
-		
-		tp = new TestPatch("no middle row", newMidlessPatch());
-		ninePatches.add(tp);
-		
-		b = new SpriteBatch();
-	}
-	
-	// Make a new 'pixmapSize' square texture region with 'patchSize' patches in it.  Each patch is a different color.
-	static TextureRegion newPatchPix(int patchSize, int pixmapSize) {
-		final int pixmapDim = MathUtils.nextPowerOfTwo(pixmapSize);  
-
-		Pixmap p = new Pixmap(pixmapDim, pixmapDim, Pixmap.Format.RGBA8888);
-		p.setColor(1, 1, 1, 0);
-		p.fill();
-						
-		for (int x = 0; x < pixmapSize; x += patchSize) {
-			for (int y = 0; y < pixmapSize; y += patchSize) {
-				p.setColor(x/(float)pixmapSize, y/(float)pixmapSize, 1.0f, 1.0f);
-				p.fillRectangle(x, y, patchSize, patchSize);
-			}
-		}
-		
-		return new TextureRegion(new Texture(p), pixmapSize, pixmapSize); 
-	}
-	
-	// Make a degenerate NinePatch 
-	static NinePatch newDegenerateNinePatch() {
-		final int patchSize = 8; 
-		final int pixmapSize = patchSize * 3;
-		TextureRegion tr = newPatchPix(patchSize, pixmapSize);
-		return new NinePatch(tr);
-	}
-
-	// Make a basic NinePatch with different colors in each of the nine patches
-	static NinePatch newNinePatch() {
-		final int patchSize = 8; 
-		final int pixmapSize = patchSize * 3;
-		TextureRegion tr = newPatchPix(patchSize, pixmapSize);
-		
-		return new NinePatch(tr, patchSize, patchSize, patchSize, patchSize);
-	}
-		
-	// Make a upper-left "quad" patch (only 4 patches defined in the top-left corner of the ninepatch)
-	static NinePatch newULQuadPatch() {
-		final int patchSize = 8; 
-		final int pixmapSize = patchSize * 2;
-		TextureRegion tr = newPatchPix(patchSize, pixmapSize);		
-		
-		return new NinePatch(tr, patchSize, 0, patchSize, 0);
-	}
-
-	// Make a ninepatch with no middle band, just top three and bottom three.
-	static NinePatch newMidlessPatch() {
-		final int patchSize = 8; 
-		final int fullPatchHeight = patchSize * 2;
-		final int fullPatchWidth = patchSize * 3;
-		final int pixmapDim = MathUtils.nextPowerOfTwo(Math.max(fullPatchWidth, fullPatchHeight));  
-		
-		Pixmap testPatch = new Pixmap(pixmapDim, pixmapDim, Pixmap.Format.RGBA8888);
-		testPatch.setColor(1, 1, 1, 0);
-		testPatch.fill();
-						
-		for (int x = 0; x < fullPatchWidth; x += patchSize) {
-			for (int y = 0; y < fullPatchHeight; y += patchSize) {
-				testPatch.setColor(x/(float)fullPatchWidth, y/(float)fullPatchHeight, 1.0f, 1.0f);
-				testPatch.fillRectangle(x, y, patchSize, patchSize);
-			}
-		}
-		
-		return new NinePatch(new TextureRegion(new Texture(testPatch), fullPatchWidth, fullPatchHeight), 
-			patchSize, patchSize, patchSize, patchSize);
-	}
-
-	private float timePassed = 0;
-	private final Color filterColor = new Color();
-	private final Color oldColor = new Color();
-	
-	@Override
-	public void render () {
-		final int screenWidth = Gdx.graphics.getWidth();
-		final int screenHeight = Gdx.graphics.getHeight();
-		
-		Gdx.gl.glClearColor(0, 0, 0, 0);
-		Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
-		
-		timePassed += Gdx.graphics.getDeltaTime();
-		
-		b.begin();
-		final int sz = ninePatches.size;
-		final int XGAP = 10;
-		final int pheight = (int)((screenHeight * 0.5f) / ((sz+1) / 2));
-		int x = XGAP;
-		int y = 10;
-		
-		// Test that batch color is applied to NinePatch
-		if (timePassed < 2) {
-			b.setColor(1, 1, 1, Interpolation.sine.apply(timePassed / 2f));
-		}
-		
-		// Test that the various nine patches render
-		for (int i = 0; i < sz; i += 2) {
-			int pwidth = (int)(0.44f * screenWidth); 
-
-			final NinePatch np1 = ninePatches.get(i).ninePatch;	
-			np1.draw(b, x, y, pwidth, pheight);			
-			
-			if (i+1 < sz) {
-				final NinePatch np2 = ninePatches.get(i+1).ninePatch;
-				final int x2 = x + pwidth + XGAP;
-				final int pwidth2 = screenWidth - XGAP - x2;
-				
-				np2.draw(b, x2 , y, pwidth2, pheight);
-			}
-			
-			y += pheight + 2; 
-		}
-		
-		// Dim a np by setting its color.  Also test sending same np to batch twice
-		NinePatch np = ninePatches.get(0).ninePatch;
-		oldColor.set(np.getColor());
-		filterColor.set(0.3f, 0.3f, 0.3f, 1.0f);
-		np.setColor(filterColor);
-		np.draw(b, x, y, 100, 30);
-		np.setColor(oldColor);
-		
-		b.end();
-	}
-	
-	@Override
-	public void resize (int width, int height) {
-		float ratio = ((float)Gdx.graphics.getWidth() / (float)Gdx.graphics.getHeight());
-		int h = 10;
-		int w = (int)(h * ratio);
-		camera = new OrthographicCamera(w, h);
-	}
-	
-	@Override
-	public boolean needsGL20 () {
-		return false;
-	}
-
-}
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/PathTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/PathTest.java
deleted file mode 100644
index 0023504..0000000
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/PathTest.java
+++ /dev/null
@@ -1,131 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-
-package com.badlogic.gdx.tests;
-
-import com.badlogic.gdx.Gdx;
-import com.badlogic.gdx.InputProcessor;
-import com.badlogic.gdx.graphics.GL10;
-import com.badlogic.gdx.graphics.Texture;
-import com.badlogic.gdx.graphics.g2d.Sprite;
-import com.badlogic.gdx.graphics.g2d.SpriteBatch;
-import com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer10;
-import com.badlogic.gdx.math.BSpline;
-import com.badlogic.gdx.math.Bezier;
-import com.badlogic.gdx.math.CatmullRomSpline;
-import com.badlogic.gdx.math.Path;
-import com.badlogic.gdx.math.Vector2;
-import com.badlogic.gdx.tests.utils.GdxTest;
-import com.badlogic.gdx.utils.Array;
-
-/** @author Xoppa */
-public class PathTest extends GdxTest {
-	int SAMPLE_POINTS = 100;
-	float SAMPLE_POINT_DISTANCE = 1f/SAMPLE_POINTS;
-	
-	SpriteBatch spriteBatch;
-	ImmediateModeRenderer10 renderer;
-	Sprite obj;
-	Array<Path<Vector2>> paths = new Array<Path<Vector2>>();
-	int currentPath = 0;
-	float t;
-	float speed = 0.3f;
-	float wait = 0f;
-
-	@Override
-	public boolean needsGL20 () {
-		return false;
-	}
-	
-	@Override
-	public void create () {
-		renderer = new ImmediateModeRenderer10();
-		spriteBatch = new SpriteBatch();
-		obj = new Sprite(new Texture(Gdx.files.internal("data/badlogicsmall.jpg")));
-		
-		float w = Gdx.graphics.getWidth() - obj.getWidth();
-		float h = Gdx.graphics.getHeight() - obj.getHeight();
-		
-		paths.add(new Bezier<Vector2>(new Vector2(0,0), new Vector2(w, h)));
-		paths.add(new Bezier<Vector2>(new Vector2(0,0), new Vector2(0, h), new Vector2(w, h)));
-		paths.add(new Bezier<Vector2>(new Vector2(0,0), new Vector2(w, 0), new Vector2(0, h), new Vector2(w, h)));
-		
-		Vector2 cp[] = new Vector2[]{
-			new Vector2(0, 0), new Vector2(w * 0.25f, h * 0.5f), new Vector2(0, h), new Vector2(w*0.5f, h*0.75f),
-			new Vector2(w, h), new Vector2(w * 0.75f, h * 0.5f), new Vector2(w, 0), new Vector2(w*0.5f, h*0.25f)
-		};
-		paths.add(new BSpline<Vector2>(cp, 3, true));
-		
-		paths.add(new CatmullRomSpline<Vector2>(cp, true));
-		
-		Gdx.input.setInputProcessor(this);
-	}
-	
-	final Vector2 tmpV = new Vector2();
-	@Override
-	public void render () {
-		GL10 gl = Gdx.graphics.getGL10();
-		gl.glClearColor(0.7f, 0.7f, 0.7f, 1);
-		gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
-		
-		if (wait > 0)
-			wait -= Gdx.graphics.getDeltaTime();
-		else {
-			t += speed * Gdx.graphics.getDeltaTime();
-			while (t >= 1f) {
-				currentPath = (currentPath + 1) % paths.size;
-				t -= 1f;
-			}
-			
-			paths.get(currentPath).valueAt(tmpV, t);
-			obj.setPosition(tmpV.x, tmpV.y);
-		}
-			
-		spriteBatch.begin();
-		
-		renderer.begin(GL10.GL_LINE_STRIP);
-		float val = 0f;
-		while (val <= 1f) {
-			renderer.color(0f, 0f, 0f, 1f);
-			paths.get(currentPath).valueAt(/*out:*/tmpV, val);
-			renderer.vertex(tmpV.x, tmpV.y, 0);
-			val += SAMPLE_POINT_DISTANCE;
-		}
-		renderer.end();
-		
-		obj.draw(spriteBatch);
-		spriteBatch.end();
-	}
-	
-	private void touch(int x, int y) {
-		t = paths.get(currentPath).approximate(tmpV.set(x, Gdx.graphics.getHeight()-y));
-		paths.get(currentPath).valueAt(tmpV, t);
-		obj.setPosition(tmpV.x, tmpV.y);
-		wait = 0.2f;		
-	}
-	
-	@Override
-	public boolean touchUp (int screenX, int screenY, int pointer, int button) {
-		touch(screenX, screenY);
-		return super.touchUp(screenX, screenY, pointer, button);
-	}
-	
-	@Override
-	public boolean touchDragged (int screenX, int screenY, int pointer) {
-		touch(screenX, screenY);
-		return super.touchDragged(screenX, screenY, pointer);
-	}
-}
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/PixmapPackerTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/PixmapPackerTest.java
index 0245ab7..549ebf7 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/PixmapPackerTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/PixmapPackerTest.java
@@ -5,11 +5,9 @@ import com.badlogic.gdx.graphics.GL10;
 import com.badlogic.gdx.graphics.OrthographicCamera;
 import com.badlogic.gdx.graphics.Pixmap;
 import com.badlogic.gdx.graphics.Pixmap.Format;
-import com.badlogic.gdx.graphics.PixmapIO;
 import com.badlogic.gdx.graphics.Texture;
 import com.badlogic.gdx.graphics.Texture.TextureFilter;
 import com.badlogic.gdx.graphics.g2d.PixmapPacker;
-import com.badlogic.gdx.graphics.g2d.PixmapPacker.Page;
 import com.badlogic.gdx.graphics.g2d.SpriteBatch;
 import com.badlogic.gdx.graphics.g2d.TextureAtlas;
 import com.badlogic.gdx.tests.utils.GdxTest;
@@ -37,7 +35,7 @@ public class PixmapPackerTest extends GdxTest {
 		PixmapPacker packer =  new PixmapPacker(1024, 1024, Format.RGBA8888, 2, true);
 		packer.pack("badlogic", pixmap1);
 		packer.pack("wheel", pixmap1);
-		packer.pack("egg", pixmap1);		
+		packer.pack("egg", pixmap1);
 		
 		atlas = packer.generateTextureAtlas(TextureFilter.Nearest, TextureFilter.Nearest, false);
 		Gdx.app.log("PixmaPackerTest", "Number of textures: " + atlas.getTextures().size());
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/PolygonRegionTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/PolygonRegionTest.java
index 90828ab..b776de3 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/PolygonRegionTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/PolygonRegionTest.java
@@ -176,9 +176,9 @@ public class PolygonRegionTest extends GdxTest {
 			renderer.end();
 
 			renderer.setColor(Color.BLUE);
-			renderer.begin(ShapeType.Filled);
+			renderer.begin(ShapeType.FilledCircle);
 
-			renderer.circle(worldOriginX, worldOriginY, 4);
+			renderer.filledCircle(worldOriginX, worldOriginY, 4);
 
 			renderer.end();
 
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/PolygonSpriteTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/PolygonSpriteTest.java
index 61d94a6..cdd9eef 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/PolygonSpriteTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/PolygonSpriteTest.java
@@ -97,7 +97,7 @@ public class PolygonSpriteTest extends GdxTest {
 		// Some debug rendering, bounding box & origin of one sprite
 		renderer.setProjectionMatrix(camera.combined);
 		renderer.setColor(Color.GREEN);
-		renderer.begin(ShapeType.Line);
+		renderer.begin(ShapeType.Rectangle);
 
 		PolygonSprite sprite = sprites.get(49);
 
@@ -106,9 +106,9 @@ public class PolygonSpriteTest extends GdxTest {
 
 		renderer.end();
 
-		renderer.begin(ShapeType.Filled);
+		renderer.begin(ShapeType.FilledCircle);
 
-		renderer.circle(sprite.getX() + sprite.getOriginX(), sprite.getY() + sprite.getOriginY(), 4);
+		renderer.filledCircle(sprite.getX() + sprite.getOriginX(), sprite.getY() + sprite.getOriginY(), 4);
 
 		renderer.end();
 	}
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/ShapeRendererAlphaTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/ShapeRendererAlphaTest.java
index a7f8106..7b8c260 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/ShapeRendererAlphaTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/ShapeRendererAlphaTest.java
@@ -38,24 +38,24 @@ public class ShapeRendererAlphaTest extends GdxTest {
 		Gdx.gl.glEnable(GL10.GL_BLEND);
 		Gdx.gl.glBlendFunc(GL10.GL_SRC_ALPHA, GL10.GL_ONE_MINUS_SRC_ALPHA);
 
-		renderer.begin(ShapeType.Line);
+		renderer.begin(ShapeType.Rectangle);
 		renderer.setColor(1, 0, 0, 0.5f);
 		renderer.rect(0, 0, 100, 200);
 		renderer.end();
 
-		renderer.begin(ShapeType.Filled);
+		renderer.begin(ShapeType.FilledRectangle);
 		renderer.setColor(0, 1, 0, 0.5f);
-		renderer.rect(200, 0, 100, 100);
+		renderer.filledRect(200, 0, 100, 100);
 		renderer.end();
 
-		renderer.begin(ShapeType.Line);
+		renderer.begin(ShapeType.Circle);
 		renderer.setColor(0, 1, 0, 0.5f);
 		renderer.circle(400, 50, 50);
 		renderer.end();
 
-		renderer.begin(ShapeType.Filled);
+		renderer.begin(ShapeType.FilledCircle);
 		renderer.setColor(1, 0, 1, 0.5f);
-		renderer.circle(500, 50, 50);
+		renderer.filledCircle(500, 50, 50);
 		renderer.end();
 	}
 
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/ShapeRendererTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/ShapeRendererTest.java
index 8ec3188..af2a020 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/ShapeRendererTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/ShapeRendererTest.java
@@ -17,7 +17,6 @@
 package com.badlogic.gdx.tests;
 
 import com.badlogic.gdx.Gdx;
-import com.badlogic.gdx.Input.Keys;
 import com.badlogic.gdx.graphics.Color;
 import com.badlogic.gdx.graphics.GL10;
 import com.badlogic.gdx.graphics.PerspectiveCamera;
@@ -54,7 +53,7 @@ public class ShapeRendererTest extends GdxTest {
 
 	public void render () {
 		Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT | GL10.GL_DEPTH_BUFFER_BIT);
-
+		Gdx.gl.glEnable(GL10.GL_DEPTH_TEST);
 		cam.update();
 		renderer.setProjectionMatrix(cam.combined);
 		renderer.identity();
@@ -62,59 +61,136 @@ public class ShapeRendererTest extends GdxTest {
 		renderer.translate(-0.5f, -0.5f, 0);
 
 		MathUtils.random.setSeed(0);
-		
+
+		renderer.begin(ShapeType.Line);
+		renderer.setColor(Color.GREEN);
+		for (int i = 0; i < 1000; i++) {
+			renderer.line(MathUtils.random(), MathUtils.random(), MathUtils.random(), MathUtils.random());
+		}
+		renderer.end();
+
 		renderer.begin(ShapeType.Point);
-		
-		renderer.setColor(Color.PINK);
-		for(int i=0; i<100; i++)
-			renderer.point(MathUtils.random(0.0f, 1.0f), MathUtils.random(0.0f, 1.0f), 0);
-		
+		renderer.setColor(Color.BLUE);
+		for (int i = 0; i < 1000; i++) {
+			renderer.point(MathUtils.random(), MathUtils.random(), MathUtils.random());
+		}
 		renderer.end();
 
-		if(Gdx.input.isKeyPressed(Keys.F)){
-			renderer.begin(ShapeType.Filled);
-			
-			renderer.setColor(Color.RED);
-			renderer.rect(0, 0, 1, 1);
-			
-			renderer.setColor(Color.BLUE);
-			renderer.circle(0.2f, 0.2f, 0.5f, 40);
-			
-			renderer.setColor(Color.GREEN);
-			renderer.cone(0.6f, 0.6f, 0, 0.3f, 0.75f, 20);
-			
-			renderer.setColor(Color.MAGENTA);
-			renderer.triangle(-0.1f, 0.1f, -0.6f, -0.1f, -0.3f, 0.5f);
-			
-			renderer.end();
+		renderer.begin(ShapeType.Rectangle);
+		renderer.setColor(Color.RED);
+		for (int i = 0; i < 20; i++) {
+			float x = MathUtils.random();
+			float y = MathUtils.random();
+			float width = MathUtils.random();
+			float height = MathUtils.random();
+			renderer.identity();
+			renderer.translate(-0.5f + x, -0.5f + y, MathUtils.random());
+			renderer.translate(width / 2, height / 2, 0);
+			renderer.rotate(0, 1, 0, MathUtils.random() * 360);
+			renderer.translate(-width / 2, -height / 2, 0);
+			renderer.rect(0, 0, width, height);
 		}
-		else {
-			renderer.begin(ShapeType.Line);
-			
-			renderer.setColor(Color.RED);
-			renderer.rect(0, 0, 1, 1);
-			
-			renderer.setColor(Color.BLUE);
-			renderer.circle(0.2f, 0.2f, 0.5f, 40);
-			
-			renderer.setColor(Color.YELLOW);
-			renderer.line(0, 0, 1, 1);
-			
-			renderer.setColor(Color.WHITE);
-			renderer.box(0.1f, 0.1f, 0.1f, 0.3f, 0.25f, 0.1f);
-			
-			renderer.setColor(Color.GREEN);
-			renderer.cone(0.6f, 0.6f, 0, 0.3f, 0.75f, 20);
-			
-			renderer.setColor(Color.MAGENTA);
-			renderer.triangle(-0.1f, 0.1f, -0.6f, -0.1f, -0.3f, 0.5f);
-
-			renderer.setColor(Color.CYAN);
-			renderer.curve(0.0f, 0.25f, 0.2f, 0.3f, 0.3f, 0.6f, 0.1f, 0.5f, 30);
-			
-			renderer.end();
+		renderer.end();
+
+		renderer.begin(ShapeType.FilledRectangle);
+		renderer.setColor(Color.WHITE);
+		for (int i = 0; i < 20; i++) {
+			float x = MathUtils.random();
+			float y = MathUtils.random();
+			float width = MathUtils.random();
+			float height = MathUtils.random();
+			renderer.identity();
+			renderer.translate(-0.5f + x, -0.5f + y, -MathUtils.random());
+			renderer.translate(width / 2, height / 2, 0);
+			renderer.rotate(0, 1, 0, MathUtils.random() * 360);
+			renderer.translate(-width / 2, -height / 2, 0);
+			renderer.filledRect(0, 0, width, height);
+		}
+		renderer.end();
+
+		renderer.begin(ShapeType.Box);
+		renderer.setColor(1, 1, 0, 1);
+		for (int i = 0; i < 20; i++) {
+			float x = MathUtils.random();
+			float y = MathUtils.random();
+			float width = MathUtils.random();
+			float height = MathUtils.random();
+			float depth = MathUtils.random();
+			renderer.identity();
+			renderer.translate(-1.5f + x, -0.5f + y, MathUtils.random());
+			renderer.translate(width / 2, height / 2, depth / 2);
+			renderer.rotate(0, 1, 0, MathUtils.random() * 360);
+			renderer.translate(-width / 2, -height / 2, depth / 2);
+			renderer.box(0, 0, 0, width, height, depth);
+		}
+		renderer.end();
+
+		renderer.begin(ShapeType.Circle);
+		renderer.setColor(1, 0, 1, 1);
+		renderer.identity();
+		for (int i = 0; i < 20; i++) {
+			float x = MathUtils.random();
+			float y = MathUtils.random();
+			float radius = MathUtils.random();
+			renderer.circle(x, y, radius, 40);
 		}
-		
+		renderer.end();
+
+		renderer.begin(ShapeType.FilledCircle);
+		renderer.setColor(0, 1, 1, 1);
+		renderer.identity();
+		renderer.rotate(0, 1, 0, 45);
+		for (int i = 0; i < 5; i++) {
+			float x = MathUtils.random();
+			float y = MathUtils.random();
+			float width = MathUtils.random();
+			float height = MathUtils.random();
+			renderer.identity();
+			renderer.translate(0.5f + x, -0.5f + y, -MathUtils.random());
+			renderer.translate(width / 2, height / 2, 0);
+			renderer.rotate(0, 1, 0, MathUtils.random() * 360);
+			renderer.translate(-width / 2, -height / 2, 0);
+			renderer.filledCircle(0, 0, width, 40);
+		}
+		renderer.end();
+
+		renderer.begin(ShapeType.Triangle);
+		renderer.setColor(0, 0, 1, 1);
+		renderer.identity();
+		renderer.rotate(0, 1, 0, 45);
+		for (int i = 0; i < 15; i++) {
+			float x = MathUtils.random();
+			float y = MathUtils.random();
+			float width = MathUtils.random();
+			float height = MathUtils.random();
+			renderer.identity();
+			renderer.translate(-0.5f + x, -0.5f + y, -MathUtils.random());
+			renderer.translate(width / 2, height / 2, 0);
+			renderer.rotate(0, 1, 0, MathUtils.random() * 360);
+			renderer.translate(-width / 2, -height / 2, 0);
+			renderer.triangle(0, 0, width, 0, 0, height);
+		}
+		renderer.end();
+
+		renderer.begin(ShapeType.FilledTriangle);
+		renderer.setColor(0, 0, 1, 1);
+		renderer.identity();
+		renderer.rotate(0, 1, 0, 45);
+		for (int i = 0; i < 15; i++) {
+			float x = MathUtils.random();
+			float y = MathUtils.random();
+			float width = MathUtils.random();
+			float height = MathUtils.random();
+			renderer.identity();
+			renderer.translate(0.5f + x, -0.5f + y, -MathUtils.random());
+			renderer.translate(width / 2, height / 2, 0);
+			renderer.rotate(0, 1, 0, MathUtils.random() * 360);
+			renderer.translate(-width / 2, -height / 2, 0);
+			renderer.filledTriangle(0, 0, width, 0, 0, height);
+		}
+		renderer.end();
+
+		Gdx.gl.glDisable(GL10.GL_DEPTH_TEST);
 		batch.begin();
 		font.draw(batch, "fps: " + Gdx.graphics.getFramesPerSecond(), 0, 20);
 		batch.end();
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/SplineTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/SplineTest.java
new file mode 100644
index 0000000..afde2e3
--- /dev/null
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/SplineTest.java
@@ -0,0 +1,125 @@
+/*******************************************************************************
+ * Copyright 2011 See AUTHORS file.
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/
+
+package com.badlogic.gdx.tests;
+
+import com.badlogic.gdx.Gdx;
+import com.badlogic.gdx.graphics.GL10;
+import com.badlogic.gdx.graphics.OrthographicCamera;
+import com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer10;
+import com.badlogic.gdx.math.CatmullRomSpline;
+import com.badlogic.gdx.math.Vector3;
+import com.badlogic.gdx.tests.utils.GdxTest;
+
+public class SplineTest extends GdxTest {
+
+	@Override
+	public boolean needsGL20 () {
+		return false;
+	}
+
+	final int CONTROL_POINTS = 10;
+	OrthographicCamera cam;
+	ImmediateModeRenderer10 renderer;
+	CatmullRomSpline spline;
+	Vector3[] path;
+
+	@Override
+	public void create () {
+		cam = new OrthographicCamera(Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
+		cam.position.set(Gdx.graphics.getWidth() / 2, Gdx.graphics.getHeight() / 2, 0);
+		renderer = new ImmediateModeRenderer10();
+		spline = new CatmullRomSpline();
+		float x = 0;
+		float y = Gdx.graphics.getHeight() / 2;
+		spline.add(new Vector3(x - 50, y, 0));
+		for (int i = 0; i < CONTROL_POINTS; i++) {
+			spline.add(new Vector3(x, y, 0));
+			x += Gdx.graphics.getWidth() / (CONTROL_POINTS - 2);
+		}
+		spline.add(new Vector3(Gdx.graphics.getWidth() + 50, y, 0));
+		path = new Vector3[(CONTROL_POINTS - 2) * 7 - 1];
+		for (int i = 0; i < path.length; i++)
+			path[i] = new Vector3();
+		spline.getPath(path, 5);
+	}
+
+	@Override
+	public void render () {
+		Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
+		cam.update();
+		Gdx.gl10.glMatrixMode(GL10.GL_PROJECTION);
+		Gdx.gl10.glLoadMatrixf(cam.projection.val, 0);
+		Gdx.gl10.glMatrixMode(GL10.GL_MODELVIEW);
+		Gdx.gl10.glLoadMatrixf(cam.view.val, 0);
+
+		renderer.begin(GL10.GL_TRIANGLES);
+		for (int i = 0; i < path.length - 1; i++) {
+			Vector3 point1 = path[i];
+			Vector3 point2 = path[i + 1];
+			renderer.color(1, 1, 1, 1);
+			renderer.vertex(point1.x, point1.y, 0);
+			renderer.color(1, 1, 1, 1);
+			renderer.vertex(point1.x, 0, 0);
+			renderer.color(1, 1, 1, 1);
+			renderer.vertex(point2.x, point2.y, 0);
+
+			renderer.color(1, 1, 1, 1);
+			renderer.vertex(point2.x, point2.y, 0);
+			renderer.color(1, 1, 1, 1);
+			renderer.vertex(point1.x, 0, 0);
+			renderer.color(1, 1, 1, 1);
+			renderer.vertex(point2.x, 0, 0);
+		}
+		renderer.end();
+
+		Gdx.gl10.glPointSize(4);
+		renderer.begin(GL10.GL_POINTS);
+		for (int i = 0; i < spline.getControlPoints().size(); i++) {
+			Vector3 point = spline.getControlPoints().get(i);
+			renderer.color(1, 0, 0, 1);
+			renderer.vertex(point.x, point.y, 0);
+		}
+		renderer.end();
+		Gdx.gl10.glPointSize(1);
+
+		processInput();
+	}
+
+	Vector3 point = new Vector3();
+
+	private void processInput () {
+// if(Gdx.input.isTouched()) {
+// Vector3 nearest = null;
+// float nearestDist = Float.MAX_VALUE;
+// point.set(cam.getScreenToWorldX(Gdx.input.getX()),
+// cam.getScreenToWorldY(Gdx.input.getY()),
+// 0);
+//
+// for(int i = 0; i < spline.getControlPoints().size(); i++) {
+// Vector3 controlPoint = spline.getControlPoints().get(i);
+// float dist = Math.abs(point.x - controlPoint.x);
+// if(dist < nearestDist) {
+// nearest = controlPoint;
+// nearestDist = dist;
+// }
+// }
+//
+// nearest.y += (point.y - nearest.y) * Gdx.graphics.getDeltaTime();
+// spline.getPath(path, 5);
+// }
+	}
+}
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/SpriteCacheTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/SpriteCacheTest.java
index 23df674..14e6f64 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/SpriteCacheTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/SpriteCacheTest.java
@@ -82,8 +82,9 @@ public class SpriteCacheTest extends GdxTest implements InputProcessor {
 	}
 
 	private void renderSprites () {
-		Gdx.gl.glClearColor(0.7f, 0.7f, 0.7f, 1);
-		Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
+		GL10 gl = Gdx.graphics.getGL10();
+		gl.glClearColor(0.7f, 0.7f, 0.7f, 1);
+		gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
 
 		float begin = 0;
 		float end = 0;
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/StageTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/StageTest.java
index 20052b0..d58f387 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/StageTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/StageTest.java
@@ -147,8 +147,6 @@ public class StageTest extends GdxTest implements InputProcessor {
 			}
 	}
 
-	private final Vector2 stageCoords = new Vector2();
-
 	@Override
 	public void render () {
 		Gdx.gl.glViewport(0, 0, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
@@ -156,6 +154,7 @@ public class StageTest extends GdxTest implements InputProcessor {
 		Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
 
 		if (Gdx.input.isTouched()) {
+			Vector2 stageCoords = Vector2.tmp;
 			stage.screenToStageCoordinates(stageCoords.set(Gdx.input.getX(), Gdx.input.getY()));
 			Actor actor = stage.hit(stageCoords.x, stageCoords.y, true);
 			if (actor instanceof Image)
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/TextureAtlasTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/TextureAtlasTest.java
index 49d1b5a..a3e8611 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/TextureAtlasTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/TextureAtlasTest.java
@@ -90,7 +90,7 @@ public class TextureAtlasTest extends GdxTest {
 		// star.draw(batch);
 		// font.draw(batch, "This font was packed!", 26, 65);
 		badlogicSmall.draw(batch);
-		renderer.begin(ShapeType.Line);
+		renderer.begin(ShapeType.Rectangle);
 		renderer.rect(10, 10, 256, 256);
 		renderer.end();
 		// batch.draw(jumpAnimation.getKeyFrame(time, true), 100, 100);
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/TideMapAssetManagerTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/TideMapAssetManagerTest.java
deleted file mode 100644
index bc3eabb..0000000
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/TideMapAssetManagerTest.java
+++ /dev/null
@@ -1,69 +0,0 @@
-package com.badlogic.gdx.tests;
-
-import com.badlogic.gdx.Gdx;
-import com.badlogic.gdx.assets.AssetManager;
-import com.badlogic.gdx.assets.loaders.resolvers.InternalFileHandleResolver;
-import com.badlogic.gdx.graphics.GL10;
-import com.badlogic.gdx.graphics.OrthographicCamera;
-import com.badlogic.gdx.graphics.g2d.BitmapFont;
-import com.badlogic.gdx.graphics.g2d.SpriteBatch;
-import com.badlogic.gdx.maps.tiled.TideMapLoader;
-import com.badlogic.gdx.maps.tiled.TiledMap;
-import com.badlogic.gdx.maps.tiled.TiledMapRenderer;
-import com.badlogic.gdx.maps.tiled.TmxMapLoader;
-import com.badlogic.gdx.maps.tiled.renderers.IsometricTiledMapRenderer;
-import com.badlogic.gdx.maps.tiled.renderers.OrthogonalTiledMapRenderer;
-import com.badlogic.gdx.tests.utils.GdxTest;
-import com.badlogic.gdx.tests.utils.OrthoCamController;
-
-public class TideMapAssetManagerTest extends GdxTest {
-	
-	private TiledMap map;
-	private TiledMapRenderer renderer;
-	private OrthographicCamera camera;
-	private OrthoCamController cameraController;
-	private AssetManager assetManager;
-	private BitmapFont font;
-	private SpriteBatch batch;
-	
-	@Override
-	public void create() {		
-		float w = Gdx.graphics.getWidth();
-		float h = Gdx.graphics.getHeight();
-		
-		camera = new OrthographicCamera();
-		camera.setToOrtho(false, (w / h) * 10, 10);
-		camera.zoom = 2;
-		camera.update();
-		
-		cameraController = new OrthoCamController(camera);
-		Gdx.input.setInputProcessor(cameraController);
-	
-		font = new BitmapFont();
-		batch = new SpriteBatch();
-		
-		assetManager = new AssetManager();
-		assetManager.setLoader(TiledMap.class, new TideMapLoader(new InternalFileHandleResolver()));
-		assetManager.load("data/maps/tide/Map01.tide", TiledMap.class);
-		assetManager.finishLoading();
-		map = assetManager.get("data/maps/tide/Map01.tide");
-		renderer = new OrthogonalTiledMapRenderer(map, 1f / 32f);
-	}
-
-	@Override
-	public void render() {
-		Gdx.gl.glClearColor(0.55f, 0.55f, 0.55f, 1f);
-		Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
-		camera.update();
-		renderer.setView(camera);
-		renderer.render();
-		batch.begin();
-		font.draw(batch, "FPS: " + Gdx.graphics.getFramesPerSecond(), 10, 20); 
-		batch.end();
-	}
-	
-	@Override
-	public boolean needsGL20 () {
-		return true;
-	}
-}
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/TideMapDirectLoaderTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/TideMapDirectLoaderTest.java
deleted file mode 100644
index 1fb4ea9..0000000
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/TideMapDirectLoaderTest.java
+++ /dev/null
@@ -1,64 +0,0 @@
-package com.badlogic.gdx.tests;
-
-import com.badlogic.gdx.Gdx;
-import com.badlogic.gdx.graphics.GL10;
-import com.badlogic.gdx.graphics.OrthographicCamera;
-import com.badlogic.gdx.graphics.g2d.BitmapFont;
-import com.badlogic.gdx.graphics.g2d.SpriteBatch;
-import com.badlogic.gdx.maps.tiled.TideMapLoader;
-import com.badlogic.gdx.maps.tiled.TiledMap;
-import com.badlogic.gdx.maps.tiled.TiledMapRenderer;
-import com.badlogic.gdx.maps.tiled.renderers.OrthogonalTiledMapRenderer;
-import com.badlogic.gdx.tests.utils.GdxTest;
-import com.badlogic.gdx.tests.utils.OrthoCamController;
-
-public class TideMapDirectLoaderTest extends GdxTest {
-	
-	private TiledMap map;
-	private TiledMapRenderer renderer;
-	private OrthographicCamera camera;
-	private OrthoCamController cameraController;
-	private BitmapFont font;
-	private SpriteBatch batch;
-	
-	@Override
-	public void create() {		
-		float w = Gdx.graphics.getWidth();
-		float h = Gdx.graphics.getHeight();
-		
-		camera = new OrthographicCamera();
-		camera.setToOrtho(false, (w / h) * 10, 10);
-		camera.update();
-		
-		cameraController = new OrthoCamController(camera);
-		Gdx.input.setInputProcessor(cameraController);
-	
-		font = new BitmapFont();
-		batch = new SpriteBatch();
-		
-		map = new TideMapLoader().load("data/maps/tide/Map01.tide");
-		renderer = new OrthogonalTiledMapRenderer(map, 1f / 32f);
-	}
-
-	@Override
-	public void render() {
-		Gdx.gl.glClearColor(0.55f, 0.55f, 0.55f, 1f);
-		Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
-		camera.update();
-		renderer.setView(camera);
-		renderer.render();
-		batch.begin();
-		font.draw(batch, "FPS: " + Gdx.graphics.getFramesPerSecond(), 10, 20); 
-		batch.end();
-	}
-	
-	@Override
-	public boolean needsGL20 () {
-		return true;
-	}
-
-	@Override
-	public void dispose () {
-		map.dispose();
-	}
-}
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/TiledMapAssetManagerTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/TiledMapAssetManagerTest.java
deleted file mode 100644
index 531898f..0000000
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/TiledMapAssetManagerTest.java
+++ /dev/null
@@ -1,67 +0,0 @@
-package com.badlogic.gdx.tests;
-
-import com.badlogic.gdx.Gdx;
-import com.badlogic.gdx.assets.AssetManager;
-import com.badlogic.gdx.assets.loaders.resolvers.InternalFileHandleResolver;
-import com.badlogic.gdx.graphics.GL10;
-import com.badlogic.gdx.graphics.OrthographicCamera;
-import com.badlogic.gdx.graphics.g2d.BitmapFont;
-import com.badlogic.gdx.graphics.g2d.SpriteBatch;
-import com.badlogic.gdx.maps.tiled.TiledMap;
-import com.badlogic.gdx.maps.tiled.TiledMapRenderer;
-import com.badlogic.gdx.maps.tiled.TmxMapLoader;
-import com.badlogic.gdx.maps.tiled.renderers.IsometricTiledMapRenderer;
-import com.badlogic.gdx.tests.utils.GdxTest;
-import com.badlogic.gdx.tests.utils.OrthoCamController;
-
-public class TiledMapAssetManagerTest extends GdxTest {
-	
-	private TiledMap map;
-	private TiledMapRenderer renderer;
-	private OrthographicCamera camera;
-	private OrthoCamController cameraController;
-	private AssetManager assetManager;
-	private BitmapFont font;
-	private SpriteBatch batch;
-	
-	@Override
-	public void create() {		
-		float w = Gdx.graphics.getWidth();
-		float h = Gdx.graphics.getHeight();
-		
-		camera = new OrthographicCamera();
-		camera.setToOrtho(false, (w / h) * 10, 10);
-		camera.zoom = 2;
-		camera.update();
-		
-		cameraController = new OrthoCamController(camera);
-		Gdx.input.setInputProcessor(cameraController);
-	
-		font = new BitmapFont();
-		batch = new SpriteBatch();
-		
-		assetManager = new AssetManager();
-		assetManager.setLoader(TiledMap.class, new TmxMapLoader(new InternalFileHandleResolver()));
-		assetManager.load("data/maps/tiled/isometric_grass_and_water.tmx", TiledMap.class);
-		assetManager.finishLoading();
-		map = assetManager.get("data/maps/tiled/isometric_grass_and_water.tmx");
-		renderer = new IsometricTiledMapRenderer(map, 1f / 64f);
-	}
-
-	@Override
-	public void render() {
-		Gdx.gl.glClearColor(100f / 255f, 100f / 255f, 250f / 255f, 1f);
-		Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
-		camera.update();
-		renderer.setView(camera);
-		renderer.render();
-		batch.begin();
-		font.draw(batch, "FPS: " + Gdx.graphics.getFramesPerSecond(), 10, 20); 
-		batch.end();
-	}
-	
-	@Override
-	public boolean needsGL20 () {
-		return true;
-	}
-}
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/TiledMapDirectLoaderTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/TiledMapDirectLoaderTest.java
deleted file mode 100755
index e254b6f..0000000
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/TiledMapDirectLoaderTest.java
+++ /dev/null
@@ -1,64 +0,0 @@
-package com.badlogic.gdx.tests;
-
-import com.badlogic.gdx.Gdx;
-import com.badlogic.gdx.graphics.GL10;
-import com.badlogic.gdx.graphics.OrthographicCamera;
-import com.badlogic.gdx.graphics.g2d.BitmapFont;
-import com.badlogic.gdx.graphics.g2d.SpriteBatch;
-import com.badlogic.gdx.maps.tiled.TiledMap;
-import com.badlogic.gdx.maps.tiled.TiledMapRenderer;
-import com.badlogic.gdx.maps.tiled.TmxMapLoader;
-import com.badlogic.gdx.maps.tiled.renderers.OrthogonalTiledMapRenderer;
-import com.badlogic.gdx.tests.utils.GdxTest;
-import com.badlogic.gdx.tests.utils.OrthoCamController;
-
-public class TiledMapDirectLoaderTest extends GdxTest {
-	
-	private TiledMap map;
-	private TiledMapRenderer renderer;
-	private OrthographicCamera camera;
-	private OrthoCamController cameraController;
-	private BitmapFont font;
-	private SpriteBatch batch;
-	
-	@Override
-	public void create() {		
-		float w = Gdx.graphics.getWidth();
-		float h = Gdx.graphics.getHeight();
-		
-		camera = new OrthographicCamera();
-		camera.setToOrtho(false, (w / h) * 10, 10);
-		camera.update();
-		
-		cameraController = new OrthoCamController(camera);
-		Gdx.input.setInputProcessor(cameraController);
-	
-		font = new BitmapFont();
-		batch = new SpriteBatch();
-		
-		map = new TmxMapLoader().load("data/maps/tiled/super-koalio/level1.tmx");
-		renderer = new OrthogonalTiledMapRenderer(map, 1f / 32f);
-	}
-
-	@Override
-	public void render() {
-		Gdx.gl.glClearColor(0.55f, 0.55f, 0.55f, 1f);
-		Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
-		camera.update();
-		renderer.setView(camera);
-		renderer.render();
-		batch.begin();
-		font.draw(batch, "FPS: " + Gdx.graphics.getFramesPerSecond(), 10, 20); 
-		batch.end();
-	}
-	
-	@Override
-	public boolean needsGL20 () {
-		return true;
-	}
-
-	@Override
-	public void dispose () {
-		map.dispose();
-	}
-}
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/TiledMapTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/TiledMapTest.java
new file mode 100644
index 0000000..d4f6516
--- /dev/null
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/TiledMapTest.java
@@ -0,0 +1,159 @@
+/*******************************************************************************
+ * Copyright 2011 See AUTHORS file.
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/
+
+package com.badlogic.gdx.tests;
+
+import com.badlogic.gdx.Gdx;
+import com.badlogic.gdx.files.FileHandle;
+import com.badlogic.gdx.graphics.Color;
+import com.badlogic.gdx.graphics.GL10;
+import com.badlogic.gdx.graphics.OrthographicCamera;
+import com.badlogic.gdx.graphics.g2d.BitmapFont;
+import com.badlogic.gdx.graphics.g2d.SpriteBatch;
+import com.badlogic.gdx.graphics.g2d.tiled.TileAtlas;
+import com.badlogic.gdx.graphics.g2d.tiled.TileMapRenderer;
+import com.badlogic.gdx.graphics.g2d.tiled.TiledLoader;
+import com.badlogic.gdx.graphics.g2d.tiled.TiledMap;
+import com.badlogic.gdx.graphics.g2d.tiled.TiledObject;
+import com.badlogic.gdx.graphics.g2d.tiled.TiledObjectGroup;
+import com.badlogic.gdx.math.Vector2;
+import com.badlogic.gdx.math.Vector3;
+import com.badlogic.gdx.tests.utils.GdxTest;
+import com.badlogic.gdx.tests.utils.OrthoCamController;
+
+/** @author David Fraska */
+public class TiledMapTest extends GdxTest {
+
+	private static final boolean automove = false;
+
+	private static final int[] layersList = {2, 3};
+
+	SpriteBatch spriteBatch;
+	BitmapFont font;
+
+	OrthographicCamera cam;
+	OrthoCamController camController;
+	Vector3 camDirection = new Vector3(1, 1, 0);
+	Vector2 maxCamPosition = new Vector2(0, 0);
+
+	TileMapRenderer tileMapRenderer;
+	TiledMap map;
+	TileAtlas atlas;
+
+	long startTime = System.nanoTime();
+	Vector3 tmp = new Vector3();
+
+	@Override
+	public void render () {
+		Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
+
+		if (automove) {
+			updateCameraPosition();
+		}
+
+		cam.zoom = 0.9f;
+		cam.update();
+		// tileMapRenderer.getProjectionMatrix().set(cam.combined); //Not required when using tileMapRenderer.render(cam)
+		tileMapRenderer.render(cam);// , layersList);
+
+		spriteBatch.begin();
+		font.draw(spriteBatch, "FPS: " + Gdx.graphics.getFramesPerSecond(), 20, 20);
+		font.draw(spriteBatch, "InitialCol, LastCol: " + tileMapRenderer.getInitialCol() + "," + tileMapRenderer.getLastCol(), 20,
+			40);
+		font.draw(spriteBatch, "InitialRow, LastRow: " + tileMapRenderer.getInitialRow() + "," + tileMapRenderer.getLastRow(), 20,
+			60);
+
+		tmp.set(0, 0, 0);
+		cam.unproject(tmp);
+		font.draw(spriteBatch, "Location: " + tmp.x + "," + tmp.y, 20, 80);
+		spriteBatch.end();
+	}
+
+	private void updateCameraPosition () {
+		cam.position.add(camDirection.tmp().mul(Gdx.graphics.getDeltaTime()).mul(5 * tileMapRenderer.getUnitsPerTileX()));
+
+		if (cam.position.x < 0) {
+			cam.position.x = 0;
+			camDirection.x = 1;
+		}
+		if (cam.position.x > maxCamPosition.x) {
+			cam.position.x = maxCamPosition.x;
+			camDirection.x = -1;
+		}
+		if (cam.position.y < 0) {
+			cam.position.y = 0;
+			camDirection.y = 1;
+		}
+		if (cam.position.y > maxCamPosition.y) {
+			cam.position.y = maxCamPosition.y;
+			camDirection.y = -1;
+		}
+	}
+
+	@Override
+	public void create () {
+		int i;
+		long startTime, endTime;
+		font = new BitmapFont();
+		font.setColor(Color.RED);
+
+		spriteBatch = new SpriteBatch();
+
+		final String path = "data/tiledmap/flip_rotate/";
+		final String mapname = "flip_rotate";
+
+		FileHandle mapHandle = Gdx.files.internal(path + mapname + ".tmx");
+		FileHandle baseDir = Gdx.files.internal(path);
+
+		startTime = System.currentTimeMillis();
+		map = TiledLoader.createMap(mapHandle);
+		endTime = System.currentTimeMillis();
+		System.out.println("Loaded map in " + (endTime - startTime) + "mS");
+
+		atlas = new TileAtlas(map, baseDir);
+
+		int blockWidth = 15;
+		int blockHeight = 10;
+
+		startTime = System.currentTimeMillis();
+
+		tileMapRenderer = new TileMapRenderer(map, atlas, blockWidth, blockHeight, 16, 16);
+		endTime = System.currentTimeMillis();
+		System.out.println("Created cache in " + (endTime - startTime) + "mS");
+
+		for (TiledObjectGroup group : map.objectGroups) {
+			for (TiledObject object : group.objects) {
+				// TODO: Draw sprites where objects occur
+				System.out.println("Object " + object.name + " x,y = " + object.x + "," + object.y + " width,height = "
+					+ object.width + "," + object.height);
+			}
+		}
+
+		float aspectRatio = (float)Gdx.graphics.getWidth() / (float)Gdx.graphics.getHeight();
+		cam = new OrthographicCamera(100f * aspectRatio, 100f);
+
+		cam.position.set(tileMapRenderer.getMapWidthUnits() / 2, tileMapRenderer.getMapHeightUnits() / 2, 0);
+		camController = new OrthoCamController(cam);
+		Gdx.input.setInputProcessor(camController);
+
+		maxCamPosition.set(tileMapRenderer.getMapWidthUnits(), tileMapRenderer.getMapHeightUnits());
+	}
+
+	@Override
+	public boolean needsGL20 () {
+		return false;
+	}
+}
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/UITest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/UITest.java
index e3e5ef0..9fcd3f4 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/UITest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/UITest.java
@@ -163,6 +163,7 @@ public class UITest extends GdxTest {
 					.key(Keys.ESCAPE, false).show(stage);
 			}
 		});
+
 	}
 
 	@Override
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/Vector2dTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/Vector2dTest.java
deleted file mode 100644
index 7ec06fc..0000000
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/Vector2dTest.java
+++ /dev/null
@@ -1,97 +0,0 @@
-package com.badlogic.gdx.tests;
-
-import com.badlogic.gdx.Gdx;
-import com.badlogic.gdx.graphics.Color;
-import com.badlogic.gdx.graphics.GL10;
-import com.badlogic.gdx.graphics.OrthographicCamera;
-import com.badlogic.gdx.graphics.glutils.ShapeRenderer;
-import com.badlogic.gdx.graphics.glutils.ShapeRenderer.ShapeType;
-import com.badlogic.gdx.math.MathUtils;
-import com.badlogic.gdx.math.Vector2;
-import com.badlogic.gdx.scenes.scene2d.Stage;
-import com.badlogic.gdx.scenes.scene2d.ui.Table;
-import com.badlogic.gdx.tests.utils.GdxTest;
-
-public class Vector2dTest extends GdxTest {
-	private ShapeRenderer renderer;
-	private OrthographicCamera camera;
-
-	private Vector2 rotating = new Vector2(Vector2.X);
-	private Vector2 scalingX = new Vector2(Vector2.Y);
-	private Vector2 scalingY = new Vector2(Vector2.X);
-	private Vector2 lerping1 = new Vector2(Vector2.X);
-	private Vector2 lerpTarget = new Vector2(Vector2.Y);
-	private Vector2 sum = new Vector2().add(Vector2.X).add(Vector2.Y).nor();
-	private Vector2 mash = new Vector2(Vector2.Y);
-
-	
-	private final long start = System.currentTimeMillis();
-	
-	@Override
-	public void create () {
-		renderer = new ShapeRenderer();
-	}
-	
-	private void renderVectorAt(float x, float y, Vector2 v) {
-		renderer.line(x, y, x + v.x, y + v.y);
-	}
-
-	@Override
-	public void render () {
-		Gdx.gl.glClearColor(0, 0, 0, 0);
-		Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
-		
-		renderer.setProjectionMatrix(camera.combined);
-		
-		// Render the 'lerp' vector target as a circle
-		renderer.begin(ShapeType.Filled);
-		renderer.setColor(1.0f, 0, 0, 0.3f);
-		renderer.circle(-2 + lerpTarget.x, 2 + lerpTarget.y , 0.08f, 16);
-		renderer.end();
-
-		renderer.begin(ShapeType.Line);
-		
-		// Render the three fixed X, Y and sum vectors:
-		renderer.setColor(Color.RED);
-		renderVectorAt(0, 0, Vector2.X);
-		renderer.setColor(Color.GREEN);
-		renderVectorAt(0, 0, Vector2.Y);
-		renderer.setColor(Color.YELLOW);
-		renderVectorAt(0, 0, sum);
-		
-		final float changeRate = Gdx.graphics.getDeltaTime();
-		renderer.setColor(Color.WHITE);
-		
-		renderVectorAt(2, 2, rotating);
-		rotating.rotate(93 * changeRate);
-		
-		renderVectorAt(2, -2, scalingX);
-		scalingX.set(0, MathUtils.sin((System.currentTimeMillis() - start)/520.0f));
-		renderVectorAt(2, -2, scalingY);
-		scalingY.set(MathUtils.cos((System.currentTimeMillis() - start)/260.0f), 0);
-		
-		renderVectorAt(-2, 2, lerping1);
-		lerping1.lerp(lerpTarget, 0.025f);
-		if (lerping1.epsilonEquals(lerpTarget, 0.05f)) {
-			lerpTarget.set(-1.0f + MathUtils.random(2.0f), -1.0f + MathUtils.random(2.0f)).nor();
-		}
-
-		renderVectorAt(-2, -2, mash);
-		mash.set(0, 0).add(rotating).add(scalingX).add(scalingY).add(lerping1);
-	
-		renderer.end();
-	}
-
-	@Override
-	public void resize (int width, int height) {
-		float ratio = ((float)Gdx.graphics.getWidth() / (float)Gdx.graphics.getHeight());
-		int h = 10;
-		int w = (int)(h * ratio);
-		camera = new OrthographicCamera(w, h);
-	}
-	
-	@Override
-	public boolean needsGL20 () {
-		return false;
-	}
-}
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/bench/TiledMapBench.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/bench/TiledMapBench.java
deleted file mode 100644
index 1462cc1..0000000
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/bench/TiledMapBench.java
+++ /dev/null
@@ -1,86 +0,0 @@
-package com.badlogic.gdx.tests.bench;
-
-import com.badlogic.gdx.Gdx;
-import com.badlogic.gdx.InputAdapter;
-import com.badlogic.gdx.assets.AssetManager;
-import com.badlogic.gdx.graphics.GL10;
-import com.badlogic.gdx.graphics.OrthographicCamera;
-import com.badlogic.gdx.graphics.Texture;
-import com.badlogic.gdx.graphics.g2d.BitmapFont;
-import com.badlogic.gdx.graphics.g2d.SpriteBatch;
-import com.badlogic.gdx.graphics.g2d.TextureRegion;
-import com.badlogic.gdx.maps.MapLayers;
-import com.badlogic.gdx.maps.tiled.TiledMap;
-import com.badlogic.gdx.maps.tiled.TiledMapRenderer;
-import com.badlogic.gdx.maps.tiled.TiledMapTileLayer;
-import com.badlogic.gdx.maps.tiled.TiledMapTileLayer.Cell;
-import com.badlogic.gdx.maps.tiled.renderers.OrthogonalTiledMapRenderer;
-import com.badlogic.gdx.maps.tiled.renderers.OrthogonalTiledMapRenderer2;
-import com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile;
-import com.badlogic.gdx.math.Vector3;
-import com.badlogic.gdx.tests.utils.GdxTest;
-import com.badlogic.gdx.tests.utils.OrthoCamController;
-
-public class TiledMapBench extends GdxTest {
-	
-	private TiledMap map;
-	private TiledMapRenderer renderer;
-	private OrthographicCamera camera;
-	private OrthoCamController cameraController;
-	private AssetManager assetManager;
-	private Texture tiles;
-	private Texture texture;
-	private BitmapFont font;
-	private SpriteBatch batch;
-	
-	@Override
-	public void create() {		
-		float w = Gdx.graphics.getWidth();
-		float h = Gdx.graphics.getHeight();
-		
-		camera = new OrthographicCamera();
-		camera.setToOrtho(false, (w / h) * 320, 320);
-		camera.update();
-		
-		cameraController = new OrthoCamController(camera);
-		Gdx.input.setInputProcessor(cameraController);
-	
-		font = new BitmapFont();
-		batch = new SpriteBatch();
-		
-		{
-			tiles = new Texture(Gdx.files.internal("data/maps/tiled/tiles.png"));
-			TextureRegion[][] splitTiles = TextureRegion.split(tiles, 32, 32);
-			map = new TiledMap();
-			MapLayers layers = map.getLayers();
-			for (int l = 0; l < 20; l++) {
-				TiledMapTileLayer layer = new TiledMapTileLayer(150, 100, 32, 32);
-				for (int x = 0; x < 150; x++) {
-					for (int y = 0; y < 100; y++) {
-						int ty = (int)(Math.random() * splitTiles.length);
-						int tx = (int)(Math.random() * splitTiles[ty].length);
-						Cell cell = new Cell();
-						cell.setTile(new StaticTiledMapTile(splitTiles[ty][tx]));
-						layer.setCell(x, y, cell);
-					}
-				}
-				layers.add(layer);
-			}
-		}
-		
-		renderer = new OrthogonalTiledMapRenderer2(map);
-
-	}
-
-	@Override
-	public void render() {
-		Gdx.gl.glClearColor(100f / 255f, 100f / 255f, 250f / 255f, 1f);
-		Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
-		camera.update();
-		renderer.setView(camera);
-		renderer.render();
-		batch.begin();
-		font.draw(batch, "FPS: " + Gdx.graphics.getFramesPerSecond(), 10, 20); 
-		batch.end();
-	}
-}
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BaseBulletTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BaseBulletTest.java
index e3b25a9..d800d37 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BaseBulletTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BaseBulletTest.java
@@ -31,7 +31,6 @@ import com.badlogic.gdx.math.collision.Ray;
 import com.badlogic.gdx.physics.bullet.Bullet;
 import com.badlogic.gdx.physics.bullet.btIDebugDraw;
 import com.badlogic.gdx.physics.bullet.btIDebugDraw.DebugDrawModes;
-import com.badlogic.gdx.physics.bullet.btRigidBody;
 import com.badlogic.gdx.physics.bullet.btTransform;
 import com.badlogic.gdx.utils.SharedLibraryLoader;
 
@@ -113,64 +112,42 @@ public class BaseBulletTest extends BulletTest {
 	
 	@Override
 	public void render () {
-		render(true);
-	}
-		
-	public void render(boolean update) {
 		fpsCounter.put(Gdx.graphics.getFramesPerSecond());
 		
-		if (update)
-			update();
-		
-		beginRender(true);
-
-		renderWorld();
-		
-		performance.setLength(0);
-		performance.append("FPS: ").append(fpsCounter.value).append(", Bullet: ")
-			.append((int)(performanceCounter.load.value*100f)).append("%");
-	}
-	
-	protected void beginRender(boolean lighting) {
 		GL10 gl = Gdx.gl10;
 		gl.glClear(GL10.GL_COLOR_BUFFER_BIT | GL10.GL_DEPTH_BUFFER_BIT);
 		gl.glEnable(GL10.GL_DEPTH_TEST);
 		gl.glDepthFunc(GL10.GL_LEQUAL);
 		gl.glEnable(GL10.GL_COLOR_MATERIAL);
-		if (lighting) {
-			gl.glEnable(GL10.GL_LIGHTING);
-			gl.glEnable(GL10.GL_LIGHT0);
-			gl.glLightfv(GL10.GL_LIGHT0, GL10.GL_AMBIENT, lightAmbient, 0);
-			gl.glLightfv(GL10.GL_LIGHT0, GL10.GL_POSITION, lightPosition, 0);
-			gl.glLightfv(GL10.GL_LIGHT0, GL10.GL_DIFFUSE, lightDiffuse, 0);
-		} else
-			gl.glDisable(GL10.GL_LIGHTING);
+		gl.glEnable(GL10.GL_LIGHTING);
+		gl.glEnable(GL10.GL_LIGHT0);
+		gl.glLightfv(GL10.GL_LIGHT0, GL10.GL_AMBIENT, lightAmbient, 0);
+		gl.glLightfv(GL10.GL_LIGHT0, GL10.GL_POSITION, lightPosition, 0);
+		gl.glLightfv(GL10.GL_LIGHT0, GL10.GL_DIFFUSE, lightDiffuse, 0);
+
 		camera.apply(Gdx.gl10);
-	}
-	
-	protected void renderWorld() {
-		world.render();
-	}
-	
-	public void update() {
+		
 		world.update();
+		
+		performance.setLength(0);
+		performance.append("FPS: ").append(fpsCounter.value).append(", Bullet: ")
+			.append((int)(performanceCounter.load.value*100f)).append("%");
 	}
 	
-	public BulletEntity shoot(final float x, final float y) {
-		return shoot(x,y,30f);
+	public void shoot(final float x, final float y) {
+		shoot(x,y,30f);
 	}
 	
-	public BulletEntity shoot(final float x, final float y, final float impulse) {
-		return shoot("box", x, y, impulse);
+	public void shoot(final float x, final float y, final float impulse) {
+		shoot("box", x, y, impulse);
 	}
 	
-	public BulletEntity shoot(final String what, final float x, final float y, final float impulse) {
+	public void shoot(final String what, final float x, final float y, final float impulse) {
 		// Shoot a box
 		Ray ray = camera.getPickRay(x, y);
 		BulletEntity entity = world.add(what, ray.origin.x, ray.origin.y, ray.origin.z);
 		entity.color.set(0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 1f);
-		((btRigidBody)entity.body).applyCentralImpulse(ray.direction.mul(impulse));
-		return entity;
+		entity.body.applyCentralImpulse(ray.direction.mul(impulse));
 	}
 	
 	public void setDebugMode(final int mode) {
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BaseWorld.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BaseWorld.java
index c2cef8c..e0d39e1 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BaseWorld.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BaseWorld.java
@@ -65,26 +65,19 @@ public class BaseWorld<T extends BaseEntity> implements Disposable {
 		return entity;
 	}
 	
-	public void render() {
-		render(entities);
-	}
-	
-	public void render(final Iterable<T> entities) {
-		for (final T e : entities)
-			render(e);
-	}
-	
-	public void render(final T entity) {
-		final GL10 gl = Gdx.gl10;
-		gl.glPushMatrix();
-		gl.glMultMatrixf(entity.transform.val, 0);
-		gl.glColor4f(entity.color.r, entity.color.g, entity.color.b, entity.color.a);
-		entity.model.render();
-		gl.glPopMatrix();
+	public void update () {
+		GL10 gl = Gdx.gl10;
+
+		for (int i = 0; i < entities.size; i++) {
+			final T entity = entities.get(i);
+			gl.glPushMatrix();
+			gl.glMultMatrixf(entity.transform.val, 0);
+			gl.glColor4f(entity.color.r, entity.color.g, entity.color.b, entity.color.a);
+			entity.model.render();
+			gl.glPopMatrix();
+		}
 	}
 	
-	public void update() {	}
-	
 	@Override
 	public void dispose () {
 		for (int i = 0; i < entities.size; i++)
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BulletConstructor.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BulletConstructor.java
index 307d518..0d13afe 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BulletConstructor.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BulletConstructor.java
@@ -21,7 +21,6 @@ import com.badlogic.gdx.math.Matrix4;
 import com.badlogic.gdx.math.Vector3;
 import com.badlogic.gdx.math.collision.BoundingBox;
 import com.badlogic.gdx.physics.bullet.btBoxShape;
-import com.badlogic.gdx.physics.bullet.btCollisionObject;
 import com.badlogic.gdx.physics.bullet.btCollisionShape;
 import com.badlogic.gdx.physics.bullet.btRigidBodyConstructionInfo;
 
@@ -38,13 +37,6 @@ public class BulletConstructor extends BaseWorld.Constructor<BulletEntity> {
 	public BulletConstructor (final Model model, final float mass, final btCollisionShape shape) {
 		create(model, mass, shape);
 	}
-	
-	/**
-	 * Specify null for the shape to use only the renderable part of this entity and not the physics part. 
-	 */
-	public BulletConstructor (final Model model, final btCollisionShape shape) {
-		this(model, -1f, shape);
-	}
 
 	/**
 	 * Creates a btBoxShape with the specified dimensions.
@@ -54,13 +46,6 @@ public class BulletConstructor extends BaseWorld.Constructor<BulletEntity> {
 	}
 	
 	/**
-	 * Creates a btBoxShape with the specified dimensions and NO rigidbody.
-	 */
-	public BulletConstructor (final Model model, final float width, final float height, final float depth) {
-		this(model, -1f, width, height, depth);
-	}
-	
-	/**
 	 * Creates a btBoxShape with the same dimensions as the shape.
 	 */
 	public BulletConstructor (final Model model, final float mass) {
@@ -70,13 +55,6 @@ public class BulletConstructor extends BaseWorld.Constructor<BulletEntity> {
 		create(model, mass, dimensions.x, dimensions.y, dimensions.z);
 	}
 	
-	/**
-	 * Creates a btBoxShape with the same dimensions as the shape and NO rigidbody.
-	 */
-	public BulletConstructor (final Model model) {
-		this(model, -1f);
-	}
-	
 	private void create (final Model model, final float mass, final float width, final float height, final float depth) {			
 		// Create a simple boxshape
 		create(model, mass, new btBoxShape(Vector3.tmp.set(width * 0.5f, height * 0.5f, depth * 0.5f)));
@@ -86,7 +64,7 @@ public class BulletConstructor extends BaseWorld.Constructor<BulletEntity> {
 		this.model = model;
 		this.shape = shape;
 		
-		if (shape != null && mass >= 0) {
+		if (shape != null) {
 			// Calculate the local inertia, bodies with no mass are static
 			Vector3 localInertia;
 			if (mass == 0)
@@ -113,21 +91,11 @@ public class BulletConstructor extends BaseWorld.Constructor<BulletEntity> {
 
 	@Override
 	public BulletEntity construct (float x, float y, float z) {
-		if (bodyInfo == null && shape != null) {
-			btCollisionObject obj = new btCollisionObject();
-			obj.setCollisionShape(shape);
-			return new BulletEntity(model, obj, x, y, z);
-		} else
-			return new BulletEntity(model, bodyInfo, x, y, z);
+		return new BulletEntity(this, x, y, z);
 	}
 	
 	@Override
 	public BulletEntity construct (final Matrix4 transform) {
-		if (bodyInfo == null && shape != null) {
-			btCollisionObject obj = new btCollisionObject();
-			obj.setCollisionShape(shape);
-			return new BulletEntity(model, obj, transform);
-		} else
-		return new BulletEntity(model, bodyInfo, transform);
+		return new BulletEntity(this, transform);
 	}
 }
\ No newline at end of file
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BulletEntity.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BulletEntity.java
index 4919743..fd31f11 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BulletEntity.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BulletEntity.java
@@ -18,8 +18,6 @@ package com.badlogic.gdx.tests.bullet;
 import com.badlogic.gdx.graphics.Mesh;
 import com.badlogic.gdx.graphics.g3d.model.Model;
 import com.badlogic.gdx.math.Matrix4;
-import com.badlogic.gdx.physics.bullet.btCollisionObject;
-import com.badlogic.gdx.physics.bullet.btCollisionShape;
 import com.badlogic.gdx.physics.bullet.btMotionState;
 import com.badlogic.gdx.physics.bullet.btRigidBody;
 import com.badlogic.gdx.physics.bullet.btRigidBodyConstructionInfo;
@@ -31,40 +29,36 @@ import com.badlogic.gdx.utils.Disposable;
 public class BulletEntity extends BaseEntity {
 	private final static Matrix4 tmpM = new Matrix4();
 	public BulletEntity.MotionState motionState;
-	public btCollisionObject body;
+	public btRigidBody body;
 
 	public BulletEntity (final Model model, final btRigidBodyConstructionInfo bodyInfo, final float x, final float y, final float z) {
-		this(model, bodyInfo == null ? null : new btRigidBody(bodyInfo), x, y, z);
+		this(model, bodyInfo, tmpM.setToTranslation(x, y, z));
 	}
 	
 	public BulletEntity (final Model model, final btRigidBodyConstructionInfo bodyInfo, final Matrix4 transform) {
-		this(model, bodyInfo == null ? null : new btRigidBody(bodyInfo), transform);
-	}
-	
-	public BulletEntity (final Model model, final btCollisionObject body, final float x, final float y, final float z) {
-		this(model, body, tmpM.setToTranslation(x, y, z));
-	}
-	
-	public BulletEntity (final Model model, final btCollisionObject body, final Matrix4 transform) {
 		this.model = model;
 		this.transform.set(transform);
-		this.body = body;
 		
-		if (body != null) {
-			body.userData = this;
-			if (body instanceof btRigidBody) {
-				this.motionState = new MotionState(this.transform);
-				((btRigidBody)this.body).setMotionState(motionState);
-			} else
-				body.setWorldTransform(transform);
+		if (bodyInfo != null) {
+			this.motionState = new MotionState(this.transform);
+			this.body = new btRigidBody(bodyInfo);
+			this.body.setMotionState(motionState);
 		}
 	}
 
+	public BulletEntity (final BulletConstructor constructInfo, final float x, final float y, final float z) {
+		this(constructInfo.model, constructInfo.bodyInfo, x, y, z);
+	}
+	
+	public BulletEntity (final BulletConstructor constructInfo, final Matrix4 transform) {
+		this(constructInfo.model, constructInfo.bodyInfo, transform);
+	}
+
 	@Override
 	public void dispose () {
 		// Don't rely on the GC
 		if (motionState != null) motionState.dispose();
-		if (body != null) body.dispose();
+		if (body != null) body.delete();
 		// And remove the reference
 		motionState = null;
 		body = null;
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BulletWorld.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BulletWorld.java
index 014dd20..ed15e69 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BulletWorld.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BulletWorld.java
@@ -20,8 +20,6 @@ import com.badlogic.gdx.math.Matrix4;
 import com.badlogic.gdx.math.Vector3;
 import com.badlogic.gdx.math.WindowedMean;
 import com.badlogic.gdx.physics.bullet.btBroadphaseInterface;
-import com.badlogic.gdx.physics.bullet.btCollisionObject;
-import com.badlogic.gdx.physics.bullet.btCollisionWorld;
 import com.badlogic.gdx.physics.bullet.btIDebugDraw;
 import com.badlogic.gdx.physics.bullet.btCollisionConfiguration;
 import com.badlogic.gdx.physics.bullet.btCollisionDispatcher;
@@ -39,35 +37,35 @@ import com.badlogic.gdx.utils.PerformanceCounter;
  * Bullet physics world that holds all bullet entities and constructors.  
  */
 public class BulletWorld extends BaseWorld<BulletEntity> {
-	public DebugDrawer debugDrawer = null;
+	// For debugging purposes:
+	private DebugDrawer debugDrawer = null;
 	public boolean renderMeshes = true;
 	
 	public final btCollisionConfiguration collisionConfiguration;
 	public final btCollisionDispatcher dispatcher;
 	public final btBroadphaseInterface broadphase;
 	public final btConstraintSolver solver;
-	public final btCollisionWorld collisionWorld;
+	public final btDynamicsWorld dynamicsWorld;
 	public PerformanceCounter performanceCounter;
 	public final Vector3 gravity;	
 	
 	public int maxSubSteps = 5;
 	
 	public BulletWorld(final btCollisionConfiguration collisionConfiguration, final btCollisionDispatcher dispatcher,
-		final btBroadphaseInterface broadphase, final btConstraintSolver solver, final btCollisionWorld world,  
+		final btBroadphaseInterface broadphase, final btConstraintSolver solver, final btDynamicsWorld dynamicsWorld,  
 		final Vector3 gravity) {
 		this.collisionConfiguration = collisionConfiguration;
 		this.dispatcher = dispatcher;
 		this.broadphase = broadphase;
 		this.solver = solver;
-		this.collisionWorld = world;
-		if (world instanceof btDynamicsWorld)
-			((btDynamicsWorld)this.collisionWorld).setGravity(gravity);
+		this.dynamicsWorld = dynamicsWorld;
+		this.dynamicsWorld.setGravity(gravity);
 		this.gravity = gravity;
 	}
 	
 	public BulletWorld(final btCollisionConfiguration collisionConfiguration, final btCollisionDispatcher dispatcher,
-		final btBroadphaseInterface broadphase, final btConstraintSolver solver, final btCollisionWorld world) {
-		this(collisionConfiguration, dispatcher, broadphase, solver, world, new Vector3(0, -10, 0));
+		final btBroadphaseInterface broadphase, final btConstraintSolver solver, final btDynamicsWorld dynamicsWorld) {
+		this(collisionConfiguration, dispatcher, broadphase, solver, dynamicsWorld, new Vector3(0, -10, 0));
 	}
 	
 	public BulletWorld(final Vector3 gravity) {
@@ -75,8 +73,8 @@ public class BulletWorld extends BaseWorld<BulletEntity> {
 		dispatcher = new btCollisionDispatcher(collisionConfiguration);
 		broadphase = new btDbvtBroadphase();
 		solver = new btSequentialImpulseConstraintSolver();
-		collisionWorld = new btDiscreteDynamicsWorld(dispatcher, broadphase, solver, collisionConfiguration);
-		((btDynamicsWorld)collisionWorld).setGravity(gravity);
+		dynamicsWorld = new btDiscreteDynamicsWorld(dispatcher, broadphase, solver, collisionConfiguration);
+		dynamicsWorld.setGravity(gravity);
 		this.gravity = gravity;
 	}
 	
@@ -87,69 +85,51 @@ public class BulletWorld extends BaseWorld<BulletEntity> {
 	@Override
 	public void add(final BulletEntity entity) {
 		super.add(entity);
-		if (entity.body != null) {
-			if (entity.body instanceof btRigidBody)
-				((btDiscreteDynamicsWorld)collisionWorld).addRigidBody((btRigidBody)entity.body);
-			else
-				collisionWorld.addCollisionObject(entity.body);
-			// Store the index of the entity in the collision object.  
-			entity.body.setUserValue(entities.size-1);
-		}
+		if (entity.body != null)
+			dynamicsWorld.addRigidBody(entity.body);
 	}
 	
 	@Override
 	public void update () {
 		if (performanceCounter != null) {
-			performanceCounter.tick();
-			performanceCounter.start();
+		performanceCounter.tick();
+		performanceCounter.start();
 		}
-		if (collisionWorld instanceof btDynamicsWorld)
-			((btDynamicsWorld)collisionWorld).stepSimulation(Gdx.graphics.getDeltaTime(), maxSubSteps);
+		dynamicsWorld.stepSimulation(Gdx.graphics.getDeltaTime(), maxSubSteps);
 		if (performanceCounter != null)
 			performanceCounter.stop();
-	}
-	
-	@Override
-	public void render() {
+
 		if (debugDrawer != null && debugDrawer.getDebugMode() > 0) {
 			debugDrawer.begin();
-			collisionWorld.debugDrawWorld();
+			dynamicsWorld.debugDrawWorld();
 			debugDrawer.end();
 		}
 		if (renderMeshes)
-			super.render();
+			super.update();
 	}
 	
 	@Override
 	public void dispose () {
 		for (int i = 0; i < entities.size; i++) {
-			btCollisionObject body = entities.get(i).body;
-			if (body != null) {
-				if (body instanceof btRigidBody)
-					((btDynamicsWorld)collisionWorld).removeRigidBody((btRigidBody)body);
-				else
-					collisionWorld.removeCollisionObject(body);
-			}
+			btRigidBody body = entities.get(i).body;
+			if (body != null)
+				dynamicsWorld.removeRigidBody(body);
 		}
 		
 		super.dispose();
 		
-		collisionWorld.delete();
-		if (solver != null)
-			solver.delete();
-		if (broadphase != null)
-			broadphase.delete();
-		if (dispatcher != null)
-			dispatcher.delete();
-		if (collisionConfiguration != null)
-			collisionConfiguration.delete();
+		dynamicsWorld.delete();
+		solver.delete();
+		broadphase.delete();
+		dispatcher.delete();
+		collisionConfiguration.delete();
 	}
 	
 	public void setDebugMode(final int mode, final Matrix4 projMatrix) {
 		if (mode == btIDebugDraw.DebugDrawModes.DBG_NoDebug && debugDrawer == null)
 			return;
 		if (debugDrawer == null)
-			collisionWorld.setDebugDrawer(debugDrawer = new DebugDrawer());
+			dynamicsWorld.setDebugDrawer(debugDrawer = new DebugDrawer());
 		debugDrawer.lineRenderer.setProjectionMatrix(projMatrix);
 		debugDrawer.setDebugMode(mode);
 	}
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/CollisionTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/CollisionTest.java
deleted file mode 100644
index f8f789b..0000000
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/CollisionTest.java
+++ /dev/null
@@ -1,137 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-
-package com.badlogic.gdx.tests.bullet;
-
-import com.badlogic.gdx.Gdx;
-import com.badlogic.gdx.graphics.Color;
-import com.badlogic.gdx.physics.bullet.ContactResultCallback;
-import com.badlogic.gdx.physics.bullet.btCollisionObject;
-import com.badlogic.gdx.physics.bullet.btCollisionObjectWrapper;
-import com.badlogic.gdx.physics.bullet.btManifoldPoint;
-import com.badlogic.gdx.physics.bullet.btPersistentManifold;
-import com.badlogic.gdx.tests.bullet.CollisionWorldTest.TestContactResultCallback;
-import com.badlogic.gdx.utils.Array;
-
-/** @author Xoppa */
-public class CollisionTest extends ShootTest {
-	BulletEntity projectile;
-	Array<BulletEntity> hits = new Array<BulletEntity>();
-	Array<BulletEntity> contacts = new Array<BulletEntity>();
-	Array<Color> colors = new Array<Color>();
-	
-	public class TestContactResultCallback extends ContactResultCallback
-	{
-		@Override
-		public float addSingleResult (btManifoldPoint cp, btCollisionObjectWrapper colObj0Wrap, int partId0, int index0,
-			btCollisionObjectWrapper colObj1Wrap, int partId1, int index1) {
-			btCollisionObject other = colObj0Wrap.getM_collisionObject() == projectile.body ?
-					colObj1Wrap.getM_collisionObject() : colObj0Wrap.getM_collisionObject();
-			if (other != null && other.userData != null && other.userData instanceof BulletEntity) {
-				BulletEntity ent = (BulletEntity)other.userData;
-				if (ent != ground && !hits.contains(ent, true))
-					hits.add((BulletEntity)other.userData);
-			}
-			return 0f;
-		}
-	}
-	TestContactResultCallback contactCB;
-	
-	public void updateContactInfo() {
-		int n = world.dispatcher.getNumManifolds();
-		for (int i = 0; i < n; i++) {
-			btPersistentManifold manifold = world.dispatcher.getManifoldByIndexInternal(i);
-			btCollisionObject objA = manifold.getBody0();
-			btCollisionObject objB = manifold.getBody1();
-			if (objA != ground.body && objB != ground.body) {
-				if (objA.userData != null && objA.userData instanceof BulletEntity) {
-					BulletEntity ent = (BulletEntity)objA.userData; 
-					if (ent != projectile && !contacts.contains(ent, true) && !hits.contains(ent, true))
-						contacts.add(ent);
-				}
-				if (objB.userData != null && objB.userData instanceof BulletEntity) {
-					BulletEntity ent = (BulletEntity)objB.userData;
-					if (ent != projectile && !contacts.contains(ent, true) && !hits.contains(ent, true))
-						contacts.add(ent);
-				}
-			}
-		}
-	}
-
-	@Override
-	public void create () {
-		super.create();
-		
-		contactCB = new TestContactResultCallback();
-	}
-	
-	@Override
-	public void render () {
-		process();
-	}
-	
-	public void process() {
-		Color color = null;
-		update();
-		hits.clear();
-		contacts.clear();
-		colors.clear();
-		
-		// Note that this might miss collisions, use InternalTickCallback to check for collision on every tick.
-		// See InternalTickTest on how to implement it.
-		
-		// Check what the projectile hits
-		if (projectile != null) {
-			color = projectile.color;
-			projectile.color = Color.RED;
-			world.collisionWorld.contactTest(projectile.body, contactCB);
-		}
-		// Check for other collisions
-		updateContactInfo();
-		
-		if (hits.size > 0) {
-			for (int i = 0; i < hits.size; i++) {
-				colors.add(hits.get(i).color);
-				hits.get(i).color = Color.RED;
-			}
-		}
-		if (contacts.size > 0) {
-			for (int i = 0; i < contacts.size; i++) {
-				colors.add(contacts.get(i).color);
-				contacts.get(i).color = Color.BLUE;
-			}
-		}
-		render(false);
-		if (projectile != null)
-			projectile.color = color;
-		for (int i = 0; i < hits.size; i++)
-			hits.get(i).color = colors.get(i);
-		for (int i = 0; i < contacts.size; i++)
-			contacts.get(i).color = colors.get(hits.size+i);
-	}
-	
-	@Override
-	public boolean tap (float x, float y, int count, int button) {
-		projectile = shoot(x, y);
-		return true;
-	}
-	
-	@Override
-	public void dispose () {
-		super.dispose();
-		projectile = null;
-	}
-}
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/CollisionWorldTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/CollisionWorldTest.java
deleted file mode 100644
index a975697..0000000
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/CollisionWorldTest.java
+++ /dev/null
@@ -1,141 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-
-package com.badlogic.gdx.tests.bullet;
-
-import com.badlogic.gdx.Gdx;
-import com.badlogic.gdx.graphics.Color;
-import com.badlogic.gdx.graphics.g3d.model.Model;
-import com.badlogic.gdx.math.Matrix4;
-import com.badlogic.gdx.math.Vector3;
-import com.badlogic.gdx.physics.bullet.ContactResultCallback;
-import com.badlogic.gdx.physics.bullet.btCollisionDispatcher;
-import com.badlogic.gdx.physics.bullet.btCollisionObject;
-import com.badlogic.gdx.physics.bullet.btCollisionObjectWrapper;
-import com.badlogic.gdx.physics.bullet.btCollisionWorld;
-import com.badlogic.gdx.physics.bullet.btDbvtBroadphase;
-import com.badlogic.gdx.physics.bullet.btDefaultCollisionConfiguration;
-import com.badlogic.gdx.physics.bullet.btManifoldPoint;
-import com.badlogic.gdx.physics.bullet.gdxBulletJNI;
-
-/** @author xoppa */
-public class CollisionWorldTest extends BaseBulletTest {
-	BulletEntity movingBox;
-	boolean hit = false;
-	Color normalColor = new Color();
-	btCollisionObject other;
-		
-	public class TestContactResultCallback extends ContactResultCallback
-	{
-		@Override
-		public float addSingleResult (btManifoldPoint cp, btCollisionObjectWrapper colObj0Wrap, int partId0, int index0,
-			btCollisionObjectWrapper colObj1Wrap, int partId1, int index1) {
-			hit = true;
-			other = colObj0Wrap.getM_collisionObject() == movingBox.body ?
-					colObj1Wrap.getM_collisionObject() : colObj0Wrap.getM_collisionObject();
-			
-			return 0f;
-		}
-	}
-	TestContactResultCallback contactCB;
-	
-	
-	@Override
-	public BulletWorld createWorld () {
-		btDefaultCollisionConfiguration collisionConfig = new btDefaultCollisionConfiguration();
-		btCollisionDispatcher dispatcher = new btCollisionDispatcher(collisionConfig);
-		btDbvtBroadphase broadphase = new btDbvtBroadphase();
-		btCollisionWorld collisionWorld = new btCollisionWorld(dispatcher, broadphase, collisionConfig);
-		return new BulletWorld(collisionConfig, dispatcher, broadphase, null, collisionWorld);
-	}
-	
-	@Override
-	public void create () {
-		super.create();
-		
-		instructions = "Long press to toggle debug mode\nSwipe for next test";
-		
-		contactCB = new TestContactResultCallback();
-		
-		Model groundModel = world.getConstructor("ground").model;
-		Model boxModel = world.getConstructor("box").model;
-		
-		world.addConstructor("collisionGround", new BulletConstructor(groundModel));
-		world.addConstructor("collisionBox", new BulletConstructor(boxModel));
-		
-		world.add("collisionGround", 0f, 0f, 0f)
-			.color.set(0.25f + 0.5f * (float)Math.random(), 0.25f + 0.5f * (float)Math.random(), 0.25f + 0.5f * (float)Math.random(), 1f);
-		
-		world.add("collisionBox", 0f, 1f, 5f)
-			.color.set(0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 1f);
-		world.add("collisionBox", 0f, 1f, -5f)
-			.color.set(0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 1f);
-		world.add("collisionBox", 5f, 1f, 0f)
-			.color.set(0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 1f);
-		world.add("collisionBox", -5f, 1f, 0f)
-			.color.set(0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 1f);
-		movingBox = world.add("collisionBox", -5f, 1f, 0f);
-		normalColor.set(0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 1f);
-	}
-	
-	Color tmpColor = new Color();
-	@Override
-	public void render () {
-		movingBox.transform.val[Matrix4.M03] = movingBox.transform.val[Matrix4.M13] = movingBox.transform.val[Matrix4.M23] = 0f;
-		movingBox.transform.rotate(Vector3.Y, Gdx.graphics.getDeltaTime() * 45f);
-		movingBox.transform.translate(-5f, 1f, 0f);
-		movingBox.body.setWorldTransform(movingBox.transform);
-		
-		super.render();
-	}
-	
-	@Override
-	public void update () {
-		super.update();
-		// Not using dynamics, so update the collision world manually
-		if (world.performanceCounter != null)
-			world.performanceCounter.start();
-		world.collisionWorld.performDiscreteCollisionDetection();
-		if (world.performanceCounter != null)
-			world.performanceCounter.stop();
-	}
-	
-	@Override
-	protected void renderWorld () {
-		hit = false;
-		other = null;
-		world.collisionWorld.contactTest(movingBox.body, contactCB);
-		movingBox.color.set(hit ? Color.RED : normalColor);
-		
-		BulletEntity e = null;
-		if (other != null && other.userData != null && other.userData instanceof BulletEntity) { 
-			e = (BulletEntity)(other.userData);
-			tmpColor.set(e.color);
-			e.color.set(Color.RED);
-		}
-		
-		super.renderWorld();
-
-		if (e != null)
-			e.color.set(tmpColor);
-	}
-	
-	@Override
-	public void dispose () {
-		super.dispose();
-		movingBox = null;
-	}
-}
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/ConstraintsTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/ConstraintsTest.java
index 9445175..f438002 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/ConstraintsTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/ConstraintsTest.java
@@ -25,10 +25,7 @@ import com.badlogic.gdx.graphics.g3d.materials.Material;
 import com.badlogic.gdx.graphics.g3d.model.still.StillModel;
 import com.badlogic.gdx.graphics.g3d.model.still.StillSubMesh;
 import com.badlogic.gdx.math.Vector3;
-import com.badlogic.gdx.physics.bullet.btDiscreteDynamicsWorld;
-import com.badlogic.gdx.physics.bullet.btDynamicsWorld;
 import com.badlogic.gdx.physics.bullet.btPoint2PointConstraint;
-import com.badlogic.gdx.physics.bullet.btRigidBody;
 import com.badlogic.gdx.physics.bullet.btTypedConstraint;
 import com.badlogic.gdx.utils.Array;
 
@@ -63,32 +60,32 @@ public class ConstraintsTest extends BaseBulletTest {
 		
 		BulletEntity box1 = world.add("box", -4.5f, 6f, 0f);
 		box1.color.set(0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 1f);
-		btPoint2PointConstraint constraint = new btPoint2PointConstraint((btRigidBody)bar.body, (btRigidBody)box1.body, Vector3.tmp.set(-5, -0.5f, -0.5f), Vector3.tmp2.set(-0.5f, 0.5f, -0.5f));
-		((btDynamicsWorld)world.collisionWorld).addConstraint(constraint, false);
+		btPoint2PointConstraint constraint = new btPoint2PointConstraint(bar.body, box1.body, Vector3.tmp.set(-5, -0.5f, -0.5f), Vector3.tmp2.set(-0.5f, 0.5f, -0.5f));
+		world.dynamicsWorld.addConstraint(constraint, false);
 		constraints.add(constraint);
 		BulletEntity box2 = null;
 		for (int i = 0; i < 10; i++) {
 			if (i % 2 == 0) {
 				box2 = world.add("box", -3.5f + (float)i, 6f, 0f);
 				box2.color.set(0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 1f);
-				constraint = new btPoint2PointConstraint((btRigidBody)box1.body, (btRigidBody)box2.body, Vector3.tmp.set(0.5f, -0.5f, 0.5f), Vector3.tmp2.set(-0.5f, -0.5f, 0.5f));
+				constraint = new btPoint2PointConstraint(box1.body, box2.body, Vector3.tmp.set(0.5f, -0.5f, 0.5f), Vector3.tmp2.set(-0.5f, -0.5f, 0.5f));
 			} else {
 				box1 = world.add("box", -3.5f + (float)i, 6f, 0f);
 				box1.color.set(0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 1f);
-				constraint = new btPoint2PointConstraint((btRigidBody)box2.body, (btRigidBody)box1.body, Vector3.tmp.set(0.5f, 0.5f, -0.5f), Vector3.tmp2.set(-0.5f, 0.5f, -0.5f));
+				constraint = new btPoint2PointConstraint(box2.body, box1.body, Vector3.tmp.set(0.5f, 0.5f, -0.5f), Vector3.tmp2.set(-0.5f, 0.5f, -0.5f));
 			}
-			((btDynamicsWorld)world.collisionWorld).addConstraint(constraint, false);
+			world.dynamicsWorld.addConstraint(constraint, false);
 			constraints.add(constraint);
 		}
-		constraint = new btPoint2PointConstraint((btRigidBody)bar.body, (btRigidBody)box1.body, Vector3.tmp.set(5f, -0.5f, -0.5f), Vector3.tmp2.set(0.5f, 0.5f, -0.5f));
-		((btDynamicsWorld)world.collisionWorld).addConstraint(constraint, false);
+		constraint = new btPoint2PointConstraint(bar.body, box1.body, Vector3.tmp.set(5f, -0.5f, -0.5f), Vector3.tmp2.set(0.5f, 0.5f, -0.5f));
+		world.dynamicsWorld.addConstraint(constraint, false);
 		constraints.add(constraint);
 	}
 	
 	@Override
 	public void dispose () {
 		for (int i = 0; i < constraints.size; i++) {
-			((btDynamicsWorld)world.collisionWorld).removeConstraint(constraints.get(i));
+			world.dynamicsWorld.removeConstraint(constraints.get(i));
 			constraints.get(i).delete();
 		}
 		constraints.clear();
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/DebugDrawer.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/DebugDrawer.java
index 0a60f2e..05699c7 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/DebugDrawer.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/DebugDrawer.java
@@ -13,7 +13,6 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  ******************************************************************************/
-
 package com.badlogic.gdx.tests.bullet;
 
 import com.badlogic.gdx.Gdx;
@@ -25,7 +24,6 @@ import com.badlogic.gdx.physics.bullet.btIDebugDraw;
 import com.badlogic.gdx.physics.bullet.btVector3;
 import com.badlogic.gdx.physics.bullet.gdxBulletJNI;
 
-/** @author xoppa */
 public class DebugDrawer extends btIDebugDraw {
 	public int debugMode = 0;
 	public ShapeRenderer lineRenderer = new ShapeRenderer();
@@ -65,4 +63,4 @@ public class DebugDrawer extends btIDebugDraw {
 	public void end() {
 		lineRenderer.end();
 	}
-}
+}
\ No newline at end of file
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/FrustumCullingTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/FrustumCullingTest.java
deleted file mode 100644
index ff7b473..0000000
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/FrustumCullingTest.java
+++ /dev/null
@@ -1,289 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-package com.badlogic.gdx.tests.bullet;
-
-import com.badlogic.gdx.Gdx;
-import com.badlogic.gdx.graphics.Color;
-import com.badlogic.gdx.graphics.GL10;
-import com.badlogic.gdx.graphics.Mesh;
-import com.badlogic.gdx.graphics.PerspectiveCamera;
-import com.badlogic.gdx.graphics.VertexAttribute;
-import com.badlogic.gdx.graphics.VertexAttributes.Usage;
-import com.badlogic.gdx.graphics.g3d.materials.Material;
-import com.badlogic.gdx.graphics.g3d.model.Model;
-import com.badlogic.gdx.graphics.g3d.model.still.StillModel;
-import com.badlogic.gdx.graphics.g3d.model.still.StillSubMesh;
-import com.badlogic.gdx.math.Matrix4;
-import com.badlogic.gdx.math.Quaternion;
-import com.badlogic.gdx.math.Vector3;
-import com.badlogic.gdx.physics.bullet.btBroadphasePair;
-import com.badlogic.gdx.physics.bullet.btBroadphasePairArray;
-import com.badlogic.gdx.physics.bullet.btCollisionAlgorithm;
-import com.badlogic.gdx.physics.bullet.btCollisionDispatcher;
-import com.badlogic.gdx.physics.bullet.btCollisionObject;
-import com.badlogic.gdx.physics.bullet.btCollisionShape;
-import com.badlogic.gdx.physics.bullet.btCollisionWorld;
-import com.badlogic.gdx.physics.bullet.btCompoundShape;
-import com.badlogic.gdx.physics.bullet.btConvexHullShape;
-import com.badlogic.gdx.physics.bullet.btDbvtBroadphase;
-import com.badlogic.gdx.physics.bullet.btDefaultCollisionConfiguration;
-import com.badlogic.gdx.physics.bullet.btGhostPairCallback;
-import com.badlogic.gdx.physics.bullet.btManifoldArray;
-import com.badlogic.gdx.physics.bullet.btPairCachingGhostObject;
-import com.badlogic.gdx.physics.bullet.btPersistentManifold;
-import com.badlogic.gdx.physics.bullet.gdxBulletJNI;
-import com.badlogic.gdx.utils.Array;
-
-/** @author Xoppa */
-public class FrustumCullingTest extends BaseBulletTest {
-	/** Only show entities inside the frustum */
-	final static int CULL_FRUSTUM = 1;
-	/** Transform the render cam with the frustum */
-	final static int FRUSTUM_CAM = 2;
-	
-	final static boolean USE_BULLET_FRUSTUM_CULLING = true;
-	
-	int state = 0; // 0 = No culling, look from above
-	
-	final static int BOXCOUNT = 200;
-	
-	final static float BOX_X_MIN = -25;
-	final static float BOX_Y_MIN = -25;
-	final static float BOX_Z_MIN = -25;
-	
-	final static float BOX_X_MAX = 25;
-	final static float BOX_Y_MAX = 25;
-	final static float BOX_Z_MAX = 25;
-	
-	final static float SPEED_X = 360f/7f;
-	final static float SPEED_Y = 360f/19f;
-	final static float SPEED_Z = 360f/13f;
-	
-	final static Vector3 tmpV = new Vector3();
-	final static Matrix4 tmpM = new Matrix4();
-	
-	final static int ptrs[] = new int[512];
-	final static Array<btCollisionObject> visibleObjects = new Array<btCollisionObject>(); 
-	
-	public static btPairCachingGhostObject createFrustumObject(final Vector3... points) {
-		final btPairCachingGhostObject result = new TestPairCachingGhostObject();
-		final boolean USE_COMPOUND = true;
-		// Using a compound shape is not necessary, but it's good practice to create shapes around the center.
-		if (USE_COMPOUND) {
-			final Vector3 centerNear = new Vector3(points[2]).sub(points[0]).scl(0.5f).add(points[0]);
-			final Vector3 centerFar = new Vector3(points[6]).sub(points[4]).scl(0.5f).add(points[4]);
-			final Vector3 center = new Vector3(centerFar).sub(centerNear).scl(0.5f).add(centerNear);
-			final btConvexHullShape hullShape = new btConvexHullShape();
-			for (int i = 0; i < points.length; i++)
-				hullShape.addPoint(tmpV.set(points[i]).sub(center));
-			final btCompoundShape shape = new btCompoundShape();
-			shape.addChildShape(tmpM.setToTranslation(center), hullShape, true);
-			result.setCollisionShape(shape);
-		} else {
-			final btConvexHullShape shape = new btConvexHullShape();
-			for (int i = 0; i < points.length; i++)
-				shape.addPoint(points[i]);
-			result.setCollisionShape(shape);
-		}
-		result.setCollisionFlags(btCollisionObject.CollisionFlags.CF_NO_CONTACT_RESPONSE);
-		return result;
-	}
-	
-	public static Array<BulletEntity> getEntitiesCollidingWithObject(final BulletWorld world, final btPairCachingGhostObject object, final Array<BulletEntity> out, final btManifoldArray tmpArr) {
-		// Fetch the array of contacts
-		btBroadphasePairArray arr = world.broadphase.getOverlappingPairCache().getOverlappingPairArray();
-		// Get the user values (which are indices in the entities array) of all objects colliding with the object
-		final int n = arr.getCollisionObjectsValue(ptrs, object);
-		// Fill the array of entities
-		out.clear();
-		for (int i = 0; i < n; i++)
-			out.add(world.entities.get(ptrs[i]));
-		return out;
-	}
-	
-	public static Model createFrustumModel(final Vector3... p) {
-		final Mesh mesh = new Mesh(true, 8, 32, new VertexAttribute(Usage.Position, 3, "a_position"));
-		mesh.setVertices(new float[] {
-			p[0].x, p[0].y, p[0].z, p[1].x, p[1].y, p[1].z, p[2].x, p[2].y, p[2].z, p[3].x, p[3].y, p[3].z, // near
-			p[4].x, p[4].y, p[4].z, p[5].x, p[5].y, p[5].z, p[6].x, p[6].y, p[6].z, p[7].x, p[7].y, p[7].z});// far
-		mesh.setIndices(new short[] {0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7});
-		return new StillModel(new StillSubMesh("frustum", mesh, GL10.GL_LINES, new Material()));
-	}
-	
-	private float angleX, angleY, angleZ;
-	private btPairCachingGhostObject frustumObject;
-	private BulletEntity frustumEntity;
-	private final Array<BulletEntity> visibleEntities = new Array<BulletEntity>();
-	private btManifoldArray tempManifoldArr;
-	private PerspectiveCamera frustumCam;
-	private PerspectiveCamera overviewCam;
-
-	@Override
-	public void create () {
-		super.create();
-		
-		instructions = "Tap to toggle view\nLong press to toggle debug mode\nSwipe for next test";
-		
-		tempManifoldArr = new btManifoldArray();
-
-		world.addConstructor("collisionBox", new BulletConstructor(world.getConstructor("box").model));
-		
-		// Create the entities
-		final float dX = BOX_X_MAX - BOX_X_MIN;
-		final float dY = BOX_Y_MAX - BOX_Y_MIN;
-		final float dZ = BOX_Z_MAX - BOX_Z_MIN;
-		for (int i = 0; i < BOXCOUNT; i++)
-			world.add("collisionBox", 
-					BOX_X_MIN + dX * (float)Math.random(), 
-					BOX_Y_MIN + dY * (float)Math.random(), 
-					BOX_Z_MIN + dZ * (float)Math.random()
-				).color.set(Color.GRAY);
-		
-		frustumCam = new PerspectiveCamera(camera.fieldOfView, camera.viewportWidth, camera.viewportHeight);
-		overviewCam = camera;
-		overviewCam.position.set(BOX_X_MAX, BOX_Y_MAX, BOX_Z_MAX);
-		overviewCam.lookAt(Vector3.Zero);
-		overviewCam.update();
-		
-		final Model frustumModel = createFrustumModel(frustumCam.frustum.planePoints);
-		frustumObject = createFrustumObject(frustumCam.frustum.planePoints);
-		world.add(frustumEntity = new BulletEntity(frustumModel, frustumObject, 0, 0, 0));
-		frustumEntity.color.set(Color.BLUE);
-		
-		world.renderMeshes = false;
-	}
-	
-	@Override
-	public BulletWorld createWorld () {
-		// No need to use dynamics for this test
-		btDbvtBroadphase broadphase = new btDbvtBroadphase();
-		btDefaultCollisionConfiguration collisionConfig = new btDefaultCollisionConfiguration();
-		btCollisionDispatcher dispatcher = new btCollisionDispatcher(collisionConfig);
-		btCollisionWorld collisionWorld = new btCollisionWorld(dispatcher, broadphase, collisionConfig);
-		return new BulletWorld(collisionConfig, dispatcher, broadphase, null, collisionWorld);
-	}
-
-	@Override
-	public void update () {
-		super.update();
-		// Not using dynamics, so update the collision world manually
-		if (USE_BULLET_FRUSTUM_CULLING) {
-			if (world.performanceCounter != null)
-				world.performanceCounter.start();
-			world.collisionWorld.performDiscreteCollisionDetection();
-			if (world.performanceCounter != null)
-				world.performanceCounter.stop();
-		}
-	}
-	
-	@Override
-	public void render () {
-		final float dt = Gdx.graphics.getDeltaTime();
-		frustumEntity.transform.idt();
-		frustumEntity.transform.rotate(Vector3.X, angleX = (angleX + dt * SPEED_X) % 360);
-		frustumEntity.transform.rotate(Vector3.Y, angleY = (angleY + dt * SPEED_Y) % 360);
-		frustumEntity.transform.rotate(Vector3.Z, angleZ = (angleZ + dt * SPEED_Z) % 360);
-
-		// Transform the ghost object
-		frustumEntity.body.setWorldTransform(frustumEntity.transform);
-		// Transform the frustum cam
-		frustumCam.direction.set(0, 0, -1);
-		frustumCam.up.set(0, 1, 0);
-		frustumCam.position.set(0,0,0);
-		frustumCam.rotate(frustumEntity.transform);
-		frustumCam.update();
-
-		super.render();
-		
-		performance.append(" visible: ").append(visibleEntities.size);
-	}
-	
-	@Override
-	protected void renderWorld () {
-		if (world.performanceCounter != null)
-			world.performanceCounter.start();
-		if (USE_BULLET_FRUSTUM_CULLING)
-			getEntitiesCollidingWithObject(world, frustumObject, visibleEntities, tempManifoldArr);
-		else {
-			visibleEntities.clear();
-			for (int i = 0; i < world.entities.size; i++) {
-				final BulletEntity e = world.entities.get(i);
-				if (e == frustumEntity)
-					continue;
-				e.transform.getTranslation(tmpV);
-				if (frustumCam.frustum.sphereInFrustum(tmpV, 1))
-					visibleEntities.add(e);
-			}
-		}
-		if (world.performanceCounter != null)
-			world.performanceCounter.stop();
-		
-		for (int i = 0; i < visibleEntities.size; i++)
-			visibleEntities.get(i).color.set(Color.RED);
-		
-		if ((state & CULL_FRUSTUM) == CULL_FRUSTUM) {
-			world.render(visibleEntities);
-			world.render(frustumEntity);
-		} else
-			world.render(world.entities);
-		
-		for (int i = 0; i < visibleEntities.size; i++)
-			visibleEntities.get(i).color.set(Color.GRAY);
-	}
-	
-	@Override
-	protected void beginRender (boolean lighting) {
-		super.beginRender(false);
-	}
-	
-	@Override
-	public void dispose () {
-		frustumObject = null;
-		
-		super.dispose();
-		
-		if (tempManifoldArr != null)
-			tempManifoldArr.delete();
-		tempManifoldArr = null;
-	}
-	
-	@Override
-	public boolean tap (float x, float y, int count, int button) {
-		state = (state + 1) % 3;
-		if ((state & FRUSTUM_CAM) == FRUSTUM_CAM)
-			camera = frustumCam;
-		else
-			camera = overviewCam;
-		return true;
-	}
-	
-	// Simple helper class to keep a reference to the collision shape
-	public static class TestPairCachingGhostObject extends btPairCachingGhostObject {
-		public btCollisionShape shape; 
-		@Override
-		public void setCollisionShape (btCollisionShape collisionShape) {
-			shape = collisionShape;
-			super.setCollisionShape(collisionShape);
-		}
-		@Override
-		public void dispose () {
-			super.dispose();
-			if (shape != null)
-				shape.delete();
-			shape = null;
-		}
-	}
-}
\ No newline at end of file
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/InternalTickTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/InternalTickTest.java
index 125fb1f..936a472 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/InternalTickTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/InternalTickTest.java
@@ -60,7 +60,7 @@ public class InternalTickTest extends BaseBulletTest {
 	public void create () {
 		super.create();
 		
-		internalTickCallback = new TestInternalTickCallback((btDynamicsWorld)world.collisionWorld);
+		internalTickCallback = new TestInternalTickCallback(world.dynamicsWorld);
 
 		// Create the entities
 		world.add("ground", 0f, 0f, 0f)
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/RayCastTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/RayCastTest.java
index 9885870..84b66e6 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/RayCastTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/RayCastTest.java
@@ -83,7 +83,7 @@ public class RayCastTest extends BaseBulletTest {
 		rayTestCB.getM_rayFromWorld().setValue(rayFrom.x, rayFrom.y, rayFrom.z);
 		rayTestCB.getM_rayToWorld().setValue(rayTo.x, rayTo.y, rayTo.z);
 		
-		world.collisionWorld.rayTest(rayFrom, rayTo, rayTestCB);
+		world.dynamicsWorld.rayTest(rayFrom, rayTo, rayTestCB);
 		
 		if (rayTestCB.hasHit()) {
 			final btCollisionObject obj = rayTestCB.getM_collisionObject();
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/RayPickRagdollTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/RayPickRagdollTest.java
index a7fe760..c9f55c9 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/RayPickRagdollTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/RayPickRagdollTest.java
@@ -32,7 +32,6 @@ import com.badlogic.gdx.physics.bullet.ClosestRayResultCallback;
 import com.badlogic.gdx.physics.bullet.btCapsuleShape;
 import com.badlogic.gdx.physics.bullet.btConeTwistConstraint;
 import com.badlogic.gdx.physics.bullet.btConstraintSetting;
-import com.badlogic.gdx.physics.bullet.btDynamicsWorld;
 import com.badlogic.gdx.physics.bullet.btHingeConstraint;
 import com.badlogic.gdx.physics.bullet.btPoint2PointConstraint;
 import com.badlogic.gdx.physics.bullet.btRigidBody;
@@ -77,7 +76,7 @@ public class RayPickRagdollTest extends BaseBulletTest {
 	@Override
 	public void dispose () {
 		for (int i = 0; i < constraints.size; i++) {
-			((btDynamicsWorld)world.collisionWorld).removeConstraint(constraints.get(i));
+			world.dynamicsWorld.removeConstraint(constraints.get(i));
 			constraints.get(i).delete();
 		}
 		constraints.clear();
@@ -91,7 +90,7 @@ public class RayPickRagdollTest extends BaseBulletTest {
 			Ray ray = camera.getPickRay(screenX, screenY);
 			Vector3.tmp.set(ray.direction).mul(10f).add(ray.origin);
 			ClosestRayResultCallback cb = new ClosestRayResultCallback(ray.origin, Vector3.tmp);
-			world.collisionWorld.rayTest(ray.origin, Vector3.tmp, cb);
+			world.dynamicsWorld.rayTest(ray.origin, Vector3.tmp, cb);
 			if (cb.hasHit()) {
 				btRigidBody body = btRigidBody.upcast(cb.getM_collisionObject());
 				if (body != null && !body.isStaticObject() && !body.isKinematicObject()) {
@@ -108,7 +107,7 @@ public class RayPickRagdollTest extends BaseBulletTest {
 					setting.setM_tau(0.001f);
 					pickConstraint.setM_setting(setting);
 					
-					((btDynamicsWorld)world.collisionWorld).addConstraint(pickConstraint);
+					world.dynamicsWorld.addConstraint(pickConstraint);
 		
 					pickDistance = Vector3.tmp.sub(camera.position).len();
 					result = true;
@@ -124,7 +123,7 @@ public class RayPickRagdollTest extends BaseBulletTest {
 		boolean result = false;
 		if (button == Buttons.LEFT) {
 			if (pickConstraint != null) {
-				((btDynamicsWorld)world.collisionWorld).removeConstraint(pickConstraint);
+				world.dynamicsWorld.removeConstraint(pickConstraint);
 				pickConstraint.delete();
 				pickConstraint = null;
 				result = true;
@@ -161,17 +160,17 @@ public class RayPickRagdollTest extends BaseBulletTest {
 	final static float PI4 = 0.25f * PI;
 	public void addRagdoll(final float x, final float y, final float z) {
 		final Matrix4 tmpM = new Matrix4();
-		btRigidBody pelvis = (btRigidBody)world.add("pelvis", x, y+1, z).body;
-		btRigidBody spine = (btRigidBody)world.add("spine", x, y+1.2f, z).body;
-		btRigidBody head = (btRigidBody)world.add("head", x, y+1.6f, z).body;
-		btRigidBody leftupperleg = (btRigidBody)world.add("upperleg", x-0.18f, y+0.65f, z).body;
-		btRigidBody leftlowerleg = (btRigidBody)world.add("lowerleg", x-0.18f, y+0.2f, z).body;
-		btRigidBody rightupperleg = (btRigidBody)world.add("upperleg", x+0.18f, y+0.65f, z).body;
-		btRigidBody rightlowerleg = (btRigidBody)world.add("lowerleg", x+0.18f, y+0.2f, z).body;		
-		btRigidBody leftupperarm = (btRigidBody)world.add("upperarm", tmpM.setFromEulerAngles(PI2, 0, 0).trn(x-0.35f, y+1.45f, z)).body;
-		btRigidBody leftlowerarm = (btRigidBody)world.add("lowerarm", tmpM.setFromEulerAngles(PI2, 0, 0).trn(x-0.7f, y+1.45f, z)).body;
-		btRigidBody rightupperarm = (btRigidBody)world.add("upperarm", tmpM.setFromEulerAngles(-PI2, 0, 0).trn(x+0.35f, y+1.45f, z)).body;
-		btRigidBody rightlowerarm = (btRigidBody)world.add("lowerarm", tmpM.setFromEulerAngles(-PI2, 0, 0).trn(x+0.7f, y+1.45f, z)).body;
+		btRigidBody pelvis = world.add("pelvis", x, y+1, z).body;
+		btRigidBody spine = world.add("spine", x, y+1.2f, z).body;
+		btRigidBody head = world.add("head", x, y+1.6f, z).body;
+		btRigidBody leftupperleg = world.add("upperleg", x-0.18f, y+0.65f, z).body;
+		btRigidBody leftlowerleg = world.add("lowerleg", x-0.18f, y+0.2f, z).body;
+		btRigidBody rightupperleg = world.add("upperleg", x+0.18f, y+0.65f, z).body;
+		btRigidBody rightlowerleg = world.add("lowerleg", x+0.18f, y+0.2f, z).body;		
+		btRigidBody leftupperarm = world.add("upperarm", tmpM.setFromEulerAngles(PI2, 0, 0).trn(x-0.35f, y+1.45f, z)).body;
+		btRigidBody leftlowerarm = world.add("lowerarm", tmpM.setFromEulerAngles(PI2, 0, 0).trn(x-0.7f, y+1.45f, z)).body;
+		btRigidBody rightupperarm = world.add("upperarm", tmpM.setFromEulerAngles(-PI2, 0, 0).trn(x+0.35f, y+1.45f, z)).body;
+		btRigidBody rightlowerarm = world.add("lowerarm", tmpM.setFromEulerAngles(-PI2, 0, 0).trn(x+0.7f, y+1.45f, z)).body;
 		
 		final Matrix4 localA = new Matrix4();
 		final Matrix4 localB = new Matrix4();
@@ -183,70 +182,70 @@ public class RayPickRagdollTest extends BaseBulletTest {
 		localB.setFromEulerAngles(0, PI2, 0).trn(0, -0.15f, 0);
 		constraints.add(hingeC = new btHingeConstraint(pelvis, spine, localA, localB));
 		hingeC.setLimit(-PI4, PI2);
-		((btDynamicsWorld)world.collisionWorld).addConstraint(hingeC, true);
+		world.dynamicsWorld.addConstraint(hingeC, true);
 		
 		// SpineHead
 		localA.setFromEulerAngles(PI2, 0, 0).trn(0, 0.3f, 0);
 		localB.setFromEulerAngles(PI2, 0, 0).trn(0, -0.14f, 0);
 		constraints.add(coneC = new btConeTwistConstraint(spine, head, localA, localB));
 		coneC.setLimit(PI4, PI4, PI2);
-		((btDynamicsWorld)world.collisionWorld).addConstraint(coneC, true);
+		world.dynamicsWorld.addConstraint(coneC, true);
 		
 		// LeftHip
 		localA.setFromEulerAngles(-PI4*5f, 0, 0).trn(-0.18f, -0.1f, 0);
 		localB.setFromEulerAngles(-PI4*5f, 0, 0).trn(0, 0.225f, 0);
 		constraints.add(coneC = new btConeTwistConstraint(pelvis, leftupperleg, localA, localB));
 		coneC.setLimit(PI4, PI4, 0);
-		((btDynamicsWorld)world.collisionWorld).addConstraint(coneC, true);
+		world.dynamicsWorld.addConstraint(coneC, true);
 		
 		// LeftKnee
 		localA.setFromEulerAngles(0, PI2, 0).trn(0, -0.225f, 0);
 		localB.setFromEulerAngles(0, PI2, 0).trn(0, 0.185f, 0);
 		constraints.add(hingeC = new btHingeConstraint(leftupperleg, leftlowerleg, localA, localB));
 		hingeC.setLimit(0, PI2);
-		((btDynamicsWorld)world.collisionWorld).addConstraint(hingeC, true);
+		world.dynamicsWorld.addConstraint(hingeC, true);
 		
 		// RightHip
 		localA.setFromEulerAngles(-PI4*5f, 0, 0).trn(0.18f, -0.1f, 0);
 		localB.setFromEulerAngles(-PI4*5f, 0, 0).trn(0, 0.225f, 0);
 		constraints.add(coneC = new btConeTwistConstraint(pelvis, rightupperleg, localA, localB));
 		coneC.setLimit(PI4, PI4, 0);
-		((btDynamicsWorld)world.collisionWorld).addConstraint(coneC, true);
+		world.dynamicsWorld.addConstraint(coneC, true);
 		
 		// RightKnee
 		localA.setFromEulerAngles(0, PI2, 0).trn(0, -0.225f, 0);
 		localB.setFromEulerAngles(0, PI2, 0).trn(0, 0.185f, 0);
 		constraints.add(hingeC = new btHingeConstraint(rightupperleg, rightlowerleg, localA, localB));
 		hingeC.setLimit(0, PI2);
-		((btDynamicsWorld)world.collisionWorld).addConstraint(hingeC, true);
+		world.dynamicsWorld.addConstraint(hingeC, true);
 		
 		// LeftShoulder
 		localA.setFromEulerAngles(PI, 0, 0).trn(-0.2f, 0.15f, 0);
 		localB.setFromEulerAngles(PI2, 0, 0).trn(0, -0.18f, 0);
 		constraints.add(coneC = new btConeTwistConstraint(pelvis, leftupperarm, localA, localB));
 		coneC.setLimit(PI2, PI2, 0);
-		((btDynamicsWorld)world.collisionWorld).addConstraint(coneC, true);
+		world.dynamicsWorld.addConstraint(coneC, true);
 		
 		// LeftElbow
 		localA.setFromEulerAngles(0, PI2, 0).trn(0, 0.18f, 0);
 		localB.setFromEulerAngles(0, PI2, 0).trn(0, -0.14f, 0);
 		constraints.add(hingeC = new btHingeConstraint(leftupperarm, leftlowerarm, localA, localB));
 		hingeC.setLimit(0, PI2);
-		((btDynamicsWorld)world.collisionWorld).addConstraint(hingeC, true);
+		world.dynamicsWorld.addConstraint(hingeC, true);
 		
 		// RightShoulder
 		localA.setFromEulerAngles(PI, 0, 0).trn(0.2f, 0.15f, 0);
 		localB.setFromEulerAngles(PI2, 0, 0).trn(0, -0.18f, 0);
 		constraints.add(coneC = new btConeTwistConstraint(pelvis, rightupperarm, localA, localB));
 		coneC.setLimit(PI2, PI2, 0);
-		((btDynamicsWorld)world.collisionWorld).addConstraint(coneC, true);
+		world.dynamicsWorld.addConstraint(coneC, true);
 		
 		// RightElbow
 		localA.setFromEulerAngles(0, PI2, 0).trn(0, 0.18f, 0);
 		localB.setFromEulerAngles(0, PI2, 0).trn(0, -0.14f, 0);
 		constraints.add(hingeC = new btHingeConstraint(rightupperarm, rightlowerarm, localA, localB));
 		hingeC.setLimit(0, PI2);
-		((btDynamicsWorld)world.collisionWorld).addConstraint(hingeC, true);
+		world.dynamicsWorld.addConstraint(hingeC, true);
 	}
 	
 	protected Model createCapsuleModel(float radius, float height) {
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/ShootTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/ShootTest.java
index 0bc3ed0..8e3ec5d 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/ShootTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/ShootTest.java
@@ -20,6 +20,7 @@ import com.badlogic.gdx.graphics.Color;
 import com.badlogic.gdx.graphics.Mesh;
 import com.badlogic.gdx.graphics.VertexAttribute;
 import com.badlogic.gdx.graphics.VertexAttributes.Usage;
+import com.badlogic.gdx.math.collision.Ray;
 
 /** @author xoppa */
 public class ShootTest extends BaseBulletTest {
@@ -31,14 +32,12 @@ public class ShootTest extends BaseBulletTest {
 	final float BOXOFFSET_Y = 0.5f;
 	final float BOXOFFSET_Z = 0f;
 	
-	protected BulletEntity ground;
-	
 	@Override
 	public void create () {
 		super.create();
 
 		// Create the entities
-		(ground = world.add("ground", 0f, 0f, 0f))
+		world.add("ground", 0f, 0f, 0f)
 			.color.set(0.25f + 0.5f * (float)Math.random(), 0.25f + 0.5f * (float)Math.random(), 0.25f + 0.5f * (float)Math.random(), 1f);
 
 		for (int x = 0; x < BOXCOUNT_X; x++) {
@@ -56,10 +55,4 @@ public class ShootTest extends BaseBulletTest {
 		shoot(x, y);
 		return true;
 	}
-	
-	@Override
-	public void dispose () {
-		super.dispose();
-		ground = null;
-	}
 }
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/SoftBodyTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/SoftBodyTest.java
index ed0daa6..9d37915 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/SoftBodyTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/SoftBodyTest.java
@@ -81,7 +81,7 @@ public class SoftBodyTest extends BaseBulletTest {
 		softBody = btSoftBodyHelpers.CreatePatch(worldInfo, patch00, patch10, patch01, patch11, 15, 15, 15, false);
 		softBody.takeOwnership();
 		softBody.setTotalMass(100f);
-		((btSoftRigidDynamicsWorld)(world.collisionWorld)).addSoftBody(softBody);
+		((btSoftRigidDynamicsWorld)(world.dynamicsWorld)).addSoftBody(softBody);
 		
 		final int vertCount = softBody.getNodeCount();
 		final int faceCount = softBody.getFaceCount(); 
@@ -107,7 +107,7 @@ public class SoftBodyTest extends BaseBulletTest {
 	
 	@Override
 	public void dispose () {
-		((btSoftRigidDynamicsWorld)(world.collisionWorld)).removeSoftBody(softBody);
+		((btSoftRigidDynamicsWorld)(world.dynamicsWorld)).removeSoftBody(softBody);
 		softBody.delete();
 		softBody = null;
 		
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/SoftMeshTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/SoftMeshTest.java
index 1ff8203..33b8984 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/SoftMeshTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/SoftMeshTest.java
@@ -87,12 +87,12 @@ public class SoftMeshTest extends BaseBulletTest {
 		softBody.randomizeConstraints();
 		softBody.setTotalMass(1);
 		softBody.translate(Vector3.tmp.set(1, 5, 1));
-		((btSoftRigidDynamicsWorld)(world.collisionWorld)).addSoftBody(softBody);
+		((btSoftRigidDynamicsWorld)(world.dynamicsWorld)).addSoftBody(softBody);
 	}
 	
 	@Override
 	public void dispose () {
-		((btSoftRigidDynamicsWorld)(world.collisionWorld)).removeSoftBody(softBody);
+		((btSoftRigidDynamicsWorld)(world.dynamicsWorld)).removeSoftBody(softBody);
 		softBody.delete();
 		softBody = null;
 		
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/examples/CustomTmxMapLoader.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/examples/CustomTmxMapLoader.java
deleted file mode 100644
index 2fbea0f..0000000
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/examples/CustomTmxMapLoader.java
+++ /dev/null
@@ -1,16 +0,0 @@
-package com.badlogic.gdx.tests.examples;
-
-import com.badlogic.gdx.files.FileHandle;
-import com.badlogic.gdx.maps.ImageResolver;
-import com.badlogic.gdx.maps.tiled.TiledMap;
-import com.badlogic.gdx.maps.tiled.TmxMapLoader;
-import com.badlogic.gdx.utils.XmlReader.Element;
-
-public class CustomTmxMapLoader extends TmxMapLoader {
-//
-//	@Override
-//	protected void loadTileSet (TiledMap map, Element element, FileHandle tmxFile, ImageResolver imageResolver) {
-//		super.loadTileSet(map, element, tmxFile, imageResolver);
-//	}
-//	
-}
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/extensions/GLEEDTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/extensions/GLEEDTest.java
new file mode 100644
index 0000000..8aa0e6d
--- /dev/null
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/extensions/GLEEDTest.java
@@ -0,0 +1,94 @@
+/*******************************************************************************
+ * Copyright 2011 See AUTHORS file.
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/
+package com.badlogic.gdx.tests.extensions;
+
+import com.badlogic.gdx.Gdx;
+import com.badlogic.gdx.Input.Keys;
+import com.badlogic.gdx.assets.AssetManager;
+import com.badlogic.gdx.assets.loaders.resolvers.InternalFileHandleResolver;
+import com.badlogic.gdx.gleed.Level;
+import com.badlogic.gdx.gleed.LevelLoader;
+import com.badlogic.gdx.gleed.LevelRenderer;
+import com.badlogic.gdx.graphics.GL10;
+import com.badlogic.gdx.graphics.OrthographicCamera;
+import com.badlogic.gdx.tests.utils.GdxTest;
+import com.badlogic.gdx.utils.Logger;
+
+public class GLEEDTest extends GdxTest {
+	
+	enum State {
+		Loading,
+		Running
+	}
+	
+	AssetManager manager;
+	OrthographicCamera camera;
+	LevelRenderer renderer;
+	State state = State.Loading;
+	
+	@Override
+	public boolean needsGL20() {
+		return true;
+	}
+	
+	@Override
+	public void create() {
+		super.create();
+		manager = new AssetManager();
+		camera = new OrthographicCamera(640, 480);
+		camera.setToOrtho(false, 640, 480);
+		camera.zoom = 2.0f;
+		LevelLoader.setLoggingLevel(Logger.INFO);
+		manager.setLoader(Level.class, new LevelLoader(new InternalFileHandleResolver()));
+		manager.load("data/gleedtest.xml", Level.class);
+	}
+	
+	@Override
+	public void render() {
+		Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
+		
+		if (state == State.Loading && manager.update()) {
+			state = State.Running;
+			renderer = new LevelRenderer(manager.get("data/gleedtest.xml", Level.class), null, 1.0f);
+		}
+		
+		if (state == State.Running) {
+			camera.update();
+			renderer.render(camera);
+			
+			if (Gdx.input.isKeyPressed(Keys.UP)) {
+				camera.position.y += 5.0f;
+			}
+			else if (Gdx.input.isKeyPressed(Keys.DOWN)) {
+				camera.position.y -= 5.0f;
+			}
+			
+			if (Gdx.input.isKeyPressed(Keys.RIGHT)) {
+				camera.position.x += 5.0f;
+			}
+			else if (Gdx.input.isKeyPressed(Keys.LEFT)) {
+				camera.position.x -= 5.0f;
+			}
+			
+			if (Gdx.input.isKeyPressed(Keys.A)) {
+				camera.zoom += 0.05f;
+			}
+			else if (Gdx.input.isKeyPressed(Keys.S)) {
+				camera.zoom -= 0.05f;
+			}
+		}
+	}
+}
\ No newline at end of file
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/gwt/GwtInputTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/gwt/GwtInputTest.java
index ee0b788..ab9a5b5 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/gwt/GwtInputTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/gwt/GwtInputTest.java
@@ -35,12 +35,12 @@ public class GwtInputTest extends GdxTest {
 	public void render () {
 		Gdx.gl.glClearColor(0, 0, 0, 1);
 		Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
-		renderer.begin(ShapeType.Filled);
+		renderer.begin(ShapeType.FilledRectangle);
 		if (Gdx.input.isTouched())
 			renderer.setColor(Color.RED);
 		else
 			renderer.setColor(Color.GREEN);
-		renderer.rect(Gdx.input.getX() - 15, Gdx.graphics.getHeight() - Gdx.input.getY() - 15, 30, 30);
+		renderer.filledRect(Gdx.input.getX() - 15, Gdx.graphics.getHeight() - Gdx.input.getY() - 15, 30, 30);
 		renderer.end();
 	}
 
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/gwt/GwtTestWrapper.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/gwt/GwtTestWrapper.java
index c374dda..ce25b41 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/gwt/GwtTestWrapper.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/gwt/GwtTestWrapper.java
@@ -16,7 +16,6 @@
 
 package com.badlogic.gdx.tests.gwt;
 
-import com.badlogic.gdx.Application;
 import com.badlogic.gdx.Gdx;
 import com.badlogic.gdx.Input;
 import com.badlogic.gdx.InputAdapter;
@@ -78,7 +77,6 @@ import com.badlogic.gdx.tests.ParticleEmitterTest;
 import com.badlogic.gdx.tests.PixelsPerInchTest;
 import com.badlogic.gdx.tests.ProjectiveTextureTest;
 import com.badlogic.gdx.tests.RotationTest;
-import com.badlogic.gdx.tests.RunnablePostTest;
 import com.badlogic.gdx.tests.ShadowMappingTest;
 import com.badlogic.gdx.tests.ShapeRendererTest;
 import com.badlogic.gdx.tests.SimpleAnimationTest;
@@ -97,7 +95,6 @@ import com.badlogic.gdx.tests.TextureAtlasTest;
 import com.badlogic.gdx.tests.UITest;
 import com.badlogic.gdx.tests.VertexBufferObjectShaderTest;
 import com.badlogic.gdx.tests.YDownTest;
-import com.badlogic.gdx.tests.superkoalio.SuperKoalio;
 import com.badlogic.gdx.tests.utils.GdxTest;
 
 public class GwtTestWrapper extends GdxTest {
@@ -106,13 +103,10 @@ public class GwtTestWrapper extends GdxTest {
 	Skin skin;
 	BitmapFont font;
 	GdxTest test;
-	boolean dispose = false;
+	boolean dispose;
 
 	@Override
 	public void create () {
-		Gdx.app.setLogLevel(Application.LOG_DEBUG);
-		Gdx.app.log("GdxTestGwt", "Setting up for " +tests.length+ " tests.");
-		
 		ui = new Stage(Gdx.graphics.getWidth(), Gdx.graphics.getHeight(), true);
 		skin = new Skin(Gdx.files.internal("data/uiskin.json"));
 		font = new BitmapFont(Gdx.files.internal("data/arial-15.fnt"), false);
@@ -131,7 +125,6 @@ public class GwtTestWrapper extends GdxTest {
 				public void clicked (InputEvent event, float x, float y) {
 					((InputWrapper)Gdx.input).multiplexer.removeProcessor(ui);
 					test = instancer.instance();
-					Gdx.app.log("GdxTestGwt", "Clicked on " + test.getClass().getName());
 					test.create();
 					test.resize(Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
 				}
@@ -146,19 +139,14 @@ public class GwtTestWrapper extends GdxTest {
 			@Override
 			public boolean keyUp (int keycode) {
 				if (keycode == Keys.ESCAPE) {
-					if (test != null) {
-						Gdx.app.log("GdxTestGwt", "Exiting current test.");
-						dispose = true;
-					}
+					dispose = true;
 				}
 				return false;
 			}
 		};
 		((InputWrapper)Gdx.input).multiplexer.addProcessor(ui);
-		
-		Gdx.app.log("GdxTestGwt", "Test picker UI setup complete.");
 	}
-	
+
 	public void render () {
 		if (test == null) {
 			Gdx.gl.glViewport(0, 0, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
@@ -186,9 +174,6 @@ public class GwtTestWrapper extends GdxTest {
 	public void resize (int width, int height) {
 		ui.setViewport(width, height, false);
 		container.setSize(width, height);
-		if (test != null) {
-			test.resize(width, height);
-		}
 	}
 
 	class InputWrapper extends InputAdapter implements Input {
@@ -577,8 +562,7 @@ public class GwtTestWrapper extends GdxTest {
 			public GdxTest instance () {
 				return new RotationTest();
 			}
-		}, 
-// new Instancer() {public GdxTest instance(){return new RunnablePostTest();}}, // Goes into infinite loop
+		},
 // new Instancer() {public GdxTest instance(){return new ScrollPaneTest();}}, // FIXME this messes up stuff, why?
 // new Instancer() {public GdxTest instance(){return new ShaderMultitextureTest();}}, // FIXME fucks up stuff
 		new Instancer() {
@@ -655,11 +639,7 @@ public class GwtTestWrapper extends GdxTest {
 			public GdxTest instance () {
 				return new YDownTest();
 			}
-		}, new Instancer() {
-			public GdxTest instance () {
-				return new SuperKoalio();
-			}
-		}};
+		},};
 
 	@Override
 	public boolean needsGL20 () {
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/superkoalio/SuperKoalio.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/superkoalio/SuperKoalio.java
deleted file mode 100755
index 2ebe487..0000000
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/superkoalio/SuperKoalio.java
+++ /dev/null
@@ -1,295 +0,0 @@
-package com.badlogic.gdx.tests.superkoalio;
-
-import com.badlogic.gdx.Gdx;
-import com.badlogic.gdx.Input.Keys;
-import com.badlogic.gdx.graphics.GL10;
-import com.badlogic.gdx.graphics.OrthographicCamera;
-import com.badlogic.gdx.graphics.Texture;
-import com.badlogic.gdx.graphics.g2d.Animation;
-import com.badlogic.gdx.graphics.g2d.SpriteBatch;
-import com.badlogic.gdx.graphics.g2d.TextureRegion;
-import com.badlogic.gdx.graphics.glutils.ShapeRenderer;
-import com.badlogic.gdx.graphics.glutils.ShapeRenderer.ShapeType;
-import com.badlogic.gdx.maps.tiled.TiledMap;
-import com.badlogic.gdx.maps.tiled.TiledMapTile;
-import com.badlogic.gdx.maps.tiled.TiledMapTileLayer;
-import com.badlogic.gdx.maps.tiled.TiledMapTileLayer.Cell;
-import com.badlogic.gdx.maps.tiled.TmxMapLoader;
-import com.badlogic.gdx.maps.tiled.renderers.OrthogonalTiledMapRenderer;
-import com.badlogic.gdx.math.MathUtils;
-import com.badlogic.gdx.math.Rectangle;
-import com.badlogic.gdx.math.Vector2;
-import com.badlogic.gdx.tests.utils.GdxTest;
-import com.badlogic.gdx.utils.Array;
-import com.badlogic.gdx.utils.Pool;
-
-/**
- * Super Mario Brothers like very basic platformer, using a tile map build
- * via <a href="http://www.mapeditor.org/>Tiled</a> and a tileset
- * and sprites by <a href="http://www.vickiwenderlich.com/">Vicky Wenderlich</a></p>
- * 
- * Shows simple platformer collision detection as well as on-the-fly map modifications
- * through destructable blocks!
- * @author mzechner
- *
- */
-public class SuperKoalio extends GdxTest {
-	/**
-	 * The player character, has state and state time, 
-	 */
-	static class Koala {
-		static float WIDTH;
-		static float HEIGHT;
-		static float MAX_VELOCITY = 10f;
-		static float JUMP_VELOCITY = 40f;
-		static float DAMPING = 0.87f;
-		
-		enum State {
-			Standing,
-			Walking,
-			Jumping
-		}
-		
-		final Vector2 position = new Vector2();
-		final Vector2 velocity = new Vector2();
-		State state = State.Walking;
-		float stateTime = 0;
-		boolean facesRight = true;
-		boolean grounded = false;
-	}
-	
-	private TiledMap map;
-	private OrthogonalTiledMapRenderer renderer;
-	private OrthographicCamera camera;
-	private Texture koalaTexture;
-	private Animation stand;
-	private Animation walk;
-	private Animation jump;
-	private Koala koala;
-	private Pool<Rectangle> rectPool = new Pool<Rectangle>() {
-		@Override
-		protected Rectangle newObject () {
-			return new Rectangle();
-		}
-	};
-	private Array<Rectangle> tiles = new Array<Rectangle>();
-	
-	private static final float GRAVITY = -2.5f;
-	
-	@Override
-	public void create () {
-		// load the koala frames, split them, and assign them to Animations
-		koalaTexture = new Texture("data/maps/tiled/super-koalio/koalio.png"); 
-		TextureRegion[] regions = TextureRegion.split(koalaTexture, 18, 26)[0];
-		stand = new Animation(0, regions[0]);
-		jump = new Animation(0, regions[1]);
-		walk = new Animation(0.15f, regions[2], regions[3], regions[4]);
-		walk.setPlayMode(Animation.LOOP_PINGPONG);
-		
-		// figure out the width and height of the koala for collision
-		// detection and rendering by converting a koala frames pixel
-		// size into world units (1 unit == 16 pixels)
-		Koala.WIDTH = 1 / 16f * regions[0].getRegionWidth();
-		Koala.HEIGHT = 1 / 16f * regions[0].getRegionHeight();
-		
-		// load the map, set the unit scale to 1/16 (1 unit == 16 pixels)
-		map = new TmxMapLoader().load("data/maps/tiled/super-koalio/level1.tmx");
-		renderer = new OrthogonalTiledMapRenderer(map, 1 / 16f);
-		
-		// create an orthographic camera, shows us 30x20 units of the world
-		camera = new OrthographicCamera();
-		camera.setToOrtho(false, 30, 20);
-		camera.update();
-		
-		// create the Koala we want to move around the world
-		koala = new Koala();
-		koala.position.set(20, 20);
-	}
-
-	@Override
-	public void render () {
-		// clear the screen
-		Gdx.gl.glClearColor(0.7f, 0.7f, 1.0f, 1);
-		Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
-		
-		// get the delta time
-		float deltaTime = Gdx.graphics.getDeltaTime();
-		
-		// update the koala (process input, collision detection, position update)
-		updateKoala(deltaTime);
-		
-		// let the camera follow the koala, x-axis only
-		camera.position.x = koala.position.x;
-		camera.update();
-		
-		// set the tile map rendere view based on what the
-		// camera sees and render the map
-		renderer.setView(camera);
-		renderer.render();
-		
-		// render the koala
-		renderKoala(deltaTime);
-	}
-	
-	private Vector2 tmp = new Vector2();
-	private void updateKoala(float deltaTime) {
-		if(deltaTime == 0) return;
-		koala.stateTime += deltaTime;	
-		
-		// check input and apply to velocity & state
-		if((Gdx.input.isKeyPressed(Keys.SPACE) || isTouched(0.75f, 1)) && koala.grounded) {
-			koala.velocity.y += Koala.JUMP_VELOCITY;
-			koala.state = Koala.State.Jumping;
-			koala.grounded = false;
-		}
-		
-		if(Gdx.input.isKeyPressed(Keys.LEFT) || Gdx.input.isKeyPressed(Keys.A) || isTouched(0, 0.25f)) {
-			koala.velocity.x = -Koala.MAX_VELOCITY;
-			if(koala.grounded) koala.state = Koala.State.Walking;
-			koala.facesRight = false;
-		}
-		
-		if(Gdx.input.isKeyPressed(Keys.RIGHT) || Gdx.input.isKeyPressed(Keys.D) || isTouched(0.25f, 0.5f)) {
-			koala.velocity.x = Koala.MAX_VELOCITY;
-			if(koala.grounded) koala.state = Koala.State.Walking;
-			koala.facesRight = true;
-		}
-		
-		// apply gravity if we are falling
-		koala.velocity.add(0, GRAVITY);
-		
-		// clamp the velocity to the maximum, x-axis only
-		if(Math.abs(koala.velocity.x) > Koala.MAX_VELOCITY) {
-			koala.velocity.x = Math.signum(koala.velocity.x) * Koala.MAX_VELOCITY;
-		}
-		
-		// clamp the velocity to 0 if it's < 1, and set the state to standign
-		if(Math.abs(koala.velocity.x) < 1) {
-			koala.velocity.x = 0;
-			if(koala.grounded) koala.state = Koala.State.Standing;
-		}
-		
-		// multiply by delta time so we know how far we go
-		// in this frame
-		koala.velocity.mul(deltaTime);
-		
-		// perform collision detection & response, on each axis, separately
-		// if the koala is moving right, check the tiles to the right of it's
-		// right bounding box edge, otherwise check the ones to the left
-		Rectangle koalaRect = rectPool.obtain();
-		koalaRect.set(koala.position.x, koala.position.y, Koala.WIDTH, Koala.HEIGHT);
-		int startX, startY, endX, endY;
-		if(koala.velocity.x > 0) {
-			startX = endX = (int)(koala.position.x + Koala.WIDTH + koala.velocity.x);
-		} else {
-			startX = endX = (int)(koala.position.x + koala.velocity.x);
-		}
-		startY = (int)(koala.position.y);
-		endY = (int)(koala.position.y + Koala.HEIGHT);
-		getTiles(startX, startY, endX, endY, tiles);
-		koalaRect.x += koala.velocity.x;
-		for(Rectangle tile: tiles) {
-			if(koalaRect.overlaps(tile)) {
-				koala.velocity.x = 0;
-				break;
-			}
-		}
-		koalaRect.x = koala.position.x;
-		
-		// if the koala is moving upwards, check the tiles to the top of it's
-		// top bounding box edge, otherwise check the ones to the bottom
-		if(koala.velocity.y > 0) {
-			startY = endY = (int)(koala.position.y + Koala.HEIGHT + koala.velocity.y);
-		} else {
-			startY = endY = (int)(koala.position.y + koala.velocity.y);
-		}
-		startX = (int)(koala.position.x);
-		endX = (int)(koala.position.x + Koala.WIDTH);
-		getTiles(startX, startY, endX, endY, tiles);
-		koalaRect.y += koala.velocity.y;
-		for(Rectangle tile: tiles) {
-			if(koalaRect.overlaps(tile)) {
-				// we actually reset the koala y-position here
-				// so it is just below/above the tile we collided with
-				// this removes bouncing :)
-				if(koala.velocity.y > 0) {
-					koala.position.y = tile.y - Koala.HEIGHT;
-					// we hit a block jumping upwards, let's destroy it!
-					TiledMapTileLayer layer = (TiledMapTileLayer)map.getLayers().get(1);
-					layer.setCell((int)tile.x, (int)tile.y, null);
-				} else {
-					koala.position.y = tile.y + tile.height;
-					// if we hit the ground, mark us as grounded so we can jump
-					koala.grounded = true;
-				}
-				koala.velocity.y = 0;
-				break;
-			}
-		}
-		rectPool.free(koalaRect);
-		
-		// unscale the velocity by the inverse delta time and set 
-		// the latest position
-		koala.position.add(koala.velocity);
-		koala.velocity.mul(1/deltaTime);
-		
-		// Apply damping to the velocity on the x-axis so we don't
-		// walk infinitely once a key was pressed
-		koala.velocity.x *= Koala.DAMPING;
-		
-	}
-
-	private boolean isTouched(float startX, float endX) {
-		// check if any finge is touch the area between startX and endX
-		// startX/endX are given between 0 (left edge of the screen) and 1 (right edge of the screen)
-		for(int i = 0; i < 2; i++) {
-			float x = Gdx.input.getX() / (float)Gdx.graphics.getWidth();
-			if(Gdx.input.isTouched(i) && (x >= startX && x <= endX)) {
-				return true;
-			}
-		}
-		return false;
-	}
-	
-	private void getTiles(int startX, int startY, int endX, int endY, Array<Rectangle> tiles) {
-		TiledMapTileLayer layer = (TiledMapTileLayer)map.getLayers().get(1);
-		rectPool.freeAll(tiles);
-		tiles.clear();
-		for(int y = startY; y <= endY; y++) {
-			for(int x = startX; x <= endX; x++) {
-				Cell cell = layer.getCell(x, y);
-				if(cell != null) {
-					Rectangle rect = rectPool.obtain();
-					rect.set(x, y, 1, 1);
-					tiles.add(rect);
-				}
-			}
-		}
-	}
-	
-	private void renderKoala(float deltaTime) {
-		// based on the koala state, get the animation frame
-		TextureRegion frame = null;
-		switch(koala.state) {
-			case Standing: frame = stand.getKeyFrame(koala.stateTime); break;
-			case Walking: frame = walk.getKeyFrame(koala.stateTime); break;
-			case Jumping: frame = jump.getKeyFrame(koala.stateTime); break; 
-		}
-		
-		// draw the koala, depending on the current velocity
-		// on the x-axis, draw the koala facing either right
-		// or left
-		SpriteBatch batch = renderer.getSpriteBatch();
-		batch.begin();
-		if(koala.facesRight) {
-			batch.draw(frame, koala.position.x, koala.position.y, Koala.WIDTH, Koala.HEIGHT);
-		} else {
-			batch.draw(frame, koala.position.x + Koala.WIDTH, koala.position.y, -Koala.WIDTH, Koala.HEIGHT);
-		}
-		batch.end();
-	}
-
-	@Override
-	public void dispose () {
-	}
-}
\ No newline at end of file
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/utils/GdxTests.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/utils/GdxTests.java
index 2c4a7ef..cb21e73 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/utils/GdxTests.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/utils/GdxTests.java
@@ -34,12 +34,11 @@ import java.util.Collections;
 import java.util.List;
 
 import com.badlogic.gdx.tests.*;
-import com.badlogic.gdx.tests.bench.TiledMapBench;
 import com.badlogic.gdx.tests.examples.MoveSpriteExample;
+import com.badlogic.gdx.tests.extensions.GLEEDTest;
 import com.badlogic.gdx.tests.gles2.HelloTriangle;
 import com.badlogic.gdx.tests.gles2.SimpleVertexShader;
 import com.badlogic.gdx.tests.net.NetAPITest;
-import com.badlogic.gdx.tests.superkoalio.SuperKoalio;
 
 /** List of GdxTest classes. To be used by the test launchers. If you write your own test, add it in here!
  * 
@@ -63,12 +62,12 @@ public class GdxTests {
 		OrthoCamBorderTest.class, ParallaxTest.class, ParticleEmitterTest.class, PickingTest.class, PixelsPerInchTest.class,
 		PixmapBlendingTest.class, PixmapTest.class, PixmapPackerTest.class, PolygonRegionTest.class, PolygonSpriteTest.class, PreferencesTest.class,
 		ProjectiveTextureTest.class, Pong.class, ProjectTest.class, RemoteTest.class, RotationTest.class, DragAndDropTest.class,
-		ShaderMultitextureTest.class, ShadowMappingTest.class, PathTest.class, SimpleAnimationTest.class, SimpleDecalTest.class,
+		ShaderMultitextureTest.class, ShadowMappingTest.class, SplineTest.class, SimpleAnimationTest.class, SimpleDecalTest.class,
 		SimpleStageCullingTest.class, SoundTest.class, SpriteCacheTest.class, SpriteCacheOffsetTest.class, LetterBoxTest.class,
 		SpriteBatchRotationTest.class, SpriteBatchShaderTest.class, SpriteBatchTest.class, SpritePerformanceTest.class,
 		SpritePerformanceTest2.class, StagePerformanceTest.class, StageTest.class, TerrainTest.class, TextureDataTest.class,
 		TextureDownloadTest.class, TextureFormatTest.class, TextureAtlasTest.class, TextInputDialogTest.class,
-		TextureRenderTest.class, TileTest.class, UITest.class, VBOVATest.class, VertexArrayTest.class,
+		TextureRenderTest.class, TiledMapTest.class, TileTest.class, UITest.class, VBOVATest.class, VertexArrayTest.class,
 		VertexBufferObjectTest.class, VertexArrayClassTest.class, VertexBufferObjectClassTest.class, LetterBoxTest2.class,
 		VertexBufferObjectShaderTest.class, VibratorTest.class, WaterRipples.class, HelloTriangle.class,
 		SimpleVertexShader.class, ShapeRendererTest.class, MoveSpriteExample.class,
@@ -76,8 +75,8 @@ public class GdxTests {
 		// InternationalFontsTest.class, VorbisTest.class
 		TextButtonTest.class, TextButtonTestGL2.class, TextureBindTest.class, SortedSpriteTest.class,
 		ExternalMusicTest.class, SoftKeyboardTest.class, DirtyRenderingTest.class, YDownTest.class,
-		ScreenCaptureTest.class, BitmapFontTest.class, LabelScaleTest.class, GamepadTest.class, NetAPITest.class, TideMapAssetManagerTest.class, TideMapDirectLoaderTest.class, TiledMapAssetManagerTest.class, TiledMapBench.class,
-		RunnablePostTest.class, Vector2dTest.class, SuperKoalio.class, NinePatchTest.class));
+		ScreenCaptureTest.class, BitmapFontTest.class, LabelScaleTest.class, GLEEDTest.class, GamepadTest.class, NetAPITest.class,
+		RunnablePostTest.class));
 	
 	public static List<String> getNames () {
 		List<String> names = new ArrayList<String>(tests.size());
diff --git a/update.sh b/update.sh
new file mode 100644
index 0000000..0645085
--- /dev/null
+++ b/update.sh
@@ -0,0 +1,55 @@
+#! /usr/bin/env sh
+# Execute this in the root directory of the trunk to update all jars and natives from 
+# the CI server.
+wget http://libgdx.badlogicgames.com/nightlies/libgdx-nightly-latest.zip -O libgdx-nightlies.zip
+unzip libgdx-nightlies.zip -d nightlies
+unzip nightlies/gdx-natives.jar -d nightlies/libs
+
+# copy natives to gdx/libs and extensions libs
+cp nightlies/gdx-natives.jar gdx/libs
+cp -rf nightlies/armeabi nightlies/armeabi-v7a gdx/libs
+
+# gdx-audio natives
+cp -rf nightlies/extensions/gdx-audio-natives.jar extensions/gdx-audio/libs
+cp -rf nightlies/extensions/armeabi/libgdx-audio.so extensions/gdx-audio/libs/armeabi
+cp -rf nightlies/extensions/armeabi-v7a/libgdx-audio.so extensions/gdx-audio/libs/armeabi-v7a
+
+
+# gdx-image natives
+cp -rf nightlies/extensions/gdx-image-natives.jar extensions/gdx-image/libs
+cp -rf nightlies/extensions/armeabi/libgdx-image.so extensions/gdx-image/libs/armeabi
+cp -rf nightlies/extensions/armeabi-v7a/libgdx-image.so extensions/gdx-image/libs/armeabi-v7a
+
+# gdx-freetype natives
+cp -rf nightlies/extensions/gdx-freetype-natives.jar extensions/gdx-freetype/libs
+cp -rf nightlies/extensions/armeabi/libgdx-freetype.so extensions/gdx-freetype/libs/armeabi
+cp -rf nightlies/extensions/armeabi-v7a/libgdx-freetype.so extensions/gdx-freetype/libs/armeabi-v7a
+
+# gdx-bullet natives
+cp -rf nightlies/extensions/gdx-bullet/gdx-bullet-natives.jar extensions/gdx-bullet/libs
+cp -rf nightlies/extensions/gdx-bullet/armeabi/libgdx-bullet.so extensions/gdx-bullet/libs/armeabi
+cp -rf nightlies/extensions/gdx-bullet/armeabi-v7a/libgdx-bullet.so extensions/gdx-bullet/libs/armeabi-v7a
+
+# gdx-controllers natives
+cp -rf nightlies/extensions/gdx-controllers-desktop-natives.jar extensions/gdx-controllers/gdx-controllers-desktop/libs
+
+# copy android natives to tests
+cp -rf nightlies/armeabi nightlies/armeabi-v7a tests/gdx-tests-android/libs
+cp -rf nightlies/extensions/armeabi nightlies/extensions/armeabi-v7a tests/gdx-tests-android/libs
+cp -rf nightlies/extensions/gdx-bullet/armeabi/libgdx-bullet.so tests/gdx-tests-android/libs/armeabi
+cp -rf nightlies/extensions/gdx-bullet/armeabi-v7a/libgdx-bullet.so tests/gdx-tests-android/libs/armeabi-v7a
+
+# copy jars and natives to demos
+cp -rf nightlies/armeabi nightlies/armeabi-v7a demos/invaders/gdx-invaders-android/libs
+cp -rf nightlies/armeabi nightlies/armeabi-v7a demos/vector-pinball/gdx-vectorpinball-android/libs
+cp -rf nightlies/armeabi nightlies/armeabi-v7a demos/superjumper/superjumper-android/libs
+cp -rf nightlies/armeabi nightlies/armeabi-v7a demos/metagun/metagun-android/libs
+cp -rf nightlies/armeabi nightlies/armeabi-v7a demos/cuboc/cuboc-android/libs
+cp -rf nightlies/armeabi nightlies/armeabi-v7a demos/pax-britannica/pax-britannica-android/libs
+cp -rf nightlies/armeabi nightlies/armeabi-v7a demos/very-angry-robots/very-angry-robots-android/libs
+cp -rf nightlies/armeabi nightlies/armeabi-v7a extensions/model-loaders/model-loaders-android/libs
+cp -rf nightlies/armeabi nightlies/armeabi-v7a extensions/gdx-remote/libs
+
+# remove temporary directory
+rm -rf nightlies
+rm libgdx-nightlies.zip
