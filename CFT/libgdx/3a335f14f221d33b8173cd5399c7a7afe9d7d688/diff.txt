diff --git a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglAWTCanvas.java b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglAWTCanvas.java
index e3c6429..4dca75c 100644
--- a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglAWTCanvas.java
+++ b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglAWTCanvas.java
@@ -393,6 +393,15 @@ public class LwjglAWTCanvas implements Application {
 		}
 	}
 
+	/** Test whether the canvas' context is current. */
+	public boolean isCurrent() {
+		try {
+			return canvas.isCurrent();
+		} catch (LWJGLException ex) {
+			throw new GdxRuntimeException(ex);
+		}
+	}
+
 	/** @param cursor May be null. */
 	public void setCursor (Cursor cursor) {
 		this.cursor = cursor;
diff --git a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGraphics.java b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGraphics.java
index 706db4f..ee4f57a 100644
--- a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGraphics.java
+++ b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGraphics.java
@@ -192,6 +192,10 @@ public class LwjglGraphics implements Graphics {
 		} catch (Exception ex) {
 			Display.destroy();
 			try {
+				Thread.sleep(200);
+			} catch (InterruptedException ignored) {
+			}
+			try {
 				Display.create(new PixelFormat(0, 16, 8));
 				if (getDesktopDisplayMode().bitsPerPixel == 16) {
 					bufferFormat = new BufferFormat(5, 6, 5, 0, 16, 8, 0, false);
@@ -205,6 +209,10 @@ public class LwjglGraphics implements Graphics {
 			} catch (Exception ex2) {
 				Display.destroy();
 				try {
+					Thread.sleep(200);
+				} catch (InterruptedException ignored) {
+				}
+				try {
 					Display.create(new PixelFormat());
 				} catch (Exception ex3) {
 					if (ex3.getMessage().contains("Pixel format not accelerated"))
diff --git a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtGraphics.java b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtGraphics.java
index b58dec4..2973295 100644
--- a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtGraphics.java
+++ b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtGraphics.java
@@ -275,17 +275,15 @@ public class GwtGraphics implements Graphics {
 
 	@Override
 	public void setContinuousRendering (boolean isContinuous) {
-		throw new GdxRuntimeException("No supported");
 	}
 
 	@Override
 	public boolean isContinuousRendering () {
-		throw new GdxRuntimeException("No supported");
+		return false;
 	}
 
 	@Override
 	public void requestRendering () {
-		throw new GdxRuntimeException("No supported");
 	}
 
 	@Override
diff --git a/extensions/gdx-gleed/.classpath b/extensions/gdx-gleed/.classpath
new file mode 100644
index 0000000..66717fd
--- /dev/null
+++ b/extensions/gdx-gleed/.classpath
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<classpath>
+	<classpathentry kind="src" path="src"/>
+	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6"/>
+	<classpathentry combineaccessrules="false" kind="src" path="/gdx"/>
+	<classpathentry kind="output" path="bin"/>
+</classpath>
diff --git a/extensions/gdx-gleed/.gitignore b/extensions/gdx-gleed/.gitignore
new file mode 100644
index 0000000..e467cec
--- /dev/null
+++ b/extensions/gdx-gleed/.gitignore
@@ -0,0 +1,2 @@
+# Don't .class files
+*.class
\ No newline at end of file
diff --git a/extensions/gdx-gleed/.project b/extensions/gdx-gleed/.project
new file mode 100644
index 0000000..6c24325
--- /dev/null
+++ b/extensions/gdx-gleed/.project
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<projectDescription>
+	<name>gdx-gleed</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+	</natures>
+</projectDescription>
diff --git a/extensions/gdx-gleed/.settings/org.eclipse.jdt.core.prefs b/extensions/gdx-gleed/.settings/org.eclipse.jdt.core.prefs
new file mode 100644
index 0000000..8000cd6
--- /dev/null
+++ b/extensions/gdx-gleed/.settings/org.eclipse.jdt.core.prefs
@@ -0,0 +1,11 @@
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.6
+org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
+org.eclipse.jdt.core.compiler.compliance=1.6
+org.eclipse.jdt.core.compiler.debug.lineNumber=generate
+org.eclipse.jdt.core.compiler.debug.localVariable=generate
+org.eclipse.jdt.core.compiler.debug.sourceFile=generate
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.source=1.6
diff --git a/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/CircleElement.java b/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/CircleElement.java
new file mode 100644
index 0000000..5507f09
--- /dev/null
+++ b/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/CircleElement.java
@@ -0,0 +1,40 @@
+/*******************************************************************************
+ * Copyright 2012 David Saltares
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/ 
+
+package com.badlogic.gdx.gleed;
+
+import com.badlogic.gdx.math.Circle;
+
+/**
+ * @author David Saltares
+ * @date 02/11/2012
+ * 
+ * @brief Circle GLEED2D shape implementation 
+ */
+public class CircleElement extends LevelObject {
+	Circle circle;
+	
+	CircleElement() {
+		super();
+	}
+	
+	/**
+	 * @return circle shape
+	 */
+	public Circle getCircle() {
+		return circle;
+	}
+}
diff --git a/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/ILevelRenderer.java b/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/ILevelRenderer.java
new file mode 100644
index 0000000..31c8f78
--- /dev/null
+++ b/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/ILevelRenderer.java
@@ -0,0 +1,42 @@
+/*******************************************************************************
+ * Copyright 2012 David Saltares
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/ 
+
+package com.badlogic.gdx.gleed;
+
+import com.badlogic.gdx.graphics.OrthographicCamera;
+
+/**
+ * @author David Saltares
+ * @date 03/11/2012
+ *
+ * @brief GLEED2D level render interface
+ */
+public interface ILevelRenderer {
+	/**
+	 * Renders every TextureElement in the level 
+	 * 
+	 * @param camera camera to render the level
+	 */
+	public void render(OrthographicCamera camera);
+	
+	/**
+	 * Renders every TextureElement in the selected layers
+	 *  
+	 * @param camera camera to render the level
+	 * @param layers selected layers
+	 */
+	public void render(OrthographicCamera camera, int[] layers);
+}
diff --git a/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/Layer.java b/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/Layer.java
new file mode 100644
index 0000000..135543d
--- /dev/null
+++ b/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/Layer.java
@@ -0,0 +1,79 @@
+/*******************************************************************************
+ * Copyright 2012 David Saltares
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/ 
+
+package com.badlogic.gdx.gleed;
+
+import com.badlogic.gdx.utils.Array;
+
+/**
+ * @author David Saltares
+ * @date 02/11/2012
+ *
+ * @brief Represents a layer of a GLEED2D level
+ */
+public class Layer extends LevelObject {
+	
+	Array<LevelObject> objects = new Array<LevelObject>();
+	Array<TextureElement> textures = new Array<TextureElement>();
+	
+	Layer() {}
+	
+	/**
+	 * @return texture objects in the layer
+	 */
+	public Array<TextureElement> getTextures() {
+		return textures;
+	}
+	
+	/**
+	 * @param name name of the desired texture element
+	 * @return texture element if found, null if it doesn't exist
+	 */
+	public TextureElement getTexture(String name) {
+		for (int i = 0; i < textures.size; ++i) {
+			TextureElement texture = textures.get(i);
+			
+			if (texture.name.equals(name)) {
+				return texture;
+			}
+		}
+		
+		return null;
+	}
+	
+	/**
+	 * @return all the level objects in the layer (shapes)
+	 */
+	public Array<LevelObject> getObjects() {
+		return objects;
+	}
+	
+	/**
+	 * @param name name of the desired level object
+	 * @return level object if found, null if it doesn't exist
+	 */
+	public LevelObject getObject(String name) {
+		for (int i = 0; i < objects.size; ++i) {
+			LevelObject levelObject = objects.get(i);
+			
+			if (levelObject.name.equals(name)) {
+				return levelObject;
+			}
+		}
+		
+		return null;
+	}
+}
diff --git a/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/Level.java b/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/Level.java
new file mode 100644
index 0000000..bdf1e20
--- /dev/null
+++ b/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/Level.java
@@ -0,0 +1,84 @@
+/*******************************************************************************
+ * Copyright 2012 David Saltares
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/ 
+
+package com.badlogic.gdx.gleed;
+
+import com.badlogic.gdx.utils.Array;
+
+/**
+ * @author David Saltares
+ * @date 02/11/2012
+ * 
+ * @brief GLEED2D level information
+ */
+public class Level {
+	Properties properties = new Properties();
+	Array<Layer> layers = new Array<Layer>();
+	String file = "";
+	
+	Level(String file) {
+		this.file = file;
+	}
+	
+	/**
+	 * @return level custom properties
+	 */
+	public Properties getProperties() {
+		return properties;
+	}
+	
+	/**
+	 * @return number of layers in the level
+	 */
+	public int getNumLayers() {
+		return layers.size;
+	}
+	
+	/**
+	 * @return all layers
+	 */
+	public Array<Layer> getLayers() {
+		return layers;
+	}
+	
+	/**
+	 * @param index index of the desired layer
+	 * @return correspondent layer, null if index is invalid
+	 */
+	public Layer getLayer(int index) {
+		if (index < 0 || index >= layers.size) {
+			return null;
+		}
+		
+		return layers.get(index);
+	}
+	
+	/**
+	 * @param name name of the desired layer
+	 * @return correspondent layer, null if the layer doesn't exist
+	 */
+	public Layer getLayer(String name) {
+		for (int i = 0; i < layers.size; ++i) {
+			Layer layer = layers.get(i);
+			
+			if (layer.getProperties().getString("Name", "").equals(name)) {
+				return layer;
+			}
+		}
+		
+		return null;
+	}
+}
diff --git a/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/LevelLoader.java b/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/LevelLoader.java
new file mode 100644
index 0000000..b8a2bdb
--- /dev/null
+++ b/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/LevelLoader.java
@@ -0,0 +1,338 @@
+/*******************************************************************************
+ * Copyright 2012 David Saltares
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/ 
+
+package com.badlogic.gdx.gleed;
+
+import com.badlogic.gdx.Gdx;
+import com.badlogic.gdx.assets.AssetDescriptor;
+import com.badlogic.gdx.assets.AssetLoaderParameters;
+import com.badlogic.gdx.assets.AssetManager;
+import com.badlogic.gdx.assets.loaders.AsynchronousAssetLoader;
+import com.badlogic.gdx.assets.loaders.FileHandleResolver;
+import com.badlogic.gdx.graphics.Texture;
+import com.badlogic.gdx.graphics.g2d.TextureAtlas;
+import com.badlogic.gdx.graphics.g2d.TextureRegion;
+import com.badlogic.gdx.math.Circle;
+import com.badlogic.gdx.math.Polygon;
+import com.badlogic.gdx.math.Vector2;
+import com.badlogic.gdx.utils.Array;
+import com.badlogic.gdx.utils.Disposable;
+import com.badlogic.gdx.utils.Logger;
+import com.badlogic.gdx.utils.XmlReader;
+import com.badlogic.gdx.utils.XmlReader.Element;
+
+/**
+ * @author David Saltares
+ * @date 03/11/2012
+ * 
+ * @brief GLEED2D level loader to use along the AssetManager system
+ */
+public class LevelLoader extends AsynchronousAssetLoader<Level, LevelLoader.GLEEDParameter > implements Disposable {
+
+	static public class GLEEDParameter extends AssetLoaderParameters<Level> {
+	}
+
+	static private Logger s_logger = new Logger("LevelLoader");
+	
+	private Level m_level = null;
+	private String m_pathRoot = "data";
+	private TextureAtlas m_atlas = null;
+	private String m_atlasFile = null;
+	private AssetManager m_assetManager;
+	
+	/**
+	 * @param loggingLevel amount of debug information the loader will output
+	 */
+	public static void setLoggingLevel(int loggingLevel) {
+		s_logger.setLevel(loggingLevel);
+	}
+	
+	/**
+	 * @param resolver file handle resolver to find the proper file
+	 * 
+	 */
+	public LevelLoader(FileHandleResolver resolver) {
+		super(resolver);
+	}
+
+	/**
+	 * Loads a level in an Asynchronous manner
+	 * 
+	 * @param manager asset manager to use
+	 * @param fileName level file to load
+	 * @param parameters custom params (not used)
+	 */
+	@Override
+	public void loadAsync(AssetManager manager, String fileName, GLEEDParameter parameter) {
+		m_assetManager = manager;
+		
+		s_logger.info("loading file " + fileName);
+		
+		try {
+			// Parse xml document
+			XmlReader reader = new XmlReader();
+			Element root = reader.parse(Gdx.files.internal(fileName));
+			
+			// Create level and load properties
+			s_logger.info("loading level properties");
+			if (m_level == null) {
+				m_level = new Level(fileName);
+				m_level.properties.load(root);
+			}
+			
+			// Load atlas if necessary
+			if (!m_atlasFile.isEmpty()) {
+				s_logger.info("fetching texture atlas " + m_atlasFile);
+				m_atlas = manager.get(m_atlasFile, TextureAtlas.class);
+			}
+			
+			// Load layers
+			s_logger.info("loading layers");
+			Array<Element> layerElements = root.getChildByName("Layers").getChildrenByName("Layer");
+			
+			for (int i = 0; i < layerElements.size; ++i) {
+				Element layerElement = layerElements.get(i);
+				loadLayer(layerElement);
+			}
+			
+		} catch (Exception e) {
+			s_logger.error("error loading file " + fileName + " " + e.getMessage());
+		}
+	}
+
+	/**
+	 * Loads a level in an Synchronous manner
+	 * 
+	 * @param manager asset manager to use
+	 * @param fileName level file to load
+	 * @param parameters custom params (not used)
+	 */
+	@Override
+	public Level loadSync(AssetManager manager, String fileName, GLEEDParameter parameter) {
+		return m_level;
+	}
+
+	/**
+	 * Gets TextureAtlas or Texture assets required by the level
+	 * 
+	 * @param fileName to get dependencies from
+	 * @param parameters custom params (not used)
+	 */
+	@SuppressWarnings({ "unchecked", "rawtypes" })
+	@Override
+	public Array<AssetDescriptor> getDependencies(String fileName, GLEEDParameter parameter) {
+
+		s_logger.info("getting asset dependencies for " + fileName);
+		Array<AssetDescriptor> dependencies = new Array<AssetDescriptor>();
+		
+		try {
+			// Parse xml document
+			XmlReader reader = new XmlReader();
+			Element root = reader.parse(Gdx.files.internal(fileName));
+
+			if (m_level == null) {
+				m_level = new Level(fileName);
+				m_level.properties.load(root);
+			}
+			
+			// Check texture atlass
+			m_atlasFile = m_level.properties.getString("atlas", "");
+			m_pathRoot = m_level.properties.getString("assetRoot", "data");
+			
+			if (!m_atlasFile.isEmpty()) {
+				s_logger.info("texture atlas dependency " + m_atlasFile);
+				dependencies.add(new AssetDescriptor(m_atlasFile, TextureAtlas.class));
+			}
+			else {
+				s_logger.info("textures asset folder " + m_pathRoot);
+				Array<Element> elements = root.getChildrenByNameRecursively("Item");
+				
+				for (int i = 0; i < elements.size; ++i) {
+					Element element = elements.get(i);
+					
+					if (element.getAttribute("xsi:type", "").equals("TextureItem")) {
+						String[] pathParts = element.getChildByName("texture_filename").getText().split("\\\\");
+						s_logger.info("texture dependency " + m_pathRoot + "/" + pathParts[pathParts.length - 1]);
+						dependencies.add(new AssetDescriptor(m_pathRoot + "/" + pathParts[pathParts.length - 1], Texture.class));
+					}
+				}
+			}
+			
+		} catch (Exception e) {
+			s_logger.error("error loading asset dependencies " + fileName + " " + e.getMessage());
+		}
+		
+		return dependencies;
+	}
+	
+	private void loadLayer(Element element) {
+		Layer layer = new Layer();
+		
+		layer.properties.load(element);
+		
+		layer.name = element.getAttribute("Name", "");
+		layer.visible = Boolean.parseBoolean(element.getAttribute("Visible", "true"));
+		
+		s_logger.info("loading layer " + layer.name);
+		Array<Element> items = element.getChildByName("Items").getChildrenByName("Item");
+		
+		for (int i = 0; i < items.size; ++i) {
+			Element item = items.get(i);
+			String type = item.getAttribute("xsi:type");
+			
+			if (type.equals("TextureItem")) {
+				TextureElement texture = new TextureElement();
+				loadElement(texture, item);
+				loadTextureElement(texture, item);
+				layer.textures.add(texture);
+			}
+			else if (type.equals("PathItem")) {
+				PathElement path = new PathElement();
+				loadElement(path, item);
+				loadPathElement(path, item);
+				layer.objects.add(path);
+			}
+			else if (type.equals("RectangleItem")) {
+				RectangleElement rectangle = new RectangleElement();
+				loadElement(rectangle, item);
+				loadRectangleElement(rectangle, item);
+				layer.objects.add(rectangle);
+				
+			}
+			else if (type.equals("CircleItem")) {
+				CircleElement circle = new CircleElement();
+				loadElement(circle, item);
+				loadCircleElement(circle, item);
+				layer.objects.add(circle);
+			}
+		}
+		
+		m_level.layers.add(layer);
+	}
+	
+	private void loadElement(LevelObject levelObject, Element element) {
+		levelObject.name = element.getAttribute("Name", "");
+		levelObject.visible = Boolean.parseBoolean(element.getAttribute("Visible", "true"));
+		levelObject.properties.load(element);
+		
+		s_logger.info("loading element " + levelObject.name);
+	}
+	
+	private void loadTextureElement(TextureElement texture, Element item) {
+
+		Element positionElement = item.getChildByName("Position");
+		texture.position.x = Float.parseFloat(positionElement.getChildByName("X").getText());
+		texture.position.y = -Float.parseFloat(positionElement.getChildByName("Y").getText());
+		
+		Element origin = item.getChildByName("Origin");
+		texture.originX = Float.parseFloat(origin.getChildByName("X").getText());
+		texture.originY = Float.parseFloat(origin.getChildByName("Y").getText());
+		
+		Element scale = item.getChildByName("Scale");
+		texture.scaleX = Float.parseFloat(scale.getChildByName("X").getText());
+		texture.scaleY = Float.parseFloat(scale.getChildByName("Y").getText());
+		
+		Element colorElement = item.getChildByName("TintColor");
+		texture.color.r = Float.parseFloat(colorElement.getChildByName("R").getText()) / 255.0f;
+		texture.color.g = Float.parseFloat(colorElement.getChildByName("G").getText()) / 255.0f;
+		texture.color.b = Float.parseFloat(colorElement.getChildByName("B").getText()) / 255.0f;
+		texture.color.a = Float.parseFloat(colorElement.getChildByName("A").getText()) / 255.0f;
+		
+		texture.rotation = Float.parseFloat(item.getChildByName("Rotation").getText());
+		
+		if (m_atlasFile.isEmpty()) {
+			String[] pathParts = item.getChildByName("texture_filename").getText().split("\\\\");
+			texture.path = m_pathRoot + "/" + pathParts[pathParts.length - 1];
+			texture.region.setRegion(m_assetManager.get(texture.path, Texture.class));
+		}
+		else {
+			String[] assetParts = item.getChildByName("asset_name").getText().split("\\\\");
+			texture.path = assetParts[assetParts.length - 1];
+			TextureRegion region = m_atlas.findRegion(texture.path);
+			texture.region.setRegion(region);
+		}
+		
+		texture.region.flip(Boolean.parseBoolean(item.getChildByName("FlipHorizontally").getText()),
+							Boolean.parseBoolean(item.getChildByName("FlipVertically").getText()));
+	}
+	
+	private void loadCircleElement(CircleElement circle, Element item) {
+		Element position = item.getChildByName("Position");
+		
+		Element colorElement = item.getChildByName("FillColor");
+		circle.color.r = Float.parseFloat(colorElement.getChildByName("R").getText()) / 255.0f;
+		circle.color.g = Float.parseFloat(colorElement.getChildByName("G").getText()) / 255.0f;
+		circle.color.b = Float.parseFloat(colorElement.getChildByName("B").getText()) / 255.0f;
+		circle.color.a = Float.parseFloat(colorElement.getChildByName("A").getText()) / 255.0f;
+		
+		circle.circle = new Circle(new Vector2(Float.parseFloat(position.getChildByName("X").getText()),
+											   -Float.parseFloat(position.getChildByName("Y").getText())),
+											   Float.parseFloat(item.getChildByName("Radius").getText()));
+	}
+	
+	private void loadRectangleElement(RectangleElement rectangle, Element item) {
+		Element position = item.getChildByName("Position");
+		
+		Element colorElement = item.getChildByName("FillColor");
+		rectangle.color.r = Float.parseFloat(colorElement.getChildByName("R").getText()) / 255.0f;
+		rectangle.color.g = Float.parseFloat(colorElement.getChildByName("G").getText()) / 255.0f;
+		rectangle.color.b = Float.parseFloat(colorElement.getChildByName("B").getText()) / 255.0f;
+		rectangle.color.a = Float.parseFloat(colorElement.getChildByName("A").getText()) / 255.0f;
+		
+		rectangle.rectangle.x = Float.parseFloat(position.getChildByName("X").getText());
+		rectangle.rectangle.y = -Float.parseFloat(position.getChildByName("Y").getText());
+		rectangle.rectangle.width = Float.parseFloat(item.getChildByName("Width").getText());
+		rectangle.rectangle.height = Float.parseFloat(item.getChildByName("Height").getText());
+	}
+	
+	private void loadPathElement(PathElement path, Element item) {
+		Array<Element> pointElements = item.getChildByName("WorldPoints").getChildrenByName("Vector2");
+		float[] vertices = new float[pointElements.size * 2];
+		
+		for (int j = 0; j < pointElements.size; ++j) {
+			Element pointElement = pointElements.get(j);
+			vertices[j * 2] = Float.parseFloat(pointElement.getChildByName("X").getText());
+			vertices[j * 2 + 1] = -Float.parseFloat(pointElement.getChildByName("Y").getText());
+		}
+		
+		path.polygon = new Polygon(vertices);
+		
+		path.lineWidth = Integer.parseInt(item.getChildByName("LineWidth").getText());
+		
+		Element colorElement = item.getChildByName("LineColor");
+		path.color.r = Float.parseFloat(colorElement.getChildByName("R").getText()) / 255.0f;
+		path.color.g = Float.parseFloat(colorElement.getChildByName("G").getText()) / 255.0f;
+		path.color.b = Float.parseFloat(colorElement.getChildByName("B").getText()) / 255.0f;
+		path.color.a = Float.parseFloat(colorElement.getChildByName("A").getText()) / 255.0f;
+	}
+	
+	@Override
+	public void dispose() {
+		s_logger.info("disposing level assets " + m_level.file);
+		
+		for (int i = 0; i < m_level.layers.size; ++i) {
+			Array<TextureElement> textures = m_level.layers.get(i).textures;
+			
+			for (int j = 0; j < textures.size; ++j) {
+				TextureElement texture = textures.get(j);
+				
+				if (m_assetManager.isLoaded(texture.path, Texture.class)) {
+					m_assetManager.unload(texture.path);
+				}
+			}
+		}
+	}
+}
diff --git a/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/LevelObject.java b/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/LevelObject.java
new file mode 100644
index 0000000..1776919
--- /dev/null
+++ b/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/LevelObject.java
@@ -0,0 +1,62 @@
+/*******************************************************************************
+ * Copyright 2012 David Saltares
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/ 
+
+package com.badlogic.gdx.gleed;
+
+import com.badlogic.gdx.graphics.Color;
+
+/**
+ * @author David Saltares
+ * @date 02/11/2012
+ * 
+ * @brief Models a generic object in a GLEED2D level
+ */
+public class LevelObject {
+	String name = "";
+	boolean visible = true;
+	Color color = new Color(0.0f, 0.0f, 0.0f, 1.0f);
+	Properties properties = new Properties();
+
+	LevelObject() {}
+	
+	/**
+	 * @return custom properties
+	 */
+	public Properties getProperties() {
+		return properties;
+	}
+	
+	/**
+	 * @return name of the object
+	 */
+	public String getName() {
+		return name;
+	}
+	
+	/**
+	 * @return whether the object is visible or not
+	 */
+	public boolean getVisible() {
+		return visible;
+	}
+	
+	/**
+	 * @return color tint of the object
+	 */
+	public Color getColor() {
+		return color;
+	}
+}
diff --git a/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/LevelRenderer.java b/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/LevelRenderer.java
new file mode 100644
index 0000000..2e3cc43
--- /dev/null
+++ b/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/LevelRenderer.java
@@ -0,0 +1,211 @@
+/*******************************************************************************
+ * Copyright 2012 David Saltares
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/ 
+
+package com.badlogic.gdx.gleed;
+
+import com.badlogic.gdx.graphics.OrthographicCamera;
+import com.badlogic.gdx.graphics.g2d.SpriteBatch;
+import com.badlogic.gdx.graphics.glutils.ShaderProgram;
+import com.badlogic.gdx.math.MathUtils;
+import com.badlogic.gdx.math.Rectangle;
+import com.badlogic.gdx.math.Vector2;
+import com.badlogic.gdx.utils.Array;
+import com.badlogic.gdx.utils.Disposable;
+
+/**
+ * @author David Saltares
+ * @date 03/11/2012
+ * 
+ * @brief GLEED2D Level Renderer implementation
+ *
+ * Offers basic functionality such as use of shaders and frustum culling. Respects visibility properties. 
+ */
+public class LevelRenderer implements Disposable, ILevelRenderer {
+	
+	private Level m_level;
+	private SpriteBatch m_batch = new SpriteBatch();
+	private float m_mpp;
+	private Rectangle m_box = new Rectangle();
+	private Rectangle m_cameraRectangle = new Rectangle();
+	
+	private Vector2 m_a = new Vector2();
+	private Vector2 m_b = new Vector2();
+	private Vector2 m_c = new Vector2();
+	private Vector2 m_d = new Vector2();
+	
+	/**
+	 * Constructor
+	 * 
+	 * @param level to use during rendering 
+	 */
+	public LevelRenderer(Level level) {
+		this(level, null);
+	}
+	
+	/**
+	 * Constructor
+	 * 
+	 * @param level to use during rendering
+	 * @param shader shader that will be applied to the render process 
+	 */
+	public LevelRenderer(Level level, ShaderProgram shader) {
+		this(level, shader, 1.0f);
+	}
+	
+	/**
+	 * Constructor
+	 * 
+	 * @param level to use during rendering
+	 * @param shader shader that will be applied to the render process
+	 * @param mpp "Metres Per Pixel" scale that will be applied to the elements in the level to match world units.
+	 */
+	public LevelRenderer(Level level, ShaderProgram shader, float mpp) {
+		m_level = level;
+		m_mpp = mpp;
+		
+		if (shader != null) {
+			m_batch.setShader(shader);
+		}
+	}
+	
+	/**
+	 * @return level in  use
+	 */
+	public Level getLevel() {
+		return m_level;
+	}
+
+	/**
+	 * Renders every TextureElement in the level 
+	 * 
+	 * @param camera camera to render the level
+	 */
+	@Override
+	public void render(OrthographicCamera camera) {
+		int[] layers = new int[m_level.getLayers().size];
+		
+		for (int i = 0; i < layers.length; ++i) {
+			layers[i] = i;
+		}
+		
+		render(camera, layers);
+	}
+	
+	/**
+	 * Renders every TextureElement in the selected layers
+	 *  
+	 * @param camera camera to render the level
+	 * @param layers selected layers
+	 */
+	@Override
+	public void render(OrthographicCamera camera, int[] layers) {
+		
+		Array<Layer> layersArray = m_level.getLayers();
+		
+		m_batch.setProjectionMatrix(camera.combined);
+		
+		m_cameraRectangle.x = camera.position.x - camera.viewportWidth * 0.5f * camera.zoom;
+		m_cameraRectangle.y = camera.position.y - camera.viewportHeight * 0.5f * camera.zoom;
+		m_cameraRectangle.width = camera.viewportWidth *  camera.zoom;
+		m_cameraRectangle.height = camera.viewportHeight *  camera.zoom;
+		
+		m_batch.begin();
+		m_batch.enableBlending();
+		
+		for (int i = 0; i < layers.length; ++i) {
+			Layer layer = layersArray.get(layers[i]);
+			
+			if (!layer.visible) {
+				continue;
+			}
+			
+			Array<TextureElement> textures = layer.getTextures();
+			
+			
+			for (int j = 0; j < textures.size; ++j) {
+				TextureElement texture = textures.get(j);
+				
+				setBounds(texture);
+
+				// If the image is in the frustum, draw it (culling)
+				if (m_cameraRectangle.overlaps(m_box) ||
+					m_cameraRectangle.contains(m_box) ||
+					m_box.contains(m_cameraRectangle)) {
+				
+					m_batch.draw(texture.region,
+								 texture.position.x * m_mpp - texture.originX,
+								 texture.position.y * m_mpp - texture.originY,
+								 texture.originX,
+								 texture.originY,
+								 texture.region.getRegionWidth(),
+								 texture.region.getRegionHeight(),
+								 texture.scaleX * m_mpp,
+								 texture.scaleY * m_mpp,
+								 -MathUtils.radiansToDegrees * texture.rotation);
+				}
+			}
+		}
+		
+		m_batch.end();
+	}
+
+	@Override
+	public void dispose() {
+		m_batch.dispose();
+	}
+	
+	private void setBounds(TextureElement texture) {
+		float x1 = -texture.region.getRegionWidth() * 0.5f * m_mpp * texture.scaleX;
+		float x2 = -x1;
+		float y1 = -texture.region.getRegionHeight() * 0.5f * m_mpp * texture.scaleY;
+		float y2 = -y1;
+		
+		float sin = (float)Math.sin(texture.rotation);
+		float cos = (float)Math.cos(texture.rotation);
+		
+		m_a.x = x1 * cos - y1 * sin;
+		m_a.y = x1 * sin - y1 * cos;
+		
+		m_b.x = x2 * cos - y1 * sin;
+		m_b.y = x2 * sin - y1 * cos;
+		
+		m_c.x = x2 * cos - y2 * sin;
+		m_c.y = x2 * sin - y2 * cos;
+		
+		m_d.x = x1 * cos - y2 * sin;
+		m_d.y = x1 * sin - y2 * cos;
+		
+		m_a.x += texture.position.x * m_mpp;
+		m_a.y += texture.position.y * m_mpp;
+		m_b.x += texture.position.x * m_mpp;
+		m_b.y += texture.position.y * m_mpp;
+		m_c.x += texture.position.x * m_mpp;
+		m_c.y += texture.position.y * m_mpp;
+		m_d.x += texture.position.x * m_mpp;
+		m_d.y += texture.position.y * m_mpp;
+		
+		float minX = Math.min(Math.min(Math.min(m_a.x, m_b.x), m_c.x), m_d.x);
+		float minY = Math.min(Math.min(Math.min(m_a.y, m_b.y), m_c.y), m_d.y);
+		float maxX = Math.max(Math.max(Math.max(m_a.x, m_b.x), m_c.x), m_d.x);
+		float maxY = Math.max(Math.max(Math.max(m_a.y, m_b.y), m_c.y), m_d.y);
+		
+		m_box.x = minX;
+		m_box.y = minY;
+		m_box.width = maxX - minX;
+		m_box.height = maxY - minY;
+	}
+}
+
diff --git a/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/PathElement.java b/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/PathElement.java
new file mode 100644
index 0000000..ebb54e7
--- /dev/null
+++ b/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/PathElement.java
@@ -0,0 +1,48 @@
+/*******************************************************************************
+ * Copyright 2012 David Saltares
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/ 
+
+package com.badlogic.gdx.gleed;
+
+import com.badlogic.gdx.math.Polygon;
+
+/**
+ * @author David Saltares
+ * @date 02/11/2012
+ * 
+ * @brief Path GLEED2D shape implementation 
+ */
+public class PathElement extends LevelObject {
+	Polygon polygon;
+	int lineWidth;
+	
+	PathElement() {
+		super();
+	}
+	
+	/**
+	 * @return polygon shape formed by the path (it assumes it's closed)
+	 */
+	public Polygon getPolygon() {
+		return polygon;
+	}
+	
+	/**
+	 * @return line width
+	 */
+	public int getLineWidth() {
+		return lineWidth;
+	}
+}
diff --git a/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/Properties.java b/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/Properties.java
new file mode 100644
index 0000000..5411fe1
--- /dev/null
+++ b/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/Properties.java
@@ -0,0 +1,171 @@
+/*******************************************************************************
+ * Copyright 2012 David Saltares
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/ 
+package com.badlogic.gdx.gleed;
+
+import java.util.HashMap;
+
+import com.badlogic.gdx.graphics.Color;
+import com.badlogic.gdx.math.Vector2;
+import com.badlogic.gdx.utils.Array;
+import com.badlogic.gdx.utils.XmlReader.Element;
+
+/**
+ * @author David Saltares
+ * @date 02/11/2012
+ * 
+ * @brief Holds read only GLEED2D level element properties
+ *
+ */
+public class Properties {
+	HashMap<String, String> strings = new HashMap<String, String> ();
+	HashMap<String, Color> colors = new HashMap<String, Color>();
+	HashMap<String, Boolean> booleans = new HashMap<String, Boolean>();
+	HashMap<String, Vector2> vectors = new HashMap<String, Vector2>();
+	
+	Properties() {}
+	
+	/**
+	 * @param key name of the string
+	 * @return string related to the given key, null if not found
+	 */
+	public String getString(String key) {
+		return getString(key, "");
+	}
+	
+	/**
+	 * @param key name of the string
+	 * @param defaultValue return value if key doesn't exist
+	 * @return string related to the given key, null if not found
+	 */
+	public String getString(String key, String defaultValue) {
+		String value = strings.get(key);
+		
+		if (value == null) {
+			return defaultValue;
+		}
+		
+		return value;
+	}
+	
+	/**
+	 * @param key name of the boolean
+	 * @return boolean related to the given key, null if not found
+	 */
+	public Boolean getBoolean(String key) {
+		return getBoolean(key, false);
+	}
+	
+	/**
+	 * @param key name of the boolean
+	 * @param defaultValue return value if key doesn't exist
+	 * @return boolean related to the given key, null if not found
+	 */
+	public Boolean getBoolean(String key, Boolean defaultValue) {
+		Boolean value = booleans.get(key);
+		
+		if (value == null) {
+			return defaultValue;
+		}
+		
+		return value;
+	}
+	
+	/**
+	 * @param key name of the 2D vector
+	 * @return 2D vector related to the given key, null if not found
+	 */
+	public Vector2 getVector(String key) {
+		return getVector(key, Vector2.Zero);
+	}
+	
+	/**
+	 * @param key name of the 2D vector
+	 * @param defaultValue return value if key doesn't exist
+	 * @return 2D vector related to the given key, null if not found
+	 */
+	public Vector2 getVector(String key, Vector2 defaultValue) {
+		Vector2 value = vectors.get(key);
+		
+		if (value == null) {
+			return defaultValue;
+		}
+		
+		return value;
+	}
+	
+	/**
+	 * @param key name of the color element
+	 * @return color related to the given key, null if not found
+	 */
+	public Color getColor(String key) {
+		return getColor(key, Color.BLACK);
+	}
+	
+	/**
+	 * @param key name of the color element
+	 * @param defaultValue return value if key doesn't exist
+	 * @return color related to the given key, null if not found
+	 */
+	public Color getColor(String key, Color defaultValue) {
+		Color value = colors.get(key);
+		
+		if (value == null) {
+			return defaultValue;
+		}
+		
+		return value;
+	}
+	
+	void load(Element element) {
+		Element customProperty = element.getChildByName("CustomProperties");
+		 
+		if (customProperty != null) {
+			Array<Element> properties = customProperty.getChildrenByName("Property");
+			
+			for (int i = 0; i < properties.size; ++i) {
+				Element property = properties.get(i);
+				String type = property.getAttribute("Type");
+				
+				if (type == null) {
+					continue;
+				}
+				
+				if (type.equals("string")) {
+					strings.put(property.getAttribute("Name"), property.getChildByName("string").getText());
+				}
+				else if (type.equals("bool")) {
+					booleans.put(property.getAttribute("Name"), Boolean.parseBoolean(property.getChildByName("boolean").getText()));
+				}
+				else if (type.equals("Vector2")) {
+					Element vectorElement = property.getChildByName("Vector2");
+					Vector2 v = new Vector2(Float.parseFloat(vectorElement.getChildByName("X").getText()),
+											Float.parseFloat(vectorElement.getChildByName("Y").getText()));
+					
+					vectors.put(property.getAttribute("Name"), v);
+				}
+				else if (type.equals("Color")) {
+					Element colorElement = property.getChildByName("Color");
+					Color c = new Color(Float.parseFloat(colorElement.getChildByName("R").getText()) / 255.0f,
+										Float.parseFloat(colorElement.getChildByName("G").getText()) / 255.0f,
+										Float.parseFloat(colorElement.getChildByName("B").getText()) / 255.0f,
+										Float.parseFloat(colorElement.getChildByName("A").getText()) / 255.0f);
+					
+					colors.put(property.getAttribute("Name"), c);
+				}
+			}
+		}
+	}
+}
diff --git a/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/RectangleElement.java b/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/RectangleElement.java
new file mode 100644
index 0000000..e7a882f
--- /dev/null
+++ b/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/RectangleElement.java
@@ -0,0 +1,40 @@
+/*******************************************************************************
+ * Copyright 2012 David Saltares
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/ 
+
+package com.badlogic.gdx.gleed;
+
+import com.badlogic.gdx.math.Rectangle;
+
+/**
+ * @author David Saltares
+ * @date 02/11/2012
+ * 
+ * @brief Rectangle GLEED2D shape implementation 
+ */
+public class RectangleElement extends LevelObject {
+	Rectangle rectangle = new Rectangle();
+	
+	RectangleElement() {
+		super();
+	}
+	
+	/**
+	 * @return rectangle shape
+	 */
+	public Rectangle getRectangle() {
+		return rectangle;
+	}
+}
diff --git a/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/TextureElement.java b/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/TextureElement.java
new file mode 100644
index 0000000..6e61e51
--- /dev/null
+++ b/extensions/gdx-gleed/src/com/badlogic/gdx/gleed/TextureElement.java
@@ -0,0 +1,97 @@
+/*******************************************************************************
+ * Copyright 2012 David Saltares
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/ 
+
+package com.badlogic.gdx.gleed;
+
+import com.badlogic.gdx.graphics.g2d.TextureRegion;
+import com.badlogic.gdx.math.Vector2;
+
+/**
+ * @author David Saltares
+ * @date 02/11/2012
+ * 
+ * @brief GLEED2D texture element implementation
+ */
+public class TextureElement extends LevelObject {
+	String path = "";
+	TextureRegion region = new TextureRegion();
+	Vector2 position = new Vector2(0.0f, 0.0f);
+	float scaleX = 1.0f;
+	float scaleY = 1.0f;
+	float originX = 1.0f;
+	float originY = 1.0f;
+	float rotation = 0.0f;
+	
+	TextureElement() {
+		super();
+	}
+	
+	/**
+	 * @return texture path
+	 */
+	public String getPath() {
+		return path;
+	}
+	
+	/**
+	 * @return region
+	 */
+	public TextureRegion getRegion() {
+		return region;
+	}
+	
+	/**
+	 * @return element 2D world coordinates
+	 */
+	public Vector2 getPosition() {
+		return position;
+	}
+	
+	/**
+	 * @return horizontal scale
+	 */
+	public float getScaleX() {
+		return scaleX;
+	}
+	
+	/**
+	 * @return vertical scale
+	 */
+	public float getScaleY() {
+		return scaleY;
+	}
+	
+	/**
+	 * @return texture units from left to centre
+	 */
+	public float getOriginX() {
+		return originX;
+	}
+	
+	/**
+	 * @return texture units from top to centre
+	 */
+	public float getOriginY() {
+		return originY;
+	}
+	
+	/**
+	 * @return rotation in radians
+	 */
+	public float getRotation() {
+		return rotation;
+	}
+}
diff --git a/extensions/gdx-tiled-preprocessor/.classpath b/extensions/gdx-tiled-preprocessor/.classpath
new file mode 100644
index 0000000..43c8280
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/.classpath
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<classpath>
+	<classpathentry kind="src" path="src"/>
+	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6"/>
+	<classpathentry kind="src" path="/gdx">
+		<attributes>
+			<attribute name="org.eclipse.jdt.launching.CLASSPATH_ATTR_LIBRARY_PATH_ENTRY" value="gdx/windows64"/>
+		</attributes>
+	</classpathentry>
+	<classpathentry combineaccessrules="false" kind="src" path="/gdx-tools"/>
+	<classpathentry kind="output" path="bin"/>
+</classpath>
diff --git a/extensions/gdx-tiled-preprocessor/.project b/extensions/gdx-tiled-preprocessor/.project
new file mode 100644
index 0000000..13f6fd1
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/.project
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<projectDescription>
+	<name>gdx-tiled-preprocessor</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+	</natures>
+</projectDescription>
diff --git a/extensions/gdx-tiled-preprocessor/.settings/org.eclipse.jdt.core.prefs b/extensions/gdx-tiled-preprocessor/.settings/org.eclipse.jdt.core.prefs
new file mode 100644
index 0000000..3d00358
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/.settings/org.eclipse.jdt.core.prefs
@@ -0,0 +1,369 @@
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.6
+org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
+org.eclipse.jdt.core.compiler.compliance=1.6
+org.eclipse.jdt.core.compiler.debug.lineNumber=generate
+org.eclipse.jdt.core.compiler.debug.localVariable=generate
+org.eclipse.jdt.core.compiler.debug.sourceFile=generate
+org.eclipse.jdt.core.compiler.doc.comment.support=enabled
+org.eclipse.jdt.core.compiler.problem.annotationSuperInterface=warning
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.autoboxing=ignore
+org.eclipse.jdt.core.compiler.problem.comparingIdentical=warning
+org.eclipse.jdt.core.compiler.problem.deadCode=ignore
+org.eclipse.jdt.core.compiler.problem.deprecation=ignore
+org.eclipse.jdt.core.compiler.problem.deprecationInDeprecatedCode=disabled
+org.eclipse.jdt.core.compiler.problem.deprecationWhenOverridingDeprecatedMethod=disabled
+org.eclipse.jdt.core.compiler.problem.discouragedReference=warning
+org.eclipse.jdt.core.compiler.problem.emptyStatement=ignore
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.problem.fallthroughCase=ignore
+org.eclipse.jdt.core.compiler.problem.fatalOptionalError=disabled
+org.eclipse.jdt.core.compiler.problem.fieldHiding=ignore
+org.eclipse.jdt.core.compiler.problem.finalParameterBound=warning
+org.eclipse.jdt.core.compiler.problem.finallyBlockNotCompletingNormally=warning
+org.eclipse.jdt.core.compiler.problem.forbiddenReference=warning
+org.eclipse.jdt.core.compiler.problem.hiddenCatchBlock=warning
+org.eclipse.jdt.core.compiler.problem.incompatibleNonInheritedInterfaceMethod=warning
+org.eclipse.jdt.core.compiler.problem.incompleteEnumSwitch=ignore
+org.eclipse.jdt.core.compiler.problem.indirectStaticAccess=ignore
+org.eclipse.jdt.core.compiler.problem.invalidJavadoc=warning
+org.eclipse.jdt.core.compiler.problem.invalidJavadocTags=enabled
+org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsDeprecatedRef=enabled
+org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsNotVisibleRef=enabled
+org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsVisibility=private
+org.eclipse.jdt.core.compiler.problem.localVariableHiding=ignore
+org.eclipse.jdt.core.compiler.problem.methodWithConstructorName=warning
+org.eclipse.jdt.core.compiler.problem.missingDeprecatedAnnotation=ignore
+org.eclipse.jdt.core.compiler.problem.missingHashCodeMethod=ignore
+org.eclipse.jdt.core.compiler.problem.missingJavadocComments=ignore
+org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsOverriding=enabled
+org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsVisibility=public
+org.eclipse.jdt.core.compiler.problem.missingJavadocTagDescription=return_tag
+org.eclipse.jdt.core.compiler.problem.missingJavadocTags=ignore
+org.eclipse.jdt.core.compiler.problem.missingJavadocTagsOverriding=enabled
+org.eclipse.jdt.core.compiler.problem.missingJavadocTagsVisibility=private
+org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotation=ignore
+org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotationForInterfaceMethodImplementation=enabled
+org.eclipse.jdt.core.compiler.problem.missingSerialVersion=ignore
+org.eclipse.jdt.core.compiler.problem.missingSynchronizedOnInheritedMethod=ignore
+org.eclipse.jdt.core.compiler.problem.noEffectAssignment=warning
+org.eclipse.jdt.core.compiler.problem.noImplicitStringConversion=warning
+org.eclipse.jdt.core.compiler.problem.nonExternalizedStringLiteral=ignore
+org.eclipse.jdt.core.compiler.problem.nullReference=warning
+org.eclipse.jdt.core.compiler.problem.overridingPackageDefaultMethod=warning
+org.eclipse.jdt.core.compiler.problem.parameterAssignment=ignore
+org.eclipse.jdt.core.compiler.problem.possibleAccidentalBooleanAssignment=warning
+org.eclipse.jdt.core.compiler.problem.potentialNullReference=ignore
+org.eclipse.jdt.core.compiler.problem.rawTypeReference=ignore
+org.eclipse.jdt.core.compiler.problem.redundantNullCheck=ignore
+org.eclipse.jdt.core.compiler.problem.redundantSuperinterface=ignore
+org.eclipse.jdt.core.compiler.problem.specialParameterHidingField=disabled
+org.eclipse.jdt.core.compiler.problem.staticAccessReceiver=warning
+org.eclipse.jdt.core.compiler.problem.suppressOptionalErrors=disabled
+org.eclipse.jdt.core.compiler.problem.suppressWarnings=enabled
+org.eclipse.jdt.core.compiler.problem.syntheticAccessEmulation=warning
+org.eclipse.jdt.core.compiler.problem.typeParameterHiding=warning
+org.eclipse.jdt.core.compiler.problem.uncheckedTypeOperation=ignore
+org.eclipse.jdt.core.compiler.problem.undocumentedEmptyBlock=ignore
+org.eclipse.jdt.core.compiler.problem.unhandledWarningToken=warning
+org.eclipse.jdt.core.compiler.problem.unnecessaryElse=ignore
+org.eclipse.jdt.core.compiler.problem.unnecessaryTypeCheck=ignore
+org.eclipse.jdt.core.compiler.problem.unqualifiedFieldAccess=ignore
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownException=ignore
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionExemptExceptionAndThrowable=enabled
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionIncludeDocCommentReference=enabled
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionWhenOverriding=enabled
+org.eclipse.jdt.core.compiler.problem.unusedImport=ignore
+org.eclipse.jdt.core.compiler.problem.unusedLabel=warning
+org.eclipse.jdt.core.compiler.problem.unusedLocal=ignore
+org.eclipse.jdt.core.compiler.problem.unusedObjectAllocation=ignore
+org.eclipse.jdt.core.compiler.problem.unusedParameter=ignore
+org.eclipse.jdt.core.compiler.problem.unusedParameterIncludeDocCommentReference=enabled
+org.eclipse.jdt.core.compiler.problem.unusedParameterWhenImplementingAbstract=enabled
+org.eclipse.jdt.core.compiler.problem.unusedParameterWhenOverridingConcrete=enabled
+org.eclipse.jdt.core.compiler.problem.unusedPrivateMember=ignore
+org.eclipse.jdt.core.compiler.problem.unusedWarningToken=warning
+org.eclipse.jdt.core.compiler.problem.varargsArgumentNeedCast=warning
+org.eclipse.jdt.core.compiler.source=1.6
+org.eclipse.jdt.core.formatter.align_type_members_on_columns=false
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_annotation=0
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression=16
+org.eclipse.jdt.core.formatter.alignment_for_assignment=0
+org.eclipse.jdt.core.formatter.alignment_for_binary_expression=16
+org.eclipse.jdt.core.formatter.alignment_for_compact_if=16
+org.eclipse.jdt.core.formatter.alignment_for_conditional_expression=80
+org.eclipse.jdt.core.formatter.alignment_for_enum_constants=0
+org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer=16
+org.eclipse.jdt.core.formatter.alignment_for_method_declaration=0
+org.eclipse.jdt.core.formatter.alignment_for_multiple_fields=16
+org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_resources_in_try=80
+org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation=16
+org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_union_type_in_multicatch=16
+org.eclipse.jdt.core.formatter.blank_lines_after_imports=1
+org.eclipse.jdt.core.formatter.blank_lines_after_package=1
+org.eclipse.jdt.core.formatter.blank_lines_before_field=0
+org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration=0
+org.eclipse.jdt.core.formatter.blank_lines_before_imports=1
+org.eclipse.jdt.core.formatter.blank_lines_before_member_type=1
+org.eclipse.jdt.core.formatter.blank_lines_before_method=1
+org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk=1
+org.eclipse.jdt.core.formatter.blank_lines_before_package=1
+org.eclipse.jdt.core.formatter.blank_lines_between_import_groups=1
+org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations=1
+org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_array_initializer=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_block=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_block_in_case=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_enum_constant=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_method_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_switch=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_type_declaration=end_of_line
+org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_block_comment=false
+org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment=false
+org.eclipse.jdt.core.formatter.comment.format_block_comments=true
+org.eclipse.jdt.core.formatter.comment.format_header=false
+org.eclipse.jdt.core.formatter.comment.format_html=true
+org.eclipse.jdt.core.formatter.comment.format_javadoc_comments=true
+org.eclipse.jdt.core.formatter.comment.format_line_comments=true
+org.eclipse.jdt.core.formatter.comment.format_source_code=true
+org.eclipse.jdt.core.formatter.comment.indent_parameter_description=true
+org.eclipse.jdt.core.formatter.comment.indent_root_tags=true
+org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags=do not insert
+org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter=do not insert
+org.eclipse.jdt.core.formatter.comment.line_length=130
+org.eclipse.jdt.core.formatter.comment.new_lines_at_block_boundaries=true
+org.eclipse.jdt.core.formatter.comment.new_lines_at_javadoc_boundaries=false
+org.eclipse.jdt.core.formatter.comment.preserve_white_space_between_code_and_line_comments=false
+org.eclipse.jdt.core.formatter.compact_else_if=true
+org.eclipse.jdt.core.formatter.continuation_indentation=1
+org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer=1
+org.eclipse.jdt.core.formatter.disabling_tag=@off
+org.eclipse.jdt.core.formatter.enabling_tag=@on
+org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line=false
+org.eclipse.jdt.core.formatter.format_line_comment_starting_on_first_column=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header=true
+org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases=true
+org.eclipse.jdt.core.formatter.indent_empty_lines=false
+org.eclipse.jdt.core.formatter.indent_statements_compare_to_block=true
+org.eclipse.jdt.core.formatter.indent_statements_compare_to_body=true
+org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases=true
+org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch=false
+org.eclipse.jdt.core.formatter.indentation.size=4
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_field=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_local_variable=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_method=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_package=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_parameter=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_type=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_label=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing=insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_annotation_declaration=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_anonymous_type_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_block=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_constant=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_declaration=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_method_body=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter=insert
+org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_binary_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block=insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_ellipsis=insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_try=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_try_resources=insert
+org.eclipse.jdt.core.formatter.insert_space_after_unary_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter=insert
+org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_binary_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_try=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert=insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_ellipsis=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_try=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while=insert
+org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_return=insert
+org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw=insert
+org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_semicolon=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_try_resources=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_unary_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.join_lines_in_comments=true
+org.eclipse.jdt.core.formatter.join_wrapped_lines=true
+org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line=false
+org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line=false
+org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line=true
+org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line=false
+org.eclipse.jdt.core.formatter.lineSplit=130
+org.eclipse.jdt.core.formatter.never_indent_block_comments_on_first_column=true
+org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column=true
+org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body=0
+org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve=1
+org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line=true
+org.eclipse.jdt.core.formatter.tabulation.char=tab
+org.eclipse.jdt.core.formatter.tabulation.size=3
+org.eclipse.jdt.core.formatter.use_on_off_tags=true
+org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations=false
+org.eclipse.jdt.core.formatter.wrap_before_binary_operator=true
+org.eclipse.jdt.core.formatter.wrap_before_or_operator_multicatch=true
+org.eclipse.jdt.core.formatter.wrap_outer_expressions_when_nested=true
diff --git a/extensions/gdx-tiled-preprocessor/.settings/org.eclipse.jdt.ui.prefs b/extensions/gdx-tiled-preprocessor/.settings/org.eclipse.jdt.ui.prefs
new file mode 100644
index 0000000..12ca759
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/.settings/org.eclipse.jdt.ui.prefs
@@ -0,0 +1,3 @@
+eclipse.preferences.version=1
+formatter_profile=_libgdx
+formatter_settings_version=12
diff --git a/extensions/gdx-tiled-preprocessor/AUTHORS b/extensions/gdx-tiled-preprocessor/AUTHORS
new file mode 100644
index 0000000..2de4861
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/AUTHORS
@@ -0,0 +1,10 @@
+# This is the official list of the AUTHORS of libgdx
+# for copyright purposes.
+# This file is distinct from the CONTRIBUTORS files.
+# See the latter for an explanation.
+
+# Names should be added to this file as
+#	Name or Organization <email address>
+# The email address is not required for organizations.
+Mario Zechner <badlogicgames@gmail.com>
+Nathan Sweet <nathan.sweet@gmail.com> 
\ No newline at end of file
diff --git a/extensions/gdx-tiled-preprocessor/CC-LICENSE b/extensions/gdx-tiled-preprocessor/CC-LICENSE
new file mode 100644
index 0000000..242ce32
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/CC-LICENSE
@@ -0,0 +1,63 @@
+License
+
+THE WORK (AS DEFINED BELOW) IS PROVIDED UNDER THE TERMS OF THIS CREATIVE COMMONS PUBLIC LICENSE ("CCPL" OR "LICENSE"). THE WORK IS PROTECTED BY COPYRIGHT AND/OR OTHER APPLICABLE LAW. ANY USE OF THE WORK OTHER THAN AS AUTHORIZED UNDER THIS LICENSE OR COPYRIGHT LAW IS PROHIBITED.
+
+BY EXERCISING ANY RIGHTS TO THE WORK PROVIDED HERE, YOU ACCEPT AND AGREE TO BE BOUND BY THE TERMS OF THIS LICENSE. TO THE EXTENT THIS LICENSE MAY BE CONSIDERED TO BE A CONTRACT, THE LICENSOR GRANTS YOU THE RIGHTS CONTAINED HERE IN CONSIDERATION OF YOUR ACCEPTANCE OF SUCH TERMS AND CONDITIONS.
+
+1. Definitions
+
+   1. "Adaptation" means a work based upon the Work, or upon the Work and other pre-existing works, such as a translation, adaptation, derivative work, arrangement of music or other alterations of a literary or artistic work, or phonogram or performance and includes cinematographic adaptations or any other form in which the Work may be recast, transformed, or adapted including in any form recognizably derived from the original, except that a work that constitutes a Collection will not be considered an Adaptation for the purpose of this License. For the avoidance of doubt, where the Work is a musical work, performance or phonogram, the synchronization of the Work in timed-relation with a moving image ("synching") will be considered an Adaptation for the purpose of this License.
+   2. "Collection" means a collection of literary or artistic works, such as encyclopedias and anthologies, or performances, phonograms or broadcasts, or other works or subject matter other than works listed in Section 1(f) below, which, by reason of the selection and arrangement of their contents, constitute intellectual creations, in which the Work is included in its entirety in unmodified form along with one or more other contributions, each constituting separate and independent works in themselves, which together are assembled into a collective whole. A work that constitutes a Collection will not be considered an Adaptation (as defined below) for the purposes of this License.
+   3. "Creative Commons Compatible License" means a license that is listed at http://creativecommons.org/compatiblelicenses that has been approved by Creative Commons as being essentially equivalent to this License, including, at a minimum, because that license: (i) contains terms that have the same purpose, meaning and effect as the License Elements of this License; and, (ii) explicitly permits the relicensing of adaptations of works made available under that license under this License or a Creative Commons jurisdiction license with the same License Elements as this License.
+   4. "Distribute" means to make available to the public the original and copies of the Work or Adaptation, as appropriate, through sale or other transfer of ownership.
+   5. "License Elements" means the following high-level license attributes as selected by Licensor and indicated in the title of this License: Attribution, ShareAlike.
+   6. "Licensor" means the individual, individuals, entity or entities that offer(s) the Work under the terms of this License.
+   7. "Original Author" means, in the case of a literary or artistic work, the individual, individuals, entity or entities who created the Work or if no individual or entity can be identified, the publisher; and in addition (i) in the case of a performance the actors, singers, musicians, dancers, and other persons who act, sing, deliver, declaim, play in, interpret or otherwise perform literary or artistic works or expressions of folklore; (ii) in the case of a phonogram the producer being the person or legal entity who first fixes the sounds of a performance or other sounds; and, (iii) in the case of broadcasts, the organization that transmits the broadcast.
+   8. "Work" means the literary and/or artistic work offered under the terms of this License including without limitation any production in the literary, scientific and artistic domain, whatever may be the mode or form of its expression including digital form, such as a book, pamphlet and other writing; a lecture, address, sermon or other work of the same nature; a dramatic or dramatico-musical work; a choreographic work or entertainment in dumb show; a musical composition with or without words; a cinematographic work to which are assimilated works expressed by a process analogous to cinematography; a work of drawing, painting, architecture, sculpture, engraving or lithography; a photographic work to which are assimilated works expressed by a process analogous to photography; a work of applied art; an illustration, map, plan, sketch or three-dimensional work relative to geography, topography, architecture or science; a performance; a broadcast; a phonogram; a compilation of data to the extent it is protected as a copyrightable work; or a work performed by a variety or circus performer to the extent it is not otherwise considered a literary or artistic work.
+   9. "You" means an individual or entity exercising rights under this License who has not previously violated the terms of this License with respect to the Work, or who has received express permission from the Licensor to exercise rights under this License despite a previous violation.
+  10. "Publicly Perform" means to perform public recitations of the Work and to communicate to the public those public recitations, by any means or process, including by wire or wireless means or public digital performances; to make available to the public Works in such a way that members of the public may access these Works from a place and at a place individually chosen by them; to perform the Work to the public by any means or process and the communication to the public of the performances of the Work, including by public digital performance; to broadcast and rebroadcast the Work by any means including signs, sounds or images.
+  11. "Reproduce" means to make copies of the Work by any means including without limitation by sound or visual recordings and the right of fixation and reproducing fixations of the Work, including storage of a protected performance or phonogram in digital form or other electronic medium.
+
+2. Fair Dealing Rights. Nothing in this License is intended to reduce, limit, or restrict any uses free from copyright or rights arising from limitations or exceptions that are provided for in connection with the copyright protection under copyright law or other applicable laws.
+
+3. License Grant. Subject to the terms and conditions of this License, Licensor hereby grants You a worldwide, royalty-free, non-exclusive, perpetual (for the duration of the applicable copyright) license to exercise the rights in the Work as stated below:
+
+   1. to Reproduce the Work, to incorporate the Work into one or more Collections, and to Reproduce the Work as incorporated in the Collections;
+   2. to create and Reproduce Adaptations provided that any such Adaptation, including any translation in any medium, takes reasonable steps to clearly label, demarcate or otherwise identify that changes were made to the original Work. For example, a translation could be marked "The original work was translated from English to Spanish," or a modification could indicate "The original work has been modified.";
+   3. to Distribute and Publicly Perform the Work including as incorporated in Collections; and,
+   4. to Distribute and Publicly Perform Adaptations.
+   5.
+
+      For the avoidance of doubt:
+         1. Non-waivable Compulsory License Schemes. In those jurisdictions in which the right to collect royalties through any statutory or compulsory licensing scheme cannot be waived, the Licensor reserves the exclusive right to collect such royalties for any exercise by You of the rights granted under this License;
+         2. Waivable Compulsory License Schemes. In those jurisdictions in which the right to collect royalties through any statutory or compulsory licensing scheme can be waived, the Licensor waives the exclusive right to collect such royalties for any exercise by You of the rights granted under this License; and,
+         3. Voluntary License Schemes. The Licensor waives the right to collect royalties, whether individually or, in the event that the Licensor is a member of a collecting society that administers voluntary licensing schemes, via that society, from any exercise by You of the rights granted under this License.
+
+The above rights may be exercised in all media and formats whether now known or hereafter devised. The above rights include the right to make such modifications as are technically necessary to exercise the rights in other media and formats. Subject to Section 8(f), all rights not expressly granted by Licensor are hereby reserved.
+
+4. Restrictions. The license granted in Section 3 above is expressly made subject to and limited by the following restrictions:
+
+   1. You may Distribute or Publicly Perform the Work only under the terms of this License. You must include a copy of, or the Uniform Resource Identifier (URI) for, this License with every copy of the Work You Distribute or Publicly Perform. You may not offer or impose any terms on the Work that restrict the terms of this License or the ability of the recipient of the Work to exercise the rights granted to that recipient under the terms of the License. You may not sublicense the Work. You must keep intact all notices that refer to this License and to the disclaimer of warranties with every copy of the Work You Distribute or Publicly Perform. When You Distribute or Publicly Perform the Work, You may not impose any effective technological measures on the Work that restrict the ability of a recipient of the Work from You to exercise the rights granted to that recipient under the terms of the License. This Section 4(a) applies to the Work as incorporated in a Collection, but this does not require the Collection apart from the Work itself to be made subject to the terms of this License. If You create a Collection, upon notice from any Licensor You must, to the extent practicable, remove from the Collection any credit as required by Section 4(c), as requested. If You create an Adaptation, upon notice from any Licensor You must, to the extent practicable, remove from the Adaptation any credit as required by Section 4(c), as requested.
+   2. You may Distribute or Publicly Perform an Adaptation only under the terms of: (i) this License; (ii) a later version of this License with the same License Elements as this License; (iii) a Creative Commons jurisdiction license (either this or a later license version) that contains the same License Elements as this License (e.g., Attribution-ShareAlike 3.0 US)); (iv) a Creative Commons Compatible License. If you license the Adaptation under one of the licenses mentioned in (iv), you must comply with the terms of that license. If you license the Adaptation under the terms of any of the licenses mentioned in (i), (ii) or (iii) (the "Applicable License"), you must comply with the terms of the Applicable License generally and the following provisions: (I) You must include a copy of, or the URI for, the Applicable License with every copy of each Adaptation You Distribute or Publicly Perform; (II) You may not offer or impose any terms on the Adaptation that restrict the terms of the Applicable License or the ability of the recipient of the Adaptation to exercise the rights granted to that recipient under the terms of the Applicable License; (III) You must keep intact all notices that refer to the Applicable License and to the disclaimer of warranties with every copy of the Work as included in the Adaptation You Distribute or Publicly Perform; (IV) when You Distribute or Publicly Perform the Adaptation, You may not impose any effective technological measures on the Adaptation that restrict the ability of a recipient of the Adaptation from You to exercise the rights granted to that recipient under the terms of the Applicable License. This Section 4(b) applies to the Adaptation as incorporated in a Collection, but this does not require the Collection apart from the Adaptation itself to be made subject to the terms of the Applicable License.
+   3. If You Distribute, or Publicly Perform the Work or any Adaptations or Collections, You must, unless a request has been made pursuant to Section 4(a), keep intact all copyright notices for the Work and provide, reasonable to the medium or means You are utilizing: (i) the name of the Original Author (or pseudonym, if applicable) if supplied, and/or if the Original Author and/or Licensor designate another party or parties (e.g., a sponsor institute, publishing entity, journal) for attribution ("Attribution Parties") in Licensor's copyright notice, terms of service or by other reasonable means, the name of such party or parties; (ii) the title of the Work if supplied; (iii) to the extent reasonably practicable, the URI, if any, that Licensor specifies to be associated with the Work, unless such URI does not refer to the copyright notice or licensing information for the Work; and (iv) , consistent with Ssection 3(b), in the case of an Adaptation, a credit identifying the use of the Work in the Adaptation (e.g., "French translation of the Work by Original Author," or "Screenplay based on original Work by Original Author"). The credit required by this Section 4(c) may be implemented in any reasonable manner; provided, however, that in the case of a Adaptation or Collection, at a minimum such credit will appear, if a credit for all contributing authors of the Adaptation or Collection appears, then as part of these credits and in a manner at least as prominent as the credits for the other contributing authors. For the avoidance of doubt, You may only use the credit required by this Section for the purpose of attribution in the manner set out above and, by exercising Your rights under this License, You may not implicitly or explicitly assert or imply any connection with, sponsorship or endorsement by the Original Author, Licensor and/or Attribution Parties, as appropriate, of You or Your use of the Work, without the separate, express prior written permission of the Original Author, Licensor and/or Attribution Parties.
+   4. Except as otherwise agreed in writing by the Licensor or as may be otherwise permitted by applicable law, if You Reproduce, Distribute or Publicly Perform the Work either by itself or as part of any Adaptations or Collections, You must not distort, mutilate, modify or take other derogatory action in relation to the Work which would be prejudicial to the Original Author's honor or reputation. Licensor agrees that in those jurisdictions (e.g. Japan), in which any exercise of the right granted in Section 3(b) of this License (the right to make Adaptations) would be deemed to be a distortion, mutilation, modification or other derogatory action prejudicial to the Original Author's honor and reputation, the Licensor will waive or not assert, as appropriate, this Section, to the fullest extent permitted by the applicable national law, to enable You to reasonably exercise Your right under Section 3(b) of this License (right to make Adaptations) but not otherwise.
+
+5. Representations, Warranties and Disclaimer
+
+UNLESS OTHERWISE MUTUALLY AGREED TO BY THE PARTIES IN WRITING, LICENSOR OFFERS THE WORK AS-IS AND MAKES NO REPRESENTATIONS OR WARRANTIES OF ANY KIND CONCERNING THE WORK, EXPRESS, IMPLIED, STATUTORY OR OTHERWISE, INCLUDING, WITHOUT LIMITATION, WARRANTIES OF TITLE, MERCHANTIBILITY, FITNESS FOR A PARTICULAR PURPOSE, NONINFRINGEMENT, OR THE ABSENCE OF LATENT OR OTHER DEFECTS, ACCURACY, OR THE PRESENCE OF ABSENCE OF ERRORS, WHETHER OR NOT DISCOVERABLE. SOME JURISDICTIONS DO NOT ALLOW THE EXCLUSION OF IMPLIED WARRANTIES, SO SUCH EXCLUSION MAY NOT APPLY TO YOU.
+
+6. Limitation on Liability. EXCEPT TO THE EXTENT REQUIRED BY APPLICABLE LAW, IN NO EVENT WILL LICENSOR BE LIABLE TO YOU ON ANY LEGAL THEORY FOR ANY SPECIAL, INCIDENTAL, CONSEQUENTIAL, PUNITIVE OR EXEMPLARY DAMAGES ARISING OUT OF THIS LICENSE OR THE USE OF THE WORK, EVEN IF LICENSOR HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
+
+7. Termination
+
+   1. This License and the rights granted hereunder will terminate automatically upon any breach by You of the terms of this License. Individuals or entities who have received Adaptations or Collections from You under this License, however, will not have their licenses terminated provided such individuals or entities remain in full compliance with those licenses. Sections 1, 2, 5, 6, 7, and 8 will survive any termination of this License.
+   2. Subject to the above terms and conditions, the license granted here is perpetual (for the duration of the applicable copyright in the Work). Notwithstanding the above, Licensor reserves the right to release the Work under different license terms or to stop distributing the Work at any time; provided, however that any such election will not serve to withdraw this License (or any other license that has been, or is required to be, granted under the terms of this License), and this License will continue in full force and effect unless terminated as stated above.
+
+8. Miscellaneous
+
+   1. Each time You Distribute or Publicly Perform the Work or a Collection, the Licensor offers to the recipient a license to the Work on the same terms and conditions as the license granted to You under this License.
+   2. Each time You Distribute or Publicly Perform an Adaptation, Licensor offers to the recipient a license to the original Work on the same terms and conditions as the license granted to You under this License.
+   3. If any provision of this License is invalid or unenforceable under applicable law, it shall not affect the validity or enforceability of the remainder of the terms of this License, and without further action by the parties to this agreement, such provision shall be reformed to the minimum extent necessary to make such provision valid and enforceable.
+   4. No term or provision of this License shall be deemed waived and no breach consented to unless such waiver or consent shall be in writing and signed by the party to be charged with such waiver or consent.
+   5. This License constitutes the entire agreement between the parties with respect to the Work licensed here. There are no understandings, agreements or representations with respect to the Work not specified here. Licensor shall not be bound by any additional provisions that may appear in any communication from You. This License may not be modified without the mutual written agreement of the Licensor and You.
+   6. The rights granted under, and the subject matter referenced, in this License were drafted utilizing the terminology of the Berne Convention for the Protection of Literary and Artistic Works (as amended on September 28, 1979), the Rome Convention of 1961, the WIPO Copyright Treaty of 1996, the WIPO Performances and Phonograms Treaty of 1996 and the Universal Copyright Convention (as revised on July 24, 1971). These rights and subject matter take effect in the relevant jurisdiction in which the License terms are sought to be enforced according to the corresponding provisions of the implementation of those treaty provisions in the applicable national law. If the standard suite of rights granted under applicable copyright law includes additional rights not granted under this License, such additional rights are deemed to be included in the License; this License is not intended to restrict the license of any rights under applicable law.
diff --git a/extensions/gdx-tiled-preprocessor/CONTRIBUTORS b/extensions/gdx-tiled-preprocessor/CONTRIBUTORS
new file mode 100644
index 0000000..c06c300
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/CONTRIBUTORS
@@ -0,0 +1,13 @@
+# This is the official list of people who can contribute
+# (and who have contributed) code to the libgdx project
+# repository.
+# The AUTHORS file lists the copyright holders; this file
+# lists people. Contributors must sign the CLA to grant
+# the AUTHORS copyright within the terms of the Apache 2 license.
+#
+Tony Wang manifaust@gmail.com, 
+Christoph Widulle christoph.widulle@googlemail.com, 
+Dave Clayton davedx@gmail.com, 
+David Fraska dfraska@gmail.com, 
+Moritz Post moritzpost@gmail.com, 
+Eric Spitz eric.spitz2000@gmail.com
\ No newline at end of file
diff --git a/extensions/gdx-tiled-preprocessor/LICENSE b/extensions/gdx-tiled-preprocessor/LICENSE
new file mode 100644
index 0000000..4a45986
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/LICENSE
@@ -0,0 +1,177 @@
+
+                                 Apache License
+                           Version 2.0, January 2004
+                        http://www.apache.org/licenses/
+
+   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
+
+   1. Definitions.
+
+      "License" shall mean the terms and conditions for use, reproduction,
+      and distribution as defined by Sections 1 through 9 of this document.
+
+      "Licensor" shall mean the copyright owner or entity authorized by
+      the copyright owner that is granting the License.
+
+      "Legal Entity" shall mean the union of the acting entity and all
+      other entities that control, are controlled by, or are under common
+      control with that entity. For the purposes of this definition,
+      "control" means (i) the power, direct or indirect, to cause the
+      direction or management of such entity, whether by contract or
+      otherwise, or (ii) ownership of fifty percent (50%) or more of the
+      outstanding shares, or (iii) beneficial ownership of such entity.
+
+      "You" (or "Your") shall mean an individual or Legal Entity
+      exercising permissions granted by this License.
+
+      "Source" form shall mean the preferred form for making modifications,
+      including but not limited to software source code, documentation
+      source, and configuration files.
+
+      "Object" form shall mean any form resulting from mechanical
+      transformation or translation of a Source form, including but
+      not limited to compiled object code, generated documentation,
+      and conversions to other media types.
+
+      "Work" shall mean the work of authorship, whether in Source or
+      Object form, made available under the License, as indicated by a
+      copyright notice that is included in or attached to the work
+      (an example is provided in the Appendix below).
+
+      "Derivative Works" shall mean any work, whether in Source or Object
+      form, that is based on (or derived from) the Work and for which the
+      editorial revisions, annotations, elaborations, or other modifications
+      represent, as a whole, an original work of authorship. For the purposes
+      of this License, Derivative Works shall not include works that remain
+      separable from, or merely link (or bind by name) to the interfaces of,
+      the Work and Derivative Works thereof.
+
+      "Contribution" shall mean any work of authorship, including
+      the original version of the Work and any modifications or additions
+      to that Work or Derivative Works thereof, that is intentionally
+      submitted to Licensor for inclusion in the Work by the copyright owner
+      or by an individual or Legal Entity authorized to submit on behalf of
+      the copyright owner. For the purposes of this definition, "submitted"
+      means any form of electronic, verbal, or written communication sent
+      to the Licensor or its representatives, including but not limited to
+      communication on electronic mailing lists, source code control systems,
+      and issue tracking systems that are managed by, or on behalf of, the
+      Licensor for the purpose of discussing and improving the Work, but
+      excluding communication that is conspicuously marked or otherwise
+      designated in writing by the copyright owner as "Not a Contribution."
+
+      "Contributor" shall mean Licensor and any individual or Legal Entity
+      on behalf of whom a Contribution has been received by Licensor and
+      subsequently incorporated within the Work.
+
+   2. Grant of Copyright License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      copyright license to reproduce, prepare Derivative Works of,
+      publicly display, publicly perform, sublicense, and distribute the
+      Work and such Derivative Works in Source or Object form.
+
+   3. Grant of Patent License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      (except as stated in this section) patent license to make, have made,
+      use, offer to sell, sell, import, and otherwise transfer the Work,
+      where such license applies only to those patent claims licensable
+      by such Contributor that are necessarily infringed by their
+      Contribution(s) alone or by combination of their Contribution(s)
+      with the Work to which such Contribution(s) was submitted. If You
+      institute patent litigation against any entity (including a
+      cross-claim or counterclaim in a lawsuit) alleging that the Work
+      or a Contribution incorporated within the Work constitutes direct
+      or contributory patent infringement, then any patent licenses
+      granted to You under this License for that Work shall terminate
+      as of the date such litigation is filed.
+
+   4. Redistribution. You may reproduce and distribute copies of the
+      Work or Derivative Works thereof in any medium, with or without
+      modifications, and in Source or Object form, provided that You
+      meet the following conditions:
+
+      (a) You must give any other recipients of the Work or
+          Derivative Works a copy of this License; and
+
+      (b) You must cause any modified files to carry prominent notices
+          stating that You changed the files; and
+
+      (c) You must retain, in the Source form of any Derivative Works
+          that You distribute, all copyright, patent, trademark, and
+          attribution notices from the Source form of the Work,
+          excluding those notices that do not pertain to any part of
+          the Derivative Works; and
+
+      (d) If the Work includes a "NOTICE" text file as part of its
+          distribution, then any Derivative Works that You distribute must
+          include a readable copy of the attribution notices contained
+          within such NOTICE file, excluding those notices that do not
+          pertain to any part of the Derivative Works, in at least one
+          of the following places: within a NOTICE text file distributed
+          as part of the Derivative Works; within the Source form or
+          documentation, if provided along with the Derivative Works; or,
+          within a display generated by the Derivative Works, if and
+          wherever such third-party notices normally appear. The contents
+          of the NOTICE file are for informational purposes only and
+          do not modify the License. You may add Your own attribution
+          notices within Derivative Works that You distribute, alongside
+          or as an addendum to the NOTICE text from the Work, provided
+          that such additional attribution notices cannot be construed
+          as modifying the License.
+
+      You may add Your own copyright statement to Your modifications and
+      may provide additional or different license terms and conditions
+      for use, reproduction, or distribution of Your modifications, or
+      for any such Derivative Works as a whole, provided Your use,
+      reproduction, and distribution of the Work otherwise complies with
+      the conditions stated in this License.
+
+   5. Submission of Contributions. Unless You explicitly state otherwise,
+      any Contribution intentionally submitted for inclusion in the Work
+      by You to the Licensor shall be under the terms and conditions of
+      this License, without any additional terms or conditions.
+      Notwithstanding the above, nothing herein shall supersede or modify
+      the terms of any separate license agreement you may have executed
+      with Licensor regarding such Contributions.
+
+   6. Trademarks. This License does not grant permission to use the trade
+      names, trademarks, service marks, or product names of the Licensor,
+      except as required for reasonable and customary use in describing the
+      origin of the Work and reproducing the content of the NOTICE file.
+
+   7. Disclaimer of Warranty. Unless required by applicable law or
+      agreed to in writing, Licensor provides the Work (and each
+      Contributor provides its Contributions) on an "AS IS" BASIS,
+      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
+      implied, including, without limitation, any warranties or conditions
+      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
+      PARTICULAR PURPOSE. You are solely responsible for determining the
+      appropriateness of using or redistributing the Work and assume any
+      risks associated with Your exercise of permissions under this License.
+
+   8. Limitation of Liability. In no event and under no legal theory,
+      whether in tort (including negligence), contract, or otherwise,
+      unless required by applicable law (such as deliberate and grossly
+      negligent acts) or agreed to in writing, shall any Contributor be
+      liable to You for damages, including any direct, indirect, special,
+      incidental, or consequential damages of any character arising as a
+      result of this License or out of the use or inability to use the
+      Work (including but not limited to damages for loss of goodwill,
+      work stoppage, computer failure or malfunction, or any and all
+      other commercial damages or losses), even if such Contributor
+      has been advised of the possibility of such damages.
+
+   9. Accepting Warranty or Additional Liability. While redistributing
+      the Work or Derivative Works thereof, You may choose to offer,
+      and charge a fee for, acceptance of support, warranty, indemnity,
+      or other liability obligations and/or rights consistent with this
+      License. However, in accepting such obligations, You may act only
+      on Your own behalf and on Your sole responsibility, not on behalf
+      of any other Contributor, and only if You agree to indemnify,
+      defend, and hold each Contributor harmless for any liability
+      incurred by, or claims asserted against, such Contributor by reason
+      of your accepting any such warranty or additional liability.
+
+   END OF TERMS AND CONDITIONS
\ No newline at end of file
diff --git a/extensions/gdx-tiled-preprocessor/data/alignment test.tmx b/extensions/gdx-tiled-preprocessor/data/alignment test.tmx
new file mode 100644
index 0000000..89ca245
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/data/alignment test.tmx	
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<map version="1.0" orientation="orthogonal" width="14" height="14" tilewidth="64" tileheight="64">
+ <tileset firstgid="1" name="perspective walls" tilewidth="64" tileheight="64">
+  <image source="perspective walls.png"/>
+  <tile id="13">
+   <properties>
+    <property name="door" value="true"/>
+   </properties>
+  </tile>
+  <tile id="14">
+   <properties>
+    <property name="door" value="true"/>
+   </properties>
+  </tile>
+  <tile id="15">
+   <properties>
+    <property name="pickup" value="true"/>
+   </properties>
+  </tile>
+ </tileset>
+ <tileset firstgid="17" name="perspective walls test" tilewidth="64" tileheight="64">
+  <image source="perspective walls test.png"/>
+ </tileset>
+ <layer name="Walls" width="14" height="14">
+  <data encoding="base64">
+   JAAAACUAAAAlAAAAJQAAACUAAAAlAAAAJQAAACUAAAAlAAAAJQAAACUAAAAlAAAAJQAAACMAAAAnAAAAAQAAABEAAAAAAAAAAgAAABIAAAAAAAAAAwAAABMAAAAAAAAABAAAABQAAAAAAAAAKAAAACcAAAARAAAAAQAAAAAAAAASAAAAAgAAAAAAAAATAAAAAwAAAAAAAAAUAAAABAAAAAAAAAAoAAAAJwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAnAAAABQAAABUAAAAAAAAABgAAABYAAAAAAAAABwAAABcAAAAAAAAACAAAABgAAAAAAAAAKAAAACcAAAAVAAAABQAAAAAAAAAWAAAABgAAAAAAAAAXAAAABwAAAAAAAAAYAAAACAAAAAAAAAAoAAAAJwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAnAAAACQAAABkAAAAAAAAACgAAABoAAAAAAAAACwAAABsAAAAAAAAADAAAABwAAAAAAAAAKAAAACcAAAAZAAAACQAAAAAAAAAaAAAACgAAAAAAAAAbAAAACwAAAAAAAAAcAAAADAAAAAAAAAAoAAAAJwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAnAAAADQAAAB0AAAAAAAAADgAAAB4AAAAAAAAADwAAAB8AAAAAAAAAEAAAACAAAAAAAAAAKAAAACcAAAAdAAAADQAAAAAAAAAeAAAADgAAAAAAAAAfAAAADwAAAAAAAAAgAAAAEAAAAAAAAAAoAAAAJwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAiAAAAJgAAACYAAAAmAAAAJgAAACYAAAAmAAAAJgAAACYAAAAmAAAAJgAAACYAAAAmAAAAIQAAAA==
+  </data>
+ </layer>
+ <layer name="Walls level 2" width="14" height="14">
+  <data encoding="base64">

+  </data>
+ </layer>
+ <layer name="Walls level 3" width="14" height="14">
+  <data encoding="base64">
+   AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
+  </data>
+ </layer>
+</map>
diff --git a/extensions/gdx-tiled-preprocessor/data/margin spacing doctype test.tmx b/extensions/gdx-tiled-preprocessor/data/margin spacing doctype test.tmx
new file mode 100644
index 0000000..4c31dc1
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/data/margin spacing doctype test.tmx	
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE map SYSTEM "http://mapeditor.org/dtd/1.0/map.dtd">
+<map version="1.0" orientation="orthogonal" width="40" height="40" tilewidth="32" tileheight="32">
+ <tileset firstgid="1" name="Desert" tilewidth="32" tileheight="32" spacing="1" margin="1">
+  <image source="tmw-desert-spacing.png"/>
+ </tileset>
+ <layer name="Ground" width="40" height="40">
+  <data encoding="base64" compression="gzip">
+   H4sIAAAAAAAAA+2Y2QrCMBBFo31wA+sCrlirdd/q/3+dIzZUhtAmMRlH6cPBBlJyvDO2g5EQIvJIFwiBnudzbLgp/JYMvH4lv2dWI2AMTBj4qKgBdSBA3j7OmgIzA+ZAC2gDHYIsVsDagMSj36HAbwOcgO0X/YrySzTzpPDbMfS7Iy/sdxGv/r8S++Gew+uyvHBfuvBT/Q4OKD95XeaHc3WV3x6tpY9pfr7riz0xx6x+upwd+DUymiJ/FxURaO6TLD70C0U+X8jvWkRHc5/qPhu/scjniz4wKGGouU91n8/eoyYW6jmHk2dM6GMzm1F43bJPnWfn+/sncXS+Ljp+T6d7tpfSL2Xoh/uam59Nfd/nCyq/1MAPZ8ktP1WtOftR5mczm1H6/QsxA4dfAWfF7b/BqsYVFZ/xABSXR5cAGQAA
+  </data>
+ </layer>
+</map>
diff --git a/extensions/gdx-tiled-preprocessor/data/output/alignment test.tmx b/extensions/gdx-tiled-preprocessor/data/output/alignment test.tmx
new file mode 100644
index 0000000..b24849d
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/data/output/alignment test.tmx	
@@ -0,0 +1,38 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?><map height="14" orientation="orthogonal" tileheight="64" tilewidth="64" version="1.0" width="14"><properties><property name="blended tiles" value="1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40"/></properties>
+ <tileset firstgid="1" name="perspective walls" tileheight="64" tilewidth="64">
+  <image source="perspective walls.png"/>
+  <tile id="13">
+   <properties>
+    <property name="door" value="true"/>
+   </properties>
+  </tile>
+  <tile id="14">
+   <properties>
+    <property name="door" value="true"/>
+   </properties>
+  </tile>
+  <tile id="15">
+   <properties>
+    <property name="pickup" value="true"/>
+   </properties>
+  </tile>
+ </tileset>
+ <tileset firstgid="17" name="perspective walls test" tileheight="64" tilewidth="64">
+  <image source="perspective walls test.png"/>
+ </tileset>
+ <layer height="14" name="Walls" width="14">
+  <data encoding="base64">
+   JAAAACUAAAAlAAAAJQAAACUAAAAlAAAAJQAAACUAAAAlAAAAJQAAACUAAAAlAAAAJQAAACMAAAAnAAAAAQAAABEAAAAAAAAAAgAAABIAAAAAAAAAAwAAABMAAAAAAAAABAAAABQAAAAAAAAAKAAAACcAAAARAAAAAQAAAAAAAAASAAAAAgAAAAAAAAATAAAAAwAAAAAAAAAUAAAABAAAAAAAAAAoAAAAJwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAnAAAABQAAABUAAAAAAAAABgAAABYAAAAAAAAABwAAABcAAAAAAAAACAAAABgAAAAAAAAAKAAAACcAAAAVAAAABQAAAAAAAAAWAAAABgAAAAAAAAAXAAAABwAAAAAAAAAYAAAACAAAAAAAAAAoAAAAJwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAnAAAACQAAABkAAAAAAAAACgAAABoAAAAAAAAACwAAABsAAAAAAAAADAAAABwAAAAAAAAAKAAAACcAAAAZAAAACQAAAAAAAAAaAAAACgAAAAAAAAAbAAAACwAAAAAAAAAcAAAADAAAAAAAAAAoAAAAJwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAnAAAADQAAAB0AAAAAAAAADgAAAB4AAAAAAAAADwAAAB8AAAAAAAAAEAAAACAAAAAAAAAAKAAAACcAAAAdAAAADQAAAAAAAAAeAAAADgAAAAAAAAAfAAAADwAAAAAAAAAgAAAAEAAAAAAAAAAoAAAAJwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAiAAAAJgAAACYAAAAmAAAAJgAAACYAAAAmAAAAJgAAACYAAAAmAAAAJgAAACYAAAAmAAAAIQAAAA==
+  </data>
+ </layer>
+ <layer height="14" name="Walls level 2" width="14">
+  <data encoding="base64">

+  </data>
+ </layer>
+ <layer height="14" name="Walls level 3" width="14">
+  <data encoding="base64">

+  </data>
+ </layer>
+</map>
\ No newline at end of file
diff --git a/extensions/gdx-tiled-preprocessor/data/output/margin spacing doctype test.tmx b/extensions/gdx-tiled-preprocessor/data/output/margin spacing doctype test.tmx
new file mode 100644
index 0000000..bf944c7
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/data/output/margin spacing doctype test.tmx	
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?><map height="40" orientation="orthogonal" tileheight="32" tilewidth="32" version="1.0" width="40"><properties><property name="blended tiles" value=""/></properties>
+ <tileset firstgid="1" margin="1" name="Desert" spacing="1" tileheight="32" tilewidth="32">
+  <image source="tmw-desert-spacing.png"/>
+ </tileset>
+ <layer height="40" name="Ground" width="40">
+  <data compression="gzip" encoding="base64">
+   H4sIAAAAAAAAA+2Y2QrCMBBFo31wA+sCrlirdd/q/3+dIzZUhtAmMRlH6cPBBlJyvDO2g5EQIvJIFwiBnudzbLgp/JYMvH4lv2dWI2AMTBj4qKgBdSBA3j7OmgIzA+ZAC2gDHYIsVsDagMSj36HAbwOcgO0X/YrySzTzpPDbMfS7Iy/sdxGv/r8S++Gew+uyvHBfuvBT/Q4OKD95XeaHc3WV3x6tpY9pfr7riz0xx6x+upwd+DUymiJ/FxURaO6TLD70C0U+X8jvWkRHc5/qPhu/scjniz4wKGGouU91n8/eoyYW6jmHk2dM6GMzm1F43bJPnWfn+/sncXS+Ljp+T6d7tpfSL2Xoh/uam59Nfd/nCyq/1MAPZ8ktP1WtOftR5mczm1H6/QsxA4dfAWfF7b/BqsYVFZ/xABSXR5cAGQAA
+  </data>
+ </layer>
+</map>
\ No newline at end of file
diff --git a/extensions/gdx-tiled-preprocessor/data/output/perspective walls packfile b/extensions/gdx-tiled-preprocessor/data/output/perspective walls packfile
new file mode 100644
index 0000000..98d5e30
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/data/output/perspective walls packfile	
@@ -0,0 +1,117 @@
+
+perspective walls1.png
+format: RGBA8888
+filter: Nearest,Nearest
+repeat: none
+perspective walls
+  rotate: false
+  xy: 0, 0
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 2
+perspective walls
+  rotate: false
+  xy: 66, 0
+  size: 56, 64
+  orig: 64, 64
+  offset: 8, 0
+  index: 11
+perspective walls
+  rotate: false
+  xy: 0, 66
+  size: 56, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 9
+perspective walls
+  rotate: false
+  xy: 58, 66
+  size: 48, 64
+  orig: 64, 64
+  offset: 8, 0
+  index: 1
+perspective walls
+  rotate: false
+  xy: 0, 132
+  size: 40, 64
+  orig: 64, 64
+  offset: 12, 0
+  index: 14
+perspective walls
+  rotate: false
+  xy: 42, 132
+  size: 64, 56
+  orig: 64, 64
+  offset: 0, 0
+  index: 10
+perspective walls
+  rotate: false
+  xy: 0, 198
+  size: 64, 56
+  orig: 64, 64
+  offset: 0, 8
+  index: 8
+perspective walls
+  rotate: false
+  xy: 66, 198
+  size: 56, 56
+  orig: 64, 64
+  offset: 8, 0
+  index: 7
+perspective walls
+  rotate: false
+  xy: 0, 256
+  size: 56, 56
+  orig: 64, 64
+  offset: 0, 0
+  index: 6
+perspective walls
+  rotate: false
+  xy: 58, 256
+  size: 56, 56
+  orig: 64, 64
+  offset: 0, 8
+  index: 5
+perspective walls
+  rotate: false
+  xy: 0, 314
+  size: 56, 56
+  orig: 64, 64
+  offset: 8, 8
+  index: 4
+perspective walls
+  rotate: false
+  xy: 58, 314
+  size: 64, 48
+  orig: 64, 64
+  offset: 0, 8
+  index: 0
+perspective walls
+  rotate: false
+  xy: 0, 372
+  size: 48, 48
+  orig: 64, 64
+  offset: 8, 8
+  index: 3
+perspective walls
+  rotate: false
+  xy: 50, 372
+  size: 40, 41
+  orig: 64, 64
+  offset: 20, 19
+  index: 12
+perspective walls
+  rotate: false
+  xy: 0, 422
+  size: 64, 40
+  orig: 64, 64
+  offset: 0, 12
+  index: 13
+perspective walls
+  rotate: false
+  xy: 108, 66
+  size: 12, 16
+  orig: 64, 64
+  offset: 2, 0
+  index: 15
diff --git a/extensions/gdx-tiled-preprocessor/data/output/perspective walls test packfile b/extensions/gdx-tiled-preprocessor/data/output/perspective walls test packfile
new file mode 100644
index 0000000..db2a5b5
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/data/output/perspective walls test packfile	
@@ -0,0 +1,173 @@
+
+perspective walls test1.png
+format: RGBA8888
+filter: Nearest,Nearest
+repeat: none
+perspective walls test
+  rotate: false
+  xy: 0, 0
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 23
+perspective walls test
+  rotate: false
+  xy: 66, 0
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 22
+perspective walls test
+  rotate: false
+  xy: 132, 0
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 21
+perspective walls test
+  rotate: false
+  xy: 198, 0
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 20
+perspective walls test
+  rotate: false
+  xy: 264, 0
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 19
+perspective walls test
+  rotate: false
+  xy: 330, 0
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 18
+perspective walls test
+  rotate: false
+  xy: 396, 0
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 17
+perspective walls test
+  rotate: false
+  xy: 0, 66
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 16
+perspective walls test
+  rotate: false
+  xy: 0, 132
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 15
+perspective walls test
+  rotate: false
+  xy: 0, 198
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 14
+perspective walls test
+  rotate: false
+  xy: 0, 264
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 13
+perspective walls test
+  rotate: false
+  xy: 0, 330
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 12
+perspective walls test
+  rotate: false
+  xy: 0, 396
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 11
+perspective walls test
+  rotate: false
+  xy: 66, 66
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 10
+perspective walls test
+  rotate: false
+  xy: 132, 66
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 9
+perspective walls test
+  rotate: false
+  xy: 198, 66
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 8
+perspective walls test
+  rotate: false
+  xy: 264, 66
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 7
+perspective walls test
+  rotate: false
+  xy: 330, 66
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 6
+perspective walls test
+  rotate: false
+  xy: 396, 66
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 5
+perspective walls test
+  rotate: false
+  xy: 66, 132
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 4
+perspective walls test
+  rotate: false
+  xy: 66, 198
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 3
+perspective walls test
+  rotate: false
+  xy: 66, 264
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 2
+perspective walls test
+  rotate: false
+  xy: 66, 330
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 1
+perspective walls test
+  rotate: false
+  xy: 66, 396
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 0
diff --git a/extensions/gdx-tiled-preprocessor/data/output/perspective walls test1.png b/extensions/gdx-tiled-preprocessor/data/output/perspective walls test1.png
new file mode 100644
index 0000000..69362bc
Binary files /dev/null and b/extensions/gdx-tiled-preprocessor/data/output/perspective walls test1.png differ
diff --git a/extensions/gdx-tiled-preprocessor/data/output/perspective walls.tmx b/extensions/gdx-tiled-preprocessor/data/output/perspective walls.tmx
new file mode 100644
index 0000000..4dca724
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/data/output/perspective walls.tmx	
@@ -0,0 +1,35 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?><map height="32" orientation="orthogonal" tileheight="32" tilewidth="32" version="1.0" width="32"><properties><property name="blended tiles" value="1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40"/></properties>
+ <tileset firstgid="1" name="perspective walls" tileheight="64" tilewidth="64">
+ <image source="perspective walls.png"/>
+ <tile id="13">
+  <properties>
+   <property name="door" value="true"/>
+  </properties>
+ </tile>
+ <tile id="14">
+  <properties>
+   <property name="door" value="true"/>
+  </properties>
+ </tile>
+ <tile id="15">
+  <properties>
+   <property name="pickup" value="true"/>
+  </properties>
+ </tile>
+</tileset>
+ <layer height="32" name="Walls" width="32">
+  <data compression="zlib" encoding="base64">
+   eJztlOkKgCAQhLfb7vd/24SUBqMMNevHfDB4LczusihCCCHkTzRay4XaDP7rxf1882ZpzBqTp/Wo4c7ulRy96LUKRx3EFYF5+GpESpA9V845pT/Oxijn+luIw36k8vf1Rpk1xPepx9vczV+O3GL6n4JJ9vkSOf8/Qwb/r+vHP8ZVzFwTQshf2AA5owLB
+  </data>
+ </layer>
+ <layer height="32" name="Walls level 2" width="32">
+  <data compression="zlib" encoding="base64">
+   eJztzgEJAAAIA7CD/Tsb4yJbgiUA8MO0AwAAhy0rhAAE
+  </data>
+ </layer>
+ <layer height="32" name="Walls level 3" width="32">
+  <data compression="zlib" encoding="base64">
+   eJztzjENAAAIA7Al+PeMgz0cPK2CJgBwN98BAACqBS0QAAQ=
+  </data>
+ </layer>
+</map>
\ No newline at end of file
diff --git a/extensions/gdx-tiled-preprocessor/data/output/perspective walls1.png b/extensions/gdx-tiled-preprocessor/data/output/perspective walls1.png
new file mode 100644
index 0000000..4b1fc75
Binary files /dev/null and b/extensions/gdx-tiled-preprocessor/data/output/perspective walls1.png differ
diff --git a/extensions/gdx-tiled-preprocessor/data/output/tilemap csv.tmx b/extensions/gdx-tiled-preprocessor/data/output/tilemap csv.tmx
new file mode 100644
index 0000000..d4ab951
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/data/output/tilemap csv.tmx	
@@ -0,0 +1,174 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?><map height="30" orientation="orthogonal" tileheight="32" tilewidth="32" version="1.0" width="50">
+ <properties>
+  <property name="blended tiles" value="1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,5,6,7,8,9,10,11,12,13,14,15,16"/>
+ </properties>
+ <tileset firstgid="1" name="tileset" tileheight="32" tilewidth="32">
+  <image height="64" source="tileset.png" width="64"/>
+ </tileset>
+ <tileset firstgid="5" name="tileset2" tileheight="32" tilewidth="32">
+  <image height="64" source="tileset2.png" width="64"/>
+ </tileset>
+ <tileset firstgid="9" name="tileset3" tileheight="32" tilewidth="32">
+  <image height="64" source="tileset3.png" width="64"/>
+ </tileset>
+ <tileset firstgid="13" name="tileset4" tileheight="32" tilewidth="32">
+  <image height="64" source="tileset4.png" width="64"/>
+ </tileset>
+ <layer height="30" name="First Layer" width="50">
+  <properties>
+   <property name="Layer Property" value="Layer Value"/>
+  </properties>
+  <data encoding="csv">
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,1,2,1,1,1,2,1,2,2,2,2,1,2,1,1,1,1,2,2,2,1,1,2,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,1,1,2,1,1,1,2,1,2,1,1,1,1,2,1,1,1,1,2,1,1,2,1,2,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,1,2,1,1,1,2,1,2,1,1,1,1,2,1,1,1,1,2,1,1,2,1,2,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,1,1,2,1,1,1,2,1,2,1,1,1,1,2,1,1,1,1,2,1,1,2,1,2,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,1,2,2,2,2,2,1,2,2,2,1,1,2,1,1,1,1,2,2,2,1,1,2,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,1,1,2,1,1,1,2,1,2,1,1,1,1,2,1,1,1,1,2,1,1,1,1,2,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,1,2,1,1,1,2,1,2,1,1,1,1,2,1,1,1,1,2,1,1,1,1,2,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,1,1,2,1,1,1,2,1,2,1,1,1,1,2,1,1,1,1,2,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,1,2,1,1,1,2,1,2,2,2,2,1,2,2,2,2,1,2,1,1,1,1,2,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2
+</data>
+ </layer>
+ <layer height="30" name="Second Layer" width="50">
+  <data encoding="csv">
+0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,0,7,7,0,0,0,0,0,0,0,0,0,
+7,0,0,0,8,0,0,0,8,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,0,0,0,0,0,
+7,0,0,0,8,0,0,0,8,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,0,0,0,0,
+0,0,0,0,8,0,0,0,8,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,0,
+7,0,0,0,8,0,0,0,8,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+7,0,0,0,8,8,8,8,8,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+7,0,0,0,8,0,0,0,8,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,8,0,0,0,8,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+7,0,0,0,8,0,0,0,8,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,8,0,0,0,8,0,0,0,0,0,0,7,7,7,7,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,
+7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,7,0,0,0,0,0,
+7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,
+7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,
+7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,7,7,
+7,0,7,7,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,7,0,
+7,7,7,7,0,0,0,0,7,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,7,7,0,0,0,0,0,0,7,0,0,7,0,0,0,0,0,0,0,7,0,0,
+0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,7,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,7,0,0,
+0,0,7,7,0,0,7,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,7,0,0,0,0,0,7,0,0,0,7,0,0,0,0,0,7,0,0,0,
+0,0,7,0,0,7,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,7,7,0,0,0,7,0,0,0,0,0,7,0,0,0,0,7,0,0,0,
+0,0,7,0,0,7,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,7,0,0,0,7,0,0,0,0,0,7,0,0,0,0,7,0,0,0,
+0,7,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,7,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,7,0,0,7,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,7,0,7,0,0,0,0,0,0,7,0,0,7,0,0,0,0,
+0,0,0,7,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,7,7,0,7,0,0,0,0,
+0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,7,0,7,0,0,0,0,
+0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,
+0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
+</data>
+ </layer>
+ <layer height="30" name="Third Layer" width="50">
+  <data encoding="csv">
+0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,12,12,12,0,12,12,12,12,12,12,0,0,0,0,0,12,12,12,0,
+0,0,12,0,0,0,0,0,0,0,12,12,0,0,0,0,12,0,0,0,0,0,0,0,12,0,0,0,12,12,12,0,0,0,12,12,0,12,12,0,0,12,0,0,12,12,0,0,0,0,
+0,12,12,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,12,0,0,0,0,0,0,12,0,0,0,12,12,12,12,12,12,0,0,0,0,0,
+0,0,0,0,0,0,0,12,12,0,12,12,12,12,12,0,0,0,0,12,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,12,0,0,0,0,0,0,0,0,12,0,0,0,0,0,
+0,12,0,0,0,12,12,0,0,0,12,11,11,11,12,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,12,0,0,0,0,12,0,12,0,12,12,0,12,0,12,0,0,0,0,0,
+12,0,0,0,12,0,0,0,0,12,12,11,11,11,12,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,12,0,0,0,0,12,12,0,0,0,0,0,0,12,0,12,0,0,0,0,
+0,0,0,12,0,0,0,0,12,0,12,11,11,11,12,0,0,0,0,0,12,0,12,0,0,0,0,0,0,0,0,12,0,12,12,0,12,0,0,0,0,0,0,0,12,12,0,0,0,0,
+12,12,12,0,0,0,0,0,0,0,12,11,11,11,12,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,12,12,0,0,0,12,0,0,0,0,0,0,0,0,0,12,0,0,0,
+12,0,0,0,0,0,0,12,0,0,12,11,11,11,12,0,0,0,0,12,0,0,0,0,0,12,0,0,0,0,0,12,0,0,0,0,0,12,0,0,0,0,0,12,12,12,12,0,0,0,
+12,0,0,0,0,0,0,12,0,0,12,11,11,11,12,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,12,0,0,0,0,12,12,12,12,12,0,0,0,
+0,0,0,0,0,0,0,0,0,0,12,11,11,11,12,0,0,0,12,0,0,0,0,0,0,0,12,0,0,0,0,12,12,12,0,0,0,0,12,0,0,0,0,0,0,12,12,0,0,0,
+0,0,0,0,0,0,12,0,0,0,12,12,12,12,12,0,0,12,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,12,0,12,0,0,0,
+0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,12,12,0,0,0,12,0,0,0,0,12,0,0,0,12,0,0,
+0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,0,0,12,0,0,12,12,0,0,0,0,12,0,0,
+12,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,0,12,12,12,12,0,12,0,0,0,0,0,0,12,0,0,
+0,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,12,12,12,12,0,0,12,0,0,
+0,0,12,0,0,0,12,12,0,12,0,12,12,0,12,0,12,12,12,0,0,12,12,0,0,0,0,0,12,12,0,12,0,0,0,0,0,0,12,0,12,0,0,0,12,12,12,12,0,0,
+0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,12,12,12,12,12,12,0,0,0,12,0,0,0,0,12,0,0,0,0,0,0,0,12,12,0,0,0,
+0,0,12,12,12,12,12,12,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,12,0,0,0,0,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,12,0,0,0,0,
+0,0,0,12,0,0,0,0,12,12,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,12,0,0,0,0,0,0,0,12,12,0,12,0,0,0,
+0,0,0,0,12,0,0,0,0,0,12,12,0,0,0,0,0,12,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,12,0,12,0,0,0,0,0,12,0,0,0,0,12,0,0,
+0,0,0,0,0,12,0,0,0,0,0,0,12,12,0,0,12,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,12,12,0,12,0,12,0,12,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,12,0,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,12,12,0,0,0,0,12,12,0,0,0,0,0,0,0,0,12,0,
+0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,12,0,12,12,0,0,0,0,0,0,0,12,0,0,0,0,12,12,0,12,0,12,0,0,0,12,0,0,0,0,0,0,0,12,0,
+0,0,0,0,0,0,0,12,0,0,0,0,0,0,12,0,0,0,0,0,12,0,12,0,0,0,0,12,0,0,0,12,12,12,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,12,
+0,0,0,0,0,0,0,12,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,12,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,12,12,
+0,0,0,0,0,0,0,12,12,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,12,0,0,
+0,0,0,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,
+0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
+</data>
+ </layer>
+ <layer height="30" name="Fourth Layer" width="50">
+  <data encoding="csv">
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,16,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,16,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,16,16,0,16,16,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,16,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,16,0,16,16,16,0,0,0,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,16,16,0,16,0,0,0,0,0,16,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,16,16,0,0,16,16,16,16,16,16,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,16,0,0,16,16,16,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,16,16,16,16,16,0,0,0,0,0,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,16,16,16,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,16,16,0,16,0,0,0,0,16,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,16,0,0,0,16,0,0,0,0,0,16,16,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,16,0,0,16,16,16,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,16,16,16,16,0,0,16,16,16,16,16,0,16,16,16,16,0,0,15,15,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,16,0,16,16,0,16,16,16,16,16,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,15,15,0,0,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,15,0,0,15,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
+</data>
+ </layer>
+ <objectgroup height="30" name="Object_Layer" width="50">
+  <properties>
+   <property name="Objectgroup property" value="Objectgroup value"/>
+  </properties>
+  <object height="131" name="Touching H" type="mytype1" width="154" x="186" y="187"/>
+  <object height="68" name="Touching P" type="mytype2" width="82" x="599" y="159">
+   <properties>
+    <property name="object property" value="object value"/>
+   </properties>
+  </object>
+  <object name="Touching L" x="579" y="352"/>
+  <object name="Touching !" x="814" y="207"/>
+  <object name="Upper Left" x="0" y="0"/>
+  <object name="Upper Right" x="1600" y="0"/>
+  <object name="Lower Right" x="1600" y="960"/>
+  <object name="Lower Left" x="0" y="960"/>
+  <object gid="6" name="tile object" type="tile object type" x="533" y="272"/>
+ </objectgroup>
+</map>
\ No newline at end of file
diff --git a/extensions/gdx-tiled-preprocessor/data/output/tilemap gzip.tmx b/extensions/gdx-tiled-preprocessor/data/output/tilemap gzip.tmx
new file mode 100644
index 0000000..922f507
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/data/output/tilemap gzip.tmx	
@@ -0,0 +1,57 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?><map height="30" orientation="orthogonal" tileheight="32" tilewidth="32" version="1.0" width="50">
+ <properties>
+  <property name="blended tiles" value="1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,5,6,7,8,9,10,11,12,13,14,15,16"/>
+ </properties>
+ <tileset firstgid="1" name="tileset" tileheight="32" tilewidth="32">
+  <image source="tileset.png"/>
+ </tileset>
+ <tileset firstgid="5" name="tileset2" tileheight="32" tilewidth="32">
+  <image source="tileset2.png"/>
+ </tileset>
+ <tileset firstgid="9" name="tileset3" tileheight="32" tilewidth="32">
+  <image source="tileset3.png"/>
+ </tileset>
+ <tileset firstgid="13" name="tileset4" tileheight="32" tilewidth="32">
+  <image source="tileset4.png"/>
+ </tileset>
+ <layer height="30" name="First Layer" width="50">
+  <properties>
+   <property name="Layer Property" value="Layer Value"/>
+  </properties>
+  <data compression="gzip" encoding="base64">
+   H4sIAAAAAAAAC+2TUQ7AIAhD1fsfevsmgpIMVkg/SI0hSHmyxhjzjVVc5TkjIrx08LDjIX1Jz0upMTd5NzWjeJzetHK1mVh3f/D4wgd5+Hlou3D6913344ZRhf3oxiPag5eHtTMevxk8oiOLR1UvUfPJVoQeyIM8UBWhB/IgD1RF6IE8yANVEXogj348HkfuS4NwFwAA
+  </data>
+ </layer>
+ <layer height="30" name="Second Layer" width="50">
+  <data compression="gzip" encoding="base64">
+   H4sIAAAAAAAAC9VXQQ4EIQjj5v7/xXvdsCoFimKTSWbGClYUUURkyHkMsl+2vYhvhv9bGjSG/OvyaNS8j/G965vl7fpbsXtRB2Kvg47IvukSj+x+n+nQD9o3wqvKVyfjUZnzb6wrxjlyIh4esGLk1YHMZWRc2XzVEfqMX3Few82asAJInF5C1/h49zdSI7PuCKgdrz89/p0OWbSh8NwpxuLd4u7+W98IZuNmnTW79WNxvPDme1Qz8r9yvn7bMmPuomPWntURua8xOJrHyIkeW2j+9PqvzmMrLqtmQ2tm9AyI+s/Y2NmacSwfLP/VdQ47Frpvh1qN4f+2ji9OrdRgcBcAAA==
+  </data>
+ </layer>
+ <layer height="30" name="Third Layer" width="50">
+  <data compression="gzip" encoding="base64">
+   H4sIAAAAAAAAC92WyW7DMAxEda///3tzKAwYCpc3Q7mHEgiCcBkuGlFZ61eupQuNyfyux2f/vdu6WFpThkniaP69nwiD9FbZKp+oXkWX2ZTzqaQ7c6VG4kfinTnsup/HR+UTsV/Bd6QjeBk+7YOefZWni5nOiPZBcu2+So3VDEi8wiu3JveO0XtD+lDvr6N33g2lj+k+7LBO7N8bZ9KHyuluvhP+ZfOYvhvUV9kHTj6lD7pvyRmp/y/elu6MCfccfpyQiKOZrsLIMP9KHD6Se5n1ttb3vCId4UGGkflVddEcjkQ7rdv76s7t6iQ5Vewpbyp/1X4Km8Qq5+D0smPQGJJv91NyuL3cNnVXU59oh9B4J/dJPitvvIpN7E8fkrOrtdqzKq7i0/FYeaOmtU7uPBV3F0c4Lv8mb0IWM7mzEyz3XXwTy40/0cObeP9JPi2A8mVwFwAA
+  </data>
+ </layer>
+ <layer height="30" name="Fourth Layer" width="50">
+  <data compression="gzip" encoding="base64">
+   H4sIAAAAAAAAC+VWWwqAMAzzBnr/04qgMEq0D+eSYWC4j06StU23LO+wgcXC1nx78GBp+vJOWVrsPnPuKab9joDVEuEY1T263mxu7mJQvBIsL9Q/lreylnafqTElVD1MYY60eMNHQQfiX+HF1OL5VNRbmUD+cxen3O9Rf6rOvdGzLzI7nuLXc6H/KwC9vTLerKLjwGrWTOjFm5WP3nfO0OFpqGhU6w+0j0DhrXIA8c7mha3Dq7EMmFo8rpm8MH2rZ+wMOiLxjH6vzg+vzmbRcZ1Vebuo8PgTdmTO18JwFwAA
+  </data>
+ </layer>
+ <objectgroup height="30" name="Object_Layer" width="50">
+  <properties>
+   <property name="Objectgroup property" value="Objectgroup value"/>
+  </properties>
+  <object height="131" name="Touching H" type="mytype1" width="154" x="186" y="187"/>
+  <object height="68" name="Touching P" type="mytype2" width="82" x="599" y="159">
+   <properties>
+    <property name="object property" value="object value"/>
+   </properties>
+  </object>
+  <object name="Touching L" x="579" y="352"/>
+  <object name="Touching !" x="814" y="207"/>
+  <object name="Upper Left" x="0" y="0"/>
+  <object name="Upper Right" x="1600" y="0"/>
+  <object name="Lower Right" x="1600" y="960"/>
+  <object name="Lower Left" x="0" y="960"/>
+ </objectgroup>
+</map>
\ No newline at end of file
diff --git a/extensions/gdx-tiled-preprocessor/data/output/tilemap uncompressed.tmx b/extensions/gdx-tiled-preprocessor/data/output/tilemap uncompressed.tmx
new file mode 100644
index 0000000..53bf310
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/data/output/tilemap uncompressed.tmx	
@@ -0,0 +1,57 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?><map height="30" orientation="orthogonal" tileheight="32" tilewidth="32" version="1.0" width="50">
+ <properties>
+  <property name="blended tiles" value="1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,5,6,7,8,9,10,11,12,13,14,15,16"/>
+ </properties>
+ <tileset firstgid="1" name="tileset" tileheight="32" tilewidth="32">
+  <image source="tileset.png"/>
+ </tileset>
+ <tileset firstgid="5" name="tileset2" tileheight="32" tilewidth="32">
+  <image source="tileset2.png"/>
+ </tileset>
+ <tileset firstgid="9" name="tileset3" tileheight="32" tilewidth="32">
+  <image source="tileset3.png"/>
+ </tileset>
+ <tileset firstgid="13" name="tileset4" tileheight="32" tilewidth="32">
+  <image source="tileset4.png"/>
+ </tileset>
+ <layer height="30" name="First Layer" width="50">
+  <properties>
+   <property name="Layer Property" value="Layer Value"/>
+  </properties>
+  <data encoding="base64">
+   
+  </data>
+ </layer>
+ <layer height="30" name="Second Layer" width="50">
+  <data encoding="base64">
+   
+  </data>
+ </layer>
+ <layer height="30" name="Third Layer" width="50">
+  <data encoding="base64">
+   
+  </data>
+ </layer>
+ <layer height="30" name="Fourth Layer" width="50">
+  <data encoding="base64">
wAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAEAAAABAAAAAAAAAAEAAAABAAAAAQAAAAEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8AAAAPAAAADwAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwAAAA8AAAAPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8AAAAPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwAAAAAAAAAAAAAADwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8AAAAAAAAAAAAAAAAAAAAAAAAADwAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
+  </data>
+ </layer>
+ <objectgroup height="30" name="Object_Layer" width="50">
+  <properties>
+   <property name="Objectgroup property" value="Objectgroup value"/>
+  </properties>
+  <object height="131" name="Touching H" type="mytype1" width="154" x="186" y="187"/>
+  <object height="68" name="Touching P" type="mytype2" width="82" x="599" y="159">
+   <properties>
+    <property name="object property" value="object value"/>
+   </properties>
+  </object>
+  <object name="Touching L" x="579" y="352"/>
+  <object name="Touching !" x="814" y="207"/>
+  <object name="Upper Left" x="0" y="0"/>
+  <object name="Upper Right" x="1600" y="0"/>
+  <object name="Lower Right" x="1600" y="960"/>
+  <object name="Lower Left" x="0" y="960"/>
+ </objectgroup>
+</map>
\ No newline at end of file
diff --git a/extensions/gdx-tiled-preprocessor/data/output/tilemap xml.tmx b/extensions/gdx-tiled-preprocessor/data/output/tilemap xml.tmx
new file mode 100644
index 0000000..c01be43
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/data/output/tilemap xml.tmx	
@@ -0,0 +1,57 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?><map height="30" orientation="orthogonal" tileheight="32" tilewidth="32" version="1.0" width="50">
+ <properties>
+  <property name="blended tiles" value="1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,5,6,7,8,9,10,11,12,13,14,15,16"/>
+ </properties>
+ <tileset firstgid="1" name="tileset" tileheight="32" tilewidth="32">
+  <image height="64" source="tileset.png" width="64"/>
+ </tileset>
+ <tileset firstgid="5" name="tileset2" tileheight="32" tilewidth="32">
+  <image height="64" source="tileset2.png" width="64"/>
+ </tileset>
+ <tileset firstgid="9" name="tileset3" tileheight="32" tilewidth="32">
+  <image height="64" source="tileset3.png" width="64"/>
+ </tileset>
+ <tileset firstgid="13" name="tileset4" tileheight="32" tilewidth="32">
+  <image height="64" source="tileset4.png" width="64"/>
+ </tileset>
+ <layer height="30" name="First Layer" width="50">
+  <properties>
+   <property name="Layer Property" value="Layer Value"/>
+  </properties>
+  <data compression="zlib" encoding="base64">
+   eJztk1EOwCAIQ9X7H3r7JoKSDFZIP0iNIUh5ssYY841VXOU5IyK8dPCw4yF9Sc9LqTE3eTc1o3ic3rRytZlYd3/w+MIHefh5aLtw+vdd9+OGUYX96MYj2oOXh7UzHr8ZPKIji0dVL1HzyVaEHsiDPFAVoQfyIA9UReiBPMgDVRF6II9+PB6c+Ahs
+  </data>
+ </layer>
+ <layer height="30" name="Second Layer" width="50">
+  <data compression="zlib" encoding="base64">
+   eJzVV0EOBCEI4+b+/8V73bAqBYpik0lmxgpWFFFEZMh5DLJftr2Ib4b/Wxo0hvzr8mjUvI/xveub5e36W7F7UQdir4OOyL7pEo/sfp/p0A/aN8Krylcn41GZ82+sK8Y5ciIeHrBi5NWBzGVkXNl81RH6jF9xXsPNmrACSJxeQtf4ePc3UiOz7gioHa8/Pf6dDlm0ofDcKcbi3eLu/lvfCGbjZp01u/Vjcbzw5ntUM/K/cr5+2zJj7qJj1p7VEbmvMTiax8iJHlto/vT6r85jKy6rZkNrZvQMiPrP2NjZmnEsHyz/1XUOOxa6b4dajeH/to4vnrEFuA==
+  </data>
+ </layer>
+ <layer height="30" name="Third Layer" width="50">
+  <data compression="zlib" encoding="base64">
+   eJzdlsluwzAMRHWv//97cygMGAqXN0O5hxIIgnAZLhpRWetXrqULjcn8rsdn/73bulhaU4ZJ4mj+vZ8Ig/RW2SqfqF5Fl9mU86mkO3OlRuJH4p057Lqfx0flE7FfwXekI3gZPu2Dnn2Vp4uZzoj2QXLtvkqN1QxIvMIrtyb3jtF7Q/pQ76+jd94NpY/pPuywTuzfG2fSh8rpbr4T/mXzmL4b1FfZB04+pQ+6b8kZqf8v3pbujAn3HH6ckIijma7CyDD/Shw+knuZ9bbW97wiHeFBhpH5VXXRHI5EO63b++rO7eokOVXsKW8qf9V+CpvEKufg9LJj0BiSb/dTcri93DZ1V1OfaIfQeCf3ST4rb7yKTexPH5Kzq7Xasyqu4tPxWHmjprVO7jwVdxdHOC7/Jm9CFjO5sxMs9118E8uNP9HDm3j/ST48vhBs
+  </data>
+ </layer>
+ <layer height="30" name="Fourth Layer" width="50">
+  <data compression="zlib" encoding="base64">
+   eJzlVlsKgDAM8wZ6/9OKoDBKtA/nkmFguI9OkrVNtyzvsIHFwtZ8e/BgafryTlla7D5z7imm/Y6A1RLhGNU9ut5sbu5iULwSLC/UP5a3spZ2n6kxJVQ9TGGOtHjDR0EH4l/hxdTi+VTUW5lA/nMXp9zvUX+qzr3Rsy8yO57i13Oh/ysAvb0y3qyi48Bq1kzoxZuVj953ztDhaahoVOsPtI9A4a1yAPHO5oWtw6uxDJhaPK6ZvDB9q2fsDDoi8Yx+r84Pr85m0XGdVXm7qPD4E3bB/Qp9
+  </data>
+ </layer>
+ <objectgroup height="30" name="Object_Layer" width="50">
+  <properties>
+   <property name="Objectgroup property" value="Objectgroup value"/>
+  </properties>
+  <object height="131" name="Touching H" type="mytype1" width="154" x="186" y="187"/>
+  <object height="68" name="Touching P" type="mytype2" width="82" x="599" y="159">
+   <properties>
+    <property name="object property" value="object value"/>
+   </properties>
+  </object>
+  <object name="Touching L" x="579" y="352"/>
+  <object name="Touching !" x="814" y="207"/>
+  <object name="Upper Left" x="0" y="0"/>
+  <object name="Upper Right" x="1600" y="0"/>
+  <object name="Lower Right" x="1600" y="960"/>
+  <object name="Lower Left" x="0" y="960"/>
+ </objectgroup>
+</map>
\ No newline at end of file
diff --git a/extensions/gdx-tiled-preprocessor/data/output/tilemap zlib.tmx b/extensions/gdx-tiled-preprocessor/data/output/tilemap zlib.tmx
new file mode 100644
index 0000000..e46535c
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/data/output/tilemap zlib.tmx	
@@ -0,0 +1,57 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?><map height="30" orientation="orthogonal" tileheight="32" tilewidth="32" version="1.0" width="50">
+ <properties>
+  <property name="blended tiles" value="1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,5,6,7,8,9,10,11,12,13,14,15,16"/>
+ </properties>
+ <tileset firstgid="1" name="tileset" tileheight="32" tilewidth="32">
+  <image source="tileset.png"/>
+ </tileset>
+ <tileset firstgid="5" name="tileset2" tileheight="32" tilewidth="32">
+  <image source="tileset2.png"/>
+ </tileset>
+ <tileset firstgid="9" name="tileset3" tileheight="32" tilewidth="32">
+  <image source="tileset3.png"/>
+ </tileset>
+ <tileset firstgid="13" name="tileset4" tileheight="32" tilewidth="32">
+  <image source="tileset4.png"/>
+ </tileset>
+ <layer height="30" name="First Layer" width="50">
+  <properties>
+   <property name="Layer Property" value="Layer Value"/>
+  </properties>
+  <data compression="zlib" encoding="base64">
+   eJztk1EOwCAIQ9X7H3r7JoKSDFZIP0iNIUh5ssYY841VXOU5IyK8dPCw4yF9Sc9LqTE3eTc1o3ic3rRytZlYd3/w+MIHefh5aLtw+vdd9+OGUYX96MYj2oOXh7UzHr8ZPKIji0dVL1HzyVaEHsiDPFAVoQfyIA9UReiBPMgDVRF6II9+PB6c+Ahs
+  </data>
+ </layer>
+ <layer height="30" name="Second Layer" width="50">
+  <data compression="zlib" encoding="base64">
+   eJzVV0EOBCEI4+b+/8V73bAqBYpik0lmxgpWFFFEZMh5DLJftr2Ib4b/Wxo0hvzr8mjUvI/xveub5e36W7F7UQdir4OOyL7pEo/sfp/p0A/aN8Krylcn41GZ82+sK8Y5ciIeHrBi5NWBzGVkXNl81RH6jF9xXsPNmrACSJxeQtf4ePc3UiOz7gioHa8/Pf6dDlm0ofDcKcbi3eLu/lvfCGbjZp01u/Vjcbzw5ntUM/K/cr5+2zJj7qJj1p7VEbmvMTiax8iJHlto/vT6r85jKy6rZkNrZvQMiPrP2NjZmnEsHyz/1XUOOxa6b4dajeH/to4vnrEFuA==
+  </data>
+ </layer>
+ <layer height="30" name="Third Layer" width="50">
+  <data compression="zlib" encoding="base64">
+   eJzdlsluwzAMRHWv//97cygMGAqXN0O5hxIIgnAZLhpRWetXrqULjcn8rsdn/73bulhaU4ZJ4mj+vZ8Ig/RW2SqfqF5Fl9mU86mkO3OlRuJH4p057Lqfx0flE7FfwXekI3gZPu2Dnn2Vp4uZzoj2QXLtvkqN1QxIvMIrtyb3jtF7Q/pQ76+jd94NpY/pPuywTuzfG2fSh8rpbr4T/mXzmL4b1FfZB04+pQ+6b8kZqf8v3pbujAn3HH6ckIijma7CyDD/Shw+knuZ9bbW97wiHeFBhpH5VXXRHI5EO63b++rO7eokOVXsKW8qf9V+CpvEKufg9LJj0BiSb/dTcri93DZ1V1OfaIfQeCf3ST4rb7yKTexPH5Kzq7Xasyqu4tPxWHmjprVO7jwVdxdHOC7/Jm9CFjO5sxMs9118E8uNP9HDm3j/ST48vhBs
+  </data>
+ </layer>
+ <layer height="30" name="Fourth Layer" width="50">
+  <data compression="zlib" encoding="base64">
+   eJzlVlsKgDAM8wZ6/9OKoDBKtA/nkmFguI9OkrVNtyzvsIHFwtZ8e/BgafryTlla7D5z7imm/Y6A1RLhGNU9ut5sbu5iULwSLC/UP5a3spZ2n6kxJVQ9TGGOtHjDR0EH4l/hxdTi+VTUW5lA/nMXp9zvUX+qzr3Rsy8yO57i13Oh/ysAvb0y3qyi48Bq1kzoxZuVj953ztDhaahoVOsPtI9A4a1yAPHO5oWtw6uxDJhaPK6ZvDB9q2fsDDoi8Yx+r84Pr85m0XGdVXm7qPD4E3bB/Qp9
+  </data>
+ </layer>
+ <objectgroup height="30" name="Object_Layer" width="50">
+  <properties>
+   <property name="Objectgroup property" value="Objectgroup value"/>
+  </properties>
+  <object height="131" name="Touching H" type="mytype1" width="154" x="186" y="187"/>
+  <object height="68" name="Touching P" type="mytype2" width="82" x="599" y="159">
+   <properties>
+    <property name="object property" value="object value"/>
+   </properties>
+  </object>
+  <object name="Touching L" x="579" y="352"/>
+  <object name="Touching !" x="814" y="207"/>
+  <object name="Upper Left" x="0" y="0"/>
+  <object name="Upper Right" x="1600" y="0"/>
+  <object name="Lower Right" x="1600" y="960"/>
+  <object name="Lower Left" x="0" y="960"/>
+ </objectgroup>
+</map>
\ No newline at end of file
diff --git a/extensions/gdx-tiled-preprocessor/data/output/tileset packfile b/extensions/gdx-tiled-preprocessor/data/output/tileset packfile
new file mode 100644
index 0000000..de8eeae
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/data/output/tileset packfile	
@@ -0,0 +1,33 @@
+
+tileset1.png
+format: RGBA8888
+filter: Nearest,Nearest
+repeat: none
+tileset
+  rotate: false
+  xy: 0, 0
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 3
+tileset
+  rotate: false
+  xy: 0, 34
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 2
+tileset
+  rotate: false
+  xy: 0, 68
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 1
+tileset
+  rotate: false
+  xy: 0, 102
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 0
diff --git a/extensions/gdx-tiled-preprocessor/data/output/tileset1.png b/extensions/gdx-tiled-preprocessor/data/output/tileset1.png
new file mode 100644
index 0000000..e087a62
Binary files /dev/null and b/extensions/gdx-tiled-preprocessor/data/output/tileset1.png differ
diff --git a/extensions/gdx-tiled-preprocessor/data/output/tileset2 packfile b/extensions/gdx-tiled-preprocessor/data/output/tileset2 packfile
new file mode 100644
index 0000000..708fbdc
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/data/output/tileset2 packfile	
@@ -0,0 +1,33 @@
+
+tileset21.png
+format: RGBA8888
+filter: Nearest,Nearest
+repeat: none
+tileset2
+  rotate: false
+  xy: 0, 0
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 3
+tileset2
+  rotate: false
+  xy: 0, 34
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 2
+tileset2
+  rotate: false
+  xy: 0, 68
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 1
+tileset2
+  rotate: false
+  xy: 0, 102
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 0
diff --git a/extensions/gdx-tiled-preprocessor/data/output/tileset21.png b/extensions/gdx-tiled-preprocessor/data/output/tileset21.png
new file mode 100644
index 0000000..3b2481b
Binary files /dev/null and b/extensions/gdx-tiled-preprocessor/data/output/tileset21.png differ
diff --git a/extensions/gdx-tiled-preprocessor/data/output/tileset3 packfile b/extensions/gdx-tiled-preprocessor/data/output/tileset3 packfile
new file mode 100644
index 0000000..483f7fd
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/data/output/tileset3 packfile	
@@ -0,0 +1,33 @@
+
+tileset31.png
+format: RGBA8888
+filter: Nearest,Nearest
+repeat: none
+tileset3
+  rotate: false
+  xy: 0, 0
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 3
+tileset3
+  rotate: false
+  xy: 0, 34
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 2
+tileset3
+  rotate: false
+  xy: 0, 68
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 1
+tileset3
+  rotate: false
+  xy: 0, 102
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 0
diff --git a/extensions/gdx-tiled-preprocessor/data/output/tileset31.png b/extensions/gdx-tiled-preprocessor/data/output/tileset31.png
new file mode 100644
index 0000000..1854f08
Binary files /dev/null and b/extensions/gdx-tiled-preprocessor/data/output/tileset31.png differ
diff --git a/extensions/gdx-tiled-preprocessor/data/output/tileset4 packfile b/extensions/gdx-tiled-preprocessor/data/output/tileset4 packfile
new file mode 100644
index 0000000..7dc7f0c
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/data/output/tileset4 packfile	
@@ -0,0 +1,33 @@
+
+tileset41.png
+format: RGBA8888
+filter: Nearest,Nearest
+repeat: none
+tileset4
+  rotate: false
+  xy: 0, 0
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 3
+tileset4
+  rotate: false
+  xy: 0, 34
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 2
+tileset4
+  rotate: false
+  xy: 0, 68
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 1
+tileset4
+  rotate: false
+  xy: 0, 102
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 0
diff --git a/extensions/gdx-tiled-preprocessor/data/output/tileset41.png b/extensions/gdx-tiled-preprocessor/data/output/tileset41.png
new file mode 100644
index 0000000..8d8b63e
Binary files /dev/null and b/extensions/gdx-tiled-preprocessor/data/output/tileset41.png differ
diff --git a/extensions/gdx-tiled-preprocessor/data/output/tmw-desert-spacing packfile b/extensions/gdx-tiled-preprocessor/data/output/tmw-desert-spacing packfile
new file mode 100644
index 0000000..565c2c9
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/data/output/tmw-desert-spacing packfile	
@@ -0,0 +1,341 @@
+
+tmw-desert-spacing1.png
+format: RGBA8888
+filter: Nearest,Nearest
+repeat: none
+tmw-desert-spacing
+  rotate: false
+  xy: 2, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 47
+tmw-desert-spacing
+  rotate: false
+  xy: 2, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 46
+tmw-desert-spacing
+  rotate: false
+  xy: 2, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 45
+tmw-desert-spacing
+  rotate: false
+  xy: 36, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 44
+tmw-desert-spacing
+  rotate: false
+  xy: 36, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 43
+tmw-desert-spacing
+  rotate: false
+  xy: 36, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 42
+tmw-desert-spacing
+  rotate: false
+  xy: 70, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 41
+tmw-desert-spacing
+  rotate: false
+  xy: 70, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 40
+tmw-desert-spacing
+  rotate: false
+  xy: 70, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 39
+tmw-desert-spacing
+  rotate: false
+  xy: 104, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 38
+tmw-desert-spacing
+  rotate: false
+  xy: 104, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 37
+tmw-desert-spacing
+  rotate: false
+  xy: 104, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 36
+tmw-desert-spacing
+  rotate: false
+  xy: 138, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 35
+tmw-desert-spacing
+  rotate: false
+  xy: 138, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 34
+tmw-desert-spacing
+  rotate: false
+  xy: 138, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 33
+tmw-desert-spacing
+  rotate: false
+  xy: 172, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 32
+tmw-desert-spacing
+  rotate: false
+  xy: 172, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 31
+tmw-desert-spacing
+  rotate: false
+  xy: 172, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 30
+tmw-desert-spacing
+  rotate: false
+  xy: 206, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 29
+tmw-desert-spacing
+  rotate: false
+  xy: 206, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 28
+tmw-desert-spacing
+  rotate: false
+  xy: 206, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 27
+tmw-desert-spacing
+  rotate: false
+  xy: 240, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 26
+tmw-desert-spacing
+  rotate: false
+  xy: 240, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 25
+tmw-desert-spacing
+  rotate: false
+  xy: 240, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 24
+tmw-desert-spacing
+  rotate: false
+  xy: 274, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 23
+tmw-desert-spacing
+  rotate: false
+  xy: 274, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 22
+tmw-desert-spacing
+  rotate: false
+  xy: 274, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 21
+tmw-desert-spacing
+  rotate: false
+  xy: 308, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 20
+tmw-desert-spacing
+  rotate: false
+  xy: 308, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 19
+tmw-desert-spacing
+  rotate: false
+  xy: 308, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 18
+tmw-desert-spacing
+  rotate: false
+  xy: 342, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 17
+tmw-desert-spacing
+  rotate: false
+  xy: 342, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 16
+tmw-desert-spacing
+  rotate: false
+  xy: 342, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 15
+tmw-desert-spacing
+  rotate: false
+  xy: 376, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 14
+tmw-desert-spacing
+  rotate: false
+  xy: 376, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 13
+tmw-desert-spacing
+  rotate: false
+  xy: 376, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 12
+tmw-desert-spacing
+  rotate: false
+  xy: 410, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 11
+tmw-desert-spacing
+  rotate: false
+  xy: 410, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 10
+tmw-desert-spacing
+  rotate: false
+  xy: 410, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 9
+tmw-desert-spacing
+  rotate: false
+  xy: 444, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 8
+tmw-desert-spacing
+  rotate: false
+  xy: 444, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 7
+tmw-desert-spacing
+  rotate: false
+  xy: 444, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 6
+tmw-desert-spacing
+  rotate: false
+  xy: 478, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 5
+tmw-desert-spacing
+  rotate: false
+  xy: 478, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 4
+tmw-desert-spacing
+  rotate: false
+  xy: 478, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 3
+tmw-desert-spacing
+  rotate: false
+  xy: 512, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 2
+tmw-desert-spacing
+  rotate: false
+  xy: 512, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 1
+tmw-desert-spacing
+  rotate: false
+  xy: 512, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 0
diff --git a/extensions/gdx-tiled-preprocessor/data/output/tmw-desert-spacing1.png b/extensions/gdx-tiled-preprocessor/data/output/tmw-desert-spacing1.png
new file mode 100644
index 0000000..25c78a1
Binary files /dev/null and b/extensions/gdx-tiled-preprocessor/data/output/tmw-desert-spacing1.png differ
diff --git a/extensions/gdx-tiled-preprocessor/data/perspective walls test.png b/extensions/gdx-tiled-preprocessor/data/perspective walls test.png
new file mode 100644
index 0000000..0ac0cb7
Binary files /dev/null and b/extensions/gdx-tiled-preprocessor/data/perspective walls test.png differ
diff --git a/extensions/gdx-tiled-preprocessor/data/perspective walls.png b/extensions/gdx-tiled-preprocessor/data/perspective walls.png
new file mode 100644
index 0000000..8b70713
Binary files /dev/null and b/extensions/gdx-tiled-preprocessor/data/perspective walls.png differ
diff --git a/extensions/gdx-tiled-preprocessor/data/perspective walls.tmx b/extensions/gdx-tiled-preprocessor/data/perspective walls.tmx
new file mode 100644
index 0000000..e810d91
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/data/perspective walls.tmx	
@@ -0,0 +1,36 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<map version="1.0" orientation="orthogonal" width="32" height="32" tilewidth="32" tileheight="32">
+ <tileset firstgid="1" name="perspective walls" tilewidth="64" tileheight="64">
+ <image source="perspective walls.png"/>
+ <tile id="13">
+  <properties>
+   <property name="door" value="true"/>
+  </properties>
+ </tile>
+ <tile id="14">
+  <properties>
+   <property name="door" value="true"/>
+  </properties>
+ </tile>
+ <tile id="15">
+  <properties>
+   <property name="pickup" value="true"/>
+  </properties>
+ </tile>
+</tileset>
+ <layer name="Walls" width="32" height="32">
+  <data encoding="base64" compression="zlib">
+   eJztlOkKgCAQhLfb7vd/24SUBqMMNevHfDB4LczusihCCCHkTzRay4XaDP7rxf1882ZpzBqTp/Wo4c7ulRy96LUKRx3EFYF5+GpESpA9V845pT/Oxijn+luIw36k8vf1Rpk1xPepx9vczV+O3GL6n4JJ9vkSOf8/Qwb/r+vHP8ZVzFwTQshf2AA5owLB
+  </data>
+ </layer>
+ <layer name="Walls level 2" width="32" height="32">
+  <data encoding="base64" compression="zlib">
+   eJztzgEJAAAIA7CD/Tsb4yJbgiUA8MO0AwAAhy0rhAAE
+  </data>
+ </layer>
+ <layer name="Walls level 3" width="32" height="32">
+  <data encoding="base64" compression="zlib">
+   eJztzjENAAAIA7Al+PeMgz0cPK2CJgBwN98BAACqBS0QAAQ=
+  </data>
+ </layer>
+</map>
diff --git a/extensions/gdx-tiled-preprocessor/data/tilemap csv.tmx b/extensions/gdx-tiled-preprocessor/data/tilemap csv.tmx
new file mode 100644
index 0000000..c925a95
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/data/tilemap csv.tmx	
@@ -0,0 +1,175 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<map version="1.0" orientation="orthogonal" width="50" height="30" tilewidth="32" tileheight="32">
+ <properties>
+  <property name="blended tiles" value="7,8,12,11,16,15"/>
+ </properties>
+ <tileset firstgid="1" name="tileset" tilewidth="32" tileheight="32">
+  <image source="tileset.png" width="64" height="64"/>
+ </tileset>
+ <tileset firstgid="5" name="tileset2" tilewidth="32" tileheight="32">
+  <image source="tileset2.png" width="64" height="64"/>
+ </tileset>
+ <tileset firstgid="9" name="tileset3" tilewidth="32" tileheight="32">
+  <image source="tileset3.png" width="64" height="64"/>
+ </tileset>
+ <tileset firstgid="13" name="tileset4" tilewidth="32" tileheight="32">
+  <image source="tileset4.png" width="64" height="64"/>
+ </tileset>
+ <layer name="First Layer" width="50" height="30">
+  <properties>
+   <property name="Layer Property" value="Layer Value"/>
+  </properties>
+  <data encoding="csv">
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,1,2,1,1,1,2,1,2,2,2,2,1,2,1,1,1,1,2,2,2,1,1,2,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,1,1,2,1,1,1,2,1,2,1,1,1,1,2,1,1,1,1,2,1,1,2,1,2,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,1,2,1,1,1,2,1,2,1,1,1,1,2,1,1,1,1,2,1,1,2,1,2,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,1,1,2,1,1,1,2,1,2,1,1,1,1,2,1,1,1,1,2,1,1,2,1,2,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,1,2,2,2,2,2,1,2,2,2,1,1,2,1,1,1,1,2,2,2,1,1,2,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,1,1,2,1,1,1,2,1,2,1,1,1,1,2,1,1,1,1,2,1,1,1,1,2,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,1,2,1,1,1,2,1,2,1,1,1,1,2,1,1,1,1,2,1,1,1,1,2,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,1,1,2,1,1,1,2,1,2,1,1,1,1,2,1,1,1,1,2,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,1,2,1,1,1,2,1,2,2,2,2,1,2,2,2,2,1,2,1,1,1,1,2,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2
+</data>
+ </layer>
+ <layer name="Second Layer" width="50" height="30">
+  <data encoding="csv">
+0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,0,7,7,0,0,0,0,0,0,0,0,0,
+7,0,0,0,8,0,0,0,8,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,0,0,0,0,0,
+7,0,0,0,8,0,0,0,8,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,0,0,0,0,
+0,0,0,0,8,0,0,0,8,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,0,
+7,0,0,0,8,0,0,0,8,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+7,0,0,0,8,8,8,8,8,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+7,0,0,0,8,0,0,0,8,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,8,0,0,0,8,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+7,0,0,0,8,0,0,0,8,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,8,0,0,0,8,0,0,0,0,0,0,7,7,7,7,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,
+7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,7,0,0,0,0,0,
+7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,
+7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,
+7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,7,7,
+7,0,7,7,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,7,0,
+7,7,7,7,0,0,0,0,7,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,7,7,0,0,0,0,0,0,7,0,0,7,0,0,0,0,0,0,0,7,0,0,
+0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,7,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,7,0,0,
+0,0,7,7,0,0,7,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,7,0,0,0,0,0,7,0,0,0,7,0,0,0,0,0,7,0,0,0,
+0,0,7,0,0,7,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,7,7,0,0,0,7,0,0,0,0,0,7,0,0,0,0,7,0,0,0,
+0,0,7,0,0,7,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,7,0,0,0,7,0,0,0,0,0,7,0,0,0,0,7,0,0,0,
+0,7,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,7,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,7,0,0,7,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,7,0,7,0,0,0,0,0,0,7,0,0,7,0,0,0,0,
+0,0,0,7,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,7,7,0,7,0,0,0,0,
+0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,7,0,7,0,0,0,0,
+0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,
+0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
+</data>
+ </layer>
+ <layer name="Third Layer" width="50" height="30">
+  <data encoding="csv">
+0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,12,12,12,0,12,12,12,12,12,12,0,0,0,0,0,12,12,12,0,
+0,0,12,0,0,0,0,0,0,0,12,12,0,0,0,0,12,0,0,0,0,0,0,0,12,0,0,0,12,12,12,0,0,0,12,12,0,12,12,0,0,12,0,0,12,12,0,0,0,0,
+0,12,12,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,12,0,0,0,0,0,0,12,0,0,0,12,12,12,12,12,12,0,0,0,0,0,
+0,0,0,0,0,0,0,12,12,0,12,12,12,12,12,0,0,0,0,12,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,12,0,0,0,0,0,0,0,0,12,0,0,0,0,0,
+0,12,0,0,0,12,12,0,0,0,12,11,11,11,12,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,12,0,0,0,0,12,0,12,0,12,12,0,12,0,12,0,0,0,0,0,
+12,0,0,0,12,0,0,0,0,12,12,11,11,11,12,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,12,0,0,0,0,12,12,0,0,0,0,0,0,12,0,12,0,0,0,0,
+0,0,0,12,0,0,0,0,12,0,12,11,11,11,12,0,0,0,0,0,12,0,12,0,0,0,0,0,0,0,0,12,0,12,12,0,12,0,0,0,0,0,0,0,12,12,0,0,0,0,
+12,12,12,0,0,0,0,0,0,0,12,11,11,11,12,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,12,12,0,0,0,12,0,0,0,0,0,0,0,0,0,12,0,0,0,
+12,0,0,0,0,0,0,12,0,0,12,11,11,11,12,0,0,0,0,12,0,0,0,0,0,12,0,0,0,0,0,12,0,0,0,0,0,12,0,0,0,0,0,12,12,12,12,0,0,0,
+12,0,0,0,0,0,0,12,0,0,12,11,11,11,12,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,12,0,0,0,0,12,12,12,12,12,0,0,0,
+0,0,0,0,0,0,0,0,0,0,12,11,11,11,12,0,0,0,12,0,0,0,0,0,0,0,12,0,0,0,0,12,12,12,0,0,0,0,12,0,0,0,0,0,0,12,12,0,0,0,
+0,0,0,0,0,0,12,0,0,0,12,12,12,12,12,0,0,12,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,12,0,12,0,0,0,
+0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,12,12,0,0,0,12,0,0,0,0,12,0,0,0,12,0,0,
+0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,0,0,12,0,0,12,12,0,0,0,0,12,0,0,
+12,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,0,12,12,12,12,0,12,0,0,0,0,0,0,12,0,0,
+0,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,12,12,12,12,0,0,12,0,0,
+0,0,12,0,0,0,12,12,0,12,0,12,12,0,12,0,12,12,12,0,0,12,12,0,0,0,0,0,12,12,0,12,0,0,0,0,0,0,12,0,12,0,0,0,12,12,12,12,0,0,
+0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,12,12,12,12,12,12,0,0,0,12,0,0,0,0,12,0,0,0,0,0,0,0,12,12,0,0,0,
+0,0,12,12,12,12,12,12,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,12,0,0,0,0,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,12,0,0,0,0,
+0,0,0,12,0,0,0,0,12,12,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,12,0,0,0,0,0,0,0,12,12,0,12,0,0,0,
+0,0,0,0,12,0,0,0,0,0,12,12,0,0,0,0,0,12,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,12,0,12,0,0,0,0,0,12,0,0,0,0,12,0,0,
+0,0,0,0,0,12,0,0,0,0,0,0,12,12,0,0,12,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,12,12,0,12,0,12,0,12,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,12,0,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,12,12,0,0,0,0,12,12,0,0,0,0,0,0,0,0,12,0,
+0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,12,0,12,12,0,0,0,0,0,0,0,12,0,0,0,0,12,12,0,12,0,12,0,0,0,12,0,0,0,0,0,0,0,12,0,
+0,0,0,0,0,0,0,12,0,0,0,0,0,0,12,0,0,0,0,0,12,0,12,0,0,0,0,12,0,0,0,12,12,12,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,12,
+0,0,0,0,0,0,0,12,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,12,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,12,12,
+0,0,0,0,0,0,0,12,12,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,12,0,0,
+0,0,0,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,
+0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
+</data>
+ </layer>
+ <layer name="Fourth Layer" width="50" height="30">
+  <data encoding="csv">
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,16,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,16,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,16,16,0,16,16,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,16,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,16,0,16,16,16,0,0,0,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,16,16,0,16,0,0,0,0,0,16,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,16,16,0,0,16,16,16,16,16,16,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,16,0,0,16,16,16,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,16,16,16,16,16,0,0,0,0,0,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,16,16,16,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,16,16,0,16,0,0,0,0,16,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,16,0,0,0,16,0,0,0,0,0,16,16,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,16,0,0,16,16,16,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,16,16,16,16,0,0,16,16,16,16,16,0,16,16,16,16,0,0,15,15,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,16,0,16,16,0,16,16,16,16,16,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,15,15,0,0,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,15,0,0,15,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
+</data>
+ </layer>
+ <objectgroup name="Object_Layer" width="50" height="30">
+  <properties>
+   <property name="Objectgroup property" value="Objectgroup value"/>
+  </properties>
+  <object name="Touching H" type="mytype1" x="186" y="187" width="154" height="131"/>
+  <object name="Touching P" type="mytype2" x="599" y="159" width="82" height="68">
+   <properties>
+    <property name="object property" value="object value"/>
+   </properties>
+  </object>
+  <object name="Touching L" x="579" y="352"/>
+  <object name="Touching !" x="814" y="207"/>
+  <object name="Upper Left" x="0" y="0"/>
+  <object name="Upper Right" x="1600" y="0"/>
+  <object name="Lower Right" x="1600" y="960"/>
+  <object name="Lower Left" x="0" y="960"/>
+  <object name="tile object" type="tile object type" gid="6" x="533" y="272"/>
+ </objectgroup>
+</map>
diff --git a/extensions/gdx-tiled-preprocessor/data/tilemap gzip.tmx b/extensions/gdx-tiled-preprocessor/data/tilemap gzip.tmx
new file mode 100644
index 0000000..4afc4a8
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/data/tilemap gzip.tmx	
@@ -0,0 +1,58 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<map version="1.0" orientation="orthogonal" width="50" height="30" tilewidth="32" tileheight="32">
+ <properties>
+  <property name="blended tiles" value="7,8,12,11,16,15"/>
+ </properties>
+ <tileset firstgid="1" name="tileset" tilewidth="32" tileheight="32">
+  <image source="tileset.png"/>
+ </tileset>
+ <tileset firstgid="5" name="tileset2" tilewidth="32" tileheight="32">
+  <image source="tileset2.png"/>
+ </tileset>
+ <tileset firstgid="9" name="tileset3" tilewidth="32" tileheight="32">
+  <image source="tileset3.png"/>
+ </tileset>
+ <tileset firstgid="13" name="tileset4" tilewidth="32" tileheight="32">
+  <image source="tileset4.png"/>
+ </tileset>
+ <layer name="First Layer" width="50" height="30">
+  <properties>
+   <property name="Layer Property" value="Layer Value"/>
+  </properties>
+  <data encoding="base64" compression="gzip">
+   H4sIAAAAAAAAC+2TUQ7AIAhD1fsfevsmgpIMVkg/SI0hSHmyxhjzjVVc5TkjIrx08LDjIX1Jz0upMTd5NzWjeJzetHK1mVh3f/D4wgd5+Hlou3D6913344ZRhf3oxiPag5eHtTMevxk8oiOLR1UvUfPJVoQeyIM8UBWhB/IgD1RF6IE8yANVEXogj348HkfuS4NwFwAA
+  </data>
+ </layer>
+ <layer name="Second Layer" width="50" height="30">
+  <data encoding="base64" compression="gzip">
+   H4sIAAAAAAAAC9VXQQ4EIQjj5v7/xXvdsCoFimKTSWbGClYUUURkyHkMsl+2vYhvhv9bGjSG/OvyaNS8j/G965vl7fpbsXtRB2Kvg47IvukSj+x+n+nQD9o3wqvKVyfjUZnzb6wrxjlyIh4esGLk1YHMZWRc2XzVEfqMX3Few82asAJInF5C1/h49zdSI7PuCKgdrz89/p0OWbSh8NwpxuLd4u7+W98IZuNmnTW79WNxvPDme1Qz8r9yvn7bMmPuomPWntURua8xOJrHyIkeW2j+9PqvzmMrLqtmQ2tm9AyI+s/Y2NmacSwfLP/VdQ47Frpvh1qN4f+2ji9OrdRgcBcAAA==
+  </data>
+ </layer>
+ <layer name="Third Layer" width="50" height="30">
+  <data encoding="base64" compression="gzip">
+   H4sIAAAAAAAAC92WyW7DMAxEda///3tzKAwYCpc3Q7mHEgiCcBkuGlFZ61eupQuNyfyux2f/vdu6WFpThkniaP69nwiD9FbZKp+oXkWX2ZTzqaQ7c6VG4kfinTnsup/HR+UTsV/Bd6QjeBk+7YOefZWni5nOiPZBcu2+So3VDEi8wiu3JveO0XtD+lDvr6N33g2lj+k+7LBO7N8bZ9KHyuluvhP+ZfOYvhvUV9kHTj6lD7pvyRmp/y/elu6MCfccfpyQiKOZrsLIMP9KHD6Se5n1ttb3vCId4UGGkflVddEcjkQ7rdv76s7t6iQ5Vewpbyp/1X4Km8Qq5+D0smPQGJJv91NyuL3cNnVXU59oh9B4J/dJPitvvIpN7E8fkrOrtdqzKq7i0/FYeaOmtU7uPBV3F0c4Lv8mb0IWM7mzEyz3XXwTy40/0cObeP9JPi2A8mVwFwAA
+  </data>
+ </layer>
+ <layer name="Fourth Layer" width="50" height="30">
+  <data encoding="base64" compression="gzip">
+   H4sIAAAAAAAAC+VWWwqAMAzzBnr/04qgMEq0D+eSYWC4j06StU23LO+wgcXC1nx78GBp+vJOWVrsPnPuKab9joDVEuEY1T263mxu7mJQvBIsL9Q/lreylnafqTElVD1MYY60eMNHQQfiX+HF1OL5VNRbmUD+cxen3O9Rf6rOvdGzLzI7nuLXc6H/KwC9vTLerKLjwGrWTOjFm5WP3nfO0OFpqGhU6w+0j0DhrXIA8c7mha3Dq7EMmFo8rpm8MH2rZ+wMOiLxjH6vzg+vzmbRcZ1Vebuo8PgTdmTO18JwFwAA
+  </data>
+ </layer>
+ <objectgroup name="Object_Layer" width="50" height="30">
+  <properties>
+   <property name="Objectgroup property" value="Objectgroup value"/>
+  </properties>
+  <object name="Touching H" type="mytype1" x="186" y="187" width="154" height="131"/>
+  <object name="Touching P" type="mytype2" x="599" y="159" width="82" height="68">
+   <properties>
+    <property name="object property" value="object value"/>
+   </properties>
+  </object>
+  <object name="Touching L" x="579" y="352"/>
+  <object name="Touching !" x="814" y="207"/>
+  <object name="Upper Left" x="0" y="0"/>
+  <object name="Upper Right" x="1600" y="0"/>
+  <object name="Lower Right" x="1600" y="960"/>
+  <object name="Lower Left" x="0" y="960"/>
+ </objectgroup>
+</map>
diff --git a/extensions/gdx-tiled-preprocessor/data/tilemap uncompressed.tmx b/extensions/gdx-tiled-preprocessor/data/tilemap uncompressed.tmx
new file mode 100644
index 0000000..767856b
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/data/tilemap uncompressed.tmx	
@@ -0,0 +1,58 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<map version="1.0" orientation="orthogonal" width="50" height="30" tilewidth="32" tileheight="32">
+ <properties>
+  <property name="blended tiles" value="7,8,12,11,16,15"/>
+ </properties>
+ <tileset firstgid="1" name="tileset" tilewidth="32" tileheight="32">
+  <image source="tileset.png"/>
+ </tileset>
+ <tileset firstgid="5" name="tileset2" tilewidth="32" tileheight="32">
+  <image source="tileset2.png"/>
+ </tileset>
+ <tileset firstgid="9" name="tileset3" tilewidth="32" tileheight="32">
+  <image source="tileset3.png"/>
+ </tileset>
+ <tileset firstgid="13" name="tileset4" tilewidth="32" tileheight="32">
+  <image source="tileset4.png"/>
+ </tileset>
+ <layer name="First Layer" width="50" height="30">
+  <properties>
+   <property name="Layer Property" value="Layer Value"/>
+  </properties>
+  <data encoding="base64">
+   
+  </data>
+ </layer>
+ <layer name="Second Layer" width="50" height="30">
+  <data encoding="base64">
+   
+  </data>
+ </layer>
+ <layer name="Third Layer" width="50" height="30">
+  <data encoding="base64">
+   
+  </data>
+ </layer>
+ <layer name="Fourth Layer" width="50" height="30">
+  <data encoding="base64">

+  </data>
+ </layer>
+ <objectgroup name="Object_Layer" width="50" height="30">
+  <properties>
+   <property name="Objectgroup property" value="Objectgroup value"/>
+  </properties>
+  <object name="Touching H" type="mytype1" x="186" y="187" width="154" height="131"/>
+  <object name="Touching P" type="mytype2" x="599" y="159" width="82" height="68">
+   <properties>
+    <property name="object property" value="object value"/>
+   </properties>
+  </object>
+  <object name="Touching L" x="579" y="352"/>
+  <object name="Touching !" x="814" y="207"/>
+  <object name="Upper Left" x="0" y="0"/>
+  <object name="Upper Right" x="1600" y="0"/>
+  <object name="Lower Right" x="1600" y="960"/>
+  <object name="Lower Left" x="0" y="960"/>
+ </objectgroup>
+</map>
diff --git a/extensions/gdx-tiled-preprocessor/data/tilemap xml.tmx b/extensions/gdx-tiled-preprocessor/data/tilemap xml.tmx
new file mode 100644
index 0000000..c19144a
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/data/tilemap xml.tmx	
@@ -0,0 +1,58 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<map version="1.0" orientation="orthogonal" width="50" height="30" tilewidth="32" tileheight="32">
+ <properties>
+  <property name="blended tiles" value="7,8,12,11,16,15"/>
+ </properties>
+ <tileset firstgid="1" name="tileset" tilewidth="32" tileheight="32">
+  <image source="tileset.png" width="64" height="64"/>
+ </tileset>
+ <tileset firstgid="5" name="tileset2" tilewidth="32" tileheight="32">
+  <image source="tileset2.png" width="64" height="64"/>
+ </tileset>
+ <tileset firstgid="9" name="tileset3" tilewidth="32" tileheight="32">
+  <image source="tileset3.png" width="64" height="64"/>
+ </tileset>
+ <tileset firstgid="13" name="tileset4" tilewidth="32" tileheight="32">
+  <image source="tileset4.png" width="64" height="64"/>
+ </tileset>
+ <layer name="First Layer" width="50" height="30">
+  <properties>
+   <property name="Layer Property" value="Layer Value"/>
+  </properties>
+  <data encoding="base64" compression="zlib">
+   eJztk1EOwCAIQ9X7H3r7JoKSDFZIP0iNIUh5ssYY841VXOU5IyK8dPCw4yF9Sc9LqTE3eTc1o3ic3rRytZlYd3/w+MIHefh5aLtw+vdd9+OGUYX96MYj2oOXh7UzHr8ZPKIji0dVL1HzyVaEHsiDPFAVoQfyIA9UReiBPMgDVRF6II9+PB6c+Ahs
+  </data>
+ </layer>
+ <layer name="Second Layer" width="50" height="30">
+  <data encoding="base64" compression="zlib">
+   eJzVV0EOBCEI4+b+/8V73bAqBYpik0lmxgpWFFFEZMh5DLJftr2Ib4b/Wxo0hvzr8mjUvI/xveub5e36W7F7UQdir4OOyL7pEo/sfp/p0A/aN8Krylcn41GZ82+sK8Y5ciIeHrBi5NWBzGVkXNl81RH6jF9xXsPNmrACSJxeQtf4ePc3UiOz7gioHa8/Pf6dDlm0ofDcKcbi3eLu/lvfCGbjZp01u/Vjcbzw5ntUM/K/cr5+2zJj7qJj1p7VEbmvMTiax8iJHlto/vT6r85jKy6rZkNrZvQMiPrP2NjZmnEsHyz/1XUOOxa6b4dajeH/to4vnrEFuA==
+  </data>
+ </layer>
+ <layer name="Third Layer" width="50" height="30">
+  <data encoding="base64" compression="zlib">
+   eJzdlsluwzAMRHWv//97cygMGAqXN0O5hxIIgnAZLhpRWetXrqULjcn8rsdn/73bulhaU4ZJ4mj+vZ8Ig/RW2SqfqF5Fl9mU86mkO3OlRuJH4p057Lqfx0flE7FfwXekI3gZPu2Dnn2Vp4uZzoj2QXLtvkqN1QxIvMIrtyb3jtF7Q/pQ76+jd94NpY/pPuywTuzfG2fSh8rpbr4T/mXzmL4b1FfZB04+pQ+6b8kZqf8v3pbujAn3HH6ckIijma7CyDD/Shw+knuZ9bbW97wiHeFBhpH5VXXRHI5EO63b++rO7eokOVXsKW8qf9V+CpvEKufg9LJj0BiSb/dTcri93DZ1V1OfaIfQeCf3ST4rb7yKTexPH5Kzq7Xasyqu4tPxWHmjprVO7jwVdxdHOC7/Jm9CFjO5sxMs9118E8uNP9HDm3j/ST48vhBs
+  </data>
+ </layer>
+ <layer name="Fourth Layer" width="50" height="30">
+  <data encoding="base64" compression="zlib">
+   eJzlVlsKgDAM8wZ6/9OKoDBKtA/nkmFguI9OkrVNtyzvsIHFwtZ8e/BgafryTlla7D5z7imm/Y6A1RLhGNU9ut5sbu5iULwSLC/UP5a3spZ2n6kxJVQ9TGGOtHjDR0EH4l/hxdTi+VTUW5lA/nMXp9zvUX+qzr3Rsy8yO57i13Oh/ysAvb0y3qyi48Bq1kzoxZuVj953ztDhaahoVOsPtI9A4a1yAPHO5oWtw6uxDJhaPK6ZvDB9q2fsDDoi8Yx+r84Pr85m0XGdVXm7qPD4E3bB/Qp9
+  </data>
+ </layer>
+ <objectgroup name="Object_Layer" width="50" height="30">
+  <properties>
+   <property name="Objectgroup property" value="Objectgroup value"/>
+  </properties>
+  <object name="Touching H" type="mytype1" x="186" y="187" width="154" height="131"/>
+  <object name="Touching P" type="mytype2" x="599" y="159" width="82" height="68">
+   <properties>
+    <property name="object property" value="object value"/>
+   </properties>
+  </object>
+  <object name="Touching L" x="579" y="352"/>
+  <object name="Touching !" x="814" y="207"/>
+  <object name="Upper Left" x="0" y="0"/>
+  <object name="Upper Right" x="1600" y="0"/>
+  <object name="Lower Right" x="1600" y="960"/>
+  <object name="Lower Left" x="0" y="960"/>
+ </objectgroup>
+</map>
diff --git a/extensions/gdx-tiled-preprocessor/data/tilemap zlib.tmx b/extensions/gdx-tiled-preprocessor/data/tilemap zlib.tmx
new file mode 100644
index 0000000..4f0355a
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/data/tilemap zlib.tmx	
@@ -0,0 +1,58 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<map version="1.0" orientation="orthogonal" width="50" height="30" tilewidth="32" tileheight="32">
+ <properties>
+  <property name="blended tiles" value="7,8,12,11,16,15"/>
+ </properties>
+ <tileset firstgid="1" name="tileset" tilewidth="32" tileheight="32">
+  <image source="tileset.png"/>
+ </tileset>
+ <tileset firstgid="5" name="tileset2" tilewidth="32" tileheight="32">
+  <image source="tileset2.png"/>
+ </tileset>
+ <tileset firstgid="9" name="tileset3" tilewidth="32" tileheight="32">
+  <image source="tileset3.png"/>
+ </tileset>
+ <tileset firstgid="13" name="tileset4" tilewidth="32" tileheight="32">
+  <image source="tileset4.png"/>
+ </tileset>
+ <layer name="First Layer" width="50" height="30">
+  <properties>
+   <property name="Layer Property" value="Layer Value"/>
+  </properties>
+  <data encoding="base64" compression="zlib">
+   eJztk1EOwCAIQ9X7H3r7JoKSDFZIP0iNIUh5ssYY841VXOU5IyK8dPCw4yF9Sc9LqTE3eTc1o3ic3rRytZlYd3/w+MIHefh5aLtw+vdd9+OGUYX96MYj2oOXh7UzHr8ZPKIji0dVL1HzyVaEHsiDPFAVoQfyIA9UReiBPMgDVRF6II9+PB6c+Ahs
+  </data>
+ </layer>
+ <layer name="Second Layer" width="50" height="30">
+  <data encoding="base64" compression="zlib">
+   eJzVV0EOBCEI4+b+/8V73bAqBYpik0lmxgpWFFFEZMh5DLJftr2Ib4b/Wxo0hvzr8mjUvI/xveub5e36W7F7UQdir4OOyL7pEo/sfp/p0A/aN8Krylcn41GZ82+sK8Y5ciIeHrBi5NWBzGVkXNl81RH6jF9xXsPNmrACSJxeQtf4ePc3UiOz7gioHa8/Pf6dDlm0ofDcKcbi3eLu/lvfCGbjZp01u/Vjcbzw5ntUM/K/cr5+2zJj7qJj1p7VEbmvMTiax8iJHlto/vT6r85jKy6rZkNrZvQMiPrP2NjZmnEsHyz/1XUOOxa6b4dajeH/to4vnrEFuA==
+  </data>
+ </layer>
+ <layer name="Third Layer" width="50" height="30">
+  <data encoding="base64" compression="zlib">
+   eJzdlsluwzAMRHWv//97cygMGAqXN0O5hxIIgnAZLhpRWetXrqULjcn8rsdn/73bulhaU4ZJ4mj+vZ8Ig/RW2SqfqF5Fl9mU86mkO3OlRuJH4p057Lqfx0flE7FfwXekI3gZPu2Dnn2Vp4uZzoj2QXLtvkqN1QxIvMIrtyb3jtF7Q/pQ76+jd94NpY/pPuywTuzfG2fSh8rpbr4T/mXzmL4b1FfZB04+pQ+6b8kZqf8v3pbujAn3HH6ckIijma7CyDD/Shw+knuZ9bbW97wiHeFBhpH5VXXRHI5EO63b++rO7eokOVXsKW8qf9V+CpvEKufg9LJj0BiSb/dTcri93DZ1V1OfaIfQeCf3ST4rb7yKTexPH5Kzq7Xasyqu4tPxWHmjprVO7jwVdxdHOC7/Jm9CFjO5sxMs9118E8uNP9HDm3j/ST48vhBs
+  </data>
+ </layer>
+ <layer name="Fourth Layer" width="50" height="30">
+  <data encoding="base64" compression="zlib">
+   eJzlVlsKgDAM8wZ6/9OKoDBKtA/nkmFguI9OkrVNtyzvsIHFwtZ8e/BgafryTlla7D5z7imm/Y6A1RLhGNU9ut5sbu5iULwSLC/UP5a3spZ2n6kxJVQ9TGGOtHjDR0EH4l/hxdTi+VTUW5lA/nMXp9zvUX+qzr3Rsy8yO57i13Oh/ysAvb0y3qyi48Bq1kzoxZuVj953ztDhaahoVOsPtI9A4a1yAPHO5oWtw6uxDJhaPK6ZvDB9q2fsDDoi8Yx+r84Pr85m0XGdVXm7qPD4E3bB/Qp9
+  </data>
+ </layer>
+ <objectgroup name="Object_Layer" width="50" height="30">
+  <properties>
+   <property name="Objectgroup property" value="Objectgroup value"/>
+  </properties>
+  <object name="Touching H" type="mytype1" x="186" y="187" width="154" height="131"/>
+  <object name="Touching P" type="mytype2" x="599" y="159" width="82" height="68">
+   <properties>
+    <property name="object property" value="object value"/>
+   </properties>
+  </object>
+  <object name="Touching L" x="579" y="352"/>
+  <object name="Touching !" x="814" y="207"/>
+  <object name="Upper Left" x="0" y="0"/>
+  <object name="Upper Right" x="1600" y="0"/>
+  <object name="Lower Right" x="1600" y="960"/>
+  <object name="Lower Left" x="0" y="960"/>
+ </objectgroup>
+</map>
diff --git a/extensions/gdx-tiled-preprocessor/data/tileset.png b/extensions/gdx-tiled-preprocessor/data/tileset.png
new file mode 100644
index 0000000..f86d5f2
Binary files /dev/null and b/extensions/gdx-tiled-preprocessor/data/tileset.png differ
diff --git a/extensions/gdx-tiled-preprocessor/data/tileset2.png b/extensions/gdx-tiled-preprocessor/data/tileset2.png
new file mode 100644
index 0000000..eb0c99c
Binary files /dev/null and b/extensions/gdx-tiled-preprocessor/data/tileset2.png differ
diff --git a/extensions/gdx-tiled-preprocessor/data/tileset3.png b/extensions/gdx-tiled-preprocessor/data/tileset3.png
new file mode 100644
index 0000000..9f666fd
Binary files /dev/null and b/extensions/gdx-tiled-preprocessor/data/tileset3.png differ
diff --git a/extensions/gdx-tiled-preprocessor/data/tileset4.png b/extensions/gdx-tiled-preprocessor/data/tileset4.png
new file mode 100644
index 0000000..9b4eb48
Binary files /dev/null and b/extensions/gdx-tiled-preprocessor/data/tileset4.png differ
diff --git a/extensions/gdx-tiled-preprocessor/data/tmw-desert-spacing.png b/extensions/gdx-tiled-preprocessor/data/tmw-desert-spacing.png
new file mode 100644
index 0000000..4e9995c
Binary files /dev/null and b/extensions/gdx-tiled-preprocessor/data/tmw-desert-spacing.png differ
diff --git a/extensions/gdx-tiled-preprocessor/src/com/badlogic/gdx/tiledmappacker/TileSetLayout.java b/extensions/gdx-tiled-preprocessor/src/com/badlogic/gdx/tiledmappacker/TileSetLayout.java
new file mode 100644
index 0000000..65478cb
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/src/com/badlogic/gdx/tiledmappacker/TileSetLayout.java
@@ -0,0 +1,82 @@
+/*******************************************************************************
+ * Copyright 2011 See AUTHORS file.
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/
+
+package com.badlogic.gdx.tiledmappacker;
+
+import java.awt.image.BufferedImage;
+import java.io.IOException;
+
+import javax.imageio.ImageIO;
+
+import com.badlogic.gdx.files.FileHandle;
+import com.badlogic.gdx.graphics.g2d.tiled.TileSet;
+import com.badlogic.gdx.math.Vector2;
+import com.badlogic.gdx.utils.IntMap;
+
+/** Contains extra information that can only be calculated after a Tiled Map's tile set images are loaded.
+ * @author David Fraska */
+public class TileSetLayout extends TileSet {
+
+	public final BufferedImage image;
+	private final IntMap<Vector2> imageTilePositions;
+	private int numRows;
+	private int numCols;
+	public final int numTiles;
+
+	/** Constructs a Tile Set layout. The tile set image contained in the baseDir should be the original tile set images before
+	 * being processed by {@link TiledMapPacker} (the ones actually read by Tiled).
+	 * @param tileSet the tile set to process
+	 * @param baseDir the directory in which the tile set image is stored */
+	protected TileSetLayout (TileSet tileSet, FileHandle baseDir) throws IOException {
+		super(tileSet);
+
+		image = ImageIO.read(baseDir.child(tileSet.imageName).read());
+
+		imageTilePositions = new IntMap<Vector2>();
+
+		// fill the tile regions
+		int x, y, tile = 0;
+		numRows = 0;
+		numCols = 0;
+		
+		int stopWidth = image.getWidth() - tileSet.tileWidth;
+		int stopHeight = image.getHeight() - tileSet.tileHeight;
+		
+		for (y = tileSet.margin; y <= stopHeight; y += tileSet.tileHeight + tileSet.spacing) {
+			for (x = tileSet.margin; x <= stopWidth; x += tileSet.tileWidth + tileSet.spacing) {
+				if (y == tileSet.margin) numCols++;
+				imageTilePositions.put(tile, new Vector2(x, y));
+				tile++;
+			}
+			numRows++;
+		}
+
+		numTiles = numRows * numCols;
+	}
+
+	public int getNumRows () {
+		return numRows;
+	}
+
+	public int getNumCols () {
+		return numCols;
+	}
+
+	/** Returns the location of the tile in {@link TileSetLayout#image} */
+	public Vector2 getLocation (int tile) {
+		return imageTilePositions.get(tile - firstgid);
+	}
+}
diff --git a/extensions/gdx-tiled-preprocessor/src/com/badlogic/gdx/tiledmappacker/TiledMapPacker.java b/extensions/gdx-tiled-preprocessor/src/com/badlogic/gdx/tiledmappacker/TiledMapPacker.java
new file mode 100644
index 0000000..904a86d
--- /dev/null
+++ b/extensions/gdx-tiled-preprocessor/src/com/badlogic/gdx/tiledmappacker/TiledMapPacker.java
@@ -0,0 +1,400 @@
+/*******************************************************************************
+ * Copyright 2011 See AUTHORS file.
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the
+ * License. You may obtain a copy of the License at
+ * 
+ * http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS"
+ * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language
+ * governing permissions and limitations under the License.
+ ******************************************************************************/
+
+package com.badlogic.gdx.tiledmappacker;
+
+import java.awt.Graphics;
+import java.awt.image.BufferedImage;
+import java.io.File;
+import java.io.FilenameFilter;
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.StringTokenizer;
+
+import javax.xml.parsers.DocumentBuilder;
+import javax.xml.parsers.DocumentBuilderFactory;
+import javax.xml.parsers.ParserConfigurationException;
+import javax.xml.transform.Transformer;
+import javax.xml.transform.TransformerConfigurationException;
+import javax.xml.transform.TransformerException;
+import javax.xml.transform.TransformerFactory;
+import javax.xml.transform.dom.DOMSource;
+import javax.xml.transform.stream.StreamResult;
+
+import org.w3c.dom.Attr;
+import org.w3c.dom.Document;
+import org.w3c.dom.NamedNodeMap;
+import org.w3c.dom.Node;
+import org.w3c.dom.NodeList;
+import org.xml.sax.SAXException;
+
+import com.badlogic.gdx.files.FileHandle;
+import com.badlogic.gdx.graphics.g2d.tiled.TileAtlas;
+import com.badlogic.gdx.graphics.g2d.tiled.TileMapRenderer;
+import com.badlogic.gdx.graphics.g2d.tiled.TileSet;
+import com.badlogic.gdx.graphics.g2d.tiled.TiledLayer;
+import com.badlogic.gdx.graphics.g2d.tiled.TiledLoader;
+import com.badlogic.gdx.graphics.g2d.tiled.TiledMap;
+import com.badlogic.gdx.math.Vector2;
+import com.badlogic.gdx.tools.imagepacker.TexturePacker;
+import com.badlogic.gdx.tools.imagepacker.TexturePacker.Settings;
+import com.badlogic.gdx.utils.GdxRuntimeException;
+import com.badlogic.gdx.utils.IntArray;
+
+/** Packs a Tiled Map, adding some properties to improve the speed of the {@link TileMapRenderer}. Also runs the texture packer on
+ * the tiles for use with a {@link TileAtlas}
+ * @author David Fraska */
+public class TiledMapPacker {
+
+	private TexturePacker packer;
+	private TiledMap map;
+
+	// private File outputDir;
+	private ArrayList<String> processedTileSets = new ArrayList<String>();
+
+	private ArrayList<Integer> blendedTiles = new ArrayList<Integer>();
+
+	static private class TmxFilter implements FilenameFilter {
+
+		public TmxFilter () {
+		}
+
+		@Override
+		public boolean accept (File dir, String name) {
+			if (name.endsWith(".tmx")) return true;
+
+			return false;
+		}
+
+	}
+
+	TiledMapPackerSettings settings;
+	
+	public TiledMapPacker() {
+		this(new TiledMapPackerSettings());
+	}
+	
+	public TiledMapPacker(TiledMapPackerSettings settings) {
+		this.settings = settings;
+	}
+	
+	/** Typically, you should run the {@link TiledMapPacker#main(String[])} method instead of this method. Packs a directory of
+	 * Tiled Maps, adding properties to improve the speed of the {@link TileMapRenderer}. Also runs the texture packer on the tile
+	 * sets for use with a {@link TileAtlas}
+	 * @param inputDir the input directory containing the tmx files (and tile sets, relative to the path listed in the tmx file)
+	 * @param outputDir The output directory for the tmx files, should be empty before running. WARNING: Use caution if you have a
+	 *           "../" in the path of your tile sets! The output for these tile sets will be relative to the output directory. For
+	 *           example, if your output directory is "C:\mydir\maps" and you have a tileset with the path "../tileset.png", the
+	 *           tileset will be output to "C:\mydir\" and the maps will be in "C:\mydir\maps".
+	 * @param settings the settings used in the TexturePacker */
+	public void processMap (File inputDir, File outputDir, Settings settings) throws IOException {
+		FileHandle inputDirHandle = new FileHandle(inputDir.getAbsolutePath());
+		File[] files = inputDir.listFiles(new TmxFilter());
+
+		for (File file : files) {
+			map = TiledLoader.createMap(new FileHandle(file.getAbsolutePath()));
+
+			IntArray usedIds = null;
+			if (this.settings.stripUnusedTiles) {
+				usedIds = new IntArray(map.layers.size() * map.height * map.width);
+				for (TiledLayer layer : map.layers) {
+					for (int y = 0; y < layer.tiles.length; ++y) {
+						for (int x = 0; x < layer.tiles[y].length; ++x) {
+							usedIds.add(layer.tiles[y][x] & ~0xE0000000);
+						}
+					}
+				}
+			}			
+			
+			for (TileSet set : map.tileSets) {
+				if (!processedTileSets.contains(set.imageName)) {
+					processedTileSets.add(set.imageName);
+					packTileSet(set, usedIds, inputDirHandle, outputDir, settings);
+				}
+			}
+
+			writeUpdatedTMX(outputDir, map.tmxFile);
+		}
+	}
+
+	private void packTileSet (TileSet set, IntArray usedIds, FileHandle inputDirHandle, File outputDir, Settings settings) throws IOException {
+		BufferedImage tile;
+		Vector2 tileLocation;
+		TileSetLayout packerTileSet;
+		Graphics g;
+
+		packer = new TexturePacker(settings);
+
+		TileSetLayout layout = new TileSetLayout(set, inputDirHandle);
+
+		for (int gid = layout.firstgid, i = 0; i < layout.numTiles; gid++, i++) {
+			if (usedIds != null && !usedIds.contains(gid)) {
+				System.out.println("Stripped Id: " + gid);
+				continue;
+			}
+				
+			
+			tileLocation = layout.getLocation(gid);
+			tile = new BufferedImage(layout.tileWidth, layout.tileHeight, BufferedImage.TYPE_4BYTE_ABGR);
+
+			g = tile.createGraphics();
+			g.drawImage(layout.image, 0, 0, layout.tileWidth, layout.tileHeight, (int)tileLocation.x, (int)tileLocation.y,
+				(int)tileLocation.x + layout.tileWidth, (int)tileLocation.y + layout.tileHeight, null);
+
+			if (isBlended(tile)) setBlended(gid);
+
+			packer.addImage(tile, removeExtension(removePath(set.imageName)) + "_" + i);
+		}
+
+		File outputFile = getRelativeFile(outputDir, removeExtension(set.imageName) + " packfile");
+		outputFile.getParentFile().mkdirs();
+		packer.process(outputFile.getParentFile(), outputFile, removeExtension(removePath(set.imageName)));
+	}
+
+	private static String removeExtension (String s) {
+		int extensionIndex = s.lastIndexOf(".");
+		if (extensionIndex == -1) return s;
+
+		return s.substring(0, extensionIndex);
+	}
+
+	private static String removePath (String s) {
+		String temp;
+
+		int index = s.lastIndexOf('\\');
+		if (index != -1)
+			temp = s.substring(index + 1);
+		else
+			temp = s;
+
+		index = temp.lastIndexOf('/');
+		if (index != -1)
+			return s.substring(index + 1);
+		else
+			return s;
+	}
+
+	private static File getRelativeFile (File path, String relativePath) {
+		if (relativePath.trim().length() == 0) return path;
+
+		File child = path;
+
+		StringTokenizer tokenizer = new StringTokenizer(relativePath, "\\/");
+		while (tokenizer.hasMoreElements()) {
+			String token = tokenizer.nextToken();
+			if (token.equals(".."))
+				child = child.getParentFile();
+			else {
+				child = new File(child, token);
+			}
+		}
+
+		return child;
+	}
+
+	private void setBlended (int tileNum) {
+		blendedTiles.add(tileNum);
+	}
+
+	private void writeUpdatedTMX (File outputDir, FileHandle tmxFileHandle) throws IOException {
+		Document doc;
+		DocumentBuilder docBuilder;
+		DocumentBuilderFactory docFactory = DocumentBuilderFactory.newInstance();
+
+		try {
+			docBuilder = docFactory.newDocumentBuilder();
+			doc = docBuilder.parse(tmxFileHandle.read());
+
+			Node map = doc.getFirstChild();
+			while (map.getNodeType() != Node.ELEMENT_NODE || map.getNodeName() != "map") {
+				if ((map = map.getNextSibling()) == null) {
+					throw new GdxRuntimeException("Couldn't find map node!");
+				}
+			}
+
+			setProperty(doc, map, "blended tiles", toCSV(blendedTiles));
+
+			TransformerFactory transformerFactory = TransformerFactory.newInstance();
+			Transformer transformer = transformerFactory.newTransformer();
+			DOMSource source = new DOMSource(doc);
+
+			outputDir.mkdirs();
+			StreamResult result = new StreamResult(new File(outputDir, tmxFileHandle.name()));
+			transformer.transform(source, result);
+
+		} catch (ParserConfigurationException e) {
+			throw new RuntimeException("ParserConfigurationException: " + e.getMessage());
+		} catch (SAXException e) {
+			throw new RuntimeException("SAXException: " + e.getMessage());
+		} catch (TransformerConfigurationException e) {
+			throw new RuntimeException("TransformerConfigurationException: " + e.getMessage());
+		} catch (TransformerException e) {
+			throw new RuntimeException("TransformerException: " + e.getMessage());
+		}
+	}
+
+	private static void setProperty (Document doc, Node parent, String name, String value) {
+		Node properties = getFirstChildNodeByName(parent, "properties");
+		Node property = getFirstChildByNameAttrValue(properties, "property", "name", name);
+
+		NamedNodeMap attributes = property.getAttributes();
+		Node valueNode = attributes.getNamedItem("value");
+		if (valueNode == null) {
+			valueNode = doc.createAttribute("value");
+			valueNode.setNodeValue(value);
+			attributes.setNamedItem(valueNode);
+		} else {
+			valueNode.setNodeValue(value);
+		}
+	}
+
+	private static String toCSV (ArrayList<Integer> values) {
+		String temp = "";
+		for (int i = 0; i < values.size() - 1; i++) {
+			temp += values.get(i) + ",";
+		}
+		if (values.size() > 0) temp += values.get(values.size() - 1);
+		return temp;
+	}
+
+	/** If the child node doesn't exist, it is created. */
+	private static Node getFirstChildNodeByName (Node parent, String child) {
+		NodeList childNodes = parent.getChildNodes();
+		for (int i = 0; i < childNodes.getLength(); i++) {
+			if (childNodes.item(i).getNodeName().equals(child)) {
+				return childNodes.item(i);
+			}
+		}
+
+		Node newNode = parent.getOwnerDocument().createElement(child);
+
+		if (childNodes.item(0) != null)
+			return parent.insertBefore(newNode, childNodes.item(0));
+		else
+			return parent.appendChild(newNode);
+	}
+
+	/** If the child node or attribute doesn't exist, it is created. Usage example: Node property =
+	 * getFirstChildByAttrValue(properties, "property", "name", "blended tiles"); */
+	private static Node getFirstChildByNameAttrValue (Node node, String childName, String attr, String value) {
+		NodeList childNodes = node.getChildNodes();
+		for (int i = 0; i < childNodes.getLength(); i++) {
+			if (childNodes.item(i).getNodeName().equals(childName)) {
+				NamedNodeMap attributes = childNodes.item(i).getAttributes();
+				Node attribute = attributes.getNamedItem(attr);
+				if (attribute.getNodeValue().equals(value)) return childNodes.item(i);
+			}
+		}
+
+		Node newNode = node.getOwnerDocument().createElement(childName);
+		NamedNodeMap attributes = newNode.getAttributes();
+
+		Attr nodeAttr = node.getOwnerDocument().createAttribute(attr);
+		nodeAttr.setNodeValue(value);
+		attributes.setNamedItem(nodeAttr);
+
+		if (childNodes.item(0) != null) {
+			return node.insertBefore(newNode, childNodes.item(0));
+		} else {
+			return node.appendChild(newNode);
+		}
+	}
+
+	private static boolean isBlended (BufferedImage tile) {
+		int[] rgbArray = new int[tile.getWidth() * tile.getHeight()];
+		tile.getRGB(0, 0, tile.getWidth(), tile.getHeight(), rgbArray, 0, tile.getWidth());
+		for (int i = 0; i < tile.getWidth() * tile.getHeight(); i++) {
+			if (((rgbArray[i] >> 24) & 0xff) != 255) {
+				return true;
+			}
+		}
+		return false;
+	}
+
+	private TileSetLayout getTileSetLayout (int tileNum, FileHandle inputDirHandle) throws IOException {
+		int firstgid = 0;
+		int lastgid;
+
+		for (TileSet set : map.tileSets) {
+			TileSetLayout layout = new TileSetLayout(set, inputDirHandle);
+			firstgid = set.firstgid;
+			lastgid = firstgid + layout.numTiles - 1;
+			if (tileNum >= firstgid && tileNum <= lastgid) {
+				return layout;
+			}
+		}
+
+		return null;
+	}
+	
+	/** Processes a directory of Tile Maps, compressing each tile set contained in any map once.
+	 * @param args args[0]: the input directory containing the tmx files (and tile sets, relative to the path listed in the tmx
+	 *           file). args[1]: The output directory for the tmx files, should be empty before running. WARNING: Use caution if
+	 *           you have a "../" in the path of your tile sets! The output for these tile sets will be relative to the output
+	 *           directory. For example, if your output directory is "C:\mydir\output" and you have a tileset with the path
+	 *           "../tileset.png", the tileset will be output to "C:\mydir\" and the maps will be in "C:\mydir\output".
+	 *           args[2]: --strip-unused (optional, include to let the TiledMapPacker remove tiles which are not used. */
+	public static void main (String[] args) {
+		File inputDir = null;
+		File outputDir = null;
+
+		Settings texturePackerSettings = new Settings();
+		
+		texturePackerSettings.padding = 2;
+		texturePackerSettings.duplicatePadding = true;
+
+		TiledMapPackerSettings packerSettings = new TiledMapPackerSettings();
+		
+		switch (args.length) {
+			case 3: {
+				inputDir = new File(args[0]);
+				outputDir = new File(args[1]);
+				if ("--strip-unused".equals(args[2])) {
+					packerSettings.stripUnusedTiles = true;
+				}
+				break;
+			}
+			case 2: {
+				inputDir = new File(args[0]);
+				outputDir = new File(args[1]);
+				break;
+			}
+			case 1: {
+				inputDir = new File(args[0]);
+				outputDir = new File(inputDir, "output/");
+				break;
+			}
+			default: {
+				System.out.println("Usage: INPUTDIR [OUTPUTDIR] [--strip-unused]");
+				System.exit(0);
+			}
+		}
+		
+		TiledMapPacker packer = new TiledMapPacker(packerSettings);
+
+		if (!inputDir.exists()) {
+			throw new RuntimeException("Input directory does not exist");
+		}
+
+		try {
+			packer.processMap(inputDir, outputDir, texturePackerSettings);
+		} catch (IOException e) {
+			throw new RuntimeException("Error processing map: " + e.getMessage());
+		}
+		
+	}
+	
+	public static class TiledMapPackerSettings {
+		public boolean stripUnusedTiles = false;
+	}
+}
diff --git a/gdx/src/com/badlogic/gdx.gwt.xml b/gdx/src/com/badlogic/gdx.gwt.xml
index 77bca57..24974a5 100644
--- a/gdx/src/com/badlogic/gdx.gwt.xml
+++ b/gdx/src/com/badlogic/gdx.gwt.xml
@@ -136,6 +136,7 @@
 		<include name="math/collision/Segment.java"/>
 		<include name="graphics/glutils/ShapeRenderer.java"/>
 		<include name="graphics/g3d/decals/SimpleOrthoGroupStrategy.java"/>
+		<include name="graphics/g2d/tiled/SimpleTileAtlas.java"/>
 		<include name="assets/loaders/SkinLoader.java"/>
 		<include name="utils/Sort.java"/>
 		<include name="utils/SortedIntList.java"/>
@@ -152,6 +153,14 @@
 		<include name="graphics/TextureDict.java"/>
 		<include name="graphics/TextureRef.java"/>
 		<include name="graphics/g2d/TextureRegion.java"/>
+		<include name="graphics/g2d/tiled/TileAtlas.java"/>
+		<include name="assets/loaders/TileAtlasLoader.java"/>
+		<include name="graphics/g2d/tiled/TileMapRenderer.java"/>
+		<include name="graphics/g2d/tiled/TileSet.java"/>
+		<include name="graphics/g2d/tiled/TiledLayer.java"/>
+		<include name="graphics/g2d/tiled/TiledMap.java"/>
+		<include name="graphics/g2d/tiled/TiledObject.java"/>
+		<include name="graphics/g2d/tiled/TiledObjectGroup.java"/>
 		<include name="utils/TimSort.java"/>
 		<include name="src/com/esotericsoftware/tablelayout/Toolkit.java"/>
 		<include name="math/Vector2.java"/>
diff --git a/gdx/src/com/badlogic/gdx/assets/AssetManager.java b/gdx/src/com/badlogic/gdx/assets/AssetManager.java
index d4d3a89..fac8546 100644
--- a/gdx/src/com/badlogic/gdx/assets/AssetManager.java
+++ b/gdx/src/com/badlogic/gdx/assets/AssetManager.java
@@ -32,6 +32,8 @@ import com.badlogic.gdx.assets.loaders.SkinLoader;
 import com.badlogic.gdx.assets.loaders.SoundLoader;
 import com.badlogic.gdx.assets.loaders.TextureAtlasLoader;
 import com.badlogic.gdx.assets.loaders.TextureLoader;
+import com.badlogic.gdx.assets.loaders.TileAtlasLoader;
+import com.badlogic.gdx.assets.loaders.TileMapRendererLoader;
 import com.badlogic.gdx.assets.loaders.resolvers.InternalFileHandleResolver;
 import com.badlogic.gdx.audio.Music;
 import com.badlogic.gdx.audio.Sound;
@@ -39,6 +41,8 @@ import com.badlogic.gdx.graphics.Pixmap;
 import com.badlogic.gdx.graphics.Texture;
 import com.badlogic.gdx.graphics.g2d.BitmapFont;
 import com.badlogic.gdx.graphics.g2d.TextureAtlas;
+import com.badlogic.gdx.graphics.g2d.tiled.TileAtlas;
+import com.badlogic.gdx.graphics.g2d.tiled.TileMapRenderer;
 import com.badlogic.gdx.scenes.scene2d.ui.Skin;
 import com.badlogic.gdx.utils.Array;
 import com.badlogic.gdx.utils.Disposable;
@@ -80,6 +84,8 @@ public class AssetManager implements Disposable {
 		setLoader(TextureAtlas.class, new TextureAtlasLoader(resolver));
 		setLoader(Texture.class, new TextureLoader(resolver));
 		setLoader(Skin.class, new SkinLoader(resolver));
+		setLoader(TileAtlas.class, new TileAtlasLoader(resolver));
+		setLoader(TileMapRenderer.class, new TileMapRendererLoader(resolver));
 		threadPool = Executors.newFixedThreadPool(1, new ThreadFactory() {
 			@Override
 			public Thread newThread (Runnable r) {
diff --git a/gdx/src/com/badlogic/gdx/assets/loaders/TileAtlasLoader.java b/gdx/src/com/badlogic/gdx/assets/loaders/TileAtlasLoader.java
new file mode 100644
index 0000000..ba2a10b
--- /dev/null
+++ b/gdx/src/com/badlogic/gdx/assets/loaders/TileAtlasLoader.java
@@ -0,0 +1,64 @@
+/*******************************************************************************
+ * Copyright 2011 See AUTHORS file.
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/
+
+package com.badlogic.gdx.assets.loaders;
+
+import com.badlogic.gdx.assets.AssetDescriptor;
+import com.badlogic.gdx.assets.AssetLoaderParameters;
+import com.badlogic.gdx.assets.AssetManager;
+import com.badlogic.gdx.graphics.g2d.tiled.TileAtlas;
+import com.badlogic.gdx.graphics.g2d.tiled.TiledMap;
+import com.badlogic.gdx.utils.Array;
+
+/** {@link AssetLoader} for {@link TileAtlas} instances.
+ * @author mzechner */
+public class TileAtlasLoader extends AsynchronousAssetLoader<TileAtlas, TileAtlasLoader.TileAtlasParameter> {
+
+	/** Mandatory {@link AssetLoaderParameters} for loading a {@link TileAtlas}
+	 * @author mzechner */
+	public static class TileAtlasParameter extends AssetLoaderParameters<TileAtlas> {
+		/** the filename of the {@link TiledMap} **/
+		public String tileMapFile;
+		/** the directory containing all the images **/
+		public String inputDirectory;
+	}
+
+	public TileAtlasLoader (FileHandleResolver resolver) {
+		super(resolver);
+	}
+
+	@Override
+	public void loadAsync (AssetManager manager, String fileName, TileAtlasParameter parameter) {
+		if (parameter == null) throw new IllegalArgumentException("Missing TileAtlasParameter: " + fileName);
+
+	}
+
+	@Override
+	public TileAtlas loadSync (AssetManager manager, String fileName, TileAtlasParameter parameter) {
+		if (parameter == null) throw new IllegalArgumentException("Missing TileAtlasParameter: " + fileName);
+
+		return null;
+	}
+
+	@Override
+	public Array<AssetDescriptor> getDependencies (String fileName, TileAtlasParameter parameter) {
+		if (parameter == null) throw new IllegalArgumentException("Missing TileAtlasParameter: " + fileName);
+
+		Array<AssetDescriptor> deps = new Array<AssetDescriptor>();
+		deps.add(new AssetDescriptor(parameter.tileMapFile, TiledMap.class));
+		return deps;
+	}
+}
diff --git a/gdx/src/com/badlogic/gdx/assets/loaders/TileMapRendererLoader.java b/gdx/src/com/badlogic/gdx/assets/loaders/TileMapRendererLoader.java
new file mode 100644
index 0000000..720ea1e
--- /dev/null
+++ b/gdx/src/com/badlogic/gdx/assets/loaders/TileMapRendererLoader.java
@@ -0,0 +1,79 @@
+/*******************************************************************************
+ * Copyright 2011 See AUTHORS file.
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/
+
+package com.badlogic.gdx.assets.loaders;
+
+import com.badlogic.gdx.assets.AssetDescriptor;
+import com.badlogic.gdx.assets.AssetLoaderParameters;
+import com.badlogic.gdx.assets.AssetManager;
+import com.badlogic.gdx.graphics.g2d.tiled.TileAtlas;
+import com.badlogic.gdx.graphics.g2d.tiled.TileMapRenderer;
+import com.badlogic.gdx.graphics.g2d.tiled.TiledLoader;
+import com.badlogic.gdx.graphics.g2d.tiled.TiledMap;
+import com.badlogic.gdx.utils.Array;
+
+/** {@link AssetLoader} for {@link TiledMap} instances.
+ * @author mzechner */
+public class TileMapRendererLoader extends SynchronousAssetLoader<TileMapRenderer, TileMapRendererLoader.TileMapParameter> {
+	/** Parameter for {@link TileMapRendererLoader}.
+	 * @author mzechner */
+	public static class TileMapParameter extends AssetLoaderParameters<TileMapRenderer> {
+		/** the directory the images (pack files) are stored in **/
+		public final String imageDirectory;
+		public final int tilesPerBlockX;
+		public final int tilesPerBlockY;
+		public final float unitsPerTileX;
+		public final float unitsPerTileY;
+
+		public TileMapParameter (String imageDirectory, int tilesPerBlockX, int tilesPerBlockY) {
+			this.imageDirectory = imageDirectory;
+			this.tilesPerBlockX = tilesPerBlockX;
+			this.tilesPerBlockY = tilesPerBlockY;
+			this.unitsPerTileX = 0.0f;
+			this.unitsPerTileY = 0.0f;
+		}
+
+		public TileMapParameter (String imageDirectory, int tilesPerBlockX, int tilesPerBlockY, float unitsPerTileX,
+			float unitsPerTileY) {
+			this.imageDirectory = imageDirectory;
+			this.tilesPerBlockX = tilesPerBlockX;
+			this.tilesPerBlockY = tilesPerBlockY;
+			this.unitsPerTileX = unitsPerTileX;
+			this.unitsPerTileY = unitsPerTileY;
+		}
+	}
+
+	public TileMapRendererLoader (FileHandleResolver resolver) {
+		super(resolver);
+	}
+
+	@Override
+	public Array<AssetDescriptor> getDependencies (String fileName, TileMapParameter parameter) {
+		if (parameter == null) throw new IllegalArgumentException("Missing TileMapRendererParameter: " + fileName);
+		return null;
+	}
+
+	@Override
+	public TileMapRenderer load (AssetManager assetManager, String fileName, TileMapParameter parameter) {
+		TiledMap map = TiledLoader.createMap(resolve(fileName));
+		TileAtlas atlas = new TileAtlas(map, resolve(parameter.imageDirectory));
+		if (parameter.unitsPerTileX == 0 || parameter.unitsPerTileY == 0)
+			return new TileMapRenderer(map, atlas, parameter.tilesPerBlockX, parameter.tilesPerBlockY);
+		else
+			return new TileMapRenderer(map, atlas, parameter.tilesPerBlockX, parameter.tilesPerBlockY, parameter.unitsPerTileX,
+				parameter.unitsPerTileY);
+	}
+}
diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/SimpleTileAtlas.java b/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/SimpleTileAtlas.java
new file mode 100644
index 0000000..cbf31e1
--- /dev/null
+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/SimpleTileAtlas.java
@@ -0,0 +1,78 @@
+/*******************************************************************************
+ * Copyright 2011 See AUTHORS file.
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/
+
+package com.badlogic.gdx.graphics.g2d.tiled;
+
+import com.badlogic.gdx.files.FileHandle;
+import com.badlogic.gdx.graphics.Pixmap;
+import com.badlogic.gdx.graphics.Texture;
+import com.badlogic.gdx.graphics.g2d.TextureRegion;
+import com.badlogic.gdx.math.MathUtils;
+
+/** Contains an atlas of tiles by tile id for use with {@link TileMapRenderer} It does not need to be loaded with packed files.
+ * Just plain textures.
+ * @author Tomas Lazaro */
+public class SimpleTileAtlas extends TileAtlas {
+
+	/** Creates a TileAtlas for use with {@link TileMapRenderer}.
+	 * @param map The tiled map
+	 * @param inputDir The directory containing all needed textures in the map */
+	public SimpleTileAtlas (TiledMap map, FileHandle inputDir) {
+		for (TileSet set : map.tileSets) {
+			Pixmap pixmap = new Pixmap(inputDir.child(set.imageName));
+
+			int originalWidth = pixmap.getWidth();
+			int originalHeight = pixmap.getHeight();
+
+			if (!MathUtils.isPowerOfTwo(originalWidth) || !MathUtils.isPowerOfTwo(originalHeight)) {
+				final int width = MathUtils.nextPowerOfTwo(originalWidth);
+				final int height = MathUtils.nextPowerOfTwo(originalHeight);
+
+				Pixmap potPixmap = new Pixmap(width, height, pixmap.getFormat());
+				potPixmap.drawPixmap(pixmap, 0, 0, 0, 0, width, height);
+				pixmap.dispose();
+				pixmap = potPixmap;
+			}
+			Texture texture = new Texture(pixmap);
+			pixmap.dispose();
+			textures.add(texture);
+
+			int idx = 0;
+			TextureRegion[][] regions = split(texture, originalWidth, originalHeight, map.tileWidth, map.tileHeight, set.spacing,
+				set.margin);
+			for (int y = 0; y < regions[0].length; y++) {
+				for (int x = 0; x < regions.length; x++) {
+					regionsMap.put(idx++ + set.firstgid, regions[x][y]);
+				}
+			}
+		}
+	}
+
+	private static TextureRegion[][] split (Texture texture, int totalWidth, int totalHeight, int width, int height, int spacing,
+		int margin) {
+		// TODO add padding support
+		int xSlices = (totalWidth - margin) / (width + spacing);
+		int ySlices = (totalHeight - margin) / (height + spacing);
+
+		TextureRegion[][] res = new TextureRegion[xSlices][ySlices];
+		for (int x = 0; x < xSlices; x++) {
+			for (int y = 0; y < ySlices; y++) {
+				res[x][y] = new TextureRegion(texture, margin + x * (width + spacing), margin + y * (height + spacing), width, height);
+			}
+		}
+		return res;
+	}
+}
diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TileAtlas.java b/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TileAtlas.java
new file mode 100644
index 0000000..df812eb
--- /dev/null
+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TileAtlas.java
@@ -0,0 +1,132 @@
+/*******************************************************************************
+ * Copyright 2011 See AUTHORS file.
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/
+
+package com.badlogic.gdx.graphics.g2d.tiled;
+
+import java.util.HashSet;
+import java.util.StringTokenizer;
+
+import com.badlogic.gdx.files.FileHandle;
+import com.badlogic.gdx.graphics.Texture;
+import com.badlogic.gdx.graphics.g2d.TextureAtlas;
+import com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion;
+import com.badlogic.gdx.graphics.g2d.TextureRegion;
+import com.badlogic.gdx.utils.Array;
+import com.badlogic.gdx.utils.Disposable;
+import com.badlogic.gdx.utils.IntMap;
+
+/** Contains an atlas of tiles by tile id for use with {@link TileMapRenderer}
+ * @author David Fraska */
+public class TileAtlas implements Disposable {
+
+	protected IntMap<TextureRegion> regionsMap = new IntMap<TextureRegion>();
+	protected final HashSet<Texture> textures = new HashSet<Texture>(1);
+
+	/** Protected constructor to allow different implementations */
+	protected TileAtlas () {
+	}
+
+	/** Creates a TileAtlas for use with {@link TileMapRenderer}. Run the map through TiledMapPacker to create the files required.
+	 * @param map The tiled map
+	 * @param inputDir The directory containing all the files created by TiledMapPacker */
+	public TileAtlas (TiledMap map, FileHandle inputDir) {
+		// TODO: Create a constructor that doesn't take a tmx map,
+		for (TileSet set : map.tileSets) {
+			FileHandle packfile = getRelativeFileHandle(inputDir, removeExtension(set.imageName) + " packfile");
+			TextureAtlas textureAtlas = new TextureAtlas(packfile, packfile.parent(), false);
+			Array<AtlasRegion> atlasRegions = textureAtlas.findRegions(removeExtension(removePath(set.imageName)));
+			for (AtlasRegion reg : atlasRegions) {
+				regionsMap.put(reg.index + set.firstgid, reg);
+				if (!textures.contains(reg.getTexture())) {
+					textures.add(reg.getTexture());
+				}
+			}
+		}
+	}
+
+	/** Gets an {@link TextureRegion} for a tile id
+	 * @param id tile id
+	 * @return the {@link TextureRegion} */
+	public TextureRegion getRegion (int id) {
+		return regionsMap.get(id);
+	}
+
+	/** Releases all resources associated with this TileAtlas instance. This releases all the textures backing all AtlasRegions,
+	 * which should no longer be used after calling dispose. */
+	@Override
+	public void dispose () {
+		for (Texture texture : textures) {
+			texture.dispose();
+		}
+		textures.clear();
+	}
+
+	private static String removeExtension (String s) {
+		int extensionIndex = s.lastIndexOf(".");
+		if (extensionIndex == -1) {
+			return s;
+		}
+
+		return s.substring(0, extensionIndex);
+	}
+
+	private static String removePath (String s) {
+		String temp;
+
+		int index = s.lastIndexOf('\\');
+		if (index != -1) {
+			temp = s.substring(index + 1);
+		} else {
+			temp = s;
+		}
+
+		index = temp.lastIndexOf('/');
+		if (index != -1) {
+			return s.substring(index + 1);
+		} else {
+			return s;
+		}
+	}
+
+	private static FileHandle getRelativeFileHandle (FileHandle path, String relativePath) {
+		if (relativePath.trim().length() == 0) {
+			return path;
+		}
+
+		FileHandle child = path;
+
+		StringTokenizer tokenizer = new StringTokenizer(relativePath, "\\/");
+		while (tokenizer.hasMoreTokens()) {
+			String token = tokenizer.nextToken();
+			if (token.equals("..")) {
+				child = child.parent();
+			} else {
+				child = child.child(token);
+			}
+		}
+
+		return child;
+	}
+
+	/** Flips all regions in the atlas on the specified axis.
+	 * @param x - if <code>true</code> region is flipped on the <b>x</b> axis
+	 * @param y - if <code>true</code> region is flipped on the <b>y</b> axis */
+	public void flipRegions (boolean x, boolean y) {
+		for (TextureRegion region : regionsMap.values()) {
+			region.flip(x, y);
+		}
+	}
+}
diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TileMapRenderer.java b/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TileMapRenderer.java
new file mode 100644
index 0000000..e665599
--- /dev/null
+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TileMapRenderer.java
@@ -0,0 +1,553 @@
+/*
+ * Copyright 2010 David Fraska (dfraska@gmail.com)
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the
+ * License. You may obtain a copy of the License at
+ * 
+ * http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS"
+ * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language
+ * governing permissions and limitations under the License.
+ */
+
+package com.badlogic.gdx.graphics.g2d.tiled;
+
+import java.util.StringTokenizer;
+
+import com.badlogic.gdx.Gdx;
+import com.badlogic.gdx.graphics.GL10;
+import com.badlogic.gdx.graphics.GL11;
+import com.badlogic.gdx.graphics.OrthographicCamera;
+import com.badlogic.gdx.graphics.g2d.SpriteCache;
+import com.badlogic.gdx.graphics.g2d.TextureRegion;
+import com.badlogic.gdx.graphics.glutils.ShaderProgram;
+import com.badlogic.gdx.math.MathUtils;
+import com.badlogic.gdx.math.Matrix4;
+import com.badlogic.gdx.math.Vector3;
+import com.badlogic.gdx.utils.Disposable;
+import com.badlogic.gdx.utils.IntArray;
+
+/** A renderer for Tiled maps backed with a Sprite Cache.
+ * @author David Fraska */
+public class TileMapRenderer implements Disposable {
+	private SpriteCache cache;
+	private int normalCacheId[][][], blendedCacheId[][][];
+
+	private TileAtlas atlas;
+	private TiledMap map;
+
+	private int mapHeightUnits, mapWidthUnits;
+	private int tileWidth, tileHeight;
+	private float unitsPerTileX, unitsPerTileY;
+	private int tilesPerBlockX, tilesPerBlockY;
+	private float unitsPerBlockX, unitsPerBlockY;
+	private int[] allLayers;
+	private boolean isSimpleTileAtlas = false;
+
+	private IntArray blendedTiles;
+
+	/** A renderer for static tile maps backed with a Sprite Cache.
+	 * 
+	 * This constructor is for convenience when loading TiledMaps. The normal Tiled coordinate system is used when placing tiles.
+	 * 
+	 * A default shader is used if OpenGL ES 2.0 is enabled.
+	 * 
+	 * The tilesPerBlockX and tilesPerBlockY parameters will need to be adjusted for best performance. Smaller values will cull
+	 * more precisely, but result in longer loading times. Larger values result in shorter loading times, but will cull less
+	 * precisely.
+	 * 
+	 * @param map A tile map's tile numbers, in the order [layer][row][column]
+	 * @param atlas The tile atlas to be used when drawing the map
+	 * @param tilesPerBlockX The width of each block to be drawn, in number of tiles
+	 * @param tilesPerBlockY The height of each block to be drawn, in number of tiles */
+	public TileMapRenderer (TiledMap map, TileAtlas atlas, int tilesPerBlockX, int tilesPerBlockY) {
+		this(map, atlas, tilesPerBlockX, tilesPerBlockY, map.tileWidth, map.tileHeight);
+	}
+
+	/** A renderer for static tile maps backed with a Sprite Cache.
+	 * 
+	 * This constructor is for convenience when loading TiledMaps.
+	 * 
+	 * A default shader is used if OpenGL ES 2.0 is enabled.
+	 * 
+	 * The tilesPerBlockX and tilesPerBlockY parameters will need to be adjusted for best performance. Smaller values will cull
+	 * more precisely, but result in longer loading times. Larger values result in shorter loading times, but will cull less
+	 * precisely.
+	 * 
+	 * @param map A tile map's tile numbers, in the order [layer][row][column]
+	 * @param atlas The tile atlas to be used when drawing the map
+	 * @param tilesPerBlockX The width of each block to be drawn, in number of tiles
+	 * @param tilesPerBlockY The height of each block to be drawn, in number of tiles
+	 * @param unitsPerTileX The number of units per tile in the x direction
+	 * @param unitsPerTileY The number of units per tile in the y direction */
+	public TileMapRenderer (TiledMap map, TileAtlas atlas, int tilesPerBlockX, int tilesPerBlockY, float unitsPerTileX,
+		float unitsPerTileY) {
+		this(map, atlas, tilesPerBlockX, tilesPerBlockY, unitsPerTileX, unitsPerTileY, null);
+	}
+
+	/** A renderer for static tile maps backed with a Sprite Cache.
+	 * 
+	 * This constructor is for convenience when loading TiledMaps. The normal Tiled coordinate system is used when placing tiles.
+	 * 
+	 * The tilesPerBlockX and tilesPerBlockY parameters will need to be adjusted for best performance. Smaller values will cull
+	 * more precisely, but result in longer loading times. Larger values result in shorter loading times, but will cull less
+	 * precisely.
+	 * 
+	 * @param map A tile map's tile numbers, in the order [layer][row][column]
+	 * @param atlas The tile atlas to be used when drawing the map
+	 * @param tilesPerBlockX The width of each block to be drawn, in number of tiles
+	 * @param tilesPerBlockY The height of each block to be drawn, in number of tiles
+	 * @param shader Shader to use for OpenGL ES 2.0, null uses a default shader. Ignored if using OpenGL ES 1.0. */
+	public TileMapRenderer (TiledMap map, TileAtlas atlas, int tilesPerBlockX, int tilesPerBlockY, ShaderProgram shader) {
+		this(map, atlas, tilesPerBlockX, tilesPerBlockY, map.tileWidth, map.tileHeight, shader);
+	}
+
+	public TileMapRenderer (TiledMap map, TileAtlas atlas, int tilesPerBlockX, int tilesPerBlockY, float unitsPerTileX,
+		float unitsPerTileY, ShaderProgram shader) {
+		int[][][] tileMap = new int[map.layers.size()][][];
+		for (int i = 0; i < map.layers.size(); i++) {
+			tileMap[i] = map.layers.get(i).tiles;
+		}
+
+		for (int i = 0; i < map.tileSets.size(); i++) {
+			if (map.tileSets.get(i).tileHeight - map.tileHeight > overdrawY * unitsPerTileY)
+				overdrawY = (map.tileSets.get(i).tileHeight - map.tileHeight) / unitsPerTileY;
+			if (map.tileSets.get(i).tileWidth - map.tileWidth > overdrawX * unitsPerTileX)
+				overdrawX = (map.tileSets.get(i).tileWidth - map.tileWidth) / unitsPerTileX;
+		}
+
+		String blendedTiles = map.properties.get("blended tiles");
+		IntArray blendedTilesArray;
+
+		if (blendedTiles != null) {
+			blendedTilesArray = createFromCSV(blendedTiles);
+		} else {
+			blendedTilesArray = new IntArray(0);
+		}
+
+		init(tileMap, atlas, map.tileWidth, map.tileHeight, unitsPerTileX, unitsPerTileY, blendedTilesArray, tilesPerBlockX,
+			tilesPerBlockY, shader);
+		this.map = map;
+	}
+
+	/** A renderer for static tile maps backed with a Sprite Cache.
+	 * 
+	 * The tilesPerBlockX and tilesPerBlockY parameters will need to be adjusted for best performance. Smaller values will cull
+	 * more precisely, but result in longer loading times. Larger values result in shorter loading times, but will cull less
+	 * precisely.
+	 * 
+	 * A default shader is used if OpenGL ES 2.0 is enabled.
+	 * 
+	 * @param map A tile map's tile numbers, in the order [layer][row][column]
+	 * @param atlas The tile atlas to be used when drawing the map
+	 * @param tileWidth The width of the tiles, in pixels
+	 * @param tileHeight The height of the tiles, in pixels
+	 * @param unitsPerTileX The number of units per tile in the x direction
+	 * @param unitsPerTileY The number of units per tile in the y direction
+	 * @param blendedTiles Array containing tile numbers that require blending
+	 * @param tilesPerBlockX The width of each block to be drawn, in number of tiles
+	 * @param tilesPerBlockY The height of each block to be drawn, in number of tiles */
+	public TileMapRenderer (int[][][] map, TileAtlas atlas, int tileWidth, int tileHeight, float unitsPerTileX,
+		float unitsPerTileY, IntArray blendedTiles, int tilesPerBlockX, int tilesPerBlockY) {
+		init(map, atlas, tileWidth, tileHeight, unitsPerTileX, unitsPerTileY, blendedTiles, tilesPerBlockX, tilesPerBlockY, null);
+	}
+
+	/** A renderer for static tile maps backed with a Sprite Cache.
+	 * 
+	 * The tilesPerBlockX and tilesPerBlockY parameters will need to be adjusted for best performance. Smaller values will cull
+	 * more precisely, but result in longer loading times. Larger values result in shorter loading times, but will cull less
+	 * precisely.
+	 * 
+	 * @param map A tile map's tile numbers, in the order [layer][row][column]
+	 * @param atlas The tile atlas to be used when drawing the map
+	 * @param tileWidth The width of the tiles, in pixels
+	 * @param tileHeight The height of the tiles, in pixels
+	 * @param unitsPerTileX The number of units per tile in the x direction
+	 * @param unitsPerTileY The number of units per tile in the y direction
+	 * @param blendedTiles Array containing tile numbers that require blending
+	 * @param tilesPerBlockX The width of each block to be drawn, in number of tiles
+	 * @param tilesPerBlockY The height of each block to be drawn, in number of tiles
+	 * @param shader Shader to use for OpenGL ES 2.0, null uses a default shader. Ignored if using OpenGL ES 1.0. */
+	public TileMapRenderer (int[][][] map, TileAtlas atlas, int tileWidth, int tileHeight, float unitsPerTileX,
+		float unitsPerTileY, IntArray blendedTiles, int tilesPerBlockX, int tilesPerBlockY, ShaderProgram shader) {
+		init(map, atlas, tileWidth, tileHeight, unitsPerTileX, unitsPerTileY, blendedTiles, tilesPerBlockX, tilesPerBlockY, shader);
+	}
+
+	/** Initializer, used to avoid a "Constructor call must be the first statement in a constructor" syntax error when creating a
+	 * map from a TiledMap */
+	private void init (int[][][] map, TileAtlas atlas, int tileWidth, int tileHeight, float unitsPerTileX, float unitsPerTileY,
+		IntArray blendedTiles, int tilesPerBlockX, int tilesPerBlockY, ShaderProgram shader) {
+		this.atlas = atlas;
+		this.tileWidth = tileWidth;
+		this.tileHeight = tileHeight;
+		this.unitsPerTileX = unitsPerTileX;
+		this.unitsPerTileY = unitsPerTileY;
+
+		this.blendedTiles = blendedTiles;
+		this.tilesPerBlockX = tilesPerBlockX;
+		this.tilesPerBlockY = tilesPerBlockY;
+
+		unitsPerBlockX = unitsPerTileX * tilesPerBlockX;
+		unitsPerBlockY = unitsPerTileY * tilesPerBlockY;
+
+		isSimpleTileAtlas = atlas instanceof SimpleTileAtlas;
+
+		int layer, row, col;
+
+		allLayers = new int[map.length];
+
+		// Calculate maximum cache size and map height in pixels, fill allLayers array
+		int maxCacheSize = 0;
+		int maxHeight = 0;
+		int maxWidth = 0;
+		for (layer = 0; layer < map.length; layer++) {
+			allLayers[layer] = layer;
+			if (map[layer].length > maxHeight) maxHeight = map[layer].length;
+			for (row = 0; row < map[layer].length; row++) {
+				if (map[layer][row].length > maxWidth) maxWidth = map[layer][row].length;
+				for (col = 0; col < map[layer][row].length; col++)
+					if (map[layer][row][col] != 0) maxCacheSize++;
+			}
+		}
+		mapHeightUnits = (int)(maxHeight * unitsPerTileY);
+		mapWidthUnits = (int)(maxWidth * unitsPerTileX);
+
+		if (shader == null)
+			cache = new SpriteCache(maxCacheSize, false);
+		else
+			cache = new SpriteCache(maxCacheSize, shader, false);
+
+		normalCacheId = new int[map.length][][];
+		blendedCacheId = new int[map.length][][];
+		for (layer = 0; layer < map.length; layer++) {
+			normalCacheId[layer] = new int[(int)MathUtils.ceil((float)map[layer].length / tilesPerBlockY)][];
+			blendedCacheId[layer] = new int[(int)MathUtils.ceil((float)map[layer].length / tilesPerBlockY)][];
+			for (row = 0; row < normalCacheId[layer].length; row++) {
+				normalCacheId[layer][row] = new int[(int)MathUtils.ceil((float)map[layer][row].length / tilesPerBlockX)];
+				blendedCacheId[layer][row] = new int[(int)MathUtils.ceil((float)map[layer][row].length / tilesPerBlockX)];
+				for (col = 0; col < normalCacheId[layer][row].length; col++) {
+					if (isSimpleTileAtlas) {
+						// Everything considered blended
+						blendedCacheId[layer][row][col] = addBlock(map[layer], row, col, false);
+					} else {
+						normalCacheId[layer][row][col] = addBlock(map[layer], row, col, false);
+						blendedCacheId[layer][row][col] = addBlock(map[layer], row, col, true);
+					}
+				}
+			}
+		}
+	}
+
+	private static final int FLAG_FLIP_X = 0x80000000;
+	private static final int FLAG_FLIP_Y = 0x40000000;
+	private static final int FLAG_ROTATE = 0x20000000;		
+	private static final int MASK_CLEAR  = 0xE0000000;
+	
+	private int addBlock (int[][] layer, int blockRow, int blockCol, boolean blended) {
+		cache.beginCache();
+
+		int firstCol = blockCol * tilesPerBlockX;
+		int firstRow = blockRow * tilesPerBlockY;
+		int lastCol = firstCol + tilesPerBlockX;
+		int lastRow = firstRow + tilesPerBlockY;
+
+		float offsetX =  ((tileWidth - unitsPerTileX) / 2);
+		float offsetY =  ((tileHeight - unitsPerTileY) / 2);
+		
+		for (int row = firstRow; row < lastRow && row < layer.length; row++) {
+			for (int col = firstCol; col < lastCol && col < layer[row].length; col++) {
+				int tile = layer[row][col];
+				
+				boolean flipX = ((tile & FLAG_FLIP_X) != 0);
+				boolean flipY = ((tile & FLAG_FLIP_Y) != 0);
+				boolean rotate = ((tile & FLAG_ROTATE) != 0);
+				
+				tile = tile & ~MASK_CLEAR;
+				
+				if (tile != 0) {
+					if (blended == blendedTiles.contains(tile)) {
+						TextureRegion reg = atlas.getRegion(tile);
+						if (reg != null) {
+							
+							float x = col * unitsPerTileX - offsetX;
+							float y = (layer.length - row - 1) * unitsPerTileY - offsetY;
+							float width = reg.getRegionWidth();
+							float height = reg.getRegionHeight();							
+							float originX = width * 0.5f;
+							float originY = height * 0.5f;
+							float scaleX = unitsPerTileX / tileWidth;
+							float scaleY = unitsPerTileY / tileHeight;
+							float rotation = 0;
+							int sourceX = reg.getRegionX();
+							int sourceY = reg.getRegionY();
+							int sourceWidth = reg.getRegionWidth();
+							int sourceHeight = reg.getRegionHeight();
+							
+							if (rotate) {
+								if (flipX && flipY) {
+									rotation = -90;
+									sourceX += sourceWidth;
+									sourceWidth = -sourceWidth;									
+								}
+								else
+								if (flipX && !flipY) {
+									rotation = -90;
+								}
+								else
+								if (flipY && !flipX) {
+									rotation = +90;
+								}
+								else
+								if (!flipY && !flipX) {
+									rotation = -90;
+									sourceY += sourceHeight;
+									sourceHeight = -sourceHeight;									
+								}
+							} else {
+								if (flipX) {
+									sourceX += sourceWidth;
+									sourceWidth = -sourceWidth;
+								}
+								if (flipY) {
+									sourceY += sourceHeight;
+									sourceHeight = -sourceHeight;
+								}
+							}
+							
+							cache.add(
+								reg.getTexture(),
+								x,
+								y,
+								originX,
+								originY,
+								width,
+								height,
+								scaleX,
+								scaleY,
+								rotation,
+								sourceX,
+								sourceY,
+								sourceWidth,
+								sourceHeight,
+								false,
+								false
+							);
+						}
+					}
+				}
+			}
+		}
+
+		return cache.endCache();
+	}
+
+	/** Renders the entire map. Use this function only on very small maps or for debugging purposes. The size of the map is based on
+	 * the first layer and the first row's size. */
+	public void render () {
+		render(0, 0, (int)getMapWidthUnits(), (int)(getMapHeightUnits()));
+	}
+
+	/** Renders all layers between the given bounding box in map units. This is the same as calling
+	 * {@link TileMapRenderer#render(float, float, float, float, int[])} with all layers in the layers list. */
+	public void render (float x, float y, float width, float height) {
+		render(x, y, width, height, allLayers);
+	}
+
+	/** Renders specific layers in the given a camera
+	 * @param cam The camera to use */
+	public void render (OrthographicCamera cam) {
+		render(cam, allLayers);
+	}
+
+	Vector3 tmp = new Vector3();
+
+	/** Renders specific layers in the given a camera.
+	 * @param cam The camera to use
+	 * @param layers The list of layers to draw, 0 being the lowest layer. You will get an IndexOutOfBoundsException if a layer
+	 *           number is too high. */
+	public void render (OrthographicCamera cam, int[] layers) {
+		getProjectionMatrix().set(cam.combined);
+		tmp.set(0, 0, 0);
+		cam.unproject(tmp);
+		render(tmp.x, tmp.y, cam.viewportWidth * cam.zoom, cam.viewportHeight * cam.zoom, layers);
+	}
+
+	/** Sets the amount of overdraw in the X direction (in units). Use this if an actual tile width is greater than the tileWidth
+	 * specified in the constructor. Use the value actual_tile_width - tileWidth (from the constructor). */
+	public float overdrawX;
+
+	/** Sets the amount of overdraw in the Y direction (in units). Use this if an actual tile height is greater than the tileHeight
+	 * specified in the constructor. Use the value actual_tile_height - tileHeight (from the constructor). */
+	public float overdrawY;
+
+	private int initialRow, initialCol, currentRow, currentCol, lastRow, lastCol, currentLayer;
+
+	/** Renders specific layers between the given bounding box in map units.
+	 * @param x The x coordinate to start drawing
+	 * @param y the y coordinate to start drawing
+	 * @param width the width of the tiles to draw
+	 * @param height the width of the tiles to draw
+	 * @param layers The list of layers to draw, 0 being the lowest layer. You will get an IndexOutOfBoundsException if a layer
+	 *           number is too high. */
+	public void render (float x, float y, float width, float height, int[] layers) {
+		lastRow = (int)((mapHeightUnits - (y - height + overdrawY)) / (unitsPerBlockY));
+		initialRow = (int)((mapHeightUnits - (y - overdrawY)) / (unitsPerBlockY));
+		initialRow = (initialRow > 0) ? initialRow : 0; // Clamp initial Row > 0
+
+		lastCol = (int)((x + width + overdrawX) / (unitsPerBlockX));
+		initialCol = (int)((x - overdrawX) / (unitsPerBlockX));
+		initialCol = (initialCol > 0) ? initialCol : 0; // Clamp initial Col > 0
+
+		Gdx.gl.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
+
+		cache.begin();
+		if (isSimpleTileAtlas) {
+			// Without this special case the top left corner doesn't work properly on mutilayered maps
+			Gdx.gl.glEnable(GL10.GL_BLEND);
+			for (currentLayer = 0; currentLayer < layers.length; currentLayer++) {
+				for (currentRow = initialRow; currentRow <= lastRow && currentRow < getLayerHeightInBlocks(currentLayer); currentRow++) {
+					for (currentCol = initialCol; currentCol <= lastCol
+						&& currentCol < getLayerWidthInBlocks(currentLayer, currentRow); currentCol++) {
+						cache.draw(blendedCacheId[layers[currentLayer]][currentRow][currentCol]);
+					}
+				}
+			}
+		} else {
+			for (currentLayer = 0; currentLayer < layers.length; currentLayer++) {
+				for (currentRow = initialRow; currentRow <= lastRow && currentRow < getLayerHeightInBlocks(currentLayer); currentRow++) {
+					for (currentCol = initialCol; currentCol <= lastCol
+						&& currentCol < getLayerWidthInBlocks(currentLayer, currentRow); currentCol++) {
+						Gdx.gl.glDisable(GL10.GL_BLEND);
+						cache.draw(normalCacheId[layers[currentLayer]][currentRow][currentCol]);
+						Gdx.gl.glEnable(GL10.GL_BLEND);
+						cache.draw(blendedCacheId[layers[currentLayer]][currentRow][currentCol]);
+					}
+				}
+			}
+		}
+		cache.end();
+		Gdx.gl.glDisable(GL10.GL_BLEND);
+	}
+
+	private int getLayerWidthInBlocks (int layer, int row) {
+		int normalCacheWidth = 0;
+		if (normalCacheId != null && normalCacheId[layer] != null && normalCacheId[layer][row] != null) {
+			normalCacheWidth = normalCacheId[layer][row].length;
+		}
+
+		int blendedCacheWidth = 0;
+		if (blendedCacheId != null && blendedCacheId[layer] != null && blendedCacheId[layer][row] != null) {
+			blendedCacheWidth = blendedCacheId[layer][row].length;
+		}
+
+		return Math.max(normalCacheWidth, blendedCacheWidth);
+	}
+
+	private int getLayerHeightInBlocks (int layer) {
+		int normalCacheHeight = 0;
+		if (normalCacheId != null && normalCacheId[layer] != null) {
+			normalCacheHeight = normalCacheId[layer].length;
+		}
+
+		int blendedCacheHeight = 0;
+		if (blendedCacheId != null && blendedCacheId[layer] != null) {
+			blendedCacheHeight = blendedCacheId[layer].length;
+		}
+
+		return Math.max(normalCacheHeight, blendedCacheHeight);
+	}
+
+	public Matrix4 getProjectionMatrix () {
+		return cache.getProjectionMatrix();
+	}
+
+	public Matrix4 getTransformMatrix () {
+		return cache.getTransformMatrix();
+	}
+
+	/** Computes the Tiled Map row given a Y coordinate in units
+	 * @param worldY the Y coordinate in units */
+	public int getRow (int worldY) {
+		return (int)(worldY / unitsPerTileY);
+	}
+
+	/** Computes the Tiled Map column given an X coordinate in units
+	 * @param worldX the X coordinate in units */
+	public int getCol (int worldX) {
+		return (int)(worldX / unitsPerTileX);
+	}
+
+	/** Returns the initial drawn block row, for debugging purposes. Use this along with {@link TileMapRenderer#getLastRow()} to
+	 * compute the number of rows drawn in the last call to {@link TileMapRenderer#render(float, float, float, float, int[])}. */
+	public int getInitialRow () {
+		return initialRow;
+	}
+
+	/** Returns the initial drawn block column, for debugging purposes. Use this along with {@link TileMapRenderer#getLastCol()} to
+	 * compute the number of columns drawn in the last call to {@link TileMapRenderer#render(float, float, float, float, int[])}. */
+	public int getInitialCol () {
+		return initialCol;
+	}
+
+	/** Returns the final drawn block row, for debugging purposes. Use this along with {@link TileMapRenderer#getInitialRow()} to
+	 * compute the number of rows drawn in the last call to {@link TileMapRenderer#render(float, float, float, float, int[])}. */
+	public int getLastRow () {
+		return lastRow;
+	}
+
+	/** Returns the final drawn block column, for debugging purposes. Use this along with {@link TileMapRenderer#getInitialCol()} to
+	 * compute the number of columns drawn in the last call to {@link TileMapRenderer#render(float, float, float, float, int[])}. */
+	public int getLastCol () {
+		return lastCol;
+	}
+
+	public float getUnitsPerTileX () {
+		return unitsPerTileX;
+	}
+
+	public float getUnitsPerTileY () {
+		return unitsPerTileY;
+	}
+
+	public int getMapHeightUnits () {
+		return mapHeightUnits;
+	}
+
+	public int getMapWidthUnits () {
+		return mapWidthUnits;
+	}
+
+	private static int parseIntWithDefault (String string, int defaultValue) {
+		if (string == null) return defaultValue;
+		try {
+			return Integer.parseInt(string);
+		} catch (NumberFormatException e) {
+			return defaultValue;
+		}
+	}
+
+	/** Releases all resources held by this TiledMapRenderer. */
+	@Override
+	public void dispose () {
+		cache.dispose();
+	}
+
+	public TiledMap getMap () {
+		return map;
+	}
+
+	public TileAtlas getAtlas () {
+		return atlas;
+	}
+
+	private static IntArray createFromCSV (String values) {
+		IntArray list = new IntArray(false, (values.length() + 1) / 2);
+		StringTokenizer st = new StringTokenizer(values, ",");
+		while (st.hasMoreTokens()) {
+			list.add(Integer.parseInt(st.nextToken()));
+		}
+		list.shrink();
+		return list;
+	}
+}
diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TileSet.java b/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TileSet.java
new file mode 100644
index 0000000..60a84c1
--- /dev/null
+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TileSet.java
@@ -0,0 +1,41 @@
+/*******************************************************************************
+ * Copyright 2011 See AUTHORS file.
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the
+ * License. You may obtain a copy of the License at
+ * 
+ * http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS"
+ * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language
+ * governing permissions and limitations under the License.
+ ******************************************************************************/
+
+package com.badlogic.gdx.graphics.g2d.tiled;
+
+/** Contains a Tiled Map tile set
+ * @author David Fraska */
+public class TileSet {
+	public int firstgid;
+	public int tileWidth;
+	public int tileHeight;
+	public int margin = 0, spacing = 0;
+	public String imageName;
+	public String name;
+
+	/** Contains a Tiled Map tile set */
+	protected TileSet () {
+	}
+
+	/** Copy constructor
+	 * @param set The set to be copied */
+	protected TileSet (TileSet set) {
+		this.firstgid = set.firstgid;
+		this.tileWidth = set.tileWidth;
+		this.tileHeight = set.tileHeight;
+		this.margin = set.margin;
+		this.spacing = set.spacing;
+		this.imageName = set.imageName;
+		this.name = set.name;
+	}
+}
diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TiledLayer.java b/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TiledLayer.java
new file mode 100644
index 0000000..0fcc54d
--- /dev/null
+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TiledLayer.java
@@ -0,0 +1,42 @@
+/*******************************************************************************
+ * Copyright 2011 See AUTHORS file.
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/
+
+package com.badlogic.gdx.graphics.g2d.tiled;
+
+import java.util.HashMap;
+
+/** Contains Tiled map layer information
+ * @author David Fraska */
+public class TiledLayer {
+	public String name;
+
+	/** Contains the layer properties with a key of the property name. */
+	public HashMap<String, String> properties = new HashMap<String, String>(0);
+
+	// public final int width, height;
+
+	/** Contains the tile ids, addressed as [row][column]. */
+	public int[][] tiles;
+
+	public int getWidth () {
+		if (tiles[0] == null) return 0;
+		return tiles[0].length;
+	}
+
+	public int getHeight () {
+		return tiles.length;
+	}
+}
diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TiledLoader.java b/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TiledLoader.java
new file mode 100644
index 0000000..50325b4
--- /dev/null
+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TiledLoader.java
@@ -0,0 +1,541 @@
+/*******************************************************************************
+ * Copyright 2011 See AUTHORS file.
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the
+ * License. You may obtain a copy of the License at
+ * 
+ * http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS"
+ * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language
+ * governing permissions and limitations under the License.
+ ******************************************************************************/
+
+package com.badlogic.gdx.graphics.g2d.tiled;
+
+import java.io.ByteArrayInputStream;
+import java.io.IOException;
+import java.util.Stack;
+import java.util.StringTokenizer;
+import java.util.zip.DataFormatException;
+import java.util.zip.GZIPInputStream;
+import java.util.zip.Inflater;
+
+import com.badlogic.gdx.Gdx;
+import com.badlogic.gdx.files.FileHandle;
+import com.badlogic.gdx.utils.Base64Coder;
+import com.badlogic.gdx.utils.GdxRuntimeException;
+import com.badlogic.gdx.utils.XmlReader;
+
+/** Loads a Tiled Map from a tmx file
+ * @author David Fraska */
+public class TiledLoader {
+
+	/** Loads a <code>TiledMap</code> from a <code>String</code>.
+	 * @param tmxData The tmx file's content. */
+	public static TiledMap createMap (String tmxData) {
+		return createMap(null, tmxData);
+	}
+
+	/** Loads a Tiled Map from a tmx file
+	 * @param tmxFile the map's tmx file */
+	public static TiledMap createMap (FileHandle tmxFile) {
+		return createMap(tmxFile, null);
+	}
+
+	/** Loads a TiledMap from a tmx file.
+	 * @param tmxFile The tmx file. NULL to force load from <code>tmxData</code>.
+	 * @param tmxData The tmx file's content. NULL to force load from <code>tmxFile</code>. */
+	private static TiledMap createMap (FileHandle tmxFile, String tmxData) {
+		final TiledMap map;
+
+		map = new TiledMap();
+		map.tmxFile = tmxFile;
+
+		try {
+			XmlReader xmlReader = new XmlReader() {
+
+				Stack<String> currBranch = new Stack<String>();
+
+				boolean awaitingData = false;
+				TiledLayer currLayer;
+				int currLayerWidth = 0, currLayerHeight = 0;
+				TileSet currTileSet;
+				TiledObjectGroup currObjectGroup;
+				TiledObject currObject;
+				int currTile;
+
+				class Polyline {
+					String name;
+					String points;
+
+					public Polyline (String name) {
+						this.name = name;
+					}
+
+					public Polyline () {
+					}
+				}
+
+				Polyline polyline, polygon;
+
+				class Property {
+					String parentType, name, value;
+				}
+
+				Property currProperty;
+
+				String encoding, dataString, compression;
+				byte[] data;
+
+				int dataCounter = 0, row, col;
+
+				@Override
+				protected void open (String name) {
+					currBranch.push(name);
+
+					if ("layer".equals(name)) {
+						currLayer = new TiledLayer();
+						return;
+					}
+
+					if ("tileset".equals(name)) {
+						currTileSet = new TileSet();
+						return;
+					}
+
+					if ("data".equals(name)) {
+						dataString = ""; // clear the string for new data
+						awaitingData = true;
+						return;
+					}
+
+					if ("objectgroup".equals(name)) {
+						currObjectGroup = new TiledObjectGroup();
+						return;
+					}
+
+					if ("object".equals(name)) {
+						currObject = new TiledObject();
+						return;
+					}
+
+					if ("property".equals(name)) {
+						currProperty = new Property();
+						currProperty.parentType = currBranch.get(currBranch.size() - 3);
+						return;
+					}
+
+					if ("polyline".equals(name)) {
+						polyline = new Polyline("polyline");
+						return;
+					}
+
+					if ("polygon".equals(name)) {
+						polygon = new Polyline("polygon");
+						return;
+					}
+				}
+
+				@Override
+				protected void attribute (String name, String value) {
+					String element = currBranch.peek();
+
+					if ("layer".equals(element)) {
+						if ("width".equals(name)) {
+							currLayerWidth = Integer.parseInt(value);
+						} else if ("height".equals(name)) {
+							currLayerHeight = Integer.parseInt(value);
+						}
+
+						if (currLayerWidth != 0 && currLayerHeight != 0) {
+							currLayer.tiles = new int[currLayerHeight][currLayerWidth];
+						}
+						if ("name".equals(name)) {
+							currLayer.name = value;
+						}
+						return;
+					}
+
+					if ("tileset".equals(element)) {
+						if ("firstgid".equals(name)) {
+							currTileSet.firstgid = Integer.parseInt(value);
+							return;
+						}
+						if ("tilewidth".equals(name)) {
+							currTileSet.tileWidth = Integer.parseInt(value);
+							return;
+						}
+						if ("tileheight".equals(name)) {
+							currTileSet.tileHeight = Integer.parseInt(value);
+							return;
+						}
+						if ("name".equals(name)) {
+							currTileSet.name = value;
+							return;
+						}
+						if ("spacing".equals(name)) {
+							currTileSet.spacing = Integer.parseInt(value);
+							return;
+						}
+						if ("margin".equals(name)) {
+							currTileSet.margin = Integer.parseInt(value);
+							return;
+						}
+						return;
+					}
+
+					if ("image".equals(element)) {
+						if ("source".equals(name)) {
+							currTileSet.imageName = value;
+							return;
+						}
+						return;
+					}
+
+					if ("data".equals(element)) {
+						if ("encoding".equals(name)) {
+							encoding = value;
+							return;
+						}
+						if ("compression".equals(name)) {
+							compression = value;
+							return;
+						}
+						return;
+					}
+
+					if ("objectgroup".equals(element)) {
+						if ("name".equals(name)) {
+							currObjectGroup.name = value;
+							return;
+						}
+						if ("height".equals(name)) {
+							currObjectGroup.height = Integer.parseInt(value);
+							return;
+						}
+						if ("width".equals(name)) {
+							currObjectGroup.width = Integer.parseInt(value);
+							return;
+						}
+						return;
+					}
+
+					if ("object".equals(element)) {
+						if ("name".equals(name)) {
+							currObject.name = value;
+							return;
+						}
+						if ("type".equals(name)) {
+							currObject.type = value;
+							return;
+						}
+						if ("x".equals(name)) {
+							currObject.x = Integer.parseInt(value);
+							return;
+						}
+						if ("y".equals(name)) {
+							currObject.y = Integer.parseInt(value);
+							return;
+						}
+						if ("width".equals(name)) {
+							currObject.width = Integer.parseInt(value);
+							return;
+						}
+						if ("height".equals(name)) {
+							currObject.height = Integer.parseInt(value);
+							return;
+						}
+						if ("gid".equals(name)) {
+							currObject.gid = Integer.parseInt(value);
+							return;
+						}
+						return;
+					}
+
+					if ("map".equals(element)) {
+						if ("orientation".equals(name)) {
+							map.orientation = value;
+							return;
+						}
+						if ("width".equals(name)) {
+							map.width = Integer.parseInt(value);
+							return;
+						}
+						if ("height".equals(name)) {
+							map.height = Integer.parseInt(value);
+							return;
+						}
+						if ("tilewidth".equals(name)) {
+							map.tileWidth = Integer.parseInt(value);
+							return;
+						}
+						if ("tileheight".equals(name)) {
+							map.tileHeight = Integer.parseInt(value);
+							return;
+						}
+						return;
+					}
+
+					if ("tile".equals(element)) {
+						if (awaitingData) { // Actually getting tile data
+							if ("gid".equals(name)) {
+								col = dataCounter % currLayerWidth;
+								row = dataCounter / currLayerWidth;
+								if (row < currLayerHeight) {
+									currLayer.tiles[row][col] = Integer.parseInt(value);
+								} else {
+									Gdx.app.log("TiledLoader", "Warning: extra XML gid values ignored! Your map is likely corrupt!");
+								}
+								dataCounter++;
+							}
+						} else { // Not getting tile data, must be a tile Id (for properties)
+							if ("id".equals(name)) {
+								currTile = Integer.parseInt(value);
+							}
+						}
+						return;
+					}
+
+					if ("property".equals(element)) {
+						if ("name".equals(name)) {
+							currProperty.name = value;
+							return;
+						}
+						if ("value".equals(name)) {
+							currProperty.value = value;
+							return;
+						}
+						return;
+					}
+
+					if ("polyline".equals(element)) {
+						if ("points".equals(name)) {
+							polyline.points = value;
+							return;
+						}
+						return;
+					}
+
+					if ("polygon".equals(element)) {
+						if ("points".equals(name)) {
+							polygon.points = value;
+							return;
+						}
+						return;
+					}
+				}
+
+				@Override
+				protected void text (String text) {
+					if (awaitingData) {
+						dataString = dataString.concat(text);
+					}
+				}
+
+				@Override
+				protected void close () {
+					String element = currBranch.pop();
+
+					if ("layer".equals(element)) {
+						map.layers.add(currLayer);
+						currLayer = null;
+						return;
+					}
+
+					if ("tileset".equals(element)) {
+						map.tileSets.add(currTileSet);
+						currTileSet = null;
+						return;
+					}
+
+					if ("object".equals(element)) {
+						currObjectGroup.objects.add(currObject);
+						currObject = null;
+						return;
+					}
+
+					if ("objectgroup".equals(element)) {
+						map.objectGroups.add(currObjectGroup);
+						currObjectGroup = null;
+						return;
+					}
+
+					if ("property".equals(element)) {
+						putProperty(currProperty);
+						currProperty = null;
+						return;
+					}
+
+					if ("polyline".equals(element)) {
+						putPolyLine(polyline);
+						polyline = null;
+						return;
+					}
+
+					if ("polygon".equals(element)) {
+						putPolyLine(polygon);
+						polygon = null;
+						return;
+					}
+
+					if ("data".equals(element)) {
+
+						// decode and uncompress the data
+						if ("base64".equals(encoding)) {
+							if (dataString == null | "".equals(dataString.trim())) return;
+
+							data = Base64Coder.decode(dataString.trim());
+
+							if ("gzip".equals(compression)) {
+								unGZip();
+							} else if ("zlib".equals(compression)) {
+								unZlib();
+							} else if (compression == null) {
+								arrangeData();
+							}
+
+						} else if ("csv".equals(encoding) && compression == null) {
+							fromCSV();
+
+						} else if (encoding == null && compression == null) {
+							// startElement() handles most of this
+							dataCounter = 0;// reset counter in case another layer comes through
+						} else {
+							throw new GdxRuntimeException("Unsupported encoding and/or compression format");
+						}
+
+						awaitingData = false;
+						return;
+					}
+
+					if ("property".equals(element)) {
+						putProperty(currProperty);
+						currProperty = null;
+					}
+				}
+
+				private void putPolyLine (Polyline polyLine) {
+					if (polyLine == null) {
+						return;
+					}
+
+					if ("polyline".equals(polyLine.name)) {
+						currObject.polyline = polyLine.points;
+						return;
+					}
+
+					if ("polygon".equals(polyLine.name)) {
+						currObject.polygon = polyLine.points;
+						return;
+					}
+
+					return;
+				}
+
+				private void putProperty (Property property) {
+					if ("tile".equals(property.parentType)) {
+						map.setTileProperty(currTile + currTileSet.firstgid, property.name, property.value);
+						return;
+					}
+
+					if ("map".equals(property.parentType)) {
+						map.properties.put(property.name, property.value);
+						return;
+					}
+
+					if ("layer".equals(property.parentType)) {
+						currLayer.properties.put(property.name, property.value);
+						return;
+					}
+
+					if ("objectgroup".equals(property.parentType)) {
+						currObjectGroup.properties.put(property.name, property.value);
+						return;
+					}
+
+					if ("object".equals(property.parentType)) {
+						currObject.properties.put(property.name, property.value);
+						return;
+					}
+				}
+
+				private void fromCSV () {
+					StringTokenizer st = new StringTokenizer(dataString.trim(), ",");
+					for (int row = 0; row < currLayerHeight; row++) {
+						for (int col = 0; col < currLayerWidth; col++) {
+							currLayer.tiles[row][col] = (int) Long.parseLong(st.nextToken().trim());
+						}
+					}
+				}
+
+				private void arrangeData () {
+					int byteCounter = 0;
+					for (int row = 0; row < currLayerHeight; row++) {
+						for (int col = 0; col < currLayerWidth; col++) {
+							currLayer.tiles[row][col] = unsignedByteToInt(data[byteCounter++])
+								| unsignedByteToInt(data[byteCounter++]) << 8 | unsignedByteToInt(data[byteCounter++]) << 16
+								| unsignedByteToInt(data[byteCounter++]) << 24;
+						}
+					}
+				}
+
+				private void unZlib () {
+					Inflater zlib = new Inflater();
+					byte[] readTemp = new byte[4];
+
+					zlib.setInput(data, 0, data.length);
+
+					for (int row = 0; row < currLayerHeight; row++) {
+						for (int col = 0; col < currLayerWidth; col++) {
+							try {
+								zlib.inflate(readTemp, 0, 4);
+								currLayer.tiles[row][col] = unsignedByteToInt(readTemp[0]) | unsignedByteToInt(readTemp[1]) << 8
+									| unsignedByteToInt(readTemp[2]) << 16 | unsignedByteToInt(readTemp[3]) << 24;
+							} catch (DataFormatException e) {
+								throw new GdxRuntimeException("Error Reading TMX Layer Data.", e);
+							}
+						}
+					}
+				}
+
+				private void unGZip () {
+					GZIPInputStream GZIS = null;
+					try {
+						GZIS = new GZIPInputStream(new ByteArrayInputStream(data), data.length);
+					} catch (IOException e) {
+						throw new GdxRuntimeException("Error Reading TMX Layer Data - IOException: " + e.getMessage());
+					}
+
+					// Read the GZIS data into an array, 4 bytes = 1 GID
+					byte[] readTemp = new byte[4];
+					for (int row = 0; row < currLayerHeight; row++) {
+						for (int col = 0; col < currLayerWidth; col++) {
+							try {
+								GZIS.read(readTemp, 0, 4);
+								currLayer.tiles[row][col] = unsignedByteToInt(readTemp[0]) | unsignedByteToInt(readTemp[1]) << 8
+									| unsignedByteToInt(readTemp[2]) << 16 | unsignedByteToInt(readTemp[3]) << 24;
+							} catch (IOException e) {
+								throw new GdxRuntimeException("Error Reading TMX Layer Data.", e);
+							}
+						}
+					}
+				}
+			};
+			// Is it a file?
+			if (tmxFile != null) {
+				xmlReader.parse(tmxFile);
+			} else {
+				xmlReader.parse(tmxData);
+			}
+		} catch (IOException e) {
+			throw new GdxRuntimeException("Error Parsing TMX file", e);
+		}
+
+		return map;
+	}
+
+	static int unsignedByteToInt (byte b) {
+		return (int)b & 0xFF;
+	}
+}
diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TiledMap.java b/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TiledMap.java
new file mode 100644
index 0000000..c398346
--- /dev/null
+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TiledMap.java
@@ -0,0 +1,76 @@
+/*******************************************************************************
+ * Copyright 2011 See AUTHORS file.
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/
+
+package com.badlogic.gdx.graphics.g2d.tiled;
+
+import java.util.ArrayList;
+import java.util.HashMap;
+
+import com.badlogic.gdx.files.FileHandle;
+
+/** Contains information from a Tiled Map. Use {@link TiledLoader#createMap(FileHandle)} to fill it.
+ * @author David Fraska */
+public class TiledMap {
+	public ArrayList<TiledLayer> layers = new ArrayList<TiledLayer>(4);
+	public ArrayList<TiledObjectGroup> objectGroups = new ArrayList<TiledObjectGroup>(1);
+	public ArrayList<TileSet> tileSets = new ArrayList<TileSet>(5);
+
+	/** Stores the map properties with a key of the property name. */
+	public HashMap<String, String> properties = new HashMap<String, String>(2);
+	private ArrayList<TileProperty> tileProperties = new ArrayList<TileProperty>(0);
+
+	public FileHandle tmxFile;
+	public String orientation;
+	public int width, height, tileWidth, tileHeight;
+
+	/** Sets a tile's property. Typically only called by {@link TiledLoader#createMap(FileHandle)}
+	 * @param id The tile's id
+	 * @param name The property name
+	 * @param value The property value */
+	public void setTileProperty (int id, String name, String value) {
+		for (TileProperty tp : tileProperties) {
+			if (tp.id == id) {
+				tp.propertyMap.put(name, value);
+				return;
+			}
+		}
+
+		// no TileProperty found with the correct id, add a new one
+		TileProperty tempProperty = new TileProperty();
+		tempProperty.id = id;
+		tempProperty.propertyMap.put(name, value);
+		tileProperties.add(tempProperty);
+	}
+
+	/** Gets a tile's property.
+	 * @param id The tile's id
+	 * @param name The property name
+	 * @return The property value */
+	public String getTileProperty (int id, String name) {
+		for (TileProperty tp : tileProperties) {
+			if (tp.id == id) {
+				return tp.propertyMap.get(name);
+			}
+		}
+
+		return null;
+	}
+
+	class TileProperty {
+		int id;
+		HashMap<String, String> propertyMap = new HashMap<String, String>();
+	}
+}
diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TiledObject.java b/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TiledObject.java
new file mode 100644
index 0000000..ceff95d
--- /dev/null
+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TiledObject.java
@@ -0,0 +1,31 @@
+/*******************************************************************************
+ * Copyright 2011 See AUTHORS file.
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/
+
+package com.badlogic.gdx.graphics.g2d.tiled;
+
+import java.util.HashMap;
+
+/** Contains a Tiled map object
+ * @author David Fraska */
+public class TiledObject {
+	public String name, type;
+	public int x, y, width = 0, height = 0, gid = 0;
+
+	/** Contains the object properties with a key of the property name. */
+	public HashMap<String, String> properties = new HashMap<String, String>();
+
+	public String polyline, polygon;
+}
diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TiledObjectGroup.java b/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TiledObjectGroup.java
new file mode 100644
index 0000000..f5b82b1
--- /dev/null
+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/tiled/TiledObjectGroup.java
@@ -0,0 +1,32 @@
+/*******************************************************************************
+ * Copyright 2011 See AUTHORS file.
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/
+
+package com.badlogic.gdx.graphics.g2d.tiled;
+
+import java.util.ArrayList;
+import java.util.HashMap;
+
+/** Contains a Tiled map object group/layer
+ * @author David Fraska */
+public class TiledObjectGroup {
+	public int width, height;
+	public String name;
+
+	/** Contains the object group properties with a key of the property name. */
+	public HashMap<String, String> properties = new HashMap<String, String>();
+
+	public ArrayList<TiledObject> objects = new ArrayList<TiledObject>();
+}
diff --git a/gdx/src/com/badlogic/gdx/maps/ImageResolver.java b/gdx/src/com/badlogic/gdx/maps/ImageResolver.java
deleted file mode 100755
index 95e2ca9..0000000
--- a/gdx/src/com/badlogic/gdx/maps/ImageResolver.java
+++ /dev/null
@@ -1,45 +0,0 @@
-package com.badlogic.gdx.maps;
-
-import com.badlogic.gdx.assets.AssetManager;
-import com.badlogic.gdx.graphics.Texture;
-import com.badlogic.gdx.utils.ObjectMap;
-
-/**
- * Resolves an image by a string, wrapper around a Map or AssetManager
- * to load maps either directly or via AssetManager.
- * @author mzechner
- *
- */
-public interface ImageResolver {
-	/**
-	 * @param name
-	 * @return the Texture for the given image name or null.
-	 */
-	public Texture getImage(String name);
-	
-	public static class DirectImageResolver implements ImageResolver {
-		private final ObjectMap<String, Texture> images;
-		
-		public DirectImageResolver(ObjectMap<String, Texture> images) {
-			this.images = images;
-		}
-
-		@Override
-		public Texture getImage (String name) {
-			return images.get(name);
-		}
-	}
-	
-	public static class AssetManagerImageResolver implements ImageResolver {
-		private final AssetManager assetManager;
-		
-		public AssetManagerImageResolver(AssetManager assetManager) {
-			this.assetManager = assetManager;
-		}
-		
-		@Override
-		public Texture getImage (String name) {
-			return assetManager.get(name, Texture.class);
-		}
-	}
-}
diff --git a/gdx/src/com/badlogic/gdx/maps/Map.java b/gdx/src/com/badlogic/gdx/maps/Map.java
deleted file mode 100644
index b529295..0000000
--- a/gdx/src/com/badlogic/gdx/maps/Map.java
+++ /dev/null
@@ -1,60 +0,0 @@
-package com.badlogic.gdx.maps;
-
-import com.badlogic.gdx.assets.AssetManager;
-import com.badlogic.gdx.graphics.Texture;
-import com.badlogic.gdx.utils.Disposable;
-
-/**
- * @brief Generic map
- * 
- * A Map instance contains the following data
- * 
- * <ul>
- * <li> MapLayers<ul>
- * 	<li>MapLayer<ul>
- * 		<li>MapObjects<ul>
- * 			<li>MapObject<ul>
- * 				<li>Can be: TextureMapObject, CircleMapObject, RectangleMapObject, PolygonMapObject or PolylineMapObject</li>
- * 				<li>MapProperties</li>
- * 			</ul></li>
- * 		</ul></li>
- * 		<li>MapProperties</li>	
- * 	</ul></li>
- * </ul></li>
- * <li> MapProperties
- * </ul>
- */
-public class Map implements Disposable {
-	private MapLayers layers = new MapLayers();
-	private MapProperties properties = new MapProperties();
-	
-	/**
-	 * @return map's layers
-	 */
-	public MapLayers getLayers() {
-		return layers;
-	}
-
-	/**
-	 * @return map's properties set
-	 */
-	public MapProperties getProperties() {
-		return properties;
-	}
-	
-	/**
-	 * Creates empty map
-	 */
-	public Map() {
-		
-	}
-
-	/**
-	 * Disposes all resources like {@link Texture} instances that
-	 * the map owns. Not necessary if the Map was loaded via
-	 * an {@link AssetManager}
-	 */
-	@Override
-	public void dispose () {
-	}
-}
diff --git a/gdx/src/com/badlogic/gdx/maps/MapLayer.java b/gdx/src/com/badlogic/gdx/maps/MapLayer.java
deleted file mode 100644
index fac4aa6..0000000
--- a/gdx/src/com/badlogic/gdx/maps/MapLayer.java
+++ /dev/null
@@ -1,77 +0,0 @@
-package com.badlogic.gdx.maps;
-
-/**
- * @brief Map layer containing a set of objects and properties
- */
-public class MapLayer {
-
-	private String name = "";
-	private float opacity = 1.0f;
-	private boolean visible = true;
-	private MapObjects objects = new MapObjects();
-	private MapProperties properties = new MapProperties();
-
-	/**
-	 * @return layer's name
-	 */
-	public String getName() {
-		return name;
-	}
-	
-	/**
-	 * @param name new name for the layer
-	 */
-	public void setName(String name) {
-		this.name = name;
-	}
-	
-	/**
-	 * @return layer's opacity
-	 */
-	public float getOpacity() {
-		return opacity;
-	}
-
-	/**
-	 * @param opacity new opacity for the layer
-	 */
-	public void setOpacity(float opacity) {
-		this.opacity = opacity;
-	}
-	
-	/**
-	 * @return collection of objects contained in the layer
-	 */
-	public MapObjects getObjects() {
-		return objects;
-	}
-	
-	/**
-	 * @return whether the layer is visible or not
-	 */
-	public boolean getVisible() {
-		return visible;
-	}
-
-	/**
-	 * @param visible toggles layer's visibility
-	 */
-	public void setVisible(boolean visible) {
-		this.visible = visible;
-	}
-
-	/**
-	 * @return layer's set of properties
-	 */
-	public MapProperties getProperties() {
-		return properties;
-	}
-	
-	/**
-	 * Creates empty layer
-	 */
-	public MapLayer() {
-		
-	}
-
-}
diff --git a/gdx/src/com/badlogic/gdx/maps/MapLayers.java b/gdx/src/com/badlogic/gdx/maps/MapLayers.java
deleted file mode 100644
index 98bc077..0000000
--- a/gdx/src/com/badlogic/gdx/maps/MapLayers.java
+++ /dev/null
@@ -1,95 +0,0 @@
-package com.badlogic.gdx.maps;
-
-import java.util.Iterator;
-
-import com.badlogic.gdx.utils.Array;
-
-/**
- * @brief set of MapLayer instances
- */
-public class MapLayers implements Iterable<MapLayer> {
-	
-	private Array<MapLayer> layers = new Array<MapLayer>();
-
-	/**
-	 * Creates empty set of layers
-	 */
-	public MapLayers() {
-	
-	}
-	
-	/**
-	 * @param index
-	 * @return layer at index
-	 */
-	public MapLayer getLayer(int index) {
-		return layers.get(index);
-	}
-	
-	/**
-	 * @param name
-	 * @return matching layer if exists, otherwise, null
-	 */
-	public MapLayer getLayer(String name) {
-		for (MapLayer layer : layers) {
-			if (name.equals(layer.getName())) {
-				return layer;
-			}
-		}
-		return null;
-	}
-	
-	/**
-	 * @param layer layer to be added to the set
-	 */
-	public void addLayer(MapLayer layer) {
-		this.layers.add(layer);
-	}
-	
-	/**
-	 * @param index removes layer at index
-	 */
-	public void removeLayer(int index) {
-		layers.removeIndex(index);
-	}
-	
-	/**
-	 * @param layer layer to be removed
-	 */
-	public void removeLayer(MapLayer layer) {
-		layers.removeValue(layer, true);
-	}
-
-	/**
-	 * @param type
-	 * @return array with all the layers matching type
-	 */
-	public <T extends MapLayer> Array<T> getLayersByType(Class<T> type) {
-		return getLayersByType(type, new Array<T>());	
-	}
-	
-	/**
-	 * 
-	 * @param type
-	 * @param fill array to be filled with the matching layers
-	 * @return array with all the layers matching type
-	 */
-	public <T extends MapLayer> Array<T> getLayersByType(Class<T> type, Array<T> fill) {
-		fill.clear();
-		for (MapLayer layer : layers) {
-			if (type.isInstance(layer)) {
-				fill.add((T) layer);
-			}
-		}
-		return fill;
-	}
-
-	/**
-	 * @return iterator to set of layers
-	 */
-	@Override
-	public Iterator<MapLayer> iterator() {
-		return layers.iterator();
-	}
-	
-}
diff --git a/gdx/src/com/badlogic/gdx/maps/MapObject.java b/gdx/src/com/badlogic/gdx/maps/MapObject.java
deleted file mode 100644
index e0141d2..0000000
--- a/gdx/src/com/badlogic/gdx/maps/MapObject.java
+++ /dev/null
@@ -1,85 +0,0 @@
-package com.badlogic.gdx.maps;
-
-import com.badlogic.gdx.graphics.Color;
-
-/**
- * @brief Generic Map entity
- */
-public class MapObject {
-
-	private String name = "";
-	private float opacity = 1.0f;
-	private boolean visible = true;
-	private MapProperties properties = new MapProperties();
-	private Color color = Color.WHITE.cpy();
-	
-	/**
-	 * @return object's name
-	 */
-	public String getName() {
-		return name;
-	}
-	
-	/**
-	 * @param name new name for the object
-	 */
-	public void setName(String name) {
-		this.name = name;
-	}
-	
-	/**
-	 * @return object's color
-	 */
-	public Color getColor() {
-		return color;
-	}
-	
-	/**
-	 * @param color new color for the object
-	 */
-	public void setColor(Color color) {
-		this.color = color;
-	}
-
-	/**
-	 * @return object's opacity
-	 */
-	public float getOpacity() {
-		return opacity;
-	}
-
-	/**
-	 * @param opacity new opacity value for the object
-	 */
-	public void setOpacity(float opacity) {
-		this.opacity = opacity;
-	}
-	
-	/**
-	 * @return whether the object is visible or not
-	 */
-	public boolean getVisible() {
-		return visible;
-	}
-
-	/**
-	 * @param visible toggles object's visibility
-	 */
-	public void setVisible(boolean visible) {
-		this.visible = visible;
-	}
-	
-	/**
-	 * @return object's properties set
-	 */
-	public MapProperties getProperties() {
-		return properties;
-	}
-	
-	/**
-	 * Creates empty object 
-	 */
-	public MapObject() {
-		
-	}
-}
diff --git a/gdx/src/com/badlogic/gdx/maps/MapObjects.java b/gdx/src/com/badlogic/gdx/maps/MapObjects.java
deleted file mode 100644
index 80ecce5..0000000
--- a/gdx/src/com/badlogic/gdx/maps/MapObjects.java
+++ /dev/null
@@ -1,101 +0,0 @@
-package com.badlogic.gdx.maps;
-
-import java.util.Iterator;
-
-import com.badlogic.gdx.utils.Array;
-
-/**
- * @brief Collection of MapObject instances
- */
-public class MapObjects implements Iterable<MapObject> {
-
-	private Array<MapObject> objects;
-
-	/**
-	 * Creates and empty set of MapObject instances
-	 */
-	public MapObjects() {
-		objects = new Array<MapObject>();		
-	}
-	
-	/**
-	 * @param index
-	 * @return MapObject at index
-	 */
-	public MapObject getObject(int index) {
-		return objects.get(index);
-	}
-	
-	/**
-	 * @param name
-	 * @return name matching object, null if it´s not in the set
-	 */
-	public MapObject getObject(String name) {
-		for (MapObject object : objects) {
-			if (name.equals(object.getName())) {
-				return object;
-			}
-		}
-		return null;
-	}
-	
-	/**
-	 * @param object instance to be added to the collection
-	 */
-	public void addObject(MapObject object) {
-		this.objects.add(object);
-	}
-	
-	/**
-	 * @param index removes MapObject instance at index
-	 */
-	public void removeObject(int index) {
-		objects.removeIndex(index);
-	}
-	
-	/**
-	 * @param object instance to be removed
-	 */
-	public void removeObject(MapObject object) {
-		objects.removeValue(object, true);
-	}
-	
-	/**
-	 * @return number of objects in the collection
-	 */
-	public int getNumObjects() {
-		return objects.size;
-	}
-
-	/**
-	 * @param type class of the objects we want to retrieve
-	 * @return array filled with all the objects in the collection matching type
-	 */
-	public <T extends MapObject> Array<T> getObjectsByType(Class<T> type) {
-		return getObjectsByType(type, new Array<T>());	
-	}
-	
-	/**
-	 * @param type class of the objects we want to retrieve
-	 * @param fill collection to put the returned objects in
-	 * @return array filled with all the objects in the collection matching type
-	 */
-	public <T extends MapObject> Array<T> getObjectsByType(Class<T> type, Array<T> fill) {
-		fill.clear();
-		for (MapObject object : objects) {
-			if (type.isInstance(object)) {
-				fill.add((T) object);
-			}
-		}
-		return fill;
-	}
-
-	/**
-	 * @return iterator for the objects within the collection
-	 */
-	@Override
-	public Iterator<MapObject> iterator() {
-		return objects.iterator();
-	}
-	
-}
diff --git a/gdx/src/com/badlogic/gdx/maps/MapProperties.java b/gdx/src/com/badlogic/gdx/maps/MapProperties.java
deleted file mode 100644
index d3c7cf7..0000000
--- a/gdx/src/com/badlogic/gdx/maps/MapProperties.java
+++ /dev/null
@@ -1,463 +0,0 @@
-package com.badlogic.gdx.maps;
-
-import java.util.Iterator;
-
-import com.badlogic.gdx.graphics.Color;
-import com.badlogic.gdx.math.Vector2;
-import com.badlogic.gdx.utils.ObjectMap;
-
-/**
- * @brief Set of string indexed values representing map elements' properties, allowing
- * to retrieve, modify and add properties to the set.
- */
-public class MapProperties {
-
-	private ObjectMap<String, Object> properties;
-	
-	/**
-	 * Creates an empty properties set
-	 */
-	public MapProperties() {
-		properties = new ObjectMap<String, Object>();
-	}
-
-	/**
-	 * @param key property name 
-	 * @return true if and only if the property exists
-	 */
-	public boolean has(String key) {
-		return properties.containsKey(key);
-	}
-	
-	/**
-	 * @param key property name 
-	 * @return the value for that property if it exists, otherwise, null
-	 */
-	public Object get(String key) {
-		return properties.get(key);
-	}
-	
-	/**
-	 * @param key property name 
-	 * @return the value for that property if it exists and can be interpreted as a boolean, otherwise, null
-	 */
-	public Boolean getAsBoolean(String key) {
-		Object value = properties.get(key);
-		try {
-			return (Boolean) value;
-		} catch (ClassCastException e) {
-			if (value instanceof CharSequence) {
-				return Boolean.valueOf(value.toString());
-			} else {
-				return null;
-			}
-		}
-	}
-	
-	/**
-	 * @param key property name 
-	 * @return the value for that property if it exists and can be interpreted as a byte, otherwise, null
-	 */
-	public Byte getAsByte(String key) {
-		Object value = properties.get(key);
-		if (value != null) {
-			if (value instanceof Number) {
-				return ((Number) value).byteValue();
-			} else {
-				if (value instanceof CharSequence) {
-					try {
-						return Byte.valueOf(value.toString());	
-					} catch (NumberFormatException e2) {
-						return null;
-					}
-				} else {
-					return null;
-				}
-			}			
-		} else {
-			return null;			
-		}
-	}
-	
-	/**
-	 * @param key property name 
-	 * @return the value for that property if it exists and can be interpreted as a double, otherwise, null
-	 */
-	public Double getAsDouble(String key) {
-		Object value = properties.get(key);
-		if (value != null) {
-			if (value instanceof Number) {
-				return ((Number) value).doubleValue();
-			} else {
-				if (value instanceof CharSequence) {
-					try {
-						return Double.valueOf(value.toString());	
-					} catch (NumberFormatException e2) {
-						return null;
-					}
-				} else {
-					return null;
-				}
-			}
-		} else {
-			return null;			
-		}
-	}
-	
-	/**
-	 * @param key property name 
-	 * @return the value for that property if it exists and can be interpreted as a float, otherwise, null
-	 */
-	public Float getAsFloat(String key) {
-		Object value = properties.get(key);
-		if (value != null) {
-			if (value instanceof Number) {
-				return ((Number) value).floatValue();
-			} else {
-				if (value instanceof CharSequence) {
-					try {
-						return Float.valueOf(value.toString());	
-					} catch (NumberFormatException e2) {
-						return null;
-					}
-				} else {
-					return null;
-				}
-			}
-		} else {
-			return null;			
-		}
-	}
-	
-	/**
-	 * @param key property name 
-	 * @return the value for that property if it exists and can be interpreted as an integer, otherwise, null
-	 */
-	public Integer getAsInteger(String key) {
-		Object value = properties.get(key);
-		if (value != null) {
-			if (value instanceof Number) {
-				return ((Number) value).intValue();
-			} else {
-				if (value instanceof CharSequence) {
-					try {
-						return Integer.valueOf(value.toString());	
-					} catch (NumberFormatException e2) {
-						return null;
-					}
-				} else {
-					return null;
-				}
-			}
-		} else {
-			return null;			
-		}
-	}
-	
-	/**
-	 * @param key property name 
-	 * @return the value for that property if it exists and can be interpreted as a long, otherwise, null
-	 */
-	public Long getAsLong(String key) {
-		Object value = properties.get(key);
-		if (value != null) {
-			if (value instanceof Number) {
-				return ((Number) value).longValue();
-			} else {
-				if (value instanceof CharSequence) {
-					try {
-						return Long.valueOf(value.toString());	
-					} catch (NumberFormatException e2) {
-						return null;
-					}
-				} else {
-					return null;
-				}
-			}
-		} else {
-			return null;			
-		}
-	}
-	
-	/**
-	 * @param key property name 
-	 * @return the value for that property if it exists and can be interpreted as a short, otherwise, null
-	 */
-	public Short getAsShort(String key) {
-		Object value = properties.get(key);
-		if (value != null) {
-			if (value instanceof Number) {
-				return ((Number) value).shortValue();
-			} else {
-				if (value instanceof CharSequence) {
-					try {
-						return Short.valueOf(value.toString());	
-					} catch (NumberFormatException e2) {
-						return null;
-					}
-				} else {
-					return null;
-				}
-			}
-		} else {
-			return null;			
-		}
-	}
-	
-	/**
-	 * @param key property name 
-	 * @return the value for that property as a string if it exists, otherwise, null
-	 */
-	public String getAsString(String key) {
-		Object value = properties.get(key);
-		if (value != null) {
-			return value.toString();
-		} else {
-			return null;			
-		}
-	}
-	
-	/**
-	 * @param key property name 
-	 * @return the value for that property if it exists and it's a Vector2, otherwise, null
-	 */
-	public Vector2 getAsVector2(String key) {
-		Object value = properties.get(key);
-		
-		if (value != null && value instanceof Vector2) {
-			return (Vector2)value;
-		}
-		
-		return null;
-	}
-	
-	/**
-	 * @param key property name 
-	 * @return the value for that property if it exists and it's a Color, otherwise, null
-	 */
-	public Color getAsColor(String key) {
-		Object value = properties.get(key);
-		
-		if (value != null && value instanceof Color) {
-			return (Color)value;
-		}
-		
-		return null;
-	}
-	
-	/**
-	 * @param key property name 
-	 * @param defaultValue value to be returned in case of failure
-	 * @return the value for that property if it exists and it's a boolean, otherwise, defaultValue
-	 */
-	public Boolean getAsBoolean(String key, Boolean defaultValue) {
-		Boolean value = getAsBoolean(key);
-		return value == null? defaultValue : value;
-	}
-	
-	/**
-	 * @param key property name 
-	 * @param defaultValue value to be returned in case of failure
-	 * @return the value for that property if it exists and it's a byte, otherwise, defaultValue
-	 */
-	public Byte getAsByte(String key, Byte defaultValue) {
-		Byte value = getAsByte(key);
-		return value == null? defaultValue : value;
-	}
-	
-	/**
-	 * @param key property name 
-	 * @param defaultValue value to be returned in case of failure
-	 * @return the value for that property if it exists and it's a double, otherwise, defaultValue
-	 */
-	public Double getAsDouble(String key, Double defaultValue) {
-		Double value = getAsDouble(key);
-		return value == null? defaultValue : value;
-	}
-	
-	/**
-	 * @param key property name 
-	 * @param defaultValue value to be returned in case of failure
-	 * @return the value for that property if it exists and it's a float, otherwise, defaultValue
-	 */
-	public Float getAsFloat(String key, Float defaultValue) {
-		Float value = getAsFloat(key);
-		return value == null? defaultValue : value;
-	}
-	
-	/**
-	 * @param key property name 
-	 * @param defaultValue value to be returned in case of failure
-	 * @return the value for that property if it exists and it's an integer, otherwise, defaultValue
-	 */
-	public Integer getAsInteger(String key, Integer defaultValue) {
-		Integer value = getAsInteger(key);
-		return value == null? defaultValue : value;
-	}
-	
-	/**
-	 * @param key property name 
-	 * @param defaultValue value to be returned in case of failure
-	 * @return the value for that property if it exists and it's a long, otherwise, defaultValue
-	 */
-	public Long getAsLong(String key, Long defaultValue) {
-		Long value = getAsLong(key);
-		return value == null? defaultValue : value;
-	}
-	
-	/**
-	 * @param key property name 
-	 * @param defaultValue value to be returned in case of failure
-	 * @return the value for that property if it exists and it's a short, otherwise, defaultValue
-	 */
-	public Short getAsShort(String key, Short defaultValue) {
-		Short value = getAsShort(key);
-		return value == null? defaultValue : value;
-	}
-	
-	/**
-	 * @param key property name 
-	 * @param defaultValue value to be returned in case of failure
-	 * @return the value for that property as a string if it exists, otherwise, defaultValue
-	 */
-	public String getAsString(String key, String defaultValue) {
-		String value = getAsString(key);
-		return value == null? defaultValue : value;
-	}
-	
-	/**
-	 * @param key property name 
-	 * @param defaultValue value to be returned in case of failure
-	 * @return the value for that property if it exists and it's a Vector2, otherwise, defaultValue
-	 */
-	public Vector2 getAsVector2(String key, Vector2 defaultValue) {
-		Vector2 value = getAsVector2(key);
-		return value == null? defaultValue : value;
-	}
-	
-	/**
-	 * @param key property name 
-	 * @param defaultValue value to be returned in case of failure
-	 * @return the value for that property if it exists and it's a Color, otherwise, defaultValue
-	 */
-	public Color getAsColor(String key, Color defaultValue) {
-		Color value = getAsColor(key);
-		return value == null? defaultValue : value;
-	}
-	
-	/**
-	 * @param key property name
-	 * @param value value to be inserted or modified (if it already existed)
-	 */
-	public void put(String key, Boolean value) {
-		properties.put(key, value);
-	}
-	
-	/**
-	 * @param key property name
-	 * @param value value to be inserted or modified (if it already existed)
-	 */
-	public void put(String key, Byte value) {
-		properties.put(key, value);
-	}
-	
-	/**
-	 * @param key property name
-	 * @param value value to be inserted or modified (if it already existed)
-	 */
-	public void put(String key, Double value) {
-		properties.put(key, value);
-	}
-	
-	/**
-	 * @param key property name
-	 * @param value value to be inserted or modified (if it already existed)
-	 */
-	public void put(String key, Float value) {
-		properties.put(key, value);
-	}
-	
-	/**
-	 * @param key property name
-	 * @param value value to be inserted or modified (if it already existed)
-	 */
-	public void put(String key, Integer value) {
-		properties.put(key, value);
-	}
-	
-	/**
-	 * @param key property name
-	 * @param value value to be inserted or modified (if it already existed)
-	 */
-	public void put(String key, Long value) {
-		properties.put(key, value);
-	}
-	
-	/**
-	 * @param key property name
-	 * @param value value to be inserted or modified (if it already existed)
-	 */
-	public void put(String key, Short value) {
-		properties.put(key, value);
-	}
-	
-	/**
-	 * @param key property name
-	 * @param value value to be inserted or modified (if it already existed)
-	 */
-	public void put(String key, String value) {
-		properties.put(key, value);
-	}
-	
-	/**
-	 * @param key property name
-	 * @param value value to be inserted or modified (if it already existed)
-	 */
-	public void put(String key, Vector2 value) {
-		properties.put(key, value);
-	}
-	
-	/**
-	 * @param key property name
-	 * @param value value to be inserted or modified (if it already existed)
-	 */
-	public void put(String key, Color value) {
-		properties.put(key, value);
-	}
-	
-	/**
-	 * @param properties set of properties to be added
-	 */
-	public void putAll(MapProperties properties) {
-		this.properties.putAll(properties.properties);
-	}
-	
-	/**
-	 * @param key property name to be removed
-	 */
-	public void remove(String key) {
-		properties.remove(key);
-	}
-	
-	/**
-	 * Removes all properties
-	 */
-	public void clear() {
-		properties.clear();
-	}
-	
-	/**
-	 * @return iterator for the property names
-	 */
-	public Iterator<String> getKeys() {
-		return properties.keys();
-	}
-	
-	/**
-	 * @return iterator to properties' values
-	 */
-	public Iterator<Object> getValues() {
-		return properties.values();
-	}
-
-}
diff --git a/gdx/src/com/badlogic/gdx/maps/MapRenderer.java b/gdx/src/com/badlogic/gdx/maps/MapRenderer.java
deleted file mode 100644
index d79e183..0000000
--- a/gdx/src/com/badlogic/gdx/maps/MapRenderer.java
+++ /dev/null
@@ -1,42 +0,0 @@
-package com.badlogic.gdx.maps;
-
-import com.badlogic.gdx.graphics.OrthographicCamera;
-import com.badlogic.gdx.math.Matrix4;
-
-/**
- * @brief models a common way of rendering Map objects
- */
-public interface MapRenderer {
-	/**
-	 * Sets the projection matrix and viewbounds from the given camera. If
-	 * the camera changes, you have to call this method again. The viewbounds
-	 * are taken from the camera's position and viewport size as well as the 
-	 * scale. This method will only work if the camera's direction vector
-	 * is (0,0,-1) and its up vector is (0, 1, 0), which are the defaults. 
-	 * @param camera the {@link OrthographicCamera}
-	 */
-	public void setView(OrthographicCamera camera);
-	
-	/**
-	 * Sets the projection matrix for rendering, as well as the bounds of the map
-	 * which should be rendered. Make sure that the frustum spanned by the projection
-	 * matrix coincides with the viewbounds.
-	 * @param projectionMatrix
-	 * @param viewboundsX
-	 * @param viewboundsY
-	 * @param viewboundsWidth
-	 * @param viewboundsHeight
-	 */
-	public void setView(Matrix4 projectionMatrix, float viewboundsX, float viewboundsY, float viewboundsWidth, float viewboundsHeight);
-	
-	/**
-	 * Renders all the layers of a map.
-	 */
-	public void render();
-	
-	/** Renders the given layers of a map.
-	 * 
-	 * @param layers
-	 */
-	public void render(int[] layers);
-}
diff --git a/gdx/src/com/badlogic/gdx/maps/gleed/GleedMapLoader.java b/gdx/src/com/badlogic/gdx/maps/gleed/GleedMapLoader.java
deleted file mode 100644
index ee04f85..0000000
--- a/gdx/src/com/badlogic/gdx/maps/gleed/GleedMapLoader.java
+++ /dev/null
@@ -1,379 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-
-package com.badlogic.gdx.maps.gleed;
-
-import com.badlogic.gdx.Gdx;
-import com.badlogic.gdx.assets.AssetDescriptor;
-import com.badlogic.gdx.assets.AssetLoaderParameters;
-import com.badlogic.gdx.assets.AssetManager;
-import com.badlogic.gdx.assets.loaders.AsynchronousAssetLoader;
-import com.badlogic.gdx.assets.loaders.FileHandleResolver;
-import com.badlogic.gdx.graphics.Color;
-import com.badlogic.gdx.graphics.Texture;
-import com.badlogic.gdx.graphics.g2d.TextureAtlas;
-import com.badlogic.gdx.graphics.g2d.TextureRegion;
-import com.badlogic.gdx.maps.Map;
-import com.badlogic.gdx.maps.MapLayer;
-import com.badlogic.gdx.maps.MapObject;
-import com.badlogic.gdx.maps.MapProperties;
-import com.badlogic.gdx.maps.objects.CircleMapObject;
-import com.badlogic.gdx.maps.objects.PolygonMapObject;
-import com.badlogic.gdx.maps.objects.PolylineMapObject;
-import com.badlogic.gdx.maps.objects.RectangleMapObject;
-import com.badlogic.gdx.maps.objects.TextureMapObject;
-import com.badlogic.gdx.math.Polygon;
-import com.badlogic.gdx.math.Vector2;
-import com.badlogic.gdx.utils.Array;
-import com.badlogic.gdx.utils.GdxRuntimeException;
-import com.badlogic.gdx.utils.Logger;
-import com.badlogic.gdx.utils.XmlReader;
-import com.badlogic.gdx.utils.XmlReader.Element;
-
-/**
- * @author David Saltares
- * 
- * @brief asynchronously Loads GLEED formatted maps 
- *
- */
-public class GleedMapLoader  extends AsynchronousAssetLoader<Map, GleedMapLoader.Parameters > {
-
-	static public class Parameters extends AssetLoaderParameters<Map> {
-	}
-	
-	private String atlasFile = "";
-	private TextureAtlas atlas = null;
-	private String pathRoot = "data";
-	private Map map = null;
-	private AssetManager assetManager = null;
-	
-	/**
-	 * @param resolver
-	 */
-	public GleedMapLoader (FileHandleResolver resolver) {
-		super(resolver);
-	}
-	
-	/**
-	 * Asynchronously loads a GleedMap
-	 * 
-	 * @params manager asset manager to load the map
-	 * @params fileName gleed map file
-	 * @params parameters additional parameters, not used for now
-	 */
-	@Override
-	public void loadAsync (AssetManager manager, String fileName, Parameters parameter) {
-		assetManager = manager;
-		
-		try {
-			XmlReader reader = new XmlReader();
-			Element root = reader.parse(Gdx.files.internal(fileName));
-			
-			if (map == null) {
-				map = new Map();
-				loadProperties(root, map.getProperties());
-			}
-			
-			if (!atlasFile.isEmpty()) {
-				atlas = manager.get(atlasFile, TextureAtlas.class);
-			}
-			
-			Array<Element> layerElements = root.getChildByName("Layers").getChildrenByName("Layer");
-			
-			for (int i = 0; i < layerElements.size; ++i) {
-				Element layerElement = layerElements.get(i);
-				loadLayer(layerElement);
-			}
-			
-		} catch (Exception e) {
-			throw new GdxRuntimeException("Couldn't load Gleed map '" + fileName + "'", e);
-		}
-	}
-	
-	/**
-	 * Synchronously loads a GleedMap
-	 * 
-	 * @params manager asset manager to load the map
-	 * @params fileName gleed map file
-	 * @params parameters additional parameters, not used for now
-	 * 
-	 * @return gleed map
-	 */
-	@Override
-	public Map loadSync (AssetManager manager, String fileName, Parameters parameter) {
-		return map;
-	}
-	
-	/**
-	 * @params fileName gleed map file
-	 * @params parameters additional parameters, not used for now
-	 * 
-	 * @return map dependencies (either texture atlas or several textures)
-	 */
-	@Override
-	public Array<AssetDescriptor> getDependencies (String fileName, Parameters parameter) {
-		Array<AssetDescriptor> dependencies = new Array<AssetDescriptor>();
-		
-		try {
-			XmlReader reader = new XmlReader();
-			Element root = reader.parse(Gdx.files.internal(fileName));
-			
-			if (map == null) {
-				map = new Map();
-				
-				loadProperties(root, map.getProperties());
-			}
-			
-			MapProperties properties = map.getProperties();
-			
-			atlasFile = properties.getAsString("atlas", "");
-			pathRoot = properties.getAsString("assetRoot", "data");
-			
-			if (!atlasFile.isEmpty()) {
-				dependencies.add(new AssetDescriptor(atlasFile, TextureAtlas.class));
-			}
-			else {
-				Array<Element> elements = root.getChildrenByNameRecursively("Item");
-				
-				for (int i = 0; i < elements.size; ++i) {
-					Element element = elements.get(i);
-					
-					if (element.getAttribute("xsi:type", "").equals("TextureItem")) {
-						String[] pathParts = element.getChildByName("texture_filename").getText().split("\\\\");
-						dependencies.add(new AssetDescriptor(pathRoot + "/" + pathParts[pathParts.length - 1], Texture.class));
-					}
-				}
-			}
-			
-		} catch (Exception e) {
-			throw new GdxRuntimeException("Couldn't load dependencies of Gleed map '" + fileName + "'", e);
-		}
-		
-		return dependencies;
-	}
-	
-	private Color loadColor(Element colorElement) {
-		return new Color(Float.parseFloat(colorElement.getChildByName("R").getText()) / 255.0f,
-							  Float.parseFloat(colorElement.getChildByName("G").getText()) / 255.0f,
-							  Float.parseFloat(colorElement.getChildByName("B").getText()) / 255.0f,
-							  Float.parseFloat(colorElement.getChildByName("A").getText()) / 255.0f);
-	}
-	
-	private void loadProperties(Element element, MapProperties properties) {
-		Element customProperty = element.getChildByName("CustomProperties");
-		 
-		if (customProperty != null) {
-			Array<Element> propertiesElements = customProperty.getChildrenByName("Property");
-			
-			for (int i = 0; i < propertiesElements.size; ++i) {
-				Element property = propertiesElements.get(i);
-				String type = property.getAttribute("Type");
-				
-				if (type == null) {
-					continue;
-				}
-				
-				if (type.equals("string")) {
-					properties.put(property.getAttribute("Name"), property.getChildByName("string").getText());
-				}
-				else if (type.equals("bool")) {
-					properties.put(property.getAttribute("Name"), Boolean.parseBoolean(property.getChildByName("boolean").getText()));
-				}
-				else if (type.equals("Vector2")) {
-					Element vectorElement = property.getChildByName("Vector2");
-					Vector2 v = new Vector2(Float.parseFloat(vectorElement.getChildByName("X").getText()),
-													Float.parseFloat(vectorElement.getChildByName("Y").getText()));
-					
-					properties.put(property.getAttribute("Name"), v);
-				}
-				else if (type.equals("Color")) {
-					Element colorElement = property.getChildByName("Color");
-					Color c = new Color(Float.parseFloat(colorElement.getChildByName("R").getText()) / 255.0f,
-										Float.parseFloat(colorElement.getChildByName("G").getText()) / 255.0f,
-										Float.parseFloat(colorElement.getChildByName("B").getText()) / 255.0f,
-										Float.parseFloat(colorElement.getChildByName("A").getText()) / 255.0f);
-					
-					properties.put(property.getAttribute("Name"), c);
-				}
-			}
-		}
-	}
-	
-	private void loadLayer(Element element) {
-		MapLayer layer = new MapLayer();
-		
-		loadProperties(element, layer.getProperties());
-		
-		layer.setName(element.getAttribute("Name", ""));
-		layer.setVisible(Boolean.parseBoolean(element.getAttribute("Visible", "true")));
-		
-		Array<Element> items = element.getChildByName("Items").getChildrenByName("Item");
-		
-		for (int i = 0; i < items.size; ++i) {
-			Element item = items.get(i);
-			String type = item.getAttribute("xsi:type");
-			MapObject mapObject;;
-			
-			if (type.equals("TextureItem")) {
-				mapObject = loadTexture(item);
-			}
-			else if (type.equals("PathItem")) {
-				if (isPolygon(item)) {
-					mapObject = loadPolygon(item);
-				}
-				else {
-					mapObject = loadPolyline(item);
-				}
-			}
-			else if (type.equals("RectangleItem")) {
-				mapObject = loadRectangle(item);
-				
-			}
-			else if (type.equals("CircleItem")) {
-				mapObject = loadCircle(item);
-			}
-			else {
-				continue;
-			}
-			
-			layer.getObjects().addObject(mapObject);
-		}
-		
-		map.getLayers().addLayer(layer);
-	}
-	
-	private void loadObject(Element element, MapObject mapObject) {
-		mapObject.setName(element.getAttribute("Name", ""));
-		mapObject.setVisible(Boolean.parseBoolean(element.getAttribute("Visible", "true")));
-		loadProperties(element, mapObject.getProperties());
-	}
-	
-	private TextureMapObject loadTexture(Element item) {
-		
-		TextureMapObject texture = new TextureMapObject();
-		
-		loadObject(item, texture);
-		
-		texture.setColor(loadColor(item.getChildByName("TintColor")));
-		
-		TextureRegion region;
-		
-		if (atlasFile.isEmpty()) {
-			String[] pathParts = item.getChildByName("texture_filename").getText().split("\\\\");
-			region = new TextureRegion(assetManager.get(pathRoot + "/" + pathParts[pathParts.length - 1], Texture.class));
-		}
-		else {
-			String[] assetParts = item.getChildByName("asset_name").getText().split("\\\\");
-			region = new TextureRegion(atlas.findRegion(assetParts[assetParts.length - 1]));
-		}
-		
-		region.flip(Boolean.parseBoolean(item.getChildByName("FlipHorizontally").getText()),
-						Boolean.parseBoolean(item.getChildByName("FlipVertically").getText()));
-		
-		texture.setTextureRegion(region);
-		
-		Element positionElement = item.getChildByName("Position");
-		texture.setX(Float.parseFloat(positionElement.getChildByName("X").getText()));
-		texture.setY(-Float.parseFloat(positionElement.getChildByName("Y").getText()));
-		
-		Element origin = item.getChildByName("Origin");
-		texture.setOriginX(Float.parseFloat(origin.getChildByName("X").getText()));
-		texture.setOriginY(Float.parseFloat(origin.getChildByName("Y").getText()));
-		
-		Element scale = item.getChildByName("Scale");
-		texture.setScaleX(Float.parseFloat(scale.getChildByName("X").getText()));
-		texture.setScaleY(Float.parseFloat(scale.getChildByName("Y").getText()));
-		
-		texture.setRotation(Float.parseFloat(item.getChildByName("Rotation").getText()));
-		
-		return texture;
-	}
-	
-	private CircleMapObject loadCircle(Element item) {
-		CircleMapObject circle = new CircleMapObject();
-		
-		loadObject(item, circle);
-		
-		circle.setColor(loadColor(item.getChildByName("FillColor")));
-		
-		Element position = item.getChildByName("Position");
-		circle.getCircle().set(Float.parseFloat(position.getChildByName("X").getText()),
-									  -Float.parseFloat(position.getChildByName("Y").getText()),
-									  Float.parseFloat(item.getChildByName("Radius").getText()));
-		
-		return circle;
-	}
-	
-	private RectangleMapObject loadRectangle(Element item) {
-		RectangleMapObject rectangle = new RectangleMapObject();
-		
-		loadObject(item, rectangle);
-		
-		rectangle.setColor(loadColor(item.getChildByName("FillColor")));
-		
-		Element position = item.getChildByName("Position");
-		rectangle.getRectangle().set(Float.parseFloat(position.getChildByName("X").getText()),
-											  -Float.parseFloat(position.getChildByName("Y").getText()),
-											  Float.parseFloat(item.getChildByName("Width").getText()),
-											  Float.parseFloat(item.getChildByName("Height").getText()));
-		
-		return rectangle;
-	}
-	
-	private PolygonMapObject loadPolygon(Element item) {
-		PolygonMapObject polygon = new PolygonMapObject();
-		
-		loadObject(item, polygon);
-		
-		Array<Element> pointElements = item.getChildByName("WorldPoints").getChildrenByName("Vector2");
-		float[] vertices = new float[pointElements.size * 2];
-		
-		for (int j = 0; j < pointElements.size; ++j) {
-			Element pointElement = pointElements.get(j);
-			vertices[j * 2] = Float.parseFloat(pointElement.getChildByName("X").getText());
-			vertices[j * 2 + 1] = -Float.parseFloat(pointElement.getChildByName("Y").getText());
-		}
-		
-		polygon.setPolygon(new Polygon(vertices));
-		polygon.setColor(loadColor(item.getChildByName("LineColor")));
-		
-		return polygon;
-	}
-	
-	private PolylineMapObject loadPolyline(Element item) {
-		PolylineMapObject polyline = new PolylineMapObject();
-		
-		loadObject(item, polyline);
-		
-		Array<Element> pointElements = item.getChildByName("WorldPoints").getChildrenByName("Vector2");
-		float[] vertices = new float[pointElements.size * 2];
-		
-		for (int j = 0; j < pointElements.size; ++j) {
-			Element pointElement = pointElements.get(j);
-			vertices[j * 2] = Float.parseFloat(pointElement.getChildByName("X").getText());
-			vertices[j * 2 + 1] = -Float.parseFloat(pointElement.getChildByName("Y").getText());
-		}
-		
-		polyline.setPolygon(new Polygon(vertices));
-		polyline.setColor(loadColor(item.getChildByName("LineColor")));
-		
-		return polyline;
-	}
-	
-	private boolean isPolygon(Element item) {
-		return Boolean.parseBoolean(item.getChildByName("IsPolygon").getText());
-	}
-}
diff --git a/gdx/src/com/badlogic/gdx/maps/gleed/GleedMapRenderer.java b/gdx/src/com/badlogic/gdx/maps/gleed/GleedMapRenderer.java
deleted file mode 100644
index 72cf396..0000000
--- a/gdx/src/com/badlogic/gdx/maps/gleed/GleedMapRenderer.java
+++ /dev/null
@@ -1,246 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-
-package com.badlogic.gdx.maps.gleed;
-
-import com.badlogic.gdx.Gdx;
-import com.badlogic.gdx.graphics.OrthographicCamera;
-import com.badlogic.gdx.graphics.g2d.SpriteBatch;
-import com.badlogic.gdx.graphics.g2d.TextureRegion;
-import com.badlogic.gdx.maps.Map;
-import com.badlogic.gdx.maps.MapLayer;
-import com.badlogic.gdx.maps.MapLayers;
-import com.badlogic.gdx.maps.MapObject;
-import com.badlogic.gdx.maps.MapObjects;
-import com.badlogic.gdx.maps.MapRenderer;
-import com.badlogic.gdx.maps.objects.TextureMapObject;
-import com.badlogic.gdx.math.MathUtils;
-import com.badlogic.gdx.math.Matrix4;
-import com.badlogic.gdx.math.Rectangle;
-import com.badlogic.gdx.math.Vector2;
-import com.badlogic.gdx.utils.Array;
-import com.badlogic.gdx.utils.Disposable;
-
-/**
- * @author David Saltares Márquez
- * 
- * @brief Renderer for GLEED maps
- */
-public class GleedMapRenderer implements MapRenderer, Disposable {
-	private Map map;
-	private SpriteBatch batch;
-	private boolean ownSpriteBatch;
-	private float units;
-	
-	private Rectangle box = new Rectangle();
-	private Rectangle viewBounds = new Rectangle();
-	private Vector2 a = new Vector2();
-	private Vector2 b = new Vector2();
-	private Vector2 c = new Vector2();
-	private Vector2 d = new Vector2();
-	
-	/**
-	 * @param map map data that will be used to render
-	 * 
-	 * Uses its own SpriteBatch
-	 */
-	public GleedMapRenderer(Map map) {
-		this(map, new SpriteBatch(), 1.0f);
-		ownSpriteBatch = true;
-	}
-	
-	/**
-	 * @param map map data that will be used to render
-	 * @param batch sprite batch to render the map textures
-	 * @param units metres per pixel (used to scale textures, defaults to 1.0f)
-	 */
-	public GleedMapRenderer(Map map, SpriteBatch batch, float units) {
-		this.map = map;
-		this.units = units;
-		if (batch != null) {
-			this.batch = batch;
-			ownSpriteBatch = false;
-		}
-		else
-		{
-			batch = new SpriteBatch();
-			ownSpriteBatch = true;
-		}
-	}
-	
-	@Override
-	public void setView(OrthographicCamera camera) {
-		batch.setProjectionMatrix(camera.combined);
-		float width = camera.viewportWidth * camera.zoom;
-		float height = camera.viewportHeight * camera.zoom;
-		viewBounds.set(camera.position.x - width / 2, camera.position.y - height / 2, width, height);
-	}
-	
-	@Override
-	public void setView (Matrix4 projection, float x, float y, float width, float height) {
-		batch.setProjectionMatrix(projection);
-		viewBounds.set(x, y, width, height);
-	}
-	
-	@Override
-	public void render () {
-		batch.begin();
-		batch.enableBlending();
-		MapLayers layers = map.getLayers();
-		for (MapLayer layer : layers) {
-			renderLayer(layer);
-		}
-		batch.end();
-	}
-
-	@Override
-	public void render (int[] layers) {
-		batch.begin();
-		batch.enableBlending();
-		MapLayers mapLayers = map.getLayers();
-		
-		for (int i = 0; i < layers.length; i++) {
-			renderLayer(mapLayers.getLayer(i));
-		}
-		batch.end();
-	}
-	
-	@Override
-	public void dispose () {
-		if (ownSpriteBatch) {
-			batch.dispose();
-		}
-	}
-	
-	private void renderLayer(MapLayer layer) {
-		
-		if (!layer.getVisible()) {
-			return;
-		}
-		
-		MapObjects objects = layer.getObjects();
-		int numObjects = objects.getNumObjects();
-		
-		for (int j = 0; j < numObjects; ++j) {
-			MapObject mapObject = objects.getObject(j);
-			
-			if (mapObject == null || !mapObject.getVisible()) {
-				continue;
-			}
-			
-			if (!(mapObject instanceof TextureMapObject)) {
-				continue;
-			}
-			
-			TextureMapObject texture = (TextureMapObject)mapObject;
-			
-			setBounds(texture);
-
-			// If the image is in the frustum, draw it (culling)
-			if (viewBounds.overlaps(box) ||
-				 viewBounds.contains(box) ||
-				 box.contains(viewBounds)) {
-			
-				// Skip complex rendering if there is no scaling nor rotation
-				if (texture.getRotation() == 0 &&
-					 texture.getScaleX() == 1.0f &&
-					 texture.getScaleY() == 1.0f) {
-					
-					batch.draw(texture.getTextureRegion(),
-									 texture.getX() * units - texture.getOriginX(),
-									 texture.getY() * units - texture.getOriginY());
-				}
-				else {
-					batch.draw(texture.getTextureRegion(),
-									 texture.getX() * units - texture.getOriginX(),
-									 texture.getY() * units - texture.getOriginY(),
-									 texture.getOriginX(),
-									 texture.getOriginY(),
-									 texture.getTextureRegion().getRegionWidth(),
-									 texture.getTextureRegion().getRegionHeight(),
-									 texture.getScaleX() * units,
-									 texture.getScaleY() * units,
-									 -MathUtils.radiansToDegrees * texture.getRotation());
-				}
-			}
-		}
-	}
-
-	private void setBounds(TextureMapObject texture) {
-		TextureRegion region = texture.getTextureRegion();
-		
-		float x1 = -region.getRegionWidth() * 0.5f * units * texture.getScaleX();
-		float x2 = -x1;
-		float y1 = -region.getRegionHeight() * 0.5f * units * texture.getScaleY();
-		float y2 = -y1;
-		
-		float rotation = texture.getRotation();
-		
-		// Skip sin and cos calculations if we don't have rotation
-		if (rotation == 0.0f) {
-			a.x = x1;
-			a.y = y1;
-			
-			b.x = x2;
-			b.y = y1;
-			
-			c.x = x2;
-			c.y = y2;
-			
-			d.x = x1;
-			d.y = y2;
-		}
-		else {
-			float sin = (float)Math.sin(rotation);
-			float cos = (float)Math.cos(rotation);
-			
-			a.x = x1 * cos - y1 * sin;
-			a.y = x1 * sin - y1 * cos;
-			
-			b.x = x2 * cos - y1 * sin;
-			b.y = x2 * sin - y1 * cos;
-			
-			c.x = x2 * cos - y2 * sin;
-			c.y = x2 * sin - y2 * cos;
-			
-			d.x = x1 * cos - y2 * sin;
-			d.y = x1 * sin - y2 * cos;
-		}
-		
-		
-		float posX = texture.getX();
-		float posY = texture.getY();
-		
-		a.x += posX * units;
-		a.y += posY * units;
-		b.x += posX * units;
-		b.y += posY * units;
-		c.x += posX * units;
-		c.y += posY * units;
-		d.x += posX * units;
-		d.y += posY * units;
-		
-		float minX = Math.min(Math.min(Math.min(a.x, b.x), c.x), d.x);
-		float minY = Math.min(Math.min(Math.min(a.y, b.y), c.y), d.y);
-		float maxX = Math.max(Math.max(Math.max(a.x, b.x), c.x), d.x);
-		float maxY = Math.max(Math.max(Math.max(a.y, b.y), c.y), d.y);
-		
-		box.x = minX;
-		box.y = minY;
-		box.width = maxX - minX;
-		box.height = maxY - minY;
-	}
-}
diff --git a/gdx/src/com/badlogic/gdx/maps/objects/CircleMapObject.java b/gdx/src/com/badlogic/gdx/maps/objects/CircleMapObject.java
deleted file mode 100644
index cdc4b71..0000000
--- a/gdx/src/com/badlogic/gdx/maps/objects/CircleMapObject.java
+++ /dev/null
@@ -1,38 +0,0 @@
-package com.badlogic.gdx.maps.objects;
-
-import com.badlogic.gdx.maps.MapObject;
-import com.badlogic.gdx.math.Circle;
-
-/**
- * @brief represents circle shaped map objects
- */
-public class CircleMapObject extends MapObject {
-	
-	private Circle circle;
-	
-	/**
-	 * @return circle shape
-	 */
-	public Circle getCircle() {
-		return circle;
-	}
-	
-	/**
-	 * Creates a circle map object at (0,0) with r=1.0
-	 */
-	public CircleMapObject() {
-		this(0.0f, 0.0f, 1.0f);
-	}
-	
-	/**
-	 * Creates circle map object
-	 * 
-	 * @param x
-	 * @param y
-	 * @param radius
-	 */
-	public CircleMapObject(float x, float y, float radius) {
-		super();
-		circle = new Circle(x, y, radius);
-	}
-}
diff --git a/gdx/src/com/badlogic/gdx/maps/objects/PolygonMapObject.java b/gdx/src/com/badlogic/gdx/maps/objects/PolygonMapObject.java
deleted file mode 100644
index e7ec6fb..0000000
--- a/gdx/src/com/badlogic/gdx/maps/objects/PolygonMapObject.java
+++ /dev/null
@@ -1,44 +0,0 @@
-/**
- * 
- */
-package com.badlogic.gdx.maps.objects;
-
-import com.badlogic.gdx.maps.MapObject;
-import com.badlogic.gdx.math.Polygon;
-
-/**
- * @brief represents polygon map objects
- */
-public class PolygonMapObject extends MapObject {
-
-	private Polygon polygon;
-	
-	/**
-	 * @return polygon shape
-	 */
-	public Polygon getPolygon() {
-		return polygon;
-	}
-	
-	/**
-	 * @param polygon new object's polygon shape
-	 */
-	public void setPolygon(Polygon polygon) {
-		this.polygon = polygon;
-	}
-	
-	/**
-	 * Creates empty polygon map object
-	 */
-	public PolygonMapObject() {
-		this(new float[0]);
-	}
-	
-	/**
-	 * @param vertices polygon defining vertices (at least 3)
-	 */
-	public PolygonMapObject(float[] vertices) {
-		super();
-		polygon = new Polygon(vertices);
-	}
-}
diff --git a/gdx/src/com/badlogic/gdx/maps/objects/PolylineMapObject.java b/gdx/src/com/badlogic/gdx/maps/objects/PolylineMapObject.java
deleted file mode 100644
index 816c753..0000000
--- a/gdx/src/com/badlogic/gdx/maps/objects/PolylineMapObject.java
+++ /dev/null
@@ -1,42 +0,0 @@
-package com.badlogic.gdx.maps.objects;
-
-import com.badlogic.gdx.maps.MapObject;
-import com.badlogic.gdx.math.Polygon;
-
-/**
- * @brief Represents polyline map objects
- */
-public class PolylineMapObject extends MapObject {
-
-	private Polygon polygon;
-	
-	/**
-	 * @return polygon shape
-	 */
-	public Polygon getPolygon() {
-		return polygon;
-	}
-	
-	/**
-	 * @param polygon new object's polygon shape
-	 */
-	public void setPolygon(Polygon polygon) {
-		this.polygon = polygon;
-	}
-	
-	/**
-	 * Creates empty polyline 
-	 */
-	public PolylineMapObject() {
-		this(new float[0]);
-	}
-	
-	/**
-	 * @param vertices polyline defining vertices (at least 3 because a polygon is used to represent it)
-	 */
-	public PolylineMapObject(float[] vertices) {
-		super();
-		polygon = new Polygon(vertices);
-	}
-
-}
diff --git a/gdx/src/com/badlogic/gdx/maps/objects/RectangleMapObject.java b/gdx/src/com/badlogic/gdx/maps/objects/RectangleMapObject.java
deleted file mode 100644
index 6f73e38..0000000
--- a/gdx/src/com/badlogic/gdx/maps/objects/RectangleMapObject.java
+++ /dev/null
@@ -1,38 +0,0 @@
-package com.badlogic.gdx.maps.objects;
-
-import com.badlogic.gdx.maps.MapObject;
-import com.badlogic.gdx.math.Rectangle;
-
-/**
- * @brief Represents rectangle shaped map object
- */
-public class RectangleMapObject extends MapObject {
-	
-	private Rectangle rectangle;
-	
-	/**
-	 * @return rectangle shape
-	 */
-	public Rectangle getRectangle() {
-		return rectangle;
-	}
-	
-	/**
-	 * Creates a rectangle object which lower left corner is at (0, 0) with width=1 and height=1
-	 */
-	public RectangleMapObject() {
-		this(0.0f, 0.0f, 1.0f, 1.0f);
-	}
-	
-	/**
-	 * @param x
-	 * @param y
-	 * @param width
-	 * @param height
-	 */
-	public RectangleMapObject(float x, float y, float width, float height) {
-		super();
-		rectangle = new Rectangle(x, y, width, height);
-	}
-	
-}
diff --git a/gdx/src/com/badlogic/gdx/maps/objects/TextureMapObject.java b/gdx/src/com/badlogic/gdx/maps/objects/TextureMapObject.java
deleted file mode 100644
index 5f74e90..0000000
--- a/gdx/src/com/badlogic/gdx/maps/objects/TextureMapObject.java
+++ /dev/null
@@ -1,148 +0,0 @@
-package com.badlogic.gdx.maps.objects;
-
-import com.badlogic.gdx.graphics.g2d.TextureRegion;
-import com.badlogic.gdx.maps.MapObject;
-
-/**
- * @brief Represents a map object containing a texture (region)
- */
-public class TextureMapObject extends MapObject {
-	
-	private float x = 0.0f;
-	private float y = 0.0f;
-	private float originX = 0.0f;
-	private float originY = 0.0f;
-	private float scaleX = 1.0f;
-	private float scaleY = 1.0f;
-	private float rotation = 0.0f;
-	private TextureRegion textureRegion = null;
-
-	/**
-	 * @return x axis coordinate
-	 */
-	public float getX() {
-		return x;
-	}
-
-	/**
-	 * @param x new x axis coordinate
-	 */
-	public void setX(float x) {
-		this.x = x;
-	}
-
-	/**
-	 * @return y axis coordinate
-	 */
-	public float getY() {
-		return y;
-	}
-
-	/**
-	 * @param y new y axis coordinate
-	 */
-	public void setY(float y) {
-		this.y = y;
-	}
-	
-	/**
-	 * @return x axis origin
-	 */
-	public float getOriginX() {
-		return originX;
-	}
-
-	/**
-	 * @param x new x axis origin
-	 */
-	public void setOriginX(float x) {
-		this.originX = x;
-	}
-
-	/**
-	 * @return y axis origin
-	 */
-	public float getOriginY() {
-		return originY;
-	}
-
-	/**
-	 * @param y new axis origin
-	 */
-	public void setOriginY(float y) {
-		this.originY = y;
-	}
-	
-	/**
-	 * @return x axis scale
-	 */
-	public float getScaleX() {
-		return scaleX;
-	}
-
-	/**
-	 * @param x new x axis scale 
-	 */
-	public void setScaleX(float x) {
-		this.scaleX = x;
-	}
-
-	/**
-	 * @return y axis scale
-	 */
-	public float getScaleY() {
-		return scaleY;
-	}
-
-	/**
-	 * @param y new y axis scale
-	 */
-	public void setScaleY(float y) {
-		this.scaleY = y;
-	}
-	
-	/**
-	 * @return texture's rotation in radians
-	 */
-	public float getRotation() {
-		return rotation;
-	}
-	
-	/**
-	 * @param rotation new texture's rotation in radians
-	 */
-	public void setRotation(float rotation) {
-		this.rotation = rotation;
-	}
-
-	/**
-	 * @return region
-	 */
-	public TextureRegion getTextureRegion() {
-		return textureRegion;
-	}
-	
-	/**
-	 * @param region new texture region
-	 */
-	public void setTextureRegion(TextureRegion region) {
-		textureRegion = region;
-	}
-	
-	/**
-	 * Creates empty texture map object
-	 */
-	public TextureMapObject() {
-		this(null);
-	}
-	
-	/**
-	 * Creates texture map object with the given region
-	 * 
-	 * @param textureRegion
-	 */
-	public TextureMapObject(TextureRegion textureRegion) {
-		super();
-		this.textureRegion = textureRegion;
-	}
-}
diff --git a/gdx/src/com/badlogic/gdx/maps/tiled/TideMapLoader.java b/gdx/src/com/badlogic/gdx/maps/tiled/TideMapLoader.java
deleted file mode 100644
index d454fea..0000000
--- a/gdx/src/com/badlogic/gdx/maps/tiled/TideMapLoader.java
+++ /dev/null
@@ -1,287 +0,0 @@
-package com.badlogic.gdx.maps.tiled;
-
-import java.io.IOException;
-import java.util.StringTokenizer;
-
-import com.badlogic.gdx.assets.AssetDescriptor;
-import com.badlogic.gdx.assets.AssetLoaderParameters;
-import com.badlogic.gdx.assets.AssetManager;
-import com.badlogic.gdx.assets.loaders.FileHandleResolver;
-import com.badlogic.gdx.assets.loaders.SynchronousAssetLoader;
-import com.badlogic.gdx.assets.loaders.resolvers.InternalFileHandleResolver;
-import com.badlogic.gdx.files.FileHandle;
-import com.badlogic.gdx.graphics.Texture;
-import com.badlogic.gdx.graphics.g2d.TextureRegion;
-import com.badlogic.gdx.maps.ImageResolver;
-import com.badlogic.gdx.maps.MapProperties;
-import com.badlogic.gdx.maps.ImageResolver.AssetManagerImageResolver;
-import com.badlogic.gdx.maps.ImageResolver.DirectImageResolver;
-import com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile;
-import com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile;
-import com.badlogic.gdx.utils.Array;
-import com.badlogic.gdx.utils.GdxRuntimeException;
-import com.badlogic.gdx.utils.ObjectMap;
-import com.badlogic.gdx.utils.XmlReader;
-import com.badlogic.gdx.utils.XmlReader.Element;
-
-public class TideMapLoader extends SynchronousAssetLoader<TiledMap, TideMapLoader.Parameters> {
-
-	public static class Parameters extends AssetLoaderParameters<TiledMap> {
-		
-	}
-	
-	private XmlReader xml = new XmlReader();
-	private Element root;
-	
-	public TideMapLoader() {
-		super(new InternalFileHandleResolver());
-	}
-	
-	public TideMapLoader (FileHandleResolver resolver) {
-		super(resolver);
-	}
-
-	public TiledMap load (String fileName) {
-		try {
-			FileHandle tideFile = resolve(fileName);
-			root = xml.parse(tideFile);
-			ObjectMap<String, Texture> textures = new ObjectMap<String, Texture>();
-			for(FileHandle textureFile: loadTileSheets(root, tideFile)) {
-				textures.put(textureFile.path(), new Texture(textureFile));
-			}
-			DirectImageResolver imageResolver = new DirectImageResolver(textures);
-			TiledMap map = loadMap(root, tideFile, imageResolver);
-			map.setOwnedTextures(textures.values().toArray());
-			return map;
-		} catch(IOException e) {
-			throw new GdxRuntimeException("Couldn't load tilemap '" + fileName + "'", e);
-		}
-
-	}
-	
-	@Override
-	public TiledMap load (AssetManager assetManager, String fileName, Parameters parameter) {
-		FileHandle tideFile = resolve(fileName);
-		try {
-			return loadMap(root, tideFile, new AssetManagerImageResolver(assetManager));
-		} catch (Exception e) {
-			throw new GdxRuntimeException("Couldn't load tilemap '" + fileName + "'", e);
-		}
-	}
-
-	@Override
-	public Array<AssetDescriptor> getDependencies (String fileName, Parameters parameter) {
-		Array<AssetDescriptor> dependencies = new Array<AssetDescriptor>();
-		try {
-			FileHandle tmxFile = resolve(fileName);
-			root = xml.parse(tmxFile);
-			for(FileHandle image: loadTileSheets(root, tmxFile)) {
-				dependencies.add(new AssetDescriptor(image.path(), Texture.class));
-			}
-			return dependencies;
-		} catch (IOException e) {
-			throw new GdxRuntimeException("Couldn't load tilemap '" + fileName + "'", e);
-		}
-	}
-	
-	/**
-	 * Loads the map data, given the XML root element and an {@link ImageResolver} used
-	 * to return the tileset Textures
-	 * @param root the XML root element 
-	 * @param tmxFile the Filehandle of the tmx file
-	 * @param imageResolver the {@link ImageResolver}
-	 * @return the {@link TiledMap}
-	 */
-	private TiledMap loadMap(Element root, FileHandle tmxFile, ImageResolver imageResolver) {
-		TiledMap map = new TiledMap();
-		Element properties = root.getChildByName("properties");
-		if (properties != null) {
-			loadProperties(map.getProperties(), properties);
-		}
-		Element tilesheets = root.getChildByName("TileSheets");
-		for (Element tilesheet : tilesheets.getChildrenByName("TileSheet")) {
-			loadTileSheet(map, tilesheet, tmxFile, imageResolver);
-		}
-		Element layers = root.getChildByName("Layers");
-		for (Element layer : layers.getChildrenByName("Layer")) {
-			loadLayer(map, layer);
-		}
-		return map;
-	}
-	
-	/**
-	 * Loads the tilesets
-	 * @param root the root XML element
-	 * @return a list of filenames for images containing tiles
-	 * @throws IOException 
-	 */
-	private Array<FileHandle> loadTileSheets(Element root, FileHandle tideFile) throws IOException {
-		Array<FileHandle> images = new Array<FileHandle>();
-		Element tilesheets = root.getChildByName("TileSheets");
-		for (Element tileset : tilesheets.getChildrenByName("TileSheet")) {
-			Element imageSource = tileset.getChildByName("ImageSource");
-			FileHandle image = getRelativeFileHandle(tideFile, imageSource.getText());
-			images.add(image);
-		}
-		return images;
-	}
-	
-	private void loadTileSheet(TiledMap map, Element element, FileHandle tideFile, ImageResolver imageResolver) {
-		if (element.getName().equals("TileSheet")) {
-			String id = element.getAttribute("Id");
-			String description = element.getChildByName("Description").getText();
-			String imageSource = element.getChildByName("ImageSource").getText();
-			
-			Element alignment = element.getChildByName("Alignment");
-			String sheetSize = alignment.getAttribute("SheetSize");
-			String tileSize = alignment.getAttribute("TileSize");
-			String margin = alignment.getAttribute("Margin");
-			String spacing = alignment.getAttribute("Spacing");
-			
-			String[] sheetSizeParts = sheetSize.split(" x ");
-			int sheetSizeX = Integer.parseInt(sheetSizeParts[0]);
-			int sheetSizeY = Integer.parseInt(sheetSizeParts[1]);
-			
-			String[] tileSizeParts = tileSize.split(" x ");
-			int tileSizeX = Integer.parseInt(tileSizeParts[0]);
-			int tileSizeY = Integer.parseInt(tileSizeParts[1]);
-			
-			String[] marginParts = margin.split(" x ");
-			int marginX = Integer.parseInt(marginParts[0]);
-			int marginY = Integer.parseInt(marginParts[1]);
-
-			String[] spacingParts = margin.split(" x ");
-			int spacingX = Integer.parseInt(spacingParts[0]);
-			int spacingY = Integer.parseInt(spacingParts[1]);
-
-			FileHandle image = getRelativeFileHandle(tideFile, imageSource);
-			Texture texture = imageResolver.getImage(image.path());
-			
-			// TODO: Actually load the tilesheet
-			// Need to make global ids as Tide doesn't have global ids.
-			TiledMapTileSets tilesets = map.getTileSets();
-			int firstgid = 1;
-			for (TiledMapTileSet tileset : tilesets) {
-				firstgid += tileset.size();
-			}
-			
-			TiledMapTileSet tileset = new TiledMapTileSet();
-			tileset.setName(id);
-			tileset.getProperties().put("firstgid", firstgid);
-			int gid = firstgid;
-			
-			int stopWidth = texture.getWidth() - tileSizeX;
-			int stopHeight = texture.getHeight() - tileSizeY;
-			
-			for (int y = marginY; y <= stopHeight; y += tileSizeY + spacingY) {
-				for (int x = marginX; x <= stopWidth; x += tileSizeX + spacingX) {
-					TiledMapTile tile = new StaticTiledMapTile(new TextureRegion(texture, x, y, tileSizeX, tileSizeY));
-					tileset.putTile(gid++, tile);
-				}
-			}
-			
-			Element properties = element.getChildByName("Proeprties");
-			if (properties != null) {
-				loadProperties(tileset.getProperties(), properties);
-			}
-			
-			tilesets.addTileSet(tileset);
-		}
-	}
-	
-	private void loadLayer(TiledMap map, Element element) {
-		if (element.getName().equals("Layer")) {
-			String id = element.getAttribute("Id");
-			String visible = element.getAttribute("Visible");
-			
-			Element dimensions = element.getChildByName("Dimensions");
-			String layerSize = dimensions.getAttribute("LayerSize");
-			String tileSize = dimensions.getAttribute("TileSize");
-			
-			String[] layerSizeParts = layerSize.split(" x ");
-			int layerSizeX = Integer.parseInt(layerSizeParts[0]);
-			int layerSizeY = Integer.parseInt(layerSizeParts[1]);
-			
-			String[] tileSizeParts = tileSize.split(" x ");
-			int tileSizeX = Integer.parseInt(tileSizeParts[0]);
-			int tileSizeY = Integer.parseInt(tileSizeParts[1]);
-			
-			TiledMapTileLayer layer = new TiledMapTileLayer(layerSizeX, layerSizeY, tileSizeX, tileSizeY);
-			Element tileArray = element.getChildByName("TileArray");
-			Array<Element> rows = tileArray.getChildrenByName("Row");
-			TiledMapTileSets tilesets = map.getTileSets();
-			TiledMapTileSet currentTileSet = null;
-			int firstgid = 0;
-			int x, y;
-			for (int row = 0, rowCount = rows.size; row < rowCount; row++) {
-				Element currentRow = rows.get(row);
-				y = rowCount -1 - row;
-				x = 0;
-				for (int child = 0, childCount = currentRow.getChildCount(); child < childCount; child++) {
-					Element currentChild = currentRow.getChild(child);
-					String name = currentChild.getName();
-					if (name.equals("TileSheet")) {
-						currentTileSet = tilesets.getTileSet(currentChild.getAttribute("Ref"));
-						firstgid = currentTileSet.getProperties().getAsInteger("firstgid");
-					} else if (name.equals("Null")) {
-						x += currentChild.getIntAttribute("Count");
-					} else if (name.equals("Static")) {
-						layer.setCell(x++, y, currentTileSet.getTile(firstgid + currentChild.getIntAttribute("Index")));
-					} else if (name.equals("Animated")) {
-						// Create an AnimatedTile
-						int interval = currentChild.getInt("Interval");
-						Element frames = currentChild.getChildByName("Frames");
-						Array<StaticTiledMapTile> frameTiles = new Array<StaticTiledMapTile>();
-						for (int frameChild = 0, frameChildCount = frames.getChildCount(); frameChild < frameChildCount; frameChild++) {
-							Element frame = frames.getChild(frameChild);
-							String frameName = frame.getName();
-							if (frameName.equals("TileSheet")) {
-								currentTileSet = tilesets.getTileSet(frame.getAttribute("Ref"));
-								firstgid = currentTileSet.getProperties().getAsInteger("firstgid");
-							} else if (frameName.equals("Static")) {
-								frameTiles.add((StaticTiledMapTile) currentTileSet.getTile(firstgid + frame.getIntAttribute("Index")));
-							}
-						}
-						layer.setCell(x++, y, new AnimatedTiledMapTile(interval / 1000f, frameTiles)); //TODO: Reuse existing animated tiles
-					}
-				}
-			}
-			map.getLayers().addLayer(layer);
-		}
-	}
-	
-	private void loadProperties(MapProperties properties, Element element) {
-		if (element.getName().equals("Properties")) {
-			for (Element property : element.getChildrenByName("Property")) {
-				String key = property.getAttribute("Key", null);
-				String type = property.getAttribute("Type", null);
-				String value = property.getText();
-				
-				if (type.equals("Int32")) {
-					
-				} else if (type.equals("String")) {
-					
-				} else if (type.equals("Boolean")) {
-					
-				} else {
-					properties.put(key, value);					
-				}
-			}
-		}
-	}
-	
-	private static FileHandle getRelativeFileHandle(FileHandle file, String path) {
-		StringTokenizer tokenizer = new StringTokenizer(path, "\\/");
-		FileHandle result = file.parent();
-		while (tokenizer.hasMoreElements()) {
-			String token = tokenizer.nextToken();
-			if (token.equals(".."))
-				result = result.parent();
-			else {
-				result = result.child(token);
-			}
-		}
-		return result;		
-	}
-
-}
diff --git a/gdx/src/com/badlogic/gdx/maps/tiled/TiledMap.java b/gdx/src/com/badlogic/gdx/maps/tiled/TiledMap.java
deleted file mode 100644
index e8a0552..0000000
--- a/gdx/src/com/badlogic/gdx/maps/tiled/TiledMap.java
+++ /dev/null
@@ -1,49 +0,0 @@
-package com.badlogic.gdx.maps.tiled;
-
-import com.badlogic.gdx.assets.AssetManager;
-import com.badlogic.gdx.graphics.Texture;
-import com.badlogic.gdx.maps.Map;
-import com.badlogic.gdx.utils.Array;
-
-/**
- * @brief Represents a tiled map, adds the concept of tiles and tilesets
- * 
- * @see Map
- */
-public class TiledMap extends Map {
-	private TiledMapTileSets tilesets;
-	private Array<Texture> ownedTextures;
-	
-	/**
-	 * @return collection of tilesets for this map
-	 */
-	public TiledMapTileSets getTileSets() {
-		return tilesets;
-	}
-	
-	/**
-	 * Creates empty TiledMap
-	 */
-	public TiledMap() {
-		tilesets = new TiledMapTileSets();
-	}
-	
-	/**
-	 * Used by TmxMapLoader to set textures when loading the map
-	 * directly, without {@link AssetManager}. To be disposed in
-	 * {@link #dispose()}.
-	 * @param textures
-	 */
-	void setOwnedTextures(Array<Texture> textures) {
-		this.ownedTextures = textures;
-	}
-	
-	@Override
-	public void dispose() {
-		if(ownedTextures != null) {
-			for(Texture texture: ownedTextures) {
-				texture.dispose();
-			}
-		}
-	}
-}
diff --git a/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapRenderer.java b/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapRenderer.java
deleted file mode 100644
index 759b478..0000000
--- a/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapRenderer.java
+++ /dev/null
@@ -1,13 +0,0 @@
-package com.badlogic.gdx.maps.tiled;
-
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.*;
-
-import com.badlogic.gdx.graphics.glutils.ShapeRenderer;
-import com.badlogic.gdx.maps.MapObject;
-import com.badlogic.gdx.maps.MapRenderer;
-import com.badlogic.gdx.math.Polygon;
-
-public interface TiledMapRenderer extends MapRenderer {
-	public void renderObject(MapObject object);
-	public void renderTileLayer(TiledMapTileLayer layer);
-}
\ No newline at end of file
diff --git a/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapTile.java b/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapTile.java
deleted file mode 100644
index 622a85d..0000000
--- a/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapTile.java
+++ /dev/null
@@ -1,39 +0,0 @@
-package com.badlogic.gdx.maps.tiled;
-
-import com.badlogic.gdx.graphics.g2d.TextureRegion;
-import com.badlogic.gdx.maps.MapProperties;
-
-/**
- * @brief Generalises the concept of tile in a TiledMap
- *
- */
-public interface TiledMapTile {
-
-	public enum BlendMode {
-		NONE,
-		ALPHA
-	}
-
-	/**
-	 * @return the {@link BlendMode} to use for rendering the tile
-	 */	
-	public BlendMode getBlendMode();
-	
-	/**
-	 * Sets the {@link BlendMode} to use for rendering the tile
-	 * 
-	 * @param blendMode the blend mode to use for rendering the tile
-	 */
-	public void setBlendMode(BlendMode blendMode);
-	
-	/**
-	 * @return texture region used to render the tile
-	 */
-	public TextureRegion getTextureRegion();
-
-	/**
-	 * @return tile's properties set
-	 */
-	public MapProperties getProperties();
-	
-}
diff --git a/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapTileLayer.java b/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapTileLayer.java
deleted file mode 100644
index 376f8da..0000000
--- a/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapTileLayer.java
+++ /dev/null
@@ -1,172 +0,0 @@
-package com.badlogic.gdx.maps.tiled;
-
-import com.badlogic.gdx.maps.MapLayer;
-
-/**
- * @brief Layer for a TiledMap 
- */
-public class TiledMapTileLayer extends MapLayer {
-
-	private int width;
-	private int height;
-	
-	private float tileWidth;
-	private float tileHeight;
-	
-	private Cell[][] cells;
-	
-	/**
-	 * @return layer's witdth in tiles
-	 */
-	public int getWidth() {
-		return width;
-	}
-	
-	/**
-	 * @return layer's height in tiles
-	 */
-	public int getHeight() {
-		return height;
-	}
-	
-	/**
-	 * @return tiles' width in pixels
-	 */
-	public float getTileWidth() {
-		return tileWidth;
-	}
-	
-	/**
-	 * @return tiles' height in pixels
-	 */
-	public float getTileHeight() {
-		return tileHeight;
-	}
-	
-	/**
-	 * Creates TiledMap layer
-	 * 
-	 * @param width layer width in tiles
-	 * @param height layer height in tiles
-	 * @param tileWidth tile width in pixels
-	 * @param tileHeight tile height in pixels 
-	 */
-	public TiledMapTileLayer(int width, int height, int tileWidth, int tileHeight) {
-		super();
-		this.width = width;
-		this.height = height;
-		this.tileWidth = tileWidth;
-		this.tileHeight = tileHeight;
-		this.cells = new Cell[width][height];
-		for (int x = 0; x < width; x++) {
-			for (int y = 0; y < height; y++) {
-				cells[x][y] = new Cell();
-			}
-		}
-	}
-	
-	/**
-	 * @param x
-	 * @param y 
-	 * @return cell at (x, y)
-	 */
-	public Cell getCell(int x, int y) {
-		return cells[x][y];
-	}
-	
-	/**
-	 * Sets the tile which should be used for the cell in the given location.
-	 * 
-	 * @param x
-	 * @param y
-	 * @param tile
-	 */
-	public void setCell(int x, int y, TiledMapTile tile) {
-		cells[x][y].setTile(tile);
-	}
-	
-	/**
-	 * @brief represents a slot in a TiledLayer: TiledMapTile, flip and rotation properties.
-	 */
-	public class Cell {
-		
-		private TiledMapTile tile;
-		
-		private boolean flipHorizontally;
-		
-		private boolean flipVertically;
-		
-		private int rotation;
-		
-		/**
-		 * @return The tile currently assigned to this cell.
-		 */
-		public TiledMapTile getTile() {
-			return tile;
-		}
-		
-		/**
-		 * Sets the tile to be used for this cell.
-		 * 
-		 * @param tile
-		 */
-		public void setTile(TiledMapTile tile) {
-			this.tile = tile;
-		}
-
-		/**
-		 * @return Whether the tile should be flipped horizontally.
-		 */		
-		public boolean getFlipHorizontally() {
-			return flipHorizontally;
-		}
-		
-		/**
-		 * Sets whether to flip the tile horizontally.
-		 * 
-		 * @param flipHorizontally
-		 */
-		public void setFlipHorizontally(boolean flipHorizontally) {
-			this.flipHorizontally = flipHorizontally;
-		}
-		
-		/**
-		 * @return Whether the tile should be flipped vertically.
-		 */
-		public boolean getFlipVertically() {
-			return flipVertically;
-		}
-		
-		/**
-		 * Sets whether to flip the tile vertically.
-		 * 
-		 * @param flipVertically
-		 */
-		public void setFlipVertically(boolean flipVertically) {
-			this.flipVertically = flipVertically;
-		}
-		
-		/**
-		 * @return The rotation of this cell, in degrees.
-		 */
-		public int getRotation() {
-			return rotation;
-		}
-		
-		/**
-		 * Sets the rotation of this cell, in degrees.
-		 * 
-		 * @param rotation
-		 */
-		public void setRotation(int rotation) {
-			this.rotation = rotation;
-		}
-		
-		public static final int ROTATE_0 = 0;
-		public static final int ROTATE_90 = 1;
-		public static final int ROTATE_180 = 2;
-		public static final int ROTATE_270 = 3;
-		
-	}
-	
-}
diff --git a/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapTileSet.java b/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapTileSet.java
deleted file mode 100644
index ed5ff81..0000000
--- a/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapTileSet.java
+++ /dev/null
@@ -1,76 +0,0 @@
-package com.badlogic.gdx.maps.tiled;
-
-import com.badlogic.gdx.maps.MapProperties;
-import com.badlogic.gdx.utils.IntMap;
-
-/**
- * @brief Set of TiledMapTile instances used to compose a TiledMapLayer
- */
-public class TiledMapTileSet {
-	
-	private String name;
-	
-	private IntMap<TiledMapTile> tiles;
-
-	private MapProperties properties;
-
-	/**
-	 * @return tileset's name
-	 */
-	public String getName() {
-		return name;
-	}
-	
-	/**
-	 * @param name new name for the tileset
-	 */
-	public void setName(String name) {
-		this.name = name;
-	}
-	
-	/**
-	 * @return tileset's properties set
-	 */
-	public MapProperties getProperties() {
-		return properties;
-	}
-	
-	/**
-	 * Creates empty tileset
-	 */
-	public TiledMapTileSet() {
-		tiles = new IntMap<TiledMapTile>();
-		properties = new MapProperties();
-	}
-	
-	/**
-	 * @param id
-	 * @return tile matching id, null if it doesn't exist
-	 */
-	public TiledMapTile getTile(int id) {
-		return tiles.get(id);
-	}
-	
-	/**
-	 * Adds or replaces tile with that id
-	 * 
-	 * @param id
-	 * @param tile
-	 */
-	public void putTile(int id, TiledMapTile tile) {
-		tiles.put(id, tile);
-	}
-	
-	/**
-	 * @param id tile's id to be removed
-	 */
-	public void removeTile(int id) {
-		tiles.remove(id);
-	}
-
-	public int size() {
-		return tiles.size;
-	}
-	
-}
-
diff --git a/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapTileSets.java b/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapTileSets.java
deleted file mode 100644
index 82b8fa5..0000000
--- a/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapTileSets.java
+++ /dev/null
@@ -1,87 +0,0 @@
-package com.badlogic.gdx.maps.tiled;
-
-import java.util.Iterator;
-
-import com.badlogic.gdx.utils.Array;
-
-/**
- * @brief Collection of TiledMapTileSet
- */
-public class TiledMapTileSets implements Iterable<TiledMapTileSet> {
-	
-	private Array<TiledMapTileSet> tilesets;
-	
-	/**
-	 * Creates empty collection of tilesets
-	 */
-	public TiledMapTileSets() {
-		tilesets = new Array<TiledMapTileSet>();
-	}
-	
-	/**
-	 * @param index
-	 * @return tileset at index
-	 */
-	public TiledMapTileSet getTileSet(int index) {
-		return tilesets.get(index);
-	}
-	
-	/**
-	 * @param name
-	 * @return tileset with matching name, null if it doesn't exist
-	 */
-	public TiledMapTileSet getTileSet(String name) {
-		for (TiledMapTileSet tileset : tilesets) {
-			if (name.equals(tileset.getName())) {
-				return tileset;
-			}
-		}
-		return null;
-	}
-	
-	/**
-	 * @param tileset set to be added to the collection
-	 */
-	public void addTileSet(TiledMapTileSet tileset) {
-		tilesets.add(tileset);
-	}
-	
-	/**
-	 * Removes tileset at index
-	 * 
-	 * @param index
-	 */
-	public void removeTileSet(int index) {
-		tilesets.removeIndex(index);
-	}
-	
-	/**
-	 * @param tileset set to be removed
-	 */
-	public void removeTileSet(TiledMapTileSet tileset) {
-		tilesets.removeValue(tileset, true);
-	}
-	
-	/**
-	 * @param id
-	 * @return tile with matching id, null if it doesn't exist
-	 */
-	public TiledMapTile getTile(int id) {
-		for (TiledMapTileSet tileset : tilesets) {
-			TiledMapTile tile = tileset.getTile(id);
-			if (tile != null) {
-				return tile;
-			}
-		}
-		return null;
-	}
-	
-	/**
-	 * @return iterator to tilesets
-	 */
-	@Override
-	public Iterator<TiledMapTileSet> iterator() {
-		return tilesets.iterator();
-	}
-	
-}
diff --git a/gdx/src/com/badlogic/gdx/maps/tiled/TmxMapLoader.java b/gdx/src/com/badlogic/gdx/maps/tiled/TmxMapLoader.java
deleted file mode 100644
index 94a94b5..0000000
--- a/gdx/src/com/badlogic/gdx/maps/tiled/TmxMapLoader.java
+++ /dev/null
@@ -1,555 +0,0 @@
-package com.badlogic.gdx.maps.tiled;
-
-import java.io.ByteArrayInputStream;
-import java.io.IOException;
-import java.util.StringTokenizer;
-import java.util.zip.DataFormatException;
-import java.util.zip.GZIPInputStream;
-import java.util.zip.Inflater;
-
-import com.badlogic.gdx.assets.AssetDescriptor;
-import com.badlogic.gdx.assets.AssetLoaderParameters;
-import com.badlogic.gdx.assets.AssetManager;
-import com.badlogic.gdx.assets.loaders.FileHandleResolver;
-import com.badlogic.gdx.assets.loaders.SynchronousAssetLoader;
-import com.badlogic.gdx.assets.loaders.resolvers.InternalFileHandleResolver;
-import com.badlogic.gdx.files.FileHandle;
-import com.badlogic.gdx.graphics.Texture;
-import com.badlogic.gdx.graphics.g2d.TextureRegion;
-import com.badlogic.gdx.maps.ImageResolver;
-import com.badlogic.gdx.maps.MapLayer;
-import com.badlogic.gdx.maps.MapObject;
-import com.badlogic.gdx.maps.MapProperties;
-import com.badlogic.gdx.maps.ImageResolver.AssetManagerImageResolver;
-import com.badlogic.gdx.maps.ImageResolver.DirectImageResolver;
-import com.badlogic.gdx.maps.objects.PolygonMapObject;
-import com.badlogic.gdx.maps.objects.PolylineMapObject;
-import com.badlogic.gdx.maps.objects.RectangleMapObject;
-import com.badlogic.gdx.maps.tiled.TiledMapTileLayer.Cell;
-import com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile;
-import com.badlogic.gdx.utils.Array;
-import com.badlogic.gdx.utils.Base64Coder;
-import com.badlogic.gdx.utils.GdxRuntimeException;
-import com.badlogic.gdx.utils.ObjectMap;
-import com.badlogic.gdx.utils.XmlReader;
-import com.badlogic.gdx.utils.XmlReader.Element;
-
-/**
- * @brief synchronous loader for TMX maps created with the Tiled tool
- */
-public class TmxMapLoader extends SynchronousAssetLoader<TiledMap, TmxMapLoader.Parameters> {
-
-	public static class Parameters extends AssetLoaderParameters<TiledMap> {
-		
-	}
-	
-	private static final int FLAG_FLIP_HORIZONTALLY = 0x80000000;
-	private static final int FLAG_FLIP_VERTICALLY = 0x40000000;
-	private static final int FLAG_FLIP_DIAGONALLY = 0x20000000;		
-	private static final int MASK_CLEAR  = 0xE0000000;
-	
-	private XmlReader xml = new XmlReader();
-	private Element root;
-	
-	public TmxMapLoader() {
-		super(new InternalFileHandleResolver());
-	}
-	
-	/**
-	 * Creates loader 
-	 *  
-	 * @param resolver
-	 */
-	public TmxMapLoader(FileHandleResolver resolver) {
-		super(resolver);
-	}
-
-	/**
-	 * Loads the {@link TiledMap} from the given file. The file is
-	 * resolved via the {@link FileHandleResolver} set in the constructor
-	 * of this class. By default it will resolve to an internal file.
-	 * @param fileName the filename
-	 * @return the TiledMap
-	 */
-	public TiledMap load(String fileName) {
-		try {
-			FileHandle tmxFile = resolve(fileName);
-			root = xml.parse(tmxFile);
-			ObjectMap<String, Texture> textures = new ObjectMap<String, Texture>();
-			for(FileHandle textureFile: loadTilesets(root, tmxFile)) {
-				textures.put(textureFile.path(), new Texture(textureFile));
-			}
-			DirectImageResolver imageResolver = new DirectImageResolver(textures);
-			TiledMap map = loadTilemap(root, tmxFile, imageResolver);
-			map.setOwnedTextures(textures.values().toArray());
-			return map;
-		} catch(IOException e) {
-			throw new GdxRuntimeException("Couldn't load tilemap '" + fileName + "'", e);
-		}
-	}
-	
-	@Override
-	public TiledMap load(AssetManager assetManager, String fileName, Parameters parameter) {
-		FileHandle tmxFile = resolve(fileName);
-		try {
-			return loadTilemap(root, tmxFile, new AssetManagerImageResolver(assetManager));
-		} catch (Exception e) {
-			throw new GdxRuntimeException("Couldn't load tilemap '" + fileName + "'", e);
-		}
-	}
-
-	/**
-	 * Retrieves TiledMap resource dependencies
-	 * 
-	 * @param fileName
-	 * @param parameter not used for now
-	 * @return dependencies for the given .tmx file
-	 */
-	@Override
-	public Array<AssetDescriptor> getDependencies(String fileName, Parameters parameter) {
-		Array<AssetDescriptor> dependencies = new Array<AssetDescriptor>();
-		try {
-			FileHandle tmxFile = resolve(fileName);
-			root = xml.parse(tmxFile);
-			for(FileHandle image: loadTilesets(root, tmxFile)) {
-				dependencies.add(new AssetDescriptor(image.path(), Texture.class));
-			}
-			return dependencies;
-		} catch (IOException e) {
-			throw new GdxRuntimeException("Couldn't load tilemap '" + fileName + "'", e);
-		}
-	}
-	
-	/**
-	 * Loads the map data, given the XML root element and an {@link ImageResolver} used
-	 * to return the tileset Textures
-	 * @param root the XML root element 
-	 * @param tmxFile the Filehandle of the tmx file
-	 * @param imageResolver the {@link ImageResolver}
-	 * @return the {@link TiledMap}
-	 */
-	private TiledMap loadTilemap(Element root, FileHandle tmxFile, ImageResolver imageResolver) {
-		TiledMap map = new TiledMap();
-		Element properties = root.getChildByName("properties");
-		if (properties != null) {
-			loadProperties(map.getProperties(), properties);
-		}
-		Array<Element> tilesets = root.getChildrenByName("tileset");
-		for (Element element : tilesets) {
-			loadTileSet(map, element, tmxFile, imageResolver);
-			root.removeChild(element);
-		}
-		for (int i = 0, j = root.getChildCount(); i < j; i++) {
-			Element element = root.getChild(i);
-			String name = element.getName();
-			if (name.equals("layer")) {
-				loadTileLayer(map, element);
-			} else if (name.equals("objectgroup")) {
-				loadObjectGroup(map, element);
-			}
-		}
-		return map;
-	}
-	
-	/**
-	 * Loads the tilesets
-	 * @param root the root XML element
-	 * @return a list of filenames for images containing tiles
-	 * @throws IOException 
-	 */
-	private Array<FileHandle> loadTilesets(Element root, FileHandle tmxFile) throws IOException {
-		Array<FileHandle> images = new Array<FileHandle>();
-		for (Element tileset : root.getChildrenByName("tileset")) {
-			String source = tileset.getAttribute("source", null);
-			FileHandle image = null;
-			if (source != null) {
-				FileHandle tsx = getRelativeFileHandle(tmxFile, source);
-				tileset = xml.parse(tsx);
-				String imageSource = tileset.getChildByName("image").getAttribute("source");
-				image = getRelativeFileHandle(tsx, imageSource);
-			} else {
-				String imageSource = tileset.getChildByName("image").getAttribute("source");
-				image = getRelativeFileHandle(tmxFile, imageSource);
-			}
-			images.add(image);
-		}
-		return images;
-	}
-
-	private void loadTileSet(TiledMap map, Element element, FileHandle tmxFile, ImageResolver imageResolver) {
-		if (element.getName().equals("tileset")) {
-			String name = element.get("name", null);
-			int firstgid = element.getIntAttribute("firstgid", 1);
-			int tilewidth = element.getIntAttribute("tilewidth", 0);
-			int tileheight = element.getIntAttribute("tileheight", 0);
-			int spacing = element.getIntAttribute("spacing", 0);
-			int margin = element.getIntAttribute("margin", 0);			
-			String source = element.getAttribute("source", null);
-			FileHandle image = null;
-			if (source != null) {
-				FileHandle tsx = getRelativeFileHandle(tmxFile, source);
-				try {
-					element = xml.parse(tsx);
-					name = element.get("name", null);
-					tilewidth = element.getIntAttribute("tilewidth", 0);
-					tileheight = element.getIntAttribute("tileheight", 0);
-					spacing = element.getIntAttribute("spacing", 0);
-					margin = element.getIntAttribute("margin", 0);
-					String imageSource = element.getChildByName("image").getAttribute("source");
-					image = getRelativeFileHandle(tsx, imageSource);
-				} catch (IOException e) {
-					throw new GdxRuntimeException("Error parsing external tileset.");
-				}
-			} else {
-				String imageSource = element.getChildByName("image").getAttribute("source");
-				image = getRelativeFileHandle(tmxFile, imageSource);
-			}
-
-			Texture texture = imageResolver.getImage(image.path());
-
-			TiledMapTileSet tileset = new TiledMapTileSet();
-			tileset.setName(name);
-			
-			int stopWidth = texture.getWidth() - tilewidth;
-			int stopHeight = texture.getHeight() - tileheight;
-
-			int id = firstgid;
-			
-			for (int y = margin; y <= stopHeight; y += tileheight + spacing) {
-				for (int x = margin; x <= stopWidth; x += tilewidth + spacing) {
-					TiledMapTile tile = new StaticTiledMapTile(new TextureRegion(texture, x, y, tilewidth, tileheight));
-					tileset.putTile(id++, tile);
-				}
-			}
-			
-			Array<Element> tileElements = element.getChildrenByName("tile");
-			
-			for (Element tileElement : tileElements) {
-				int localtid = tileElement.getIntAttribute("id", 0);
-				TiledMapTile tile = tileset.getTile(firstgid + localtid);
-				if (tile!= null) {
-					Element properties = element.getChildByName("properties");
-					if (properties != null) {
-						loadProperties(tile.getProperties(), properties);
-					}
-				}
-			}
-			
-			Element properties = element.getChildByName("properties");
-			if (properties != null) {
-				loadProperties(tileset.getProperties(), properties);
-			}
-			map.getTileSets().addTileSet(tileset);
-		}		
-	}
-	
-	private void loadTileLayer(TiledMap map, Element element) {
-		if (element.getName().equals("layer")) {
-			String name = element.getAttribute("name", null);
-			int width = element.getIntAttribute("width", 0);
-			int height = element.getIntAttribute("height", 0);
-			int tileWidth = element.getParent().getIntAttribute("tilewidth", 0);
-			int tileHeight = element.getParent().getIntAttribute("tileheight", 0);
-			TiledMapTileLayer layer = new TiledMapTileLayer(width, height, tileWidth, tileHeight);
-			layer.setName(name);
-			
-			TiledMapTileSets tilesets = map.getTileSets();
-			
-			Element data = element.getChildByName("data");
-			String encoding = data.getAttribute("encoding", null);
-			String compression = data.getAttribute("compression", null);
-			if (encoding.equals("csv")) {
-				String[] array = data.getText().split(",");
-				for (int y = 0; y < height; y++) {
-					for (int x = 0; x < width; x++) {
-						int id = (int) Long.parseLong(array[y * width + x].trim());
-						
-						final boolean flipHorizontally = ((id & FLAG_FLIP_HORIZONTALLY) != 0);
-						final boolean flipVertically = ((id & FLAG_FLIP_VERTICALLY) != 0);
-						final boolean flipDiagonally = ((id & FLAG_FLIP_DIAGONALLY) != 0);
-
-						id = id & ~MASK_CLEAR;
-						
-						tilesets.getTile(id);
-						TiledMapTile tile = tilesets.getTile(id);
-						if (tile != null) {
-							Cell cell = layer.getCell(x, height - 1 - y);
-							if (flipDiagonally) {
-								if (flipHorizontally && flipVertically) {
-									cell.setFlipHorizontally(true);
-									cell.setRotation(Cell.ROTATE_90);
-								} else if (flipHorizontally) {
-									cell.setRotation(Cell.ROTATE_90);
-								} else if (flipVertically) {
-									cell.setRotation(Cell.ROTATE_270);
-								} else {
-									cell.setFlipVertically(true);
-									cell.setRotation(Cell.ROTATE_90);
-								}
-							} else {
-								cell.setFlipHorizontally(flipHorizontally);
-								cell.setFlipVertically(flipVertically);
-							}
-							cell.setTile(tile);
-						}
-					}
-				}
-			} else {
-				if(encoding.equals("base64")) {
-					byte[] bytes = Base64Coder.decode(data.getText());
-					if (compression == null) {
-						int read = 0;
-						for (int y = 0; y < height; y++) {
-							for (int x = 0; x < width; x++) {
-								
-								int id =
-								unsignedByteToInt(bytes[read++]) |
-								unsignedByteToInt(bytes[read++]) << 8 |
-								unsignedByteToInt(bytes[read++]) << 16 |
-								unsignedByteToInt(bytes[read++]) << 24;
-								
-								final boolean flipHorizontally = ((id & FLAG_FLIP_HORIZONTALLY) != 0);
-								final boolean flipVertically = ((id & FLAG_FLIP_VERTICALLY) != 0);
-								final boolean flipDiagonally = ((id & FLAG_FLIP_DIAGONALLY) != 0);
-
-								id = id & ~MASK_CLEAR;
-								
-								tilesets.getTile(id);
-								TiledMapTile tile = tilesets.getTile(id);
-								if (tile != null) {
-									Cell cell = layer.getCell(x, height - 1 - y);
-									if (flipDiagonally) {
-										if (flipHorizontally && flipVertically) {
-											cell.setFlipHorizontally(true);
-											cell.setRotation(Cell.ROTATE_90);
-										} else if (flipHorizontally) {
-											cell.setRotation(Cell.ROTATE_90);
-										} else if (flipVertically) {
-											cell.setRotation(Cell.ROTATE_270);
-										} else {
-											cell.setFlipVertically(true);
-											cell.setRotation(Cell.ROTATE_90);
-										}
-									} else {
-										cell.setFlipHorizontally(flipHorizontally);
-										cell.setFlipVertically(flipVertically);
-									}
-									cell.setTile(tile);
-								}
-							}
-						}
-					} else if (compression.equals("gzip")) {
-						GZIPInputStream GZIS = null;
-						try {
-							GZIS = new GZIPInputStream(new ByteArrayInputStream(bytes), bytes.length);
-						} catch (IOException e) {
-							throw new GdxRuntimeException("Error Reading TMX Layer Data - IOException: " + e.getMessage());
-						}
-
-						byte[] temp = new byte[4];
-						for (int y = 0; y < height; y++) {
-							for (int x = 0; x < width; x++) {
-								try {
-									GZIS.read(temp, 0, 4);
-									int id =
-									unsignedByteToInt(temp[0]) |
-									unsignedByteToInt(temp[1]) << 8 |
-									unsignedByteToInt(temp[2]) << 16 |
-									unsignedByteToInt(temp[3]) << 24;
-
-									final boolean flipHorizontally = ((id & FLAG_FLIP_HORIZONTALLY) != 0);
-									final boolean flipVertically = ((id & FLAG_FLIP_VERTICALLY) != 0);
-									final boolean flipDiagonally = ((id & FLAG_FLIP_DIAGONALLY) != 0);
-
-									id = id & ~MASK_CLEAR;
-									
-									tilesets.getTile(id);
-									TiledMapTile tile = tilesets.getTile(id);
-									if (tile != null) {
-										Cell cell = layer.getCell(x, height - 1 - y);
-										if (flipDiagonally) {
-											if (flipHorizontally && flipVertically) {
-												cell.setFlipHorizontally(true);
-												cell.setRotation(Cell.ROTATE_90);
-											} else if (flipHorizontally) {
-												cell.setRotation(Cell.ROTATE_90);
-											} else if (flipVertically) {
-												cell.setRotation(Cell.ROTATE_270);
-											} else {
-												cell.setFlipVertically(true);
-												cell.setRotation(Cell.ROTATE_90);
-											}
-										} else {
-											cell.setFlipHorizontally(flipHorizontally);
-											cell.setFlipVertically(flipVertically);
-										}
-										cell.setTile(tile);
-									}
-								} catch (IOException e) {
-									throw new GdxRuntimeException("Error Reading TMX Layer Data.", e);
-								}
-							}
-						}
-					} else if (compression.equals("zlib")) {
-						Inflater zlib = new Inflater();
-						
-						byte[] temp = new byte[4];
-
-						zlib.setInput(bytes, 0, bytes.length);
-
-						for (int y = 0; y < height; y++) {
-							for (int x = 0; x < width; x++) {
-								try {
-									zlib.inflate(temp, 0, 4);
-									int id =
-									unsignedByteToInt(temp[0]) |
-									unsignedByteToInt(temp[1]) << 8 |
-									unsignedByteToInt(temp[2]) << 16 |
-									unsignedByteToInt(temp[3]) << 24;
-									
-									final boolean flipHorizontally = ((id & FLAG_FLIP_HORIZONTALLY) != 0);
-									final boolean flipVertically = ((id & FLAG_FLIP_VERTICALLY) != 0);
-									final boolean flipDiagonally = ((id & FLAG_FLIP_DIAGONALLY) != 0);
-
-									id = id & ~MASK_CLEAR;
-									
-									tilesets.getTile(id);
-									TiledMapTile tile = tilesets.getTile(id);
-									if (tile != null) {
-										Cell cell = layer.getCell(x, height - 1 - y);
-										if (flipDiagonally) {
-											if (flipHorizontally && flipVertically) {
-												cell.setFlipHorizontally(true);
-												cell.setRotation(-90);
-											} else if (flipHorizontally) {
-												cell.setRotation(-90);
-											} else if (flipVertically) {
-												cell.setRotation(+90);
-											} else {
-												cell.setFlipVertically(true);
-												cell.setRotation(-90);
-											}
-										} else {
-											cell.setFlipHorizontally(flipHorizontally);
-											cell.setFlipVertically(flipVertically);
-										}
-										cell.setTile(tile);
-									}
-			
-								} catch (DataFormatException e) {
-									throw new GdxRuntimeException("Error Reading TMX Layer Data.", e);
-								}
-							}
-						}
-					}
-				}
-			}
-			Element properties = element.getChildByName("properties");
-			if (properties != null) {
-				loadProperties(layer.getProperties(), properties);
-			}
-			map.getLayers().addLayer(layer);
-		}		
-	}
-	
-	public void loadObjectGroup(TiledMap map, Element element) {
-		if (element.getName().equals("objectgroup")) {
-			String name = element.getAttribute("name", null);
-			MapLayer layer = new MapLayer();
-			layer.setName(name);
-			Element properties = element.getChildByName("properties");
-			if (properties != null) {
-				loadProperties(layer.getProperties(), properties);
-			}
-			
-			for (Element objectElement : element.getChildrenByName("object")) {
-				loadObject(layer, objectElement);
-			}
-
-			map.getLayers().addLayer(layer);
-		}
-	}
-	
-	private void loadObject(MapLayer layer, Element element) {
-		if (element.getName().equals("object")) {
-			MapObject object = null;
-			
-			int x = element.getIntAttribute("x", 0);
-			int y = element.getIntAttribute("y", 0);
-			
-			int width = element.getIntAttribute("width", 0);
-			int height = element.getIntAttribute("height", 0);
-			
-			if (element.getChildCount() > 0) {
-				Element child = element.getChildByName("polygon");
-				if (child != null) {
-					String[] points = child.getAttribute("points").split(" ");
-					float[] vertices = new float[points.length * 2];
-					for (int i = 0; i < points.length; i++) {
-						String[] point = points[i].split(",");
-						vertices[i * 2] = x + Integer.parseInt(point[0]);
-						vertices[i * 2 + 1] = y + Integer.parseInt(point[1]);
-					}
-					object = new PolygonMapObject(vertices);
-				} else {
-					child = element.getChildByName("polyline");
-					if (child != null) {
-						String[] points = child.getAttribute("points").split(" ");
-						float[] vertices = new float[points.length * 2];
-						for (int i = 0; i < points.length; i++) {
-							String[] point = points[i].split(",");
-							vertices[i * 2] = x + Integer.parseInt(point[0]);
-							vertices[i * 2 + 1] = y + Integer.parseInt(point[1]);
-						}
-						object = new PolylineMapObject(vertices);
-					}
-				}
-			}
-			if (object == null) {
-				object = new RectangleMapObject(x, y, width, height);
-			}
-			object.setName(element.getAttribute("name", null));
-			String type = element.getAttribute("type", null);
-			if (type != null) {
-				object.getProperties().put("type", type);
-			}
-			Element properties = element.getChildByName("properties");
-			if (properties != null) {
-				loadProperties(object.getProperties(), properties);
-			}
-			layer.getObjects().addObject(object);
-		}
-	}
-	
-	private void loadProperties(MapProperties properties, Element element) {
-		if (element.getName().equals("properties")) {
-			for (Element property : element.getChildrenByName("property")) {
-				String name = property.getAttribute("name", null);
-				String value = property.getAttribute(name, null);
-				if (value == null) {
-					value = property.getText();
-				}
-				properties.put(name, value);
-			}
-		}
-	}
-	
-	private static FileHandle getRelativeFileHandle(FileHandle file, String path) {
-		StringTokenizer tokenizer = new StringTokenizer(path, "\\/");
-		FileHandle result = file.parent();
-		while (tokenizer.hasMoreElements()) {
-			String token = tokenizer.nextToken();
-			if (token.equals(".."))
-				result = result.parent();
-			else {
-				result = result.child(token);
-			}
-		}
-		return result;		
-	}
-	
-	private static int unsignedByteToInt (byte b) {
-		return (int) b & 0xFF;
-	}
-
-}
diff --git a/gdx/src/com/badlogic/gdx/maps/tiled/renderers/BatchTiledMapRenderer.java b/gdx/src/com/badlogic/gdx/maps/tiled/renderers/BatchTiledMapRenderer.java
deleted file mode 100755
index a716922..0000000
--- a/gdx/src/com/badlogic/gdx/maps/tiled/renderers/BatchTiledMapRenderer.java
+++ /dev/null
@@ -1,101 +0,0 @@
-package com.badlogic.gdx.maps.tiled.renderers;
-
-import com.badlogic.gdx.graphics.OrthographicCamera;
-import com.badlogic.gdx.graphics.g2d.SpriteBatch;
-import com.badlogic.gdx.maps.MapLayer;
-import com.badlogic.gdx.maps.MapObject;
-import com.badlogic.gdx.maps.tiled.TiledMap;
-import com.badlogic.gdx.maps.tiled.TiledMapRenderer;
-import com.badlogic.gdx.maps.tiled.TiledMapTileLayer;
-import com.badlogic.gdx.math.Matrix4;
-import com.badlogic.gdx.math.Rectangle;
-
-public abstract class BatchTiledMapRenderer implements TiledMapRenderer {
-	
-	protected TiledMap map;
-
-	protected float unitScale;
-	
-	protected SpriteBatch spriteBatch;
-	
-	protected Rectangle viewBounds; 
-
-	public TiledMap getMap() {
-		return map;			
-	}
-	
-	public float getUnitScale() {
-		return unitScale;
-	}
-	
-	public SpriteBatch getSpriteBatch() {
-		return spriteBatch;
-	}
-
-	public Rectangle getViewBounds() {
-		return viewBounds;
-	}
-	
-	public BatchTiledMapRenderer(TiledMap map) {
-		this.map = map;
-		this.unitScale = 1;
-		this.spriteBatch = new SpriteBatch();
-		this.viewBounds = new Rectangle();
-	}
-	
-	public BatchTiledMapRenderer(TiledMap map, float unitScale) {
-		this.map = map;
-		this.unitScale = unitScale;
-		this.viewBounds = new Rectangle();
-		this.spriteBatch = new SpriteBatch();
-	}
-	
-	@Override
-	public void setView(OrthographicCamera camera) {
-		spriteBatch.setProjectionMatrix(camera.combined);
-		float width = camera.viewportWidth * camera.zoom;
-		float height = camera.viewportHeight * camera.zoom;
-		viewBounds.set(camera.position.x - width / 2, camera.position.y - height / 2, width, height);
-	}
-	
-	@Override
-	public void setView (Matrix4 projection, float x, float y, float width, float height) {
-		spriteBatch.setProjectionMatrix(projection);
-		viewBounds.set(x, y, width, height);
-	}
-	
-	@Override
-	public void render () {
-		spriteBatch.begin();
-		for (MapLayer layer : map.getLayers()) {
-			if (layer.getVisible()) {
-				if (layer instanceof TiledMapTileLayer) {
-					renderTileLayer((TiledMapTileLayer) layer);
-				} else {
-					for (MapObject object : layer.getObjects()) {
-						renderObject(object);
-					}
-				}					
-			}				
-		}
-		spriteBatch.end();
-	}
-	
-	@Override
-	public void render (int[] layers) {
-		spriteBatch.begin();
-		for (int layerIdx : layers) {
-			MapLayer layer = map.getLayers().getLayer(layerIdx);
-			if (layer.getVisible()) {
-				if (layer instanceof TiledMapTileLayer) {
-					renderTileLayer((TiledMapTileLayer) layer);
-				} else {
-					for (MapObject object : layer.getObjects()) {
-						renderObject(object);
-					}
-				}					
-			}				
-		}		
-		spriteBatch.end();
-	}
-}
\ No newline at end of file
diff --git a/gdx/src/com/badlogic/gdx/maps/tiled/renderers/IsometricTiledMapRenderer.java b/gdx/src/com/badlogic/gdx/maps/tiled/renderers/IsometricTiledMapRenderer.java
deleted file mode 100755
index 4083b51..0000000
--- a/gdx/src/com/badlogic/gdx/maps/tiled/renderers/IsometricTiledMapRenderer.java
+++ /dev/null
@@ -1,185 +0,0 @@
-package com.badlogic.gdx.maps.tiled.renderers;
-
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.C1;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.C2;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.C3;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.C4;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.U1;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.U2;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.U3;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.U4;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.V1;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.V2;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.V3;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.V4;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.X1;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.X2;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.X3;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.X4;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.Y1;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.Y2;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.Y3;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.Y4;
-
-import com.badlogic.gdx.graphics.Color;
-import com.badlogic.gdx.graphics.g2d.TextureRegion;
-import com.badlogic.gdx.maps.MapObject;
-import com.badlogic.gdx.maps.tiled.TiledMap;
-import com.badlogic.gdx.maps.tiled.TiledMapTile;
-import com.badlogic.gdx.maps.tiled.TiledMapTileLayer;
-import com.badlogic.gdx.maps.tiled.TiledMapTileLayer.Cell;
-
-public class IsometricTiledMapRenderer extends  BatchTiledMapRenderer {
-
-	private TiledMap map;
-	
-	private float[] vertices = new float[20];
-	
-	public IsometricTiledMapRenderer(TiledMap map) {
-		super(map);
-	}
-	
-	public IsometricTiledMapRenderer(TiledMap map, float unitScale) {
-		super(map, unitScale);
-	}	
-	
-	@Override
-	public void renderObject (MapObject object) {
-		
-	}
-	
-	@Override
-	public void renderTileLayer (TiledMapTileLayer layer) {
-
-		final float color = Color.toFloatBits(1, 1, 1, layer.getOpacity());
-		
-		int col1 = 0;
-		int col2 = layer.getWidth() - 1;
-		
-		int row1 = 0;
-		int row2 = layer.getHeight() - 1;
-		
-		float tileWidth = layer.getTileWidth() * unitScale;
-		float tileHeight = layer.getTileHeight() * unitScale;
-		float halfTileWidth = tileWidth * 0.5f;
-		float halfTileHeight = tileHeight * 0.5f;
-		
-		for (int row = row2; row >= row1; row--) {
-			for (int col = col1; col <= col2; col++) {
-				float x = (col * halfTileWidth) + (row * halfTileWidth);
-				float y = (row * halfTileHeight) - (col * halfTileHeight);
-
-				final TiledMapTileLayer.Cell cell = layer.getCell(col, row);
-				final TiledMapTile tile = cell.getTile();
-				if (tile != null) {
-					
-					final boolean flipX = cell.getFlipHorizontally();
-					final boolean flipY = cell.getFlipVertically();
-					final int rotations = cell.getRotation();
-					
-					TextureRegion region = tile.getTextureRegion();
-					
-					float x1 = x;
-					float y1 = y;
-					float x2 = x1 + region.getRegionWidth() * unitScale;
-					float y2 = y1 + region.getRegionHeight() * unitScale;
-					
-					float u1 = region.getU();
-					float v1 = region.getV2();
-					float u2 = region.getU2();
-					float v2 = region.getV();
-					
-					vertices[X1] = x1;
-					vertices[Y1] = y1;
-					vertices[C1] = color;
-					vertices[U1] = u1;
-					vertices[V1] = v1;
-					
-					vertices[X2] = x1;
-					vertices[Y2] = y2;
-					vertices[C2] = color;
-					vertices[U2] = u1;
-					vertices[V2] = v2;
-					
-					vertices[X3] = x2;
-					vertices[Y3] = y2;
-					vertices[C3] = color;
-					vertices[U3] = u2;
-					vertices[V3] = v2;
-					
-					vertices[X4] = x2;
-					vertices[Y4] = y1;
-					vertices[C4] = color;
-					vertices[U4] = u2;
-					vertices[V4] = v1;							
-					
-					if (flipX) {
-						float temp = vertices[U1];
-						vertices[U1] = vertices[U3];
-						vertices[U3] = temp;
-						temp = vertices[U2];
-						vertices[U2] = vertices[U4];
-						vertices[U4] = temp;
-					}
-					if (flipY) {
-						float temp = vertices[V1];
-						vertices[V1] = vertices[V3];
-						vertices[V3] = temp;
-						temp = vertices[V2];
-						vertices[V2] = vertices[V4];
-						vertices[V4] = temp;
-					}
-					if (rotations != 0) {
-						switch (rotations) {
-							case Cell.ROTATE_90: {
-								float tempV = vertices[V1];
-								vertices[V1] = vertices[V2];
-								vertices[V2] = vertices[V3];
-								vertices[V3] = vertices[V4];
-								vertices[V4] = tempV;
-
-								float tempU = vertices[U1];
-								vertices[U1] = vertices[U2];
-								vertices[U2] = vertices[U3];
-								vertices[U3] = vertices[U4];
-								vertices[U4] = tempU;									
-								break;
-							}
-							case Cell.ROTATE_180: {
-								float tempU = vertices[U1];
-								vertices[U1] = vertices[U3];
-								vertices[U3] = tempU;
-								tempU = vertices[U2];
-								vertices[U2] = vertices[U4];
-								vertices[U4] = tempU;									
-								float tempV = vertices[V1];
-								vertices[V1] = vertices[V3];
-								vertices[V3] = tempV;
-								tempV = vertices[V2];
-								vertices[V2] = vertices[V4];
-								vertices[V4] = tempV;
-								break;
-							}
-							case Cell.ROTATE_270: {
-								float tempV = vertices[V1];
-								vertices[V1] = vertices[V4];
-								vertices[V4] = vertices[V3];
-								vertices[V3] = vertices[V2];
-								vertices[V2] = tempV;
-
-								float tempU = vertices[U1];
-								vertices[U1] = vertices[U4];
-								vertices[U4] = vertices[U3];
-								vertices[U3] = vertices[U2];
-								vertices[U2] = tempU;									
-								break;
-							}
-						}								
-					}
-					spriteBatch.draw(region.getTexture(), vertices, 0, 20);
-				}					
-			}
-		}
-	}
-	
-}
\ No newline at end of file
diff --git a/gdx/src/com/badlogic/gdx/maps/tiled/renderers/OrthogonalTiledMapRenderer.java b/gdx/src/com/badlogic/gdx/maps/tiled/renderers/OrthogonalTiledMapRenderer.java
deleted file mode 100755
index 58a3e08..0000000
--- a/gdx/src/com/badlogic/gdx/maps/tiled/renderers/OrthogonalTiledMapRenderer.java
+++ /dev/null
@@ -1,183 +0,0 @@
-package com.badlogic.gdx.maps.tiled.renderers;
-
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.C1;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.C2;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.C3;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.C4;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.U1;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.U2;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.U3;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.U4;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.V1;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.V2;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.V3;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.V4;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.X1;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.X2;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.X3;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.X4;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.Y1;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.Y2;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.Y3;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.Y4;
-
-import com.badlogic.gdx.graphics.Color;
-import com.badlogic.gdx.graphics.g2d.TextureRegion;
-import com.badlogic.gdx.maps.MapObject;
-import com.badlogic.gdx.maps.tiled.TiledMap;
-import com.badlogic.gdx.maps.tiled.TiledMapTile;
-import com.badlogic.gdx.maps.tiled.TiledMapTileLayer;
-import com.badlogic.gdx.maps.tiled.TiledMapTileLayer.Cell;
-import com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile;
-
-public class OrthogonalTiledMapRenderer extends BatchTiledMapRenderer {
-	
-	private float[] vertices = new float[20];
-	
-	public OrthogonalTiledMapRenderer(TiledMap map) {
-		super(map);
-	}
-
-	public OrthogonalTiledMapRenderer(TiledMap map, float unitScale) {
-		super(map, unitScale);
-	}		
-	
-	@Override
-	public void renderObject (MapObject object) {
-		
-	}
-
-	@Override
-	public void renderTileLayer (TiledMapTileLayer layer) {
-		
-		final float color = Color.toFloatBits(1, 1, 1, layer.getOpacity());
-		
-		final int layerWidth = layer.getWidth();
-		final int layerHeight = layer.getHeight();
-		
-		final float layerTileWidth = layer.getTileWidth() * unitScale;
-		final float layerTileHeight = layer.getTileHeight() * unitScale;
-		
-		final int col1 = Math.max(0, (int) (viewBounds.x / layerTileWidth));
-		final int col2 = Math.min(layerWidth, (int) ((viewBounds.x + viewBounds.width + layerTileWidth) / layerTileWidth));
-
-		final int row1 = Math.max(0, (int) (viewBounds.y / layerTileHeight));
-		final int row2 = Math.min(layerHeight, (int) ((viewBounds.y + viewBounds.height + layerTileHeight) / layerTileHeight));				
-		
-		for (int row = row1; row < row2; row++) {
-			for (int col = col1; col < col2; col++) {
-				final TiledMapTileLayer.Cell cell = layer.getCell(col, row);
-				final TiledMapTile tile = cell.getTile();
-				if (tile != null) {
-					if (tile instanceof AnimatedTiledMapTile) continue;
-					
-					final boolean flipX = cell.getFlipHorizontally();
-					final boolean flipY = cell.getFlipVertically();
-					final int rotations = cell.getRotation();
-					
-					TextureRegion region = tile.getTextureRegion();
-					
-					float x1 = col * layerTileWidth;
-					float y1 = row * layerTileHeight;
-					float x2 = x1 + region.getRegionWidth() * unitScale;
-					float y2 = y1 + region.getRegionHeight() * unitScale;
-					
-					float u1 = region.getU();
-					float v1 = region.getV2();
-					float u2 = region.getU2();
-					float v2 = region.getV();
-					
-					vertices[X1] = x1;
-					vertices[Y1] = y1;
-					vertices[C1] = color;
-					vertices[U1] = u1;
-					vertices[V1] = v1;
-					
-					vertices[X2] = x1;
-					vertices[Y2] = y2;
-					vertices[C2] = color;
-					vertices[U2] = u1;
-					vertices[V2] = v2;
-					
-					vertices[X3] = x2;
-					vertices[Y3] = y2;
-					vertices[C3] = color;
-					vertices[U3] = u2;
-					vertices[V3] = v2;
-					
-					vertices[X4] = x2;
-					vertices[Y4] = y1;
-					vertices[C4] = color;
-					vertices[U4] = u2;
-					vertices[V4] = v1;							
-					
-					if (flipX) {
-						float temp = vertices[U1];
-						vertices[U1] = vertices[U3];
-						vertices[U3] = temp;
-						temp = vertices[U2];
-						vertices[U2] = vertices[U4];
-						vertices[U4] = temp;
-					}
-					if (flipY) {
-						float temp = vertices[V1];
-						vertices[V1] = vertices[V3];
-						vertices[V3] = temp;
-						temp = vertices[V2];
-						vertices[V2] = vertices[V4];
-						vertices[V4] = temp;
-					}
-					if (rotations != 0) {
-						switch (rotations) {
-							case Cell.ROTATE_90: {
-								float tempV = vertices[V1];
-								vertices[V1] = vertices[V2];
-								vertices[V2] = vertices[V3];
-								vertices[V3] = vertices[V4];
-								vertices[V4] = tempV;
-
-								float tempU = vertices[U1];
-								vertices[U1] = vertices[U2];
-								vertices[U2] = vertices[U3];
-								vertices[U3] = vertices[U4];
-								vertices[U4] = tempU;									
-								break;
-							}
-							case Cell.ROTATE_180: {
-								float tempU = vertices[U1];
-								vertices[U1] = vertices[U3];
-								vertices[U3] = tempU;
-								tempU = vertices[U2];
-								vertices[U2] = vertices[U4];
-								vertices[U4] = tempU;									
-								float tempV = vertices[V1];
-								vertices[V1] = vertices[V3];
-								vertices[V3] = tempV;
-								tempV = vertices[V2];
-								vertices[V2] = vertices[V4];
-								vertices[V4] = tempV;
-								break;
-							}
-							case Cell.ROTATE_270: {
-								float tempV = vertices[V1];
-								vertices[V1] = vertices[V4];
-								vertices[V4] = vertices[V3];
-								vertices[V3] = vertices[V2];
-								vertices[V2] = tempV;
-
-								float tempU = vertices[U1];
-								vertices[U1] = vertices[U4];
-								vertices[U4] = vertices[U3];
-								vertices[U3] = vertices[U2];
-								vertices[U2] = tempU;									
-								break;
-							}
-						}								
-					}
-					spriteBatch.draw(region.getTexture(), vertices, 0, 20);
-				}
-			}
-		}			
-	}
-	
-}
\ No newline at end of file
diff --git a/gdx/src/com/badlogic/gdx/maps/tiled/renderers/OrthogonalTiledMapRenderer2.java b/gdx/src/com/badlogic/gdx/maps/tiled/renderers/OrthogonalTiledMapRenderer2.java
deleted file mode 100755
index d0a4672..0000000
--- a/gdx/src/com/badlogic/gdx/maps/tiled/renderers/OrthogonalTiledMapRenderer2.java
+++ /dev/null
@@ -1,283 +0,0 @@
-package com.badlogic.gdx.maps.tiled.renderers;
-
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.C1;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.C2;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.C3;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.C4;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.U1;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.U2;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.U3;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.U4;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.V1;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.V2;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.V3;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.V4;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.X1;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.X2;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.X3;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.X4;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.Y1;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.Y2;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.Y3;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.Y4;
-
-import com.badlogic.gdx.Gdx;
-import com.badlogic.gdx.graphics.Color;
-import com.badlogic.gdx.graphics.GL10;
-import com.badlogic.gdx.graphics.GL11;
-import com.badlogic.gdx.graphics.OrthographicCamera;
-import com.badlogic.gdx.graphics.g2d.SpriteCache;
-import com.badlogic.gdx.graphics.g2d.TextureRegion;
-import com.badlogic.gdx.maps.MapLayer;
-import com.badlogic.gdx.maps.MapObject;
-import com.badlogic.gdx.maps.tiled.TiledMap;
-import com.badlogic.gdx.maps.tiled.TiledMapRenderer;
-import com.badlogic.gdx.maps.tiled.TiledMapTile;
-import com.badlogic.gdx.maps.tiled.TiledMapTileLayer;
-import com.badlogic.gdx.maps.tiled.TiledMapTileLayer.Cell;
-import com.badlogic.gdx.math.Matrix4;
-import com.badlogic.gdx.math.Rectangle;
-
-public class OrthogonalTiledMapRenderer2 implements TiledMapRenderer {
-
-	protected TiledMap map;
-
-	protected float unitScale;
-	
-	protected SpriteCache spriteCache;
-	
-	protected Rectangle viewBounds; 
-	
-	private float[] vertices = new float[20];
-	
-	public boolean recache;
-	
-	public OrthogonalTiledMapRenderer2(TiledMap map) {
-		this.map = map;
-		this.unitScale = 1;
-		this.spriteCache = new SpriteCache(4000, true);
-		this.viewBounds = new Rectangle();
-	}
-	
-	public OrthogonalTiledMapRenderer2(TiledMap map, float unitScale) {
-		this.map = map;
-		this.unitScale = unitScale;
-		this.viewBounds = new Rectangle();
-		this.spriteCache = new SpriteCache(4000, true);
-	}
-	
-	@Override
-	public void setView(OrthographicCamera camera) {
-		spriteCache.setProjectionMatrix(camera.combined);
-		float width = camera.viewportWidth * camera.zoom;
-		float height = camera.viewportHeight * camera.zoom;
-		viewBounds.set(camera.position.x - width / 2, camera.position.y - height / 2, width, height);
-		recache = true;
-	}
-	
-	@Override
-	public void setView (Matrix4 projection, float x, float y, float width, float height) {
-		spriteCache.setProjectionMatrix(projection);
-		viewBounds.set(x, y, width, height);
-		recache = true;
-	}
-
-	public void begin () {
-		if (recache) {
-			cached = false;
-			recache = false;
-			spriteCache.clear();
-		}
-		if (!cached) {
-			spriteCache.beginCache();	
-		} else {
-			Gdx.gl.glEnable(GL10.GL_BLEND);
-			Gdx.gl.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
-			spriteCache.begin();
-		}
-		
-	}
-
-	public void end () {
-		if (!cached) {
-			spriteCache.endCache();
-			cached = true;
-			Gdx.gl.glEnable(GL10.GL_BLEND);
-			Gdx.gl.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
-			spriteCache.begin();
-			spriteCache.draw(0);
-			spriteCache.end();
-			Gdx.gl.glDisable(GL10.GL_BLEND);
-		} else {
-			spriteCache.end();
-			Gdx.gl.glDisable(GL10.GL_BLEND);
-		}
-	}
-
-	@Override
-	public void render () {
-		begin();
-		if (cached) {
-			spriteCache.draw(0);
-		} else {
-			for (MapLayer layer : map.getLayers()) {
-				if (layer.getVisible()) {
-					if (layer instanceof TiledMapTileLayer) {
-						renderTileLayer((TiledMapTileLayer) layer);
-					} else {
-						for (MapObject object : layer.getObjects()) {
-							renderObject(object);
-						}
-					}					
-				}				
-			}				
-		}
-		end();
-	}
-	
-	@Override
-	public void render (int[] layers) {
-		// FIXME not implemented
-		throw new UnsupportedOperationException("Not implemented");
-	}
-
-	@Override
-	public void renderObject (MapObject object) {
-		// TODO Auto-generated method stub
-		
-	}
-
-	boolean cached = false;
-	int count = 0;
-	@Override
-	public void renderTileLayer (TiledMapTileLayer layer) {
-		final float color = Color.toFloatBits(1, 1, 1, layer.getOpacity());
-	
-		final int layerWidth = layer.getWidth();
-		final int layerHeight = layer.getHeight();
-		
-		final float layerTileWidth = layer.getTileWidth() * unitScale;
-		final float layerTileHeight = layer.getTileHeight() * unitScale;
-		
-		final int col1 = Math.max(0, (int) (viewBounds.x / layerTileWidth));
-		final int col2 = Math.min(layerWidth, (int) ((viewBounds.x + viewBounds.width + layerTileWidth) / layerTileWidth));
-
-		final int row1 = Math.max(0, (int) (viewBounds.y / layerTileHeight));
-		final int row2 = Math.min(layerHeight, (int) ((viewBounds.y + viewBounds.height + layerTileHeight) / layerTileHeight));				
-		
-		for (int row = row1; row < row2; row++) {
-			for (int col = col1; col < col2; col++) {
-				final TiledMapTileLayer.Cell cell = layer.getCell(col, row);
-				final TiledMapTile tile = cell.getTile();
-				if (tile != null) {
-					count++;
-					final boolean flipX = cell.getFlipHorizontally();
-					final boolean flipY = cell.getFlipVertically();
-					final int rotations = cell.getRotation();
-					
-					TextureRegion region = tile.getTextureRegion();
-					
-					float x1 = col * layerTileWidth;
-					float y1 = row * layerTileHeight;
-					float x2 = x1 + region.getRegionWidth() * unitScale;
-					float y2 = y1 + region.getRegionHeight() * unitScale;
-					
-					float u1 = region.getU();
-					float v1 = region.getV2();
-					float u2 = region.getU2();
-					float v2 = region.getV();
-					
-					vertices[X1] = x1;
-					vertices[Y1] = y1;
-					vertices[C1] = color;
-					vertices[U1] = u1;
-					vertices[V1] = v1;
-					
-					vertices[X2] = x1;
-					vertices[Y2] = y2;
-					vertices[C2] = color;
-					vertices[U2] = u1;
-					vertices[V2] = v2;
-					
-					vertices[X3] = x2;
-					vertices[Y3] = y2;
-					vertices[C3] = color;
-					vertices[U3] = u2;
-					vertices[V3] = v2;
-					
-					vertices[X4] = x2;
-					vertices[Y4] = y1;
-					vertices[C4] = color;
-					vertices[U4] = u2;
-					vertices[V4] = v1;							
-					
-					if (flipX) {
-						float temp = vertices[U1];
-						vertices[U1] = vertices[U3];
-						vertices[U3] = temp;
-						temp = vertices[U2];
-						vertices[U2] = vertices[U4];
-						vertices[U4] = temp;
-					}
-					if (flipY) {
-						float temp = vertices[V1];
-						vertices[V1] = vertices[V3];
-						vertices[V3] = temp;
-						temp = vertices[V2];
-						vertices[V2] = vertices[V4];
-						vertices[V4] = temp;
-					}
-					if (rotations != 0) {
-						switch (rotations) {
-							case Cell.ROTATE_90: {
-								float tempV = vertices[V1];
-								vertices[V1] = vertices[V2];
-								vertices[V2] = vertices[V3];
-								vertices[V3] = vertices[V4];
-								vertices[V4] = tempV;
-
-								float tempU = vertices[U1];
-								vertices[U1] = vertices[U2];
-								vertices[U2] = vertices[U3];
-								vertices[U3] = vertices[U4];
-								vertices[U4] = tempU;									
-								break;
-							}
-							case Cell.ROTATE_180: {
-								float tempU = vertices[U1];
-								vertices[U1] = vertices[U3];
-								vertices[U3] = tempU;
-								tempU = vertices[U2];
-								vertices[U2] = vertices[U4];
-								vertices[U4] = tempU;									
-								float tempV = vertices[V1];
-								vertices[V1] = vertices[V3];
-								vertices[V3] = tempV;
-								tempV = vertices[V2];
-								vertices[V2] = vertices[V4];
-								vertices[V4] = tempV;
-								break;
-							}
-							case Cell.ROTATE_270: {
-								float tempV = vertices[V1];
-								vertices[V1] = vertices[V4];
-								vertices[V4] = vertices[V3];
-								vertices[V3] = vertices[V2];
-								vertices[V2] = tempV;
-
-								float tempU = vertices[U1];
-								vertices[U1] = vertices[U4];
-								vertices[U4] = vertices[U3];
-								vertices[U3] = vertices[U2];
-								vertices[U2] = tempU;									
-								break;
-							}
-						}								
-					}
-					spriteCache.add(region.getTexture(), vertices, 0, 20);
-				}
-			}
-		}
-	}
-	
-}
\ No newline at end of file
diff --git a/gdx/src/com/badlogic/gdx/maps/tiled/tiles/AnimatedTiledMapTile.java b/gdx/src/com/badlogic/gdx/maps/tiled/tiles/AnimatedTiledMapTile.java
deleted file mode 100644
index bc192f0..0000000
--- a/gdx/src/com/badlogic/gdx/maps/tiled/tiles/AnimatedTiledMapTile.java
+++ /dev/null
@@ -1,47 +0,0 @@
-package com.badlogic.gdx.maps.tiled.tiles;
-
-import com.badlogic.gdx.graphics.g2d.Animation;
-import com.badlogic.gdx.graphics.g2d.TextureRegion;
-import com.badlogic.gdx.maps.MapProperties;
-import com.badlogic.gdx.maps.tiled.TiledMapTile;
-import com.badlogic.gdx.utils.Array;
-
-public class AnimatedTiledMapTile implements TiledMapTile {
-
-	private Array<StaticTiledMapTile> frameTiles;
-	
-	private float animationTime;
-	
-	@Override
-	public BlendMode getBlendMode () {
-		// TODO Auto-generated method stub
-		return null;
-	}
-
-	@Override
-	public void setBlendMode (BlendMode blendMode) {
-		// TODO Auto-generated method stub
-		
-	}
-
-	@Override
-	public TextureRegion getTextureRegion () {
-		// TODO Auto-generated method stub
-		return null;
-	}
-
-	@Override
-	public MapProperties getProperties () {
-		// TODO Auto-generated method stub
-		return null;
-	}
-
-	public AnimatedTiledMapTile(float interval, Array<StaticTiledMapTile> frameTiles) {
-
-	}
-	
-	public void setAnimationTime(float animationTime) {
-		this.animationTime = animationTime;
-	}
-	
-}
diff --git a/gdx/src/com/badlogic/gdx/maps/tiled/tiles/StaticTiledMapTile.java b/gdx/src/com/badlogic/gdx/maps/tiled/tiles/StaticTiledMapTile.java
deleted file mode 100644
index c9f783e..0000000
--- a/gdx/src/com/badlogic/gdx/maps/tiled/tiles/StaticTiledMapTile.java
+++ /dev/null
@@ -1,66 +0,0 @@
-package com.badlogic.gdx.maps.tiled.tiles;
-
-import com.badlogic.gdx.graphics.g2d.TextureRegion;
-import com.badlogic.gdx.maps.MapProperties;
-import com.badlogic.gdx.maps.tiled.TiledMapTile;
-
-/**
- * @brief Represents a non changing TiledMapTile (can be cached)
- */
-public class StaticTiledMapTile implements TiledMapTile {
-
-	private BlendMode blendMode = BlendMode.ALPHA;
-	
-	private MapProperties properties;
-	
-	private TextureRegion textureRegion;	
-
-	@Override
-	public BlendMode getBlendMode () {
-		return blendMode;
-	}
-
-	@Override
-	public void setBlendMode (BlendMode blendMode) {
-		this.blendMode = blendMode;
-	}	
-	
-	/**
-	 * @return tile's properties set
-	 */
-	@Override
-	public MapProperties getProperties() {
-		if (properties == null) {
-			properties = new MapProperties();
-		}
-		return properties;
-	}
-
-	/**
-	 * @return texture region used to render the tile
-	 */
-	@Override
-	public TextureRegion getTextureRegion() {
-		return textureRegion;
-	}
-	
-	/**
-	 * Creates a static tile with the given region
-	 * 
-	 * @param textureRegion
-	 */
-	public StaticTiledMapTile(TextureRegion textureRegion) {
-		this.textureRegion = textureRegion;
-	}
-	
-	/**
-	 * Copy constructor
-	 * 
-	 * @param copy
-	 */
-	public StaticTiledMapTile(StaticTiledMapTile copy) {
-		getProperties().putAll(copy.properties);
-		this.textureRegion = copy.textureRegion;
-	}
-	
-}
diff --git a/gdx/src/com/badlogic/gdx/math/BSpline.java b/gdx/src/com/badlogic/gdx/math/BSpline.java
new file mode 100644
index 0000000..df3c89a
--- /dev/null
+++ b/gdx/src/com/badlogic/gdx/math/BSpline.java
@@ -0,0 +1,191 @@
+/*******************************************************************************
+ * Copyright 2011 See AUTHORS file.
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/
+
+package com.badlogic.gdx.math;
+
+import com.badlogic.gdx.utils.Array;
+
+/** @author Xoppa */
+public class BSpline<T extends Vector<T>> implements Path<T> {
+	private final static float d6 = 1f / 6f;
+	
+	/** Calculates the cubic b-spline value for the given position (t).
+	 * @param out The Vector to set to the result.
+	 * @param t The position (0<=t<=1) on the spline
+	 * @param points The control points
+	 * @param continuous If true the b-spline restarts at 0 when reaching 1
+	 * @param tmp A temporary vector used for the calculation
+	 * @return The value of out */
+	public static <T extends Vector<T>> T cubic(final T out, final float t, final T[] points, final boolean continuous, final T tmp) {
+		final int n = continuous ? points.length : points.length - 3;
+		float u = t * n;
+		int i = (t >= 1f) ? (n - 1) : (int)u;
+		u -= (float)i;
+		return cubic(out, i, u, points, continuous, tmp);
+	}
+	
+	/** Calculates the cubic b-spline value for the given span (i) at the given position (u).
+	 * @param out The Vector to set to the result.
+	 * @param i The span (0<=i<spanCount) spanCount = continuous ? points.length : points.length - 3 (cubic degree)
+	 * @param u The position (0<=u<=1) on the span
+	 * @param points The control points
+	 * @param continuous If true the b-spline restarts at 0 when reaching 1
+	 * @param tmp A temporary vector used for the calculation
+	 * @return The value of out */
+	public static <T extends Vector<T>> T cubic(final T out, final int i, final float u, final T[] points, final boolean continuous, final T tmp) {
+		final int n = points.length;
+		final float dt = 1f - u;
+		final float t2 = u * u;
+		final float t3 = t2 * u;
+		out.set(points[i]).mul((3f * t3 - 6f * t2 + 4f) * d6);
+		if (continuous || i > 0) out.add(tmp.set(points[(n+i-1)%n]).mul(dt * dt * dt * d6));
+		if (continuous || i < (n - 1)) out.add(tmp.set(points[(i + 1)%n]).mul((-3f * t3 + 3f * t2 + 3f * u + 1f) * d6));
+		if (continuous || i < (n - 2)) out.add(tmp.set(points[(i + 2)%n]).mul(t3 * d6));
+		return out;
+	}
+	
+	/** Calculates the n-degree b-spline value for the given position (t).
+	 * @param out The Vector to set to the result.
+	 * @param t The position (0<=t<=1) on the spline
+	 * @param points The control points
+	 * @param degree The degree of the b-spline
+	 * @param continuous If true the b-spline restarts at 0 when reaching 1
+	 * @param tmp A temporary vector used for the calculation
+	 * @return The value of out */
+	public static <T extends Vector<T>> T calculate(final T out, final float t, final T[] points, final int degree, final boolean continuous, final T tmp) {
+		final int n = continuous ? points.length : points.length - degree;
+		float u = t * n;
+		int i = (t >= 1f) ? (n - 1) : (int)u;
+		u -= (float)i;
+		return calculate(out, i, u, points, degree, continuous, tmp);
+	}
+	
+	/** Calculates the n-degree b-spline value for the given span (i) at the given position (u).
+	 * @param out The Vector to set to the result.
+	 * @param i The span (0<=i<spanCount) spanCount = continuous ? points.length : points.length - degree
+	 * @param u The position (0<=u<=1) on the span
+	 * @param points The control points
+	 * @param degree The degree of the b-spline
+	 * @param continuous If true the b-spline restarts at 0 when reaching 1
+	 * @param tmp A temporary vector used for the calculation
+	 * @return The value of out */
+	public static <T extends Vector<T>> T calculate(final T out, final int i, final float u, final T[] points, final int degree, final boolean continuous, final T tmp) {
+		switch(degree) {
+		case 3: return cubic(out, i, u, points, continuous, tmp);
+		}
+		return out;
+	}
+	
+	public T[] controlPoints;
+	public Array<T> knots;
+	public int degree;
+	public boolean continuous;
+	public int spanCount;
+	private T tmp;
+	
+	public BSpline() { }
+	public BSpline(final T[] controlPoints, final int degree, final boolean continuous) {
+		set(controlPoints, degree, continuous);
+	}
+	
+	public BSpline set(final T[] controlPoints, final int degree, final boolean continuous) {
+		if (tmp == null)
+			tmp = controlPoints[0].cpy();
+		this.controlPoints = controlPoints;
+		this.degree = degree;
+		this.continuous = continuous;
+		this.spanCount = continuous ? controlPoints.length : controlPoints.length - degree;
+		if (knots == null)
+			knots = new Array<T>(spanCount);
+		else {
+			knots.clear();
+			knots.ensureCapacity(spanCount);
+		}
+		for (int i = 0; i < spanCount; i++)
+			knots.add(calculate(controlPoints[0].cpy(), continuous ? i : (int)(i + 0.5f * degree), 0f, controlPoints, degree, continuous, tmp));
+		return this;
+	}
+
+	@Override
+	public T valueAt (T out, float t) {
+		final int n = spanCount;
+		float u = t * n;
+		int i = (t >= 1f) ? (n - 1) : (int)u;
+		u -= (float)i;
+		return valueAt(out, i, u);
+	}
+	
+	/** @return The value of the spline at position u of the specified span */ 
+	public T valueAt(final T out, final int span, final float u) {
+		return calculate(out, continuous ? span : (span + (int)(degree*0.5f)), u, controlPoints, degree, continuous, tmp);
+	}
+	
+	/** @return The span closest to the specified value */ 
+	public int nearest(final T in) {
+		return nearest(in, 0, spanCount);
+	}
+	
+	/** @return The span closest to the specified value, restricting to the specified spans. */
+	public int nearest(final T in, int start, final int count) {
+		while (start < 0) start += spanCount;
+		int result = start % spanCount;
+		float dst = in.dst2(knots.get(result));
+		for (int i = 1; i < count; i++) {
+			final int idx = (start + i) % spanCount;
+			final float d = in.dst2(knots.get(idx));
+			if (d < dst) {
+				dst = d;
+				result = idx;
+			}
+		}
+		return result;
+	}
+	
+	@Override
+	public float approximate (T v) {
+		return approximate(v, nearest(v));
+	}
+	
+	public float approximate(final T in, int start, final int count) {
+		return approximate(in, nearest(in, start, count));
+	}
+	
+	public float approximate(final T in, final int near) {
+		int n = near;
+		final T nearest = knots.get(n);
+		final T previous = knots.get(n>0?n-1:spanCount-1);
+		final T next = knots.get((n+1)%spanCount);
+		final float dstPrev2 = in.dst2(previous);
+		final float dstNext2 = in.dst2(next);
+		T P1, P2, P3;
+		if (dstNext2 < dstPrev2) {
+			P1 = nearest;
+			P2 = next;
+			P3 = in;
+		} else {
+			P1 = previous;
+			P2 = nearest;
+			P3 = in;
+			n = n>0?n-1:spanCount-1;
+		}
+		float L1 = P1.dst(P2);
+		float L2 = P3.dst(P2);
+		float L3 = P3.dst(P1);
+		float s = (L2*L2 + L1*L1 - L3*L3) / (2*L1);
+		float u = MathUtils.clamp((L1-s)/L1, 0f, 1f);
+		return ((float)n + u) / spanCount;
+	}
+}
diff --git a/gdx/src/com/badlogic/gdx/math/Bezier.java b/gdx/src/com/badlogic/gdx/math/Bezier.java
new file mode 100644
index 0000000..7a5c6ab
--- /dev/null
+++ b/gdx/src/com/badlogic/gdx/math/Bezier.java
@@ -0,0 +1,125 @@
+/*******************************************************************************
+ * Copyright 2011 See AUTHORS file.
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/
+
+package com.badlogic.gdx.math;
+
+import com.badlogic.gdx.utils.Array;
+import com.badlogic.gdx.utils.GdxRuntimeException;
+
+/** Implementation of the Bezier curve.
+ * @author Xoppa */
+public class Bezier<T extends Vector<T>> implements Path<T> {
+	// TODO implement Serializable
+	
+	/** Simple linear interpolation 
+	 * @param out The {@link Vector} to set to the result.
+	 * @param t The location (ranging 0..1) on the line.
+	 * @param p0 The start point.
+	 * @param p1 The end point.
+	 * @param tmp A temporary vector to be used by the calculation.
+	 * @return The value specified by out for chaining */
+	public static <T extends Vector<T>> T linear(final T out, final float t, final T p0, final T p1, final T tmp) {
+		return out.set(p0).mul(1f - t).add(tmp.set(p1).mul(t)); // Could just use lerp...
+	}
+	
+	/** Quadratic Bezier curve 
+	 * @param out The {@link Vector} to set to the result.
+	 * @param t The location (ranging 0..1) on the curve.
+	 * @param p0 The first bezier point.
+	 * @param p1 The second bezier point.
+	 * @param p2 The third bezier point.
+	 * @param tmp A temporary vector to be used by the calculation.
+	 * @return The value specified by out for chaining */
+	public static <T extends Vector<T>> T quadratic(final T out, final float t, final T p0, final T p1, final T p2, final T tmp) {
+		final float dt = 1f - t;
+		return out.set(p0).mul(dt*dt).add(tmp.set(p1).mul(2*dt*t)).add(tmp.set(p2).mul(t*t));
+	}
+	
+	/** Cubic Bezier curve
+	 * @param out The {@link Vector} to set to the result.
+	 * @param t The location (ranging 0..1) on the curve.
+	 * @param p0 The first bezier point.
+	 * @param p1 The second bezier point.
+	 * @param p2 The third bezier point.
+	 * @param p3 The fourth bezier point.
+	 * @param tmp A temporary vector to be used by the calculation.
+	 * @return The value specified by out for chaining */
+	public static <T extends Vector<T>> T cubic(final T out, final float t, final T p0, final T p1, final T p2, final T p3, final T tmp) {
+		final float dt = 1f - t;
+		final float dt2 = dt * dt;
+		final float t2 = t * t;
+		return out.set(p0).mul(dt2*dt).add(tmp.set(p1).mul(3*dt2*t)).add(tmp.set(p2).mul(3*dt*t2)).add(tmp.set(p3).mul(t2*t));
+	}
+	
+	public Array<T> points = new Array<T>();
+	private T tmp;
+	
+	public Bezier() {	}
+	public Bezier(final T... points) {
+		set(points);
+	}
+	public Bezier(final T[] points, final int offset, final int length) {
+		set(points, offset, length);
+	}
+	public Bezier(final Array<T> points, final int offset, final int length) {
+		set(points, offset, length);
+	}
+	
+	public Bezier set(final T... points) {
+		return set(points, 0, points.length);
+	}
+	public Bezier set(final T[] points, final int offset, final int length) {
+		if (length < 2 || length > 4)
+			throw new GdxRuntimeException("Only first, second and third degree Bezier curves are supported.");
+		if (tmp == null)
+			tmp = points[0].cpy();
+		this.points.clear();
+		this.points.addAll(points, offset, length);
+		return this;
+	}
+	public Bezier set(final Array<T> points, final int offset, final int length) {
+		if (length < 2 || length > 4)
+			throw new GdxRuntimeException("Only first, second and third degree Bezier curves are supported.");
+		if (tmp == null)
+			tmp = points.get(0).cpy();
+		this.points.clear();
+		this.points.addAll(points, offset, length);
+		return this;
+	}
+	
+	public T valueAt(final T out, final float t) {
+		final int n = points.size; 
+		if (n == 2)
+			linear(out, t, points.get(0), points.get(1), tmp);
+		else if (n == 3)
+			quadratic(out, t, points.get(0), points.get(1), points.get(2), tmp);
+		else if (n == 4)
+			cubic(out, t, points.get(0), points.get(1), points.get(2), points.get(3), tmp);
+		return out;
+	}
+	
+	public float approximate(final T v) {
+		// TODO: make a real approximate method
+		T p1 = points.get(0);
+		T p2 = points.get(points.size-1);
+		T p3 = v;
+		float l1 = p1.dst(p2);
+		float l2 = p3.dst(p2);
+		float l3 = p3.dst(p1);
+		float s = (l2*l2 + l1*l1 - l3*l3) / (2*l1);
+		return MathUtils.clamp((l1-s)/l1, 0f, 1f);
+	}
+}
diff --git a/gdx/src/com/badlogic/gdx/math/CatmullRomSpline.java b/gdx/src/com/badlogic/gdx/math/CatmullRomSpline.java
index a806343..1537ad1 100644
--- a/gdx/src/com/badlogic/gdx/math/CatmullRomSpline.java
+++ b/gdx/src/com/badlogic/gdx/math/CatmullRomSpline.java
@@ -16,242 +16,130 @@
 
 package com.badlogic.gdx.math;
 
-import java.io.Serializable;
-import java.util.ArrayList;
-import java.util.List;
-import java.util.Vector;
-
-/** Encapsulates a Catmull-Rom spline with n control points, n >= 4. For more information on this type of spline see
- * <a href="http://www.mvps.org/directx/articles/catmull/">http://www.mvps.org/directx/articles/catmull/</a>
- * 
- * @author badlogicgames@gmail.com */
-public class CatmullRomSpline implements Serializable {
-	private static final long serialVersionUID = -3290464799289771451L;
-	private List<Vector3> controlPoints = new ArrayList<Vector3>();
-	Vector3 T1 = new Vector3();
-	Vector3 T2 = new Vector3();
-
-	/** Adds a new control point
-	 * 
-	 * @param point the point */
-	public void add (Vector3 point) {
-		controlPoints.add(point);
+import com.badlogic.gdx.utils.Array;
+
+/** @author Xoppa */
+public class CatmullRomSpline<T extends Vector<T>> implements Path<T> {
+	/** Calculates the catmullrom value for the given position (t).
+	 * @param out The Vector to set to the result.
+	 * @param t The position (0<=t<=1) on the spline
+	 * @param points The control points
+	 * @param continuous If true the b-spline restarts at 0 when reaching 1
+	 * @param tmp A temporary vector used for the calculation
+	 * @return The value of out */
+	public static <T extends Vector<T>> T calculate(final T out, final float t, final T[] points, final boolean continuous, final T tmp) {
+		final int n = continuous ? points.length : points.length - 3;
+		float u = t * n;
+		int i = (t >= 1f) ? (n - 1) : (int)u;
+		u -= (float)i;
+		return calculate(out, i, u, points, continuous, tmp);
 	}
-
-	/** @return all control points */
-	public List<Vector3> getControlPoints () {
-		return controlPoints;
+	
+	/** Calculates the catmullrom value for the given span (i) at the given position (u).
+	 * @param out The Vector to set to the result.
+	 * @param i The span (0<=i<spanCount) spanCount = continuous ? points.length : points.length - degree
+	 * @param u The position (0<=u<=1) on the span
+	 * @param points The control points
+	 * @param continuous If true the b-spline restarts at 0 when reaching 1
+	 * @param tmp A temporary vector used for the calculation
+	 * @return The value of out */
+	public static <T extends Vector<T>> T calculate(final T out, final int i, final float u, final T[] points, final boolean continuous, final T tmp) {
+		final int n = points.length;
+		final float u2 = u * u;
+		final float u3 = u2 * u;
+		out.set(points[i]).mul(1.5f * u3 - 2.5f * u2 + 1.0f);
+		if (continuous || i > 0) out.add(tmp.set(points[(n+i-1)%n]).mul(-0.5f * u3 + u2 - 0.5f * u));
+		if (continuous || i < (n - 1)) out.add(tmp.set(points[(i + 1)%n]).mul(-1.5f * u3 + 2f * u2 + 0.5f * u));
+		if (continuous || i < (n - 2)) out.add(tmp.set(points[(i + 2)%n]).mul(0.5f * u3 - 0.5f * u2));
+		return out;
 	}
-
-	/** Returns a path.  Between every pair of consecutive control points numPoints are generated along the path.
-	 * The control points themselves are added to the path too.
-	 * The first and the last control point are omitted.  
-	 * If there are fewer than four control points an empty path is returned.
-	 * 
-	 * <p>This method is not thread-safe.  It uses the global {@link Vector3#tmp()}.  
-	 * 
-	 * @param numPoints number of points returned for a segment
-	 * @return the path */
-	public List<Vector3> getPath (int numPoints) {
-		ArrayList<Vector3> points = new ArrayList<Vector3>();
-
-		if (controlPoints.size() < 4) return points;
-
-		Vector3 T1 = new Vector3();
-		Vector3 T2 = new Vector3();
-
-		for (int i = 1; i <= controlPoints.size() - 3; i++) {
-			points.add(controlPoints.get(i));
-			float increment = 1.0f / (numPoints + 1);
-			float t = increment;
-
-			T1.set(controlPoints.get(i + 1)).sub(controlPoints.get(i - 1)).mul(0.5f);
-			T2.set(controlPoints.get(i + 2)).sub(controlPoints.get(i)).mul(0.5f);
-
-			for (int j = 0; j < numPoints; j++) {
-				float h1 = 2 * t * t * t - 3 * t * t + 1; // calculate basis
-				// function 1
-				float h2 = -2 * t * t * t + 3 * t * t; // calculate basis
-				// function 2
-				float h3 = t * t * t - 2 * t * t + t; // calculate basis
-				// function 3
-				float h4 = t * t * t - t * t; // calculate basis function 4
-
-				Vector3 point = new Vector3(controlPoints.get(i)).mul(h1);
-				point.add(controlPoints.get(i + 1).tmp().mul(h2));
-				point.add(T1.tmp().mul(h3));
-				point.add(T2.tmp().mul(h4));
-				points.add(point);
-				t += increment;
-			}
-		}
-
-		if (controlPoints.size() >= 4) points.add(controlPoints.get(controlPoints.size() - 2));
-
-		return points;
+	
+	public T[] controlPoints;
+	public boolean continuous;
+	public int spanCount;
+	private T tmp;
+	
+	public CatmullRomSpline() { }
+	public CatmullRomSpline(final T[] controlPoints, final boolean continuous) {
+		set(controlPoints, continuous);
 	}
-
-	/** Returns a path.  Between every pair of consecutive control points numPoints are generated along the path.
-	 * The control points themselves are added to the path too.
-	 * The first and the last control point are omitted.  
-	 * If there are fewer than four control points an empty path is returned.
-	 * 
-	 * <p>The points array must be large enough for all the path points or an exception will be thrown.
-	 * 
-	 * <p>This method is not thread-safe.  It uses the global {@link Vector3#tmp()}.  
-	 * 
-	 * @param points the array of Vector3 instances to store the path in
-	 * @param numPoints number of points returned for a segment */
-	public void getPath (Vector3[] points, int numPoints) {
-		int idx = 0;
-		if (controlPoints.size() < 4) return;
-
-		for (int i = 1; i <= controlPoints.size() - 3; i++) {
-			points[idx++].set(controlPoints.get(i));
-			float increment = 1.0f / (numPoints + 1);
-			float t = increment;
-
-			T1.set(controlPoints.get(i + 1)).sub(controlPoints.get(i - 1)).mul(0.5f);
-			T2.set(controlPoints.get(i + 2)).sub(controlPoints.get(i)).mul(0.5f);
-
-			for (int j = 0; j < numPoints; j++) {
-				float h1 = 2 * t * t * t - 3 * t * t + 1; // calculate basis
-				// function 1
-				float h2 = -2 * t * t * t + 3 * t * t; // calculate basis
-				// function 2
-				float h3 = t * t * t - 2 * t * t + t; // calculate basis
-				// function 3
-				float h4 = t * t * t - t * t; // calculate basis function 4
-
-				Vector3 point = points[idx++].set(controlPoints.get(i)).mul(h1);
-				point.add(controlPoints.get(i + 1).tmp().mul(h2));
-				point.add(T1.tmp().mul(h3));
-				point.add(T2.tmp().mul(h4));
-				t += increment;
-			}
-		}
-
-		points[idx].set(controlPoints.get(controlPoints.size() - 2));
+	
+	public CatmullRomSpline set(final T[] controlPoints, final boolean continuous) {
+		if (tmp == null)
+			tmp = controlPoints[0].cpy();
+		this.controlPoints = controlPoints;
+		this.continuous = continuous;
+		this.spanCount = continuous ? controlPoints.length : controlPoints.length - 3;
+		return this;
 	}
 
-	/** Returns all tangents for the points in a path. Same semantics as getPath.
-	 * 
-	 * <p>This method is not thread-safe.  It uses the global {@link Vector3#tmp()}.
-	 *  
-	 * @param numPoints number of points returned for a segment
-	 * @return the tangents of the points in the path */
-	public List<Vector3> getTangents (int numPoints) {
-		ArrayList<Vector3> tangents = new ArrayList<Vector3>();
-
-		if (controlPoints.size() < 4) return tangents;
-
-		Vector3 T1 = new Vector3();
-		Vector3 T2 = new Vector3();
-
-		for (int i = 1; i <= controlPoints.size() - 3; i++) {
-			float increment = 1.0f / (numPoints + 1);
-			float t = increment;
-
-			T1.set(controlPoints.get(i + 1)).sub(controlPoints.get(i - 1)).mul(0.5f);
-			T2.set(controlPoints.get(i + 2)).sub(controlPoints.get(i)).mul(0.5f);
-
-			tangents.add(new Vector3(T1).nor());
-
-			for (int j = 0; j < numPoints; j++) {
-				float h1 = 6 * t * t - 6 * t; // calculate basis function 1
-				float h2 = -6 * t * t + 6 * t; // calculate basis function 2
-				float h3 = 3 * t * t - 4 * t + 1; // calculate basis function 3
-				float h4 = 3 * t * t - 2 * t; // calculate basis function 4
-
-				Vector3 point = new Vector3(controlPoints.get(i)).mul(h1);
-				point.add(controlPoints.get(i + 1).tmp().mul(h2));
-				point.add(T1.tmp().mul(h3));
-				point.add(T2.tmp().mul(h4));
-				tangents.add(point.nor());
-				t += increment;
-			}
-		}
-
-		if (controlPoints.size() >= 4)
-			tangents.add(T1.set(controlPoints.get(controlPoints.size() - 1)).sub(controlPoints.get(controlPoints.size() - 3))
-				.mul(0.5f).cpy().nor());
-
-		return tangents;
+	@Override
+	public T valueAt (T out, float t) {
+		final int n = spanCount;
+		float u = t * n;
+		int i = (t >= 1f) ? (n - 1) : (int)u;
+		u -= (float)i;
+		return valueAt(out, i, u);
 	}
-
-	/** Returns all tangent's normals in 2D space for the points in a path. The controlpoints have to lie in the x/y plane for this
-	 * to work. Same semantics as getPath.
-	 * 
-	 * <p>This method is not thread-safe.  It uses the global {@link Vector3#tmp()}.
-	 *  
-	 * @param numPoints number of points returned for a segment
-	 * @return the tangents of the points in the path */
-	public List<Vector3> getTangentNormals2D (int numPoints) {
-		ArrayList<Vector3> tangents = new ArrayList<Vector3>();
-
-		if (controlPoints.size() < 4) return tangents;
-
-		Vector3 T1 = new Vector3();
-		Vector3 T2 = new Vector3();
-
-		for (int i = 1; i <= controlPoints.size() - 3; i++) {
-			float increment = 1.0f / (numPoints + 1);
-			float t = increment;
-
-			T1.set(controlPoints.get(i + 1)).sub(controlPoints.get(i - 1)).mul(0.5f);
-			T2.set(controlPoints.get(i + 2)).sub(controlPoints.get(i)).mul(0.5f);
-
-			Vector3 normal = new Vector3(T1).nor();
-			float x = normal.x;
-			normal.x = normal.y;
-			normal.y = -x;
-			tangents.add(normal);
-
-			for (int j = 0; j < numPoints; j++) {
-				float h1 = 6 * t * t - 6 * t; // calculate basis function 1
-				float h2 = -6 * t * t + 6 * t; // calculate basis function 2
-				float h3 = 3 * t * t - 4 * t + 1; // calculate basis function 3
-				float h4 = 3 * t * t - 2 * t; // calculate basis function 4
-
-				Vector3 point = new Vector3(controlPoints.get(i)).mul(h1);
-				point.add(controlPoints.get(i + 1).tmp().mul(h2));
-				point.add(T1.tmp().mul(h3));
-				point.add(T2.tmp().mul(h4));
-				point.nor();
-				x = point.x;
-				point.x = point.y;
-				point.y = -x;
-				tangents.add(point);
-				t += increment;
+	
+	/** @return The value of the spline at position u of the specified span */ 
+	public T valueAt(final T out, final int span, final float u) {
+		return calculate(out, continuous ? span : (span + 1), u, controlPoints, continuous, tmp);
+	}
+	
+	/** @return The span closest to the specified value */ 
+	public int nearest(final T in) {
+		return nearest(in, 0, spanCount);
+	}
+	
+	/** @return The span closest to the specified value, restricting to the specified spans. */
+	public int nearest(final T in, int start, final int count) {
+		while (start < 0) start += spanCount;
+		int result = start % spanCount;
+		float dst = in.dst2(controlPoints[result]);
+		for (int i = 1; i < count; i++) {
+			final int idx = (start + i) % spanCount;
+			final float d = in.dst2(controlPoints[idx]);
+			if (d < dst) {
+				dst = d;
+				result = idx;
 			}
 		}
-
-		return tangents;
+		return result;
 	}
-
-	/** Returns the tangent's normals using the tangent and provided up vector doing a cross product.
-	 * 
-	 * @param numPoints number of points per segment
-	 * @param up up vector
-	 * @return a list of tangent normals */
-	public List<Vector3> getTangentNormals (int numPoints, Vector3 up) {
-		List<Vector3> tangents = getTangents(numPoints);
-		ArrayList<Vector3> normals = new ArrayList<Vector3>();
-
-		for (Vector3 tangent : tangents)
-			normals.add(new Vector3(tangent).crs(up).nor());
-
-		return normals;
+	
+	@Override
+	public float approximate (T v) {
+		return approximate(v, nearest(v));
 	}
-
-	public List<Vector3> getTangentNormals (int numPoints, List<Vector3> up) {
-		List<Vector3> tangents = getTangents(numPoints);
-		ArrayList<Vector3> normals = new ArrayList<Vector3>();
-
-		int i = 0;
-		for (Vector3 tangent : tangents)
-			normals.add(new Vector3(tangent).crs(up.get(i++)).nor());
-
-		return normals;
+	
+	public float approximate(final T in, int start, final int count) {
+		return approximate(in, nearest(in, start, count));
+	}
+	
+	public float approximate(final T in, final int near) {
+		int n = near;
+		final T nearest = controlPoints[n];
+		final T previous = controlPoints[n>0?n-1:spanCount-1];
+		final T next = controlPoints[(n+1)%spanCount];
+		final float dstPrev2 = in.dst2(previous);
+		final float dstNext2 = in.dst2(next);
+		T P1, P2, P3;
+		if (dstNext2 < dstPrev2) {
+			P1 = nearest;
+			P2 = next;
+			P3 = in;
+		} else {
+			P1 = previous;
+			P2 = nearest;
+			P3 = in;
+			n = n>0?n-1:spanCount-1;
+		}
+		float L1 = P1.dst(P2);
+		float L2 = P3.dst(P2);
+		float L3 = P3.dst(P1);
+		float s = (L2*L2 + L1*L1 - L3*L3) / (2*L1);
+		float u = MathUtils.clamp((L1-s)/L1, 0f, 1f);
+		return ((float)n + u) / spanCount;
 	}
 }
diff --git a/gdx/src/com/badlogic/gdx/math/Ellipse.java b/gdx/src/com/badlogic/gdx/math/Ellipse.java
new file mode 100755
index 0000000..22b169b
--- /dev/null
+++ b/gdx/src/com/badlogic/gdx/math/Ellipse.java
@@ -0,0 +1,57 @@
+
+package com.badlogic.gdx.math;
+
+import java.io.Serializable;
+
+import com.badlogic.gdx.math.Vector2;
+
+/** A convenient 2D ellipse class, based on the circle class
+ * @author tonyp7 */
+public class Ellipse implements Serializable {
+
+	public float x, y;
+	public float width, height;
+	private float halfWidth, halfHeight;
+
+	private static final long serialVersionUID = 7381533206532032099L;
+
+	/** Construct a new ellipse with all values set to zero */
+	public Ellipse () {
+
+	}
+
+	public Ellipse (float x, float y, float width, float height) {
+		this.x = x;
+		this.y = y;
+		this.width = width;
+		this.height = height;
+	}
+
+	public Ellipse (Vector2 position, float width, float height) {
+		this.x = position.x;
+		this.y = position.y;
+		this.width = width;
+		this.height = height;
+	}
+
+	public boolean contains (float x, float y) {
+		x = x - this.x;
+		y = y - this.y;
+		halfWidth = width * 0.5f;
+		halfHeight = height * 0.5f;
+
+		return (x * x) / (halfWidth * halfWidth) + (y * y) / (halfHeight * halfHeight) <= 1.0f;
+	}
+
+	public boolean contains (Vector2 point) {
+		return contains(point.x, point.y);
+	}
+
+	public void set (float x, float y, float width, float height) {
+		this.x = x;
+		this.y = y;
+		this.width = width;
+		this.height = height;
+	}
+
+}
diff --git a/gdx/src/com/badlogic/gdx/math/Intersector.java b/gdx/src/com/badlogic/gdx/math/Intersector.java
index 47b3fe2..ef81092 100644
--- a/gdx/src/com/badlogic/gdx/math/Intersector.java
+++ b/gdx/src/com/badlogic/gdx/math/Intersector.java
@@ -364,7 +364,7 @@ public final class Intersector {
 	 * @param box The box
 	 * @param intersection The intersection point (optional)
 	 * @return Whether an intersection is present. */
-	boolean intersectRayBounds(Ray ray, BoundingBox box, Vector3 intersection)
+	public static boolean intersectRayBounds(Ray ray, BoundingBox box, Vector3 intersection)
 	{
 		Vector3.tmp.set(ray.origin);
 		Vector3.tmp2.set(ray.origin);
diff --git a/gdx/src/com/badlogic/gdx/math/MathUtils.java b/gdx/src/com/badlogic/gdx/math/MathUtils.java
index 11056e3..800b249 100644
--- a/gdx/src/com/badlogic/gdx/math/MathUtils.java
+++ b/gdx/src/com/badlogic/gdx/math/MathUtils.java
@@ -30,6 +30,7 @@ public class MathUtils {
 	// ---
 
 	static public final float PI = 3.1415927f;
+	public static final float PI2 = PI * 2;
 
 	static private final int SIN_BITS = 13; // Adjust for accuracy.
 	static private final int SIN_MASK = ~(-1 << SIN_BITS);
diff --git a/gdx/src/com/badlogic/gdx/math/Path.java b/gdx/src/com/badlogic/gdx/math/Path.java
new file mode 100644
index 0000000..e66f78e
--- /dev/null
+++ b/gdx/src/com/badlogic/gdx/math/Path.java
@@ -0,0 +1,11 @@
+package com.badlogic.gdx.math;
+
+/** Interface that specifies a path of type T within the window 0.0<=t<=1.0.
+ * @author Xoppa */
+public interface Path<T> {
+	/** @return The value of the path at t where 0<=t<=1 */
+	T valueAt(T out, float t);
+	/** @return The approximated value (between 0 and 1) on the path which is closest to the specified value.
+	 * Note that the implementation of this method might be optimized for speed against precision. */
+	float approximate(T v);
+}
diff --git a/gdx/src/com/badlogic/gdx/math/Vector.java b/gdx/src/com/badlogic/gdx/math/Vector.java
new file mode 100644
index 0000000..f03add8
--- /dev/null
+++ b/gdx/src/com/badlogic/gdx/math/Vector.java
@@ -0,0 +1,85 @@
+/*******************************************************************************
+ * Copyright 2011 See AUTHORS file.
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/
+
+package com.badlogic.gdx.math;
+
+/** Encapsulates a general vector. Allows chaining operations by returning a reference to itself in all modification methods. See
+ * {@link Vector2} and {@link Vector3} for specific implementations.
+ * @author Xoppa */
+public interface Vector<T extends Vector> {
+	/** @return a copy of this vector */
+	T cpy ();
+
+	/** @return The euclidian length */
+	float len ();
+
+	/** @return The squared euclidian length */
+	float len2 ();
+
+	/** Sets this vector from the given vector
+	 * @param v The vector
+	 * @return This vector for chaining */
+	T set (T v);
+
+	/** Substracts the given vector from this vector.
+	 * @param v The vector
+	 * @return This vector for chaining */
+	T sub (T v);
+
+	/** Normalizes this vector
+	 * @return This vector for chaining */
+	T nor ();
+
+	/** Adds the given vector to this vector
+	 * @param v The vector
+	 * @return This vector for chaining */
+	T add (T v);
+
+	/** @param v The other vector
+	 * @return The dot product between this and the other vector */
+	float dot (T v);
+
+	/** Multiplies this vector by a scalar
+	 * @param scalar The scalar
+	 * @return This vector for chaining */
+	T mul (float scalar);
+
+	/** Multiplies this vector by another vector
+	 * @return This vector for chaining */
+	T mul (T v);
+
+	T div (float scalar);
+
+	T div (T v);
+
+	/** @param v The other vector
+	 * @return the distance between this and the other vector */
+	float dst (T v);
+
+	/** @param v The other vector
+	 * @return the squared distance between this and the other vector */
+	float dst2 (T v);
+
+	/** Linearly interpolates between this vector and the target vector by alpha which is in the range [0,1]. The result is stored
+	 * in this vector.
+	 * 
+	 * @param target The target vector
+	 * @param alpha The interpolation coefficient
+	 * @return This vector for chaining. */
+	T lerp (T target, float alpha);
+
+	// TODO: T crs(T v);
+}
diff --git a/gdx/src/com/badlogic/gdx/math/Vector2.java b/gdx/src/com/badlogic/gdx/math/Vector2.java
index c956cc7..8cfada9 100644
--- a/gdx/src/com/badlogic/gdx/math/Vector2.java
+++ b/gdx/src/com/badlogic/gdx/math/Vector2.java
@@ -22,7 +22,7 @@ import com.badlogic.gdx.utils.NumberUtils;
 
 /** Encapsulates a 2D vector. Allows chaining methods by returning a reference to itself
  * @author badlogicgames@gmail.com */
-public class Vector2 implements Serializable {
+public class Vector2 implements Serializable, Vector<Vector2> {
 	private static final long serialVersionUID = 913902788239530931L;
 
 	/** Static temporary vector. Use with care! Use only when sure other code will not also use this.
@@ -151,6 +151,14 @@ public class Vector2 implements Serializable {
 		this.y *= y;
 		return this;
 	}
+	
+	/** Multiplies this vector by a vector
+	 * @return This vector for chaining */
+	public Vector2 mul (Vector2 v) {
+		this.x *= v.x;
+		this.y *= v.y;
+		return this;
+	}
 
 	public Vector2 div (float value) {
 		return this.mul(1/value);
diff --git a/gdx/src/com/badlogic/gdx/math/Vector3.java b/gdx/src/com/badlogic/gdx/math/Vector3.java
index 8d25d8d..93ed80e 100644
--- a/gdx/src/com/badlogic/gdx/math/Vector3.java
+++ b/gdx/src/com/badlogic/gdx/math/Vector3.java
@@ -22,7 +22,7 @@ import com.badlogic.gdx.utils.NumberUtils;
 
 /** Encapsulates a 3D vector. Allows chaining operations by returning a reference to itself in all modification methods.
  * @author badlogicgames@gmail.com */
-public class Vector3 implements Serializable {
+public class Vector3 implements Serializable, Vector<Vector3> {
 	private static final long serialVersionUID = 3840054589595372522L;
 
 	/** the x-component of this vector **/
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/Actor.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/Actor.java
index 8d729d1..d3a07fe 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/Actor.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/Actor.java
@@ -31,23 +31,21 @@ import com.badlogic.gdx.utils.DelayedRemovalArray;
 import com.badlogic.gdx.utils.GdxRuntimeException;
 import com.badlogic.gdx.utils.Pools;
 
-/** 2D scene graph node. An actor has a position, rectangular size, origin, scale, rotation, Z index, and color. The position corresponds to
- * the unrotated, unscaled bottom left corner of the actor. The position is relative to the actor's parent. The origin is relative
- * to the position and is used for scale and rotation.
+/** 2D scene graph node. An actor has a position, rectangular size, origin, scale, rotation, Z index, and color. The position
+ * corresponds to the unrotated, unscaled bottom left corner of the actor. The position is relative to the actor's parent. The
+ * origin is relative to the position and is used for scale and rotation.
  * <p>
- * An actor has a list of in-progress {@link Action actions} that are applied to the actor (over time).  These are generally used to change
- * the presentation of the actor (moving it, resizing it, etc).  See {@link #act(float)} and {@link Action}.
+ * An actor has a list of in-progress {@link Action actions} that are applied to the actor (over time). These are generally used to
+ * change the presentation of the actor (moving it, resizing it, etc). See {@link #act(float)} and {@link Action}.
  * <p>
- * An actor has two kinds of listeners associated with it: "capture" and regular.  
- * The listeners are notified of
- * events the actor or its children receive. 
- * The capture listeners are 
- * designed to allow a parent or container actor to hide events from child actors.  The regular listeners
- * are designed to allow an actor to respond to events that have been delivered.  See {@link #fire} for more details.
+ * An actor has two kinds of listeners associated with it: "capture" and regular. The listeners are notified of events the actor
+ * or its children receive. The capture listeners are designed to allow a parent or container actor to hide events from child
+ * actors. The regular listeners are designed to allow an actor to respond to events that have been delivered. See {@link #fire}
+ * for more details.
  * <p>
- * An {@link InputListener} can receive all the basic input events, and more 
- * complex listeners (like {@link ClickListener} and {@link ActorGestureListener}) can listen for and combine 
- * primitive events and recognize complex interactions like multi-click or pinch. 
+ * An {@link InputListener} can receive all the basic input events, and more complex listeners (like {@link ClickListener} and
+ * {@link ActorGestureListener}) can listen for and combine primitive events and recognize complex interactions like multi-click
+ * or pinch.
  * 
  * @author mzechner
  * @author Nathan Sweet */
@@ -98,15 +96,14 @@ public class Actor {
 	/** Sets this actor as the event {@link Event#setTarget(Actor) target} and propagates the event to this actor and ancestor
 	 * actors as necessary. If this actor is not in the stage, the stage must be set before calling this method.
 	 * <p>
-	 * Events are fired in 2 phases. 
+	 * Events are fired in 2 phases.
 	 * <ol>
-	 * <li>The first phase (the "capture" phase) notifies listeners on each actor starting at the root and propagating downward
-	 * to (and including) this actor.</li> 
-	 * <li>The second phase notifies listeners on each actor starting at this actor and, if
-	 * {@link Event#getBubbles()} is true, propagating upward to the root.</li>
+	 * <li>The first phase (the "capture" phase) notifies listeners on each actor starting at the root and propagating downward to
+	 * (and including) this actor.</li>
+	 * <li>The second phase notifies listeners on each actor starting at this actor and, if {@link Event#getBubbles()} is true,
+	 * propagating upward to the root.</li>
 	 * </ol>
-	 * If the event is {@link Event#stop() stopped} at any time,
-	 * it will not propagate to the next actor.
+	 * If the event is {@link Event#stop() stopped} at any time, it will not propagate to the next actor.
 	 * @return true if the event was {@link Event#cancel() cancelled}. */
 	public boolean fire (Event event) {
 		if (event.getStage() == null) event.setStage(getStage());
@@ -188,7 +185,8 @@ public class Actor {
 	 * {@link #isVisible() visible}, or null if no actor was hit. The point is specified in the actor's local coordinate system (0,0
 	 * is the bottom left of the actor and width,height is the upper right).
 	 * <p>
-	 * This method is used to delegate touchDown, mouse, and enter/exit events. If this method returns null, those events will not occur on this Actor.
+	 * This method is used to delegate touchDown, mouse, and enter/exit events. If this method returns null, those events will not
+	 * occur on this Actor.
 	 * <p>
 	 * The default implementation returns this actor if the point is within this actor's bounds.
 	 * 
@@ -206,9 +204,7 @@ public class Actor {
 		return false;
 	}
 
-	/**
-	 * Add a listener to receive events that {@link #hit(float, float, boolean) hit} this actor.  
-	 * See {@link #fire(Event)}.
+	/** Add a listener to receive events that {@link #hit(float, float, boolean) hit} this actor. See {@link #fire(Event)}.
 	 * 
 	 * @see InputListener
 	 * @see ClickListener */
@@ -263,6 +259,18 @@ public class Actor {
 		actions.clear();
 	}
 
+	/** Removes all listeners on this actor. */
+	public void clearListeners () {
+		listeners.clear();
+		captureListeners.clear();
+	}
+
+	/** Removes all actions and listeners on this actor. */
+	public void clear () {
+		clearActions();
+		clearListeners();
+	}
+
 	/** Returns the stage that this actor is currently in, or null if not in a stage. */
 	public Stage getStage () {
 		return stage;
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/Group.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/Group.java
index ab41c0e..3c37a0e 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/Group.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/Group.java
@@ -268,7 +268,7 @@ public class Group extends Actor implements Cullable {
 	}
 
 	/** Removes all actors from this group. */
-	public void clear () {
+	public void clearChildren () {
 		Actor[] actors = children.begin();
 		for (int i = 0, n = children.size; i < n; i++) {
 			Actor child = actors[i];
@@ -280,6 +280,12 @@ public class Group extends Actor implements Cullable {
 		childrenChanged();
 	}
 
+	/** Removes all children, actions, and listeners from this group. */
+	public void clear () {
+		super.clear();
+		clearChildren();
+	}
+
 	/** Returns the first actor found with the specified name. Note this recursively compares the name of every actor in the group. */
 	public Actor findActor (String name) {
 		Array<Actor> children = this.children;
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/InputListener.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/InputListener.java
index 3ecbf5b..7893ffb 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/InputListener.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/InputListener.java
@@ -22,7 +22,6 @@ import com.badlogic.gdx.math.Vector2;
  * the methods here do nothing with the event.  Users are expected to override the methods they are interested in, like this:
  * 
  * <pre>
- * {@code
  * actor.addListener(new InputListener() {
  *    public boolean touchDown(InputEvent event, float x, float y, int pointer, int button) {
  *       Gdx.app.log("Example", "touch started at (" +x+ ", " +y+ ")");
@@ -31,7 +30,6 @@ import com.badlogic.gdx.math.Vector2;
  *       Gdx.app.log("Example", "touch done at (" +x+ ", " +y+ ")");
  *    }
  * });
- * }
  * </pre>
  */
 public class InputListener implements EventListener {
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java
index 30c7a7b..8286ff1 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java
@@ -46,7 +46,7 @@ import com.badlogic.gdx.utils.SnapshotArray;
  * {@link Input#setInputProcessor(com.badlogic.gdx.InputProcessor) Gdx.input.setInputProcessor}. An {@link InputMultiplexer} may be
  * used to handle input events before or after the stage does. If an actor handles an event by returning true from the input
  * method, then the stage's input method will also return true, causing subsequent InputProcessors to not receive the event.
-
+ * 
  * @author mzechner
  * @author Nathan Sweet */
 public class Stage extends InputAdapter implements Disposable {
@@ -507,7 +507,7 @@ public class Stage extends InputAdapter implements Disposable {
 		return root.removeCaptureListener(listener);
 	}
 
-	/** Clears the stage, removing all actors. */
+	/** Removes the root's children, actions, and listeners. */
 	public void clear () {
 		unfocusAll();
 		root.clear();
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/CheckBox.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/CheckBox.java
index eb8b716..22b88bc 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/CheckBox.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/CheckBox.java
@@ -38,7 +38,7 @@ public class CheckBox extends TextButton {
 
 	public CheckBox (String text, CheckBoxStyle style) {
 		super(text, style);
-		clear();
+		clearChildren();
 		add(image = new Image(style.checkboxOff));
 		Label label = getLabel();
 		add(label);
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Slider.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Slider.java
index bd7005c..f3455b8 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Slider.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Slider.java
@@ -219,7 +219,6 @@ public class Slider extends Widget {
 
 	/** Sets the slider position, rounded to the nearest step size and clamped to the minumum and maximim values. */
 	public void setValue (float value) {
-		if (value < min || value > max) throw new IllegalArgumentException("value must be >= min and <= max: " + value);
 		value = MathUtils.clamp(Math.round(value / stepSize) * stepSize, min, max);
 		float oldValue = this.value;
 		if (value == oldValue) return;
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java
index 9e25796..7b8a409 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java
@@ -177,8 +177,8 @@ public class Table extends WidgetGroup {
 	}
 
 	/** Removes all actors and cells from the table. */
-	public void clear () {
-		super.clear();
+	public void clearChildren () {
+		super.clearChildren();
 		layout.clear();
 		invalidate();
 	}
@@ -250,8 +250,8 @@ public class Table extends WidgetGroup {
 		layout.layout();
 	}
 
-	/** Removes all actors and cells from the table (same as {@link #clear()}) and additionally resets all table properties and
-	 * cell, column, and row defaults. */
+	/** Removes all actors and cells from the table (same as {@link #clearChildren()}) and additionally resets all table properties
+	 * and cell, column, and row defaults. */
 	public void reset () {
 		layout.reset();
 	}
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Tree.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Tree.java
index b4c41d6..32e3ed4 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Tree.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Tree.java
@@ -143,8 +143,8 @@ public class Tree extends WidgetGroup {
 	}
 
 	/** Removes all tree nodes. */
-	public void clear () {
-		super.clear();
+	public void clearChildren () {
+		super.clearChildren();
 		rootNodes.clear();
 		selectedNodes.clear();
 		setOverNode(null);
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/DragAndDrop.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/DragAndDrop.java
index 13c8e52..a74d300 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/DragAndDrop.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/DragAndDrop.java
@@ -40,10 +40,18 @@ public class DragAndDrop {
 	float dragActorX = 14, dragActorY = -20;
 	long dragStartTime;
 	int dragTime = 250;
+	int activePointer = -1;
 
 	public void addSource (final Source source) {
 		DragListener listener = new DragListener() {
 			public void dragStart (InputEvent event, float x, float y, int pointer) {
+				if (activePointer != -1) {
+					event.stop();
+					return;
+				}
+
+				activePointer = pointer;
+
 				dragStartTime = System.currentTimeMillis();
 				payload = source.dragStart(event, getTouchDownX(), getTouchDownY(), pointer);
 				event.stop();
@@ -51,6 +59,8 @@ public class DragAndDrop {
 
 			public void drag (InputEvent event, float x, float y, int pointer) {
 				if (payload == null) return;
+				if (pointer != activePointer) return;
+
 				Stage stage = event.getStage();
 
 				Touchable dragActorTouchable = null;
@@ -102,6 +112,10 @@ public class DragAndDrop {
 
 			public void dragStop (InputEvent event, float x, float y, int pointer) {
 				if (payload == null) return;
+				if (pointer != activePointer) return;
+
+				activePointer = -1;
+
 				if (System.currentTimeMillis() - dragStartTime < dragTime) isValidTarget = false;
 				if (dragActor != null) dragActor.remove();
 				if (isValidTarget) {
diff --git a/gdx/src/com/badlogic/gdx/utils/Timer.java b/gdx/src/com/badlogic/gdx/utils/Timer.java
index 7fccd77..4b7228e 100644
--- a/gdx/src/com/badlogic/gdx/utils/Timer.java
+++ b/gdx/src/com/badlogic/gdx/utils/Timer.java
@@ -30,8 +30,13 @@ public class Timer {
 					synchronized (instances) {
 						float time = System.nanoTime() * MathUtils.nanoToSec;
 						float wait = Float.MAX_VALUE;
-						for (int i = 0, n = instances.size; i < n; i++)
-							wait = Math.min(wait, instances.get(i).update(time));
+						for (int i = 0, n = instances.size; i < n; i++) {
+							try {
+								wait = instances.get(i).update(time, wait);
+							} catch (Throwable ex) {
+								throw new GdxRuntimeException("Task failed: " + instances.get(i).getClass().getName(), ex);
+							}
+						}
 						long waitMillis = (long)(wait * 1000);
 						try {
 							if (waitMillis > 0) instances.wait(waitMillis);
@@ -78,7 +83,7 @@ public class Timer {
 		task.executeTime = System.nanoTime() * MathUtils.nanoToSec + delaySeconds;
 		task.intervalSeconds = intervalSeconds;
 		task.repeatCount = repeatCount;
-		synchronized(tasks) {
+		synchronized (tasks) {
 			tasks.add(task);
 		}
 		wake();
@@ -102,16 +107,15 @@ public class Timer {
 
 	/** Cancels all tasks. */
 	public void clear () {
-		synchronized(tasks) {
+		synchronized (tasks) {
 			for (int i = 0, n = tasks.size; i < n; i++)
 				tasks.get(i).cancel();
 			tasks.clear();
 		}
 	}
 
-	float update (float time) {
-		float wait = Float.MAX_VALUE;
-		synchronized(tasks) {
+	float update (float time, float wait) {
+		synchronized (tasks) {
 			for (int i = 0, n = tasks.size; i < n; i++) {
 				Task task = tasks.get(i);
 				if (task.executeTime > time) {
@@ -119,7 +123,10 @@ public class Timer {
 					continue;
 				}
 				if (task.repeatCount != CANCELLED) {
-					if (task.repeatCount == 0) task.repeatCount = CANCELLED; // Set cancelled before run so it may be rescheduled in run.
+					if (task.repeatCount == 0) {
+						// Set cancelled before run so it may be rescheduled in run.
+						task.repeatCount = CANCELLED;
+					}
 					Gdx.app.postRunnable(task);
 				}
 				if (task.repeatCount == CANCELLED) {
diff --git a/tests/gdx-tests-android/.classpath b/tests/gdx-tests-android/.classpath
index 2616471..fad05fb 100644
--- a/tests/gdx-tests-android/.classpath
+++ b/tests/gdx-tests-android/.classpath
@@ -1,17 +1,17 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<classpath>
-	<classpathentry excluding="**/.svn/*" kind="src" path="src"/>
-	<classpathentry excluding="**/.svn/*" kind="src" path="gen"/>
-	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx"/>
-	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx-backend-android"/>
-	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx-tests"/>
-	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx-audio"/>
-	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx-freetype"/>
-	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx-image"/>
-	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx-bullet"/>
-	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx-controllers"/>
-	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx-controllers-android"/>
-	<classpathentry kind="con" path="com.android.ide.eclipse.adt.ANDROID_FRAMEWORK"/>
-	<classpathentry exported="true" kind="con" path="com.android.ide.eclipse.adt.LIBRARIES"/>
-	<classpathentry kind="output" path="bin/classes"/>
-</classpath>
+<?xml version="1.0" encoding="UTF-8"?>
+<classpath>
+	<classpathentry excluding="**/.svn/*" kind="src" path="src"/>
+	<classpathentry excluding="**/.svn/*" kind="src" path="gen"/>
+	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx"/>
+	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx-backend-android"/>
+	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx-tests"/>
+	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx-audio"/>
+	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx-freetype"/>
+	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx-image"/>
+	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx-bullet"/>
+	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx-controllers"/>
+	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx-controllers-android"/>
+	<classpathentry kind="con" path="com.android.ide.eclipse.adt.ANDROID_FRAMEWORK"/>
+	<classpathentry exported="true" kind="con" path="com.android.ide.eclipse.adt.LIBRARIES"/>
+	<classpathentry kind="output" path="bin/classes"/>
+</classpath>
diff --git a/tests/gdx-tests-android/assets/data/gleed.png b/tests/gdx-tests-android/assets/data/gleed.png
index 2577edf..0845bb2 100644
Binary files a/tests/gdx-tests-android/assets/data/gleed.png and b/tests/gdx-tests-android/assets/data/gleed.png differ
diff --git a/tests/gdx-tests-android/assets/data/gleedtest.xml b/tests/gdx-tests-android/assets/data/gleedtest.xml
index f79bb76..6766f80 100644
--- a/tests/gdx-tests-android/assets/data/gleedtest.xml
+++ b/tests/gdx-tests-android/assets/data/gleedtest.xml
@@ -3,5024 +3,13 @@
     <Layers>
         <Layer Name="Background" Visible="true">
             <Items>
-                <Item xsi:type="TextureItem" Name="Texture_0001" Visible="true">
-                    <Position>
-                        <X>-832</X>
-                        <Y>0</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01</asset_name>
-                    <Origin>
-                        <X>100</X>
-                        <Y>360</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0002" Visible="true">
-                    <Position>
-                        <X>-640</X>
-                        <Y>0</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01</asset_name>
-                    <Origin>
-                        <X>100</X>
-                        <Y>360</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0003" Visible="true">
-                    <Position>
-                        <X>-640</X>
-                        <Y>0</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01</asset_name>
-                    <Origin>
-                        <X>100</X>
-                        <Y>360</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0004" Visible="true">
-                    <Position>
-                        <X>-448</X>
-                        <Y>0</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01</asset_name>
-                    <Origin>
-                        <X>100</X>
-                        <Y>360</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0005" Visible="true">
-                    <Position>
-                        <X>-448</X>
-                        <Y>0</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01</asset_name>
-                    <Origin>
-                        <X>100</X>
-                        <Y>360</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0006" Visible="true">
-                    <Position>
-                        <X>-256</X>
-                        <Y>0</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01</asset_name>
-                    <Origin>
-                        <X>100</X>
-                        <Y>360</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0007" Visible="true">
-                    <Position>
-                        <X>-256</X>
-                        <Y>0</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01</asset_name>
-                    <Origin>
-                        <X>100</X>
-                        <Y>360</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0008" Visible="true">
-                    <Position>
-                        <X>-64</X>
-                        <Y>0</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01</asset_name>
-                    <Origin>
-                        <X>100</X>
-                        <Y>360</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0009" Visible="true">
-                    <Position>
-                        <X>-64</X>
-                        <Y>0</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01</asset_name>
-                    <Origin>
-                        <X>100</X>
-                        <Y>360</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0010" Visible="true">
-                    <Position>
-                        <X>128</X>
-                        <Y>0</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01</asset_name>
-                    <Origin>
-                        <X>100</X>
-                        <Y>360</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0011" Visible="true">
-                    <Position>
-                        <X>100</X>
-                        <Y>0</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01</asset_name>
-                    <Origin>
-                        <X>100</X>
-                        <Y>360</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0012" Visible="true">
-                    <Position>
-                        <X>320</X>
-                        <Y>0</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01</asset_name>
-                    <Origin>
-                        <X>100</X>
-                        <Y>360</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0013" Visible="true">
-                    <Position>
-                        <X>320</X>
-                        <Y>0</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01</asset_name>
-                    <Origin>
-                        <X>100</X>
-                        <Y>360</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0014" Visible="true">
-                    <Position>
-                        <X>512</X>
-                        <Y>0</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01</asset_name>
-                    <Origin>
-                        <X>100</X>
-                        <Y>360</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0015" Visible="true">
-                    <Position>
-                        <X>512</X>
-                        <Y>0</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01</asset_name>
-                    <Origin>
-                        <X>100</X>
-                        <Y>360</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0016" Visible="true">
-                    <Position>
-                        <X>704</X>
-                        <Y>0</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01</asset_name>
-                    <Origin>
-                        <X>100</X>
-                        <Y>360</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0017" Visible="true">
-                    <Position>
-                        <X>704</X>
-                        <Y>0</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01</asset_name>
-                    <Origin>
-                        <X>100</X>
-                        <Y>360</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0018" Visible="true">
-                    <Position>
-                        <X>896</X>
-                        <Y>0</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01</asset_name>
-                    <Origin>
-                        <X>100</X>
-                        <Y>360</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0019" Visible="true">
-                    <Position>
-                        <X>896</X>
-                        <Y>0</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01</asset_name>
-                    <Origin>
-                        <X>100</X>
-                        <Y>360</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0020" Visible="true">
-                    <Position>
-                        <X>1088</X>
-                        <Y>0</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01</asset_name>
-                    <Origin>
-                        <X>100</X>
-                        <Y>360</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0021" Visible="true">
-                    <Position>
-                        <X>1088</X>
-                        <Y>0</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01</asset_name>
-                    <Origin>
-                        <X>100</X>
-                        <Y>360</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0022" Visible="true">
-                    <Position>
-                        <X>1280</X>
-                        <Y>0</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01</asset_name>
-                    <Origin>
-                        <X>100</X>
-                        <Y>360</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0023" Visible="true">
-                    <Position>
-                        <X>1280</X>
-                        <Y>0</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01</asset_name>
-                    <Origin>
-                        <X>100</X>
-                        <Y>360</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0024" Visible="true">
-                    <Position>
-                        <X>1472</X>
-                        <Y>0</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01</asset_name>
-                    <Origin>
-                        <X>100</X>
-                        <Y>360</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0025" Visible="true">
-                    <Position>
-                        <X>1472</X>
-                        <Y>0</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01</asset_name>
-                    <Origin>
-                        <X>100</X>
-                        <Y>360</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0026" Visible="true">
-                    <Position>
-                        <X>1664</X>
-                        <Y>0</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01</asset_name>
-                    <Origin>
-                        <X>100</X>
-                        <Y>360</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0027" Visible="true">
-                    <Position>
-                        <X>-832</X>
-                        <Y>0</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01</asset_name>
-                    <Origin>
-                        <X>100</X>
-                        <Y>360</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0028" Visible="true">
-                    <Position>
-                        <X>-1024</X>
-                        <Y>0</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01</asset_name>
-                    <Origin>
-                        <X>100</X>
-                        <Y>360</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0029" Visible="true">
-                    <Position>
-                        <X>-1024</X>
-                        <Y>0</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01</asset_name>
-                    <Origin>
-                        <X>100</X>
-                        <Y>360</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0030" Visible="true">
-                    <Position>
-                        <X>-1216</X>
-                        <Y>0</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01</asset_name>
-                    <Origin>
-                        <X>100</X>
-                        <Y>360</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0032" Visible="true">
-                    <Position>
-                        <X>-1408</X>
-                        <Y>0</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01</asset_name>
-                    <Origin>
-                        <X>100</X>
-                        <Y>360</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0033" Visible="true">
-                    <Position>
-                        <X>-1400</X>
-                        <Y>0</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01</asset_name>
-                    <Origin>
-                        <X>100</X>
-                        <Y>360</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0040" Visible="true">
-                    <Position>
-                        <X>-640</X>
-                        <Y>-256</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\04.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\04</asset_name>
-                    <Origin>
-                        <X>90</X>
-                        <Y>53</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0034" Visible="true">
-                    <Position>
-                        <X>-1600</X>
-                        <Y>0</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\01</asset_name>
-                    <Origin>
-                        <X>100</X>
-                        <Y>360</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0038" Visible="true">
-                    <Position>
-                        <X>-576</X>
-                        <Y>-64</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0.0153565705</Rotation>
-                    <Scale>
-                        <X>0.69945097</X>
-                        <Y>0.69945097</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\02.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\02</asset_name>
-                    <Origin>
-                        <X>389</X>
-                        <Y>285</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0035" Visible="true">
-                    <Position>
-                        <X>-832</X>
-                        <Y>0</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\02.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\02</asset_name>
-                    <Origin>
-                        <X>389</X>
-                        <Y>285</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0036" Visible="true">
-                    <Position>
-                        <X>-192</X>
-                        <Y>0</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>-0.116378665</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>true</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\02.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\02</asset_name>
-                    <Origin>
-                        <X>389</X>
-                        <Y>285</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0037" Visible="true">
-                    <Position>
-                        <X>-192</X>
-                        <Y>0</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>-0.116378665</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>true</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\02.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\02</asset_name>
-                    <Origin>
-                        <X>389</X>
-                        <Y>285</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0039" Visible="true">
-                    <Position>
-                        <X>-1000</X>
-                        <Y>-200</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\03.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\03</asset_name>
-                    <Origin>
-                        <X>89</X>
-                        <Y>53</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0041" Visible="true">
-                    <Position>
-                        <X>-200</X>
-                        <Y>-200</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\03.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\03</asset_name>
-                    <Origin>
-                        <X>89</X>
-                        <Y>53</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0170" Visible="true">
-                    <Position>
-                        <X>200</X>
-                        <Y>-200</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\05.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\05</asset_name>
-                    <Origin>
-                        <X>99</X>
-                        <Y>99</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0228" Visible="true">
-                    <Position>
-                        <X>800</X>
-                        <Y>100</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>0.5802791</X>
-                        <Y>0.5802791</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>true</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\02.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\02</asset_name>
-                    <Origin>
-                        <X>389</X>
-                        <Y>285</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0225" Visible="true">
-                    <Position>
-                        <X>400</X>
-                        <Y>100</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\02.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\02</asset_name>
-                    <Origin>
-                        <X>389</X>
-                        <Y>285</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0227" Visible="true">
-                    <Position>
-                        <X>1500</X>
-                        <Y>100</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>0.5802791</X>
-                        <Y>0.5802791</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>true</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\02.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\02</asset_name>
-                    <Origin>
-                        <X>389</X>
-                        <Y>285</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0226" Visible="true">
-                    <Position>
-                        <X>1100</X>
-                        <Y>0</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>true</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\02.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\02</asset_name>
-                    <Origin>
-                        <X>389</X>
-                        <Y>285</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0229" Visible="true">
-                    <Position>
-                        <X>-1500</X>
-                        <Y>-100</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0.5102626</Rotation>
-                    <Scale>
-                        <X>1.16730654</X>
-                        <Y>1.16730654</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\03.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\03</asset_name>
-                    <Origin>
-                        <X>89</X>
-                        <Y>53</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0230" Visible="true">
-                    <Position>
-                        <X>700</X>
-                        <Y>-200</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>-0.3725462</Rotation>
-                    <Scale>
-                        <X>0.7407108</X>
-                        <Y>0.7407108</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\03.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\03</asset_name>
-                    <Origin>
-                        <X>89</X>
-                        <Y>53</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0231" Visible="true">
-                    <Position>
-                        <X>1100</X>
-                        <Y>-200</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\03.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\03</asset_name>
-                    <Origin>
-                        <X>89</X>
-                        <Y>53</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0232" Visible="true">
-                    <Position>
-                        <X>1300</X>
-                        <Y>-100</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0.224775881</Rotation>
-                    <Scale>
-                        <X>0.703280866</X>
-                        <Y>0.703280866</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>true</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\03.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\03</asset_name>
-                    <Origin>
-                        <X>89</X>
-                        <Y>53</Y>
-                    </Origin>
-                </Item>
-            </Items>
-            <ScrollSpeed>
-                <X>1</X>
-                <Y>1</Y>
-            </ScrollSpeed>
-        </Layer>
-        <Layer Name="Objects" Visible="true">
-            <Items>
-                <Item xsi:type="TextureItem" Name="Texture_0233" Visible="true">
-                    <Position>
-                        <X>-1500</X>
-                        <Y>242</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\07.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\07</asset_name>
-                    <Origin>
-                        <X>28</X>
-                        <Y>16</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0234" Visible="true">
-                    <Position>
-                        <X>-1314</X>
-                        <Y>136</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\07.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\07</asset_name>
-                    <Origin>
-                        <X>28</X>
-                        <Y>16</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0235" Visible="true">
-                    <Position>
-                        <X>-1160</X>
-                        <Y>144</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\07.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\07</asset_name>
-                    <Origin>
-                        <X>28</X>
-                        <Y>16</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0236" Visible="true">
-                    <Position>
-                        <X>-1240</X>
-                        <Y>141</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\07.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\07</asset_name>
-                    <Origin>
-                        <X>28</X>
-                        <Y>16</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0237" Visible="true">
-                    <Position>
-                        <X>-806</X>
-                        <Y>237</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\07.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\07</asset_name>
-                    <Origin>
-                        <X>28</X>
-                        <Y>16</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0238" Visible="true">
-                    <Position>
-                        <X>-713</X>
-                        <Y>246</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\07.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\07</asset_name>
-                    <Origin>
-                        <X>28</X>
-                        <Y>16</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0239" Visible="true">
-                    <Position>
-                        <X>-613</X>
-                        <Y>141</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\07.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\07</asset_name>
-                    <Origin>
-                        <X>28</X>
-                        <Y>16</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0244" Visible="true">
-                    <Position>
-                        <X>-954</X>
-                        <Y>126</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\12.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\12</asset_name>
-                    <Origin>
-                        <X>70</X>
-                        <Y>39</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0240" Visible="true">
-                    <Position>
-                        <X>-1417</X>
-                        <Y>122</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\13.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\13</asset_name>
-                    <Origin>
-                        <X>86</X>
-                        <Y>136</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0242" Visible="true">
-                    <Position>
-                        <X>-1010</X>
-                        <Y>66</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>0.7168636</X>
-                        <Y>0.7168636</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\13.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\13</asset_name>
-                    <Origin>
-                        <X>86</X>
-                        <Y>136</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0241" Visible="true">
-                    <Position>
-                        <X>-1091</X>
-                        <Y>10</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1.13643074</X>
-                        <Y>1.13643074</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\13.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\13</asset_name>
-                    <Origin>
-                        <X>86</X>
-                        <Y>136</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0243" Visible="true">
-                    <Position>
-                        <X>-517</X>
-                        <Y>126</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\12.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\12</asset_name>
-                    <Origin>
-                        <X>70</X>
-                        <Y>39</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0245" Visible="true">
-                    <Position>
-                        <X>-272</X>
-                        <Y>137</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1.37018466</X>
-                        <Y>1.37018466</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\08.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\08</asset_name>
-                    <Origin>
-                        <X>22</X>
-                        <Y>11</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0246" Visible="true">
-                    <Position>
-                        <X>-114</X>
-                        <Y>137</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1.37018466</X>
-                        <Y>1.37018466</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>true</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\08.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\08</asset_name>
-                    <Origin>
-                        <X>22</X>
-                        <Y>11</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0247" Visible="true">
-                    <Position>
-                        <X>-199</X>
-                        <Y>138</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\07.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\07</asset_name>
-                    <Origin>
-                        <X>28</X>
-                        <Y>16</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0248" Visible="true">
-                    <Position>
-                        <X>-37</X>
-                        <Y>142</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\07.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\07</asset_name>
-                    <Origin>
-                        <X>28</X>
-                        <Y>16</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0249" Visible="true">
-                    <Position>
-                        <X>-391</X>
-                        <Y>240</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\07.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\07</asset_name>
-                    <Origin>
-                        <X>28</X>
-                        <Y>16</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0250" Visible="true">
-                    <Position>
-                        <X>122</X>
-                        <Y>37</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\12.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\12</asset_name>
-                    <Origin>
-                        <X>70</X>
-                        <Y>39</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0251" Visible="true">
-                    <Position>
-                        <X>196</X>
-                        <Y>-68</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\13.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\13</asset_name>
-                    <Origin>
-                        <X>86</X>
-                        <Y>136</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0252" Visible="true">
-                    <Position>
-                        <X>359</X>
-                        <Y>139</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\08.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\08</asset_name>
-                    <Origin>
-                        <X>22</X>
-                        <Y>11</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0253" Visible="true">
-                    <Position>
-                        <X>457</X>
-                        <Y>138</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1.2272346</X>
-                        <Y>1.2272346</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>true</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\08.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\08</asset_name>
-                    <Origin>
-                        <X>22</X>
-                        <Y>11</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0254" Visible="true">
-                    <Position>
-                        <X>596</X>
-                        <Y>138</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1.2272346</X>
-                        <Y>1.2272346</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\08.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\08</asset_name>
-                    <Origin>
-                        <X>22</X>
-                        <Y>11</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0255" Visible="true">
-                    <Position>
-                        <X>303</X>
-                        <Y>141</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\07.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\07</asset_name>
-                    <Origin>
-                        <X>28</X>
-                        <Y>16</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0256" Visible="true">
-                    <Position>
-                        <X>421</X>
-                        <Y>139</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\07.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\07</asset_name>
-                    <Origin>
-                        <X>28</X>
-                        <Y>16</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0257" Visible="true">
-                    <Position>
-                        <X>582</X>
-                        <Y>141</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>true</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\07.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\07</asset_name>
-                    <Origin>
-                        <X>28</X>
-                        <Y>16</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0258" Visible="true">
-                    <Position>
-                        <X>647</X>
-                        <Y>21</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\13.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\13</asset_name>
-                    <Origin>
-                        <X>86</X>
-                        <Y>136</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0259" Visible="true">
-                    <Position>
-                        <X>933</X>
-                        <Y>141</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\08.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\08</asset_name>
-                    <Origin>
-                        <X>22</X>
-                        <Y>11</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0260" Visible="true">
-                    <Position>
-                        <X>1022</X>
-                        <Y>-77</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\12.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\12</asset_name>
-                    <Origin>
-                        <X>70</X>
-                        <Y>39</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0261" Visible="true">
-                    <Position>
-                        <X>1125</X>
-                        <Y>-60</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\07.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\07</asset_name>
-                    <Origin>
-                        <X>28</X>
-                        <Y>16</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0263" Visible="true">
-                    <Position>
-                        <X>1666</X>
-                        <Y>127</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\12.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\12</asset_name>
-                    <Origin>
-                        <X>70</X>
-                        <Y>39</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0262" Visible="true">
-                    <Position>
-                        <X>1686</X>
-                        <Y>24</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\13.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\13</asset_name>
-                    <Origin>
-                        <X>86</X>
-                        <Y>136</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0265" Visible="true">
-                    <Position>
-                        <X>1480</X>
-                        <Y>137</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>0.7259246</X>
-                        <Y>0.7259246</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\12.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\12</asset_name>
-                    <Origin>
-                        <X>70</X>
-                        <Y>39</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0264" Visible="true">
-                    <Position>
-                        <X>1582</X>
-                        <Y>122</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1.18708253</X>
-                        <Y>1.18708253</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\12.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\12</asset_name>
-                    <Origin>
-                        <X>70</X>
-                        <Y>39</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0266" Visible="true">
-                    <Position>
-                        <X>1273</X>
-                        <Y>239</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\07.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\07</asset_name>
-                    <Origin>
-                        <X>28</X>
-                        <Y>16</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0267" Visible="true">
-                    <Position>
-                        <X>1321</X>
-                        <Y>239</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\07.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\07</asset_name>
-                    <Origin>
-                        <X>28</X>
-                        <Y>16</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0268" Visible="true">
-                    <Position>
-                        <X>1691</X>
-                        <Y>140</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\07.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\07</asset_name>
-                    <Origin>
-                        <X>28</X>
-                        <Y>16</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0269" Visible="true">
-                    <Position>
-                        <X>1200</X>
-                        <Y>143</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\07.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\07</asset_name>
-                    <Origin>
-                        <X>28</X>
-                        <Y>16</Y>
-                    </Origin>
-                </Item>
-            </Items>
-            <ScrollSpeed>
-                <X>1</X>
-                <Y>1</Y>
-            </ScrollSpeed>
-        </Layer>
-        <Layer Name="Terrain" Visible="true">
-            <Items>
-                <Item xsi:type="TextureItem" Name="Texture_0085" Visible="true">
-                    <Position>
-                        <X>-1700</X>
-                        <Y>400</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0086" Visible="true">
-                    <Position>
-                        <X>-1700</X>
-                        <Y>300</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0087" Visible="true">
-                    <Position>
-                        <X>-1600</X>
-                        <Y>400</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0088" Visible="true">
-                    <Position>
-                        <X>-1600</X>
-                        <Y>300</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0089" Visible="true">
-                    <Position>
-                        <X>-1500</X>
-                        <Y>400</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0091" Visible="true">
-                    <Position>
-                        <X>-1400</X>
-                        <Y>400</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0093" Visible="true">
-                    <Position>
-                        <X>-1300</X>
-                        <Y>400</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0094" Visible="true">
-                    <Position>
-                        <X>-1300</X>
-                        <Y>300</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0095" Visible="true">
-                    <Position>
-                        <X>-1200</X>
-                        <Y>400</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0096" Visible="true">
-                    <Position>
-                        <X>-1200</X>
-                        <Y>300</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0097" Visible="true">
-                    <Position>
-                        <X>-1100</X>
-                        <Y>400</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0098" Visible="true">
-                    <Position>
-                        <X>-1100</X>
-                        <Y>300</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0099" Visible="true">
-                    <Position>
-                        <X>-1000</X>
-                        <Y>400</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0100" Visible="true">
-                    <Position>
-                        <X>-1000</X>
-                        <Y>300</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0101" Visible="true">
-                    <Position>
-                        <X>-900</X>
-                        <Y>400</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0102" Visible="true">
-                    <Position>
-                        <X>-900</X>
-                        <Y>300</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0103" Visible="true">
-                    <Position>
-                        <X>-800</X>
-                        <Y>400</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0105" Visible="true">
-                    <Position>
-                        <X>-700</X>
-                        <Y>400</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0107" Visible="true">
-                    <Position>
-                        <X>-600</X>
-                        <Y>400</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0108" Visible="true">
-                    <Position>
-                        <X>-600</X>
-                        <Y>300</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0109" Visible="true">
-                    <Position>
-                        <X>-500</X>
-                        <Y>400</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0110" Visible="true">
-                    <Position>
-                        <X>-500</X>
-                        <Y>300</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0111" Visible="true">
-                    <Position>
-                        <X>-400</X>
-                        <Y>400</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0113" Visible="true">
-                    <Position>
-                        <X>-300</X>
-                        <Y>400</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0114" Visible="true">
-                    <Position>
-                        <X>-300</X>
-                        <Y>300</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0115" Visible="true">
-                    <Position>
-                        <X>-200</X>
-                        <Y>400</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0116" Visible="true">
-                    <Position>
-                        <X>-200</X>
-                        <Y>300</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0117" Visible="true">
-                    <Position>
-                        <X>-100</X>
-                        <Y>400</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0118" Visible="true">
-                    <Position>
-                        <X>-100</X>
-                        <Y>300</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0119" Visible="true">
-                    <Position>
-                        <X>0</X>
-                        <Y>400</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0120" Visible="true">
-                    <Position>
-                        <X>0</X>
-                        <Y>300</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0121" Visible="true">
-                    <Position>
-                        <X>100</X>
-                        <Y>400</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0122" Visible="true">
-                    <Position>
-                        <X>100</X>
-                        <Y>300</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0123" Visible="true">
-                    <Position>
-                        <X>200</X>
-                        <Y>400</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0124" Visible="true">
-                    <Position>
-                        <X>200</X>
-                        <Y>300</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0125" Visible="true">
-                    <Position>
-                        <X>100</X>
-                        <Y>300</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0126" Visible="true">
-                    <Position>
-                        <X>200</X>
-                        <Y>300</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0127" Visible="true">
-                    <Position>
-                        <X>100</X>
-                        <Y>200</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0128" Visible="true">
-                    <Position>
-                        <X>200</X>
-                        <Y>200</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0129" Visible="true">
-                    <Position>
-                        <X>-1700</X>
-                        <Y>200</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0130" Visible="true">
-                    <Position>
-                        <X>-1600</X>
-                        <Y>200</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0131" Visible="true">
-                    <Position>
-                        <X>-1500</X>
-                        <Y>300</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0132" Visible="true">
-                    <Position>
-                        <X>-1400</X>
-                        <Y>300</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0133" Visible="true">
-                    <Position>
-                        <X>-1300</X>
-                        <Y>200</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0134" Visible="true">
-                    <Position>
-                        <X>-1100</X>
-                        <Y>200</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>true</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0135" Visible="true">
-                    <Position>
-                        <X>-1100</X>
-                        <Y>200</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0136" Visible="true">
-                    <Position>
-                        <X>-1200</X>
-                        <Y>200</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>true</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0137" Visible="true">
-                    <Position>
-                        <X>-1000</X>
-                        <Y>200</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0139" Visible="true">
-                    <Position>
-                        <X>-800</X>
-                        <Y>300</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0140" Visible="true">
-                    <Position>
-                        <X>-900</X>
-                        <Y>200</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>true</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0141" Visible="true">
-                    <Position>
-                        <X>-900</X>
-                        <Y>200</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0142" Visible="true">
-                    <Position>
-                        <X>-700</X>
-                        <Y>300</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>true</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0144" Visible="true">
-                    <Position>
-                        <X>-900</X>
-                        <Y>200</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>true</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0145" Visible="true">
-                    <Position>
-                        <X>-700</X>
-                        <Y>300</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0146" Visible="true">
-                    <Position>
-                        <X>-500</X>
-                        <Y>200</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>true</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0147" Visible="true">
-                    <Position>
-                        <X>-500</X>
-                        <Y>200</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0148" Visible="true">
-                    <Position>
-                        <X>-600</X>
-                        <Y>200</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>true</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0149" Visible="true">
-                    <Position>
-                        <X>-600</X>
-                        <Y>200</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0150" Visible="true">
-                    <Position>
-                        <X>-500</X>
-                        <Y>200</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>true</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0151" Visible="true">
-                    <Position>
-                        <X>-500</X>
-                        <Y>200</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0152" Visible="true">
-                    <Position>
-                        <X>-600</X>
-                        <Y>200</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>true</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0154" Visible="true">
-                    <Position>
-                        <X>-200</X>
-                        <Y>200</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>true</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0155" Visible="true">
-                    <Position>
-                        <X>-200</X>
-                        <Y>200</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0156" Visible="true">
-                    <Position>
-                        <X>-300</X>
-                        <Y>200</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>true</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0157" Visible="true">
-                    <Position>
-                        <X>-300</X>
-                        <Y>200</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0158" Visible="true">
-                    <Position>
-                        <X>-200</X>
-                        <Y>200</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>true</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0159" Visible="true">
-                    <Position>
-                        <X>-200</X>
-                        <Y>200</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0160" Visible="true">
-                    <Position>
-                        <X>-300</X>
-                        <Y>200</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>true</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0162" Visible="true">
-                    <Position>
-                        <X>0</X>
-                        <Y>200</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0163" Visible="true">
-                    <Position>
-                        <X>-100</X>
-                        <Y>200</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>true</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0164" Visible="true">
-                    <Position>
-                        <X>200</X>
-                        <Y>100</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0165" Visible="true">
-                    <Position>
-                        <X>100</X>
-                        <Y>100</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>true</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0166" Visible="true">
-                    <Position>
-                        <X>-400</X>
-                        <Y>300</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0171" Visible="true">
-                    <Position>
-                        <X>500</X>
-                        <Y>400</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0172" Visible="true">
-                    <Position>
-                        <X>500</X>
-                        <Y>300</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0173" Visible="true">
-                    <Position>
-                        <X>400</X>
-                        <Y>400</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0174" Visible="true">
-                    <Position>
-                        <X>400</X>
-                        <Y>300</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0175" Visible="true">
-                    <Position>
-                        <X>300</X>
-                        <Y>300</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0176" Visible="true">
-                    <Position>
-                        <X>300</X>
-                        <Y>400</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0177" Visible="true">
-                    <Position>
-                        <X>800</X>
-                        <Y>400</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0179" Visible="true">
-                    <Position>
-                        <X>700</X>
-                        <Y>400</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0180" Visible="true">
-                    <Position>
-                        <X>700</X>
-                        <Y>300</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0181" Visible="true">
-                    <Position>
-                        <X>600</X>
-                        <Y>300</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0182" Visible="true">
-                    <Position>
-                        <X>600</X>
-                        <Y>400</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0183" Visible="true">
-                    <Position>
-                        <X>1100</X>
-                        <Y>400</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0184" Visible="true">
-                    <Position>
-                        <X>1100</X>
-                        <Y>300</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0185" Visible="true">
-                    <Position>
-                        <X>1000</X>
-                        <Y>400</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0186" Visible="true">
-                    <Position>
-                        <X>1000</X>
-                        <Y>300</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0187" Visible="true">
-                    <Position>
-                        <X>900</X>
-                        <Y>300</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0188" Visible="true">
-                    <Position>
-                        <X>900</X>
-                        <Y>400</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0189" Visible="true">
-                    <Position>
-                        <X>1400</X>
-                        <Y>400</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0190" Visible="true">
-                    <Position>
-                        <X>1400</X>
-                        <Y>300</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0191" Visible="true">
-                    <Position>
-                        <X>1300</X>
-                        <Y>400</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0193" Visible="true">
-                    <Position>
-                        <X>1200</X>
-                        <Y>300</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0194" Visible="true">
-                    <Position>
-                        <X>1200</X>
-                        <Y>400</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0195" Visible="true">
-                    <Position>
-                        <X>1700</X>
-                        <Y>400</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0196" Visible="true">
-                    <Position>
-                        <X>1700</X>
-                        <Y>300</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0197" Visible="true">
-                    <Position>
-                        <X>1600</X>
-                        <Y>400</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0198" Visible="true">
-                    <Position>
-                        <X>1600</X>
-                        <Y>300</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0199" Visible="true">
+                <Item xsi:type="TextureItem" Name="Texture_0009" Visible="true">
                     <Position>
-                        <X>1500</X>
-                        <Y>300</Y>
+                        <X>282</X>
+                        <Y>40</Y>
                     </Position>
                     <CustomProperties />
-                    <Rotation>0</Rotation>
+                    <Rotation>0.234532237</Rotation>
                     <Scale>
                         <X>1</X>
                         <Y>1</Y>
@@ -5034,23 +23,23 @@
                     </TintColor>
                     <FlipHorizontally>false</FlipHorizontally>
                     <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
+                    <texture_filename>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\33.png</texture_filename>
+                    <asset_name>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\33</asset_name>
                     <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
+                        <X>492</X>
+                        <Y>271</Y>
                     </Origin>
                 </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0200" Visible="true">
+                <Item xsi:type="TextureItem" Name="Texture_0008" Visible="true">
                     <Position>
-                        <X>1500</X>
-                        <Y>400</Y>
+                        <X>-448</X>
+                        <Y>64</Y>
                     </Position>
                     <CustomProperties />
-                    <Rotation>0</Rotation>
+                    <Rotation>-0.11706543</Rotation>
                     <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
+                        <X>1.36714649</X>
+                        <Y>1.36714649</Y>
                     </Scale>
                     <TintColor>
                         <R>255</R>
@@ -5061,23 +50,23 @@
                     </TintColor>
                     <FlipHorizontally>false</FlipHorizontally>
                     <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
+                    <texture_filename>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\33.png</texture_filename>
+                    <asset_name>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\33</asset_name>
                     <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
+                        <X>492</X>
+                        <Y>271</Y>
                     </Origin>
                 </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0201" Visible="true">
+                <Item xsi:type="TextureItem" Name="Texture_0010" Visible="true">
                     <Position>
-                        <X>1800</X>
-                        <Y>300</Y>
+                        <X>698</X>
+                        <Y>25</Y>
                     </Position>
                     <CustomProperties />
-                    <Rotation>0</Rotation>
+                    <Rotation>-0.244658068</Rotation>
                     <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
+                        <X>1.1061945</X>
+                        <Y>1.1061945</Y>
                     </Scale>
                     <TintColor>
                         <R>255</R>
@@ -5088,17 +77,17 @@
                     </TintColor>
                     <FlipHorizontally>false</FlipHorizontally>
                     <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
+                    <texture_filename>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\33.png</texture_filename>
+                    <asset_name>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\33</asset_name>
                     <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
+                        <X>492</X>
+                        <Y>271</Y>
                     </Origin>
                 </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0202" Visible="true">
+                <Item xsi:type="TextureItem" Name="Texture_0030" Visible="true">
                     <Position>
-                        <X>1800</X>
-                        <Y>400</Y>
+                        <X>679</X>
+                        <Y>115</Y>
                     </Position>
                     <CustomProperties />
                     <Rotation>0</Rotation>
@@ -5115,50 +104,23 @@
                     </TintColor>
                     <FlipHorizontally>false</FlipHorizontally>
                     <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0204" Visible="true">
-                    <Position>
-                        <X>300</X>
-                        <Y>200</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>true</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10</asset_name>
+                    <texture_filename>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\09.png</texture_filename>
+                    <asset_name>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\09</asset_name>
                     <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
+                        <X>270</X>
+                        <Y>129</Y>
                     </Origin>
                 </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0205" Visible="true">
+                <Item xsi:type="TextureItem" Name="Texture_0033" Visible="true">
                     <Position>
-                        <X>400</X>
-                        <Y>200</Y>
+                        <X>142</X>
+                        <Y>-19</Y>
                     </Position>
                     <CustomProperties />
-                    <Rotation>0</Rotation>
+                    <Rotation>0.326056719</Rotation>
                     <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
+                        <X>2.07078218</X>
+                        <Y>2.07078218</Y>
                     </Scale>
                     <TintColor>
                         <R>255</R>
@@ -5169,50 +131,23 @@
                     </TintColor>
                     <FlipHorizontally>false</FlipHorizontally>
                     <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0206" Visible="true">
-                    <Position>
-                        <X>500</X>
-                        <Y>200</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>true</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10</asset_name>
+                    <texture_filename>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\35.png</texture_filename>
+                    <asset_name>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\35</asset_name>
                     <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
+                        <X>128</X>
+                        <Y>256</Y>
                     </Origin>
                 </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0207" Visible="true">
+                <Item xsi:type="TextureItem" Name="Texture_0034" Visible="true">
                     <Position>
-                        <X>600</X>
-                        <Y>200</Y>
+                        <X>284</X>
+                        <Y>34</Y>
                     </Position>
                     <CustomProperties />
-                    <Rotation>0</Rotation>
+                    <Rotation>-0.00541815162</Rotation>
                     <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
+                        <X>2.07078218</X>
+                        <Y>2.07078218</Y>
                     </Scale>
                     <TintColor>
                         <R>255</R>
@@ -5223,23 +158,23 @@
                     </TintColor>
                     <FlipHorizontally>false</FlipHorizontally>
                     <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10</asset_name>
+                    <texture_filename>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\35.png</texture_filename>
+                    <asset_name>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\35</asset_name>
                     <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
+                        <X>128</X>
+                        <Y>256</Y>
                     </Origin>
                 </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0208" Visible="true">
+                <Item xsi:type="TextureItem" Name="Texture_0035" Visible="true">
                     <Position>
-                        <X>1500</X>
-                        <Y>200</Y>
+                        <X>76</X>
+                        <Y>-30</Y>
                     </Position>
                     <CustomProperties />
-                    <Rotation>0</Rotation>
+                    <Rotation>0.463031918</Rotation>
                     <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
+                        <X>2.07078218</X>
+                        <Y>2.07078218</Y>
                     </Scale>
                     <TintColor>
                         <R>255</R>
@@ -5248,19 +183,27 @@
                         <A>255</A>
                         <PackedValue>4294967295</PackedValue>
                     </TintColor>
-                    <FlipHorizontally>true</FlipHorizontally>
+                    <FlipHorizontally>false</FlipHorizontally>
                     <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10</asset_name>
+                    <texture_filename>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\35.png</texture_filename>
+                    <asset_name>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\35</asset_name>
                     <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
+                        <X>128</X>
+                        <Y>256</Y>
                     </Origin>
                 </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0209" Visible="true">
+            </Items>
+            <ScrollSpeed>
+                <X>1</X>
+                <Y>1</Y>
+            </ScrollSpeed>
+        </Layer>
+        <Layer Name="Foreground" Visible="true">
+            <Items>
+                <Item xsi:type="TextureItem" Name="Texture_0004" Visible="true">
                     <Position>
-                        <X>1600</X>
-                        <Y>200</Y>
+                        <X>434</X>
+                        <Y>217</Y>
                     </Position>
                     <CustomProperties />
                     <Rotation>0</Rotation>
@@ -5277,17 +220,17 @@
                     </TintColor>
                     <FlipHorizontally>false</FlipHorizontally>
                     <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10</asset_name>
+                    <texture_filename>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\18.png</texture_filename>
+                    <asset_name>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\18</asset_name>
                     <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
+                        <X>152</X>
+                        <Y>108</Y>
                     </Origin>
                 </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0210" Visible="true">
+                <Item xsi:type="TextureItem" Name="Texture_0021" Visible="true">
                     <Position>
-                        <X>1700</X>
-                        <Y>200</Y>
+                        <X>-235</X>
+                        <Y>133</Y>
                     </Position>
                     <CustomProperties />
                     <Rotation>0</Rotation>
@@ -5304,43 +247,16 @@
                     </TintColor>
                     <FlipHorizontally>true</FlipHorizontally>
                     <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0211" Visible="true">
-                    <Position>
-                        <X>1800</X>
-                        <Y>200</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10</asset_name>
+                    <texture_filename>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\00.png</texture_filename>
+                    <asset_name>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\00</asset_name>
                     <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
+                        <X>252</X>
+                        <Y>325</Y>
                     </Origin>
                 </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0212" Visible="true">
+                <Item xsi:type="TextureItem" Name="Texture_0024" Visible="true">
                     <Position>
-                        <X>1000</X>
+                        <X>-8</X>
                         <Y>300</Y>
                     </Position>
                     <CustomProperties />
@@ -5356,25 +272,25 @@
                         <A>255</A>
                         <PackedValue>4294967295</PackedValue>
                     </TintColor>
-                    <FlipHorizontally>false</FlipHorizontally>
+                    <FlipHorizontally>true</FlipHorizontally>
                     <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
+                    <texture_filename>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\04.png</texture_filename>
+                    <asset_name>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\04</asset_name>
                     <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
+                        <X>85</X>
+                        <Y>178</Y>
                     </Origin>
                 </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0213" Visible="true">
+                <Item xsi:type="TextureItem" Name="Texture_0006" Visible="true">
                     <Position>
-                        <X>1000</X>
-                        <Y>200</Y>
+                        <X>150</X>
+                        <Y>160</Y>
                     </Position>
                     <CustomProperties />
                     <Rotation>0</Rotation>
                     <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
+                        <X>1.39679921</X>
+                        <Y>1.39679921</Y>
                     </Scale>
                     <TintColor>
                         <R>255</R>
@@ -5385,17 +301,17 @@
                     </TintColor>
                     <FlipHorizontally>false</FlipHorizontally>
                     <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
+                    <texture_filename>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\08.png</texture_filename>
+                    <asset_name>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\08</asset_name>
                     <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
+                        <X>181</X>
+                        <Y>65</Y>
                     </Origin>
                 </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0214" Visible="true">
+                <Item xsi:type="TextureItem" Name="Texture_0007" Visible="true">
                     <Position>
-                        <X>1100</X>
-                        <Y>200</Y>
+                        <X>704</X>
+                        <Y>218</Y>
                     </Position>
                     <CustomProperties />
                     <Rotation>0</Rotation>
@@ -5412,23 +328,23 @@
                     </TintColor>
                     <FlipHorizontally>false</FlipHorizontally>
                     <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
+                    <texture_filename>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\18.png</texture_filename>
+                    <asset_name>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\18</asset_name>
                     <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
+                        <X>152</X>
+                        <Y>108</Y>
                     </Origin>
                 </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0215" Visible="true">
+                <Item xsi:type="TextureItem" Name="Texture_0014" Visible="true">
                     <Position>
-                        <X>1000</X>
-                        <Y>100</Y>
+                        <X>-56</X>
+                        <Y>153</Y>
                     </Position>
                     <CustomProperties />
                     <Rotation>0</Rotation>
                     <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
+                        <X>0.5000956</X>
+                        <Y>0.5000956</Y>
                     </Scale>
                     <TintColor>
                         <R>255</R>
@@ -5439,23 +355,23 @@
                     </TintColor>
                     <FlipHorizontally>false</FlipHorizontally>
                     <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
+                    <texture_filename>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\32.png</texture_filename>
+                    <asset_name>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\32</asset_name>
                     <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
+                        <X>91</X>
+                        <Y>80</Y>
                     </Origin>
                 </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0216" Visible="true">
+                <Item xsi:type="TextureItem" Name="Texture_0015" Visible="true">
                     <Position>
-                        <X>1100</X>
-                        <Y>100</Y>
+                        <X>637</X>
+                        <Y>164</Y>
                     </Position>
                     <CustomProperties />
                     <Rotation>0</Rotation>
                     <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
+                        <X>0.5395949</X>
+                        <Y>0.5395949</Y>
                     </Scale>
                     <TintColor>
                         <R>255</R>
@@ -5466,179 +382,17 @@
                     </TintColor>
                     <FlipHorizontally>false</FlipHorizontally>
                     <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\11</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0217" Visible="true">
-                    <Position>
-                        <X>1400</X>
-                        <Y>200</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>true</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0218" Visible="true">
-                    <Position>
-                        <X>1300</X>
-                        <Y>300</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>true</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0219" Visible="true">
-                    <Position>
-                        <X>1200</X>
-                        <Y>200</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>true</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0220" Visible="true">
-                    <Position>
-                        <X>1000</X>
-                        <Y>0</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>true</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0221" Visible="true">
-                    <Position>
-                        <X>1100</X>
-                        <Y>0</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>true</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10</asset_name>
-                    <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
-                    </Origin>
-                </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0222" Visible="true">
-                    <Position>
-                        <X>900</X>
-                        <Y>200</Y>
-                    </Position>
-                    <CustomProperties />
-                    <Rotation>0</Rotation>
-                    <Scale>
-                        <X>1</X>
-                        <Y>1</Y>
-                    </Scale>
-                    <TintColor>
-                        <R>255</R>
-                        <G>255</G>
-                        <B>255</B>
-                        <A>255</A>
-                        <PackedValue>4294967295</PackedValue>
-                    </TintColor>
-                    <FlipHorizontally>true</FlipHorizontally>
-                    <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10</asset_name>
+                    <texture_filename>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\31.png</texture_filename>
+                    <asset_name>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\31</asset_name>
                     <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
+                        <X>223</X>
+                        <Y>181</Y>
                     </Origin>
                 </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0223" Visible="true">
+                <Item xsi:type="TextureItem" Name="Texture_0020" Visible="true">
                     <Position>
-                        <X>800</X>
-                        <Y>300</Y>
+                        <X>972</X>
+                        <Y>217</Y>
                     </Position>
                     <CustomProperties />
                     <Rotation>0</Rotation>
@@ -5653,19 +407,19 @@
                         <A>255</A>
                         <PackedValue>4294967295</PackedValue>
                     </TintColor>
-                    <FlipHorizontally>true</FlipHorizontally>
+                    <FlipHorizontally>false</FlipHorizontally>
                     <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10</asset_name>
+                    <texture_filename>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\18.png</texture_filename>
+                    <asset_name>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\18</asset_name>
                     <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
+                        <X>152</X>
+                        <Y>108</Y>
                     </Origin>
                 </Item>
-                <Item xsi:type="TextureItem" Name="Texture_0224" Visible="true">
+                <Item xsi:type="TextureItem" Name="Texture_0029" Visible="true">
                     <Position>
-                        <X>700</X>
-                        <Y>200</Y>
+                        <X>-570</X>
+                        <Y>158</Y>
                     </Position>
                     <CustomProperties />
                     <Rotation>0</Rotation>
@@ -5682,11 +436,11 @@
                     </TintColor>
                     <FlipHorizontally>true</FlipHorizontally>
                     <FlipVertically>false</FlipVertically>
-                    <texture_filename>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10.png</texture_filename>
-                    <asset_name>E:\projects\libgdx\tests\gdx-tests-android\assets\data\gleed\10</asset_name>
+                    <texture_filename>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\01.png</texture_filename>
+                    <asset_name>G:\Proyectos\sionengine\sionengine-android\assets\data\braid\01</asset_name>
                     <Origin>
-                        <X>50</X>
-                        <Y>50</Y>
+                        <X>108</X>
+                        <Y>287</Y>
                     </Origin>
                 </Item>
             </Items>
@@ -5697,16 +451,19 @@
         </Layer>
     </Layers>
     <CustomProperties>
+        <Property Name="assetRoot" Type="string" Description="">
+            <string>data/braid</string>
+        </Property>
         <Property Name="atlas" Type="string" Description="">
             <string>data/gleedtiles.txt</string>
         </Property>
     </CustomProperties>
     <EditorRelated>
-        <NextItemNumber>269</NextItemNumber>
+        <NextItemNumber>35</NextItemNumber>
         <ContentRootFolder>C:\</ContentRootFolder>
         <CameraPosition>
-            <X>-666.7821</X>
-            <Y>32.8293457</Y>
+            <X>116.666916</X>
+            <Y>-41.666748</Y>
         </CameraPosition>
         <Version>1.3.0.0</Version>
     </EditorRelated>
diff --git a/tests/gdx-tests-android/assets/data/gleedtiles.txt b/tests/gdx-tests-android/assets/data/gleedtiles.txt
index 702ee58..3148c77 100644
--- a/tests/gdx-tests-android/assets/data/gleedtiles.txt
+++ b/tests/gdx-tests-android/assets/data/gleedtiles.txt
@@ -1,81 +1,298 @@
 gleed.png
 format: RGBA8888
-filter: Nearest,Nearest
+filter: Linear,Linear
 repeat: none
+16
+  rotate: false
+  xy: 2778, 1102
+  size: 302, 238
+  orig: 302, 238
+  offset: 0, 0
+  index: -1
+02
+  rotate: false
+  xy: 2778, 2
+  size: 274, 391
+  orig: 274, 391
+  offset: 0, 0
+  index: -1
+31
+  rotate: false
+  xy: 3055, 1342
+  size: 446, 362
+  orig: 446, 362
+  offset: 0, 0
+  index: -1
+09
+  rotate: false
+  xy: 2459, 1781
+  size: 541, 258
+  orig: 541, 258
+  offset: 0, 0
+  index: -1
+38
+  rotate: false
+  xy: 1751, 2
+  size: 701, 534
+  orig: 701, 534
+  offset: 0, 0
+  index: -1
+24
+  rotate: false
+  xy: 3002, 1781
+  size: 258, 248
+  orig: 258, 248
+  offset: 0, 0
+  index: -1
 10
   rotate: false
-  xy: 377, 724
-  size: 100, 100
-  orig: 100, 100
+  xy: 2760, 395
+  size: 291, 289
+  orig: 291, 289
+  offset: 0, 0
+  index: -1
+17
+  rotate: false
+  xy: 2454, 423
+  size: 302, 238
+  orig: 302, 238
+  offset: 0, 0
+  index: -1
+03
+  rotate: false
+  xy: 3082, 1061
+  size: 177, 234
+  orig: 177, 234
+  offset: 0, 0
+  index: -1
+32
+  rotate: false
+  xy: 1032, 574
+  size: 183, 160
+  orig: 183, 160
+  offset: 0, 0
+  index: -1
+39
+  rotate: false
+  xy: 1246, 1390
+  size: 965, 603
+  orig: 965, 603
+  offset: 0, 0
+  index: -1
+25
+  rotate: false
+  xy: 3261, 1061
+  size: 226, 213
+  orig: 226, 213
   offset: 0, 0
   index: -1
 11
   rotate: false
-  xy: 365, 575
-  size: 100, 100
-  orig: 100, 100
+  xy: 1217, 574
+  size: 184, 135
+  orig: 184, 135
   offset: 0, 0
   index: -1
-01
+40
+  rotate: false
+  xy: 1643, 1255
+  size: 492, 116
+  orig: 492, 116
+  offset: 0, 0
+  index: -1
+18
   rotate: false
-  xy: 782, 2
-  size: 200, 720
-  orig: 200, 720
+  xy: 2454, 205
+  size: 304, 216
+  orig: 304, 216
+  offset: 0, 0
+  index: -1
+04
+  rotate: false
+  xy: 3688, 332
+  size: 171, 357
+  orig: 171, 357
+  offset: 0, 0
+  index: -1
+33
+  rotate: false
+  xy: 1279, 711
+  size: 984, 542
+  orig: 984, 542
+  offset: 0, 0
+  index: -1
+26
+  rotate: false
+  xy: 2137, 1255
+  size: 308, 108
+  orig: 308, 108
   offset: 0, 0
   index: -1
 12
   rotate: false
-  xy: 176, 925
-  size: 140, 79
-  orig: 140, 79
+  xy: 804, 579
+  size: 160, 178
+  orig: 160, 178
   offset: 0, 0
   index: -1
-02
+41
   rotate: false
-  xy: 2, 2
-  size: 778, 571
-  orig: 778, 571
+  xy: 2, 1417
+  size: 1242, 626
+  orig: 1242, 626
+  offset: 0, 0
+  index: -1
+19
+  rotate: false
+  xy: 2454, 2
+  size: 308, 201
+  orig: 308, 201
+  offset: 0, 0
+  index: -1
+05
+  rotate: false
+  xy: 966, 579
+  size: 64, 165
+  orig: 64, 165
+  offset: 0, 0
+  index: -1
+34
+  rotate: false
+  xy: 2213, 1365
+  size: 840, 414
+  orig: 840, 414
+  offset: 0, 0
+  index: -1
+20
+  rotate: false
+  xy: 1792, 646
+  size: 88, 63
+  orig: 88, 63
+  offset: 0, 0
+  index: -1
+27
+  rotate: false
+  xy: 3460, 1706
+  size: 226, 190
+  orig: 226, 190
   offset: 0, 0
   index: -1
 13
   rotate: false
-  xy: 2, 724
-  size: 172, 273
-  orig: 172, 273
+  xy: 509, 764
+  size: 768, 624
+  orig: 768, 624
   offset: 0, 0
   index: -1
-03
+06
   rotate: false
-  xy: 185, 575
-  size: 178, 106
-  orig: 178, 106
+  xy: 3262, 1706
+  size: 196, 208
+  orig: 196, 208
   offset: 0, 0
   index: -1
-04
+35
   rotate: false
-  xy: 2, 575
-  size: 181, 106
-  orig: 181, 106
+  xy: 2778, 686
+  size: 118, 414
+  orig: 256, 512
+  offset: 78, 30
+  index: -1
+21
+  rotate: false
+  xy: 2180, 538
+  size: 151, 98
+  orig: 151, 98
   offset: 0, 0
   index: -1
-05
+28
+  rotate: false
+  xy: 2213, 1781
+  size: 244, 264
+  orig: 244, 264
+  offset: 0, 0
+  index: -1
+14
+  rotate: false
+  xy: 2898, 686
+  size: 566, 373
+  orig: 566, 373
+  offset: 0, 0
+  index: -1
+00
   rotate: false
-  xy: 176, 724
-  size: 199, 199
-  orig: 199, 199
+  xy: 2, 764
+  size: 505, 651
+  orig: 505, 651
   offset: 0, 0
   index: -1
 07
   rotate: false
-  xy: 2, 683
-  size: 56, 32
-  orig: 56, 32
+  xy: 2180, 638
+  size: 89, 71
+  orig: 89, 71
+  offset: 0, 0
+  index: -1
+36
+  rotate: false
+  xy: 1022, 2
+  size: 727, 570
+  orig: 727, 570
+  offset: 0, 0
+  index: -1
+22
+  rotate: false
+  xy: 1792, 538
+  size: 386, 106
+  orig: 386, 106
+  offset: 0, 0
+  index: -1
+29
+  rotate: false
+  xy: 3054, 332
+  size: 248, 328
+  orig: 248, 328
+  offset: 0, 0
+  index: -1
+15
+  rotate: false
+  xy: 2265, 711
+  size: 511, 485
+  orig: 511, 485
+  offset: 0, 0
+  index: -1
+01
+  rotate: false
+  xy: 804, 2
+  size: 216, 575
+  orig: 216, 575
+  offset: 0, 0
+  index: -1
+30
+  rotate: false
+  xy: 3055, 2
+  size: 994, 328
+  orig: 994, 328
   offset: 0, 0
   index: -1
 08
   rotate: false
-  xy: 2, 999
-  size: 45, 22
-  orig: 45, 22
+  xy: 1279, 1255
+  size: 362, 130
+  orig: 362, 130
+  offset: 0, 0
+  index: -1
+37
+  rotate: false
+  xy: 2, 2
+  size: 800, 760
+  orig: 800, 760
+  offset: 0, 0
+  index: -1
+23
+  rotate: false
+  xy: 1403, 574
+  size: 387, 107
+  orig: 387, 107
   offset: 0, 0
   index: -1
diff --git a/tests/gdx-tests-android/assets/data/maps/isometric_grass_and_water.png b/tests/gdx-tests-android/assets/data/maps/isometric_grass_and_water.png
deleted file mode 100644
index b342a0c..0000000
Binary files a/tests/gdx-tests-android/assets/data/maps/isometric_grass_and_water.png and /dev/null differ
diff --git a/tests/gdx-tests-android/assets/data/maps/isometric_grass_and_water.tmx b/tests/gdx-tests-android/assets/data/maps/isometric_grass_and_water.tmx
deleted file mode 100644
index b7bb262..0000000
--- a/tests/gdx-tests-android/assets/data/maps/isometric_grass_and_water.tmx
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<map version="1.0" orientation="isometric" width="25" height="25" tilewidth="64" tileheight="32">
- <tileset firstgid="1" name="isometric_grass_and_water" tilewidth="64" tileheight="64">
-  <tileoffset x="0" y="16"/>
-  <image source="isometric_grass_and_water.png" width="256" height="384"/>
-  <terraintypes>
-   <terrain name="Grass" tile="0"/>
-   <terrain name="Water" tile="22"/>
-  </terraintypes>
-  <tile id="0" terrain="0,0,0,0"/>
-  <tile id="1" terrain="0,0,0,0"/>
-  <tile id="2" terrain="0,0,0,0"/>
-  <tile id="3" terrain="0,0,0,0"/>
-  <tile id="4" terrain="0,0,0,1"/>
-  <tile id="5" terrain="0,0,1,0"/>
-  <tile id="6" terrain="1,0,0,0"/>
-  <tile id="7" terrain="0,1,0,0"/>
-  <tile id="8" terrain="0,1,1,1"/>
-  <tile id="9" terrain="1,0,1,1"/>
-  <tile id="10" terrain="1,1,1,0"/>
-  <tile id="11" terrain="1,1,0,1"/>
-  <tile id="12" terrain="0,0,1,1"/>
-  <tile id="13" terrain="1,0,1,0"/>
-  <tile id="14" terrain="1,1,0,0"/>
-  <tile id="15" terrain="0,1,0,1"/>
-  <tile id="16" terrain="0,0,1,1"/>
-  <tile id="17" terrain="1,0,1,0"/>
-  <tile id="18" terrain="1,1,0,0"/>
-  <tile id="19" terrain="0,1,0,1"/>
-  <tile id="20" terrain="0,1,1,0"/>
-  <tile id="21" terrain="1,0,0,1"/>
-  <tile id="22" terrain="1,1,1,1"/>
-  <tile id="23" terrain="1,1,1,1"/>
- </tileset>
- <layer name="Tile Layer 1" width="25" height="25">
-  <data encoding="base64" compression="zlib">
-   eJx1lttywjAMROVgyqVtAoFC/v9L68xoh5PFPGhIYktrrVYyS0QszZ7Nvpvd0n7y24L1Q7MhrTSreN/le821HZ7lv9qYa6sdE0cYs/kX7PXYwtfaevYp7WDrd+SnHByjYr/npP1zZ4/elcuM71rjeckdc5KNHX75fMwc9s2uzb6AsYstJzwrv5/Tz89SLIZy8v203llV8xl7yMU+462/v81OqA114/UhrzUxRqwprnh6ZGzp2PNQfPqRu/X9hnMV8F/xLg1L42erDf2oaa2RI2qPtbgbhmw2H69nMUxx/gVccXdC3AW/o/HV60vW59Lhu8arDxmfGIPFUV1qbLVQEIs4PlOeHQxqVjmzr5mLYsmf+5Qj5yM1r3Ne4p1D5VcMh3qWZibLx2fYkBhPYOv81I9wbrGd45zFU7zrndpwDjkHXXfej9zHc3EG+D3AWcCZMJif7hTnVxr6i9edtoBDz8N7kxqbY6sN9gJnsnqIOqCme7Un76579sIV8dccHvHqZefH76BP9wjzkVapM2rL+5/8cR6QS9eh8p2AT12y5oO9+7yh5hzLZypnHX29/pzB9PE7bOg8Mza5KvGu4R7mp/89zqvr7x+TnxEn
-  </data>
- </layer>
-</map>
diff --git a/tests/gdx-tests-android/assets/data/maps/tide/Map01.tide b/tests/gdx-tests-android/assets/data/maps/tide/Map01.tide
deleted file mode 100644
index e1e638c..0000000
--- a/tests/gdx-tests-android/assets/data/maps/tide/Map01.tide
+++ /dev/null
@@ -1,1327 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Map Id="Level Map 01">
-  <Description><![CDATA[This is the first level.]]></Description>
-  <TileSheets>
-    <TileSheet Id="Background01">
-      <Description><![CDATA[]]></Description>
-      <ImageSource><![CDATA[TileSheets\Background01.png]]></ImageSource>
-      <Alignment SheetSize="2 x 3" TileSize="320 x 240" Margin="0 x 0" Spacing="0 x 0" />
-      <Properties />
-    </TileSheet>
-    <TileSheet Id="Background02">
-      <Description><![CDATA[]]></Description>
-      <ImageSource><![CDATA[TileSheets\Background02.png]]></ImageSource>
-      <Alignment SheetSize="2 x 2" TileSize="320 x 240" Margin="0 x 0" Spacing="0 x 0" />
-      <Properties />
-    </TileSheet>
-    <TileSheet Id="Background03">
-      <Description><![CDATA[]]></Description>
-      <ImageSource><![CDATA[TileSheets\Background03.png]]></ImageSource>
-      <Alignment SheetSize="2 x 2" TileSize="320 x 240" Margin="0 x 0" Spacing="0 x 0" />
-      <Properties />
-    </TileSheet>
-    <TileSheet Id="TileSheet01">
-      <Description><![CDATA[]]></Description>
-      <ImageSource><![CDATA[TileSheets\TileSheet01.png]]></ImageSource>
-      <Alignment SheetSize="16 x 16" TileSize="32 x 32" Margin="0 x 0" Spacing="0 x 0" />
-      <Properties>
-        <Property Key="CacheTimestamp" Type="String"><![CDATA[2010-05-25-20-35-13]]></Property>
-      </Properties>
-    </TileSheet>
-  </TileSheets>
-  <Layers>
-    <Layer Id="Background01" Visible="True">
-      <Description><![CDATA[]]></Description>
-      <Dimensions LayerSize="4 x 3" TileSize="320 x 240" />
-      <TileArray>
-        <Row>
-          <TileSheet Ref="Background01" />
-          <Static Index="4" BlendMode="Alpha" />
-          <Static Index="4" BlendMode="Alpha" />
-          <Static Index="4" BlendMode="Alpha" />
-          <Static Index="4" BlendMode="Alpha" />
-        </Row>
-        <Row>
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-        </Row>
-        <Row>
-          <Static Index="2" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Static Index="2" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-        </Row>
-      </TileArray>
-      <Properties />
-    </Layer>
-    <Layer Id="Background02" Visible="True">
-      <Description><![CDATA[]]></Description>
-      <Dimensions LayerSize="8 x 3" TileSize="320 x 240" />
-      <TileArray>
-        <Row>
-          <Null Count="8" />
-        </Row>
-        <Row>
-          <TileSheet Ref="Background02" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-        </Row>
-        <Row>
-          <Static Index="2" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Static Index="2" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Static Index="2" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Static Index="2" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-        </Row>
-      </TileArray>
-      <Properties />
-    </Layer>
-    <Layer Id="Background03" Visible="True">
-      <Description><![CDATA[]]></Description>
-      <Dimensions LayerSize="16 x 3" TileSize="320 x 240" />
-      <TileArray>
-        <Row>
-          <Null Count="16" />
-        </Row>
-        <Row>
-          <Null Count="16" />
-        </Row>
-        <Row>
-          <TileSheet Ref="Background03" />
-          <Static Index="2" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Static Index="2" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Static Index="2" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Static Index="2" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Static Index="2" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Static Index="2" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Static Index="2" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Static Index="2" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-        </Row>
-      </TileArray>
-      <Properties />
-    </Layer>
-    <Layer Id="Foreground" Visible="True">
-      <Description><![CDATA[Foreground layer]]></Description>
-      <Dimensions LayerSize="400 x 24" TileSize="32 x 32" />
-      <TileArray>
-        <Row>
-          <Null Count="400" />
-        </Row>
-        <Row>
-          <Null Count="400" />
-        </Row>
-        <Row>
-          <Null Count="28" />
-          <TileSheet Ref="TileSheet01" />
-          <Static Index="96" BlendMode="Alpha" />
-          <Static Index="97" BlendMode="Alpha" />
-          <Null Count="370" />
-        </Row>
-        <Row>
-          <Null Count="27" />
-          <Static Index="96" BlendMode="Alpha" />
-          <Static Index="104" BlendMode="Alpha" />
-          <Static Index="104" BlendMode="Alpha" />
-          <Static Index="97" BlendMode="Alpha" />
-          <Null Count="369" />
-        </Row>
-        <Row>
-          <Null Count="25" />
-          <Static Index="96" BlendMode="Alpha" />
-          <Static Index="100" BlendMode="Alpha" />
-          <Static Index="104" BlendMode="Alpha" />
-          <Static Index="104" BlendMode="Alpha" />
-          <Static Index="102" BlendMode="Alpha" />
-          <Static Index="99" BlendMode="Alpha" />
-          <Null Count="369" />
-        </Row>
-        <Row>
-          <Null Count="25" />
-          <Static Index="98" BlendMode="Alpha" />
-          <Static Index="101" BlendMode="Alpha" />
-          <Static Index="101" BlendMode="Alpha" />
-          <Static Index="99" BlendMode="Alpha" />
-          <Null Count="371" />
-        </Row>
-        <Row>
-          <Null Count="47" />
-          <Static Index="96" BlendMode="Alpha" />
-          <Static Index="100" BlendMode="Alpha" />
-          <Static Index="97" BlendMode="Alpha" />
-          <Null Count="350" />
-        </Row>
-        <Row>
-          <Null Count="46" />
-          <Static Index="96" BlendMode="Alpha" />
-          <Static Index="104" BlendMode="Alpha" />
-          <Static Index="102" BlendMode="Alpha" />
-          <Static Index="99" BlendMode="Alpha" />
-          <Null Count="13" />
-          <Static Index="96" BlendMode="Alpha" />
-          <Static Index="100" BlendMode="Alpha" />
-          <Static Index="97" BlendMode="Alpha" />
-          <Null Count="334" />
-        </Row>
-        <Row>
-          <Null Count="46" />
-          <Static Index="98" BlendMode="Alpha" />
-          <Static Index="99" BlendMode="Alpha" />
-          <Null Count="15" />
-          <Static Index="98" BlendMode="Alpha" />
-          <Static Index="103" BlendMode="Alpha" />
-          <Static Index="104" BlendMode="Alpha" />
-          <Static Index="100" BlendMode="Alpha" />
-          <Static Index="100" BlendMode="Alpha" />
-          <Static Index="100" BlendMode="Alpha" />
-          <Static Index="100" BlendMode="Alpha" />
-          <Static Index="100" BlendMode="Alpha" />
-          <Static Index="97" BlendMode="Alpha" />
-          <Null Count="328" />
-        </Row>
-        <Row>
-          <Null Count="65" />
-          <Static Index="98" BlendMode="Alpha" />
-          <Static Index="101" BlendMode="Alpha" />
-          <Static Index="101" BlendMode="Alpha" />
-          <Static Index="101" BlendMode="Alpha" />
-          <Static Index="101" BlendMode="Alpha" />
-          <Static Index="103" BlendMode="Alpha" />
-          <Static Index="104" BlendMode="Alpha" />
-          <Static Index="97" BlendMode="Alpha" />
-          <Null Count="327" />
-        </Row>
-        <Row>
-          <Null Count="25" />
-          <Static Index="108" BlendMode="Alpha" />
-          <Static Index="4" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="5" BlendMode="Alpha" />
-          <Static Index="107" BlendMode="Alpha" />
-          <Null Count="41" />
-          <Static Index="98" BlendMode="Alpha" />
-          <Static Index="99" BlendMode="Alpha" />
-          <Null Count="327" />
-        </Row>
-        <Row>
-          <Null Count="13" />
-          <Static Index="96" BlendMode="Alpha" />
-          <Static Index="100" BlendMode="Alpha" />
-          <Static Index="100" BlendMode="Alpha" />
-          <Static Index="97" BlendMode="Alpha" />
-          <Null Count="1" />
-          <Static Index="108" BlendMode="Alpha" />
-          <Static Index="4" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="5" BlendMode="Alpha" />
-          <Static Index="107" BlendMode="Alpha" />
-          <Null Count="2" />
-          <Static Index="9" BlendMode="Alpha" />
-          <Static Index="10" BlendMode="Alpha" />
-          <Static Index="11" BlendMode="Alpha" />
-          <Null Count="5" />
-          <Static Index="96" BlendMode="Alpha" />
-          <Static Index="100" BlendMode="Alpha" />
-          <Static Index="97" BlendMode="Alpha" />
-          <Null Count="363" />
-        </Row>
-        <Row>
-          <Null Count="11" />
-          <Static Index="96" BlendMode="Alpha" />
-          <Static Index="100" BlendMode="Alpha" />
-          <Static Index="104" BlendMode="Alpha" />
-          <Static Index="104" BlendMode="Alpha" />
-          <Static Index="102" BlendMode="Alpha" />
-          <Static Index="99" BlendMode="Alpha" />
-          <Null Count="2" />
-          <Static Index="2" BlendMode="Alpha" />
-          <Animated Interval="100">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="56" BlendMode="Alpha" />
-              <Static Index="57" BlendMode="Alpha" />
-              <Static Index="58" BlendMode="Alpha" />
-              <Static Index="57" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Animated Interval="100">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="56" BlendMode="Alpha" />
-              <Static Index="57" BlendMode="Alpha" />
-              <Static Index="58" BlendMode="Alpha" />
-              <Static Index="57" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="3" BlendMode="Alpha" />
-          <Null Count="10" />
-          <Static Index="96" BlendMode="Alpha" />
-          <Static Index="104" BlendMode="Alpha" />
-          <Static Index="104" BlendMode="Alpha" />
-          <Static Index="104" BlendMode="Alpha" />
-          <Static Index="100" BlendMode="Alpha" />
-          <Static Index="97" BlendMode="Alpha" />
-          <Null Count="13" />
-          <Static Index="108" BlendMode="Alpha" />
-          <Static Index="4" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="5" BlendMode="Alpha" />
-          <Static Index="107" BlendMode="Alpha" />
-          <Null Count="343" />
-        </Row>
-        <Row>
-          <Null Count="8" />
-          <Static Index="15" BlendMode="Alpha" />
-          <Null Count="2" />
-          <Static Index="98" BlendMode="Alpha" />
-          <Static Index="101" BlendMode="Alpha" />
-          <Static Index="101" BlendMode="Alpha" />
-          <Static Index="99" BlendMode="Alpha" />
-          <Null Count="4" />
-          <Static Index="9" BlendMode="Alpha" />
-          <Animated Interval="50">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="72" BlendMode="Alpha" />
-              <Static Index="73" BlendMode="Alpha" />
-              <Static Index="74" BlendMode="Alpha" />
-              <Static Index="75" BlendMode="Alpha" />
-              <Static Index="76" BlendMode="Alpha" />
-              <Static Index="77" BlendMode="Alpha" />
-              <Static Index="78" BlendMode="Alpha" />
-              <Static Index="79" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Animated Interval="50">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="72" BlendMode="Alpha" />
-              <Static Index="73" BlendMode="Alpha" />
-              <Static Index="74" BlendMode="Alpha" />
-              <Static Index="75" BlendMode="Alpha" />
-              <Static Index="76" BlendMode="Alpha" />
-              <Static Index="77" BlendMode="Alpha" />
-              <Static Index="78" BlendMode="Alpha" />
-              <Static Index="79" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="11" BlendMode="Alpha" />
-          <Null Count="7" />
-          <Static Index="108" BlendMode="Alpha" />
-          <Static Index="7" BlendMode="Alpha" />
-          <Static Index="107" BlendMode="Alpha" />
-          <Static Index="98" BlendMode="Alpha" />
-          <Static Index="103" BlendMode="Alpha" />
-          <Static Index="104" BlendMode="Alpha" />
-          <Static Index="104" BlendMode="Alpha" />
-          <Static Index="102" BlendMode="Alpha" />
-          <Static Index="99" BlendMode="Alpha" />
-          <Null Count="14" />
-          <Static Index="9" BlendMode="Alpha" />
-          <Static Index="10" BlendMode="Alpha" />
-          <Static Index="11" BlendMode="Alpha" />
-          <Null Count="6" />
-          <Static Index="15" BlendMode="Alpha" />
-          <Null Count="337" />
-        </Row>
-        <Row>
-          <Null Count="20" />
-          <Animated Interval="50">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="64" BlendMode="Alpha" />
-              <Static Index="65" BlendMode="Alpha" />
-              <Static Index="66" BlendMode="Alpha" />
-              <Static Index="67" BlendMode="Alpha" />
-              <Static Index="68" BlendMode="Alpha" />
-              <Static Index="69" BlendMode="Alpha" />
-              <Static Index="70" BlendMode="Alpha" />
-              <Static Index="71" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Animated Interval="50">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="64" BlendMode="Alpha" />
-              <Static Index="65" BlendMode="Alpha" />
-              <Static Index="66" BlendMode="Alpha" />
-              <Static Index="67" BlendMode="Alpha" />
-              <Static Index="68" BlendMode="Alpha" />
-              <Static Index="69" BlendMode="Alpha" />
-              <Static Index="70" BlendMode="Alpha" />
-              <Static Index="71" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Null Count="9" />
-          <Static Index="8" BlendMode="Alpha" />
-          <Null Count="3" />
-          <Static Index="98" BlendMode="Alpha" />
-          <Static Index="99" BlendMode="Alpha" />
-          <Null Count="14" />
-          <Static Index="15" BlendMode="Alpha" />
-          <Null Count="348" />
-        </Row>
-        <Row>
-          <Null Count="7" />
-          <Static Index="114" BlendMode="Alpha" />
-          <Static Index="115" BlendMode="Alpha" />
-          <Null Count="11" />
-          <Animated Interval="50">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="64" BlendMode="Alpha" />
-              <Static Index="65" BlendMode="Alpha" />
-              <Static Index="66" BlendMode="Alpha" />
-              <Static Index="67" BlendMode="Alpha" />
-              <Static Index="68" BlendMode="Alpha" />
-              <Static Index="69" BlendMode="Alpha" />
-              <Static Index="70" BlendMode="Alpha" />
-              <Static Index="71" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Animated Interval="50">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="64" BlendMode="Alpha" />
-              <Static Index="65" BlendMode="Alpha" />
-              <Static Index="66" BlendMode="Alpha" />
-              <Static Index="67" BlendMode="Alpha" />
-              <Static Index="68" BlendMode="Alpha" />
-              <Static Index="69" BlendMode="Alpha" />
-              <Static Index="70" BlendMode="Alpha" />
-              <Static Index="71" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Null Count="3" />
-          <Static Index="114" BlendMode="Alpha" />
-          <Static Index="115" BlendMode="Alpha" />
-          <Null Count="31" />
-          <Static Index="114" BlendMode="Alpha" />
-          <Static Index="115" BlendMode="Alpha" />
-          <Null Count="340" />
-        </Row>
-        <Row>
-          <Null Count="3" />
-          <Static Index="108" BlendMode="Alpha" />
-          <Static Index="4" BlendMode="Alpha" />
-          <Static Index="5" BlendMode="Alpha" />
-          <Static Index="107" BlendMode="Alpha" />
-          <Static Index="112" BlendMode="Alpha" />
-          <Static Index="113" BlendMode="Alpha" />
-          <Null Count="5" />
-          <Static Index="20" BlendMode="Alpha" />
-          <Static Index="21" BlendMode="Alpha" />
-          <Static Index="5" BlendMode="Alpha" />
-          <Static Index="107" BlendMode="Alpha" />
-          <Null Count="2" />
-          <Animated Interval="50">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="64" BlendMode="Alpha" />
-              <Static Index="65" BlendMode="Alpha" />
-              <Static Index="66" BlendMode="Alpha" />
-              <Static Index="67" BlendMode="Alpha" />
-              <Static Index="68" BlendMode="Alpha" />
-              <Static Index="69" BlendMode="Alpha" />
-              <Static Index="70" BlendMode="Alpha" />
-              <Static Index="71" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Animated Interval="50">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="64" BlendMode="Alpha" />
-              <Static Index="65" BlendMode="Alpha" />
-              <Static Index="66" BlendMode="Alpha" />
-              <Static Index="67" BlendMode="Alpha" />
-              <Static Index="68" BlendMode="Alpha" />
-              <Static Index="69" BlendMode="Alpha" />
-              <Static Index="70" BlendMode="Alpha" />
-              <Static Index="71" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Null Count="1" />
-          <Static Index="108" BlendMode="Alpha" />
-          <Static Index="4" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="19" BlendMode="Alpha" />
-          <Null Count="10" />
-          <Static Index="114" BlendMode="Alpha" />
-          <Static Index="115" BlendMode="Alpha" />
-          <Null Count="9" />
-          <Static Index="15" BlendMode="Alpha" />
-          <Null Count="8" />
-          <Static Index="112" BlendMode="Alpha" />
-          <Static Index="113" BlendMode="Alpha" />
-          <Null Count="340" />
-        </Row>
-        <Row>
-          <Null Count="2" />
-          <Static Index="13" BlendMode="Alpha" />
-          <Null Count="1" />
-          <Static Index="2" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Null Count="1" />
-          <Static Index="112" BlendMode="Alpha" />
-          <Static Index="117" BlendMode="Alpha" />
-          <Static Index="115" BlendMode="Alpha" />
-          <Null Count="3" />
-          <Static Index="16" BlendMode="Alpha" />
-          <Static Index="22" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Animated Interval="100">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="32" BlendMode="Alpha" />
-              <Static Index="33" BlendMode="Alpha" />
-              <Static Index="34" BlendMode="Alpha" />
-              <Static Index="35" BlendMode="Alpha" />
-              <Static Index="36" BlendMode="Alpha" />
-              <Static Index="37" BlendMode="Alpha" />
-              <Static Index="38" BlendMode="Alpha" />
-              <Static Index="39" BlendMode="Alpha" />
-              <Static Index="40" BlendMode="Alpha" />
-              <Static Index="39" BlendMode="Alpha" />
-              <Static Index="38" BlendMode="Alpha" />
-              <Static Index="37" BlendMode="Alpha" />
-              <Static Index="36" BlendMode="Alpha" />
-              <Static Index="35" BlendMode="Alpha" />
-              <Static Index="34" BlendMode="Alpha" />
-              <Static Index="33" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Animated Interval="100">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="40" BlendMode="Alpha" />
-              <Static Index="39" BlendMode="Alpha" />
-              <Static Index="38" BlendMode="Alpha" />
-              <Static Index="37" BlendMode="Alpha" />
-              <Static Index="36" BlendMode="Alpha" />
-              <Static Index="35" BlendMode="Alpha" />
-              <Static Index="34" BlendMode="Alpha" />
-              <Static Index="33" BlendMode="Alpha" />
-              <Static Index="32" BlendMode="Alpha" />
-              <Static Index="33" BlendMode="Alpha" />
-              <Static Index="34" BlendMode="Alpha" />
-              <Static Index="35" BlendMode="Alpha" />
-              <Static Index="36" BlendMode="Alpha" />
-              <Static Index="37" BlendMode="Alpha" />
-              <Static Index="38" BlendMode="Alpha" />
-              <Static Index="39" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Animated Interval="100">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="32" BlendMode="Alpha" />
-              <Static Index="33" BlendMode="Alpha" />
-              <Static Index="34" BlendMode="Alpha" />
-              <Static Index="35" BlendMode="Alpha" />
-              <Static Index="36" BlendMode="Alpha" />
-              <Static Index="37" BlendMode="Alpha" />
-              <Static Index="38" BlendMode="Alpha" />
-              <Static Index="39" BlendMode="Alpha" />
-              <Static Index="40" BlendMode="Alpha" />
-              <Static Index="39" BlendMode="Alpha" />
-              <Static Index="38" BlendMode="Alpha" />
-              <Static Index="37" BlendMode="Alpha" />
-              <Static Index="36" BlendMode="Alpha" />
-              <Static Index="35" BlendMode="Alpha" />
-              <Static Index="34" BlendMode="Alpha" />
-              <Static Index="33" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Animated Interval="50">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="80" BlendMode="Alpha" />
-              <Static Index="81" BlendMode="Alpha" />
-              <Static Index="82" BlendMode="Alpha" />
-              <Static Index="83" BlendMode="Alpha" />
-              <Static Index="84" BlendMode="Alpha" />
-              <Static Index="85" BlendMode="Alpha" />
-              <Static Index="86" BlendMode="Alpha" />
-              <Static Index="87" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Animated Interval="50">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="80" BlendMode="Alpha" />
-              <Static Index="81" BlendMode="Alpha" />
-              <Static Index="82" BlendMode="Alpha" />
-              <Static Index="83" BlendMode="Alpha" />
-              <Static Index="84" BlendMode="Alpha" />
-              <Static Index="85" BlendMode="Alpha" />
-              <Static Index="86" BlendMode="Alpha" />
-              <Static Index="87" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Animated Interval="100">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="32" BlendMode="Alpha" />
-              <Static Index="33" BlendMode="Alpha" />
-              <Static Index="34" BlendMode="Alpha" />
-              <Static Index="35" BlendMode="Alpha" />
-              <Static Index="36" BlendMode="Alpha" />
-              <Static Index="37" BlendMode="Alpha" />
-              <Static Index="38" BlendMode="Alpha" />
-              <Static Index="39" BlendMode="Alpha" />
-              <Static Index="40" BlendMode="Alpha" />
-              <Static Index="39" BlendMode="Alpha" />
-              <Static Index="38" BlendMode="Alpha" />
-              <Static Index="37" BlendMode="Alpha" />
-              <Static Index="36" BlendMode="Alpha" />
-              <Static Index="35" BlendMode="Alpha" />
-              <Static Index="34" BlendMode="Alpha" />
-              <Static Index="33" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Animated Interval="100">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="40" BlendMode="Alpha" />
-              <Static Index="39" BlendMode="Alpha" />
-              <Static Index="38" BlendMode="Alpha" />
-              <Static Index="37" BlendMode="Alpha" />
-              <Static Index="36" BlendMode="Alpha" />
-              <Static Index="35" BlendMode="Alpha" />
-              <Static Index="34" BlendMode="Alpha" />
-              <Static Index="33" BlendMode="Alpha" />
-              <Static Index="32" BlendMode="Alpha" />
-              <Static Index="33" BlendMode="Alpha" />
-              <Static Index="34" BlendMode="Alpha" />
-              <Static Index="35" BlendMode="Alpha" />
-              <Static Index="36" BlendMode="Alpha" />
-              <Static Index="37" BlendMode="Alpha" />
-              <Static Index="38" BlendMode="Alpha" />
-              <Static Index="39" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="2" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="18" BlendMode="Alpha" />
-          <Static Index="24" BlendMode="Alpha" />
-          <Static Index="25" BlendMode="Alpha" />
-          <Null Count="8" />
-          <Static Index="112" BlendMode="Alpha" />
-          <Static Index="113" BlendMode="Alpha" />
-          <Null Count="16" />
-          <Static Index="20" BlendMode="Alpha" />
-          <Static Index="21" BlendMode="Alpha" />
-          <Static Index="112" BlendMode="Alpha" />
-          <Static Index="113" BlendMode="Alpha" />
-          <Static Index="24" BlendMode="Alpha" />
-          <Static Index="25" BlendMode="Alpha" />
-          <Null Count="338" />
-        </Row>
-        <Row>
-          <Null Count="2" />
-          <Static Index="12" BlendMode="Alpha" />
-          <Null Count="1" />
-          <Static Index="2" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Static Index="114" BlendMode="Alpha" />
-          <Static Index="112" BlendMode="Alpha" />
-          <Static Index="112" BlendMode="Alpha" />
-          <Static Index="113" BlendMode="Alpha" />
-          <Null Count="1" />
-          <Static Index="20" BlendMode="Alpha" />
-          <Static Index="21" BlendMode="Alpha" />
-          <Static Index="17" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Animated Interval="100">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="48" BlendMode="Alpha" />
-              <Static Index="49" BlendMode="Alpha" />
-              <Static Index="50" BlendMode="Alpha" />
-              <Static Index="51" BlendMode="Alpha" />
-              <Static Index="52" BlendMode="Alpha" />
-              <Static Index="53" BlendMode="Alpha" />
-              <Static Index="54" BlendMode="Alpha" />
-              <Static Index="55" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="41" BlendMode="Alpha" />
-          <Static Index="41" BlendMode="Alpha" />
-          <Static Index="41" BlendMode="Alpha" />
-          <Static Index="41" BlendMode="Alpha" />
-          <Animated Interval="100">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="48" BlendMode="Alpha" />
-              <Static Index="49" BlendMode="Alpha" />
-              <Static Index="50" BlendMode="Alpha" />
-              <Static Index="51" BlendMode="Alpha" />
-              <Static Index="52" BlendMode="Alpha" />
-              <Static Index="53" BlendMode="Alpha" />
-              <Static Index="54" BlendMode="Alpha" />
-              <Static Index="55" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="41" BlendMode="Alpha" />
-          <Static Index="2" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Animated Interval="100">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="56" BlendMode="Alpha" />
-              <Static Index="57" BlendMode="Alpha" />
-              <Static Index="58" BlendMode="Alpha" />
-              <Static Index="57" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="23" BlendMode="Alpha" />
-          <Static Index="19" BlendMode="Alpha" />
-          <Null Count="7" />
-          <Static Index="112" BlendMode="Alpha" />
-          <Static Index="117" BlendMode="Alpha" />
-          <Static Index="115" BlendMode="Alpha" />
-          <Null Count="14" />
-          <Static Index="16" BlendMode="Alpha" />
-          <Static Index="22" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="112" BlendMode="Alpha" />
-          <Static Index="113" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="23" BlendMode="Alpha" />
-          <Static Index="19" BlendMode="Alpha" />
-          <Null Count="337" />
-        </Row>
-        <Row>
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="22" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Animated Interval="100">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="48" BlendMode="Alpha" />
-              <Static Index="49" BlendMode="Alpha" />
-              <Static Index="50" BlendMode="Alpha" />
-              <Static Index="51" BlendMode="Alpha" />
-              <Static Index="52" BlendMode="Alpha" />
-              <Static Index="53" BlendMode="Alpha" />
-              <Static Index="54" BlendMode="Alpha" />
-              <Static Index="55" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="41" BlendMode="Alpha" />
-          <Static Index="41" BlendMode="Alpha" />
-          <Static Index="41" BlendMode="Alpha" />
-          <Static Index="41" BlendMode="Alpha" />
-          <Animated Interval="100">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="48" BlendMode="Alpha" />
-              <Static Index="49" BlendMode="Alpha" />
-              <Static Index="50" BlendMode="Alpha" />
-              <Static Index="51" BlendMode="Alpha" />
-              <Static Index="52" BlendMode="Alpha" />
-              <Static Index="53" BlendMode="Alpha" />
-              <Static Index="54" BlendMode="Alpha" />
-              <Static Index="55" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="41" BlendMode="Alpha" />
-          <Static Index="2" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Animated Interval="50">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="72" BlendMode="Alpha" />
-              <Static Index="73" BlendMode="Alpha" />
-              <Static Index="74" BlendMode="Alpha" />
-              <Static Index="75" BlendMode="Alpha" />
-              <Static Index="76" BlendMode="Alpha" />
-              <Static Index="77" BlendMode="Alpha" />
-              <Static Index="78" BlendMode="Alpha" />
-              <Static Index="79" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="18" BlendMode="Alpha" />
-          <Static Index="24" BlendMode="Alpha" />
-          <Static Index="25" BlendMode="Alpha" />
-          <Null Count="4" />
-          <Static Index="114" BlendMode="Alpha" />
-          <Static Index="112" BlendMode="Alpha" />
-          <Static Index="112" BlendMode="Alpha" />
-          <Static Index="113" BlendMode="Alpha" />
-          <Null Count="1" />
-          <Static Index="20" BlendMode="Alpha" />
-          <Static Index="21" BlendMode="Alpha" />
-          <Static Index="5" BlendMode="Alpha" />
-          <Static Index="106" BlendMode="Alpha" />
-          <Static Index="106" BlendMode="Alpha" />
-          <Static Index="106" BlendMode="Alpha" />
-          <Static Index="106" BlendMode="Alpha" />
-          <Static Index="106" BlendMode="Alpha" />
-          <Static Index="106" BlendMode="Alpha" />
-          <Static Index="106" BlendMode="Alpha" />
-          <Static Index="106" BlendMode="Alpha" />
-          <Static Index="4" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="5" BlendMode="Alpha" />
-          <Static Index="107" BlendMode="Alpha" />
-          <Null Count="6" />
-          <Static Index="114" BlendMode="Alpha" />
-          <Static Index="115" BlendMode="Alpha" />
-          <Null Count="325" />
-        </Row>
-        <Row>
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Animated Interval="100">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="48" BlendMode="Alpha" />
-              <Static Index="49" BlendMode="Alpha" />
-              <Static Index="50" BlendMode="Alpha" />
-              <Static Index="51" BlendMode="Alpha" />
-              <Static Index="52" BlendMode="Alpha" />
-              <Static Index="53" BlendMode="Alpha" />
-              <Static Index="54" BlendMode="Alpha" />
-              <Static Index="55" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="41" BlendMode="Alpha" />
-          <Static Index="41" BlendMode="Alpha" />
-          <Static Index="41" BlendMode="Alpha" />
-          <Static Index="41" BlendMode="Alpha" />
-          <Animated Interval="100">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="48" BlendMode="Alpha" />
-              <Static Index="49" BlendMode="Alpha" />
-              <Static Index="50" BlendMode="Alpha" />
-              <Static Index="51" BlendMode="Alpha" />
-              <Static Index="52" BlendMode="Alpha" />
-              <Static Index="53" BlendMode="Alpha" />
-              <Static Index="54" BlendMode="Alpha" />
-              <Static Index="55" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="41" BlendMode="Alpha" />
-          <Static Index="2" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Animated Interval="50">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="64" BlendMode="Alpha" />
-              <Static Index="65" BlendMode="Alpha" />
-              <Static Index="66" BlendMode="Alpha" />
-              <Static Index="67" BlendMode="Alpha" />
-              <Static Index="68" BlendMode="Alpha" />
-              <Static Index="69" BlendMode="Alpha" />
-              <Static Index="70" BlendMode="Alpha" />
-              <Static Index="71" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="23" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="22" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Null Count="8" />
-          <Static Index="2" BlendMode="Alpha" />
-          <Animated Interval="100">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="56" BlendMode="Alpha" />
-              <Static Index="57" BlendMode="Alpha" />
-              <Static Index="58" BlendMode="Alpha" />
-              <Static Index="57" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="5" BlendMode="Alpha" />
-          <Static Index="107" BlendMode="Alpha" />
-          <Null Count="1" />
-          <Static Index="114" BlendMode="Alpha" />
-          <Static Index="116" BlendMode="Alpha" />
-          <Static Index="113" BlendMode="Alpha" />
-          <Null Count="325" />
-        </Row>
-        <Row>
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Animated Interval="100">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="48" BlendMode="Alpha" />
-              <Static Index="49" BlendMode="Alpha" />
-              <Static Index="50" BlendMode="Alpha" />
-              <Static Index="51" BlendMode="Alpha" />
-              <Static Index="52" BlendMode="Alpha" />
-              <Static Index="53" BlendMode="Alpha" />
-              <Static Index="54" BlendMode="Alpha" />
-              <Static Index="55" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="41" BlendMode="Alpha" />
-          <Static Index="41" BlendMode="Alpha" />
-          <Static Index="41" BlendMode="Alpha" />
-          <Static Index="41" BlendMode="Alpha" />
-          <Animated Interval="100">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="48" BlendMode="Alpha" />
-              <Static Index="49" BlendMode="Alpha" />
-              <Static Index="50" BlendMode="Alpha" />
-              <Static Index="51" BlendMode="Alpha" />
-              <Static Index="52" BlendMode="Alpha" />
-              <Static Index="53" BlendMode="Alpha" />
-              <Static Index="54" BlendMode="Alpha" />
-              <Static Index="55" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="41" BlendMode="Alpha" />
-          <Static Index="2" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Animated Interval="50">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="64" BlendMode="Alpha" />
-              <Static Index="65" BlendMode="Alpha" />
-              <Static Index="66" BlendMode="Alpha" />
-              <Static Index="67" BlendMode="Alpha" />
-              <Static Index="68" BlendMode="Alpha" />
-              <Static Index="69" BlendMode="Alpha" />
-              <Static Index="70" BlendMode="Alpha" />
-              <Static Index="71" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Null Count="8" />
-          <Static Index="2" BlendMode="Alpha" />
-          <Animated Interval="50">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="72" BlendMode="Alpha" />
-              <Static Index="73" BlendMode="Alpha" />
-              <Static Index="74" BlendMode="Alpha" />
-              <Static Index="75" BlendMode="Alpha" />
-              <Static Index="76" BlendMode="Alpha" />
-              <Static Index="77" BlendMode="Alpha" />
-              <Static Index="78" BlendMode="Alpha" />
-              <Static Index="79" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Animated Interval="100">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="56" BlendMode="Alpha" />
-              <Static Index="57" BlendMode="Alpha" />
-              <Static Index="58" BlendMode="Alpha" />
-              <Static Index="57" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Static Index="19" BlendMode="Alpha" />
-          <Static Index="114" BlendMode="Alpha" />
-          <Static Index="112" BlendMode="Alpha" />
-          <Static Index="113" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Null Count="323" />
-        </Row>
-        <Row>
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="26" BlendMode="Alpha" />
-          <Static Index="27" BlendMode="Alpha" />
-          <Static Index="27" BlendMode="Alpha" />
-          <Static Index="27" BlendMode="Alpha" />
-          <Static Index="27" BlendMode="Alpha" />
-          <Static Index="27" BlendMode="Alpha" />
-          <Static Index="28" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Animated Interval="50">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="64" BlendMode="Alpha" />
-              <Static Index="65" BlendMode="Alpha" />
-              <Static Index="66" BlendMode="Alpha" />
-              <Static Index="67" BlendMode="Alpha" />
-              <Static Index="68" BlendMode="Alpha" />
-              <Static Index="69" BlendMode="Alpha" />
-              <Static Index="70" BlendMode="Alpha" />
-              <Static Index="71" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Null Count="8" />
-          <Static Index="2" BlendMode="Alpha" />
-          <Animated Interval="50">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="64" BlendMode="Alpha" />
-              <Static Index="65" BlendMode="Alpha" />
-              <Static Index="66" BlendMode="Alpha" />
-              <Static Index="67" BlendMode="Alpha" />
-              <Static Index="68" BlendMode="Alpha" />
-              <Static Index="69" BlendMode="Alpha" />
-              <Static Index="70" BlendMode="Alpha" />
-              <Static Index="71" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Animated Interval="50">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="72" BlendMode="Alpha" />
-              <Static Index="73" BlendMode="Alpha" />
-              <Static Index="74" BlendMode="Alpha" />
-              <Static Index="75" BlendMode="Alpha" />
-              <Static Index="76" BlendMode="Alpha" />
-              <Static Index="77" BlendMode="Alpha" />
-              <Static Index="78" BlendMode="Alpha" />
-              <Static Index="79" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Animated Interval="100">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="56" BlendMode="Alpha" />
-              <Static Index="57" BlendMode="Alpha" />
-              <Static Index="58" BlendMode="Alpha" />
-              <Static Index="57" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="4" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="1" BlendMode="Alpha" />
-          <Static Index="5" BlendMode="Alpha" />
-          <Static Index="112" BlendMode="Alpha" />
-          <Static Index="113" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Null Count="323" />
-        </Row>
-        <Row>
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Animated Interval="50">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="64" BlendMode="Alpha" />
-              <Static Index="65" BlendMode="Alpha" />
-              <Static Index="66" BlendMode="Alpha" />
-              <Static Index="67" BlendMode="Alpha" />
-              <Static Index="68" BlendMode="Alpha" />
-              <Static Index="69" BlendMode="Alpha" />
-              <Static Index="70" BlendMode="Alpha" />
-              <Static Index="71" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Null Count="8" />
-          <Static Index="2" BlendMode="Alpha" />
-          <Animated Interval="50">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="64" BlendMode="Alpha" />
-              <Static Index="65" BlendMode="Alpha" />
-              <Static Index="66" BlendMode="Alpha" />
-              <Static Index="67" BlendMode="Alpha" />
-              <Static Index="68" BlendMode="Alpha" />
-              <Static Index="69" BlendMode="Alpha" />
-              <Static Index="70" BlendMode="Alpha" />
-              <Static Index="71" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Animated Interval="50">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="64" BlendMode="Alpha" />
-              <Static Index="65" BlendMode="Alpha" />
-              <Static Index="66" BlendMode="Alpha" />
-              <Static Index="67" BlendMode="Alpha" />
-              <Static Index="68" BlendMode="Alpha" />
-              <Static Index="69" BlendMode="Alpha" />
-              <Static Index="70" BlendMode="Alpha" />
-              <Static Index="71" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Animated Interval="50">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="72" BlendMode="Alpha" />
-              <Static Index="73" BlendMode="Alpha" />
-              <Static Index="74" BlendMode="Alpha" />
-              <Static Index="75" BlendMode="Alpha" />
-              <Static Index="76" BlendMode="Alpha" />
-              <Static Index="77" BlendMode="Alpha" />
-              <Static Index="78" BlendMode="Alpha" />
-              <Static Index="79" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Animated Interval="100">
-            <Frames>
-              <TileSheet Ref="TileSheet01" />
-              <Static Index="56" BlendMode="Alpha" />
-              <Static Index="57" BlendMode="Alpha" />
-              <Static Index="58" BlendMode="Alpha" />
-              <Static Index="57" BlendMode="Alpha" />
-            </Frames>
-          </Animated>
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="2" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="3" BlendMode="Alpha" />
-          <Static Index="112" BlendMode="Alpha" />
-          <Static Index="113" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Static Index="0" BlendMode="Alpha" />
-          <Null Count="323" />
-        </Row>
-      </TileArray>
-      <Properties>
-        <Property Key="FogEffect" Type="Boolean"><![CDATA[True]]></Property>
-        <Property Key="FogDistance" Type="Int32"><![CDATA[20]]></Property>
-      </Properties>
-    </Layer>
-  </Layers>
-  <Properties>
-    <Property Key="@TileBrush@Tile Brush 2@" Type="String"><![CDATA[Foreground|0,0,TileSheet01,108|1,0,,4|2,0,,5|3,0,,107|1,1,,2|2,1,,3|1,2,,2|2,2,,3]]></Property>
-    <Property Key="@TileBrush@Tile Brush 1@" Type="String"><![CDATA[Foreground|2,2,TileSheet01,117|2,1,,113|2,3,,112|3,3,,113|3,2,,115|2,0,,115|1,0,,114|0,3,,114|1,1,,112|1,3,,112|1,2,,112]]></Property>
-  </Properties>
-</Map>
\ No newline at end of file
diff --git a/tests/gdx-tests-android/assets/data/maps/tide/TileSheets/Background01.png b/tests/gdx-tests-android/assets/data/maps/tide/TileSheets/Background01.png
deleted file mode 100644
index 538f24f..0000000
Binary files a/tests/gdx-tests-android/assets/data/maps/tide/TileSheets/Background01.png and /dev/null differ
diff --git a/tests/gdx-tests-android/assets/data/maps/tide/TileSheets/Background02.png b/tests/gdx-tests-android/assets/data/maps/tide/TileSheets/Background02.png
deleted file mode 100644
index 5d1fd00..0000000
Binary files a/tests/gdx-tests-android/assets/data/maps/tide/TileSheets/Background02.png and /dev/null differ
diff --git a/tests/gdx-tests-android/assets/data/maps/tide/TileSheets/Background03.png b/tests/gdx-tests-android/assets/data/maps/tide/TileSheets/Background03.png
deleted file mode 100644
index 6a8af2f..0000000
Binary files a/tests/gdx-tests-android/assets/data/maps/tide/TileSheets/Background03.png and /dev/null differ
diff --git a/tests/gdx-tests-android/assets/data/maps/tide/TileSheets/TileSheet01.png b/tests/gdx-tests-android/assets/data/maps/tide/TileSheets/TileSheet01.png
deleted file mode 100644
index 5ec66d3..0000000
Binary files a/tests/gdx-tests-android/assets/data/maps/tide/TileSheets/TileSheet01.png and /dev/null differ
diff --git a/tests/gdx-tests-android/assets/data/maps/tiles.png b/tests/gdx-tests-android/assets/data/maps/tiles.png
deleted file mode 100644
index 5ec66d3..0000000
Binary files a/tests/gdx-tests-android/assets/data/maps/tiles.png and /dev/null differ
diff --git a/tests/gdx-tests-android/assets/data/maps/tiles.tmx b/tests/gdx-tests-android/assets/data/maps/tiles.tmx
deleted file mode 100644
index ea97abe..0000000
--- a/tests/gdx-tests-android/assets/data/maps/tiles.tmx
+++ /dev/null
@@ -1,32 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<map version="1.0" orientation="orthogonal" width="15" height="10" tilewidth="32" tileheight="32">
- <tileset firstgid="1" source="tiles.tsx"/>
- <layer name="Tile Layer 2" width="15" height="10">
-  <data encoding="csv">
-0,0,0,0,97,98,0,0,0,0,0,97,98,0,0,
-0,0,0,97,105,105,98,0,0,97,101,105,105,98,0,
-0,0,0,99,102,102,100,0,97,105,105,105,105,105,98,
-115,116,0,0,0,0,0,0,99,102,102,102,102,102,100,
-113,114,0,0,0,0,0,0,0,0,0,0,0,0,0,
-113,114,0,0,0,0,0,0,16,0,0,0,0,0,0,
-113,114,115,116,0,0,0,0,0,0,0,0,0,115,116,
-113,114,113,114,0,0,0,0,0,0,0,0,0,113,114,
-113,114,113,114,0,0,0,0,0,0,0,0,0,113,114,
-113,114,113,114,0,0,0,0,0,0,0,0,0,113,114
-</data>
- </layer>
- <layer name="Tile Layer 1" width="15" height="10">
-  <data encoding="csv">
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,109,5,2,6,108,0,
-0,0,0,0,0,0,0,0,0,0,3,1,4,0,0,
-0,0,0,0,0,0,0,0,0,0,10,11,12,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,17,2,2,25,26,0,0,0,0,0,0,0,
-0,0,17,18,57,57,1,24,25,26,0,0,0,0,0,
-2,2,18,1,73,73,1,1,1,24,2,2,2,2,2
-</data>
- </layer>
-</map>
diff --git a/tests/gdx-tests-android/assets/data/maps/tiles.tsx b/tests/gdx-tests-android/assets/data/maps/tiles.tsx
deleted file mode 100644
index 54acd70..0000000
--- a/tests/gdx-tests-android/assets/data/maps/tiles.tsx
+++ /dev/null
@@ -1,4 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<tileset name="tiles" tilewidth="32" tileheight="32">
- <image source="tiles.png" width="512" height="512"/>
-</tileset>
diff --git a/tests/gdx-tests-android/assets/data/tiledmap/alignment test.tmx b/tests/gdx-tests-android/assets/data/tiledmap/alignment test.tmx
new file mode 100644
index 0000000..b24849d
--- /dev/null
+++ b/tests/gdx-tests-android/assets/data/tiledmap/alignment test.tmx	
@@ -0,0 +1,38 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?><map height="14" orientation="orthogonal" tileheight="64" tilewidth="64" version="1.0" width="14"><properties><property name="blended tiles" value="1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40"/></properties>
+ <tileset firstgid="1" name="perspective walls" tileheight="64" tilewidth="64">
+  <image source="perspective walls.png"/>
+  <tile id="13">
+   <properties>
+    <property name="door" value="true"/>
+   </properties>
+  </tile>
+  <tile id="14">
+   <properties>
+    <property name="door" value="true"/>
+   </properties>
+  </tile>
+  <tile id="15">
+   <properties>
+    <property name="pickup" value="true"/>
+   </properties>
+  </tile>
+ </tileset>
+ <tileset firstgid="17" name="perspective walls test" tileheight="64" tilewidth="64">
+  <image source="perspective walls test.png"/>
+ </tileset>
+ <layer height="14" name="Walls" width="14">
+  <data encoding="base64">
+   JAAAACUAAAAlAAAAJQAAACUAAAAlAAAAJQAAACUAAAAlAAAAJQAAACUAAAAlAAAAJQAAACMAAAAnAAAAAQAAABEAAAAAAAAAAgAAABIAAAAAAAAAAwAAABMAAAAAAAAABAAAABQAAAAAAAAAKAAAACcAAAARAAAAAQAAAAAAAAASAAAAAgAAAAAAAAATAAAAAwAAAAAAAAAUAAAABAAAAAAAAAAoAAAAJwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAnAAAABQAAABUAAAAAAAAABgAAABYAAAAAAAAABwAAABcAAAAAAAAACAAAABgAAAAAAAAAKAAAACcAAAAVAAAABQAAAAAAAAAWAAAABgAAAAAAAAAXAAAABwAAAAAAAAAYAAAACAAAAAAAAAAoAAAAJwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAnAAAACQAAABkAAAAAAAAACgAAABoAAAAAAAAACwAAABsAAAAAAAAADAAAABwAAAAAAAAAKAAAACcAAAAZAAAACQAAAAAAAAAaAAAACgAAAAAAAAAbAAAACwAAAAAAAAAcAAAADAAAAAAAAAAoAAAAJwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAnAAAADQAAAB0AAAAAAAAADgAAAB4AAAAAAAAADwAAAB8AAAAAAAAAEAAAACAAAAAAAAAAKAAAACcAAAAdAAAADQAAAAAAAAAeAAAADgAAAAAAAAAfAAAADwAAAAAAAAAgAAAAEAAAAAAAAAAoAAAAJwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAiAAAAJgAAACYAAAAmAAAAJgAAACYAAAAmAAAAJgAAACYAAAAmAAAAJgAAACYAAAAmAAAAIQAAAA==
+  </data>
+ </layer>
+ <layer height="14" name="Walls level 2" width="14">
+  <data encoding="base64">

+  </data>
+ </layer>
+ <layer height="14" name="Walls level 3" width="14">
+  <data encoding="base64">

+  </data>
+ </layer>
+</map>
\ No newline at end of file
diff --git a/tests/gdx-tests-android/assets/data/tiledmap/flip_rotate/flip_rotate.tmx b/tests/gdx-tests-android/assets/data/tiledmap/flip_rotate/flip_rotate.tmx
new file mode 100644
index 0000000..84b2f34
--- /dev/null
+++ b/tests/gdx-tests-android/assets/data/tiledmap/flip_rotate/flip_rotate.tmx
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?><map height="10" orientation="orthogonal" tileheight="32" tilewidth="32" version="1.0" width="15"><properties><property name="blended tiles" value=""/></properties>
+ <tileset firstgid="1" margin="1" name="tmw-desert-spacing" spacing="1" tileheight="32" tilewidth="32">
+  <image height="199" source="tmw-desert-spacing.png" width="265"/>
+ </tileset>
+ <layer height="10" name="Tile Layer 1" width="15">
+  <data compression="gzip" encoding="base64">
+   H4sIAAAAAAAAC2NkYGBgZGBoAGIHID4AxAugdAIQP4CKK0DVwGiY+KjeUb1Y9QIAiUtw8VgCAAA=
+  </data>
+ </layer>
+</map>
\ No newline at end of file
diff --git a/tests/gdx-tests-android/assets/data/tiledmap/flip_rotate/tmw-desert-spacing packfile b/tests/gdx-tests-android/assets/data/tiledmap/flip_rotate/tmw-desert-spacing packfile
new file mode 100644
index 0000000..565c2c9
--- /dev/null
+++ b/tests/gdx-tests-android/assets/data/tiledmap/flip_rotate/tmw-desert-spacing packfile	
@@ -0,0 +1,341 @@
+
+tmw-desert-spacing1.png
+format: RGBA8888
+filter: Nearest,Nearest
+repeat: none
+tmw-desert-spacing
+  rotate: false
+  xy: 2, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 47
+tmw-desert-spacing
+  rotate: false
+  xy: 2, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 46
+tmw-desert-spacing
+  rotate: false
+  xy: 2, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 45
+tmw-desert-spacing
+  rotate: false
+  xy: 36, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 44
+tmw-desert-spacing
+  rotate: false
+  xy: 36, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 43
+tmw-desert-spacing
+  rotate: false
+  xy: 36, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 42
+tmw-desert-spacing
+  rotate: false
+  xy: 70, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 41
+tmw-desert-spacing
+  rotate: false
+  xy: 70, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 40
+tmw-desert-spacing
+  rotate: false
+  xy: 70, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 39
+tmw-desert-spacing
+  rotate: false
+  xy: 104, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 38
+tmw-desert-spacing
+  rotate: false
+  xy: 104, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 37
+tmw-desert-spacing
+  rotate: false
+  xy: 104, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 36
+tmw-desert-spacing
+  rotate: false
+  xy: 138, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 35
+tmw-desert-spacing
+  rotate: false
+  xy: 138, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 34
+tmw-desert-spacing
+  rotate: false
+  xy: 138, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 33
+tmw-desert-spacing
+  rotate: false
+  xy: 172, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 32
+tmw-desert-spacing
+  rotate: false
+  xy: 172, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 31
+tmw-desert-spacing
+  rotate: false
+  xy: 172, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 30
+tmw-desert-spacing
+  rotate: false
+  xy: 206, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 29
+tmw-desert-spacing
+  rotate: false
+  xy: 206, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 28
+tmw-desert-spacing
+  rotate: false
+  xy: 206, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 27
+tmw-desert-spacing
+  rotate: false
+  xy: 240, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 26
+tmw-desert-spacing
+  rotate: false
+  xy: 240, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 25
+tmw-desert-spacing
+  rotate: false
+  xy: 240, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 24
+tmw-desert-spacing
+  rotate: false
+  xy: 274, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 23
+tmw-desert-spacing
+  rotate: false
+  xy: 274, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 22
+tmw-desert-spacing
+  rotate: false
+  xy: 274, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 21
+tmw-desert-spacing
+  rotate: false
+  xy: 308, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 20
+tmw-desert-spacing
+  rotate: false
+  xy: 308, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 19
+tmw-desert-spacing
+  rotate: false
+  xy: 308, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 18
+tmw-desert-spacing
+  rotate: false
+  xy: 342, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 17
+tmw-desert-spacing
+  rotate: false
+  xy: 342, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 16
+tmw-desert-spacing
+  rotate: false
+  xy: 342, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 15
+tmw-desert-spacing
+  rotate: false
+  xy: 376, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 14
+tmw-desert-spacing
+  rotate: false
+  xy: 376, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 13
+tmw-desert-spacing
+  rotate: false
+  xy: 376, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 12
+tmw-desert-spacing
+  rotate: false
+  xy: 410, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 11
+tmw-desert-spacing
+  rotate: false
+  xy: 410, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 10
+tmw-desert-spacing
+  rotate: false
+  xy: 410, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 9
+tmw-desert-spacing
+  rotate: false
+  xy: 444, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 8
+tmw-desert-spacing
+  rotate: false
+  xy: 444, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 7
+tmw-desert-spacing
+  rotate: false
+  xy: 444, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 6
+tmw-desert-spacing
+  rotate: false
+  xy: 478, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 5
+tmw-desert-spacing
+  rotate: false
+  xy: 478, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 4
+tmw-desert-spacing
+  rotate: false
+  xy: 478, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 3
+tmw-desert-spacing
+  rotate: false
+  xy: 512, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 2
+tmw-desert-spacing
+  rotate: false
+  xy: 512, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 1
+tmw-desert-spacing
+  rotate: false
+  xy: 512, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 0
diff --git a/tests/gdx-tests-android/assets/data/tiledmap/flip_rotate/tmw-desert-spacing1.png b/tests/gdx-tests-android/assets/data/tiledmap/flip_rotate/tmw-desert-spacing1.png
new file mode 100644
index 0000000..2d7262b
Binary files /dev/null and b/tests/gdx-tests-android/assets/data/tiledmap/flip_rotate/tmw-desert-spacing1.png differ
diff --git a/tests/gdx-tests-android/assets/data/tiledmap/margin spacing doctype test.tmx b/tests/gdx-tests-android/assets/data/tiledmap/margin spacing doctype test.tmx
new file mode 100644
index 0000000..bf944c7
--- /dev/null
+++ b/tests/gdx-tests-android/assets/data/tiledmap/margin spacing doctype test.tmx	
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?><map height="40" orientation="orthogonal" tileheight="32" tilewidth="32" version="1.0" width="40"><properties><property name="blended tiles" value=""/></properties>
+ <tileset firstgid="1" margin="1" name="Desert" spacing="1" tileheight="32" tilewidth="32">
+  <image source="tmw-desert-spacing.png"/>
+ </tileset>
+ <layer height="40" name="Ground" width="40">
+  <data compression="gzip" encoding="base64">
+   H4sIAAAAAAAAA+2Y2QrCMBBFo31wA+sCrlirdd/q/3+dIzZUhtAmMRlH6cPBBlJyvDO2g5EQIvJIFwiBnudzbLgp/JYMvH4lv2dWI2AMTBj4qKgBdSBA3j7OmgIzA+ZAC2gDHYIsVsDagMSj36HAbwOcgO0X/YrySzTzpPDbMfS7Iy/sdxGv/r8S++Gew+uyvHBfuvBT/Q4OKD95XeaHc3WV3x6tpY9pfr7riz0xx6x+upwd+DUymiJ/FxURaO6TLD70C0U+X8jvWkRHc5/qPhu/scjniz4wKGGouU91n8/eoyYW6jmHk2dM6GMzm1F43bJPnWfn+/sncXS+Ljp+T6d7tpfSL2Xoh/uam59Nfd/nCyq/1MAPZ8ktP1WtOftR5mczm1H6/QsxA4dfAWfF7b/BqsYVFZ/xABSXR5cAGQAA
+  </data>
+ </layer>
+</map>
\ No newline at end of file
diff --git a/tests/gdx-tests-android/assets/data/tiledmap/perspective walls packfile b/tests/gdx-tests-android/assets/data/tiledmap/perspective walls packfile
new file mode 100644
index 0000000..98d5e30
--- /dev/null
+++ b/tests/gdx-tests-android/assets/data/tiledmap/perspective walls packfile	
@@ -0,0 +1,117 @@
+
+perspective walls1.png
+format: RGBA8888
+filter: Nearest,Nearest
+repeat: none
+perspective walls
+  rotate: false
+  xy: 0, 0
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 2
+perspective walls
+  rotate: false
+  xy: 66, 0
+  size: 56, 64
+  orig: 64, 64
+  offset: 8, 0
+  index: 11
+perspective walls
+  rotate: false
+  xy: 0, 66
+  size: 56, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 9
+perspective walls
+  rotate: false
+  xy: 58, 66
+  size: 48, 64
+  orig: 64, 64
+  offset: 8, 0
+  index: 1
+perspective walls
+  rotate: false
+  xy: 0, 132
+  size: 40, 64
+  orig: 64, 64
+  offset: 12, 0
+  index: 14
+perspective walls
+  rotate: false
+  xy: 42, 132
+  size: 64, 56
+  orig: 64, 64
+  offset: 0, 0
+  index: 10
+perspective walls
+  rotate: false
+  xy: 0, 198
+  size: 64, 56
+  orig: 64, 64
+  offset: 0, 8
+  index: 8
+perspective walls
+  rotate: false
+  xy: 66, 198
+  size: 56, 56
+  orig: 64, 64
+  offset: 8, 0
+  index: 7
+perspective walls
+  rotate: false
+  xy: 0, 256
+  size: 56, 56
+  orig: 64, 64
+  offset: 0, 0
+  index: 6
+perspective walls
+  rotate: false
+  xy: 58, 256
+  size: 56, 56
+  orig: 64, 64
+  offset: 0, 8
+  index: 5
+perspective walls
+  rotate: false
+  xy: 0, 314
+  size: 56, 56
+  orig: 64, 64
+  offset: 8, 8
+  index: 4
+perspective walls
+  rotate: false
+  xy: 58, 314
+  size: 64, 48
+  orig: 64, 64
+  offset: 0, 8
+  index: 0
+perspective walls
+  rotate: false
+  xy: 0, 372
+  size: 48, 48
+  orig: 64, 64
+  offset: 8, 8
+  index: 3
+perspective walls
+  rotate: false
+  xy: 50, 372
+  size: 40, 41
+  orig: 64, 64
+  offset: 20, 19
+  index: 12
+perspective walls
+  rotate: false
+  xy: 0, 422
+  size: 64, 40
+  orig: 64, 64
+  offset: 0, 12
+  index: 13
+perspective walls
+  rotate: false
+  xy: 108, 66
+  size: 12, 16
+  orig: 64, 64
+  offset: 2, 0
+  index: 15
diff --git a/tests/gdx-tests-android/assets/data/tiledmap/perspective walls test packfile b/tests/gdx-tests-android/assets/data/tiledmap/perspective walls test packfile
new file mode 100644
index 0000000..db2a5b5
--- /dev/null
+++ b/tests/gdx-tests-android/assets/data/tiledmap/perspective walls test packfile	
@@ -0,0 +1,173 @@
+
+perspective walls test1.png
+format: RGBA8888
+filter: Nearest,Nearest
+repeat: none
+perspective walls test
+  rotate: false
+  xy: 0, 0
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 23
+perspective walls test
+  rotate: false
+  xy: 66, 0
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 22
+perspective walls test
+  rotate: false
+  xy: 132, 0
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 21
+perspective walls test
+  rotate: false
+  xy: 198, 0
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 20
+perspective walls test
+  rotate: false
+  xy: 264, 0
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 19
+perspective walls test
+  rotate: false
+  xy: 330, 0
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 18
+perspective walls test
+  rotate: false
+  xy: 396, 0
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 17
+perspective walls test
+  rotate: false
+  xy: 0, 66
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 16
+perspective walls test
+  rotate: false
+  xy: 0, 132
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 15
+perspective walls test
+  rotate: false
+  xy: 0, 198
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 14
+perspective walls test
+  rotate: false
+  xy: 0, 264
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 13
+perspective walls test
+  rotate: false
+  xy: 0, 330
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 12
+perspective walls test
+  rotate: false
+  xy: 0, 396
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 11
+perspective walls test
+  rotate: false
+  xy: 66, 66
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 10
+perspective walls test
+  rotate: false
+  xy: 132, 66
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 9
+perspective walls test
+  rotate: false
+  xy: 198, 66
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 8
+perspective walls test
+  rotate: false
+  xy: 264, 66
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 7
+perspective walls test
+  rotate: false
+  xy: 330, 66
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 6
+perspective walls test
+  rotate: false
+  xy: 396, 66
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 5
+perspective walls test
+  rotate: false
+  xy: 66, 132
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 4
+perspective walls test
+  rotate: false
+  xy: 66, 198
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 3
+perspective walls test
+  rotate: false
+  xy: 66, 264
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 2
+perspective walls test
+  rotate: false
+  xy: 66, 330
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 1
+perspective walls test
+  rotate: false
+  xy: 66, 396
+  size: 64, 64
+  orig: 64, 64
+  offset: 0, 0
+  index: 0
diff --git a/tests/gdx-tests-android/assets/data/tiledmap/perspective walls test1.png b/tests/gdx-tests-android/assets/data/tiledmap/perspective walls test1.png
new file mode 100644
index 0000000..69362bc
Binary files /dev/null and b/tests/gdx-tests-android/assets/data/tiledmap/perspective walls test1.png differ
diff --git a/tests/gdx-tests-android/assets/data/tiledmap/perspective walls.tmx b/tests/gdx-tests-android/assets/data/tiledmap/perspective walls.tmx
new file mode 100644
index 0000000..4dca724
--- /dev/null
+++ b/tests/gdx-tests-android/assets/data/tiledmap/perspective walls.tmx	
@@ -0,0 +1,35 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?><map height="32" orientation="orthogonal" tileheight="32" tilewidth="32" version="1.0" width="32"><properties><property name="blended tiles" value="1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40"/></properties>
+ <tileset firstgid="1" name="perspective walls" tileheight="64" tilewidth="64">
+ <image source="perspective walls.png"/>
+ <tile id="13">
+  <properties>
+   <property name="door" value="true"/>
+  </properties>
+ </tile>
+ <tile id="14">
+  <properties>
+   <property name="door" value="true"/>
+  </properties>
+ </tile>
+ <tile id="15">
+  <properties>
+   <property name="pickup" value="true"/>
+  </properties>
+ </tile>
+</tileset>
+ <layer height="32" name="Walls" width="32">
+  <data compression="zlib" encoding="base64">
+   eJztlOkKgCAQhLfb7vd/24SUBqMMNevHfDB4LczusihCCCHkTzRay4XaDP7rxf1882ZpzBqTp/Wo4c7ulRy96LUKRx3EFYF5+GpESpA9V845pT/Oxijn+luIw36k8vf1Rpk1xPepx9vczV+O3GL6n4JJ9vkSOf8/Qwb/r+vHP8ZVzFwTQshf2AA5owLB
+  </data>
+ </layer>
+ <layer height="32" name="Walls level 2" width="32">
+  <data compression="zlib" encoding="base64">
+   eJztzgEJAAAIA7CD/Tsb4yJbgiUA8MO0AwAAhy0rhAAE
+  </data>
+ </layer>
+ <layer height="32" name="Walls level 3" width="32">
+  <data compression="zlib" encoding="base64">
+   eJztzjENAAAIA7Al+PeMgz0cPK2CJgBwN98BAACqBS0QAAQ=
+  </data>
+ </layer>
+</map>
\ No newline at end of file
diff --git a/tests/gdx-tests-android/assets/data/tiledmap/perspective walls1.png b/tests/gdx-tests-android/assets/data/tiledmap/perspective walls1.png
new file mode 100644
index 0000000..4b1fc75
Binary files /dev/null and b/tests/gdx-tests-android/assets/data/tiledmap/perspective walls1.png differ
diff --git a/tests/gdx-tests-android/assets/data/tiledmap/tilemap csv.tmx b/tests/gdx-tests-android/assets/data/tiledmap/tilemap csv.tmx
new file mode 100644
index 0000000..d4ab951
--- /dev/null
+++ b/tests/gdx-tests-android/assets/data/tiledmap/tilemap csv.tmx	
@@ -0,0 +1,174 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?><map height="30" orientation="orthogonal" tileheight="32" tilewidth="32" version="1.0" width="50">
+ <properties>
+  <property name="blended tiles" value="1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,5,6,7,8,9,10,11,12,13,14,15,16"/>
+ </properties>
+ <tileset firstgid="1" name="tileset" tileheight="32" tilewidth="32">
+  <image height="64" source="tileset.png" width="64"/>
+ </tileset>
+ <tileset firstgid="5" name="tileset2" tileheight="32" tilewidth="32">
+  <image height="64" source="tileset2.png" width="64"/>
+ </tileset>
+ <tileset firstgid="9" name="tileset3" tileheight="32" tilewidth="32">
+  <image height="64" source="tileset3.png" width="64"/>
+ </tileset>
+ <tileset firstgid="13" name="tileset4" tileheight="32" tilewidth="32">
+  <image height="64" source="tileset4.png" width="64"/>
+ </tileset>
+ <layer height="30" name="First Layer" width="50">
+  <properties>
+   <property name="Layer Property" value="Layer Value"/>
+  </properties>
+  <data encoding="csv">
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,1,2,1,1,1,2,1,2,2,2,2,1,2,1,1,1,1,2,2,2,1,1,2,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,1,1,2,1,1,1,2,1,2,1,1,1,1,2,1,1,1,1,2,1,1,2,1,2,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,1,2,1,1,1,2,1,2,1,1,1,1,2,1,1,1,1,2,1,1,2,1,2,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,1,1,2,1,1,1,2,1,2,1,1,1,1,2,1,1,1,1,2,1,1,2,1,2,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,1,2,2,2,2,2,1,2,2,2,1,1,2,1,1,1,1,2,2,2,1,1,2,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,1,1,2,1,1,1,2,1,2,1,1,1,1,2,1,1,1,1,2,1,1,1,1,2,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,1,2,1,1,1,2,1,2,1,1,1,1,2,1,1,1,1,2,1,1,1,1,2,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,1,1,2,1,1,1,2,1,2,1,1,1,1,2,1,1,1,1,2,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,1,2,1,1,1,2,1,2,2,2,2,1,2,2,2,2,1,2,1,1,1,1,2,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
+2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
+1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2
+</data>
+ </layer>
+ <layer height="30" name="Second Layer" width="50">
+  <data encoding="csv">
+0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,0,7,7,0,0,0,0,0,0,0,0,0,
+7,0,0,0,8,0,0,0,8,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,0,0,0,0,0,
+7,0,0,0,8,0,0,0,8,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,0,0,0,0,
+0,0,0,0,8,0,0,0,8,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,0,
+7,0,0,0,8,0,0,0,8,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+7,0,0,0,8,8,8,8,8,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+7,0,0,0,8,0,0,0,8,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,8,0,0,0,8,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+7,0,0,0,8,0,0,0,8,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,8,0,0,0,8,0,0,0,0,0,0,7,7,7,7,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,
+7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,7,0,0,0,0,0,
+7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,
+7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,
+7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,7,7,
+7,0,7,7,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,7,0,
+7,7,7,7,0,0,0,0,7,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,7,7,0,0,0,0,0,0,7,0,0,7,0,0,0,0,0,0,0,7,0,0,
+0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,7,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,7,0,0,
+0,0,7,7,0,0,7,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,7,0,0,0,0,0,7,0,0,0,7,0,0,0,0,0,7,0,0,0,
+0,0,7,0,0,7,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,7,7,0,0,0,7,0,0,0,0,0,7,0,0,0,0,7,0,0,0,
+0,0,7,0,0,7,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,7,0,0,0,7,0,0,0,0,0,7,0,0,0,0,7,0,0,0,
+0,7,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,7,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,7,0,0,7,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,7,0,7,0,0,0,0,0,0,7,0,0,7,0,0,0,0,
+0,0,0,7,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,7,7,0,7,0,0,0,0,
+0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,7,0,7,0,0,0,0,
+0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,
+0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
+</data>
+ </layer>
+ <layer height="30" name="Third Layer" width="50">
+  <data encoding="csv">
+0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,12,12,12,0,12,12,12,12,12,12,0,0,0,0,0,12,12,12,0,
+0,0,12,0,0,0,0,0,0,0,12,12,0,0,0,0,12,0,0,0,0,0,0,0,12,0,0,0,12,12,12,0,0,0,12,12,0,12,12,0,0,12,0,0,12,12,0,0,0,0,
+0,12,12,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,12,0,0,0,0,0,0,12,0,0,0,12,12,12,12,12,12,0,0,0,0,0,
+0,0,0,0,0,0,0,12,12,0,12,12,12,12,12,0,0,0,0,12,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,12,0,0,0,0,0,0,0,0,12,0,0,0,0,0,
+0,12,0,0,0,12,12,0,0,0,12,11,11,11,12,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,12,0,0,0,0,12,0,12,0,12,12,0,12,0,12,0,0,0,0,0,
+12,0,0,0,12,0,0,0,0,12,12,11,11,11,12,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,12,0,0,0,0,12,12,0,0,0,0,0,0,12,0,12,0,0,0,0,
+0,0,0,12,0,0,0,0,12,0,12,11,11,11,12,0,0,0,0,0,12,0,12,0,0,0,0,0,0,0,0,12,0,12,12,0,12,0,0,0,0,0,0,0,12,12,0,0,0,0,
+12,12,12,0,0,0,0,0,0,0,12,11,11,11,12,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,12,12,0,0,0,12,0,0,0,0,0,0,0,0,0,12,0,0,0,
+12,0,0,0,0,0,0,12,0,0,12,11,11,11,12,0,0,0,0,12,0,0,0,0,0,12,0,0,0,0,0,12,0,0,0,0,0,12,0,0,0,0,0,12,12,12,12,0,0,0,
+12,0,0,0,0,0,0,12,0,0,12,11,11,11,12,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,12,0,0,0,0,12,12,12,12,12,0,0,0,
+0,0,0,0,0,0,0,0,0,0,12,11,11,11,12,0,0,0,12,0,0,0,0,0,0,0,12,0,0,0,0,12,12,12,0,0,0,0,12,0,0,0,0,0,0,12,12,0,0,0,
+0,0,0,0,0,0,12,0,0,0,12,12,12,12,12,0,0,12,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,12,0,12,0,0,0,
+0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,12,12,0,0,0,12,0,0,0,0,12,0,0,0,12,0,0,
+0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,0,0,12,0,0,12,12,0,0,0,0,12,0,0,
+12,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,0,12,12,12,12,0,12,0,0,0,0,0,0,12,0,0,
+0,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,12,12,12,12,0,0,12,0,0,
+0,0,12,0,0,0,12,12,0,12,0,12,12,0,12,0,12,12,12,0,0,12,12,0,0,0,0,0,12,12,0,12,0,0,0,0,0,0,12,0,12,0,0,0,12,12,12,12,0,0,
+0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,12,12,12,12,12,12,0,0,0,12,0,0,0,0,12,0,0,0,0,0,0,0,12,12,0,0,0,
+0,0,12,12,12,12,12,12,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,12,0,0,0,0,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,12,0,0,0,0,
+0,0,0,12,0,0,0,0,12,12,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,12,0,0,0,0,0,0,0,12,12,0,12,0,0,0,
+0,0,0,0,12,0,0,0,0,0,12,12,0,0,0,0,0,12,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,12,0,12,0,0,0,0,0,12,0,0,0,0,12,0,0,
+0,0,0,0,0,12,0,0,0,0,0,0,12,12,0,0,12,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,12,12,0,12,0,12,0,12,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,12,0,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,12,12,0,0,0,0,12,12,0,0,0,0,0,0,0,0,12,0,
+0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,12,0,12,12,0,0,0,0,0,0,0,12,0,0,0,0,12,12,0,12,0,12,0,0,0,12,0,0,0,0,0,0,0,12,0,
+0,0,0,0,0,0,0,12,0,0,0,0,0,0,12,0,0,0,0,0,12,0,12,0,0,0,0,12,0,0,0,12,12,12,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,12,
+0,0,0,0,0,0,0,12,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,12,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,12,12,
+0,0,0,0,0,0,0,12,12,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,12,0,0,
+0,0,0,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,
+0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
+</data>
+ </layer>
+ <layer height="30" name="Fourth Layer" width="50">
+  <data encoding="csv">
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,16,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,16,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,16,16,0,16,16,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,16,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,16,0,16,16,16,0,0,0,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,16,16,0,16,0,0,0,0,0,16,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,16,16,0,0,16,16,16,16,16,16,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,16,0,0,16,16,16,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,16,16,16,16,16,0,0,0,0,0,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,16,16,16,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,16,16,0,16,0,0,0,0,16,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,16,0,0,0,16,0,0,0,0,0,16,16,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,16,0,0,16,16,16,0,0,0,0,16,16,16,0,0,0,0,0,0,0,0,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,16,16,16,16,0,0,16,16,16,16,16,0,16,16,16,16,0,0,15,15,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,16,0,16,16,0,16,16,16,16,16,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,15,15,0,0,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,15,0,0,15,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
+</data>
+ </layer>
+ <objectgroup height="30" name="Object_Layer" width="50">
+  <properties>
+   <property name="Objectgroup property" value="Objectgroup value"/>
+  </properties>
+  <object height="131" name="Touching H" type="mytype1" width="154" x="186" y="187"/>
+  <object height="68" name="Touching P" type="mytype2" width="82" x="599" y="159">
+   <properties>
+    <property name="object property" value="object value"/>
+   </properties>
+  </object>
+  <object name="Touching L" x="579" y="352"/>
+  <object name="Touching !" x="814" y="207"/>
+  <object name="Upper Left" x="0" y="0"/>
+  <object name="Upper Right" x="1600" y="0"/>
+  <object name="Lower Right" x="1600" y="960"/>
+  <object name="Lower Left" x="0" y="960"/>
+  <object gid="6" name="tile object" type="tile object type" x="533" y="272"/>
+ </objectgroup>
+</map>
\ No newline at end of file
diff --git a/tests/gdx-tests-android/assets/data/tiledmap/tilemap gzip.tmx b/tests/gdx-tests-android/assets/data/tiledmap/tilemap gzip.tmx
new file mode 100644
index 0000000..922f507
--- /dev/null
+++ b/tests/gdx-tests-android/assets/data/tiledmap/tilemap gzip.tmx	
@@ -0,0 +1,57 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?><map height="30" orientation="orthogonal" tileheight="32" tilewidth="32" version="1.0" width="50">
+ <properties>
+  <property name="blended tiles" value="1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,5,6,7,8,9,10,11,12,13,14,15,16"/>
+ </properties>
+ <tileset firstgid="1" name="tileset" tileheight="32" tilewidth="32">
+  <image source="tileset.png"/>
+ </tileset>
+ <tileset firstgid="5" name="tileset2" tileheight="32" tilewidth="32">
+  <image source="tileset2.png"/>
+ </tileset>
+ <tileset firstgid="9" name="tileset3" tileheight="32" tilewidth="32">
+  <image source="tileset3.png"/>
+ </tileset>
+ <tileset firstgid="13" name="tileset4" tileheight="32" tilewidth="32">
+  <image source="tileset4.png"/>
+ </tileset>
+ <layer height="30" name="First Layer" width="50">
+  <properties>
+   <property name="Layer Property" value="Layer Value"/>
+  </properties>
+  <data compression="gzip" encoding="base64">
+   H4sIAAAAAAAAC+2TUQ7AIAhD1fsfevsmgpIMVkg/SI0hSHmyxhjzjVVc5TkjIrx08LDjIX1Jz0upMTd5NzWjeJzetHK1mVh3f/D4wgd5+Hlou3D6913344ZRhf3oxiPag5eHtTMevxk8oiOLR1UvUfPJVoQeyIM8UBWhB/IgD1RF6IE8yANVEXogj348HkfuS4NwFwAA
+  </data>
+ </layer>
+ <layer height="30" name="Second Layer" width="50">
+  <data compression="gzip" encoding="base64">
+   H4sIAAAAAAAAC9VXQQ4EIQjj5v7/xXvdsCoFimKTSWbGClYUUURkyHkMsl+2vYhvhv9bGjSG/OvyaNS8j/G965vl7fpbsXtRB2Kvg47IvukSj+x+n+nQD9o3wqvKVyfjUZnzb6wrxjlyIh4esGLk1YHMZWRc2XzVEfqMX3Few82asAJInF5C1/h49zdSI7PuCKgdrz89/p0OWbSh8NwpxuLd4u7+W98IZuNmnTW79WNxvPDme1Qz8r9yvn7bMmPuomPWntURua8xOJrHyIkeW2j+9PqvzmMrLqtmQ2tm9AyI+s/Y2NmacSwfLP/VdQ47Frpvh1qN4f+2ji9OrdRgcBcAAA==
+  </data>
+ </layer>
+ <layer height="30" name="Third Layer" width="50">
+  <data compression="gzip" encoding="base64">
+   H4sIAAAAAAAAC92WyW7DMAxEda///3tzKAwYCpc3Q7mHEgiCcBkuGlFZ61eupQuNyfyux2f/vdu6WFpThkniaP69nwiD9FbZKp+oXkWX2ZTzqaQ7c6VG4kfinTnsup/HR+UTsV/Bd6QjeBk+7YOefZWni5nOiPZBcu2+So3VDEi8wiu3JveO0XtD+lDvr6N33g2lj+k+7LBO7N8bZ9KHyuluvhP+ZfOYvhvUV9kHTj6lD7pvyRmp/y/elu6MCfccfpyQiKOZrsLIMP9KHD6Se5n1ttb3vCId4UGGkflVddEcjkQ7rdv76s7t6iQ5Vewpbyp/1X4Km8Qq5+D0smPQGJJv91NyuL3cNnVXU59oh9B4J/dJPitvvIpN7E8fkrOrtdqzKq7i0/FYeaOmtU7uPBV3F0c4Lv8mb0IWM7mzEyz3XXwTy40/0cObeP9JPi2A8mVwFwAA
+  </data>
+ </layer>
+ <layer height="30" name="Fourth Layer" width="50">
+  <data compression="gzip" encoding="base64">
+   H4sIAAAAAAAAC+VWWwqAMAzzBnr/04qgMEq0D+eSYWC4j06StU23LO+wgcXC1nx78GBp+vJOWVrsPnPuKab9joDVEuEY1T263mxu7mJQvBIsL9Q/lreylnafqTElVD1MYY60eMNHQQfiX+HF1OL5VNRbmUD+cxen3O9Rf6rOvdGzLzI7nuLXc6H/KwC9vTLerKLjwGrWTOjFm5WP3nfO0OFpqGhU6w+0j0DhrXIA8c7mha3Dq7EMmFo8rpm8MH2rZ+wMOiLxjH6vzg+vzmbRcZ1Vebuo8PgTdmTO18JwFwAA
+  </data>
+ </layer>
+ <objectgroup height="30" name="Object_Layer" width="50">
+  <properties>
+   <property name="Objectgroup property" value="Objectgroup value"/>
+  </properties>
+  <object height="131" name="Touching H" type="mytype1" width="154" x="186" y="187"/>
+  <object height="68" name="Touching P" type="mytype2" width="82" x="599" y="159">
+   <properties>
+    <property name="object property" value="object value"/>
+   </properties>
+  </object>
+  <object name="Touching L" x="579" y="352"/>
+  <object name="Touching !" x="814" y="207"/>
+  <object name="Upper Left" x="0" y="0"/>
+  <object name="Upper Right" x="1600" y="0"/>
+  <object name="Lower Right" x="1600" y="960"/>
+  <object name="Lower Left" x="0" y="960"/>
+ </objectgroup>
+</map>
\ No newline at end of file
diff --git a/tests/gdx-tests-android/assets/data/tiledmap/tilemap uncompressed.tmx b/tests/gdx-tests-android/assets/data/tiledmap/tilemap uncompressed.tmx
new file mode 100644
index 0000000..53bf310
--- /dev/null
+++ b/tests/gdx-tests-android/assets/data/tiledmap/tilemap uncompressed.tmx	
@@ -0,0 +1,57 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?><map height="30" orientation="orthogonal" tileheight="32" tilewidth="32" version="1.0" width="50">
+ <properties>
+  <property name="blended tiles" value="1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,5,6,7,8,9,10,11,12,13,14,15,16"/>
+ </properties>
+ <tileset firstgid="1" name="tileset" tileheight="32" tilewidth="32">
+  <image source="tileset.png"/>
+ </tileset>
+ <tileset firstgid="5" name="tileset2" tileheight="32" tilewidth="32">
+  <image source="tileset2.png"/>
+ </tileset>
+ <tileset firstgid="9" name="tileset3" tileheight="32" tilewidth="32">
+  <image source="tileset3.png"/>
+ </tileset>
+ <tileset firstgid="13" name="tileset4" tileheight="32" tilewidth="32">
+  <image source="tileset4.png"/>
+ </tileset>
+ <layer height="30" name="First Layer" width="50">
+  <properties>
+   <property name="Layer Property" value="Layer Value"/>
+  </properties>
+  <data encoding="base64">
+   
+  </data>
+ </layer>
+ <layer height="30" name="Second Layer" width="50">
+  <data encoding="base64">
+   
+  </data>
+ </layer>
+ <layer height="30" name="Third Layer" width="50">
+  <data encoding="base64">
+   
+  </data>
+ </layer>
+ <layer height="30" name="Fourth Layer" width="50">
+  <data encoding="base64">

+  </data>
+ </layer>
+ <objectgroup height="30" name="Object_Layer" width="50">
+  <properties>
+   <property name="Objectgroup property" value="Objectgroup value"/>
+  </properties>
+  <object height="131" name="Touching H" type="mytype1" width="154" x="186" y="187"/>
+  <object height="68" name="Touching P" type="mytype2" width="82" x="599" y="159">
+   <properties>
+    <property name="object property" value="object value"/>
+   </properties>
+  </object>
+  <object name="Touching L" x="579" y="352"/>
+  <object name="Touching !" x="814" y="207"/>
+  <object name="Upper Left" x="0" y="0"/>
+  <object name="Upper Right" x="1600" y="0"/>
+  <object name="Lower Right" x="1600" y="960"/>
+  <object name="Lower Left" x="0" y="960"/>
+ </objectgroup>
+</map>
\ No newline at end of file
diff --git a/tests/gdx-tests-android/assets/data/tiledmap/tilemap xml.tmx b/tests/gdx-tests-android/assets/data/tiledmap/tilemap xml.tmx
new file mode 100644
index 0000000..c01be43
--- /dev/null
+++ b/tests/gdx-tests-android/assets/data/tiledmap/tilemap xml.tmx	
@@ -0,0 +1,57 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?><map height="30" orientation="orthogonal" tileheight="32" tilewidth="32" version="1.0" width="50">
+ <properties>
+  <property name="blended tiles" value="1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,5,6,7,8,9,10,11,12,13,14,15,16"/>
+ </properties>
+ <tileset firstgid="1" name="tileset" tileheight="32" tilewidth="32">
+  <image height="64" source="tileset.png" width="64"/>
+ </tileset>
+ <tileset firstgid="5" name="tileset2" tileheight="32" tilewidth="32">
+  <image height="64" source="tileset2.png" width="64"/>
+ </tileset>
+ <tileset firstgid="9" name="tileset3" tileheight="32" tilewidth="32">
+  <image height="64" source="tileset3.png" width="64"/>
+ </tileset>
+ <tileset firstgid="13" name="tileset4" tileheight="32" tilewidth="32">
+  <image height="64" source="tileset4.png" width="64"/>
+ </tileset>
+ <layer height="30" name="First Layer" width="50">
+  <properties>
+   <property name="Layer Property" value="Layer Value"/>
+  </properties>
+  <data compression="zlib" encoding="base64">
+   eJztk1EOwCAIQ9X7H3r7JoKSDFZIP0iNIUh5ssYY841VXOU5IyK8dPCw4yF9Sc9LqTE3eTc1o3ic3rRytZlYd3/w+MIHefh5aLtw+vdd9+OGUYX96MYj2oOXh7UzHr8ZPKIji0dVL1HzyVaEHsiDPFAVoQfyIA9UReiBPMgDVRF6II9+PB6c+Ahs
+  </data>
+ </layer>
+ <layer height="30" name="Second Layer" width="50">
+  <data compression="zlib" encoding="base64">
+   eJzVV0EOBCEI4+b+/8V73bAqBYpik0lmxgpWFFFEZMh5DLJftr2Ib4b/Wxo0hvzr8mjUvI/xveub5e36W7F7UQdir4OOyL7pEo/sfp/p0A/aN8Krylcn41GZ82+sK8Y5ciIeHrBi5NWBzGVkXNl81RH6jF9xXsPNmrACSJxeQtf4ePc3UiOz7gioHa8/Pf6dDlm0ofDcKcbi3eLu/lvfCGbjZp01u/Vjcbzw5ntUM/K/cr5+2zJj7qJj1p7VEbmvMTiax8iJHlto/vT6r85jKy6rZkNrZvQMiPrP2NjZmnEsHyz/1XUOOxa6b4dajeH/to4vnrEFuA==
+  </data>
+ </layer>
+ <layer height="30" name="Third Layer" width="50">
+  <data compression="zlib" encoding="base64">
+   eJzdlsluwzAMRHWv//97cygMGAqXN0O5hxIIgnAZLhpRWetXrqULjcn8rsdn/73bulhaU4ZJ4mj+vZ8Ig/RW2SqfqF5Fl9mU86mkO3OlRuJH4p057Lqfx0flE7FfwXekI3gZPu2Dnn2Vp4uZzoj2QXLtvkqN1QxIvMIrtyb3jtF7Q/pQ76+jd94NpY/pPuywTuzfG2fSh8rpbr4T/mXzmL4b1FfZB04+pQ+6b8kZqf8v3pbujAn3HH6ckIijma7CyDD/Shw+knuZ9bbW97wiHeFBhpH5VXXRHI5EO63b++rO7eokOVXsKW8qf9V+CpvEKufg9LJj0BiSb/dTcri93DZ1V1OfaIfQeCf3ST4rb7yKTexPH5Kzq7Xasyqu4tPxWHmjprVO7jwVdxdHOC7/Jm9CFjO5sxMs9118E8uNP9HDm3j/ST48vhBs
+  </data>
+ </layer>
+ <layer height="30" name="Fourth Layer" width="50">
+  <data compression="zlib" encoding="base64">
+   eJzlVlsKgDAM8wZ6/9OKoDBKtA/nkmFguI9OkrVNtyzvsIHFwtZ8e/BgafryTlla7D5z7imm/Y6A1RLhGNU9ut5sbu5iULwSLC/UP5a3spZ2n6kxJVQ9TGGOtHjDR0EH4l/hxdTi+VTUW5lA/nMXp9zvUX+qzr3Rsy8yO57i13Oh/ysAvb0y3qyi48Bq1kzoxZuVj953ztDhaahoVOsPtI9A4a1yAPHO5oWtw6uxDJhaPK6ZvDB9q2fsDDoi8Yx+r84Pr85m0XGdVXm7qPD4E3bB/Qp9
+  </data>
+ </layer>
+ <objectgroup height="30" name="Object_Layer" width="50">
+  <properties>
+   <property name="Objectgroup property" value="Objectgroup value"/>
+  </properties>
+  <object height="131" name="Touching H" type="mytype1" width="154" x="186" y="187"/>
+  <object height="68" name="Touching P" type="mytype2" width="82" x="599" y="159">
+   <properties>
+    <property name="object property" value="object value"/>
+   </properties>
+  </object>
+  <object name="Touching L" x="579" y="352"/>
+  <object name="Touching !" x="814" y="207"/>
+  <object name="Upper Left" x="0" y="0"/>
+  <object name="Upper Right" x="1600" y="0"/>
+  <object name="Lower Right" x="1600" y="960"/>
+  <object name="Lower Left" x="0" y="960"/>
+ </objectgroup>
+</map>
\ No newline at end of file
diff --git a/tests/gdx-tests-android/assets/data/tiledmap/tilemap zlib.tmx b/tests/gdx-tests-android/assets/data/tiledmap/tilemap zlib.tmx
new file mode 100644
index 0000000..e46535c
--- /dev/null
+++ b/tests/gdx-tests-android/assets/data/tiledmap/tilemap zlib.tmx	
@@ -0,0 +1,57 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?><map height="30" orientation="orthogonal" tileheight="32" tilewidth="32" version="1.0" width="50">
+ <properties>
+  <property name="blended tiles" value="1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,5,6,7,8,9,10,11,12,13,14,15,16"/>
+ </properties>
+ <tileset firstgid="1" name="tileset" tileheight="32" tilewidth="32">
+  <image source="tileset.png"/>
+ </tileset>
+ <tileset firstgid="5" name="tileset2" tileheight="32" tilewidth="32">
+  <image source="tileset2.png"/>
+ </tileset>
+ <tileset firstgid="9" name="tileset3" tileheight="32" tilewidth="32">
+  <image source="tileset3.png"/>
+ </tileset>
+ <tileset firstgid="13" name="tileset4" tileheight="32" tilewidth="32">
+  <image source="tileset4.png"/>
+ </tileset>
+ <layer height="30" name="First Layer" width="50">
+  <properties>
+   <property name="Layer Property" value="Layer Value"/>
+  </properties>
+  <data compression="zlib" encoding="base64">
+   eJztk1EOwCAIQ9X7H3r7JoKSDFZIP0iNIUh5ssYY841VXOU5IyK8dPCw4yF9Sc9LqTE3eTc1o3ic3rRytZlYd3/w+MIHefh5aLtw+vdd9+OGUYX96MYj2oOXh7UzHr8ZPKIji0dVL1HzyVaEHsiDPFAVoQfyIA9UReiBPMgDVRF6II9+PB6c+Ahs
+  </data>
+ </layer>
+ <layer height="30" name="Second Layer" width="50">
+  <data compression="zlib" encoding="base64">
+   eJzVV0EOBCEI4+b+/8V73bAqBYpik0lmxgpWFFFEZMh5DLJftr2Ib4b/Wxo0hvzr8mjUvI/xveub5e36W7F7UQdir4OOyL7pEo/sfp/p0A/aN8Krylcn41GZ82+sK8Y5ciIeHrBi5NWBzGVkXNl81RH6jF9xXsPNmrACSJxeQtf4ePc3UiOz7gioHa8/Pf6dDlm0ofDcKcbi3eLu/lvfCGbjZp01u/Vjcbzw5ntUM/K/cr5+2zJj7qJj1p7VEbmvMTiax8iJHlto/vT6r85jKy6rZkNrZvQMiPrP2NjZmnEsHyz/1XUOOxa6b4dajeH/to4vnrEFuA==
+  </data>
+ </layer>
+ <layer height="30" name="Third Layer" width="50">
+  <data compression="zlib" encoding="base64">
+   eJzdlsluwzAMRHWv//97cygMGAqXN0O5hxIIgnAZLhpRWetXrqULjcn8rsdn/73bulhaU4ZJ4mj+vZ8Ig/RW2SqfqF5Fl9mU86mkO3OlRuJH4p057Lqfx0flE7FfwXekI3gZPu2Dnn2Vp4uZzoj2QXLtvkqN1QxIvMIrtyb3jtF7Q/pQ76+jd94NpY/pPuywTuzfG2fSh8rpbr4T/mXzmL4b1FfZB04+pQ+6b8kZqf8v3pbujAn3HH6ckIijma7CyDD/Shw+knuZ9bbW97wiHeFBhpH5VXXRHI5EO63b++rO7eokOVXsKW8qf9V+CpvEKufg9LJj0BiSb/dTcri93DZ1V1OfaIfQeCf3ST4rb7yKTexPH5Kzq7Xasyqu4tPxWHmjprVO7jwVdxdHOC7/Jm9CFjO5sxMs9118E8uNP9HDm3j/ST48vhBs
+  </data>
+ </layer>
+ <layer height="30" name="Fourth Layer" width="50">
+  <data compression="zlib" encoding="base64">
+   eJzlVlsKgDAM8wZ6/9OKoDBKtA/nkmFguI9OkrVNtyzvsIHFwtZ8e/BgafryTlla7D5z7imm/Y6A1RLhGNU9ut5sbu5iULwSLC/UP5a3spZ2n6kxJVQ9TGGOtHjDR0EH4l/hxdTi+VTUW5lA/nMXp9zvUX+qzr3Rsy8yO57i13Oh/ysAvb0y3qyi48Bq1kzoxZuVj953ztDhaahoVOsPtI9A4a1yAPHO5oWtw6uxDJhaPK6ZvDB9q2fsDDoi8Yx+r84Pr85m0XGdVXm7qPD4E3bB/Qp9
+  </data>
+ </layer>
+ <objectgroup height="30" name="Object_Layer" width="50">
+  <properties>
+   <property name="Objectgroup property" value="Objectgroup value"/>
+  </properties>
+  <object height="131" name="Touching H" type="mytype1" width="154" x="186" y="187"/>
+  <object height="68" name="Touching P" type="mytype2" width="82" x="599" y="159">
+   <properties>
+    <property name="object property" value="object value"/>
+   </properties>
+  </object>
+  <object name="Touching L" x="579" y="352"/>
+  <object name="Touching !" x="814" y="207"/>
+  <object name="Upper Left" x="0" y="0"/>
+  <object name="Upper Right" x="1600" y="0"/>
+  <object name="Lower Right" x="1600" y="960"/>
+  <object name="Lower Left" x="0" y="960"/>
+ </objectgroup>
+</map>
\ No newline at end of file
diff --git a/tests/gdx-tests-android/assets/data/tiledmap/tileset packfile b/tests/gdx-tests-android/assets/data/tiledmap/tileset packfile
new file mode 100644
index 0000000..de8eeae
--- /dev/null
+++ b/tests/gdx-tests-android/assets/data/tiledmap/tileset packfile	
@@ -0,0 +1,33 @@
+
+tileset1.png
+format: RGBA8888
+filter: Nearest,Nearest
+repeat: none
+tileset
+  rotate: false
+  xy: 0, 0
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 3
+tileset
+  rotate: false
+  xy: 0, 34
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 2
+tileset
+  rotate: false
+  xy: 0, 68
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 1
+tileset
+  rotate: false
+  xy: 0, 102
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 0
diff --git a/tests/gdx-tests-android/assets/data/tiledmap/tileset1.png b/tests/gdx-tests-android/assets/data/tiledmap/tileset1.png
new file mode 100644
index 0000000..e087a62
Binary files /dev/null and b/tests/gdx-tests-android/assets/data/tiledmap/tileset1.png differ
diff --git a/tests/gdx-tests-android/assets/data/tiledmap/tileset2 packfile b/tests/gdx-tests-android/assets/data/tiledmap/tileset2 packfile
new file mode 100644
index 0000000..708fbdc
--- /dev/null
+++ b/tests/gdx-tests-android/assets/data/tiledmap/tileset2 packfile	
@@ -0,0 +1,33 @@
+
+tileset21.png
+format: RGBA8888
+filter: Nearest,Nearest
+repeat: none
+tileset2
+  rotate: false
+  xy: 0, 0
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 3
+tileset2
+  rotate: false
+  xy: 0, 34
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 2
+tileset2
+  rotate: false
+  xy: 0, 68
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 1
+tileset2
+  rotate: false
+  xy: 0, 102
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 0
diff --git a/tests/gdx-tests-android/assets/data/tiledmap/tileset21.png b/tests/gdx-tests-android/assets/data/tiledmap/tileset21.png
new file mode 100644
index 0000000..3b2481b
Binary files /dev/null and b/tests/gdx-tests-android/assets/data/tiledmap/tileset21.png differ
diff --git a/tests/gdx-tests-android/assets/data/tiledmap/tileset3 packfile b/tests/gdx-tests-android/assets/data/tiledmap/tileset3 packfile
new file mode 100644
index 0000000..483f7fd
--- /dev/null
+++ b/tests/gdx-tests-android/assets/data/tiledmap/tileset3 packfile	
@@ -0,0 +1,33 @@
+
+tileset31.png
+format: RGBA8888
+filter: Nearest,Nearest
+repeat: none
+tileset3
+  rotate: false
+  xy: 0, 0
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 3
+tileset3
+  rotate: false
+  xy: 0, 34
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 2
+tileset3
+  rotate: false
+  xy: 0, 68
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 1
+tileset3
+  rotate: false
+  xy: 0, 102
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 0
diff --git a/tests/gdx-tests-android/assets/data/tiledmap/tileset31.png b/tests/gdx-tests-android/assets/data/tiledmap/tileset31.png
new file mode 100644
index 0000000..1854f08
Binary files /dev/null and b/tests/gdx-tests-android/assets/data/tiledmap/tileset31.png differ
diff --git a/tests/gdx-tests-android/assets/data/tiledmap/tileset4 packfile b/tests/gdx-tests-android/assets/data/tiledmap/tileset4 packfile
new file mode 100644
index 0000000..7dc7f0c
--- /dev/null
+++ b/tests/gdx-tests-android/assets/data/tiledmap/tileset4 packfile	
@@ -0,0 +1,33 @@
+
+tileset41.png
+format: RGBA8888
+filter: Nearest,Nearest
+repeat: none
+tileset4
+  rotate: false
+  xy: 0, 0
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 3
+tileset4
+  rotate: false
+  xy: 0, 34
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 2
+tileset4
+  rotate: false
+  xy: 0, 68
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 1
+tileset4
+  rotate: false
+  xy: 0, 102
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 0
diff --git a/tests/gdx-tests-android/assets/data/tiledmap/tileset41.png b/tests/gdx-tests-android/assets/data/tiledmap/tileset41.png
new file mode 100644
index 0000000..8d8b63e
Binary files /dev/null and b/tests/gdx-tests-android/assets/data/tiledmap/tileset41.png differ
diff --git a/tests/gdx-tests-android/assets/data/tiledmap/tmw-desert-spacing packfile b/tests/gdx-tests-android/assets/data/tiledmap/tmw-desert-spacing packfile
new file mode 100644
index 0000000..565c2c9
--- /dev/null
+++ b/tests/gdx-tests-android/assets/data/tiledmap/tmw-desert-spacing packfile	
@@ -0,0 +1,341 @@
+
+tmw-desert-spacing1.png
+format: RGBA8888
+filter: Nearest,Nearest
+repeat: none
+tmw-desert-spacing
+  rotate: false
+  xy: 2, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 47
+tmw-desert-spacing
+  rotate: false
+  xy: 2, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 46
+tmw-desert-spacing
+  rotate: false
+  xy: 2, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 45
+tmw-desert-spacing
+  rotate: false
+  xy: 36, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 44
+tmw-desert-spacing
+  rotate: false
+  xy: 36, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 43
+tmw-desert-spacing
+  rotate: false
+  xy: 36, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 42
+tmw-desert-spacing
+  rotate: false
+  xy: 70, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 41
+tmw-desert-spacing
+  rotate: false
+  xy: 70, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 40
+tmw-desert-spacing
+  rotate: false
+  xy: 70, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 39
+tmw-desert-spacing
+  rotate: false
+  xy: 104, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 38
+tmw-desert-spacing
+  rotate: false
+  xy: 104, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 37
+tmw-desert-spacing
+  rotate: false
+  xy: 104, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 36
+tmw-desert-spacing
+  rotate: false
+  xy: 138, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 35
+tmw-desert-spacing
+  rotate: false
+  xy: 138, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 34
+tmw-desert-spacing
+  rotate: false
+  xy: 138, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 33
+tmw-desert-spacing
+  rotate: false
+  xy: 172, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 32
+tmw-desert-spacing
+  rotate: false
+  xy: 172, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 31
+tmw-desert-spacing
+  rotate: false
+  xy: 172, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 30
+tmw-desert-spacing
+  rotate: false
+  xy: 206, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 29
+tmw-desert-spacing
+  rotate: false
+  xy: 206, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 28
+tmw-desert-spacing
+  rotate: false
+  xy: 206, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 27
+tmw-desert-spacing
+  rotate: false
+  xy: 240, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 26
+tmw-desert-spacing
+  rotate: false
+  xy: 240, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 25
+tmw-desert-spacing
+  rotate: false
+  xy: 240, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 24
+tmw-desert-spacing
+  rotate: false
+  xy: 274, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 23
+tmw-desert-spacing
+  rotate: false
+  xy: 274, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 22
+tmw-desert-spacing
+  rotate: false
+  xy: 274, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 21
+tmw-desert-spacing
+  rotate: false
+  xy: 308, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 20
+tmw-desert-spacing
+  rotate: false
+  xy: 308, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 19
+tmw-desert-spacing
+  rotate: false
+  xy: 308, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 18
+tmw-desert-spacing
+  rotate: false
+  xy: 342, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 17
+tmw-desert-spacing
+  rotate: false
+  xy: 342, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 16
+tmw-desert-spacing
+  rotate: false
+  xy: 342, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 15
+tmw-desert-spacing
+  rotate: false
+  xy: 376, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 14
+tmw-desert-spacing
+  rotate: false
+  xy: 376, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 13
+tmw-desert-spacing
+  rotate: false
+  xy: 376, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 12
+tmw-desert-spacing
+  rotate: false
+  xy: 410, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 11
+tmw-desert-spacing
+  rotate: false
+  xy: 410, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 10
+tmw-desert-spacing
+  rotate: false
+  xy: 410, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 9
+tmw-desert-spacing
+  rotate: false
+  xy: 444, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 8
+tmw-desert-spacing
+  rotate: false
+  xy: 444, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 7
+tmw-desert-spacing
+  rotate: false
+  xy: 444, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 6
+tmw-desert-spacing
+  rotate: false
+  xy: 478, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 5
+tmw-desert-spacing
+  rotate: false
+  xy: 478, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 4
+tmw-desert-spacing
+  rotate: false
+  xy: 478, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 3
+tmw-desert-spacing
+  rotate: false
+  xy: 512, 2
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 2
+tmw-desert-spacing
+  rotate: false
+  xy: 512, 36
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 1
+tmw-desert-spacing
+  rotate: false
+  xy: 512, 70
+  size: 32, 32
+  orig: 32, 32
+  offset: 0, 0
+  index: 0
diff --git a/tests/gdx-tests-android/assets/data/tiledmap/tmw-desert-spacing1.png b/tests/gdx-tests-android/assets/data/tiledmap/tmw-desert-spacing1.png
new file mode 100644
index 0000000..25c78a1
Binary files /dev/null and b/tests/gdx-tests-android/assets/data/tiledmap/tmw-desert-spacing1.png differ
diff --git a/tests/gdx-tests-lwjgl/src/com/badlogic/gdx/tests/lwjgl/LwjglDebugStarter.java b/tests/gdx-tests-lwjgl/src/com/badlogic/gdx/tests/lwjgl/LwjglDebugStarter.java
index 74fda89..1cb6062 100644
--- a/tests/gdx-tests-lwjgl/src/com/badlogic/gdx/tests/lwjgl/LwjglDebugStarter.java
+++ b/tests/gdx-tests-lwjgl/src/com/badlogic/gdx/tests/lwjgl/LwjglDebugStarter.java
@@ -18,15 +18,7 @@ package com.badlogic.gdx.tests.lwjgl;
 
 import com.badlogic.gdx.backends.lwjgl.LwjglApplication;
 import com.badlogic.gdx.backends.lwjgl.LwjglApplicationConfiguration;
-import com.badlogic.gdx.tests.AssetManagerTest;
-import com.badlogic.gdx.tests.GleedTest;
-import com.badlogic.gdx.tests.GamepadTest;
-import com.badlogic.gdx.tests.InverseKinematicsTest;
-import com.badlogic.gdx.tests.TiledMapDirectLoaderTest;
-import com.badlogic.gdx.tests.TiledMapAssetManagerTest;
-import com.badlogic.gdx.tests.YDownTest;
-import com.badlogic.gdx.tests.bench.TiledMapBench;
-import com.badlogic.gdx.tests.extensions.FreeTypeTest;
+import com.badlogic.gdx.tests.PixmapPackerTest;
 import com.badlogic.gdx.tests.utils.GdxTest;
 import com.badlogic.gdx.utils.SharedLibraryLoader;
 
@@ -39,9 +31,11 @@ public class LwjglDebugStarter {
 		new SharedLibraryLoader("../../extensions/gdx-controllers/gdx-controllers-desktop/libs/gdx-controllers-desktop-natives.jar").load("gdx-controllers-desktop");
 		new SharedLibraryLoader("../../gdx/libs/gdx-natives.jar").load("gdx");
 
-		GdxTest test = new TiledMapBench();
+		GdxTest test = new PixmapPackerTest();
 		LwjglApplicationConfiguration config = new LwjglApplicationConfiguration();
 		config.useGL20 = test.needsGL20();
 		new LwjglApplication(test, config);
 	}
+	
+	
 }
diff --git a/tests/gdx-tests/.classpath b/tests/gdx-tests/.classpath
index 1c176ac..f84152d 100644
--- a/tests/gdx-tests/.classpath
+++ b/tests/gdx-tests/.classpath
@@ -1,12 +1,13 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<classpath>
-	<classpathentry excluding="**/.svn/*" kind="src" path="src"/>
-	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6"/>
-	<classpathentry combineaccessrules="false" kind="src" path="/gdx"/>
-	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx-audio"/>
-	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx-freetype"/>
-	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx-image"/>
-	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx-bullet"/>
-	<classpathentry combineaccessrules="false" kind="src" path="/gdx-controllers"/>
-	<classpathentry kind="output" path="bin"/>
-</classpath>
+<?xml version="1.0" encoding="UTF-8"?>
+<classpath>
+	<classpathentry excluding="**/.svn/*" kind="src" path="src"/>
+	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6"/>
+	<classpathentry combineaccessrules="false" kind="src" path="/gdx"/>
+	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx-audio"/>
+	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx-freetype"/>
+	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx-image"/>
+	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx-bullet"/>
+	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx-gleed"/>
+	<classpathentry combineaccessrules="false" kind="src" path="/gdx-controllers"/>
+	<classpathentry kind="output" path="bin"/>
+</classpath>
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/BulletTestCollection.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/BulletTestCollection.java
index 3cd5701..1bc3d1c 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/BulletTestCollection.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/BulletTestCollection.java
@@ -32,6 +32,7 @@ import com.badlogic.gdx.scenes.scene2d.ui.Label;
 import com.badlogic.gdx.scenes.scene2d.utils.Align;
 import com.badlogic.gdx.tests.box2d.Box2DTest;
 import com.badlogic.gdx.tests.bullet.BulletTest;
+import com.badlogic.gdx.tests.bullet.CollisionTest;
 import com.badlogic.gdx.tests.bullet.CollisionWorldTest;
 import com.badlogic.gdx.tests.bullet.ConstraintsTest;
 import com.badlogic.gdx.tests.bullet.ConvexHullTest;
@@ -49,7 +50,7 @@ import com.badlogic.gdx.tests.utils.GdxTest;
 public class BulletTestCollection extends GdxTest implements InputProcessor, GestureListener {
 	protected final BulletTest[] tests = {new ShootTest(), new KinematicTest(), new ConstraintsTest(), 
 		new MeshShapeTest(), new ConvexHullTest(), new RayCastTest(), new RayPickRagdollTest(), new InternalTickTest(), 
-		new CollisionWorldTest(), new SoftBodyTest(), new SoftMeshTest()};
+		new CollisionWorldTest(), new CollisionTest(), new SoftBodyTest(), new SoftMeshTest()};
 	
 	protected int testIndex = 0;
 	
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/GLEEDTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/GLEEDTest.java
deleted file mode 100644
index 303a4db..0000000
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/GLEEDTest.java
+++ /dev/null
@@ -1,163 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-
-
-package com.badlogic.gdx.tests;
-
-import com.badlogic.gdx.Gdx;
-import com.badlogic.gdx.Input.Keys;
-import com.badlogic.gdx.assets.AssetManager;
-import com.badlogic.gdx.assets.loaders.resolvers.InternalFileHandleResolver;
-import com.badlogic.gdx.graphics.GL10;
-import com.badlogic.gdx.graphics.OrthographicCamera;
-import com.badlogic.gdx.graphics.g2d.BitmapFont;
-import com.badlogic.gdx.graphics.g2d.SpriteBatch;
-import com.badlogic.gdx.maps.Map;
-import com.badlogic.gdx.maps.gleed.GleedMapLoader;
-import com.badlogic.gdx.maps.gleed.GleedMapRenderer;
-import com.badlogic.gdx.math.Rectangle;
-import com.badlogic.gdx.math.Vector2;
-import com.badlogic.gdx.tests.utils.GdxTest;
-import com.badlogic.gdx.utils.Logger;
-
-public class GleedTest extends GdxTest {
-	
-	enum State {
-		Loading,
-		Running
-	}
-	
-	final int VIRTUAL_WIDTH = 1280;
-	final int VIRTUAL_HEIGHT = 720;
-	final float ASPECT_RATIO = (float)VIRTUAL_WIDTH/(float)VIRTUAL_HEIGHT;
-	
-	AssetManager manager;
-	OrthographicCamera camera;
-	GleedMapRenderer renderer;
-	State state = State.Loading;
-	BitmapFont fpsFont;
-	SpriteBatch batch;
-	Rectangle viewport;
-	
-	@Override
-	public boolean needsGL20() {
-		return true;
-	}
-	
-	@Override
-	public void create() {
-		super.create();
-		manager = new AssetManager();
-		camera = new OrthographicCamera(VIRTUAL_WIDTH, VIRTUAL_HEIGHT);
-		camera.zoom = 2.0f;
-		manager.setLoader(Map.class, new GleedMapLoader(new InternalFileHandleResolver()));
-		manager.load("data/gleedtest.xml", Map.class);
-		manager.load("data/font.fnt", BitmapFont.class);
-		batch = new SpriteBatch();
-	}
-	
-	@Override
-	public void dispose() {
-		batch.dispose();
-	}
-	
-	@Override
-	public void render() {
-		Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
-		
-		camera.update();
-		
-		Gdx.gl.glViewport((int) viewport.x, (int) viewport.y, (int) viewport.width, (int) viewport.height);
-		
-		if (state == State.Loading && manager.update()) {
-			state = State.Running;
-			renderer = new GleedMapRenderer(manager.get("data/gleedtest.xml", Map.class));
-			fpsFont = manager.get("data/font.fnt", BitmapFont.class);
-		}
-		
-		if (state == State.Running) {
-			renderer.setView(camera);
-			renderer.render();
-			
-			if (Gdx.input.isKeyPressed(Keys.UP)) {
-				camera.position.y += 5.0f;
-			}
-			else if (Gdx.input.isKeyPressed(Keys.DOWN)) {
-				camera.position.y -= 5.0f;
-			}
-			
-			if (Gdx.input.isKeyPressed(Keys.RIGHT)) {
-				camera.position.x += 5.0f;
-			}
-			else if (Gdx.input.isKeyPressed(Keys.LEFT)) {
-				camera.position.x -= 5.0f;
-			}
-			
-			if (Gdx.input.isKeyPressed(Keys.A)) {
-				camera.zoom += 0.05f;
-			}
-			else if (Gdx.input.isKeyPressed(Keys.S)) {
-				camera.zoom -= 0.05f;
-			}
-			
-			if (Gdx.input.isTouched()) {
-				if (Gdx.input.getX() < VIRTUAL_WIDTH * 0.2f) {
-					camera.position.x -= 5.0f;
-				}
-				else if (Gdx.input.getX() > VIRTUAL_WIDTH * 0.8f) {
-					camera.position.x += 5.0f;
-				}
-				
-				if (Gdx.input.getY() < VIRTUAL_HEIGHT * 0.2) {
-					camera.position.y += 5.0f;
-				}
-				else if (Gdx.input.getY() > VIRTUAL_HEIGHT * 0.8f) {
-					camera.position.y -= 5.0f;
-				}
-			}
-
-			batch.begin();
-			fpsFont.draw(batch, "" + Gdx.graphics.getFramesPerSecond(), VIRTUAL_WIDTH - 30, VIRTUAL_HEIGHT - 30);
-			batch.end();
-		}
-	}
-	
-	@Override
-	public void resize(int arg0, int arg1) {
-	  float aspectRatio = (float)arg0/(float)arg1;
-	  float scale = 1f;
-	  Vector2 crop = new Vector2(0f, 0f);
-	  
-	  if(aspectRatio > ASPECT_RATIO)
-	  {
-	      scale = (float)arg1 / (float)VIRTUAL_HEIGHT;
-	      crop.x = (arg0 - VIRTUAL_WIDTH * scale) / 2.0f;
-	  }
-	  else if(aspectRatio < ASPECT_RATIO)
-	  {
-	      scale = (float)arg0 / (float)VIRTUAL_WIDTH;
-	      crop.y = (arg1 - VIRTUAL_HEIGHT * scale) / 2.0f;
-	  }
-	  else
-	  {
-	      scale = (float)arg0/(float)VIRTUAL_WIDTH;
-	  }
-	
-	  float w = (float)VIRTUAL_WIDTH * scale;
-	  float h = (float)VIRTUAL_HEIGHT * scale;
-	  viewport = new Rectangle(crop.x, crop.y, w, h);
-	}
-}
\ No newline at end of file
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/PathTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/PathTest.java
new file mode 100644
index 0000000..f8a66cd
--- /dev/null
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/PathTest.java
@@ -0,0 +1,131 @@
+/*******************************************************************************
+ * Copyright 2011 See AUTHORS file.
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/
+
+package com.badlogic.gdx.tests;
+
+import com.badlogic.gdx.Gdx;
+import com.badlogic.gdx.InputProcessor;
+import com.badlogic.gdx.graphics.GL10;
+import com.badlogic.gdx.graphics.Texture;
+import com.badlogic.gdx.graphics.g2d.Sprite;
+import com.badlogic.gdx.graphics.g2d.SpriteBatch;
+import com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer10;
+import com.badlogic.gdx.math.BSpline;
+import com.badlogic.gdx.math.Bezier;
+import com.badlogic.gdx.math.CatmullRomSpline;
+import com.badlogic.gdx.math.Path;
+import com.badlogic.gdx.math.Vector2;
+import com.badlogic.gdx.tests.utils.GdxTest;
+import com.badlogic.gdx.utils.Array;
+
+/** @author Xoppa */
+public class PathTest extends GdxTest {
+	int SAMPLE_POINTS = 100;
+	float SAMPLE_POINT_DISTANCE = 1f/SAMPLE_POINTS;
+	
+	SpriteBatch spriteBatch;
+	ImmediateModeRenderer10 renderer;
+	Sprite obj;
+	Array<Path<Vector2>> paths = new Array<Path<Vector2>>();
+	int currentPath = 0;
+	float t;
+	float speed = 0.3f;
+	float wait = 0f;
+
+	@Override
+	public boolean needsGL20 () {
+		return false;
+	}
+	
+	@Override
+	public void create () {
+		renderer = new ImmediateModeRenderer10();
+		spriteBatch = new SpriteBatch();
+		obj = new Sprite(new Texture(Gdx.files.internal("data/badlogicsmall.jpg")));
+		
+		float w = Gdx.graphics.getWidth() - obj.getWidth();
+		float h = Gdx.graphics.getHeight() - obj.getHeight();
+		
+		paths.add(new Bezier<Vector2>(new Vector2(0,0), new Vector2(w, h)));
+		paths.add(new Bezier<Vector2>(new Vector2(0,0), new Vector2(0, h), new Vector2(w, h)));
+		paths.add(new Bezier<Vector2>(new Vector2(0,0), new Vector2(w, 0), new Vector2(0, h), new Vector2(w, h)));
+		
+		Vector2 cp[] = new Vector2[]{
+			new Vector2(0, 0), new Vector2(w * 0.25f, h * 0.5f), new Vector2(0, h), new Vector2(w*0.5f, h*0.75f),
+			new Vector2(w, h), new Vector2(w * 0.75f, h * 0.5f), new Vector2(w, 0), new Vector2(w*0.5f, h*0.25f)
+		};
+		paths.add(new BSpline<Vector2>(cp, 3, true));
+		
+		paths.add(new CatmullRomSpline<Vector2>(cp, true));
+		
+		Gdx.input.setInputProcessor(this);
+	}
+	
+	final Vector2 tmpV = new Vector2();
+	@Override
+	public void render () {
+		GL10 gl = Gdx.graphics.getGL10();
+		gl.glClearColor(0.7f, 0.7f, 0.7f, 1);
+		gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
+		
+		if (wait > 0)
+			wait -= Gdx.graphics.getDeltaTime();
+		else {
+			t += speed * Gdx.graphics.getDeltaTime();
+			while (t >= 1f) {
+				currentPath = (currentPath + 1) % paths.size;
+				t -= 1f;
+			}
+			
+			paths.get(currentPath).valueAt(tmpV, t);
+			obj.setPosition(tmpV.x, tmpV.y);
+		}
+			
+		spriteBatch.begin();
+		
+		renderer.begin(GL10.GL_LINE_STRIP);
+		float val = 0f;
+		while (val <= 1f) {
+			renderer.color(0f, 0f, 0f, 1f);
+			paths.get(currentPath).valueAt(Vector2.tmp, val);
+			renderer.vertex(Vector2.tmp.x, Vector2.tmp.y, 0);
+			val += SAMPLE_POINT_DISTANCE;
+		}
+		renderer.end();
+		
+		obj.draw(spriteBatch);
+		spriteBatch.end();
+	}
+	
+	private void touch(int x, int y) {
+		t = paths.get(currentPath).approximate(tmpV.set(x, Gdx.graphics.getHeight()-y));
+		paths.get(currentPath).valueAt(tmpV, t);
+		obj.setPosition(tmpV.x, tmpV.y);
+		wait = 0.2f;		
+	}
+	
+	@Override
+	public boolean touchUp (int screenX, int screenY, int pointer, int button) {
+		touch(screenX, screenY);
+		return super.touchUp(screenX, screenY, pointer, button);
+	}
+	
+	@Override
+	public boolean touchDragged (int screenX, int screenY, int pointer) {
+		touch(screenX, screenY);
+		return super.touchDragged(screenX, screenY, pointer);
+	}
+}
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/PixmapPackerTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/PixmapPackerTest.java
index 549ebf7..0245ab7 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/PixmapPackerTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/PixmapPackerTest.java
@@ -5,9 +5,11 @@ import com.badlogic.gdx.graphics.GL10;
 import com.badlogic.gdx.graphics.OrthographicCamera;
 import com.badlogic.gdx.graphics.Pixmap;
 import com.badlogic.gdx.graphics.Pixmap.Format;
+import com.badlogic.gdx.graphics.PixmapIO;
 import com.badlogic.gdx.graphics.Texture;
 import com.badlogic.gdx.graphics.Texture.TextureFilter;
 import com.badlogic.gdx.graphics.g2d.PixmapPacker;
+import com.badlogic.gdx.graphics.g2d.PixmapPacker.Page;
 import com.badlogic.gdx.graphics.g2d.SpriteBatch;
 import com.badlogic.gdx.graphics.g2d.TextureAtlas;
 import com.badlogic.gdx.tests.utils.GdxTest;
@@ -35,7 +37,7 @@ public class PixmapPackerTest extends GdxTest {
 		PixmapPacker packer =  new PixmapPacker(1024, 1024, Format.RGBA8888, 2, true);
 		packer.pack("badlogic", pixmap1);
 		packer.pack("wheel", pixmap1);
-		packer.pack("egg", pixmap1);
+		packer.pack("egg", pixmap1);		
 		
 		atlas = packer.generateTextureAtlas(TextureFilter.Nearest, TextureFilter.Nearest, false);
 		Gdx.app.log("PixmaPackerTest", "Number of textures: " + atlas.getTextures().size());
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/SplineTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/SplineTest.java
deleted file mode 100644
index afde2e3..0000000
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/SplineTest.java
+++ /dev/null
@@ -1,125 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-
-package com.badlogic.gdx.tests;
-
-import com.badlogic.gdx.Gdx;
-import com.badlogic.gdx.graphics.GL10;
-import com.badlogic.gdx.graphics.OrthographicCamera;
-import com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer10;
-import com.badlogic.gdx.math.CatmullRomSpline;
-import com.badlogic.gdx.math.Vector3;
-import com.badlogic.gdx.tests.utils.GdxTest;
-
-public class SplineTest extends GdxTest {
-
-	@Override
-	public boolean needsGL20 () {
-		return false;
-	}
-
-	final int CONTROL_POINTS = 10;
-	OrthographicCamera cam;
-	ImmediateModeRenderer10 renderer;
-	CatmullRomSpline spline;
-	Vector3[] path;
-
-	@Override
-	public void create () {
-		cam = new OrthographicCamera(Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
-		cam.position.set(Gdx.graphics.getWidth() / 2, Gdx.graphics.getHeight() / 2, 0);
-		renderer = new ImmediateModeRenderer10();
-		spline = new CatmullRomSpline();
-		float x = 0;
-		float y = Gdx.graphics.getHeight() / 2;
-		spline.add(new Vector3(x - 50, y, 0));
-		for (int i = 0; i < CONTROL_POINTS; i++) {
-			spline.add(new Vector3(x, y, 0));
-			x += Gdx.graphics.getWidth() / (CONTROL_POINTS - 2);
-		}
-		spline.add(new Vector3(Gdx.graphics.getWidth() + 50, y, 0));
-		path = new Vector3[(CONTROL_POINTS - 2) * 7 - 1];
-		for (int i = 0; i < path.length; i++)
-			path[i] = new Vector3();
-		spline.getPath(path, 5);
-	}
-
-	@Override
-	public void render () {
-		Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
-		cam.update();
-		Gdx.gl10.glMatrixMode(GL10.GL_PROJECTION);
-		Gdx.gl10.glLoadMatrixf(cam.projection.val, 0);
-		Gdx.gl10.glMatrixMode(GL10.GL_MODELVIEW);
-		Gdx.gl10.glLoadMatrixf(cam.view.val, 0);
-
-		renderer.begin(GL10.GL_TRIANGLES);
-		for (int i = 0; i < path.length - 1; i++) {
-			Vector3 point1 = path[i];
-			Vector3 point2 = path[i + 1];
-			renderer.color(1, 1, 1, 1);
-			renderer.vertex(point1.x, point1.y, 0);
-			renderer.color(1, 1, 1, 1);
-			renderer.vertex(point1.x, 0, 0);
-			renderer.color(1, 1, 1, 1);
-			renderer.vertex(point2.x, point2.y, 0);
-
-			renderer.color(1, 1, 1, 1);
-			renderer.vertex(point2.x, point2.y, 0);
-			renderer.color(1, 1, 1, 1);
-			renderer.vertex(point1.x, 0, 0);
-			renderer.color(1, 1, 1, 1);
-			renderer.vertex(point2.x, 0, 0);
-		}
-		renderer.end();
-
-		Gdx.gl10.glPointSize(4);
-		renderer.begin(GL10.GL_POINTS);
-		for (int i = 0; i < spline.getControlPoints().size(); i++) {
-			Vector3 point = spline.getControlPoints().get(i);
-			renderer.color(1, 0, 0, 1);
-			renderer.vertex(point.x, point.y, 0);
-		}
-		renderer.end();
-		Gdx.gl10.glPointSize(1);
-
-		processInput();
-	}
-
-	Vector3 point = new Vector3();
-
-	private void processInput () {
-// if(Gdx.input.isTouched()) {
-// Vector3 nearest = null;
-// float nearestDist = Float.MAX_VALUE;
-// point.set(cam.getScreenToWorldX(Gdx.input.getX()),
-// cam.getScreenToWorldY(Gdx.input.getY()),
-// 0);
-//
-// for(int i = 0; i < spline.getControlPoints().size(); i++) {
-// Vector3 controlPoint = spline.getControlPoints().get(i);
-// float dist = Math.abs(point.x - controlPoint.x);
-// if(dist < nearestDist) {
-// nearest = controlPoint;
-// nearestDist = dist;
-// }
-// }
-//
-// nearest.y += (point.y - nearest.y) * Gdx.graphics.getDeltaTime();
-// spline.getPath(path, 5);
-// }
-	}
-}
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/TideMapAssetManagerTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/TideMapAssetManagerTest.java
deleted file mode 100644
index bc3eabb..0000000
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/TideMapAssetManagerTest.java
+++ /dev/null
@@ -1,69 +0,0 @@
-package com.badlogic.gdx.tests;
-
-import com.badlogic.gdx.Gdx;
-import com.badlogic.gdx.assets.AssetManager;
-import com.badlogic.gdx.assets.loaders.resolvers.InternalFileHandleResolver;
-import com.badlogic.gdx.graphics.GL10;
-import com.badlogic.gdx.graphics.OrthographicCamera;
-import com.badlogic.gdx.graphics.g2d.BitmapFont;
-import com.badlogic.gdx.graphics.g2d.SpriteBatch;
-import com.badlogic.gdx.maps.tiled.TideMapLoader;
-import com.badlogic.gdx.maps.tiled.TiledMap;
-import com.badlogic.gdx.maps.tiled.TiledMapRenderer;
-import com.badlogic.gdx.maps.tiled.TmxMapLoader;
-import com.badlogic.gdx.maps.tiled.renderers.IsometricTiledMapRenderer;
-import com.badlogic.gdx.maps.tiled.renderers.OrthogonalTiledMapRenderer;
-import com.badlogic.gdx.tests.utils.GdxTest;
-import com.badlogic.gdx.tests.utils.OrthoCamController;
-
-public class TideMapAssetManagerTest extends GdxTest {
-	
-	private TiledMap map;
-	private TiledMapRenderer renderer;
-	private OrthographicCamera camera;
-	private OrthoCamController cameraController;
-	private AssetManager assetManager;
-	private BitmapFont font;
-	private SpriteBatch batch;
-	
-	@Override
-	public void create() {		
-		float w = Gdx.graphics.getWidth();
-		float h = Gdx.graphics.getHeight();
-		
-		camera = new OrthographicCamera();
-		camera.setToOrtho(false, (w / h) * 10, 10);
-		camera.zoom = 2;
-		camera.update();
-		
-		cameraController = new OrthoCamController(camera);
-		Gdx.input.setInputProcessor(cameraController);
-	
-		font = new BitmapFont();
-		batch = new SpriteBatch();
-		
-		assetManager = new AssetManager();
-		assetManager.setLoader(TiledMap.class, new TideMapLoader(new InternalFileHandleResolver()));
-		assetManager.load("data/maps/tide/Map01.tide", TiledMap.class);
-		assetManager.finishLoading();
-		map = assetManager.get("data/maps/tide/Map01.tide");
-		renderer = new OrthogonalTiledMapRenderer(map, 1f / 32f);
-	}
-
-	@Override
-	public void render() {
-		Gdx.gl.glClearColor(0.55f, 0.55f, 0.55f, 1f);
-		Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
-		camera.update();
-		renderer.setView(camera);
-		renderer.render();
-		batch.begin();
-		font.draw(batch, "FPS: " + Gdx.graphics.getFramesPerSecond(), 10, 20); 
-		batch.end();
-	}
-	
-	@Override
-	public boolean needsGL20 () {
-		return true;
-	}
-}
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/TideMapDirectLoaderTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/TideMapDirectLoaderTest.java
deleted file mode 100644
index 1fb4ea9..0000000
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/TideMapDirectLoaderTest.java
+++ /dev/null
@@ -1,64 +0,0 @@
-package com.badlogic.gdx.tests;
-
-import com.badlogic.gdx.Gdx;
-import com.badlogic.gdx.graphics.GL10;
-import com.badlogic.gdx.graphics.OrthographicCamera;
-import com.badlogic.gdx.graphics.g2d.BitmapFont;
-import com.badlogic.gdx.graphics.g2d.SpriteBatch;
-import com.badlogic.gdx.maps.tiled.TideMapLoader;
-import com.badlogic.gdx.maps.tiled.TiledMap;
-import com.badlogic.gdx.maps.tiled.TiledMapRenderer;
-import com.badlogic.gdx.maps.tiled.renderers.OrthogonalTiledMapRenderer;
-import com.badlogic.gdx.tests.utils.GdxTest;
-import com.badlogic.gdx.tests.utils.OrthoCamController;
-
-public class TideMapDirectLoaderTest extends GdxTest {
-	
-	private TiledMap map;
-	private TiledMapRenderer renderer;
-	private OrthographicCamera camera;
-	private OrthoCamController cameraController;
-	private BitmapFont font;
-	private SpriteBatch batch;
-	
-	@Override
-	public void create() {		
-		float w = Gdx.graphics.getWidth();
-		float h = Gdx.graphics.getHeight();
-		
-		camera = new OrthographicCamera();
-		camera.setToOrtho(false, (w / h) * 10, 10);
-		camera.update();
-		
-		cameraController = new OrthoCamController(camera);
-		Gdx.input.setInputProcessor(cameraController);
-	
-		font = new BitmapFont();
-		batch = new SpriteBatch();
-		
-		map = new TideMapLoader().load("data/maps/tide/Map01.tide");
-		renderer = new OrthogonalTiledMapRenderer(map, 1f / 32f);
-	}
-
-	@Override
-	public void render() {
-		Gdx.gl.glClearColor(0.55f, 0.55f, 0.55f, 1f);
-		Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
-		camera.update();
-		renderer.setView(camera);
-		renderer.render();
-		batch.begin();
-		font.draw(batch, "FPS: " + Gdx.graphics.getFramesPerSecond(), 10, 20); 
-		batch.end();
-	}
-	
-	@Override
-	public boolean needsGL20 () {
-		return true;
-	}
-
-	@Override
-	public void dispose () {
-		map.dispose();
-	}
-}
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/TiledMapAssetManagerTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/TiledMapAssetManagerTest.java
deleted file mode 100644
index 5ecab6a..0000000
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/TiledMapAssetManagerTest.java
+++ /dev/null
@@ -1,67 +0,0 @@
-package com.badlogic.gdx.tests;
-
-import com.badlogic.gdx.Gdx;
-import com.badlogic.gdx.assets.AssetManager;
-import com.badlogic.gdx.assets.loaders.resolvers.InternalFileHandleResolver;
-import com.badlogic.gdx.graphics.GL10;
-import com.badlogic.gdx.graphics.OrthographicCamera;
-import com.badlogic.gdx.graphics.g2d.BitmapFont;
-import com.badlogic.gdx.graphics.g2d.SpriteBatch;
-import com.badlogic.gdx.maps.tiled.TiledMap;
-import com.badlogic.gdx.maps.tiled.TiledMapRenderer;
-import com.badlogic.gdx.maps.tiled.TmxMapLoader;
-import com.badlogic.gdx.maps.tiled.renderers.IsometricTiledMapRenderer;
-import com.badlogic.gdx.tests.utils.GdxTest;
-import com.badlogic.gdx.tests.utils.OrthoCamController;
-
-public class TiledMapAssetManagerTest extends GdxTest {
-	
-	private TiledMap map;
-	private TiledMapRenderer renderer;
-	private OrthographicCamera camera;
-	private OrthoCamController cameraController;
-	private AssetManager assetManager;
-	private BitmapFont font;
-	private SpriteBatch batch;
-	
-	@Override
-	public void create() {		
-		float w = Gdx.graphics.getWidth();
-		float h = Gdx.graphics.getHeight();
-		
-		camera = new OrthographicCamera();
-		camera.setToOrtho(false, (w / h) * 10, 10);
-		camera.zoom = 2;
-		camera.update();
-		
-		cameraController = new OrthoCamController(camera);
-		Gdx.input.setInputProcessor(cameraController);
-	
-		font = new BitmapFont();
-		batch = new SpriteBatch();
-		
-		assetManager = new AssetManager();
-		assetManager.setLoader(TiledMap.class, new TmxMapLoader(new InternalFileHandleResolver()));
-		assetManager.load("data/maps/isometric_grass_and_water.tmx", TiledMap.class);
-		assetManager.finishLoading();
-		map = assetManager.get("data/maps/isometric_grass_and_water.tmx");
-		renderer = new IsometricTiledMapRenderer(map, 1f / 64f);
-	}
-
-	@Override
-	public void render() {
-		Gdx.gl.glClearColor(100f / 255f, 100f / 255f, 250f / 255f, 1f);
-		Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
-		camera.update();
-		renderer.setView(camera);
-		renderer.render();
-		batch.begin();
-		font.draw(batch, "FPS: " + Gdx.graphics.getFramesPerSecond(), 10, 20); 
-		batch.end();
-	}
-	
-	@Override
-	public boolean needsGL20 () {
-		return true;
-	}
-}
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/TiledMapDirectLoaderTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/TiledMapDirectLoaderTest.java
deleted file mode 100755
index 7dd0bd0..0000000
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/TiledMapDirectLoaderTest.java
+++ /dev/null
@@ -1,64 +0,0 @@
-package com.badlogic.gdx.tests;
-
-import com.badlogic.gdx.Gdx;
-import com.badlogic.gdx.graphics.GL10;
-import com.badlogic.gdx.graphics.OrthographicCamera;
-import com.badlogic.gdx.graphics.g2d.BitmapFont;
-import com.badlogic.gdx.graphics.g2d.SpriteBatch;
-import com.badlogic.gdx.maps.tiled.TiledMap;
-import com.badlogic.gdx.maps.tiled.TiledMapRenderer;
-import com.badlogic.gdx.maps.tiled.TmxMapLoader;
-import com.badlogic.gdx.maps.tiled.renderers.OrthogonalTiledMapRenderer;
-import com.badlogic.gdx.tests.utils.GdxTest;
-import com.badlogic.gdx.tests.utils.OrthoCamController;
-
-public class TiledMapDirectLoaderTest extends GdxTest {
-	
-	private TiledMap map;
-	private TiledMapRenderer renderer;
-	private OrthographicCamera camera;
-	private OrthoCamController cameraController;
-	private BitmapFont font;
-	private SpriteBatch batch;
-	
-	@Override
-	public void create() {		
-		float w = Gdx.graphics.getWidth();
-		float h = Gdx.graphics.getHeight();
-		
-		camera = new OrthographicCamera();
-		camera.setToOrtho(false, (w / h) * 10, 10);
-		camera.update();
-		
-		cameraController = new OrthoCamController(camera);
-		Gdx.input.setInputProcessor(cameraController);
-	
-		font = new BitmapFont();
-		batch = new SpriteBatch();
-		
-		map = new TmxMapLoader().load("data/maps/tiles.tmx");
-		renderer = new OrthogonalTiledMapRenderer(map, 1f / 32f);
-	}
-
-	@Override
-	public void render() {
-		Gdx.gl.glClearColor(0.55f, 0.55f, 0.55f, 1f);
-		Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
-		camera.update();
-		renderer.setView(camera);
-		renderer.render();
-		batch.begin();
-		font.draw(batch, "FPS: " + Gdx.graphics.getFramesPerSecond(), 10, 20); 
-		batch.end();
-	}
-	
-	@Override
-	public boolean needsGL20 () {
-		return true;
-	}
-
-	@Override
-	public void dispose () {
-		map.dispose();
-	}
-}
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/TiledMapTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/TiledMapTest.java
new file mode 100644
index 0000000..d4f6516
--- /dev/null
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/TiledMapTest.java
@@ -0,0 +1,159 @@
+/*******************************************************************************
+ * Copyright 2011 See AUTHORS file.
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/
+
+package com.badlogic.gdx.tests;
+
+import com.badlogic.gdx.Gdx;
+import com.badlogic.gdx.files.FileHandle;
+import com.badlogic.gdx.graphics.Color;
+import com.badlogic.gdx.graphics.GL10;
+import com.badlogic.gdx.graphics.OrthographicCamera;
+import com.badlogic.gdx.graphics.g2d.BitmapFont;
+import com.badlogic.gdx.graphics.g2d.SpriteBatch;
+import com.badlogic.gdx.graphics.g2d.tiled.TileAtlas;
+import com.badlogic.gdx.graphics.g2d.tiled.TileMapRenderer;
+import com.badlogic.gdx.graphics.g2d.tiled.TiledLoader;
+import com.badlogic.gdx.graphics.g2d.tiled.TiledMap;
+import com.badlogic.gdx.graphics.g2d.tiled.TiledObject;
+import com.badlogic.gdx.graphics.g2d.tiled.TiledObjectGroup;
+import com.badlogic.gdx.math.Vector2;
+import com.badlogic.gdx.math.Vector3;
+import com.badlogic.gdx.tests.utils.GdxTest;
+import com.badlogic.gdx.tests.utils.OrthoCamController;
+
+/** @author David Fraska */
+public class TiledMapTest extends GdxTest {
+
+	private static final boolean automove = false;
+
+	private static final int[] layersList = {2, 3};
+
+	SpriteBatch spriteBatch;
+	BitmapFont font;
+
+	OrthographicCamera cam;
+	OrthoCamController camController;
+	Vector3 camDirection = new Vector3(1, 1, 0);
+	Vector2 maxCamPosition = new Vector2(0, 0);
+
+	TileMapRenderer tileMapRenderer;
+	TiledMap map;
+	TileAtlas atlas;
+
+	long startTime = System.nanoTime();
+	Vector3 tmp = new Vector3();
+
+	@Override
+	public void render () {
+		Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
+
+		if (automove) {
+			updateCameraPosition();
+		}
+
+		cam.zoom = 0.9f;
+		cam.update();
+		// tileMapRenderer.getProjectionMatrix().set(cam.combined); //Not required when using tileMapRenderer.render(cam)
+		tileMapRenderer.render(cam);// , layersList);
+
+		spriteBatch.begin();
+		font.draw(spriteBatch, "FPS: " + Gdx.graphics.getFramesPerSecond(), 20, 20);
+		font.draw(spriteBatch, "InitialCol, LastCol: " + tileMapRenderer.getInitialCol() + "," + tileMapRenderer.getLastCol(), 20,
+			40);
+		font.draw(spriteBatch, "InitialRow, LastRow: " + tileMapRenderer.getInitialRow() + "," + tileMapRenderer.getLastRow(), 20,
+			60);
+
+		tmp.set(0, 0, 0);
+		cam.unproject(tmp);
+		font.draw(spriteBatch, "Location: " + tmp.x + "," + tmp.y, 20, 80);
+		spriteBatch.end();
+	}
+
+	private void updateCameraPosition () {
+		cam.position.add(camDirection.tmp().mul(Gdx.graphics.getDeltaTime()).mul(5 * tileMapRenderer.getUnitsPerTileX()));
+
+		if (cam.position.x < 0) {
+			cam.position.x = 0;
+			camDirection.x = 1;
+		}
+		if (cam.position.x > maxCamPosition.x) {
+			cam.position.x = maxCamPosition.x;
+			camDirection.x = -1;
+		}
+		if (cam.position.y < 0) {
+			cam.position.y = 0;
+			camDirection.y = 1;
+		}
+		if (cam.position.y > maxCamPosition.y) {
+			cam.position.y = maxCamPosition.y;
+			camDirection.y = -1;
+		}
+	}
+
+	@Override
+	public void create () {
+		int i;
+		long startTime, endTime;
+		font = new BitmapFont();
+		font.setColor(Color.RED);
+
+		spriteBatch = new SpriteBatch();
+
+		final String path = "data/tiledmap/flip_rotate/";
+		final String mapname = "flip_rotate";
+
+		FileHandle mapHandle = Gdx.files.internal(path + mapname + ".tmx");
+		FileHandle baseDir = Gdx.files.internal(path);
+
+		startTime = System.currentTimeMillis();
+		map = TiledLoader.createMap(mapHandle);
+		endTime = System.currentTimeMillis();
+		System.out.println("Loaded map in " + (endTime - startTime) + "mS");
+
+		atlas = new TileAtlas(map, baseDir);
+
+		int blockWidth = 15;
+		int blockHeight = 10;
+
+		startTime = System.currentTimeMillis();
+
+		tileMapRenderer = new TileMapRenderer(map, atlas, blockWidth, blockHeight, 16, 16);
+		endTime = System.currentTimeMillis();
+		System.out.println("Created cache in " + (endTime - startTime) + "mS");
+
+		for (TiledObjectGroup group : map.objectGroups) {
+			for (TiledObject object : group.objects) {
+				// TODO: Draw sprites where objects occur
+				System.out.println("Object " + object.name + " x,y = " + object.x + "," + object.y + " width,height = "
+					+ object.width + "," + object.height);
+			}
+		}
+
+		float aspectRatio = (float)Gdx.graphics.getWidth() / (float)Gdx.graphics.getHeight();
+		cam = new OrthographicCamera(100f * aspectRatio, 100f);
+
+		cam.position.set(tileMapRenderer.getMapWidthUnits() / 2, tileMapRenderer.getMapHeightUnits() / 2, 0);
+		camController = new OrthoCamController(cam);
+		Gdx.input.setInputProcessor(camController);
+
+		maxCamPosition.set(tileMapRenderer.getMapWidthUnits(), tileMapRenderer.getMapHeightUnits());
+	}
+
+	@Override
+	public boolean needsGL20 () {
+		return false;
+	}
+}
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/bench/TiledMapBench.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/bench/TiledMapBench.java
deleted file mode 100644
index c593d46..0000000
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/bench/TiledMapBench.java
+++ /dev/null
@@ -1,83 +0,0 @@
-package com.badlogic.gdx.tests.bench;
-
-import com.badlogic.gdx.Gdx;
-import com.badlogic.gdx.InputAdapter;
-import com.badlogic.gdx.assets.AssetManager;
-import com.badlogic.gdx.graphics.GL10;
-import com.badlogic.gdx.graphics.OrthographicCamera;
-import com.badlogic.gdx.graphics.Texture;
-import com.badlogic.gdx.graphics.g2d.BitmapFont;
-import com.badlogic.gdx.graphics.g2d.SpriteBatch;
-import com.badlogic.gdx.graphics.g2d.TextureRegion;
-import com.badlogic.gdx.maps.MapLayers;
-import com.badlogic.gdx.maps.tiled.TiledMap;
-import com.badlogic.gdx.maps.tiled.TiledMapRenderer;
-import com.badlogic.gdx.maps.tiled.TiledMapTileLayer;
-import com.badlogic.gdx.maps.tiled.renderers.OrthogonalTiledMapRenderer;
-import com.badlogic.gdx.maps.tiled.renderers.OrthogonalTiledMapRenderer2;
-import com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile;
-import com.badlogic.gdx.math.Vector3;
-import com.badlogic.gdx.tests.utils.GdxTest;
-import com.badlogic.gdx.tests.utils.OrthoCamController;
-
-public class TiledMapBench extends GdxTest {
-	
-	private TiledMap map;
-	private TiledMapRenderer renderer;
-	private OrthographicCamera camera;
-	private OrthoCamController cameraController;
-	private AssetManager assetManager;
-	private Texture tiles;
-	private Texture texture;
-	private BitmapFont font;
-	private SpriteBatch batch;
-	
-	@Override
-	public void create() {		
-		float w = Gdx.graphics.getWidth();
-		float h = Gdx.graphics.getHeight();
-		
-		camera = new OrthographicCamera();
-		camera.setToOrtho(false, (w / h) * 320, 320);
-		camera.update();
-		
-		cameraController = new OrthoCamController(camera);
-		Gdx.input.setInputProcessor(cameraController);
-	
-		font = new BitmapFont();
-		batch = new SpriteBatch();
-		
-		{
-			tiles = new Texture(Gdx.files.internal("data/maps/tiles.png"));
-			TextureRegion[][] splitTiles = TextureRegion.split(tiles, 32, 32);
-			map = new TiledMap();
-			MapLayers layers = map.getLayers();
-			for (int l = 0; l < 20; l++) {
-				TiledMapTileLayer layer = new TiledMapTileLayer(150, 100, 32, 32);
-				for (int x = 0; x < 150; x++) {
-					for (int y = 0; y < 100; y++) {
-						int ty = (int)(Math.random() * splitTiles.length);
-						int tx = (int)(Math.random() * splitTiles[ty].length);
-						layer.setCell(x, y, new StaticTiledMapTile(splitTiles[ty][tx]));
-					}
-				}
-				layers.addLayer(layer);
-			}
-		}
-		
-		renderer = new OrthogonalTiledMapRenderer2(map);
-
-	}
-
-	@Override
-	public void render() {
-		Gdx.gl.glClearColor(100f / 255f, 100f / 255f, 250f / 255f, 1f);
-		Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
-		camera.update();
-		renderer.setView(camera);
-		renderer.render();
-		batch.begin();
-		font.draw(batch, "FPS: " + Gdx.graphics.getFramesPerSecond(), 10, 20); 
-		batch.end();
-	}
-}
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BaseBulletTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BaseBulletTest.java
index b03ab9f..cf6e25a 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BaseBulletTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BaseBulletTest.java
@@ -113,8 +113,15 @@ public class BaseBulletTest extends BulletTest {
 	
 	@Override
 	public void render () {
+		render(true);
+	}
+		
+	public void render(boolean update) {
 		fpsCounter.put(Gdx.graphics.getFramesPerSecond());
 		
+		if (update)
+			update();
+		
 		GL10 gl = Gdx.gl10;
 		gl.glClear(GL10.GL_COLOR_BUFFER_BIT | GL10.GL_DEPTH_BUFFER_BIT);
 		gl.glEnable(GL10.GL_DEPTH_TEST);
@@ -128,27 +135,32 @@ public class BaseBulletTest extends BulletTest {
 
 		camera.apply(Gdx.gl10);
 		
-		world.update();
+		world.render();
 		
 		performance.setLength(0);
 		performance.append("FPS: ").append(fpsCounter.value).append(", Bullet: ")
 			.append((int)(performanceCounter.load.value*100f)).append("%");
 	}
 	
-	public void shoot(final float x, final float y) {
-		shoot(x,y,30f);
+	public void update() {
+		world.update();
+	}
+	
+	public BulletEntity shoot(final float x, final float y) {
+		return shoot(x,y,30f);
 	}
 	
-	public void shoot(final float x, final float y, final float impulse) {
-		shoot("box", x, y, impulse);
+	public BulletEntity shoot(final float x, final float y, final float impulse) {
+		return shoot("box", x, y, impulse);
 	}
 	
-	public void shoot(final String what, final float x, final float y, final float impulse) {
+	public BulletEntity shoot(final String what, final float x, final float y, final float impulse) {
 		// Shoot a box
 		Ray ray = camera.getPickRay(x, y);
 		BulletEntity entity = world.add(what, ray.origin.x, ray.origin.y, ray.origin.z);
 		entity.color.set(0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 1f);
 		((btRigidBody)entity.body).applyCentralImpulse(ray.direction.mul(impulse));
+		return entity;
 	}
 	
 	public void setDebugMode(final int mode) {
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BaseWorld.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BaseWorld.java
index e0d39e1..992ebce 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BaseWorld.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BaseWorld.java
@@ -65,7 +65,7 @@ public class BaseWorld<T extends BaseEntity> implements Disposable {
 		return entity;
 	}
 	
-	public void update () {
+	public void render() {
 		GL10 gl = Gdx.gl10;
 
 		for (int i = 0; i < entities.size; i++) {
@@ -75,9 +75,11 @@ public class BaseWorld<T extends BaseEntity> implements Disposable {
 			gl.glColor4f(entity.color.r, entity.color.g, entity.color.b, entity.color.a);
 			entity.model.render();
 			gl.glPopMatrix();
-		}
+		}		
 	}
 	
+	public void update() {	}
+	
 	@Override
 	public void dispose () {
 		for (int i = 0; i < entities.size; i++)
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BulletWorld.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BulletWorld.java
index dce8381..800c26c 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BulletWorld.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BulletWorld.java
@@ -99,21 +99,24 @@ public class BulletWorld extends BaseWorld<BulletEntity> {
 	@Override
 	public void update () {
 		if (performanceCounter != null) {
-		performanceCounter.tick();
-		performanceCounter.start();
+			performanceCounter.tick();
+			performanceCounter.start();
 		}
 		if (collisionWorld instanceof btDynamicsWorld)
 			((btDynamicsWorld)collisionWorld).stepSimulation(Gdx.graphics.getDeltaTime(), maxSubSteps);
 		if (performanceCounter != null)
 			performanceCounter.stop();
-
+	}
+	
+	@Override
+	public void render() {
 		if (debugDrawer != null && debugDrawer.getDebugMode() > 0) {
 			debugDrawer.begin();
 			collisionWorld.debugDrawWorld();
 			debugDrawer.end();
 		}
 		if (renderMeshes)
-			super.update();
+			super.render();
 	}
 	
 	@Override
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/CollisionTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/CollisionTest.java
new file mode 100644
index 0000000..f8f789b
--- /dev/null
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/CollisionTest.java
@@ -0,0 +1,137 @@
+/*******************************************************************************
+ * Copyright 2011 See AUTHORS file.
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/
+
+package com.badlogic.gdx.tests.bullet;
+
+import com.badlogic.gdx.Gdx;
+import com.badlogic.gdx.graphics.Color;
+import com.badlogic.gdx.physics.bullet.ContactResultCallback;
+import com.badlogic.gdx.physics.bullet.btCollisionObject;
+import com.badlogic.gdx.physics.bullet.btCollisionObjectWrapper;
+import com.badlogic.gdx.physics.bullet.btManifoldPoint;
+import com.badlogic.gdx.physics.bullet.btPersistentManifold;
+import com.badlogic.gdx.tests.bullet.CollisionWorldTest.TestContactResultCallback;
+import com.badlogic.gdx.utils.Array;
+
+/** @author Xoppa */
+public class CollisionTest extends ShootTest {
+	BulletEntity projectile;
+	Array<BulletEntity> hits = new Array<BulletEntity>();
+	Array<BulletEntity> contacts = new Array<BulletEntity>();
+	Array<Color> colors = new Array<Color>();
+	
+	public class TestContactResultCallback extends ContactResultCallback
+	{
+		@Override
+		public float addSingleResult (btManifoldPoint cp, btCollisionObjectWrapper colObj0Wrap, int partId0, int index0,
+			btCollisionObjectWrapper colObj1Wrap, int partId1, int index1) {
+			btCollisionObject other = colObj0Wrap.getM_collisionObject() == projectile.body ?
+					colObj1Wrap.getM_collisionObject() : colObj0Wrap.getM_collisionObject();
+			if (other != null && other.userData != null && other.userData instanceof BulletEntity) {
+				BulletEntity ent = (BulletEntity)other.userData;
+				if (ent != ground && !hits.contains(ent, true))
+					hits.add((BulletEntity)other.userData);
+			}
+			return 0f;
+		}
+	}
+	TestContactResultCallback contactCB;
+	
+	public void updateContactInfo() {
+		int n = world.dispatcher.getNumManifolds();
+		for (int i = 0; i < n; i++) {
+			btPersistentManifold manifold = world.dispatcher.getManifoldByIndexInternal(i);
+			btCollisionObject objA = manifold.getBody0();
+			btCollisionObject objB = manifold.getBody1();
+			if (objA != ground.body && objB != ground.body) {
+				if (objA.userData != null && objA.userData instanceof BulletEntity) {
+					BulletEntity ent = (BulletEntity)objA.userData; 
+					if (ent != projectile && !contacts.contains(ent, true) && !hits.contains(ent, true))
+						contacts.add(ent);
+				}
+				if (objB.userData != null && objB.userData instanceof BulletEntity) {
+					BulletEntity ent = (BulletEntity)objB.userData;
+					if (ent != projectile && !contacts.contains(ent, true) && !hits.contains(ent, true))
+						contacts.add(ent);
+				}
+			}
+		}
+	}
+
+	@Override
+	public void create () {
+		super.create();
+		
+		contactCB = new TestContactResultCallback();
+	}
+	
+	@Override
+	public void render () {
+		process();
+	}
+	
+	public void process() {
+		Color color = null;
+		update();
+		hits.clear();
+		contacts.clear();
+		colors.clear();
+		
+		// Note that this might miss collisions, use InternalTickCallback to check for collision on every tick.
+		// See InternalTickTest on how to implement it.
+		
+		// Check what the projectile hits
+		if (projectile != null) {
+			color = projectile.color;
+			projectile.color = Color.RED;
+			world.collisionWorld.contactTest(projectile.body, contactCB);
+		}
+		// Check for other collisions
+		updateContactInfo();
+		
+		if (hits.size > 0) {
+			for (int i = 0; i < hits.size; i++) {
+				colors.add(hits.get(i).color);
+				hits.get(i).color = Color.RED;
+			}
+		}
+		if (contacts.size > 0) {
+			for (int i = 0; i < contacts.size; i++) {
+				colors.add(contacts.get(i).color);
+				contacts.get(i).color = Color.BLUE;
+			}
+		}
+		render(false);
+		if (projectile != null)
+			projectile.color = color;
+		for (int i = 0; i < hits.size; i++)
+			hits.get(i).color = colors.get(i);
+		for (int i = 0; i < contacts.size; i++)
+			contacts.get(i).color = colors.get(hits.size+i);
+	}
+	
+	@Override
+	public boolean tap (float x, float y, int count, int button) {
+		projectile = shoot(x, y);
+		return true;
+	}
+	
+	@Override
+	public void dispose () {
+		super.dispose();
+		projectile = null;
+	}
+}
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/ShootTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/ShootTest.java
index 8e3ec5d..d63bfc8 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/ShootTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/ShootTest.java
@@ -32,12 +32,14 @@ public class ShootTest extends BaseBulletTest {
 	final float BOXOFFSET_Y = 0.5f;
 	final float BOXOFFSET_Z = 0f;
 	
+	protected BulletEntity ground;
+	
 	@Override
 	public void create () {
 		super.create();
 
 		// Create the entities
-		world.add("ground", 0f, 0f, 0f)
+		(ground = world.add("ground", 0f, 0f, 0f))
 			.color.set(0.25f + 0.5f * (float)Math.random(), 0.25f + 0.5f * (float)Math.random(), 0.25f + 0.5f * (float)Math.random(), 1f);
 
 		for (int x = 0; x < BOXCOUNT_X; x++) {
@@ -55,4 +57,10 @@ public class ShootTest extends BaseBulletTest {
 		shoot(x, y);
 		return true;
 	}
+	
+	@Override
+	public void dispose () {
+		super.dispose();
+		ground = null;
+	}
 }
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/extensions/GLEEDTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/extensions/GLEEDTest.java
new file mode 100644
index 0000000..8aa0e6d
--- /dev/null
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/extensions/GLEEDTest.java
@@ -0,0 +1,94 @@
+/*******************************************************************************
+ * Copyright 2011 See AUTHORS file.
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/
+package com.badlogic.gdx.tests.extensions;
+
+import com.badlogic.gdx.Gdx;
+import com.badlogic.gdx.Input.Keys;
+import com.badlogic.gdx.assets.AssetManager;
+import com.badlogic.gdx.assets.loaders.resolvers.InternalFileHandleResolver;
+import com.badlogic.gdx.gleed.Level;
+import com.badlogic.gdx.gleed.LevelLoader;
+import com.badlogic.gdx.gleed.LevelRenderer;
+import com.badlogic.gdx.graphics.GL10;
+import com.badlogic.gdx.graphics.OrthographicCamera;
+import com.badlogic.gdx.tests.utils.GdxTest;
+import com.badlogic.gdx.utils.Logger;
+
+public class GLEEDTest extends GdxTest {
+	
+	enum State {
+		Loading,
+		Running
+	}
+	
+	AssetManager manager;
+	OrthographicCamera camera;
+	LevelRenderer renderer;
+	State state = State.Loading;
+	
+	@Override
+	public boolean needsGL20() {
+		return true;
+	}
+	
+	@Override
+	public void create() {
+		super.create();
+		manager = new AssetManager();
+		camera = new OrthographicCamera(640, 480);
+		camera.setToOrtho(false, 640, 480);
+		camera.zoom = 2.0f;
+		LevelLoader.setLoggingLevel(Logger.INFO);
+		manager.setLoader(Level.class, new LevelLoader(new InternalFileHandleResolver()));
+		manager.load("data/gleedtest.xml", Level.class);
+	}
+	
+	@Override
+	public void render() {
+		Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
+		
+		if (state == State.Loading && manager.update()) {
+			state = State.Running;
+			renderer = new LevelRenderer(manager.get("data/gleedtest.xml", Level.class), null, 1.0f);
+		}
+		
+		if (state == State.Running) {
+			camera.update();
+			renderer.render(camera);
+			
+			if (Gdx.input.isKeyPressed(Keys.UP)) {
+				camera.position.y += 5.0f;
+			}
+			else if (Gdx.input.isKeyPressed(Keys.DOWN)) {
+				camera.position.y -= 5.0f;
+			}
+			
+			if (Gdx.input.isKeyPressed(Keys.RIGHT)) {
+				camera.position.x += 5.0f;
+			}
+			else if (Gdx.input.isKeyPressed(Keys.LEFT)) {
+				camera.position.x -= 5.0f;
+			}
+			
+			if (Gdx.input.isKeyPressed(Keys.A)) {
+				camera.zoom += 0.05f;
+			}
+			else if (Gdx.input.isKeyPressed(Keys.S)) {
+				camera.zoom -= 0.05f;
+			}
+		}
+	}
+}
\ No newline at end of file
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/utils/GdxTests.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/utils/GdxTests.java
index 53bb141..d3dcb39 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/utils/GdxTests.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/utils/GdxTests.java
@@ -34,8 +34,8 @@ import java.util.Collections;
 import java.util.List;
 
 import com.badlogic.gdx.tests.*;
-import com.badlogic.gdx.tests.bench.TiledMapBench;
 import com.badlogic.gdx.tests.examples.MoveSpriteExample;
+import com.badlogic.gdx.tests.extensions.GLEEDTest;
 import com.badlogic.gdx.tests.gles2.HelloTriangle;
 import com.badlogic.gdx.tests.gles2.SimpleVertexShader;
 import com.badlogic.gdx.tests.net.NetAPITest;
@@ -62,12 +62,12 @@ public class GdxTests {
 		OrthoCamBorderTest.class, ParallaxTest.class, ParticleEmitterTest.class, PickingTest.class, PixelsPerInchTest.class,
 		PixmapBlendingTest.class, PixmapTest.class, PixmapPackerTest.class, PolygonRegionTest.class, PolygonSpriteTest.class, PreferencesTest.class,
 		ProjectiveTextureTest.class, Pong.class, ProjectTest.class, RemoteTest.class, RotationTest.class, DragAndDropTest.class,
-		ShaderMultitextureTest.class, ShadowMappingTest.class, SplineTest.class, SimpleAnimationTest.class, SimpleDecalTest.class,
+		ShaderMultitextureTest.class, ShadowMappingTest.class, PathTest.class, SimpleAnimationTest.class, SimpleDecalTest.class,
 		SimpleStageCullingTest.class, SoundTest.class, SpriteCacheTest.class, SpriteCacheOffsetTest.class, LetterBoxTest.class,
 		SpriteBatchRotationTest.class, SpriteBatchShaderTest.class, SpriteBatchTest.class, SpritePerformanceTest.class,
 		SpritePerformanceTest2.class, StagePerformanceTest.class, StageTest.class, TerrainTest.class, TextureDataTest.class,
 		TextureDownloadTest.class, TextureFormatTest.class, TextureAtlasTest.class, TextInputDialogTest.class,
-		TextureRenderTest.class, TileTest.class, UITest.class, VBOVATest.class, VertexArrayTest.class,
+		TextureRenderTest.class, TiledMapTest.class, TileTest.class, UITest.class, VBOVATest.class, VertexArrayTest.class,
 		VertexBufferObjectTest.class, VertexArrayClassTest.class, VertexBufferObjectClassTest.class, LetterBoxTest2.class,
 		VertexBufferObjectShaderTest.class, VibratorTest.class, WaterRipples.class, HelloTriangle.class,
 		SimpleVertexShader.class, ShapeRendererTest.class, MoveSpriteExample.class,
@@ -75,7 +75,7 @@ public class GdxTests {
 		// InternationalFontsTest.class, VorbisTest.class
 		TextButtonTest.class, TextButtonTestGL2.class, TextureBindTest.class, SortedSpriteTest.class,
 		ExternalMusicTest.class, SoftKeyboardTest.class, DirtyRenderingTest.class, YDownTest.class,
-		ScreenCaptureTest.class, BitmapFontTest.class, LabelScaleTest.class, GleedTest.class, GamepadTest.class, NetAPITest.class, TideMapAssetManagerTest.class, TideMapDirectLoaderTest.class, TiledMapAssetManagerTest.class, TiledMapBench.class,
+		ScreenCaptureTest.class, BitmapFontTest.class, LabelScaleTest.class, GLEEDTest.class, GamepadTest.class, NetAPITest.class,
 		RunnablePostTest.class, Vector2dTest.class));
 	
 	public static List<String> getNames () {
