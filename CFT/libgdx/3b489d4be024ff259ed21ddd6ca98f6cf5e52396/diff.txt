diff --git a/.gitignore b/.gitignore
index 77b03f3..a163f5d 100644
--- a/.gitignore
+++ b/.gitignore
@@ -2,40 +2,212 @@
 *~
 .*.swp
 .DS_STORE
+*.mdb
+# per project ignores, it's cumbersome, but reduces the risk of missing something
 
-bin/
-target/
-obj/
-.gwt/
-gwt-unitCache/
-war/
-gen/
-armeabi/
-armeabi-v7a/
-linux32/
-linux64/
-windows32/
-windows64/
-macosx32/
-ios32/
-Debug/
-Release/
-x64/
-ipch/
-/dist
+# target directories:
+/backends/gdx-backend-android/target/
+/backends/gdx-backends-gwt/target/
+/extensions/gdx-audio/target/
+/extensions/gdx-freetype/target/
+/extensions/gdx-image/target/
+/extensions/gdx-tiled-preprocessor/target/
+/extensions/gdx-tools/target/
+/extensions/gdx-bullet/target/
 
-*.a
-*.dll
-*.dll.mdb
-*.userprefs
-*.sdf
+/backends/gdx-backend-android/bin
+/backends/gdx-backend-iosmonotouch/bin
+/backends/gdx-backend-iosmonotouch/libs/gdx-backend-ios.*
+/backends/gdx-backend-iosmonotouch/libs/gdx.*
+/backends/gdx-backend-iosmonotouch/libs/libgdx.a
+/backends/gdx-backend-iosmonotouch/mono/mono.userprefs
+/backends/gdx-backend-iosmonotouch/mono/mono/bin
+/backends/gdx-backend-iosmonotouch/mono/mono/obj
+/backends/gdx-backend-iosmonotouch/natives/build
+/backends/gdx-backend-iosmonotouch/target/
 
-libgdx-*.zip
+/backends/gdx-backend-jogl/bin
+
+/backends/gdx-backend-lwjgl/bin
+/backends/gdx-backend-lwjgl/target
+
+/backends/gdx-backends-gwt/.gwt
+/backends/gdx-backends-gwt/gwt-unitCache
+/backends/gdx-backends-gwt/war
+
+/backends/gdx-openal/bin
+/backends/gdx-openal/target
+
+/demos/cuboc/cuboc-android/bin
+/demos/cuboc/cuboc-android/gen
+/demos/cuboc/cuboc-html/.gwt
+/demos/cuboc/cuboc-html/gwt-unitCache
+/demos/cuboc/cuboc-html/war
+/demos/cuboc/cuboc/bin
+
+/demos/invaders/gdx-invaders-android/bin
+/demos/invaders/gdx-invaders-android/gen
+/demos/invaders/gdx-invaders-html5/.gwt
+/demos/invaders/gdx-invaders-html5/gwt-unitCache
+/demos/invaders/gdx-invaders-html5/war
+/demos/invaders/gdx-invaders/bin
+/demos/invaders/gdx-invaders-ios/gdx-invaders-ios/bin
+/demos/invaders/gdx-invaders-ios/gdx-invaders-ios/obj
+/demos/invaders/gdx-invaders-ios/gdx-invaders-ios/target
+/demos/invaders/gdx-invaders-ios/gdx-invaders-ios/invaders.dll
+
+/demos/metagun/metagun-android/bin
+/demos/metagun/metagun-android/gen
+/demos/metagun/metagun-desktop/bin
+
+/demos/superjumper/superjumper-android/bin
+/demos/superjumper/superjumper-android/gen
+/demos/superjumper/superjumper-html/.gwt
+/demos/superjumper/superjumper-html/gwt-unitCache
+/demos/superjumper/superjumper-html/war
+/demos/superjumper/superjumper/bin
+/demos/superjumper/superjumper-ios/superjumper-ios/bin
+/demos/superjumper/superjumper-ios/superjumper-ios/obj
+/demos/superjumper/superjumper-ios/superjumper-ios/target
+/demos/superjumper/superjumper-ios/superjumper-ios/superjumper.dll
+
+/demos/vector-pinball/gdx-vectorpinball-android/bin
+/demos/vector-pinball/gdx-vectorpinball-android/gen
+/demos/vector-pinball/gdx-vectorpinball-html5/.gwt
+/demos/vector-pinball/gdx-vectorpinball-html5/gwt-unitCache
+/demos/vector-pinball/gdx-vectorpinball-html5/war
+/demos/vector-pinball/gdx-vectorpinball/bin
+/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/bin
+/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/obj
+/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/target
+/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/vectorpinball.dll
+
+/demos/very-angry-robots/very-angry-robots-android/bin
+/demos/very-angry-robots/very-angry-robots-android/gen
+/demos/very-angry-robots/very-angry-robots/bin
+
+/demos/pax-britannica/pax-britannica-android/bin
+/demos/pax-britannica/pax-britannica-android/gen
+/demos/pax-britannica/pax-britannica-html/.gwt
+/demos/pax-britannica/pax-britannica-html/gwt-unitCache
+/demos/pax-britannica/pax-britannica-html/war
+/demos/pax-britannica/pax-britannica/bin
+/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch/bin
+/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch/obj
+/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch/target
+/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch/paxbritannica.dll
+
+/extensions/gdx-jnigen/target
+
+/extensions/gdx-audio/bin
+/extensions/gdx-audio/jni/target
+/extensions/gdx-audio/libs/armeabi
+/extensions/gdx-audio/libs/armeabi-v7a
+/extensions/gdx-audio/libs/linux32
+/extensions/gdx-audio/libs/linux64
+/extensions/gdx-audio/libs/windows32
+/extensions/gdx-audio/libs/windows64
+
+/extensions/gdx-bullet/bin
+/extensions/gdx-bullet/jni/target
+/extensions/gdx-bullet/obj/local
+/extensions/gdx-bullet/libs/armeabi
+/extensions/gdx-bullet/libs/armeabi-v7a
+/extensions/gdx-bullet/libs/linux32
+/extensions/gdx-bullet/libs/linux64
+/extensions/gdx-bullet/libs/windows32
+/extensions/gdx-bullet/libs/windows64
+/extensions/gdx-bullet/jni/vs/gdxBullet/gdxBullet.sdf
+/extensions/gdx-bullet/jni/vs/gdxBullet/x64
+/extensions/gdx-bullet/jni/vs/gdxBullet/Debug
+/extensions/gdx-bullet/jni/vs/gdxBullet/ipch
+/extensions/gdx-bullet/jni/vs/gdxBullet/gdxBullet/Debug
+/extensions/gdx-bullet/jni/vs/gdxBullet/gdxBullet/x64
+
+/extensions/gdx-freetype/bin
+/extensions/gdx-freetype/jni/target
+/extensions/gdx-freetype/libs/armeabi
+/extensions/gdx-freetype/libs/armeabi-v7a
+/extensions/gdx-freetype/libs/linux32
+/extensions/gdx-freetype/libs/linux64
+/extensions/gdx-freetype/libs/windows32
+/extensions/gdx-freetype/libs/windows64
+
+/extensions/gdx-image/bin
+/extensions/gdx-image/jni/target
+/extensions/gdx-image/libs/armeabi
+/extensions/gdx-image/libs/armeabi-v7a
+/extensions/gdx-image/libs/linux32
+/extensions/gdx-image/libs/linux64
+/extensions/gdx-image/libs/windows32
+/extensions/gdx-image/libs/windows64
+
+/extensions/gdx-jnigen/bin
 
-#core & extension libs/ folders that have no 3rd party dependencies in them
-/gdx/libs
-/extensions/gdx-audio/libs/
-/extensions/gdx-bullet/libs/
-/extensions/gdx-controllers/gdx-controllers-desktop/libs/
-/extensions/gdx-freetype/libs/
-/extensions/gdx-image/libs/
+/extensions/gdx-remote/bin
+/extensions/gdx-remote/gen
+
+/extensions/gdx-setup-ui/bin
+
+/extensions/gdx-tiled-preprocessor/bin
+
+/extensions/gdx-tokamak/bin
+/extensions/gdx-tokamak/libs/armeabi
+/extensions/gdx-tokamak/libs/armeabi-v7a
+/extensions/gdx-tokamak/libs/linux32
+/extensions/gdx-tokamak/libs/linux64
+/extensions/gdx-tokamak/libs/windows32
+/extensions/gdx-tokamak/libs/windows64
+
+/extensions/gdx-tools/bin
+
+/extensions/model-loaders/model-loaders-android/bin
+/extensions/model-loaders/model-loaders-android/gen
+/extensions/model-loaders/model-loaders/bin
+
+/extensions/gdx-controllers/gdx-controllers/bin
+/extensions/gdx-controllers/gdx-controllers/target
+/extensions/gdx-controllers/gdx-controllers-desktop/bin
+/extensions/gdx-controllers/gdx-controllers-desktop/target
+/extensions/gdx-controllers/gdx-controllers-desktop/jni/target
+/extensions/gdx-controllers/gdx-controllers-desktop/libs/windows32
+/extensions/gdx-controllers/gdx-controllers-desktop/libs/windows64
+/extensions/gdx-controllers/gdx-controllers-desktop/libs/linux32
+/extensions/gdx-controllers/gdx-controllers-desktop/libs/linux64
+/extensions/gdx-controllers/gdx-controllers-desktop/libs/macosx32
+/extensions/gdx-controllers/gdx-controllers-android/bin
+/extensions/gdx-controllers/gdx-controllers-android/target
+/extensions/gdx-controllers/gdx-controllers-gwt/bin
+/extensions/gdx-controllers/gdx-controllers-gwt/target
+
+/gdx/target
+/gdx/obj
+/gdx/bin
+/gdx/libs/armeabi
+/gdx/libs/armeabi-v7a
+/gdx/libs/linux32
+/gdx/libs/linux64
+/gdx/libs/windows32
+/gdx/libs/windows64
+
+/tests/gdx-tests-android/bin
+/tests/gdx-tests-android/gen
+
+/tests/gdx-tests-gwt/.gwt
+/tests/gdx-tests-gwt/gwt-unitCache
+/tests/gdx-tests-gwt/war
+
+/tests/gdx-tests-iosmonotouch/gdx-tests-iosmonotouch/bin
+/tests/gdx-tests-iosmonotouch/gdx-tests-iosmonotouch/target
+/tests/gdx-tests-iosmonotouch/gdx-tests-iosmonotouch/obj
+/tests/gdx-tests-iosmonotouch/gdx-tests-iosmonotouch/gdx-tests.dll
+
+/tests/gdx-tests-jogl/bin
+
+/tests/gdx-tests-lwjgl/bin
+
+/tests/gdx-tests/bin
+
+/dist
+
+libgdx-*.zip
diff --git a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidGraphicsLiveWallpaper.java b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidGraphicsLiveWallpaper.java
index 923bfe7..4c250c2 100755
--- a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidGraphicsLiveWallpaper.java
+++ b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidGraphicsLiveWallpaper.java
@@ -92,8 +92,7 @@ public final class AndroidGraphicsLiveWallpaper implements Graphics, Renderer {
 	protected float ppcX = 0;
 	protected float ppcY = 0;
 	protected float density = 1;
-	
-	private final AndroidApplicationConfiguration config;
+
 	private BufferFormat bufferFormat = new BufferFormat(5, 6, 5, 0, 16, 0, 0, false);
 	protected boolean isContinuous = true;
 
@@ -310,9 +309,8 @@ public final class AndroidGraphicsLiveWallpaper implements Graphics, Renderer {
 		return true;
 	}
 
-	public AndroidGraphicsLiveWallpaper (AndroidLiveWallpaper app, AndroidApplicationConfiguration config, ResolutionStrategy resolutionStrategy) {
-		this.config = config;
-		view = createGLSurfaceView(app, config.useGL20, resolutionStrategy);
+	public AndroidGraphicsLiveWallpaper (AndroidLiveWallpaper app, boolean useGL2IfAvailable, ResolutionStrategy resolutionStrategy) {
+		view = createGLSurfaceView(app, useGL2IfAvailable, resolutionStrategy);
 		this.app = app;
 
 	}
@@ -323,22 +321,12 @@ public final class AndroidGraphicsLiveWallpaper implements Graphics, Renderer {
 
 		if (useGL2 && checkGL20()) {
 			GLSurfaceView20LW view = new GLSurfaceView20LW(app.getEngine(), resolutionStrategy);
-			if (configChooser != null) 
-				view.setEGLConfigChooser(configChooser);
-			else
-				view.setEGLConfigChooser(config.r, config.g, config.b, config.a, config.depth, config.stencil);
+			if (configChooser != null) view.setEGLConfigChooser(configChooser);
 			view.setRenderer(this);
 			return view;
 		} else {
-			//GL1
-			config.useGL20 = false;
-			configChooser = getEglConfigChooser();
-
 			GLBaseSurfaceViewLW view = new DefaultGLSurfaceViewLW(app.getEngine(), resolutionStrategy);
-			if (configChooser != null) 
-				view.setEGLConfigChooser(configChooser);
-			else
-				view.setEGLConfigChooser(config.r, config.g, config.b, config.a, config.depth, config.stencil);
+			if (configChooser != null) view.setEGLConfigChooser(configChooser);
 
 			view.setRenderer(this);
 			return view;
@@ -346,9 +334,6 @@ public final class AndroidGraphicsLiveWallpaper implements Graphics, Renderer {
 	}
 
 	private EGLConfigChooser getEglConfigChooser () {
-	return new GdxEglConfigChooser(config.r, config.g, config.b, config.a, config.depth, config.stencil, config.numSamples,
-			config.useGL20);
-	/*
 		if (!Build.DEVICE.equalsIgnoreCase("GT-I7500"))
 			return null;
 		else
@@ -365,7 +350,7 @@ public final class AndroidGraphicsLiveWallpaper implements Graphics, Renderer {
 					egl.eglChooseConfig(display, attributes, configs, 1, result);
 					return configs[0];
 				}
-			};*/
+			};
 	}
 
 	private void updatePpi () {
diff --git a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidLiveWallpaper.java b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidLiveWallpaper.java
index 59a7606..08b0dcb 100755
--- a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidLiveWallpaper.java
+++ b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidLiveWallpaper.java
@@ -82,7 +82,7 @@ class AndroidLiveWallpaper implements Application {
 	}
 	
 	public void initialize(ApplicationListener listener, AndroidApplicationConfiguration config) {
-		graphics = new AndroidGraphicsLiveWallpaper(this, config, config.resolutionStrategy==null?new FillResolutionStrategy():config.resolutionStrategy);
+		graphics = new AndroidGraphicsLiveWallpaper(this, config.useGL20, config.resolutionStrategy==null?new FillResolutionStrategy():config.resolutionStrategy);
 		input = AndroidInputFactory.newAndroidInput(this, this.getService(), null, config);
 		audio = new AndroidAudio(this.getService(), config);
 		files = new AndroidFiles(this.getService().getAssets(), this.getService().getFilesDir().getAbsolutePath());
diff --git a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/surfaceview/GdxEglConfigChooser.java b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/surfaceview/GdxEglConfigChooser.java
index eebe66e..3b73c0b 100644
--- a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/surfaceview/GdxEglConfigChooser.java
+++ b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/surfaceview/GdxEglConfigChooser.java
@@ -88,7 +88,6 @@ public class GdxEglConfigChooser implements GLSurfaceView.EGLConfigChooser {
 	public EGLConfig chooseConfig (EGL10 egl, EGLDisplay display, EGLConfig[] configs) {
 		EGLConfig best = null;
 		EGLConfig bestAA = null;
-		EGLConfig safe = null; //default back to 565 when no exact match found
 
 		for (EGLConfig config : configs) {
 			int d = findConfigAttrib(egl, display, config, EGL10.EGL_DEPTH_SIZE, 0);
@@ -103,10 +102,6 @@ public class GdxEglConfigChooser implements GLSurfaceView.EGLConfigChooser {
 			int b = findConfigAttrib(egl, display, config, EGL10.EGL_BLUE_SIZE, 0);
 			int a = findConfigAttrib(egl, display, config, EGL10.EGL_ALPHA_SIZE, 0);
 
-			// Match RGB565 as a fallback
-			if (safe == null && r == 5 && g == 6 && b == 5 && a == 0) {
-				safe = config;
-			}
 			// if we have a match, we chose this as our non AA fallback if that one
 			// isn't set already.
 			if (best == null && r == mRedSize && g == mGreenSize && b == mBlueSize && a == mAlphaSize) {
@@ -146,10 +141,8 @@ public class GdxEglConfigChooser implements GLSurfaceView.EGLConfigChooser {
 
 		if (bestAA != null)
 			return bestAA;
-		else if (best!=null)
-			return best;
 		else
-			return safe;
+			return best;
 	}
 
 	private int findConfigAttrib (EGL10 egl, EGLDisplay display, EGLConfig config, int attribute, int defaultValue) {
diff --git a/backends/gdx-backend-iosmonotouch/.settings/org.eclipse.core.resources.prefs b/backends/gdx-backend-iosmonotouch/.settings/org.eclipse.core.resources.prefs
new file mode 100644
index 0000000..8f33249
--- /dev/null
+++ b/backends/gdx-backend-iosmonotouch/.settings/org.eclipse.core.resources.prefs
@@ -0,0 +1,3 @@
+#Sat Jun 09 00:54:49 CEST 2012
+eclipse.preferences.version=1
+encoding//natives/iosgles20.cpp=UTF-8
diff --git a/backends/gdx-backend-iosmonotouch/README b/backends/gdx-backend-iosmonotouch/README
new file mode 100644
index 0000000..0368444
--- /dev/null
+++ b/backends/gdx-backend-iosmonotouch/README
@@ -0,0 +1,39 @@
+== folders ==
+libs/ikvm-monotouch   ... contains the MonoTouch comaptible IVKM binaries
+libs/monotouch-jars   ... contains the jar files for the MonoTouch APIs
+          
+
+
+== IKVM ==
+The libs/ folder contains precompiled assemblies and executables for mono. These can be build
+by following the instructions at https://github.com/samskivert/ikvm-monotouch. The one's in
+SVN should be good enough for now.
+
+== How to develop for the backend ==
+After checking out the libgdx source, execute ant in gdx-backends-iosmonotouch/. This will
+generate libs/gdx.dll and libs/gdx-backend-ios.dll and libgdx.a necessary for the MonoTouch project in mono/.
+
+The development cycle should look like this from now on:
+
+1) Open Eclipse and import the gdx, gdx-jnigen and gdx-backends-iosmonotouch projects.
+2) Open MonoDevelop and open the solution in the gdx-backens-iosmonotouch/mono folder.
+3) Change your code in Eclipse
+4) Build and run in MonoDevelop. The mono project has a custom build step that invokes ant to build
+the backend and create an assembly.
+   
+== How should the process for users look like? ==
+Insead of another Eclipse project, we'll have a MonoTouch project. That will use an assembly generated
+from the core project and symlink to the android project's assets folder. All it does it fire up
+an IOSApplication, passing the ApplicationListener to it. We can add a custom build step in the Monotouch
+project that compiles the core projects Java files and creates a new Mono assembly. That should just work :)
+   
+== Native code ==
+Is contained in the XCode project in the natives folder. We only compile core at the moment.
+
+TODO:
+- add wrapper for GLES 1.x?  (we have 2.0 working)
+- audio
+  - use AVMediaPlayerSomethingSomething for Music
+  - use OpenAL for Sound
+  - maybe expose all of OpenAL similar to GL?
+- figure out retina stuff, wow, this is really horrible, to much magic
diff --git a/backends/gdx-backend-iosmonotouch/build-natives.sh b/backends/gdx-backend-iosmonotouch/build-natives.sh
new file mode 100755
index 0000000..02299b2
--- /dev/null
+++ b/backends/gdx-backend-iosmonotouch/build-natives.sh
@@ -0,0 +1,10 @@
+rm lib*.a
+xcodebuild -project natives.xcodeproj -target natives -sdk iphonesimulator -configuration Release clean build
+cp build/Release-iphonesimulator/libnatives.a libnatives-i386.a
+xcodebuild -project natives.xcodeproj -target natives -sdk iphoneos -arch armv7 -configuration Release clean build
+cp build/Release-iphoneos/libnatives.a libnatives-arm7.a
+lipo -create -output libnatives.a libnatives-i386.a libnatives-arm7.a
+cp libnatives.a ../libs/libgdx.a
+cp libnatives.a ../mono/mono/libgdx.a
+cp ../libs/libikvm-natives.a ../mono/mono/
+rm libnatives*
diff --git a/backends/gdx-backend-iosmonotouch/build.xml b/backends/gdx-backend-iosmonotouch/build.xml
new file mode 100644
index 0000000..69b0f67
--- /dev/null
+++ b/backends/gdx-backend-iosmonotouch/build.xml
@@ -0,0 +1,49 @@
+<project name="gdx" default="compile" basedir="">
+	<description>Compiles the gdx core and gdx ios backend Java classes and creates a dlls via ikvm. The resulting assemblies are placed in libs/.</description>
+	<property environment="env" />
+		
+	<target name="compile-core">
+		<delete dir="target/core"/>
+		<delete file="libs/gdx.dll"/>
+		<delete file="libs/libgdx.a"/>
+		<mkdir dir="target/core" />
+		<javac sourcepath="" debug="on" srcdir="../../gdx/src" destdir="target/core" >
+			<include name="**/*.java"/>
+			<exclude name="**/*Build.java"/>
+			<exclude name="**/Remote*.java"/>
+			<exclude name="**/Desktop*.java"/>
+		</javac>
+		<ant antfile="convert.xml" dir=".">
+			<property name="IN" value="-srcpath:../../gdx/src -recurse:target/core/*.class"/>
+			<property name="OUT" value="libs/gdx.dll"/>
+		</ant>
+		<exec executable="sh" dir="natives">
+			<arg value="../build-natives.sh"/>
+		</exec>
+	</target>
+	
+	<target name="compile-backend">
+		<delete dir="target/backend"/>
+		<mkdir dir="target/backend" />
+		<javac sourcepath="" debug="on" srcdir="src" destdir="target/backend" >
+			<include name="**/*.java"/>		
+			<classpath>
+			<fileset dir="libs/monotouch-jars">
+				<include name="**/*.jar"/>
+			</fileset>
+			<fileset dir="libs/objectal">
+				<include name="**/*.jar"/>
+			</fileset>
+			<pathelement path="target/core"/>
+			</classpath>
+		</javac>
+		<jar destfile="libs/gdx-backend-ios.jar" basedir="target/backend" />
+		<ant antfile="convert.xml" dir=".">
+			<property name="IN" value="-srcpath:src -r:libs/gdx.dll -recurse:target/backend/*.class"/>
+			<property name="OUT" value="libs/gdx-backend-ios.dll"/>
+		</ant>
+	</target>
+	
+	<target name="compile" depends="compile-core, compile-backend">
+	</target>
+</project>
diff --git a/backends/gdx-backend-iosmonotouch/convert.xml b/backends/gdx-backend-iosmonotouch/convert.xml
new file mode 100644
index 0000000..03ac521
--- /dev/null
+++ b/backends/gdx-backend-iosmonotouch/convert.xml
@@ -0,0 +1,38 @@
+<project name="gdx" default="convert" basedir=".">
+	<property environment="env"/>
+	<property name="IKVM_HOME" value="${env.IKVM_HOME}"/>
+	<property name="MONO_HOME" value="/Developer/MonoTouch/usr/lib/mono/2.1"/>
+	<property name="IN" value="-recurse:target/core/*.class"/>
+	<property name="OUT" value="gdx.dll"/>
+	<property name="SRC" value="src/"/>
+	<property name="CLASSPATH" value=""/>
+	<property name="EXCLUDE" value=""/>
+
+	<target name="compile">
+		<delete dir="target"/>
+		<mkdir dir="target"/>
+		<javac srcdir="${SRC}" destdir="target" classpath="${CLASSPATH}">
+			<include name="**/*.java"/>
+			<exclude name="${EXCLUDE}"/>
+		</javac>
+	</target>
+
+	<target name="convert">
+		<exec executable="mono">
+			<arg value="${IKVM_HOME}/bin/ikvmc.exe"/>
+			<arg value="-nostdlib"/>
+			<arg value="-target:library"/>
+			<arg value="-debug"/>
+			<arg value="-out:${OUT}"/>
+			<arg value="-r:libs/objectal/libObjectAL.dll"/>
+			<arg value="-r:${MONO_HOME}/mscorlib.dll"/>
+			<arg value="-r:${MONO_HOME}/System.dll"/>
+			<arg value="-r:${MONO_HOME}/System.Core.dll"/>
+			<arg value="-r:${MONO_HOME}/System.Data.dll"/>
+			<arg value="-r:${MONO_HOME}/OpenTK-1.0.dll"/>
+			<arg value="-r:${MONO_HOME}/monotouch.dll"/>
+			<arg value="-r:${MONO_HOME}/Mono.Data.Sqlite.dll"/>
+			<arg line="${IN}"/>
+		</exec>
+	</target>
+</project>
diff --git a/backends/gdx-backend-iosmonotouch/mono/mono.sln b/backends/gdx-backend-iosmonotouch/mono/mono.sln
new file mode 100644
index 0000000..5bc1cec
--- /dev/null
+++ b/backends/gdx-backend-iosmonotouch/mono/mono.sln
@@ -0,0 +1,32 @@
+﻿
+Microsoft Visual Studio Solution File, Format Version 11.00
+# Visual Studio 2010
+Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "mono", "mono\mono.csproj", "{267FB81A-5032-4628-BB02-6434829331C3}"
+EndProject
+Global
+	GlobalSection(SolutionConfigurationPlatforms) = preSolution
+		Debug|iPhoneSimulator = Debug|iPhoneSimulator
+		Release|iPhoneSimulator = Release|iPhoneSimulator
+		Debug|iPhone = Debug|iPhone
+		Release|iPhone = Release|iPhone
+		Ad-Hoc|iPhone = Ad-Hoc|iPhone
+		AppStore|iPhone = AppStore|iPhone
+	EndGlobalSection
+	GlobalSection(ProjectConfigurationPlatforms) = postSolution
+		{267FB81A-5032-4628-BB02-6434829331C3}.Ad-Hoc|iPhone.ActiveCfg = Ad-Hoc|iPhone
+		{267FB81A-5032-4628-BB02-6434829331C3}.Ad-Hoc|iPhone.Build.0 = Ad-Hoc|iPhone
+		{267FB81A-5032-4628-BB02-6434829331C3}.AppStore|iPhone.ActiveCfg = AppStore|iPhone
+		{267FB81A-5032-4628-BB02-6434829331C3}.AppStore|iPhone.Build.0 = AppStore|iPhone
+		{267FB81A-5032-4628-BB02-6434829331C3}.Debug|iPhone.ActiveCfg = Debug|iPhone
+		{267FB81A-5032-4628-BB02-6434829331C3}.Debug|iPhone.Build.0 = Debug|iPhone
+		{267FB81A-5032-4628-BB02-6434829331C3}.Debug|iPhoneSimulator.ActiveCfg = Debug|iPhoneSimulator
+		{267FB81A-5032-4628-BB02-6434829331C3}.Debug|iPhoneSimulator.Build.0 = Debug|iPhoneSimulator
+		{267FB81A-5032-4628-BB02-6434829331C3}.Release|iPhone.ActiveCfg = Release|iPhone
+		{267FB81A-5032-4628-BB02-6434829331C3}.Release|iPhone.Build.0 = Release|iPhone
+		{267FB81A-5032-4628-BB02-6434829331C3}.Release|iPhoneSimulator.ActiveCfg = Release|iPhoneSimulator
+		{267FB81A-5032-4628-BB02-6434829331C3}.Release|iPhoneSimulator.Build.0 = Release|iPhoneSimulator
+	EndGlobalSection
+	GlobalSection(MonoDevelopProperties) = preSolution
+		StartupItem = mono\mono.csproj
+	EndGlobalSection
+EndGlobal
diff --git a/backends/gdx-backend-iosmonotouch/mono/mono/Info.plist b/backends/gdx-backend-iosmonotouch/mono/mono/Info.plist
new file mode 100644
index 0000000..ca9cb62
--- /dev/null
+++ b/backends/gdx-backend-iosmonotouch/mono/mono/Info.plist
@@ -0,0 +1,19 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+	<key>MinimumOSVersion</key>
+	<string>3.2</string>
+	<key>UIDeviceFamily</key>
+	<array>
+		<integer>1</integer>
+		<integer>2</integer>
+	</array>
+	<key>UIStatusBarHidden</key>
+	<true/>
+	<key>UISupportedInterfaceOrientations</key>
+	<array/>
+	<key>UISupportedInterfaceOrientations~ipad</key>
+	<array/>
+</dict>
+</plist>
diff --git a/backends/gdx-backend-iosmonotouch/mono/mono/Main.cs b/backends/gdx-backend-iosmonotouch/mono/mono/Main.cs
new file mode 100644
index 0000000..f24eeba
--- /dev/null
+++ b/backends/gdx-backend-iosmonotouch/mono/mono/Main.cs
@@ -0,0 +1,77 @@
+using System;
+using System.Collections.Generic;
+using System.Linq;
+
+using MonoTouch.Foundation;
+using MonoTouch.UIKit;
+using com.badlogic.gdx;
+using com.badlogic.gdx.math;
+using com.badlogic.gdx.graphics;
+using com.badlogic.gdx.graphics.g2d;
+using com.badlogic.gdx.graphics.glutils;
+using java.io;
+using java.nio;
+using System.IO;
+using com.badlogic.gdx.backends.ios;
+using com.badlogic.gdx.physics.box2d;
+
+namespace mono
+{
+	class MyInputAdapter: InputAdapter {
+		public override bool touchUp (int x, int y, int pointer, int button) {
+			Gdx.app.log ("Touch", "touch up " + x + ", " + y + ", " + pointer);
+			return true;
+		}
+
+		public override bool touchDown (int x, int y, int pointer, int button) {
+			Gdx.app.log ("Touch", "touch down " + x + ", " + y + ", " + pointer);
+			return true;
+		}
+
+		public override bool touchDragged (int x, int y, int pointer) {
+			Gdx.app.log ("Touch", "touch dragged " + x + ", " + y + ", " + pointer);
+			return true;
+		}
+	}
+
+	public class TestListener: com.badlogic.gdx.ApplicationListener {
+		public void create () {
+			Gdx.input.setInputProcessor(new MyInputAdapter());
+			World world = new World(new Vector2(0, -10), true);
+		}
+	
+		public void render () {
+			if(Gdx.input.justTouched()) {
+				Gdx.app.log ("Touch", "just touched");
+			}
+
+		}
+		
+		public void dispose () {
+		}
+		
+		public void resume() {
+		}
+		
+		public void pause() {
+		}
+		
+		public void resize(int width, int height) {
+		}
+	}
+	
+	
+	public class Application
+	{
+		[Register ("AppDelegate")]
+		public class IOSStarter : IOSApplication {
+			public IOSStarter() : base(new TestListener(), new IOSApplicationConfiguration()) {
+			}
+		}
+		
+		static void Main (string[] args)
+		{
+			UIApplication.Main (args, null, "AppDelegate");
+		}
+	}
+}
\ No newline at end of file
diff --git a/backends/gdx-backend-iosmonotouch/mono/mono/data/test.txt b/backends/gdx-backend-iosmonotouch/mono/mono/data/test.txt
new file mode 100644
index 0000000..ffe85a7
--- /dev/null
+++ b/backends/gdx-backend-iosmonotouch/mono/mono/data/test.txt
@@ -0,0 +1,2 @@
+This is a test
+hurray i guess
\ No newline at end of file
diff --git a/backends/gdx-backend-iosmonotouch/mono/mono/libgdx.a b/backends/gdx-backend-iosmonotouch/mono/mono/libgdx.a
new file mode 100644
index 0000000..12f6e6c
Binary files /dev/null and b/backends/gdx-backend-iosmonotouch/mono/mono/libgdx.a differ
diff --git a/backends/gdx-backend-iosmonotouch/mono/mono/libikvm-natives.a b/backends/gdx-backend-iosmonotouch/mono/mono/libikvm-natives.a
new file mode 100644
index 0000000..29296a2
Binary files /dev/null and b/backends/gdx-backend-iosmonotouch/mono/mono/libikvm-natives.a differ
diff --git a/backends/gdx-backend-iosmonotouch/mono/mono/mono.csproj b/backends/gdx-backend-iosmonotouch/mono/mono/mono.csproj
new file mode 100644
index 0000000..c4ebbe1
--- /dev/null
+++ b/backends/gdx-backend-iosmonotouch/mono/mono/mono.csproj
@@ -0,0 +1,521 @@
+<?xml version="1.0" encoding="utf-8"?>
+<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <PropertyGroup>
+    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
+    <Platform Condition=" '$(Platform)' == '' ">iPhoneSimulator</Platform>
+    <ProductVersion>10.0.0</ProductVersion>
+    <SchemaVersion>2.0</SchemaVersion>
+    <ProjectGuid>{267FB81A-5032-4628-BB02-6434829331C3}</ProjectGuid>
+    <ProjectTypeGuids>{6BC8ED88-2882-458C-8E55-DFD12B67127B};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
+    <OutputType>Exe</OutputType>
+    <RootNamespace>mono</RootNamespace>
+    <AssemblyName>mono</AssemblyName>
+  </PropertyGroup>
+  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|iPhoneSimulator' ">
+    <DebugSymbols>True</DebugSymbols>
+    <DebugType>full</DebugType>
+    <Optimize>False</Optimize>
+    <OutputPath>bin\iPhoneSimulator\Debug</OutputPath>
+    <DefineConstants>DEBUG;</DefineConstants>
+    <ErrorReport>prompt</ErrorReport>
+    <WarningLevel>4</WarningLevel>
+    <ConsolePause>False</ConsolePause>
+    <MtouchDebug>True</MtouchDebug>
+    <MtouchProfiling>True</MtouchProfiling>
+    <MtouchLink>None</MtouchLink>
+    <CustomCommands>
+      <CustomCommands>
+        <Command type="BeforeBuild" command="ant -f build.xml compile-backend" workingdir="../.." />
+      </CustomCommands>
+    </CustomCommands>
+    <MtouchExtraArgs>-nosymbolstrip -nostrip -cxx -gcc_flags "-L${ProjectDir} -likvm-natives -lgdx -force_load ${ProjectDir}/libgdx.a -force_load ${ProjectDir}/libikvm-natives.a"</MtouchExtraArgs>
+    <MtouchI18n>west</MtouchI18n>
+  </PropertyGroup>
+  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|iPhoneSimulator' ">
+    <DebugType>none</DebugType>
+    <Optimize>True</Optimize>
+    <OutputPath>bin\iPhoneSimulator\Release</OutputPath>
+    <ErrorReport>prompt</ErrorReport>
+    <WarningLevel>4</WarningLevel>
+    <ConsolePause>False</ConsolePause>
+    <MtouchLink>None</MtouchLink>
+    <CustomCommands>
+      <CustomCommands>
+        <Command type="BeforeBuild" command="ant -f build.xml compile-backend" workingdir="../.." />
+      </CustomCommands>
+    </CustomCommands>
+    <MtouchI18n>west</MtouchI18n>
+    <MtouchExtraArgs>-nosymbolstrip -nostrip -cxx -gcc_flags "-L${ProjectDir} -likvm-natives -lgdx -force_load ${ProjectDir}/libgdx.a -force_load ${ProjectDir}/libikvm-natives.a"</MtouchExtraArgs>
+  </PropertyGroup>
+  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|iPhone' ">
+    <DebugSymbols>True</DebugSymbols>
+    <DebugType>full</DebugType>
+    <Optimize>False</Optimize>
+    <OutputPath>bin\iPhone\Debug</OutputPath>
+    <DefineConstants>DEBUG;</DefineConstants>
+    <ErrorReport>prompt</ErrorReport>
+    <WarningLevel>4</WarningLevel>
+    <ConsolePause>False</ConsolePause>
+    <CodesignKey>iPhone Developer</CodesignKey>
+    <MtouchDebug>True</MtouchDebug>
+    <MtouchProfiling>True</MtouchProfiling>
+    <CustomCommands>
+      <CustomCommands>
+        <Command type="BeforeBuild" command="ant -f build.xml compile-backend" workingdir="../../" />
+      </CustomCommands>
+    </CustomCommands>
+    <IpaPackageName />
+    <MtouchI18n />
+  </PropertyGroup>
+  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|iPhone' ">
+    <DebugType>none</DebugType>
+    <Optimize>True</Optimize>
+    <OutputPath>bin\iPhone\Release</OutputPath>
+    <ErrorReport>prompt</ErrorReport>
+    <WarningLevel>4</WarningLevel>
+    <ConsolePause>False</ConsolePause>
+    <CodesignKey>iPhone Developer</CodesignKey>
+    <MtouchI18n />
+  </PropertyGroup>
+  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Ad-Hoc|iPhone' ">
+    <DebugType>none</DebugType>
+    <Optimize>True</Optimize>
+    <OutputPath>bin\iPhone\Ad-Hoc</OutputPath>
+    <ErrorReport>prompt</ErrorReport>
+    <WarningLevel>4</WarningLevel>
+    <ConsolePause>False</ConsolePause>
+    <BuildIpa>True</BuildIpa>
+    <CodesignKey>iPhone Distribution</CodesignKey>
+    <MtouchI18n />
+  </PropertyGroup>
+  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'AppStore|iPhone' ">
+    <DebugType>none</DebugType>
+    <Optimize>True</Optimize>
+    <OutputPath>bin\iPhone\AppStore</OutputPath>
+    <ErrorReport>prompt</ErrorReport>
+    <WarningLevel>4</WarningLevel>
+    <ConsolePause>False</ConsolePause>
+    <CodesignKey>iPhone Distribution</CodesignKey>
+  </PropertyGroup>
+  <ItemGroup>
+    <Reference Include="System" />
+    <Reference Include="System.Xml" />
+    <Reference Include="System.Core" />
+    <Reference Include="monotouch" />
+    <Reference Include="OpenTK" />
+    <Reference Include="gdx">
+      <HintPath>..\..\libs\gdx.dll</HintPath>
+    </Reference>
+    <Reference Include="gdx-backend-ios">
+      <HintPath>..\..\libs\gdx-backend-ios.dll</HintPath>
+    </Reference>
+    <Reference Include="ICSharpCode.SharpZipLib">
+      <HintPath>..\..\libs\ikvm\bin\ICSharpCode.SharpZipLib.dll</HintPath>
+    </Reference>
+    <Reference Include="IKVM.OpenJDK.Beans">
+      <HintPath>..\..\libs\ikvm\bin\IKVM.OpenJDK.Beans.dll</HintPath>
+    </Reference>
+    <Reference Include="IKVM.OpenJDK.Charsets">
+      <HintPath>..\..\libs\ikvm\bin\IKVM.OpenJDK.Charsets.dll</HintPath>
+    </Reference>
+    <Reference Include="IKVM.OpenJDK.Core">
+      <HintPath>..\..\libs\ikvm\bin\IKVM.OpenJDK.Core.dll</HintPath>
+    </Reference>
+    <Reference Include="IKVM.OpenJDK.Misc">
+      <HintPath>..\..\libs\ikvm\bin\IKVM.OpenJDK.Misc.dll</HintPath>
+    </Reference>
+    <Reference Include="IKVM.OpenJDK.Text">
+      <HintPath>..\..\libs\ikvm\bin\IKVM.OpenJDK.Text.dll</HintPath>
+    </Reference>
+    <Reference Include="IKVM.OpenJDK.Util">
+      <HintPath>..\..\libs\ikvm\bin\IKVM.OpenJDK.Util.dll</HintPath>
+    </Reference>
+    <Reference Include="IKVM.Reflection">
+      <HintPath>..\..\libs\ikvm\bin\IKVM.Reflection.dll</HintPath>
+    </Reference>
+    <Reference Include="IKVM.Runtime.JNI">
+      <HintPath>..\..\libs\ikvm\bin\IKVM.Runtime.JNI.dll</HintPath>
+    </Reference>
+    <Reference Include="IKVM.Runtime">
+      <HintPath>..\..\libs\ikvm\bin\IKVM.Runtime.dll</HintPath>
+    </Reference>
+  </ItemGroup>
+  <ItemGroup>
+    <None Include="Info.plist" />
+    <None Include="libgdx.a" />
+    <None Include="libikvm-natives.a" />
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\8.12.mp3">
+      <Link>data\8.12.mp3</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\DroidSansJapanese.ttf">
+      <Link>data\DroidSansJapanese.ttf</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\DroidSerif-Bold.ttf">
+      <Link>data\DroidSerif-Bold.ttf</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\DroidSerif-Italic.ttf">
+      <Link>data\DroidSerif-Italic.ttf</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\DroidSerif-Regular.ttf">
+      <Link>data\DroidSerif-Regular.ttf</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\arial-15.fnt">
+      <Link>data\arial-15.fnt</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\arial.ttf">
+      <Link>data\arial.ttf</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\bubblepop.ogg">
+      <Link>data\bubblepop.ogg</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\cloudconnected.ogg">
+      <Link>data\cloudconnected.ogg</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\cube.obj">
+      <Link>data\cube.obj</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\default.fnt">
+      <Link>data\default.fnt</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\engine-2.ogg">
+      <Link>data\engine-2.ogg</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\font.fnt">
+      <Link>data\font.fnt</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\gwttestparams.txt">
+      <Link>data\gwttestparams.txt</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\issue_pack">
+      <Link>data\issue_pack</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\jump.txt">
+      <Link>data\jump.txt</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\pack">
+      <Link>data\pack</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\scene.obj">
+      <Link>data\scene.obj</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\scene2.obj">
+      <Link>data\scene2.obj</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\sell_buy_item.wav">
+      <Link>data\sell_buy_item.wav</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\shotgun.mp3">
+      <Link>data\shotgun.mp3</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\shotgun.ogg">
+      <Link>data\shotgun.ogg</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\shotgun.wav">
+      <Link>data\shotgun.wav</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\sphere.obj">
+      <Link>data\sphere.obj</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\test.etc1">
+      <Link>data\test.etc1</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\test.p">
+      <Link>data\test.p</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\test2_notwork.wav">
+      <Link>data\test2_notwork.wav</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\testpack">
+      <Link>data\testpack</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\uiskin.json">
+      <Link>data\uiskin.json</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\verdana39.fnt">
+      <Link>data\verdana39.fnt</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\walk1.md5anim">
+      <Link>data\walk1.md5anim</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\zfat.md5mesh">
+      <Link>data\zfat.md5mesh</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\shaders\batch.frag">
+      <Link>data\shaders\batch.frag</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\shaders\batch.vert">
+      <Link>data\shaders\batch.vert</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\shaders\convolution.frag">
+      <Link>data\shaders\convolution.frag</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\shaders\default.frag">
+      <Link>data\shaders\default.frag</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\shaders\default.vert">
+      <Link>data\shaders\default.vert</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\shaders\depthtocolor.frag">
+      <Link>data\shaders\depthtocolor.frag</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\shaders\flat-frag.glsl">
+      <Link>data\shaders\flat-frag.glsl</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\shaders\flat-vert.glsl">
+      <Link>data\shaders\flat-vert.glsl</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\shaders\flattex-frag.glsl">
+      <Link>data\shaders\flattex-frag.glsl</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\shaders\flattex-vert.glsl">
+      <Link>data\shaders\flattex-vert.glsl</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\shaders\projtex-frag.glsl">
+      <Link>data\shaders\projtex-frag.glsl</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\shaders\projtex-vert.glsl">
+      <Link>data\shaders\projtex-vert.glsl</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\shaders\shader-fs.glsl">
+      <Link>data\shaders\shader-fs.glsl</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\shaders\shader-vs.glsl">
+      <Link>data\shaders\shader-vs.glsl</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\shaders\shadowgen-frag.glsl">
+      <Link>data\shaders\shadowgen-frag.glsl</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\shaders\shadowgen-vert.glsl">
+      <Link>data\shaders\shadowgen-vert.glsl</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\shaders\shadowmap-frag.glsl">
+      <Link>data\shaders\shadowmap-frag.glsl</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\shaders\shadowmap-vert.glsl">
+      <Link>data\shaders\shadowmap-vert.glsl</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\tiledmap\alignment test.tmx">
+      <Link>data\tiledmap\alignment test.tmx</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\tiledmap\margin spacing doctype test.tmx">
+      <Link>data\tiledmap\margin spacing doctype test.tmx</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\tiledmap\perspective walls packfile">
+      <Link>data\tiledmap\perspective walls packfile</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\tiledmap\perspective walls test packfile">
+      <Link>data\tiledmap\perspective walls test packfile</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\tiledmap\perspective walls.tmx">
+      <Link>data\tiledmap\perspective walls.tmx</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\tiledmap\tilemap csv.tmx">
+      <Link>data\tiledmap\tilemap csv.tmx</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\tiledmap\tilemap gzip.tmx">
+      <Link>data\tiledmap\tilemap gzip.tmx</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\tiledmap\tilemap uncompressed.tmx">
+      <Link>data\tiledmap\tilemap uncompressed.tmx</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\tiledmap\tilemap xml.tmx">
+      <Link>data\tiledmap\tilemap xml.tmx</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\tiledmap\tilemap zlib.tmx">
+      <Link>data\tiledmap\tilemap zlib.tmx</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\tiledmap\tileset packfile">
+      <Link>data\tiledmap\tileset packfile</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\tiledmap\tileset2 packfile">
+      <Link>data\tiledmap\tileset2 packfile</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\tiledmap\tileset3 packfile">
+      <Link>data\tiledmap\tileset3 packfile</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\tiledmap\tileset4 packfile">
+      <Link>data\tiledmap\tileset4 packfile</Link>
+    </None>
+    <None Include="..\..\..\..\tests\gdx-tests-android\assets\data\tiledmap\tmw-desert-spacing packfile">
+      <Link>data\tiledmap\tmw-desert-spacing packfile</Link>
+    </None>
+  </ItemGroup>
+  <ItemGroup>
+    <Compile Include="Main.cs" />
+  </ItemGroup>
+  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
+  <ItemGroup>
+    <Folder Include="data\" />
+  </ItemGroup>
+  <ItemGroup>
+    <Content Include="data\test.txt" />
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\badlogic.jpg">
+      <Link>data\badlogic.jpg</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\43kJgl.jpg">
+      <Link>data\43kJgl.jpg</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\Textures1.png">
+      <Link>data\Textures1.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\alpha.png">
+      <Link>data\alpha.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\animation.png">
+      <Link>data\animation.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\arial-15_00.png">
+      <Link>data\arial-15_00.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\badlogicsmall.jpg">
+      <Link>data\badlogicsmall.jpg</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\black_marked_0.png">
+      <Link>data\black_marked_0.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\bobargb8888-32x32.png">
+      <Link>data\bobargb8888-32x32.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\bobrgb888-32x32.png">
+      <Link>data\bobrgb888-32x32.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\border_corner_a.png">
+      <Link>data\border_corner_a.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\debug.png">
+      <Link>data\debug.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\default.png">
+      <Link>data\default.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\default_00.png">
+      <Link>data\default_00.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\egg.png">
+      <Link>data\egg.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\font.png">
+      <Link>data\font.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\group-debug.png">
+      <Link>data\group-debug.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\isotile.png">
+      <Link>data\isotile.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\jump.png">
+      <Link>data\jump.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\layers.png">
+      <Link>data\layers.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\pack1.png">
+      <Link>data\pack1.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\particle-cloud.png">
+      <Link>data\particle-cloud.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\particle-fire.png">
+      <Link>data\particle-fire.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\particle-star.png">
+      <Link>data\particle-star.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\particle.png">
+      <Link>data\particle.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\planet_earth.png">
+      <Link>data\planet_earth.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\planet_heavyclouds.jpg">
+      <Link>data\planet_heavyclouds.jpg</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\playback.png">
+      <Link>data\playback.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\ps-bobargb8888-32x32.png">
+      <Link>data\ps-bobargb8888-32x32.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\ps-bobrgb888-32x32.png">
+      <Link>data\ps-bobrgb888-32x32.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\resource1.jpg">
+      <Link>data\resource1.jpg</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\rgb.png">
+      <Link>data\rgb.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\shiptexture.png">
+      <Link>data\shiptexture.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\stone2.png">
+      <Link>data\stone2.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\stones.jpg">
+      <Link>data\stones.jpg</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\sys.png">
+      <Link>data\sys.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\t8890.png">
+      <Link>data\t8890.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\test.png">
+      <Link>data\test.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\test3.png">
+      <Link>data\test3.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\test4.png">
+      <Link>data\test4.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\testbar.png">
+      <Link>data\testbar.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\testdot.png">
+      <Link>data\testdot.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\tile.png">
+      <Link>data\tile.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\tiles.png">
+      <Link>data\tiles.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\ui.png">
+      <Link>data\ui.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\uiskin.png">
+      <Link>data\uiskin.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\verdana39.png">
+      <Link>data\verdana39.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\walkanim.png">
+      <Link>data\walkanim.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\wheel.png">
+      <Link>data\wheel.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\tiledmap\perspective walls test1.png">
+      <Link>data\tiledmap\perspective walls test1.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\tiledmap\perspective walls1.png">
+      <Link>data\tiledmap\perspective walls1.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\tiledmap\tileset1.png">
+      <Link>data\tiledmap\tileset1.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\tiledmap\tileset21.png">
+      <Link>data\tiledmap\tileset21.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\tiledmap\tileset31.png">
+      <Link>data\tiledmap\tileset31.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\tiledmap\tileset41.png">
+      <Link>data\tiledmap\tileset41.png</Link>
+    </Content>
+    <Content Include="..\..\..\..\tests\gdx-tests-android\assets\data\tiledmap\tmw-desert-spacing1.png">
+      <Link>data\tiledmap\tmw-desert-spacing1.png</Link>
+    </Content>
+  </ItemGroup>
+</Project>
diff --git a/backends/gdx-backend-iosmonotouch/natives/iosgles20.cpp b/backends/gdx-backend-iosmonotouch/natives/iosgles20.cpp
new file mode 100644
index 0000000..7aafe9e
--- /dev/null
+++ b/backends/gdx-backend-iosmonotouch/natives/iosgles20.cpp
@@ -0,0 +1,1765 @@
+#include <iosgles20.h>
+#include <OpenGLES/ES2/gl.h>
+#include <OpenGLES/ES2/glext.h>
+#include <stdio.h>
+
+static jclass bufferClass;
+static jclass byteBufferClass;
+static jclass charBufferClass;
+static jclass shortBufferClass;
+static jclass intBufferClass;
+static jclass longBufferClass;
+static jclass floatBufferClass;
+static jclass doubleBufferClass;
+static jclass OOMEClass;
+static jclass UOEClass;
+static jclass IAEClass;
+
+static jmethodID positionID;
+
+
+static void
+nativeClassInitBuffer(JNIEnv *_env)
+{
+    jclass bufferClassLocal = _env->FindClass("java/nio/Buffer");
+    bufferClass = (jclass) _env->NewGlobalRef(bufferClassLocal);
+
+    byteBufferClass = (jclass) _env->NewGlobalRef(_env->FindClass("java/nio/ByteBuffer"));
+    charBufferClass = (jclass) _env->NewGlobalRef(_env->FindClass("java/nio/CharBuffer"));
+    shortBufferClass = (jclass) _env->NewGlobalRef(_env->FindClass("java/nio/ShortBuffer"));
+    intBufferClass = (jclass) _env->NewGlobalRef(_env->FindClass("java/nio/IntBuffer"));
+    longBufferClass = (jclass) _env->NewGlobalRef(_env->FindClass("java/nio/LongBuffer"));
+    floatBufferClass = (jclass) _env->NewGlobalRef(_env->FindClass("java/nio/FloatBuffer"));
+    doubleBufferClass = (jclass) _env->NewGlobalRef(_env->FindClass("java/nio/DoubleBuffer"));
+
+    positionID = _env->GetMethodID(bufferClass, "position","()I");
+    if(positionID == 0) _env->ThrowNew(IAEClass, "Couldn't fetch position() method");
+}
+
+static void
+nativeClassInit(JNIEnv *_env)
+{
+    nativeClassInitBuffer(_env);
+
+    jclass IAEClassLocal =
+        _env->FindClass("java/lang/IllegalArgumentException");
+    jclass OOMEClassLocal =
+         _env->FindClass("java/lang/OutOfMemoryError");
+    jclass UOEClassLocal =
+         _env->FindClass("java/lang/UnsupportedOperationException");
+
+    IAEClass = (jclass) _env->NewGlobalRef(IAEClassLocal);
+    OOMEClass = (jclass) _env->NewGlobalRef(OOMEClassLocal);
+    UOEClass = (jclass) _env->NewGlobalRef(UOEClassLocal);
+}
+
+static jint getElementSizeShift(JNIEnv *_env, jobject buffer) {
+	/*if(_env->IsInstanceOf(buffer, byteBufferClass)) return 0;
+	if(_env->IsInstanceOf(buffer, floatBufferClass)) return 2;
+	if(_env->IsInstanceOf(buffer, shortBufferClass)) return 1;
+
+	if(_env->IsInstanceOf(buffer, charBufferClass)) return 1;
+	if(_env->IsInstanceOf(buffer, intBufferClass)) return 2;
+	if(_env->IsInstanceOf(buffer, longBufferClass)) return 3;
+	if(_env->IsInstanceOf(buffer, doubleBufferClass)) return 3;
+
+	_env->ThrowNew(IAEClass, "buffer type unkown! (Not a ByteBuffer, ShortBuffer, etc.)");*/
+	return 0;
+}
+
+inline jint getBufferPosition(JNIEnv *env, jobject buffer)
+{
+	jint ret = env->CallIntMethodA(buffer, positionID, 0);
+	return  ret;
+}
+
+static void *
+getDirectBufferPointer(JNIEnv *_env, jobject buffer) {
+    if (!buffer) {
+        return NULL;
+    }
+    void* buf = _env->GetDirectBufferAddress(buffer);
+    if (buf) {
+        jint position = getBufferPosition(_env, buffer);
+        jint elementSizeShift = getElementSizeShift(_env, buffer);
+        buf = ((char*) buf) + (position << elementSizeShift);
+    } else {
+        _env->ThrowNew(IAEClass, "Must use a native order direct Buffer");
+    }
+    return buf;
+}
+
+static const char* getString( JNIEnv *env, jstring string )
+{
+	return (const char*)env->GetStringUTFChars(string, NULL);
+}
+
+static void releaseString( JNIEnv *env, jstring string, const char* cString )
+{
+	env->ReleaseStringUTFChars(string, cString);
+}
+
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_init
+  (JNIEnv *env, jclass)
+{
+	nativeClassInit( env );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glActiveTexture
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glActiveTexture
+  (JNIEnv *, jobject, jint texture)
+{
+	glActiveTexture( texture );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glAttachShader
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glAttachShader
+  (JNIEnv *, jobject, jint program, jint shader)
+{
+	glAttachShader( program, shader );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glBindAttribLocation
+ * Signature: (IILjava/lang/String;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glBindAttribLocation
+  (JNIEnv *env, jobject, jint program, jint index, jstring name)
+{
+	const char* namePtr = getString( env, name );
+	glBindAttribLocation( program, index, namePtr );
+	releaseString( env, name, namePtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glBindBuffer
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glBindBuffer
+  (JNIEnv *env, jobject, jint target, jint buffer)
+{
+	glBindBuffer( target, buffer );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glBindFramebuffer
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glBindFramebuffer
+  (JNIEnv *env, jobject, jint target, jint framebuffer)
+{
+	glBindFramebuffer( target, framebuffer );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glBindRenderbuffer
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glBindRenderbuffer
+  (JNIEnv *env, jobject, jint target, jint renderbuffer)
+{
+	glBindRenderbuffer( target, renderbuffer );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glBindTexture
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glBindTexture
+  (JNIEnv *env, jobject, jint target, jint texture)
+{
+	glBindTexture( target, texture );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glBlendColor
+ * Signature: (FFFF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glBlendColor
+  (JNIEnv *env, jobject, jfloat red, jfloat green, jfloat blue, jfloat alpha)
+{
+	glBlendColor( red, green, blue, alpha );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glBlendEquation
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glBlendEquation
+  (JNIEnv *env, jobject, jint mode)
+{
+	glBlendEquation( mode );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glBlendEquationSeparate
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glBlendEquationSeparate
+  (JNIEnv *env, jobject, jint modeRGB, jint modeAlpha)
+{
+	glBlendEquationSeparate( modeRGB, modeAlpha );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glBlendFunc
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glBlendFunc
+  (JNIEnv *env, jobject, jint sfactor, jint dfactor)
+{
+	glBlendFunc( sfactor, dfactor );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glBlendFuncSeparate
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glBlendFuncSeparate
+  (JNIEnv *env, jobject, jint srcRGB, jint dstRGB, jint srcAlpha, jint dstAlpha)
+{
+	glBlendFuncSeparate( srcRGB, dstRGB, srcAlpha, dstAlpha);
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glBufferData
+ * Signature: (IILjava/nio/Buffer;I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glBufferData
+  (JNIEnv * env, jobject, jint target, jint size, jobject data, jint usage)
+{
+	void* dataPtr = getDirectBufferPointer( env, data );
+	glBufferData( target, size, dataPtr, usage );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glBufferSubData
+ * Signature: (IIILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glBufferSubData
+  (JNIEnv *env, jobject, jint target, jint offset, jint size, jobject data)
+{
+	void* dataPtr = getDirectBufferPointer( env, data );
+	glBufferSubData( target, offset, size, dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glCheckFramebufferStatus
+ * Signature: (I)I
+ */
+JNIEXPORT jint JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glCheckFramebufferStatus
+  (JNIEnv *env, jobject, jint target)
+{
+	return glCheckFramebufferStatus( target );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glClear
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glClear
+  (JNIEnv *env, jobject, jint mask)
+{
+	glClear( mask );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glClearColor
+ * Signature: (FFFF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glClearColor
+  (JNIEnv *env, jobject, jfloat red, jfloat green, jfloat blue, jfloat alpha)
+{
+	glClearColor( red, green, blue, alpha );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glClearDepthf
+ * Signature: (F)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glClearDepthf
+  (JNIEnv *env, jobject, jfloat depth)
+{
+	glClearDepthf( depth );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glClearStencil
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glClearStencil
+  (JNIEnv *env, jobject, jint s)
+{
+	glClearStencil( s );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glColorMask
+ * Signature: (ZZZZ)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glColorMask
+  (JNIEnv *env, jobject, jboolean red, jboolean green, jboolean blue, jboolean alpha)
+{
+	glColorMask( red, green, blue, alpha );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glCompileShader
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glCompileShader
+  (JNIEnv *env, jobject, jint shader)
+{
+	glCompileShader( shader );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glCompressedTexImage2D
+ * Signature: (IIIIIIILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glCompressedTexImage2D
+  (JNIEnv *env, jobject, jint target, jint level, jint internalFormat, jint width, jint height, jint border, jint imageSize, jobject data)
+{
+	void* dataPtr = getDirectBufferPointer( env, data );
+	glCompressedTexImage2D( target, level, internalFormat, width, height, border, imageSize, dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glCompressedTexSubImage2D
+ * Signature: (IIIIIIIILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glCompressedTexSubImage2D
+  (JNIEnv *env, jobject, jint target, jint level, jint xoffset, jint yoffset, jint width, jint height, jint format, jint imageSize, jobject data)
+{
+	void* dataPtr = getDirectBufferPointer( env, data );
+	glCompressedTexSubImage2D( target, level, xoffset, yoffset, width, height, format, imageSize, dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glCopyTexImage2D
+ * Signature: (IIIIIIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glCopyTexImage2D
+  (JNIEnv *env, jobject, jint target, jint level, jint  internalFormat, jint x, jint y, jint width, jint height, jint border)
+{
+	glCopyTexImage2D( target, level, internalFormat, x, y, width, height, border );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glCopyTexSubImage2D
+ * Signature: (IIIIIIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glCopyTexSubImage2D
+  (JNIEnv *env, jobject, jint target, jint level, jint xoffset, jint yoffset, jint x, jint y, jint width, jint height)
+{
+	glCopyTexSubImage2D( target, level, xoffset, yoffset, x, y, width, height );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glCreateProgram
+ * Signature: ()I
+ */
+JNIEXPORT jint JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glCreateProgram
+  (JNIEnv *env, jobject)
+{
+	return glCreateProgram( );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glCreateShader
+ * Signature: (I)I
+ */
+JNIEXPORT jint JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glCreateShader
+  (JNIEnv *env, jobject, jint type)
+{
+	return glCreateShader( type );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glCullFace
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glCullFace
+  (JNIEnv *env, jobject, jint mode)
+{
+	glCullFace( mode );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDeleteBuffers
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDeleteBuffers
+  (JNIEnv *env, jobject, jint n, jobject buffers)
+{
+	void* dataPtr = getDirectBufferPointer( env, buffers );
+	glDeleteBuffers( n, (GLuint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDeleteFramebuffers
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDeleteFramebuffers
+  (JNIEnv *env, jobject, jint n, jobject framebuffers)
+{
+	void* dataPtr = getDirectBufferPointer( env, framebuffers );
+	glDeleteFramebuffers( n, (GLuint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDeleteProgram
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDeleteProgram
+  (JNIEnv *env, jobject, jint program)
+{
+	glDeleteProgram( program );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDeleteRenderbuffers
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDeleteRenderbuffers
+  (JNIEnv *env, jobject, jint n, jobject renderbuffers)
+{
+	void* dataPtr = getDirectBufferPointer( env, renderbuffers );
+	glDeleteRenderbuffers( n, (GLuint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDeleteShader
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDeleteShader
+  (JNIEnv *env, jobject, jint shader)
+{
+	glDeleteShader( shader );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDeleteTextures
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDeleteTextures
+  (JNIEnv *env, jobject, jint n, jobject textures)
+{
+	void* dataPtr = getDirectBufferPointer( env, textures );
+	glDeleteTextures( n, (GLuint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDepthFunc
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDepthFunc
+  (JNIEnv *env, jobject, jint func)
+{
+	glDepthFunc( func );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDepthMask
+ * Signature: (Z)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDepthMask
+  (JNIEnv *env, jobject, jboolean flag)
+{
+	glDepthMask( flag );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDepthRangef
+ * Signature: (FF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDepthRangef
+  (JNIEnv *env, jobject, jfloat zNear, jfloat zFar)
+{
+	glDepthRangef( zNear, zFar );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDetachShader
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDetachShader
+  (JNIEnv *env, jobject, jint program, jint shader)
+{
+	glDetachShader( program, shader );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDisable
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDisable
+  (JNIEnv *env, jobject, jint cap)
+{
+	glDisable( cap );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDisableVertexAttribArray
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDisableVertexAttribArray
+  (JNIEnv *env, jobject, jint index)
+{
+	glDisableVertexAttribArray( index );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDrawArrays
+ * Signature: (III)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDrawArrays
+  (JNIEnv *env, jobject, jint mode, jint first, jint count)
+{
+	glDrawArrays( mode, first, count );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDrawElements
+ * Signature: (IIILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDrawElements__IIILjava_nio_Buffer_2
+(JNIEnv *env, jobject, jint mode, jint count, jint type, jobject indices)
+{
+	void* dataPtr = getDirectBufferPointer( env, indices );
+	//__android_log_print(ANDROID_LOG_INFO, "GL2", "drawelements");
+	glDrawElements( mode, count, type, dataPtr );
+}
+
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDrawElements__IIII
+  (JNIEnv *, jobject, jint mode, jint count, jint type, jint indices)
+{
+	glDrawElements( mode, count, type, (const void*)indices );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glEnable
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glEnable
+  (JNIEnv *env, jobject, jint cap)
+{
+	glEnable( cap );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glEnableVertexAttribArray
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glEnableVertexAttribArray
+  (JNIEnv *env, jobject, jint index)
+{
+	glEnableVertexAttribArray( index );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glFinish
+ * Signature: ()V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glFinish
+  (JNIEnv *env, jobject)
+{
+	glFinish();
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glFlush
+ * Signature: ()V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glFlush
+  (JNIEnv *env, jobject)
+{
+	glFlush();
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glFramebufferRenderbuffer
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glFramebufferRenderbuffer
+  (JNIEnv *env, jobject, jint target, jint attachment, jint renderbuffertarget, jint renderbuffer)
+{
+	glFramebufferRenderbuffer( target, attachment, renderbuffertarget, renderbuffer );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glFramebufferTexture2D
+ * Signature: (IIIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glFramebufferTexture2D
+  (JNIEnv *env, jobject, jint target, jint attachment, jint textarget, jint texture, jint level)
+{
+	glFramebufferTexture2D( target, attachment, textarget, texture, level );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glFrontFace
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glFrontFace
+  (JNIEnv *env, jobject, jint mode)
+{ //XXXX
+	glFrontFace( mode );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGenBuffers
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGenBuffers
+  (JNIEnv *env, jobject, jint n, jobject buffers)
+{
+	void* dataPtr = getDirectBufferPointer( env, buffers );
+	glGenBuffers( n, (GLuint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGenerateMipmap
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGenerateMipmap
+  (JNIEnv *env, jobject, jint target)
+{
+	glGenerateMipmap( target );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGenFramebuffers
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGenFramebuffers
+  (JNIEnv *env, jobject, jint n, jobject framebuffers)
+{
+	void* dataPtr = getDirectBufferPointer( env, framebuffers );
+	glGenFramebuffers( n, (GLuint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGenRenderbuffers
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGenRenderbuffers
+  (JNIEnv *env, jobject, jint n, jobject renderbuffers)
+{
+	void* dataPtr = getDirectBufferPointer( env, renderbuffers );
+	glGenRenderbuffers( n, (GLuint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGenTextures
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGenTextures
+  (JNIEnv *env, jobject, jint n, jobject textures)
+{
+	void* dataPtr = getDirectBufferPointer( env, textures );
+	glGenTextures( n, (GLuint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetActiveAttrib
+ * Signature: (IIILjava/nio/Buffer;Ljava/nio/IntBuffer;Ljava/nio/Buffer;Ljava/lang/String;)V
+ */
+JNIEXPORT jstring JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetActiveAttrib
+  (JNIEnv *env, jobject, jint program, jint index, jobject size, jobject type )
+{
+	// FIXME is this wrong?
+	char cname[2048];
+	void* sizePtr = getDirectBufferPointer( env, size );
+	void* typePtr = getDirectBufferPointer( env, type );
+	glGetActiveAttrib( program, index, 2048, NULL, (GLint*)sizePtr, (GLenum*)typePtr, cname );
+
+	return env->NewStringUTF( cname );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetActiveUniform
+ * Signature: (IIILjava/nio/Buffer;Ljava/nio/IntBuffer;Ljava/nio/Buffer;Ljava/lang/String;)V
+ */
+JNIEXPORT jstring JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetActiveUniform
+  (JNIEnv *env, jobject, jint program, jint index, jobject size, jobject type)
+{
+	// FIXME is this wrong?
+	char cname[2048];
+	void* sizePtr = getDirectBufferPointer( env, size );
+	void* typePtr = getDirectBufferPointer( env, type );
+	glGetActiveUniform( program, index, 2048, NULL, (GLint*)sizePtr, (GLenum*)typePtr, cname );
+
+	return env->NewStringUTF( cname );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetAttachedShaders
+ * Signature: (IILjava/nio/Buffer;Ljava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetAttachedShaders
+  (JNIEnv *env, jobject, jint program, jint maxcount, jobject count, jobject shaders)
+{
+	void* countPtr = getDirectBufferPointer( env, count );
+	void* shaderPtr = getDirectBufferPointer( env, shaders );
+	glGetAttachedShaders( program, maxcount, (GLsizei*)countPtr, (GLuint*)shaderPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetAttribLocation
+ * Signature: (ILjava/lang/String;)I
+ */
+JNIEXPORT jint JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetAttribLocation
+  (JNIEnv *env, jobject, jint program, jstring name)
+{
+	const char* cname = getString( env, name );
+	int loc = glGetAttribLocation( program, cname );
+	releaseString( env, name, cname );
+	return loc;
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetBooleanv
+ * Signature: (ILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetBooleanv
+  (JNIEnv *env, jobject, jint program, jobject params)
+{
+	void* dataPtr = getDirectBufferPointer( env, params );
+	glGetBooleanv( program, (GLboolean*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetBufferParameteriv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetBufferParameteriv
+  (JNIEnv *env, jobject, jint target, jint pname, jobject params)
+{
+	void* dataPtr = getDirectBufferPointer( env, params );
+	glGetBufferParameteriv( target, pname, (GLint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetError
+ * Signature: ()I
+ */
+JNIEXPORT jint JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetError
+  (JNIEnv *env, jobject)
+{
+	return glGetError();
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetFloatv
+ * Signature: (ILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetFloatv
+  (JNIEnv *env, jobject, jint pname, jobject params)
+{
+	void* dataPtr = getDirectBufferPointer( env, params );
+	glGetFloatv( pname, (GLfloat*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetFramebufferAttachmentParameteriv
+ * Signature: (IIILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetFramebufferAttachmentParameteriv
+  (JNIEnv *env, jobject, jint target, jint attachment, jint pname, jobject params)
+{
+	void* dataPtr = getDirectBufferPointer( env, params );
+	glGetFramebufferAttachmentParameteriv( target, attachment, pname, (GLint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetIntegerv
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetIntegerv
+  (JNIEnv *env, jobject, jint pname, jobject params)
+{
+	void* dataPtr = getDirectBufferPointer( env, params );
+	glGetIntegerv( pname, (GLint*)dataPtr);
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetProgramiv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetProgramiv
+  (JNIEnv *env, jobject, jint program, jint pname, jobject params)
+{
+	void *dataPtr = getDirectBufferPointer( env, params );
+	glGetProgramiv( program, pname, (GLint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetProgramInfoLog
+ * Signature: (IILjava/nio/Buffer;Ljava/lang/String;)V
+ */
+JNIEXPORT jstring JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetProgramInfoLog
+  (JNIEnv *env, jobject, jint program )
+{
+	char info[1024*10]; // FIXME 10k limit should suffice
+	int length = 0;
+	glGetProgramInfoLog( program, 1024*10, &length, info );
+	return env->NewStringUTF( info );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetRenderbufferParameteriv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetRenderbufferParameteriv
+  (JNIEnv *env, jobject, jint target, jint pname, jobject params)
+{
+	void* dataPtr = getDirectBufferPointer( env, params );
+	glGetRenderbufferParameteriv( target, pname, (GLint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetShaderiv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetShaderiv
+  (JNIEnv *env, jobject, jint shader, jint pname, jobject params)
+{
+	void* dataPtr = getDirectBufferPointer( env, params );
+	glGetShaderiv( shader, pname, (GLint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetShaderInfoLog
+ * Signature: (IILjava/nio/Buffer;Ljava/lang/String;)V
+ */
+JNIEXPORT jstring JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetShaderInfoLog
+  (JNIEnv *env, jobject, jint shader )
+{
+	char info[1024*10]; // FIXME 10k limit should suffice
+	int length = 0;
+	glGetShaderInfoLog( shader, 1024*10, &length, info );
+	return env->NewStringUTF( info );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetShaderPrecisionFormat
+ * Signature: (IILjava/nio/IntBuffer;Ljava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetShaderPrecisionFormat
+  (JNIEnv *env, jobject, jint shadertype, jint precisiontype, jobject range, jobject precision)
+{
+	void* rangePtr = getDirectBufferPointer( env, range );
+	void* precisionPtr = getDirectBufferPointer( env, precision );
+	glGetShaderPrecisionFormat( shadertype, precisiontype, (GLint*)rangePtr, (GLint*)precisionPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetShaderSource
+ * Signature: (IILjava/nio/Buffer;Ljava/lang/String;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetShaderSource
+  (JNIEnv *env, jobject, jint shader, jint bufsize, jobject length, jstring source)
+{
+	env->ThrowNew(UOEClass, "This method is not supported"); // FIXME won't implement this shit.
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetString
+ * Signature: (I)Ljava/lang/String;
+ */
+JNIEXPORT jstring JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetString
+  (JNIEnv *env, jobject, jint name)
+{
+	const char * chars = (const char *)glGetString((GLenum)name);
+	jstring output = env->NewStringUTF(chars);
+	return output;
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetTexParameterfv
+ * Signature: (IILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetTexParameterfv
+  (JNIEnv *env, jobject, jint target, jint pname, jobject params)
+{
+	void* dataPtr = getDirectBufferPointer( env, params );
+	glGetTexParameterfv( target, pname, (GLfloat*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetTexParameteriv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetTexParameteriv
+  (JNIEnv *env, jobject, jint target, jint pname, jobject params)
+{
+	void* dataPtr = getDirectBufferPointer( env, params );
+	glGetTexParameteriv( target, pname, (GLint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetUniformfv
+ * Signature: (IILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetUniformfv
+  (JNIEnv *env, jobject, jint program, jint location, jobject params)
+{
+	void* dataPtr = getDirectBufferPointer( env, params );
+	glGetUniformfv( program, location, (GLfloat*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetUniformiv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetUniformiv
+  (JNIEnv *env, jobject, jint program, jint location, jobject params)
+{
+	void* dataPtr = getDirectBufferPointer( env, params );
+	glGetUniformiv( program, location, (GLint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetUniformLocation
+ * Signature: (ILjava/lang/String;)I
+ */
+JNIEXPORT jint JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetUniformLocation
+  (JNIEnv *env, jobject, jint program, jstring name)
+{
+	const char* cname = getString( env, name );
+	int location = glGetUniformLocation( program, cname );
+	releaseString( env, name, cname );
+	return location;
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetVertexAttribfv
+ * Signature: (IILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetVertexAttribfv
+  (JNIEnv *env, jobject, jint index, jint pname, jobject params)
+{
+	void* dataPtr = getDirectBufferPointer( env, params );
+	glGetVertexAttribfv( index, pname, (GLfloat*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetVertexAttribiv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetVertexAttribiv
+  (JNIEnv *env, jobject, jint index, jint pname, jobject params)
+{
+	void* dataPtr = getDirectBufferPointer( env, params );
+	glGetVertexAttribiv( index, pname, (GLint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetVertexAttribPointerv
+ * Signature: (IILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetVertexAttribPointerv
+  (JNIEnv *env, jobject, jint index, jint pname, jobject pointer)
+{
+	env->ThrowNew(UOEClass, "This method is not supported"); // FIXME won't implement this shit
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glHint
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glHint
+  (JNIEnv *env, jobject, jint target, jint mode)
+{
+	glHint( target, mode );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glIsBuffer
+ * Signature: (I)C
+ */
+JNIEXPORT jboolean JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glIsBuffer
+  (JNIEnv *env, jobject, jint buffer)
+{
+	return glIsBuffer( buffer );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glIsEnabled
+ * Signature: (I)C
+ */
+JNIEXPORT jboolean JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glIsEnabled
+  (JNIEnv *env, jobject, jint cap)
+{
+	return glIsEnabled( cap );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glIsFramebuffer
+ * Signature: (I)C
+ */
+JNIEXPORT jboolean JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glIsFramebuffer
+  (JNIEnv *env, jobject, jint framebuffer)
+{
+	return glIsFramebuffer( framebuffer );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glIsProgram
+ * Signature: (I)C
+ */
+JNIEXPORT jboolean JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glIsProgram
+  (JNIEnv *env, jobject, jint program)
+{
+	return glIsProgram( program );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glIsRenderbuffer
+ * Signature: (I)C
+ */
+JNIEXPORT jboolean JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glIsRenderbuffer
+  (JNIEnv *env, jobject, jint renderbuffer)
+{
+	return glIsRenderbuffer( renderbuffer );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glIsShader
+ * Signature: (I)C
+ */
+JNIEXPORT jboolean JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glIsShader
+  (JNIEnv *env, jobject, jint shader)
+{
+	return glIsShader( shader );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glIsTexture
+ * Signature: (I)C
+ */
+JNIEXPORT jboolean JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glIsTexture
+  (JNIEnv *env, jobject, jint texture)
+{
+	return glIsTexture( texture );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glLineWidth
+ * Signature: (F)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glLineWidth
+  (JNIEnv *env, jobject, jfloat width)
+{
+	glLineWidth( width );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glLinkProgram
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glLinkProgram
+  (JNIEnv *env, jobject, jint program)
+{
+	glLinkProgram( program );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glPixelStorei
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glPixelStorei
+  (JNIEnv *env, jobject, jint pname, jint param)
+{
+	glPixelStorei( pname, param );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glPolygonOffset
+ * Signature: (FF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glPolygonOffset
+  (JNIEnv *env, jobject, jfloat factor, jfloat units)
+{
+	glPolygonOffset( factor, units );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glReadPixels
+ * Signature: (IIIIIILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glReadPixels
+  (JNIEnv *env, jobject, jint x, jint y, jint width, jint height, jint format, jint type, jobject pixels)
+{
+	void* dataPtr = getDirectBufferPointer( env, pixels );
+	glReadPixels( x, y, width, height, format, type, dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glReleaseShaderCompiler
+ * Signature: ()V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glReleaseShaderCompiler
+  (JNIEnv *env, jobject)
+{
+	glReleaseShaderCompiler();
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glRenderbufferStorage
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glRenderbufferStorage
+  (JNIEnv *env, jobject, jint target, jint internalFormat, jint width, jint height)
+{
+	glRenderbufferStorage( target, internalFormat, width, height );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glSampleCoverage
+ * Signature: (FZ)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glSampleCoverage
+  (JNIEnv *env, jobject, jfloat value, jboolean inver)
+{
+	glSampleCoverage( value, inver );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glScissor
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glScissor
+  (JNIEnv *env, jobject, jint x, jint y, jint width, jint height)
+{
+	glScissor( x, y, width, height );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glShaderBinary
+ * Signature: (ILjava/nio/IntBuffer;ILjava/nio/Buffer;I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glShaderBinary
+  (JNIEnv *env, jobject, jint n, jobject shaders, jint binaryformat, jobject binary, jint length)
+{
+	void* shaderPtr = getDirectBufferPointer( env, shaders );
+	void* binaryPtr = getDirectBufferPointer( env, binary );
+	glShaderBinary( n, (GLuint*)shaderPtr, binaryformat, binaryPtr, length );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glShaderSource
+ * Signature: (IILjava/lang/String;Ljava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glShaderSource
+  (JNIEnv *env, jobject, jint shader, jstring string )
+{
+	const char* cstring = getString( env, string );
+	glShaderSource( shader, 1, &cstring, NULL );
+	releaseString( env, string, cstring );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glStencilFunc
+ * Signature: (III)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glStencilFunc
+  (JNIEnv *env, jobject, jint func, jint ref, jint mask)
+{
+	glStencilFunc( func, ref, mask );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glStencilFuncSeparate
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glStencilFuncSeparate
+  (JNIEnv *env, jobject, jint face, jint func, jint ref, jint mask)
+{
+	glStencilFuncSeparate( face, func, ref, mask );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glStencilMask
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glStencilMask
+  (JNIEnv *env, jobject, jint mask)
+{
+	glStencilMask( mask );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glStencilMaskSeparate
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glStencilMaskSeparate
+  (JNIEnv *env, jobject, jint face, jint mask)
+{
+	glStencilMaskSeparate( face, mask );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glStencilOp
+ * Signature: (III)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glStencilOp
+  (JNIEnv *env, jobject, jint fail, jint zFail, jint zpass)
+{
+	glStencilOp( fail, zFail, zpass );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glStencilOpSeparate
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glStencilOpSeparate
+  (JNIEnv *env, jobject, jint face, jint fail, jint zFail, jint zPass)
+{
+	glStencilOpSeparate( face, fail, zFail, zPass );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glTexImage2D
+ * Signature: (IIIIIIIILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glTexImage2D
+  (JNIEnv *env, jobject, jint target, jint level, jint internalformat, jint width, jint height, jint border, jint format, jint type, jobject pixels)
+{
+	void* dataPtr = getDirectBufferPointer( env, pixels );
+	glTexImage2D( target, level, internalformat, width, height, border, format, type, dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glTexParameterf
+ * Signature: (IIF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glTexParameterf
+  (JNIEnv *env, jobject, jint target, jint pname, jfloat param)
+{
+	glTexParameterf( target, pname, param );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glTexParameterfv
+ * Signature: (IILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glTexParameterfv
+  (JNIEnv *env, jobject, jint target, jint pname, jobject params)
+{
+	void* dataPtr = getDirectBufferPointer( env, params );
+	glTexParameterfv( target, pname, (GLfloat*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glTexParameteri
+ * Signature: (III)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glTexParameteri
+  (JNIEnv *env, jobject, jint target, jint pname, jint param)
+{
+	glTexParameteri( target, pname, param );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glTexParameteriv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glTexParameteriv
+  (JNIEnv *env, jobject, jint target, jint pname, jobject params)
+{
+	void* dataPtr = getDirectBufferPointer( env, params );
+	glTexParameteriv( target, pname, (GLint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glTexSubImage2D
+ * Signature: (IIIIIIIILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glTexSubImage2D
+  (JNIEnv *env, jobject, jint target, jint level, jint xoffset, jint yoffset, jint width, jint height, jint format, jint type, jobject pixels)
+{
+	void* dataPtr = getDirectBufferPointer( env, pixels );
+	glTexSubImage2D( target, level, xoffset, yoffset, width, height, format, type, dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform1f
+ * Signature: (IF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform1f
+  (JNIEnv *env, jobject, jint location, jfloat x)
+{
+	glUniform1f( location, x );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform1fv
+ * Signature: (IILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform1fv
+  (JNIEnv *env, jobject, jint location, jint count, jobject v)
+{
+	void* dataPtr = getDirectBufferPointer( env, v );
+	glUniform1fv( location, count, (GLfloat*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform1i
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform1i
+  (JNIEnv *env, jobject, jint location, jint x)
+{
+	glUniform1i( location, x );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform1iv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform1iv
+  (JNIEnv *env, jobject, jint location, jint count, jobject v)
+{
+	void* dataPtr = getDirectBufferPointer( env, v );
+	glUniform1iv( location, count, (GLint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform2f
+ * Signature: (IFF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform2f
+  (JNIEnv *env, jobject, jint location, jfloat x, jfloat y)
+{
+	glUniform2f( location, x, y );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform2fv
+ * Signature: (IILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform2fv
+  (JNIEnv *env, jobject, jint location, jint count, jobject v)
+{
+	void* dataPtr = getDirectBufferPointer( env, v );
+	glUniform2fv( location, count, (GLfloat*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform2i
+ * Signature: (III)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform2i
+  (JNIEnv *env, jobject, jint location, jint x, jint y)
+{
+	glUniform2i( location, x, y );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform2iv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform2iv
+  (JNIEnv *env, jobject, jint location, jint count, jobject v)
+{
+	void* dataPtr = getDirectBufferPointer( env, v );
+	glUniform2iv( location, count, (GLint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform3f
+ * Signature: (IFFF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform3f
+  (JNIEnv *env, jobject, jint location, jfloat x, jfloat y, jfloat z)
+{
+	glUniform3f( location, x, y, z );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform3fv
+ * Signature: (IILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform3fv
+  (JNIEnv *env, jobject, jint location, jint count, jobject v)
+{
+	void* dataPtr = getDirectBufferPointer( env, v );
+	glUniform3fv( location, count, (GLfloat*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform3i
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform3i
+  (JNIEnv *env, jobject, jint location, jint x, jint y, jint z)
+{
+	glUniform3i( location, x, y, z );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform3iv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform3iv
+  (JNIEnv *env, jobject, jint location, jint count, jobject v)
+{
+	void* dataPtr = getDirectBufferPointer( env, v );
+	glUniform3iv( location, count, (GLint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform4f
+ * Signature: (IFFFF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform4f
+  (JNIEnv *env, jobject, jint location, jfloat x, jfloat y, jfloat z, jfloat w)
+{
+	glUniform4f( location, x, y, z, w );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform4fv
+ * Signature: (IILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform4fv
+  (JNIEnv *env, jobject, jint location, jint count, jobject v)
+{
+	void* dataPtr = getDirectBufferPointer( env, v );
+	glUniform4fv( location, count, (GLfloat*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform4i
+ * Signature: (IIIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform4i
+  (JNIEnv *env, jobject, jint location, jint x, jint y, jint z, jint w)
+{
+	glUniform4i( location, x, y, z, w );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform4iv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform4iv
+  (JNIEnv *env, jobject, jint location, jint count, jobject v)
+{
+	void* dataPtr = getDirectBufferPointer( env, v );
+	glUniform4iv( location, count, (GLint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniformMatrix2fv
+ * Signature: (IIZLjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniformMatrix2fv
+  (JNIEnv *env, jobject, jint location, jint count, jboolean transpose, jobject value)
+{
+	void* dataPtr = getDirectBufferPointer( env, value );
+	glUniformMatrix2fv( location, count, transpose, (GLfloat*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniformMatrix3fv
+ * Signature: (IIZLjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniformMatrix3fv
+  (JNIEnv *env, jobject, jint location, jint count, jboolean transpose, jobject value)
+{
+	void* dataPtr = getDirectBufferPointer( env, value );
+	glUniformMatrix3fv( location, count, transpose, (GLfloat*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniformMatrix4fv
+ * Signature: (IIZLjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniformMatrix4fv
+  (JNIEnv *env, jobject, jint location, jint count, jboolean transpose, jobject value)
+{
+	void* dataPtr = getDirectBufferPointer( env, value );
+	glUniformMatrix4fv( location, count, transpose, (GLfloat*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUseProgram
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUseProgram
+  (JNIEnv *env, jobject, jint program)
+{
+	glUseProgram( program );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glValidateProgram
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glValidateProgram
+  (JNIEnv *env, jobject, jint program)
+{
+	glValidateProgram( program );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glVertexAttrib1f
+ * Signature: (IF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glVertexAttrib1f
+  (JNIEnv *env, jobject, jint indx, jfloat x)
+{
+	glVertexAttrib1f( indx, x );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glVertexAttrib1fv
+ * Signature: (ILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glVertexAttrib1fv
+  (JNIEnv *env, jobject, jint indx, jobject values)
+{
+	void* dataPtr = getDirectBufferPointer( env, values );
+	glVertexAttrib1fv( indx, (GLfloat*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glVertexAttrib2f
+ * Signature: (IFF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glVertexAttrib2f
+  (JNIEnv *env, jobject, jint indx, jfloat x, jfloat y)
+{
+	glVertexAttrib2f( indx, x, y );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glVertexAttrib2fv
+ * Signature: (ILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glVertexAttrib2fv
+  (JNIEnv *env, jobject, jint indx, jobject values)
+{
+	void* dataPtr = getDirectBufferPointer( env, values );
+	glVertexAttrib2fv( indx, (GLfloat*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glVertexAttrib3f
+ * Signature: (IFFF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glVertexAttrib3f
+  (JNIEnv *env, jobject, jint indx, jfloat x, jfloat y, jfloat z)
+{
+	glVertexAttrib3f( indx, x, y, z );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glVertexAttrib3fv
+ * Signature: (ILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glVertexAttrib3fv
+  (JNIEnv *env, jobject, jint indx, jobject values)
+{
+	void* dataPtr = getDirectBufferPointer( env, values );
+	glVertexAttrib3fv( indx, (GLfloat*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glVertexAttrib4f
+ * Signature: (IFFFF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glVertexAttrib4f
+  (JNIEnv *env, jobject, jint indx, jfloat x, jfloat y, jfloat z, jfloat w)
+{
+	glVertexAttrib4f( indx, x, y, z, w );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glVertexAttrib4fv
+ * Signature: (ILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glVertexAttrib4fv
+  (JNIEnv *env, jobject, jint indx, jobject values)
+{
+	void* dataPtr = getDirectBufferPointer( env, values );
+	glVertexAttrib4fv( indx, (GLfloat*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glVertexAttribPointer
+ * Signature: (IIIZILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glVertexAttribPointer__IIIZILjava_nio_Buffer_2
+  (JNIEnv *env, jobject, jint indx, jint size, jint type, jboolean normalized, jint stride, jobject ptr)
+{
+	void* dataPtr = getDirectBufferPointer( env, ptr );
+	glVertexAttribPointer( indx, size, type, normalized, stride, dataPtr );
+}
+
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glVertexAttribPointer__IIIZII
+  (JNIEnv *, jobject, jint indx, jint size, jint type, jboolean normalized, jint stride, jint ptr)
+{
+	glVertexAttribPointer( indx, size, type, normalized, stride, (const void*)ptr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glViewport
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glViewport
+  (JNIEnv *env, jobject, jint x, jint y, jint width, jint height)
+{
+	glViewport( x, y, width, height );
+}
diff --git a/backends/gdx-backend-iosmonotouch/natives/iosgles20.h b/backends/gdx-backend-iosmonotouch/natives/iosgles20.h
new file mode 100644
index 0000000..98d3885
--- /dev/null
+++ b/backends/gdx-backend-iosmonotouch/natives/iosgles20.h
@@ -0,0 +1,1173 @@
+/* DO NOT EDIT THIS FILE - it is machine generated */
+#include <jni.h>
+/* Header for class com_badlogic_gdx_backends_ios_IOSGLES20 */
+
+#ifndef _Included_com_badlogic_gdx_backends_ios_IOSGLES20
+#define _Included_com_badlogic_gdx_backends_ios_IOSGLES20
+#ifdef __cplusplus
+extern "C" {
+#endif
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    init
+ * Signature: ()V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_init
+  (JNIEnv *, jclass);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glActiveTexture
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glActiveTexture
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glAttachShader
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glAttachShader
+  (JNIEnv *, jobject, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glBindAttribLocation
+ * Signature: (IILjava/lang/String;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glBindAttribLocation
+  (JNIEnv *, jobject, jint, jint, jstring);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glBindBuffer
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glBindBuffer
+  (JNIEnv *, jobject, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glBindFramebuffer
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glBindFramebuffer
+  (JNIEnv *, jobject, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glBindRenderbuffer
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glBindRenderbuffer
+  (JNIEnv *, jobject, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glBindTexture
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glBindTexture
+  (JNIEnv *, jobject, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glBlendColor
+ * Signature: (FFFF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glBlendColor
+  (JNIEnv *, jobject, jfloat, jfloat, jfloat, jfloat);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glBlendEquation
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glBlendEquation
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glBlendEquationSeparate
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glBlendEquationSeparate
+  (JNIEnv *, jobject, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glBlendFunc
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glBlendFunc
+  (JNIEnv *, jobject, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glBlendFuncSeparate
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glBlendFuncSeparate
+  (JNIEnv *, jobject, jint, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glBufferData
+ * Signature: (IILjava/nio/Buffer;I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glBufferData
+  (JNIEnv *, jobject, jint, jint, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glBufferSubData
+ * Signature: (IIILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glBufferSubData
+  (JNIEnv *, jobject, jint, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glCheckFramebufferStatus
+ * Signature: (I)I
+ */
+JNIEXPORT jint JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glCheckFramebufferStatus
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glClear
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glClear
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glClearColor
+ * Signature: (FFFF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glClearColor
+  (JNIEnv *, jobject, jfloat, jfloat, jfloat, jfloat);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glClearDepthf
+ * Signature: (F)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glClearDepthf
+  (JNIEnv *, jobject, jfloat);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glClearStencil
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glClearStencil
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glColorMask
+ * Signature: (ZZZZ)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glColorMask
+  (JNIEnv *, jobject, jboolean, jboolean, jboolean, jboolean);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glCompileShader
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glCompileShader
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glCompressedTexImage2D
+ * Signature: (IIIIIIILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glCompressedTexImage2D
+  (JNIEnv *, jobject, jint, jint, jint, jint, jint, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glCompressedTexSubImage2D
+ * Signature: (IIIIIIIILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glCompressedTexSubImage2D
+  (JNIEnv *, jobject, jint, jint, jint, jint, jint, jint, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glCopyTexImage2D
+ * Signature: (IIIIIIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glCopyTexImage2D
+  (JNIEnv *, jobject, jint, jint, jint, jint, jint, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glCopyTexSubImage2D
+ * Signature: (IIIIIIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glCopyTexSubImage2D
+  (JNIEnv *, jobject, jint, jint, jint, jint, jint, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glCreateProgram
+ * Signature: ()I
+ */
+JNIEXPORT jint JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glCreateProgram
+  (JNIEnv *, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glCreateShader
+ * Signature: (I)I
+ */
+JNIEXPORT jint JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glCreateShader
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glCullFace
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glCullFace
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDeleteBuffers
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDeleteBuffers
+  (JNIEnv *, jobject, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDeleteFramebuffers
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDeleteFramebuffers
+  (JNIEnv *, jobject, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDeleteProgram
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDeleteProgram
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDeleteRenderbuffers
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDeleteRenderbuffers
+  (JNIEnv *, jobject, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDeleteShader
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDeleteShader
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDeleteTextures
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDeleteTextures
+  (JNIEnv *, jobject, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDepthFunc
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDepthFunc
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDepthMask
+ * Signature: (Z)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDepthMask
+  (JNIEnv *, jobject, jboolean);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDepthRangef
+ * Signature: (FF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDepthRangef
+  (JNIEnv *, jobject, jfloat, jfloat);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDetachShader
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDetachShader
+  (JNIEnv *, jobject, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDisable
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDisable
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDisableVertexAttribArray
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDisableVertexAttribArray
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDrawArrays
+ * Signature: (III)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDrawArrays
+  (JNIEnv *, jobject, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDrawElements
+ * Signature: (IIILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDrawElements__IIILjava_nio_Buffer_2
+  (JNIEnv *, jobject, jint, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glDrawElements
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glDrawElements__IIII
+  (JNIEnv *, jobject, jint, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glEnable
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glEnable
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glEnableVertexAttribArray
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glEnableVertexAttribArray
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glFinish
+ * Signature: ()V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glFinish
+  (JNIEnv *, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glFlush
+ * Signature: ()V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glFlush
+  (JNIEnv *, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glFramebufferRenderbuffer
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glFramebufferRenderbuffer
+  (JNIEnv *, jobject, jint, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glFramebufferTexture2D
+ * Signature: (IIIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glFramebufferTexture2D
+  (JNIEnv *, jobject, jint, jint, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glFrontFace
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glFrontFace
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGenBuffers
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGenBuffers
+  (JNIEnv *, jobject, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGenerateMipmap
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGenerateMipmap
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGenFramebuffers
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGenFramebuffers
+  (JNIEnv *, jobject, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGenRenderbuffers
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGenRenderbuffers
+  (JNIEnv *, jobject, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGenTextures
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGenTextures
+  (JNIEnv *, jobject, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetActiveAttrib
+ * Signature: (IILjava/nio/IntBuffer;Ljava/nio/Buffer;)Ljava/lang/String;
+ */
+JNIEXPORT jstring JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetActiveAttrib
+  (JNIEnv *, jobject, jint, jint, jobject, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetActiveUniform
+ * Signature: (IILjava/nio/IntBuffer;Ljava/nio/Buffer;)Ljava/lang/String;
+ */
+JNIEXPORT jstring JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetActiveUniform
+  (JNIEnv *, jobject, jint, jint, jobject, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetAttachedShaders
+ * Signature: (IILjava/nio/Buffer;Ljava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetAttachedShaders
+  (JNIEnv *, jobject, jint, jint, jobject, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetAttribLocation
+ * Signature: (ILjava/lang/String;)I
+ */
+JNIEXPORT jint JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetAttribLocation
+  (JNIEnv *, jobject, jint, jstring);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetBooleanv
+ * Signature: (ILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetBooleanv
+  (JNIEnv *, jobject, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetBufferParameteriv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetBufferParameteriv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetError
+ * Signature: ()I
+ */
+JNIEXPORT jint JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetError
+  (JNIEnv *, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetFloatv
+ * Signature: (ILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetFloatv
+  (JNIEnv *, jobject, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetFramebufferAttachmentParameteriv
+ * Signature: (IIILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetFramebufferAttachmentParameteriv
+  (JNIEnv *, jobject, jint, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetIntegerv
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetIntegerv
+  (JNIEnv *, jobject, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetProgramiv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetProgramiv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetProgramInfoLog
+ * Signature: (I)Ljava/lang/String;
+ */
+JNIEXPORT jstring JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetProgramInfoLog
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetRenderbufferParameteriv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetRenderbufferParameteriv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetShaderiv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetShaderiv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetShaderInfoLog
+ * Signature: (I)Ljava/lang/String;
+ */
+JNIEXPORT jstring JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetShaderInfoLog
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetShaderPrecisionFormat
+ * Signature: (IILjava/nio/IntBuffer;Ljava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetShaderPrecisionFormat
+  (JNIEnv *, jobject, jint, jint, jobject, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetShaderSource
+ * Signature: (IILjava/nio/Buffer;Ljava/lang/String;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetShaderSource
+  (JNIEnv *, jobject, jint, jint, jobject, jstring);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetString
+ * Signature: (I)Ljava/lang/String;
+ */
+JNIEXPORT jstring JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetString
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetTexParameterfv
+ * Signature: (IILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetTexParameterfv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetTexParameteriv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetTexParameteriv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetUniformfv
+ * Signature: (IILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetUniformfv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetUniformiv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetUniformiv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetUniformLocation
+ * Signature: (ILjava/lang/String;)I
+ */
+JNIEXPORT jint JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetUniformLocation
+  (JNIEnv *, jobject, jint, jstring);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetVertexAttribfv
+ * Signature: (IILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetVertexAttribfv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetVertexAttribiv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetVertexAttribiv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glGetVertexAttribPointerv
+ * Signature: (IILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glGetVertexAttribPointerv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glHint
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glHint
+  (JNIEnv *, jobject, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glIsBuffer
+ * Signature: (I)Z
+ */
+JNIEXPORT jboolean JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glIsBuffer
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glIsEnabled
+ * Signature: (I)Z
+ */
+JNIEXPORT jboolean JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glIsEnabled
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glIsFramebuffer
+ * Signature: (I)Z
+ */
+JNIEXPORT jboolean JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glIsFramebuffer
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glIsProgram
+ * Signature: (I)Z
+ */
+JNIEXPORT jboolean JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glIsProgram
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glIsRenderbuffer
+ * Signature: (I)Z
+ */
+JNIEXPORT jboolean JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glIsRenderbuffer
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glIsShader
+ * Signature: (I)Z
+ */
+JNIEXPORT jboolean JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glIsShader
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glIsTexture
+ * Signature: (I)Z
+ */
+JNIEXPORT jboolean JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glIsTexture
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glLineWidth
+ * Signature: (F)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glLineWidth
+  (JNIEnv *, jobject, jfloat);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glLinkProgram
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glLinkProgram
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glPixelStorei
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glPixelStorei
+  (JNIEnv *, jobject, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glPolygonOffset
+ * Signature: (FF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glPolygonOffset
+  (JNIEnv *, jobject, jfloat, jfloat);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glReadPixels
+ * Signature: (IIIIIILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glReadPixels
+  (JNIEnv *, jobject, jint, jint, jint, jint, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glReleaseShaderCompiler
+ * Signature: ()V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glReleaseShaderCompiler
+  (JNIEnv *, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glRenderbufferStorage
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glRenderbufferStorage
+  (JNIEnv *, jobject, jint, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glSampleCoverage
+ * Signature: (FZ)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glSampleCoverage
+  (JNIEnv *, jobject, jfloat, jboolean);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glScissor
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glScissor
+  (JNIEnv *, jobject, jint, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glShaderBinary
+ * Signature: (ILjava/nio/IntBuffer;ILjava/nio/Buffer;I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glShaderBinary
+  (JNIEnv *, jobject, jint, jobject, jint, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glShaderSource
+ * Signature: (ILjava/lang/String;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glShaderSource
+  (JNIEnv *, jobject, jint, jstring);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glStencilFunc
+ * Signature: (III)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glStencilFunc
+  (JNIEnv *, jobject, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glStencilFuncSeparate
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glStencilFuncSeparate
+  (JNIEnv *, jobject, jint, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glStencilMask
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glStencilMask
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glStencilMaskSeparate
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glStencilMaskSeparate
+  (JNIEnv *, jobject, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glStencilOp
+ * Signature: (III)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glStencilOp
+  (JNIEnv *, jobject, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glStencilOpSeparate
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glStencilOpSeparate
+  (JNIEnv *, jobject, jint, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glTexImage2D
+ * Signature: (IIIIIIIILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glTexImage2D
+  (JNIEnv *, jobject, jint, jint, jint, jint, jint, jint, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glTexParameterf
+ * Signature: (IIF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glTexParameterf
+  (JNIEnv *, jobject, jint, jint, jfloat);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glTexParameterfv
+ * Signature: (IILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glTexParameterfv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glTexParameteri
+ * Signature: (III)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glTexParameteri
+  (JNIEnv *, jobject, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glTexParameteriv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glTexParameteriv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glTexSubImage2D
+ * Signature: (IIIIIIIILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glTexSubImage2D
+  (JNIEnv *, jobject, jint, jint, jint, jint, jint, jint, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform1f
+ * Signature: (IF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform1f
+  (JNIEnv *, jobject, jint, jfloat);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform1fv
+ * Signature: (IILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform1fv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform1i
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform1i
+  (JNIEnv *, jobject, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform1iv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform1iv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform2f
+ * Signature: (IFF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform2f
+  (JNIEnv *, jobject, jint, jfloat, jfloat);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform2fv
+ * Signature: (IILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform2fv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform2i
+ * Signature: (III)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform2i
+  (JNIEnv *, jobject, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform2iv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform2iv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform3f
+ * Signature: (IFFF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform3f
+  (JNIEnv *, jobject, jint, jfloat, jfloat, jfloat);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform3fv
+ * Signature: (IILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform3fv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform3i
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform3i
+  (JNIEnv *, jobject, jint, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform3iv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform3iv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform4f
+ * Signature: (IFFFF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform4f
+  (JNIEnv *, jobject, jint, jfloat, jfloat, jfloat, jfloat);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform4fv
+ * Signature: (IILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform4fv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform4i
+ * Signature: (IIIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform4i
+  (JNIEnv *, jobject, jint, jint, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniform4iv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniform4iv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniformMatrix2fv
+ * Signature: (IIZLjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniformMatrix2fv
+  (JNIEnv *, jobject, jint, jint, jboolean, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniformMatrix3fv
+ * Signature: (IIZLjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniformMatrix3fv
+  (JNIEnv *, jobject, jint, jint, jboolean, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUniformMatrix4fv
+ * Signature: (IIZLjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUniformMatrix4fv
+  (JNIEnv *, jobject, jint, jint, jboolean, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glUseProgram
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glUseProgram
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glValidateProgram
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glValidateProgram
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glVertexAttrib1f
+ * Signature: (IF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glVertexAttrib1f
+  (JNIEnv *, jobject, jint, jfloat);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glVertexAttrib1fv
+ * Signature: (ILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glVertexAttrib1fv
+  (JNIEnv *, jobject, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glVertexAttrib2f
+ * Signature: (IFF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glVertexAttrib2f
+  (JNIEnv *, jobject, jint, jfloat, jfloat);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glVertexAttrib2fv
+ * Signature: (ILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glVertexAttrib2fv
+  (JNIEnv *, jobject, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glVertexAttrib3f
+ * Signature: (IFFF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glVertexAttrib3f
+  (JNIEnv *, jobject, jint, jfloat, jfloat, jfloat);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glVertexAttrib3fv
+ * Signature: (ILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glVertexAttrib3fv
+  (JNIEnv *, jobject, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glVertexAttrib4f
+ * Signature: (IFFFF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glVertexAttrib4f
+  (JNIEnv *, jobject, jint, jfloat, jfloat, jfloat, jfloat);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glVertexAttrib4fv
+ * Signature: (ILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glVertexAttrib4fv
+  (JNIEnv *, jobject, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glVertexAttribPointer
+ * Signature: (IIIZILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glVertexAttribPointer__IIIZILjava_nio_Buffer_2
+  (JNIEnv *, jobject, jint, jint, jint, jboolean, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glVertexAttribPointer
+ * Signature: (IIIZII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glVertexAttribPointer__IIIZII
+  (JNIEnv *, jobject, jint, jint, jint, jboolean, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_ios_IOSGLES20
+ * Method:    glViewport
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_ios_IOSGLES20_glViewport
+  (JNIEnv *, jobject, jint, jint, jint, jint);
+
+#ifdef __cplusplus
+}
+#endif
+#endif
diff --git a/backends/gdx-backend-iosmonotouch/natives/jni.h b/backends/gdx-backend-iosmonotouch/natives/jni.h
new file mode 100644
index 0000000..f235288
--- /dev/null
+++ b/backends/gdx-backend-iosmonotouch/natives/jni.h
@@ -0,0 +1,401 @@
+/*
+  Copyright (C) 2004, 2005 Jeroen Frijters
+
+  This software is provided 'as-is', without any express or implied
+  warranty.  In no event will the authors be held liable for any damages
+  arising from the use of this software.
+
+  Permission is granted to anyone to use this software for any purpose,
+  including commercial applications, and to alter it and redistribute it
+  freely, subject to the following restrictions:
+
+  1. The origin of this software must not be misrepresented; you must not
+     claim that you wrote the original software. If you use this software
+     in a product, an acknowledgment in the product documentation would be
+     appreciated but is not required.
+  2. Altered source versions must be plainly marked as such, and must not be
+     misrepresented as being the original software.
+  3. This notice may not be removed or altered from any source distribution.
+
+  Jeroen Frijters
+  jeroen@frijters.net
+  
+*/
+#ifndef __JNI_H__
+#define __JNI_H__
+
+#ifdef _WIN32
+	#define JNICALL __stdcall
+	#ifdef __cplusplus
+		#define JNIEXPORT extern "C" __declspec(dllexport)
+	#else
+		#define JNIEXPORT __declspec(dllexport)
+	#endif
+#else
+	#define JNICALL
+	#ifdef __cplusplus
+		#define JNIEXPORT extern "C"
+	#else
+		#define JNIEXPORT
+	#endif
+	#include <stdarg.h>
+#endif
+
+typedef void* jobject;
+typedef void* jstring;
+typedef void* jweak;
+typedef void* jthrowable;
+typedef void* jclass;
+typedef void* jmethodID;
+typedef void* jfieldID;
+typedef void* jarray;
+typedef void* jobjectArray;
+typedef void* jbooleanArray;
+typedef void* jbyteArray;
+typedef void* jcharArray;
+typedef void* jshortArray;
+typedef void* jintArray;
+typedef void* jlongArray;
+typedef void* jfloatArray;
+typedef void* jdoubleArray;
+
+typedef unsigned char jboolean;
+typedef signed char jbyte;
+typedef unsigned short jchar;
+typedef short jshort;
+typedef int jint;
+#ifdef _MSC_VER
+	typedef __int64 jlong;
+#else
+	typedef long long int jlong;
+#endif
+typedef float jfloat;
+typedef double jdouble;
+typedef jint jsize;
+
+typedef struct
+{
+	char *name;
+	char *signature;
+	void *fnPtr;
+} JNINativeMethod;
+
+typedef union jvalue
+{
+    jboolean z;
+    jbyte    b;
+    jchar    c;
+    jshort   s;
+    jint     i;
+    jlong    j;
+    jfloat   f;
+    jdouble  d;
+    jobject  l;
+} jvalue;
+
+typedef void* JavaVM;
+typedef struct JNIEnv_methods *JNIEnv;
+
+struct JNIEnv_methods
+{
+	jint (JNICALL *GetMethodArgs)(JNIEnv* pEnv, jmethodID method, jbyte* sig);
+	void (JNICALL *reserved1)(JNIEnv* pEnv);
+	void (JNICALL *reserved2)(JNIEnv* pEnv);
+	void (JNICALL *reserved3)(JNIEnv* pEnv);
+
+	jint (JNICALL *GetVersion)(JNIEnv* pEnv);
+
+	jclass (JNICALL *DefineClass)(JNIEnv* pEnv, const char *name, jobject loader, const jbyte *buf, jsize len);
+	jclass (JNICALL *FindClass)(JNIEnv* pEnv, const char *name);
+
+	jmethodID (JNICALL *FromReflectedMethod)(JNIEnv* pEnv, jobject method);
+	jfieldID (JNICALL *FromReflectedField)(JNIEnv* pEnv, jobject field);
+	jobject (JNICALL *ToReflectedMethod)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, jboolean isStatic);
+
+	jclass (JNICALL *GetSuperclass)(JNIEnv* pEnv, jclass sub);
+	jboolean (JNICALL *IsAssignableFrom)(JNIEnv* pEnv, jclass sub, jclass sup);
+
+	jobject (JNICALL *ToReflectedField)(JNIEnv* pEnv, jclass clazz, jfieldID fieldID, jboolean isStatic);
+
+	jint (JNICALL *Throw)(JNIEnv* pEnv, jthrowable obj);
+	jint (JNICALL *ThrowNew)(JNIEnv* pEnv, jclass clazz, const char *msg);
+	jthrowable (JNICALL *ExceptionOccurred)(JNIEnv* pEnv);
+	void (JNICALL *ExceptionDescribe)(JNIEnv* pEnv);
+	void (JNICALL *ExceptionClear)(JNIEnv* pEnv);
+	void (JNICALL *FatalError)(JNIEnv* pEnv, const char *msg);
+
+	jint (JNICALL *PushLocalFrame)(JNIEnv* pEnv, jint capacity); 
+	jobject (JNICALL *PopLocalFrame)(JNIEnv* pEnv, jobject result);
+
+	jobject (JNICALL *NewGlobalRef)(JNIEnv* pEnv, jobject lobj);
+	void (JNICALL *DeleteGlobalRef)(JNIEnv* pEnv, jobject gref);
+	void (JNICALL *DeleteLocalRef)(JNIEnv* pEnv, jobject obj);
+	jboolean (JNICALL *IsSameObject)(JNIEnv* pEnv, jobject obj1, jobject obj2);
+
+	jobject (JNICALL *NewLocalRef)(JNIEnv* pEnv, jobject ref);
+	jint (JNICALL *EnsureLocalCapacity)(JNIEnv* pEnv, jint capacity); 
+
+	jobject (JNICALL *AllocObject)(JNIEnv* pEnv, jclass clazz);
+	jobject (JNICALL *NewObject)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, ...);
+	jobject (JNICALL *NewObjectV)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, va_list args);
+	jobject (JNICALL *NewObjectA)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, jvalue *args);
+
+	jclass (JNICALL *GetObjectClass)(JNIEnv* pEnv, jobject obj);
+	jboolean (JNICALL *IsInstanceOf)(JNIEnv* pEnv, jobject obj, jclass clazz);
+
+	jmethodID (JNICALL *GetMethodID)(JNIEnv* pEnv, jclass clazz, const char *name, const char *sig);
+
+	jobject (JNICALL *CallObjectMethod)(JNIEnv* pEnv, jobject obj, jmethodID methodID, ...);
+	jobject (JNICALL *CallObjectMethodV)(JNIEnv* pEnv, jobject obj, jmethodID methodID, va_list args);
+	jobject (JNICALL *CallObjectMethodA)(JNIEnv* pEnv, jobject obj, jmethodID methodID, jvalue * args);
+
+	jboolean (JNICALL *CallBooleanMethod)(JNIEnv* pEnv, jobject obj, jmethodID methodID, ...);
+	jboolean (JNICALL *CallBooleanMethodV)(JNIEnv* pEnv, jobject obj, jmethodID methodID, va_list args);
+	jboolean (JNICALL *CallBooleanMethodA)(JNIEnv* pEnv, jobject obj, jmethodID methodID, jvalue * args);
+
+	jbyte (JNICALL *CallByteMethod)(JNIEnv* pEnv, jobject obj, jmethodID methodID, ...);
+	jbyte (JNICALL *CallByteMethodV)(JNIEnv* pEnv, jobject obj, jmethodID methodID, va_list args);
+	jbyte (JNICALL *CallByteMethodA)(JNIEnv* pEnv, jobject obj, jmethodID methodID, jvalue *args);
+
+	jchar (JNICALL *CallCharMethod)(JNIEnv* pEnv, jobject obj, jmethodID methodID, ...);
+	jchar (JNICALL *CallCharMethodV)(JNIEnv* pEnv, jobject obj, jmethodID methodID, va_list args);
+	jchar (JNICALL *CallCharMethodA)(JNIEnv* pEnv, jobject obj, jmethodID methodID, jvalue *args);
+
+	jshort (JNICALL *CallShortMethod)(JNIEnv* pEnv, jobject obj, jmethodID methodID, ...);
+	jshort (JNICALL *CallShortMethodV)(JNIEnv* pEnv, jobject obj, jmethodID methodID, va_list args);
+	jshort (JNICALL *CallShortMethodA)(JNIEnv* pEnv, jobject obj, jmethodID methodID, jvalue *args);
+
+	jint (JNICALL *CallIntMethod)(JNIEnv* pEnv, jobject obj, jmethodID methodID, ...);
+	jint (JNICALL *CallIntMethodV)(JNIEnv* pEnv, jobject obj, jmethodID methodID, va_list args);
+	jint (JNICALL *CallIntMethodA)(JNIEnv* pEnv, jobject obj, jmethodID methodID, jvalue *args);
+
+	jlong (JNICALL *CallLongMethod)(JNIEnv* pEnv, jobject obj, jmethodID methodID, ...);
+	jlong (JNICALL *CallLongMethodV)(JNIEnv* pEnv, jobject obj, jmethodID methodID, va_list args);
+	jlong (JNICALL *CallLongMethodA)(JNIEnv* pEnv, jobject obj, jmethodID methodID, jvalue *args);
+
+	jfloat (JNICALL *CallFloatMethod)(JNIEnv* pEnv, jobject obj, jmethodID methodID, ...);
+	jfloat (JNICALL *CallFloatMethodV)(JNIEnv* pEnv, jobject obj, jmethodID methodID, va_list args);
+	jfloat (JNICALL *CallFloatMethodA)(JNIEnv* pEnv, jobject obj, jmethodID methodID, jvalue *args);
+
+	jdouble (JNICALL *CallDoubleMethod)(JNIEnv* pEnv, jobject obj, jmethodID methodID, ...);
+	jdouble (JNICALL *CallDoubleMethodV)(JNIEnv* pEnv, jobject obj, jmethodID methodID, va_list args);
+	jdouble (JNICALL *CallDoubleMethodA)(JNIEnv* pEnv, jobject obj, jmethodID methodID, jvalue *args);
+
+	void (JNICALL *CallVoidMethod)(JNIEnv* pEnv, jobject obj, jmethodID methodID, ...);
+	void (JNICALL *CallVoidMethodV)(JNIEnv* pEnv, jobject obj, jmethodID methodID, va_list args);
+	void (JNICALL *CallVoidMethodA)(JNIEnv* pEnv, jobject obj, jmethodID methodID, jvalue * args);
+
+	jobject (JNICALL *CallNonvirtualObjectMethod)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, ...);
+	jobject (JNICALL *CallNonvirtualObjectMethodV)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, va_list args);
+	jobject (JNICALL *CallNonvirtualObjectMethodA)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, jvalue * args);
+
+	jboolean (JNICALL *CallNonvirtualBooleanMethod)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, ...);
+	jboolean (JNICALL *CallNonvirtualBooleanMethodV)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, va_list args);
+	jboolean (JNICALL *CallNonvirtualBooleanMethodA)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, jvalue * args);
+
+	jbyte (JNICALL *CallNonvirtualByteMethod)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, ...);
+	jbyte (JNICALL *CallNonvirtualByteMethodV)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, va_list args);
+	jbyte (JNICALL *CallNonvirtualByteMethodA)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, jvalue *args);
+
+	jchar (JNICALL *CallNonvirtualCharMethod)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, ...);
+	jchar (JNICALL *CallNonvirtualCharMethodV)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, va_list args);
+	jchar (JNICALL *CallNonvirtualCharMethodA)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, jvalue *args);
+
+	jshort (JNICALL *CallNonvirtualShortMethod)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, ...);
+	jshort (JNICALL *CallNonvirtualShortMethodV)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, va_list args);
+	jshort (JNICALL *CallNonvirtualShortMethodA)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, jvalue *args);
+
+	jint (JNICALL *CallNonvirtualIntMethod)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, ...);
+	jint (JNICALL *CallNonvirtualIntMethodV)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, va_list args);
+	jint (JNICALL *CallNonvirtualIntMethodA)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, jvalue *args);
+
+	jlong (JNICALL *CallNonvirtualLongMethod)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, ...);
+	jlong (JNICALL *CallNonvirtualLongMethodV)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, va_list args);
+	jlong (JNICALL *CallNonvirtualLongMethodA)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, jvalue *args);
+
+	jfloat (JNICALL *CallNonvirtualFloatMethod)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, ...);
+	jfloat (JNICALL *CallNonvirtualFloatMethodV)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, va_list args);
+	jfloat (JNICALL *CallNonvirtualFloatMethodA)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, jvalue *args);
+
+	jdouble (JNICALL *CallNonvirtualDoubleMethod)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, ...);
+	jdouble (JNICALL *CallNonvirtualDoubleMethodV)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, va_list args);
+	jdouble (JNICALL *CallNonvirtualDoubleMethodA)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, jvalue *args);
+
+	void (JNICALL *CallNonvirtualVoidMethod)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, ...);
+	void (JNICALL *CallNonvirtualVoidMethodV)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, va_list args);
+	void (JNICALL *CallNonvirtualVoidMethodA)(JNIEnv* pEnv, jobject obj, jclass clazz, jmethodID methodID, jvalue * args);
+
+	jfieldID (JNICALL *GetFieldID)(JNIEnv* pEnv, jclass clazz, const char *name, const char *sig);
+
+	jobject (JNICALL *GetObjectField)(JNIEnv* pEnv, jobject obj, jfieldID fieldID);
+	jboolean (JNICALL *GetBooleanField)(JNIEnv* pEnv, jobject obj, jfieldID fieldID);
+	jbyte (JNICALL *GetByteField)(JNIEnv* pEnv, jobject obj, jfieldID fieldID);
+	jchar (JNICALL *GetCharField)(JNIEnv* pEnv, jobject obj, jfieldID fieldID);
+	jshort (JNICALL *GetShortField)(JNIEnv* pEnv, jobject obj, jfieldID fieldID);
+	jint (JNICALL *GetIntField)(JNIEnv* pEnv, jobject obj, jfieldID fieldID);
+	jlong (JNICALL *GetLongField)(JNIEnv* pEnv, jobject obj, jfieldID fieldID);
+	jfloat (JNICALL *GetFloatField)(JNIEnv* pEnv, jobject obj, jfieldID fieldID);
+	jdouble (JNICALL *GetDoubleField)(JNIEnv* pEnv, jobject obj, jfieldID fieldID);
+
+	void (JNICALL *SetObjectField)(JNIEnv* pEnv, jobject obj, jfieldID fieldID, jobject val);
+	void (JNICALL *SetBooleanField)(JNIEnv* pEnv, jobject obj, jfieldID fieldID, jboolean val);
+	void (JNICALL *SetByteField)(JNIEnv* pEnv, jobject obj, jfieldID fieldID, jbyte val);
+	void (JNICALL *SetCharField)(JNIEnv* pEnv, jobject obj, jfieldID fieldID, jchar val);
+	void (JNICALL *SetShortField)(JNIEnv* pEnv, jobject obj, jfieldID fieldID, jshort val);
+	void (JNICALL *SetIntField)(JNIEnv* pEnv, jobject obj, jfieldID fieldID, jint val);
+	void (JNICALL *SetLongField)(JNIEnv* pEnv, jobject obj, jfieldID fieldID, jlong val);
+	void (JNICALL *SetFloatField)(JNIEnv* pEnv, jobject obj, jfieldID fieldID, jfloat val);
+	void (JNICALL *SetDoubleField)(JNIEnv* pEnv, jobject obj, jfieldID fieldID, jdouble val);
+
+	jmethodID (JNICALL *GetStaticMethodID)(JNIEnv* pEnv, jclass clazz, const char *name, const char *sig);
+
+	jobject (JNICALL *CallStaticObjectMethod)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, ...);
+	jobject (JNICALL *CallStaticObjectMethodV)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, va_list args);
+	jobject (JNICALL *CallStaticObjectMethodA)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, jvalue *args);
+
+	jboolean (JNICALL *CallStaticBooleanMethod)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, ...);
+	jboolean (JNICALL *CallStaticBooleanMethodV)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, va_list args);
+	jboolean (JNICALL *CallStaticBooleanMethodA)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, jvalue *args);
+
+	jbyte (JNICALL *CallStaticByteMethod)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, ...);
+	jbyte (JNICALL *CallStaticByteMethodV)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, va_list args);
+	jbyte (JNICALL *CallStaticByteMethodA)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, jvalue *args);
+
+	jchar (JNICALL *CallStaticCharMethod)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, ...);
+	jchar (JNICALL *CallStaticCharMethodV)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, va_list args);
+	jchar (JNICALL *CallStaticCharMethodA)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, jvalue *args);
+
+	jshort (JNICALL *CallStaticShortMethod)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, ...);
+	jshort (JNICALL *CallStaticShortMethodV)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, va_list args);
+	jshort (JNICALL *CallStaticShortMethodA)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, jvalue *args);
+
+	jint (JNICALL *CallStaticIntMethod)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, ...);
+	jint (JNICALL *CallStaticIntMethodV)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, va_list args);
+	jint (JNICALL *CallStaticIntMethodA)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, jvalue *args);
+
+	jlong (JNICALL *CallStaticLongMethod)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, ...);
+	jlong (JNICALL *CallStaticLongMethodV)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, va_list args);
+	jlong (JNICALL *CallStaticLongMethodA)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, jvalue *args);
+
+	jfloat (JNICALL *CallStaticFloatMethod)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, ...);
+	jfloat (JNICALL *CallStaticFloatMethodV)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, va_list args);
+	jfloat (JNICALL *CallStaticFloatMethodA)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, jvalue *args);
+
+	jdouble (JNICALL *CallStaticDoubleMethod)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, ...);
+	jdouble (JNICALL *CallStaticDoubleMethodV)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, va_list args);
+	jdouble (JNICALL *CallStaticDoubleMethodA)(JNIEnv* pEnv, jclass clazz, jmethodID methodID, jvalue *args);
+
+	void (JNICALL *CallStaticVoidMethod)(JNIEnv* pEnv, jclass cls, jmethodID methodID, ...);
+	void (JNICALL *CallStaticVoidMethodV)(JNIEnv* pEnv, jclass cls, jmethodID methodID, va_list args);
+	void (JNICALL *CallStaticVoidMethodA)(JNIEnv* pEnv, jclass cls, jmethodID methodID, jvalue * args);
+
+	jfieldID (JNICALL *GetStaticFieldID)(JNIEnv* pEnv, jclass clazz, const char *name, const char *sig);
+	jobject (JNICALL *GetStaticObjectField)(JNIEnv* pEnv, jclass clazz, jfieldID fieldID);
+	jboolean (JNICALL *GetStaticBooleanField)(JNIEnv* pEnv, jclass clazz, jfieldID fieldID);
+	jbyte (JNICALL *GetStaticByteField)(JNIEnv* pEnv, jclass clazz, jfieldID fieldID);
+	jchar (JNICALL *GetStaticCharField)(JNIEnv* pEnv, jclass clazz, jfieldID fieldID);
+	jshort (JNICALL *GetStaticShortField)(JNIEnv* pEnv, jclass clazz, jfieldID fieldID);
+	jint (JNICALL *GetStaticIntField)(JNIEnv* pEnv, jclass clazz, jfieldID fieldID);
+	jlong (JNICALL *GetStaticLongField)(JNIEnv* pEnv, jclass clazz, jfieldID fieldID);
+	jfloat (JNICALL *GetStaticFloatField)(JNIEnv* pEnv, jclass clazz, jfieldID fieldID);
+	jdouble (JNICALL *GetStaticDoubleField)(JNIEnv* pEnv, jclass clazz, jfieldID fieldID);
+
+	void (JNICALL *SetStaticObjectField)(JNIEnv* pEnv, jclass clazz, jfieldID fieldID, jobject value);
+	void (JNICALL *SetStaticBooleanField)(JNIEnv* pEnv, jclass clazz, jfieldID fieldID, jboolean value);
+	void (JNICALL *SetStaticByteField)(JNIEnv* pEnv, jclass clazz, jfieldID fieldID, jbyte value);
+	void (JNICALL *SetStaticCharField)(JNIEnv* pEnv, jclass clazz, jfieldID fieldID, jchar value);
+	void (JNICALL *SetStaticShortField)(JNIEnv* pEnv, jclass clazz, jfieldID fieldID, jshort value);
+	void (JNICALL *SetStaticIntField)(JNIEnv* pEnv, jclass clazz, jfieldID fieldID, jint value);
+	void (JNICALL *SetStaticLongField)(JNIEnv* pEnv, jclass clazz, jfieldID fieldID, jlong value);
+	void (JNICALL *SetStaticFloatField)(JNIEnv* pEnv, jclass clazz, jfieldID fieldID, jfloat value);
+	void (JNICALL *SetStaticDoubleField)(JNIEnv* pEnv, jclass clazz, jfieldID fieldID, jdouble value);
+
+	jstring (JNICALL *NewString)(JNIEnv* pEnv, const jchar *unicode, jsize len);
+	jsize (JNICALL *GetStringLength)(JNIEnv* pEnv, jstring str);
+	const jchar *(JNICALL *GetStringChars)(JNIEnv* pEnv, jstring str, jboolean *isCopy);
+	void (JNICALL *ReleaseStringChars)(JNIEnv* pEnv, jstring str, const jchar *chars);
+
+	jstring (JNICALL *NewStringUTF)(JNIEnv* pEnv, const char *utf);
+	jsize (JNICALL *GetStringUTFLength)(JNIEnv* pEnv, jstring str);
+	const char* (JNICALL *GetStringUTFChars)(JNIEnv* pEnv, jstring str, jboolean *isCopy);
+	void (JNICALL *ReleaseStringUTFChars)(JNIEnv* pEnv, jstring str, const char* chars);
+
+	jsize (JNICALL *GetArrayLength)(JNIEnv* pEnv, jarray array);
+
+	jobjectArray (JNICALL *NewObjectArray)(JNIEnv* pEnv, jsize len, jclass clazz, jobject init);
+	jobject (JNICALL *GetObjectArrayElement)(JNIEnv* pEnv, jobjectArray array, jsize index);
+	void (JNICALL *SetObjectArrayElement)(JNIEnv* pEnv, jobjectArray array, jsize index, jobject val);
+
+	jbooleanArray (JNICALL *NewBooleanArray)(JNIEnv* pEnv, jsize len);
+	jbyteArray (JNICALL *NewByteArray)(JNIEnv* pEnv, jsize len);
+	jcharArray (JNICALL *NewCharArray)(JNIEnv* pEnv, jsize len);
+	jshortArray (JNICALL *NewShortArray)(JNIEnv* pEnv, jsize len);
+	jintArray (JNICALL *NewIntArray)(JNIEnv* pEnv, jsize len);
+	jlongArray (JNICALL *NewLongArray)(JNIEnv* pEnv, jsize len);
+	jfloatArray (JNICALL *NewFloatArray)(JNIEnv* pEnv, jsize len);
+	jdoubleArray (JNICALL *NewDoubleArray)(JNIEnv* pEnv, jsize len);
+
+	jboolean * (JNICALL *GetBooleanArrayElements)(JNIEnv* pEnv, jbooleanArray array, jboolean *isCopy);
+	jbyte * (JNICALL *GetByteArrayElements)(JNIEnv* pEnv, jbyteArray array, jboolean *isCopy);
+	jchar * (JNICALL *GetCharArrayElements)(JNIEnv* pEnv, jcharArray array, jboolean *isCopy);
+	jshort * (JNICALL *GetShortArrayElements)(JNIEnv* pEnv, jshortArray array, jboolean *isCopy);
+	jint * (JNICALL *GetIntArrayElements)(JNIEnv* pEnv, jintArray array, jboolean *isCopy);
+	jlong * (JNICALL *GetLongArrayElements)(JNIEnv* pEnv, jlongArray array, jboolean *isCopy);
+	jfloat * (JNICALL *GetFloatArrayElements)(JNIEnv* pEnv, jfloatArray array, jboolean *isCopy);
+	jdouble * (JNICALL *GetDoubleArrayElements)(JNIEnv* pEnv, jdoubleArray array, jboolean *isCopy);
+
+	void (JNICALL *ReleaseBooleanArrayElements)(JNIEnv* pEnv, jbooleanArray array, jboolean *elems, jint mode);
+	void (JNICALL *ReleaseByteArrayElements)(JNIEnv* pEnv, jbyteArray array, jbyte *elems, jint mode);
+	void (JNICALL *ReleaseCharArrayElements)(JNIEnv* pEnv, jcharArray array, jchar *elems, jint mode);
+	void (JNICALL *ReleaseShortArrayElements)(JNIEnv* pEnv, jshortArray array, jshort *elems, jint mode);
+	void (JNICALL *ReleaseIntArrayElements)(JNIEnv* pEnv, jintArray array, jint *elems, jint mode);
+	void (JNICALL *ReleaseLongArrayElements)(JNIEnv* pEnv, jlongArray array, jlong *elems, jint mode);
+	void (JNICALL *ReleaseFloatArrayElements)(JNIEnv* pEnv, jfloatArray array, jfloat *elems, jint mode);
+	void (JNICALL *ReleaseDoubleArrayElements)(JNIEnv* pEnv, jdoubleArray array, jdouble *elems, jint mode);
+
+	void (JNICALL *GetBooleanArrayRegion)(JNIEnv* pEnv, jbooleanArray array, jsize start, jsize l, jboolean *buf);
+	void (JNICALL *GetByteArrayRegion)(JNIEnv* pEnv, jbyteArray array, jsize start, jsize len, jbyte *buf);
+	void (JNICALL *GetCharArrayRegion)(JNIEnv* pEnv, jcharArray array, jsize start, jsize len, jchar *buf);
+	void (JNICALL *GetShortArrayRegion)(JNIEnv* pEnv, jshortArray array, jsize start, jsize len, jshort *buf);
+	void (JNICALL *GetIntArrayRegion)(JNIEnv* pEnv, jintArray array, jsize start, jsize len, jint *buf);
+	void (JNICALL *GetLongArrayRegion)(JNIEnv* pEnv, jlongArray array, jsize start, jsize len, jlong *buf);
+	void (JNICALL *GetFloatArrayRegion)(JNIEnv* pEnv, jfloatArray array, jsize start, jsize len, jfloat *buf);
+	void (JNICALL *GetDoubleArrayRegion)(JNIEnv* pEnv, jdoubleArray array, jsize start, jsize len, jdouble *buf);
+
+	void (JNICALL *SetBooleanArrayRegion)(JNIEnv* pEnv, jbooleanArray array, jsize start, jsize l, jboolean *buf);
+	void (JNICALL *SetByteArrayRegion)(JNIEnv* pEnv, jbyteArray array, jsize start, jsize len, jbyte *buf);
+	void (JNICALL *SetCharArrayRegion)(JNIEnv* pEnv, jcharArray array, jsize start, jsize len, jchar *buf);
+	void (JNICALL *SetShortArrayRegion)(JNIEnv* pEnv, jshortArray array, jsize start, jsize len, jshort *buf);
+	void (JNICALL *SetIntArrayRegion)(JNIEnv* pEnv, jintArray array, jsize start, jsize len, jint *buf);
+	void (JNICALL *SetLongArrayRegion)(JNIEnv* pEnv, jlongArray array, jsize start, jsize len, jlong *buf);
+	void (JNICALL *SetFloatArrayRegion)(JNIEnv* pEnv, jfloatArray array, jsize start, jsize len, jfloat *buf);
+	void (JNICALL *SetDoubleArrayRegion)(JNIEnv* pEnv, jdoubleArray array, jsize start, jsize len, jdouble *buf);
+
+	jint (JNICALL *RegisterNatives)(JNIEnv* pEnv, jclass clazz, const JNINativeMethod *methods, jint nMethods);
+	jint (JNICALL *UnregisterNatives)(JNIEnv* pEnv, jclass clazz);
+
+	jint (JNICALL *MonitorEnter)(JNIEnv* pEnv, jobject obj);
+	jint (JNICALL *MonitorExit)(JNIEnv* pEnv, jobject obj);
+
+	jint (JNICALL *GetJavaVM)(JNIEnv* pEnv, JavaVM **vm);
+
+	void (JNICALL *GetStringRegion)(JNIEnv* pEnv, jstring str, jsize start, jsize len, jchar *buf);
+	void (JNICALL *GetStringUTFRegion)(JNIEnv* pEnv, jstring str, jsize start, jsize len, char *buf);
+
+	void* (JNICALL *GetPrimitiveArrayCritical)(JNIEnv* pEnv, jarray array, jboolean *isCopy);
+	void (JNICALL *ReleasePrimitiveArrayCritical)(JNIEnv* pEnv, jarray array, void *carray, jint mode);
+
+	const jchar* (JNICALL *GetStringCritical)(JNIEnv* pEnv, jstring string, jboolean *isCopy);
+	void (JNICALL *ReleaseStringCritical)(JNIEnv* pEnv, jstring string, const jchar *cstring);
+
+	jweak (JNICALL *NewWeakGlobalRef)(JNIEnv* pEnv, jobject obj);
+	void (JNICALL *DeleteWeakGlobalRef)(JNIEnv* pEnv, jweak ref);
+
+	jboolean (JNICALL *ExceptionCheck)(JNIEnv* pEnv);
+
+	jobject (JNICALL *NewDirectByteBuffer)(JNIEnv* pEnv, void* address, jlong capacity);
+	void* (JNICALL *GetDirectBufferAddress)(JNIEnv* pEnv, jobject buf);
+	jlong (JNICALL *GetDirectBufferCapacity)(JNIEnv* pEnv, jobject buf);
+};
+
+#endif //__JNI_H__
diff --git a/backends/gdx-backend-iosmonotouch/natives/natives.xcodeproj/project.pbxproj b/backends/gdx-backend-iosmonotouch/natives/natives.xcodeproj/project.pbxproj
new file mode 100644
index 0000000..fbafe39
--- /dev/null
+++ b/backends/gdx-backend-iosmonotouch/natives/natives.xcodeproj/project.pbxproj
@@ -0,0 +1,964 @@
+// !$*UTF8*$!
+{
+	archiveVersion = 1;
+	classes = {
+	};
+	objectVersion = 46;
+	objects = {
+
+/* Begin PBXBuildFile section */
+		76056F79157C140D004CE04B /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 76056F78157C140D004CE04B /* Foundation.framework */; };
+		7605713E157C15EF004CE04B /* Box2D.h in Headers */ = {isa = PBXBuildFile; fileRef = 760570DB157C15EF004CE04B /* Box2D.h */; };
+		7605713F157C15EF004CE04B /* b2BroadPhase.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760570DE157C15EF004CE04B /* b2BroadPhase.cpp */; };
+		76057140157C15EF004CE04B /* b2BroadPhase.h in Headers */ = {isa = PBXBuildFile; fileRef = 760570DF157C15EF004CE04B /* b2BroadPhase.h */; };
+		76057141157C15EF004CE04B /* b2CollideCircle.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760570E0157C15EF004CE04B /* b2CollideCircle.cpp */; };
+		76057142157C15EF004CE04B /* b2CollideEdge.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760570E1157C15EF004CE04B /* b2CollideEdge.cpp */; };
+		76057143157C15EF004CE04B /* b2CollidePolygon.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760570E2157C15EF004CE04B /* b2CollidePolygon.cpp */; };
+		76057144157C15EF004CE04B /* b2Collision.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760570E3157C15EF004CE04B /* b2Collision.cpp */; };
+		76057145157C15EF004CE04B /* b2Collision.h in Headers */ = {isa = PBXBuildFile; fileRef = 760570E4157C15EF004CE04B /* b2Collision.h */; };
+		76057146157C15EF004CE04B /* b2Distance.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760570E5157C15EF004CE04B /* b2Distance.cpp */; };
+		76057147157C15EF004CE04B /* b2Distance.h in Headers */ = {isa = PBXBuildFile; fileRef = 760570E6157C15EF004CE04B /* b2Distance.h */; };
+		76057148157C15EF004CE04B /* b2DynamicTree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760570E7157C15EF004CE04B /* b2DynamicTree.cpp */; };
+		76057149157C15EF004CE04B /* b2DynamicTree.h in Headers */ = {isa = PBXBuildFile; fileRef = 760570E8157C15EF004CE04B /* b2DynamicTree.h */; };
+		7605714A157C15EF004CE04B /* b2TimeOfImpact.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760570E9157C15EF004CE04B /* b2TimeOfImpact.cpp */; };
+		7605714B157C15EF004CE04B /* b2TimeOfImpact.h in Headers */ = {isa = PBXBuildFile; fileRef = 760570EA157C15EF004CE04B /* b2TimeOfImpact.h */; };
+		7605714C157C15EF004CE04B /* b2ChainShape.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760570EC157C15EF004CE04B /* b2ChainShape.cpp */; };
+		7605714D157C15EF004CE04B /* b2ChainShape.h in Headers */ = {isa = PBXBuildFile; fileRef = 760570ED157C15EF004CE04B /* b2ChainShape.h */; };
+		7605714E157C15EF004CE04B /* b2CircleShape.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760570EE157C15EF004CE04B /* b2CircleShape.cpp */; };
+		7605714F157C15EF004CE04B /* b2CircleShape.h in Headers */ = {isa = PBXBuildFile; fileRef = 760570EF157C15EF004CE04B /* b2CircleShape.h */; };
+		76057150157C15EF004CE04B /* b2EdgeShape.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760570F0157C15EF004CE04B /* b2EdgeShape.cpp */; };
+		76057151157C15EF004CE04B /* b2EdgeShape.h in Headers */ = {isa = PBXBuildFile; fileRef = 760570F1157C15EF004CE04B /* b2EdgeShape.h */; };
+		76057152157C15EF004CE04B /* b2PolygonShape.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760570F2157C15EF004CE04B /* b2PolygonShape.cpp */; };
+		76057153157C15EF004CE04B /* b2PolygonShape.h in Headers */ = {isa = PBXBuildFile; fileRef = 760570F3157C15EF004CE04B /* b2PolygonShape.h */; };
+		76057154157C15EF004CE04B /* b2Shape.h in Headers */ = {isa = PBXBuildFile; fileRef = 760570F4157C15EF004CE04B /* b2Shape.h */; };
+		76057155157C15EF004CE04B /* b2BlockAllocator.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760570F6157C15EF004CE04B /* b2BlockAllocator.cpp */; };
+		76057156157C15EF004CE04B /* b2BlockAllocator.h in Headers */ = {isa = PBXBuildFile; fileRef = 760570F7157C15EF004CE04B /* b2BlockAllocator.h */; };
+		76057157157C15EF004CE04B /* b2Draw.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760570F8157C15EF004CE04B /* b2Draw.cpp */; };
+		76057158157C15EF004CE04B /* b2Draw.h in Headers */ = {isa = PBXBuildFile; fileRef = 760570F9157C15EF004CE04B /* b2Draw.h */; };
+		76057159157C15EF004CE04B /* b2GrowableStack.h in Headers */ = {isa = PBXBuildFile; fileRef = 760570FA157C15EF004CE04B /* b2GrowableStack.h */; };
+		7605715A157C15EF004CE04B /* b2Math.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760570FB157C15EF004CE04B /* b2Math.cpp */; };
+		7605715B157C15EF004CE04B /* b2Math.h in Headers */ = {isa = PBXBuildFile; fileRef = 760570FC157C15EF004CE04B /* b2Math.h */; };
+		7605715C157C15EF004CE04B /* b2Settings.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760570FD157C15EF004CE04B /* b2Settings.cpp */; };
+		7605715D157C15EF004CE04B /* b2Settings.h in Headers */ = {isa = PBXBuildFile; fileRef = 760570FE157C15EF004CE04B /* b2Settings.h */; };
+		7605715E157C15EF004CE04B /* b2StackAllocator.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760570FF157C15EF004CE04B /* b2StackAllocator.cpp */; };
+		7605715F157C15EF004CE04B /* b2StackAllocator.h in Headers */ = {isa = PBXBuildFile; fileRef = 76057100157C15EF004CE04B /* b2StackAllocator.h */; };
+		76057160157C15EF004CE04B /* b2Timer.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 76057101157C15EF004CE04B /* b2Timer.cpp */; };
+		76057161157C15EF004CE04B /* b2Timer.h in Headers */ = {isa = PBXBuildFile; fileRef = 76057102157C15EF004CE04B /* b2Timer.h */; };
+		76057162157C15EF004CE04B /* b2Body.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 76057104157C15EF004CE04B /* b2Body.cpp */; };
+		76057163157C15EF004CE04B /* b2Body.h in Headers */ = {isa = PBXBuildFile; fileRef = 76057105157C15EF004CE04B /* b2Body.h */; };
+		76057164157C15EF004CE04B /* b2ContactManager.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 76057106157C15EF004CE04B /* b2ContactManager.cpp */; };
+		76057165157C15EF004CE04B /* b2ContactManager.h in Headers */ = {isa = PBXBuildFile; fileRef = 76057107157C15EF004CE04B /* b2ContactManager.h */; };
+		76057166157C15EF004CE04B /* b2Fixture.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 76057108157C15EF004CE04B /* b2Fixture.cpp */; };
+		76057167157C15EF004CE04B /* b2Fixture.h in Headers */ = {isa = PBXBuildFile; fileRef = 76057109157C15EF004CE04B /* b2Fixture.h */; };
+		76057168157C15EF004CE04B /* b2Island.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 7605710A157C15EF004CE04B /* b2Island.cpp */; };
+		76057169157C15EF004CE04B /* b2Island.h in Headers */ = {isa = PBXBuildFile; fileRef = 7605710B157C15EF004CE04B /* b2Island.h */; };
+		7605716A157C15EF004CE04B /* b2TimeStep.h in Headers */ = {isa = PBXBuildFile; fileRef = 7605710C157C15EF004CE04B /* b2TimeStep.h */; };
+		7605716B157C15EF004CE04B /* b2World.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 7605710D157C15EF004CE04B /* b2World.cpp */; };
+		7605716C157C15EF004CE04B /* b2World.h in Headers */ = {isa = PBXBuildFile; fileRef = 7605710E157C15EF004CE04B /* b2World.h */; };
+		7605716D157C15EF004CE04B /* b2WorldCallbacks.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 7605710F157C15EF004CE04B /* b2WorldCallbacks.cpp */; };
+		7605716E157C15EF004CE04B /* b2WorldCallbacks.h in Headers */ = {isa = PBXBuildFile; fileRef = 76057110157C15EF004CE04B /* b2WorldCallbacks.h */; };
+		7605716F157C15EF004CE04B /* b2ChainAndCircleContact.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 76057112157C15EF004CE04B /* b2ChainAndCircleContact.cpp */; };
+		76057170157C15EF004CE04B /* b2ChainAndCircleContact.h in Headers */ = {isa = PBXBuildFile; fileRef = 76057113157C15EF004CE04B /* b2ChainAndCircleContact.h */; };
+		76057171157C15EF004CE04B /* b2ChainAndPolygonContact.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 76057114157C15EF004CE04B /* b2ChainAndPolygonContact.cpp */; };
+		76057172157C15EF004CE04B /* b2ChainAndPolygonContact.h in Headers */ = {isa = PBXBuildFile; fileRef = 76057115157C15EF004CE04B /* b2ChainAndPolygonContact.h */; };
+		76057173157C15EF004CE04B /* b2CircleContact.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 76057116157C15EF004CE04B /* b2CircleContact.cpp */; };
+		76057174157C15EF004CE04B /* b2CircleContact.h in Headers */ = {isa = PBXBuildFile; fileRef = 76057117157C15EF004CE04B /* b2CircleContact.h */; };
+		76057175157C15EF004CE04B /* b2Contact.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 76057118157C15EF004CE04B /* b2Contact.cpp */; };
+		76057176157C15EF004CE04B /* b2Contact.h in Headers */ = {isa = PBXBuildFile; fileRef = 76057119157C15EF004CE04B /* b2Contact.h */; };
+		76057177157C15EF004CE04B /* b2ContactSolver.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 7605711A157C15EF004CE04B /* b2ContactSolver.cpp */; };
+		76057178157C15EF004CE04B /* b2ContactSolver.h in Headers */ = {isa = PBXBuildFile; fileRef = 7605711B157C15EF004CE04B /* b2ContactSolver.h */; };
+		76057179157C15EF004CE04B /* b2EdgeAndCircleContact.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 7605711C157C15EF004CE04B /* b2EdgeAndCircleContact.cpp */; };
+		7605717A157C15EF004CE04B /* b2EdgeAndCircleContact.h in Headers */ = {isa = PBXBuildFile; fileRef = 7605711D157C15EF004CE04B /* b2EdgeAndCircleContact.h */; };
+		7605717B157C15EF004CE04B /* b2EdgeAndPolygonContact.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 7605711E157C15EF004CE04B /* b2EdgeAndPolygonContact.cpp */; };
+		7605717C157C15EF004CE04B /* b2EdgeAndPolygonContact.h in Headers */ = {isa = PBXBuildFile; fileRef = 7605711F157C15EF004CE04B /* b2EdgeAndPolygonContact.h */; };
+		7605717D157C15EF004CE04B /* b2PolygonAndCircleContact.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 76057120157C15EF004CE04B /* b2PolygonAndCircleContact.cpp */; };
+		7605717E157C15EF004CE04B /* b2PolygonAndCircleContact.h in Headers */ = {isa = PBXBuildFile; fileRef = 76057121157C15EF004CE04B /* b2PolygonAndCircleContact.h */; };
+		7605717F157C15EF004CE04B /* b2PolygonContact.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 76057122157C15EF004CE04B /* b2PolygonContact.cpp */; };
+		76057180157C15EF004CE04B /* b2PolygonContact.h in Headers */ = {isa = PBXBuildFile; fileRef = 76057123157C15EF004CE04B /* b2PolygonContact.h */; };
+		76057181157C15EF004CE04B /* b2DistanceJoint.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 76057125157C15EF004CE04B /* b2DistanceJoint.cpp */; };
+		76057182157C15EF004CE04B /* b2DistanceJoint.h in Headers */ = {isa = PBXBuildFile; fileRef = 76057126157C15EF004CE04B /* b2DistanceJoint.h */; };
+		76057183157C15EF004CE04B /* b2FrictionJoint.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 76057127157C15EF004CE04B /* b2FrictionJoint.cpp */; };
+		76057184157C15EF004CE04B /* b2FrictionJoint.h in Headers */ = {isa = PBXBuildFile; fileRef = 76057128157C15EF004CE04B /* b2FrictionJoint.h */; };
+		76057185157C15EF004CE04B /* b2GearJoint.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 76057129157C15EF004CE04B /* b2GearJoint.cpp */; };
+		76057186157C15EF004CE04B /* b2GearJoint.h in Headers */ = {isa = PBXBuildFile; fileRef = 7605712A157C15EF004CE04B /* b2GearJoint.h */; };
+		76057187157C15EF004CE04B /* b2Joint.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 7605712B157C15EF004CE04B /* b2Joint.cpp */; };
+		76057188157C15EF004CE04B /* b2Joint.h in Headers */ = {isa = PBXBuildFile; fileRef = 7605712C157C15EF004CE04B /* b2Joint.h */; };
+		76057189157C15EF004CE04B /* b2MouseJoint.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 7605712D157C15EF004CE04B /* b2MouseJoint.cpp */; };
+		7605718A157C15EF004CE04B /* b2MouseJoint.h in Headers */ = {isa = PBXBuildFile; fileRef = 7605712E157C15EF004CE04B /* b2MouseJoint.h */; };
+		7605718B157C15EF004CE04B /* b2PrismaticJoint.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 7605712F157C15EF004CE04B /* b2PrismaticJoint.cpp */; };
+		7605718C157C15EF004CE04B /* b2PrismaticJoint.h in Headers */ = {isa = PBXBuildFile; fileRef = 76057130157C15EF004CE04B /* b2PrismaticJoint.h */; };
+		7605718D157C15EF004CE04B /* b2PulleyJoint.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 76057131157C15EF004CE04B /* b2PulleyJoint.cpp */; };
+		7605718E157C15EF004CE04B /* b2PulleyJoint.h in Headers */ = {isa = PBXBuildFile; fileRef = 76057132157C15EF004CE04B /* b2PulleyJoint.h */; };
+		7605718F157C15EF004CE04B /* b2RevoluteJoint.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 76057133157C15EF004CE04B /* b2RevoluteJoint.cpp */; };
+		76057190157C15EF004CE04B /* b2RevoluteJoint.h in Headers */ = {isa = PBXBuildFile; fileRef = 76057134157C15EF004CE04B /* b2RevoluteJoint.h */; };
+		76057191157C15EF004CE04B /* b2RopeJoint.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 76057135157C15EF004CE04B /* b2RopeJoint.cpp */; };
+		76057192157C15EF004CE04B /* b2RopeJoint.h in Headers */ = {isa = PBXBuildFile; fileRef = 76057136157C15EF004CE04B /* b2RopeJoint.h */; };
+		76057193157C15EF004CE04B /* b2WeldJoint.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 76057137157C15EF004CE04B /* b2WeldJoint.cpp */; };
+		76057194157C15EF004CE04B /* b2WeldJoint.h in Headers */ = {isa = PBXBuildFile; fileRef = 76057138157C15EF004CE04B /* b2WeldJoint.h */; };
+		76057195157C15EF004CE04B /* b2WheelJoint.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 76057139157C15EF004CE04B /* b2WheelJoint.cpp */; };
+		76057196157C15EF004CE04B /* b2WheelJoint.h in Headers */ = {isa = PBXBuildFile; fileRef = 7605713A157C15EF004CE04B /* b2WheelJoint.h */; };
+		76057197157C15EF004CE04B /* b2Rope.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 7605713C157C15EF004CE04B /* b2Rope.cpp */; };
+		76057198157C15EF004CE04B /* b2Rope.h in Headers */ = {isa = PBXBuildFile; fileRef = 7605713D157C15EF004CE04B /* b2Rope.h */; };
+		760571E1157C1713004CE04B /* com.badlogic.gdx.graphics.g2d.Gdx2DPixmap.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 76057199157C1713004CE04B /* com.badlogic.gdx.graphics.g2d.Gdx2DPixmap.cpp */; };
+		760571E2157C1713004CE04B /* com.badlogic.gdx.graphics.g2d.Gdx2DPixmap.h in Headers */ = {isa = PBXBuildFile; fileRef = 7605719A157C1713004CE04B /* com.badlogic.gdx.graphics.g2d.Gdx2DPixmap.h */; };
+		760571E3157C1713004CE04B /* com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Jni.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 7605719B157C1713004CE04B /* com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Jni.cpp */; };
+		760571E4157C1713004CE04B /* com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Jni.h in Headers */ = {isa = PBXBuildFile; fileRef = 7605719C157C1713004CE04B /* com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Jni.h */; };
+		760571E5157C1713004CE04B /* com.badlogic.gdx.graphics.glutils.ETC1.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 7605719D157C1713004CE04B /* com.badlogic.gdx.graphics.glutils.ETC1.cpp */; };
+		760571E6157C1713004CE04B /* com.badlogic.gdx.graphics.glutils.ETC1.h in Headers */ = {isa = PBXBuildFile; fileRef = 7605719E157C1713004CE04B /* com.badlogic.gdx.graphics.glutils.ETC1.h */; };
+		760571E7157C1713004CE04B /* com.badlogic.gdx.math.Matrix4.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 7605719F157C1713004CE04B /* com.badlogic.gdx.math.Matrix4.cpp */; };
+		760571E8157C1713004CE04B /* com.badlogic.gdx.math.Matrix4.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571A0157C1713004CE04B /* com.badlogic.gdx.math.Matrix4.h */; };
+		760571E9157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Body.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760571A1157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Body.cpp */; };
+		760571EA157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Body.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571A2157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Body.h */; };
+		760571EB157C1713004CE04B /* com.badlogic.gdx.physics.box2d.ChainShape.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760571A3157C1713004CE04B /* com.badlogic.gdx.physics.box2d.ChainShape.cpp */; };
+		760571EC157C1713004CE04B /* com.badlogic.gdx.physics.box2d.ChainShape.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571A4157C1713004CE04B /* com.badlogic.gdx.physics.box2d.ChainShape.h */; };
+		760571ED157C1713004CE04B /* com.badlogic.gdx.physics.box2d.CircleShape.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760571A5157C1713004CE04B /* com.badlogic.gdx.physics.box2d.CircleShape.cpp */; };
+		760571EE157C1713004CE04B /* com.badlogic.gdx.physics.box2d.CircleShape.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571A6157C1713004CE04B /* com.badlogic.gdx.physics.box2d.CircleShape.h */; };
+		760571EF157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Contact.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760571A7157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Contact.cpp */; };
+		760571F0157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Contact.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571A8157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Contact.h */; };
+		760571F1157C1713004CE04B /* com.badlogic.gdx.physics.box2d.ContactImpulse.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760571A9157C1713004CE04B /* com.badlogic.gdx.physics.box2d.ContactImpulse.cpp */; };
+		760571F2157C1713004CE04B /* com.badlogic.gdx.physics.box2d.ContactImpulse.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571AA157C1713004CE04B /* com.badlogic.gdx.physics.box2d.ContactImpulse.h */; };
+		760571F3157C1713004CE04B /* com.badlogic.gdx.physics.box2d.EdgeShape.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760571AB157C1713004CE04B /* com.badlogic.gdx.physics.box2d.EdgeShape.cpp */; };
+		760571F4157C1713004CE04B /* com.badlogic.gdx.physics.box2d.EdgeShape.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571AC157C1713004CE04B /* com.badlogic.gdx.physics.box2d.EdgeShape.h */; };
+		760571F5157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Fixture.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760571AD157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Fixture.cpp */; };
+		760571F6157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Fixture.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571AE157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Fixture.h */; };
+		760571F7157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Joint.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760571AF157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Joint.cpp */; };
+		760571F8157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Joint.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571B0157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Joint.h */; };
+		760571F9157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.DistanceJoint.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760571B1157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.DistanceJoint.cpp */; };
+		760571FA157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.DistanceJoint.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571B2157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.DistanceJoint.h */; };
+		760571FB157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.FrictionJoint.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760571B3157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.FrictionJoint.cpp */; };
+		760571FC157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.FrictionJoint.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571B4157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.FrictionJoint.h */; };
+		760571FD157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.GearJoint.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760571B5157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.GearJoint.cpp */; };
+		760571FE157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.GearJoint.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571B6157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.GearJoint.h */; };
+		760571FF157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.MouseJoint.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760571B7157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.MouseJoint.cpp */; };
+		76057200157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.MouseJoint.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571B8157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.MouseJoint.h */; };
+		76057201157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.PrismaticJoint.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760571B9157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.PrismaticJoint.cpp */; };
+		76057202157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.PrismaticJoint.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571BA157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.PrismaticJoint.h */; };
+		76057203157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.PulleyJoint.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760571BB157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.PulleyJoint.cpp */; };
+		76057204157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.PulleyJoint.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571BC157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.PulleyJoint.h */; };
+		76057205157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.RevoluteJoint.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760571BD157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.RevoluteJoint.cpp */; };
+		76057206157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.RevoluteJoint.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571BE157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.RevoluteJoint.h */; };
+		76057207157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.RopeJoint.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760571BF157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.RopeJoint.cpp */; };
+		76057208157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.RopeJoint.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571C0157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.RopeJoint.h */; };
+		76057209157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.WheelJoint.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760571C1157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.WheelJoint.cpp */; };
+		7605720A157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.WheelJoint.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571C2157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.WheelJoint.h */; };
+		7605720B157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Manifold.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760571C3157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Manifold.cpp */; };
+		7605720C157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Manifold.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571C4157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Manifold.h */; };
+		7605720D157C1713004CE04B /* com.badlogic.gdx.physics.box2d.PolygonShape.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760571C5157C1713004CE04B /* com.badlogic.gdx.physics.box2d.PolygonShape.cpp */; };
+		7605720E157C1713004CE04B /* com.badlogic.gdx.physics.box2d.PolygonShape.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571C6157C1713004CE04B /* com.badlogic.gdx.physics.box2d.PolygonShape.h */; };
+		7605720F157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Shape.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760571C7157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Shape.cpp */; };
+		76057210157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Shape.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571C8157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Shape.h */; };
+		76057211157C1713004CE04B /* com.badlogic.gdx.physics.box2d.World.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760571C9157C1713004CE04B /* com.badlogic.gdx.physics.box2d.World.cpp */; };
+		76057212157C1713004CE04B /* com.badlogic.gdx.physics.box2d.World.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571CA157C1713004CE04B /* com.badlogic.gdx.physics.box2d.World.h */; };
+		76057213157C1713004CE04B /* com.badlogic.gdx.utils.BufferUtils.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760571CB157C1713004CE04B /* com.badlogic.gdx.utils.BufferUtils.cpp */; };
+		76057214157C1713004CE04B /* com.badlogic.gdx.utils.BufferUtils.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571CC157C1713004CE04B /* com.badlogic.gdx.utils.BufferUtils.h */; };
+		76057215157C1713004CE04B /* etc1_utils.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 760571CE157C1713004CE04B /* etc1_utils.cpp */; };
+		76057216157C1713004CE04B /* etc1_utils.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571CF157C1713004CE04B /* etc1_utils.h */; };
+		76057217157C1713004CE04B /* gdx2d.c in Sources */ = {isa = PBXBuildFile; fileRef = 760571D1157C1713004CE04B /* gdx2d.c */; };
+		76057218157C1713004CE04B /* gdx2d.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571D2157C1713004CE04B /* gdx2d.h */; };
+		76057219157C1713004CE04B /* stb_image.c in Sources */ = {isa = PBXBuildFile; fileRef = 760571D3157C1713004CE04B /* stb_image.c */; };
+		7605721A157C1713004CE04B /* classfile_constants.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571D5157C1713004CE04B /* classfile_constants.h */; };
+		7605721B157C1713004CE04B /* jawt.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571D6157C1713004CE04B /* jawt.h */; };
+		7605721C157C1713004CE04B /* jdwpTransport.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571D7157C1713004CE04B /* jdwpTransport.h */; };
+		7605721D157C1713004CE04B /* jni.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571D8157C1713004CE04B /* jni.h */; };
+		7605721E157C1713004CE04B /* jawt_md.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571DA157C1713004CE04B /* jawt_md.h */; };
+		7605721F157C1713004CE04B /* jni_md.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571DB157C1713004CE04B /* jni_md.h */; };
+		76057220157C1713004CE04B /* jni_md.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571DD157C1713004CE04B /* jni_md.h */; };
+		76057221157C1713004CE04B /* jawt_md.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571DF157C1713004CE04B /* jawt_md.h */; };
+		76057222157C1713004CE04B /* jni_md.h in Headers */ = {isa = PBXBuildFile; fileRef = 760571E0157C1713004CE04B /* jni_md.h */; };
+		7657C33E1582B4FF0067030A /* iosgles20.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 7657C33C1582B4FF0067030A /* iosgles20.cpp */; };
+		7657C33F1582B4FF0067030A /* iosgles20.h in Headers */ = {isa = PBXBuildFile; fileRef = 7657C33D1582B4FF0067030A /* iosgles20.h */; };
+/* End PBXBuildFile section */
+
+/* Begin PBXFileReference section */
+		76056F75157C140D004CE04B /* libnatives.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = libnatives.a; sourceTree = BUILT_PRODUCTS_DIR; };
+		76056F78157C140D004CE04B /* Foundation.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = Foundation.framework; path = System/Library/Frameworks/Foundation.framework; sourceTree = SDKROOT; };
+		760570DB157C15EF004CE04B /* Box2D.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = Box2D.h; sourceTree = "<group>"; };
+		760570DC157C15EF004CE04B /* CHANGES */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = CHANGES; sourceTree = "<group>"; };
+		760570DE157C15EF004CE04B /* b2BroadPhase.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2BroadPhase.cpp; sourceTree = "<group>"; };
+		760570DF157C15EF004CE04B /* b2BroadPhase.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2BroadPhase.h; sourceTree = "<group>"; };
+		760570E0157C15EF004CE04B /* b2CollideCircle.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2CollideCircle.cpp; sourceTree = "<group>"; };
+		760570E1157C15EF004CE04B /* b2CollideEdge.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2CollideEdge.cpp; sourceTree = "<group>"; };
+		760570E2157C15EF004CE04B /* b2CollidePolygon.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2CollidePolygon.cpp; sourceTree = "<group>"; };
+		760570E3157C15EF004CE04B /* b2Collision.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2Collision.cpp; sourceTree = "<group>"; };
+		760570E4157C15EF004CE04B /* b2Collision.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2Collision.h; sourceTree = "<group>"; };
+		760570E5157C15EF004CE04B /* b2Distance.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2Distance.cpp; sourceTree = "<group>"; };
+		760570E6157C15EF004CE04B /* b2Distance.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2Distance.h; sourceTree = "<group>"; };
+		760570E7157C15EF004CE04B /* b2DynamicTree.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2DynamicTree.cpp; sourceTree = "<group>"; };
+		760570E8157C15EF004CE04B /* b2DynamicTree.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2DynamicTree.h; sourceTree = "<group>"; };
+		760570E9157C15EF004CE04B /* b2TimeOfImpact.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2TimeOfImpact.cpp; sourceTree = "<group>"; };
+		760570EA157C15EF004CE04B /* b2TimeOfImpact.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2TimeOfImpact.h; sourceTree = "<group>"; };
+		760570EC157C15EF004CE04B /* b2ChainShape.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2ChainShape.cpp; sourceTree = "<group>"; };
+		760570ED157C15EF004CE04B /* b2ChainShape.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2ChainShape.h; sourceTree = "<group>"; };
+		760570EE157C15EF004CE04B /* b2CircleShape.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2CircleShape.cpp; sourceTree = "<group>"; };
+		760570EF157C15EF004CE04B /* b2CircleShape.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2CircleShape.h; sourceTree = "<group>"; };
+		760570F0157C15EF004CE04B /* b2EdgeShape.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2EdgeShape.cpp; sourceTree = "<group>"; };
+		760570F1157C15EF004CE04B /* b2EdgeShape.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2EdgeShape.h; sourceTree = "<group>"; };
+		760570F2157C15EF004CE04B /* b2PolygonShape.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2PolygonShape.cpp; sourceTree = "<group>"; };
+		760570F3157C15EF004CE04B /* b2PolygonShape.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2PolygonShape.h; sourceTree = "<group>"; };
+		760570F4157C15EF004CE04B /* b2Shape.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2Shape.h; sourceTree = "<group>"; };
+		760570F6157C15EF004CE04B /* b2BlockAllocator.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2BlockAllocator.cpp; sourceTree = "<group>"; };
+		760570F7157C15EF004CE04B /* b2BlockAllocator.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2BlockAllocator.h; sourceTree = "<group>"; };
+		760570F8157C15EF004CE04B /* b2Draw.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2Draw.cpp; sourceTree = "<group>"; };
+		760570F9157C15EF004CE04B /* b2Draw.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2Draw.h; sourceTree = "<group>"; };
+		760570FA157C15EF004CE04B /* b2GrowableStack.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2GrowableStack.h; sourceTree = "<group>"; };
+		760570FB157C15EF004CE04B /* b2Math.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2Math.cpp; sourceTree = "<group>"; };
+		760570FC157C15EF004CE04B /* b2Math.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2Math.h; sourceTree = "<group>"; };
+		760570FD157C15EF004CE04B /* b2Settings.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2Settings.cpp; sourceTree = "<group>"; };
+		760570FE157C15EF004CE04B /* b2Settings.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2Settings.h; sourceTree = "<group>"; };
+		760570FF157C15EF004CE04B /* b2StackAllocator.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2StackAllocator.cpp; sourceTree = "<group>"; };
+		76057100157C15EF004CE04B /* b2StackAllocator.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2StackAllocator.h; sourceTree = "<group>"; };
+		76057101157C15EF004CE04B /* b2Timer.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2Timer.cpp; sourceTree = "<group>"; };
+		76057102157C15EF004CE04B /* b2Timer.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2Timer.h; sourceTree = "<group>"; };
+		76057104157C15EF004CE04B /* b2Body.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2Body.cpp; sourceTree = "<group>"; };
+		76057105157C15EF004CE04B /* b2Body.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2Body.h; sourceTree = "<group>"; };
+		76057106157C15EF004CE04B /* b2ContactManager.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2ContactManager.cpp; sourceTree = "<group>"; };
+		76057107157C15EF004CE04B /* b2ContactManager.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2ContactManager.h; sourceTree = "<group>"; };
+		76057108157C15EF004CE04B /* b2Fixture.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2Fixture.cpp; sourceTree = "<group>"; };
+		76057109157C15EF004CE04B /* b2Fixture.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2Fixture.h; sourceTree = "<group>"; };
+		7605710A157C15EF004CE04B /* b2Island.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2Island.cpp; sourceTree = "<group>"; };
+		7605710B157C15EF004CE04B /* b2Island.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2Island.h; sourceTree = "<group>"; };
+		7605710C157C15EF004CE04B /* b2TimeStep.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2TimeStep.h; sourceTree = "<group>"; };
+		7605710D157C15EF004CE04B /* b2World.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2World.cpp; sourceTree = "<group>"; };
+		7605710E157C15EF004CE04B /* b2World.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2World.h; sourceTree = "<group>"; };
+		7605710F157C15EF004CE04B /* b2WorldCallbacks.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2WorldCallbacks.cpp; sourceTree = "<group>"; };
+		76057110157C15EF004CE04B /* b2WorldCallbacks.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2WorldCallbacks.h; sourceTree = "<group>"; };
+		76057112157C15EF004CE04B /* b2ChainAndCircleContact.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2ChainAndCircleContact.cpp; sourceTree = "<group>"; };
+		76057113157C15EF004CE04B /* b2ChainAndCircleContact.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2ChainAndCircleContact.h; sourceTree = "<group>"; };
+		76057114157C15EF004CE04B /* b2ChainAndPolygonContact.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2ChainAndPolygonContact.cpp; sourceTree = "<group>"; };
+		76057115157C15EF004CE04B /* b2ChainAndPolygonContact.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2ChainAndPolygonContact.h; sourceTree = "<group>"; };
+		76057116157C15EF004CE04B /* b2CircleContact.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2CircleContact.cpp; sourceTree = "<group>"; };
+		76057117157C15EF004CE04B /* b2CircleContact.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2CircleContact.h; sourceTree = "<group>"; };
+		76057118157C15EF004CE04B /* b2Contact.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2Contact.cpp; sourceTree = "<group>"; };
+		76057119157C15EF004CE04B /* b2Contact.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2Contact.h; sourceTree = "<group>"; };
+		7605711A157C15EF004CE04B /* b2ContactSolver.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2ContactSolver.cpp; sourceTree = "<group>"; };
+		7605711B157C15EF004CE04B /* b2ContactSolver.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2ContactSolver.h; sourceTree = "<group>"; };
+		7605711C157C15EF004CE04B /* b2EdgeAndCircleContact.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2EdgeAndCircleContact.cpp; sourceTree = "<group>"; };
+		7605711D157C15EF004CE04B /* b2EdgeAndCircleContact.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2EdgeAndCircleContact.h; sourceTree = "<group>"; };
+		7605711E157C15EF004CE04B /* b2EdgeAndPolygonContact.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2EdgeAndPolygonContact.cpp; sourceTree = "<group>"; };
+		7605711F157C15EF004CE04B /* b2EdgeAndPolygonContact.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2EdgeAndPolygonContact.h; sourceTree = "<group>"; };
+		76057120157C15EF004CE04B /* b2PolygonAndCircleContact.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2PolygonAndCircleContact.cpp; sourceTree = "<group>"; };
+		76057121157C15EF004CE04B /* b2PolygonAndCircleContact.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2PolygonAndCircleContact.h; sourceTree = "<group>"; };
+		76057122157C15EF004CE04B /* b2PolygonContact.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2PolygonContact.cpp; sourceTree = "<group>"; };
+		76057123157C15EF004CE04B /* b2PolygonContact.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2PolygonContact.h; sourceTree = "<group>"; };
+		76057125157C15EF004CE04B /* b2DistanceJoint.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2DistanceJoint.cpp; sourceTree = "<group>"; };
+		76057126157C15EF004CE04B /* b2DistanceJoint.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2DistanceJoint.h; sourceTree = "<group>"; };
+		76057127157C15EF004CE04B /* b2FrictionJoint.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2FrictionJoint.cpp; sourceTree = "<group>"; };
+		76057128157C15EF004CE04B /* b2FrictionJoint.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2FrictionJoint.h; sourceTree = "<group>"; };
+		76057129157C15EF004CE04B /* b2GearJoint.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2GearJoint.cpp; sourceTree = "<group>"; };
+		7605712A157C15EF004CE04B /* b2GearJoint.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2GearJoint.h; sourceTree = "<group>"; };
+		7605712B157C15EF004CE04B /* b2Joint.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2Joint.cpp; sourceTree = "<group>"; };
+		7605712C157C15EF004CE04B /* b2Joint.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2Joint.h; sourceTree = "<group>"; };
+		7605712D157C15EF004CE04B /* b2MouseJoint.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2MouseJoint.cpp; sourceTree = "<group>"; };
+		7605712E157C15EF004CE04B /* b2MouseJoint.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2MouseJoint.h; sourceTree = "<group>"; };
+		7605712F157C15EF004CE04B /* b2PrismaticJoint.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2PrismaticJoint.cpp; sourceTree = "<group>"; };
+		76057130157C15EF004CE04B /* b2PrismaticJoint.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2PrismaticJoint.h; sourceTree = "<group>"; };
+		76057131157C15EF004CE04B /* b2PulleyJoint.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2PulleyJoint.cpp; sourceTree = "<group>"; };
+		76057132157C15EF004CE04B /* b2PulleyJoint.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2PulleyJoint.h; sourceTree = "<group>"; };
+		76057133157C15EF004CE04B /* b2RevoluteJoint.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2RevoluteJoint.cpp; sourceTree = "<group>"; };
+		76057134157C15EF004CE04B /* b2RevoluteJoint.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2RevoluteJoint.h; sourceTree = "<group>"; };
+		76057135157C15EF004CE04B /* b2RopeJoint.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2RopeJoint.cpp; sourceTree = "<group>"; };
+		76057136157C15EF004CE04B /* b2RopeJoint.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2RopeJoint.h; sourceTree = "<group>"; };
+		76057137157C15EF004CE04B /* b2WeldJoint.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2WeldJoint.cpp; sourceTree = "<group>"; };
+		76057138157C15EF004CE04B /* b2WeldJoint.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2WeldJoint.h; sourceTree = "<group>"; };
+		76057139157C15EF004CE04B /* b2WheelJoint.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2WheelJoint.cpp; sourceTree = "<group>"; };
+		7605713A157C15EF004CE04B /* b2WheelJoint.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2WheelJoint.h; sourceTree = "<group>"; };
+		7605713C157C15EF004CE04B /* b2Rope.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = b2Rope.cpp; sourceTree = "<group>"; };
+		7605713D157C15EF004CE04B /* b2Rope.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = b2Rope.h; sourceTree = "<group>"; };
+		76057199157C1713004CE04B /* com.badlogic.gdx.graphics.g2d.Gdx2DPixmap.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.graphics.g2d.Gdx2DPixmap.cpp; path = ../../../gdx/jni/com.badlogic.gdx.graphics.g2d.Gdx2DPixmap.cpp; sourceTree = "<group>"; };
+		7605719A157C1713004CE04B /* com.badlogic.gdx.graphics.g2d.Gdx2DPixmap.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.graphics.g2d.Gdx2DPixmap.h; path = ../../../gdx/jni/com.badlogic.gdx.graphics.g2d.Gdx2DPixmap.h; sourceTree = "<group>"; };
+		7605719B157C1713004CE04B /* com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Jni.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Jni.cpp; path = ../../../gdx/jni/com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Jni.cpp; sourceTree = "<group>"; };
+		7605719C157C1713004CE04B /* com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Jni.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Jni.h; path = ../../../gdx/jni/com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Jni.h; sourceTree = "<group>"; };
+		7605719D157C1713004CE04B /* com.badlogic.gdx.graphics.glutils.ETC1.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.graphics.glutils.ETC1.cpp; path = ../../../gdx/jni/com.badlogic.gdx.graphics.glutils.ETC1.cpp; sourceTree = "<group>"; };
+		7605719E157C1713004CE04B /* com.badlogic.gdx.graphics.glutils.ETC1.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.graphics.glutils.ETC1.h; path = ../../../gdx/jni/com.badlogic.gdx.graphics.glutils.ETC1.h; sourceTree = "<group>"; };
+		7605719F157C1713004CE04B /* com.badlogic.gdx.math.Matrix4.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.math.Matrix4.cpp; path = ../../../gdx/jni/com.badlogic.gdx.math.Matrix4.cpp; sourceTree = "<group>"; };
+		760571A0157C1713004CE04B /* com.badlogic.gdx.math.Matrix4.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.math.Matrix4.h; path = ../../../gdx/jni/com.badlogic.gdx.math.Matrix4.h; sourceTree = "<group>"; };
+		760571A1157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Body.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.physics.box2d.Body.cpp; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.Body.cpp; sourceTree = "<group>"; };
+		760571A2157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Body.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.physics.box2d.Body.h; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.Body.h; sourceTree = "<group>"; };
+		760571A3157C1713004CE04B /* com.badlogic.gdx.physics.box2d.ChainShape.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.physics.box2d.ChainShape.cpp; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.ChainShape.cpp; sourceTree = "<group>"; };
+		760571A4157C1713004CE04B /* com.badlogic.gdx.physics.box2d.ChainShape.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.physics.box2d.ChainShape.h; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.ChainShape.h; sourceTree = "<group>"; };
+		760571A5157C1713004CE04B /* com.badlogic.gdx.physics.box2d.CircleShape.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.physics.box2d.CircleShape.cpp; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.CircleShape.cpp; sourceTree = "<group>"; };
+		760571A6157C1713004CE04B /* com.badlogic.gdx.physics.box2d.CircleShape.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.physics.box2d.CircleShape.h; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.CircleShape.h; sourceTree = "<group>"; };
+		760571A7157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Contact.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.physics.box2d.Contact.cpp; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.Contact.cpp; sourceTree = "<group>"; };
+		760571A8157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Contact.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.physics.box2d.Contact.h; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.Contact.h; sourceTree = "<group>"; };
+		760571A9157C1713004CE04B /* com.badlogic.gdx.physics.box2d.ContactImpulse.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.physics.box2d.ContactImpulse.cpp; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.ContactImpulse.cpp; sourceTree = "<group>"; };
+		760571AA157C1713004CE04B /* com.badlogic.gdx.physics.box2d.ContactImpulse.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.physics.box2d.ContactImpulse.h; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.ContactImpulse.h; sourceTree = "<group>"; };
+		760571AB157C1713004CE04B /* com.badlogic.gdx.physics.box2d.EdgeShape.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.physics.box2d.EdgeShape.cpp; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.EdgeShape.cpp; sourceTree = "<group>"; };
+		760571AC157C1713004CE04B /* com.badlogic.gdx.physics.box2d.EdgeShape.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.physics.box2d.EdgeShape.h; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.EdgeShape.h; sourceTree = "<group>"; };
+		760571AD157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Fixture.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.physics.box2d.Fixture.cpp; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.Fixture.cpp; sourceTree = "<group>"; };
+		760571AE157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Fixture.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.physics.box2d.Fixture.h; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.Fixture.h; sourceTree = "<group>"; };
+		760571AF157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Joint.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.physics.box2d.Joint.cpp; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.Joint.cpp; sourceTree = "<group>"; };
+		760571B0157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Joint.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.physics.box2d.Joint.h; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.Joint.h; sourceTree = "<group>"; };
+		760571B1157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.DistanceJoint.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.physics.box2d.joints.DistanceJoint.cpp; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.joints.DistanceJoint.cpp; sourceTree = "<group>"; };
+		760571B2157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.DistanceJoint.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.physics.box2d.joints.DistanceJoint.h; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.joints.DistanceJoint.h; sourceTree = "<group>"; };
+		760571B3157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.FrictionJoint.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.physics.box2d.joints.FrictionJoint.cpp; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.joints.FrictionJoint.cpp; sourceTree = "<group>"; };
+		760571B4157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.FrictionJoint.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.physics.box2d.joints.FrictionJoint.h; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.joints.FrictionJoint.h; sourceTree = "<group>"; };
+		760571B5157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.GearJoint.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.physics.box2d.joints.GearJoint.cpp; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.joints.GearJoint.cpp; sourceTree = "<group>"; };
+		760571B6157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.GearJoint.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.physics.box2d.joints.GearJoint.h; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.joints.GearJoint.h; sourceTree = "<group>"; };
+		760571B7157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.MouseJoint.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.physics.box2d.joints.MouseJoint.cpp; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.joints.MouseJoint.cpp; sourceTree = "<group>"; };
+		760571B8157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.MouseJoint.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.physics.box2d.joints.MouseJoint.h; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.joints.MouseJoint.h; sourceTree = "<group>"; };
+		760571B9157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.PrismaticJoint.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.physics.box2d.joints.PrismaticJoint.cpp; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.joints.PrismaticJoint.cpp; sourceTree = "<group>"; };
+		760571BA157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.PrismaticJoint.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.physics.box2d.joints.PrismaticJoint.h; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.joints.PrismaticJoint.h; sourceTree = "<group>"; };
+		760571BB157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.PulleyJoint.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.physics.box2d.joints.PulleyJoint.cpp; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.joints.PulleyJoint.cpp; sourceTree = "<group>"; };
+		760571BC157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.PulleyJoint.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.physics.box2d.joints.PulleyJoint.h; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.joints.PulleyJoint.h; sourceTree = "<group>"; };
+		760571BD157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.RevoluteJoint.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.physics.box2d.joints.RevoluteJoint.cpp; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.joints.RevoluteJoint.cpp; sourceTree = "<group>"; };
+		760571BE157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.RevoluteJoint.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.physics.box2d.joints.RevoluteJoint.h; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.joints.RevoluteJoint.h; sourceTree = "<group>"; };
+		760571BF157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.RopeJoint.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.physics.box2d.joints.RopeJoint.cpp; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.joints.RopeJoint.cpp; sourceTree = "<group>"; };
+		760571C0157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.RopeJoint.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.physics.box2d.joints.RopeJoint.h; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.joints.RopeJoint.h; sourceTree = "<group>"; };
+		760571C1157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.WheelJoint.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.physics.box2d.joints.WheelJoint.cpp; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.joints.WheelJoint.cpp; sourceTree = "<group>"; };
+		760571C2157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.WheelJoint.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.physics.box2d.joints.WheelJoint.h; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.joints.WheelJoint.h; sourceTree = "<group>"; };
+		760571C3157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Manifold.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.physics.box2d.Manifold.cpp; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.Manifold.cpp; sourceTree = "<group>"; };
+		760571C4157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Manifold.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.physics.box2d.Manifold.h; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.Manifold.h; sourceTree = "<group>"; };
+		760571C5157C1713004CE04B /* com.badlogic.gdx.physics.box2d.PolygonShape.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.physics.box2d.PolygonShape.cpp; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.PolygonShape.cpp; sourceTree = "<group>"; };
+		760571C6157C1713004CE04B /* com.badlogic.gdx.physics.box2d.PolygonShape.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.physics.box2d.PolygonShape.h; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.PolygonShape.h; sourceTree = "<group>"; };
+		760571C7157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Shape.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.physics.box2d.Shape.cpp; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.Shape.cpp; sourceTree = "<group>"; };
+		760571C8157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Shape.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.physics.box2d.Shape.h; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.Shape.h; sourceTree = "<group>"; };
+		760571C9157C1713004CE04B /* com.badlogic.gdx.physics.box2d.World.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.physics.box2d.World.cpp; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.World.cpp; sourceTree = "<group>"; };
+		760571CA157C1713004CE04B /* com.badlogic.gdx.physics.box2d.World.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.physics.box2d.World.h; path = ../../../gdx/jni/com.badlogic.gdx.physics.box2d.World.h; sourceTree = "<group>"; };
+		760571CB157C1713004CE04B /* com.badlogic.gdx.utils.BufferUtils.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = com.badlogic.gdx.utils.BufferUtils.cpp; path = ../../../gdx/jni/com.badlogic.gdx.utils.BufferUtils.cpp; sourceTree = "<group>"; };
+		760571CC157C1713004CE04B /* com.badlogic.gdx.utils.BufferUtils.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = com.badlogic.gdx.utils.BufferUtils.h; path = ../../../gdx/jni/com.badlogic.gdx.utils.BufferUtils.h; sourceTree = "<group>"; };
+		760571CE157C1713004CE04B /* etc1_utils.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = etc1_utils.cpp; sourceTree = "<group>"; };
+		760571CF157C1713004CE04B /* etc1_utils.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = etc1_utils.h; sourceTree = "<group>"; };
+		760571D1157C1713004CE04B /* gdx2d.c */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.c; path = gdx2d.c; sourceTree = "<group>"; };
+		760571D2157C1713004CE04B /* gdx2d.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = gdx2d.h; sourceTree = "<group>"; };
+		760571D3157C1713004CE04B /* stb_image.c */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.c; path = stb_image.c; sourceTree = "<group>"; };
+		760571D5157C1713004CE04B /* classfile_constants.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = classfile_constants.h; sourceTree = "<group>"; };
+		760571D6157C1713004CE04B /* jawt.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = jawt.h; sourceTree = "<group>"; };
+		760571D7157C1713004CE04B /* jdwpTransport.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = jdwpTransport.h; sourceTree = "<group>"; };
+		760571D8157C1713004CE04B /* jni.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = jni.h; sourceTree = "<group>"; };
+		760571DA157C1713004CE04B /* jawt_md.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = jawt_md.h; sourceTree = "<group>"; };
+		760571DB157C1713004CE04B /* jni_md.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = jni_md.h; sourceTree = "<group>"; };
+		760571DD157C1713004CE04B /* jni_md.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = jni_md.h; sourceTree = "<group>"; };
+		760571DF157C1713004CE04B /* jawt_md.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = jawt_md.h; sourceTree = "<group>"; };
+		760571E0157C1713004CE04B /* jni_md.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = jni_md.h; sourceTree = "<group>"; };
+		7657C33C1582B4FF0067030A /* iosgles20.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = iosgles20.cpp; sourceTree = "<group>"; };
+		7657C33D1582B4FF0067030A /* iosgles20.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = iosgles20.h; sourceTree = "<group>"; };
+/* End PBXFileReference section */
+
+/* Begin PBXFrameworksBuildPhase section */
+		76056F72157C140D004CE04B /* Frameworks */ = {
+			isa = PBXFrameworksBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+				76056F79157C140D004CE04B /* Foundation.framework in Frameworks */,
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+		};
+/* End PBXFrameworksBuildPhase section */
+
+/* Begin PBXGroup section */
+		76056F6A157C140D004CE04B = {
+			isa = PBXGroup;
+			children = (
+				7657C33C1582B4FF0067030A /* iosgles20.cpp */,
+				7657C33D1582B4FF0067030A /* iosgles20.h */,
+				76057199157C1713004CE04B /* com.badlogic.gdx.graphics.g2d.Gdx2DPixmap.cpp */,
+				7605719A157C1713004CE04B /* com.badlogic.gdx.graphics.g2d.Gdx2DPixmap.h */,
+				7605719B157C1713004CE04B /* com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Jni.cpp */,
+				7605719C157C1713004CE04B /* com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Jni.h */,
+				7605719D157C1713004CE04B /* com.badlogic.gdx.graphics.glutils.ETC1.cpp */,
+				7605719E157C1713004CE04B /* com.badlogic.gdx.graphics.glutils.ETC1.h */,
+				7605719F157C1713004CE04B /* com.badlogic.gdx.math.Matrix4.cpp */,
+				760571A0157C1713004CE04B /* com.badlogic.gdx.math.Matrix4.h */,
+				760571A1157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Body.cpp */,
+				760571A2157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Body.h */,
+				760571A3157C1713004CE04B /* com.badlogic.gdx.physics.box2d.ChainShape.cpp */,
+				760571A4157C1713004CE04B /* com.badlogic.gdx.physics.box2d.ChainShape.h */,
+				760571A5157C1713004CE04B /* com.badlogic.gdx.physics.box2d.CircleShape.cpp */,
+				760571A6157C1713004CE04B /* com.badlogic.gdx.physics.box2d.CircleShape.h */,
+				760571A7157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Contact.cpp */,
+				760571A8157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Contact.h */,
+				760571A9157C1713004CE04B /* com.badlogic.gdx.physics.box2d.ContactImpulse.cpp */,
+				760571AA157C1713004CE04B /* com.badlogic.gdx.physics.box2d.ContactImpulse.h */,
+				760571AB157C1713004CE04B /* com.badlogic.gdx.physics.box2d.EdgeShape.cpp */,
+				760571AC157C1713004CE04B /* com.badlogic.gdx.physics.box2d.EdgeShape.h */,
+				760571AD157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Fixture.cpp */,
+				760571AE157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Fixture.h */,
+				760571AF157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Joint.cpp */,
+				760571B0157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Joint.h */,
+				760571B1157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.DistanceJoint.cpp */,
+				760571B2157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.DistanceJoint.h */,
+				760571B3157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.FrictionJoint.cpp */,
+				760571B4157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.FrictionJoint.h */,
+				760571B5157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.GearJoint.cpp */,
+				760571B6157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.GearJoint.h */,
+				760571B7157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.MouseJoint.cpp */,
+				760571B8157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.MouseJoint.h */,
+				760571B9157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.PrismaticJoint.cpp */,
+				760571BA157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.PrismaticJoint.h */,
+				760571BB157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.PulleyJoint.cpp */,
+				760571BC157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.PulleyJoint.h */,
+				760571BD157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.RevoluteJoint.cpp */,
+				760571BE157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.RevoluteJoint.h */,
+				760571BF157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.RopeJoint.cpp */,
+				760571C0157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.RopeJoint.h */,
+				760571C1157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.WheelJoint.cpp */,
+				760571C2157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.WheelJoint.h */,
+				760571C3157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Manifold.cpp */,
+				760571C4157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Manifold.h */,
+				760571C5157C1713004CE04B /* com.badlogic.gdx.physics.box2d.PolygonShape.cpp */,
+				760571C6157C1713004CE04B /* com.badlogic.gdx.physics.box2d.PolygonShape.h */,
+				760571C7157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Shape.cpp */,
+				760571C8157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Shape.h */,
+				760571C9157C1713004CE04B /* com.badlogic.gdx.physics.box2d.World.cpp */,
+				760571CA157C1713004CE04B /* com.badlogic.gdx.physics.box2d.World.h */,
+				760571CB157C1713004CE04B /* com.badlogic.gdx.utils.BufferUtils.cpp */,
+				760571CC157C1713004CE04B /* com.badlogic.gdx.utils.BufferUtils.h */,
+				760571CD157C1713004CE04B /* etc1 */,
+				760571D0157C1713004CE04B /* gdx2d */,
+				760571D4157C1713004CE04B /* jni-headers */,
+				760570DA157C15EF004CE04B /* Box2D */,
+				76056F77157C140D004CE04B /* Frameworks */,
+				76056F76157C140D004CE04B /* Products */,
+			);
+			sourceTree = "<group>";
+		};
+		76056F76157C140D004CE04B /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				76056F75157C140D004CE04B /* libnatives.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		76056F77157C140D004CE04B /* Frameworks */ = {
+			isa = PBXGroup;
+			children = (
+				76056F78157C140D004CE04B /* Foundation.framework */,
+			);
+			name = Frameworks;
+			sourceTree = "<group>";
+		};
+		760570DA157C15EF004CE04B /* Box2D */ = {
+			isa = PBXGroup;
+			children = (
+				760570DB157C15EF004CE04B /* Box2D.h */,
+				760570DC157C15EF004CE04B /* CHANGES */,
+				760570DD157C15EF004CE04B /* Collision */,
+				760570F5157C15EF004CE04B /* Common */,
+				76057103157C15EF004CE04B /* Dynamics */,
+				7605713B157C15EF004CE04B /* Rope */,
+			);
+			name = Box2D;
+			path = ../../../gdx/jni/Box2D;
+			sourceTree = "<group>";
+		};
+		760570DD157C15EF004CE04B /* Collision */ = {
+			isa = PBXGroup;
+			children = (
+				760570DE157C15EF004CE04B /* b2BroadPhase.cpp */,
+				760570DF157C15EF004CE04B /* b2BroadPhase.h */,
+				760570E0157C15EF004CE04B /* b2CollideCircle.cpp */,
+				760570E1157C15EF004CE04B /* b2CollideEdge.cpp */,
+				760570E2157C15EF004CE04B /* b2CollidePolygon.cpp */,
+				760570E3157C15EF004CE04B /* b2Collision.cpp */,
+				760570E4157C15EF004CE04B /* b2Collision.h */,
+				760570E5157C15EF004CE04B /* b2Distance.cpp */,
+				760570E6157C15EF004CE04B /* b2Distance.h */,
+				760570E7157C15EF004CE04B /* b2DynamicTree.cpp */,
+				760570E8157C15EF004CE04B /* b2DynamicTree.h */,
+				760570E9157C15EF004CE04B /* b2TimeOfImpact.cpp */,
+				760570EA157C15EF004CE04B /* b2TimeOfImpact.h */,
+				760570EB157C15EF004CE04B /* Shapes */,
+			);
+			path = Collision;
+			sourceTree = "<group>";
+		};
+		760570EB157C15EF004CE04B /* Shapes */ = {
+			isa = PBXGroup;
+			children = (
+				760570EC157C15EF004CE04B /* b2ChainShape.cpp */,
+				760570ED157C15EF004CE04B /* b2ChainShape.h */,
+				760570EE157C15EF004CE04B /* b2CircleShape.cpp */,
+				760570EF157C15EF004CE04B /* b2CircleShape.h */,
+				760570F0157C15EF004CE04B /* b2EdgeShape.cpp */,
+				760570F1157C15EF004CE04B /* b2EdgeShape.h */,
+				760570F2157C15EF004CE04B /* b2PolygonShape.cpp */,
+				760570F3157C15EF004CE04B /* b2PolygonShape.h */,
+				760570F4157C15EF004CE04B /* b2Shape.h */,
+			);
+			path = Shapes;
+			sourceTree = "<group>";
+		};
+		760570F5157C15EF004CE04B /* Common */ = {
+			isa = PBXGroup;
+			children = (
+				760570F6157C15EF004CE04B /* b2BlockAllocator.cpp */,
+				760570F7157C15EF004CE04B /* b2BlockAllocator.h */,
+				760570F8157C15EF004CE04B /* b2Draw.cpp */,
+				760570F9157C15EF004CE04B /* b2Draw.h */,
+				760570FA157C15EF004CE04B /* b2GrowableStack.h */,
+				760570FB157C15EF004CE04B /* b2Math.cpp */,
+				760570FC157C15EF004CE04B /* b2Math.h */,
+				760570FD157C15EF004CE04B /* b2Settings.cpp */,
+				760570FE157C15EF004CE04B /* b2Settings.h */,
+				760570FF157C15EF004CE04B /* b2StackAllocator.cpp */,
+				76057100157C15EF004CE04B /* b2StackAllocator.h */,
+				76057101157C15EF004CE04B /* b2Timer.cpp */,
+				76057102157C15EF004CE04B /* b2Timer.h */,
+			);
+			path = Common;
+			sourceTree = "<group>";
+		};
+		76057103157C15EF004CE04B /* Dynamics */ = {
+			isa = PBXGroup;
+			children = (
+				76057104157C15EF004CE04B /* b2Body.cpp */,
+				76057105157C15EF004CE04B /* b2Body.h */,
+				76057106157C15EF004CE04B /* b2ContactManager.cpp */,
+				76057107157C15EF004CE04B /* b2ContactManager.h */,
+				76057108157C15EF004CE04B /* b2Fixture.cpp */,
+				76057109157C15EF004CE04B /* b2Fixture.h */,
+				7605710A157C15EF004CE04B /* b2Island.cpp */,
+				7605710B157C15EF004CE04B /* b2Island.h */,
+				7605710C157C15EF004CE04B /* b2TimeStep.h */,
+				7605710D157C15EF004CE04B /* b2World.cpp */,
+				7605710E157C15EF004CE04B /* b2World.h */,
+				7605710F157C15EF004CE04B /* b2WorldCallbacks.cpp */,
+				76057110157C15EF004CE04B /* b2WorldCallbacks.h */,
+				76057111157C15EF004CE04B /* Contacts */,
+				76057124157C15EF004CE04B /* Joints */,
+			);
+			path = Dynamics;
+			sourceTree = "<group>";
+		};
+		76057111157C15EF004CE04B /* Contacts */ = {
+			isa = PBXGroup;
+			children = (
+				76057112157C15EF004CE04B /* b2ChainAndCircleContact.cpp */,
+				76057113157C15EF004CE04B /* b2ChainAndCircleContact.h */,
+				76057114157C15EF004CE04B /* b2ChainAndPolygonContact.cpp */,
+				76057115157C15EF004CE04B /* b2ChainAndPolygonContact.h */,
+				76057116157C15EF004CE04B /* b2CircleContact.cpp */,
+				76057117157C15EF004CE04B /* b2CircleContact.h */,
+				76057118157C15EF004CE04B /* b2Contact.cpp */,
+				76057119157C15EF004CE04B /* b2Contact.h */,
+				7605711A157C15EF004CE04B /* b2ContactSolver.cpp */,
+				7605711B157C15EF004CE04B /* b2ContactSolver.h */,
+				7605711C157C15EF004CE04B /* b2EdgeAndCircleContact.cpp */,
+				7605711D157C15EF004CE04B /* b2EdgeAndCircleContact.h */,
+				7605711E157C15EF004CE04B /* b2EdgeAndPolygonContact.cpp */,
+				7605711F157C15EF004CE04B /* b2EdgeAndPolygonContact.h */,
+				76057120157C15EF004CE04B /* b2PolygonAndCircleContact.cpp */,
+				76057121157C15EF004CE04B /* b2PolygonAndCircleContact.h */,
+				76057122157C15EF004CE04B /* b2PolygonContact.cpp */,
+				76057123157C15EF004CE04B /* b2PolygonContact.h */,
+			);
+			path = Contacts;
+			sourceTree = "<group>";
+		};
+		76057124157C15EF004CE04B /* Joints */ = {
+			isa = PBXGroup;
+			children = (
+				76057125157C15EF004CE04B /* b2DistanceJoint.cpp */,
+				76057126157C15EF004CE04B /* b2DistanceJoint.h */,
+				76057127157C15EF004CE04B /* b2FrictionJoint.cpp */,
+				76057128157C15EF004CE04B /* b2FrictionJoint.h */,
+				76057129157C15EF004CE04B /* b2GearJoint.cpp */,
+				7605712A157C15EF004CE04B /* b2GearJoint.h */,
+				7605712B157C15EF004CE04B /* b2Joint.cpp */,
+				7605712C157C15EF004CE04B /* b2Joint.h */,
+				7605712D157C15EF004CE04B /* b2MouseJoint.cpp */,
+				7605712E157C15EF004CE04B /* b2MouseJoint.h */,
+				7605712F157C15EF004CE04B /* b2PrismaticJoint.cpp */,
+				76057130157C15EF004CE04B /* b2PrismaticJoint.h */,
+				76057131157C15EF004CE04B /* b2PulleyJoint.cpp */,
+				76057132157C15EF004CE04B /* b2PulleyJoint.h */,
+				76057133157C15EF004CE04B /* b2RevoluteJoint.cpp */,
+				76057134157C15EF004CE04B /* b2RevoluteJoint.h */,
+				76057135157C15EF004CE04B /* b2RopeJoint.cpp */,
+				76057136157C15EF004CE04B /* b2RopeJoint.h */,
+				76057137157C15EF004CE04B /* b2WeldJoint.cpp */,
+				76057138157C15EF004CE04B /* b2WeldJoint.h */,
+				76057139157C15EF004CE04B /* b2WheelJoint.cpp */,
+				7605713A157C15EF004CE04B /* b2WheelJoint.h */,
+			);
+			path = Joints;
+			sourceTree = "<group>";
+		};
+		7605713B157C15EF004CE04B /* Rope */ = {
+			isa = PBXGroup;
+			children = (
+				7605713C157C15EF004CE04B /* b2Rope.cpp */,
+				7605713D157C15EF004CE04B /* b2Rope.h */,
+			);
+			path = Rope;
+			sourceTree = "<group>";
+		};
+		760571CD157C1713004CE04B /* etc1 */ = {
+			isa = PBXGroup;
+			children = (
+				760571CE157C1713004CE04B /* etc1_utils.cpp */,
+				760571CF157C1713004CE04B /* etc1_utils.h */,
+			);
+			name = etc1;
+			path = ../../../gdx/jni/etc1;
+			sourceTree = "<group>";
+		};
+		760571D0157C1713004CE04B /* gdx2d */ = {
+			isa = PBXGroup;
+			children = (
+				760571D1157C1713004CE04B /* gdx2d.c */,
+				760571D2157C1713004CE04B /* gdx2d.h */,
+				760571D3157C1713004CE04B /* stb_image.c */,
+			);
+			name = gdx2d;
+			path = ../../../gdx/jni/gdx2d;
+			sourceTree = "<group>";
+		};
+		760571D4157C1713004CE04B /* jni-headers */ = {
+			isa = PBXGroup;
+			children = (
+				760571D5157C1713004CE04B /* classfile_constants.h */,
+				760571D6157C1713004CE04B /* jawt.h */,
+				760571D7157C1713004CE04B /* jdwpTransport.h */,
+				760571D8157C1713004CE04B /* jni.h */,
+				760571D9157C1713004CE04B /* linux */,
+				760571DC157C1713004CE04B /* mac */,
+				760571DE157C1713004CE04B /* win32 */,
+			);
+			name = "jni-headers";
+			path = "../../../gdx/jni/jni-headers";
+			sourceTree = "<group>";
+		};
+		760571D9157C1713004CE04B /* linux */ = {
+			isa = PBXGroup;
+			children = (
+				760571DA157C1713004CE04B /* jawt_md.h */,
+				760571DB157C1713004CE04B /* jni_md.h */,
+			);
+			path = linux;
+			sourceTree = "<group>";
+		};
+		760571DC157C1713004CE04B /* mac */ = {
+			isa = PBXGroup;
+			children = (
+				760571DD157C1713004CE04B /* jni_md.h */,
+			);
+			path = mac;
+			sourceTree = "<group>";
+		};
+		760571DE157C1713004CE04B /* win32 */ = {
+			isa = PBXGroup;
+			children = (
+				760571DF157C1713004CE04B /* jawt_md.h */,
+				760571E0157C1713004CE04B /* jni_md.h */,
+			);
+			path = win32;
+			sourceTree = "<group>";
+		};
+/* End PBXGroup section */
+
+/* Begin PBXHeadersBuildPhase section */
+		76056F73157C140D004CE04B /* Headers */ = {
+			isa = PBXHeadersBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+				7605713E157C15EF004CE04B /* Box2D.h in Headers */,
+				76057140157C15EF004CE04B /* b2BroadPhase.h in Headers */,
+				76057145157C15EF004CE04B /* b2Collision.h in Headers */,
+				76057147157C15EF004CE04B /* b2Distance.h in Headers */,
+				76057149157C15EF004CE04B /* b2DynamicTree.h in Headers */,
+				7605714B157C15EF004CE04B /* b2TimeOfImpact.h in Headers */,
+				7605714D157C15EF004CE04B /* b2ChainShape.h in Headers */,
+				7605714F157C15EF004CE04B /* b2CircleShape.h in Headers */,
+				76057151157C15EF004CE04B /* b2EdgeShape.h in Headers */,
+				76057153157C15EF004CE04B /* b2PolygonShape.h in Headers */,
+				76057154157C15EF004CE04B /* b2Shape.h in Headers */,
+				76057156157C15EF004CE04B /* b2BlockAllocator.h in Headers */,
+				76057158157C15EF004CE04B /* b2Draw.h in Headers */,
+				76057159157C15EF004CE04B /* b2GrowableStack.h in Headers */,
+				7605715B157C15EF004CE04B /* b2Math.h in Headers */,
+				7605715D157C15EF004CE04B /* b2Settings.h in Headers */,
+				7605715F157C15EF004CE04B /* b2StackAllocator.h in Headers */,
+				76057161157C15EF004CE04B /* b2Timer.h in Headers */,
+				76057163157C15EF004CE04B /* b2Body.h in Headers */,
+				76057165157C15EF004CE04B /* b2ContactManager.h in Headers */,
+				76057167157C15EF004CE04B /* b2Fixture.h in Headers */,
+				76057169157C15EF004CE04B /* b2Island.h in Headers */,
+				7605716A157C15EF004CE04B /* b2TimeStep.h in Headers */,
+				7605716C157C15EF004CE04B /* b2World.h in Headers */,
+				7605716E157C15EF004CE04B /* b2WorldCallbacks.h in Headers */,
+				76057170157C15EF004CE04B /* b2ChainAndCircleContact.h in Headers */,
+				76057172157C15EF004CE04B /* b2ChainAndPolygonContact.h in Headers */,
+				76057174157C15EF004CE04B /* b2CircleContact.h in Headers */,
+				76057176157C15EF004CE04B /* b2Contact.h in Headers */,
+				76057178157C15EF004CE04B /* b2ContactSolver.h in Headers */,
+				7605717A157C15EF004CE04B /* b2EdgeAndCircleContact.h in Headers */,
+				7605717C157C15EF004CE04B /* b2EdgeAndPolygonContact.h in Headers */,
+				7605717E157C15EF004CE04B /* b2PolygonAndCircleContact.h in Headers */,
+				76057180157C15EF004CE04B /* b2PolygonContact.h in Headers */,
+				76057182157C15EF004CE04B /* b2DistanceJoint.h in Headers */,
+				76057184157C15EF004CE04B /* b2FrictionJoint.h in Headers */,
+				76057186157C15EF004CE04B /* b2GearJoint.h in Headers */,
+				76057188157C15EF004CE04B /* b2Joint.h in Headers */,
+				7605718A157C15EF004CE04B /* b2MouseJoint.h in Headers */,
+				7605718C157C15EF004CE04B /* b2PrismaticJoint.h in Headers */,
+				7605718E157C15EF004CE04B /* b2PulleyJoint.h in Headers */,
+				76057190157C15EF004CE04B /* b2RevoluteJoint.h in Headers */,
+				76057192157C15EF004CE04B /* b2RopeJoint.h in Headers */,
+				76057194157C15EF004CE04B /* b2WeldJoint.h in Headers */,
+				76057196157C15EF004CE04B /* b2WheelJoint.h in Headers */,
+				76057198157C15EF004CE04B /* b2Rope.h in Headers */,
+				760571E2157C1713004CE04B /* com.badlogic.gdx.graphics.g2d.Gdx2DPixmap.h in Headers */,
+				760571E4157C1713004CE04B /* com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Jni.h in Headers */,
+				760571E6157C1713004CE04B /* com.badlogic.gdx.graphics.glutils.ETC1.h in Headers */,
+				760571E8157C1713004CE04B /* com.badlogic.gdx.math.Matrix4.h in Headers */,
+				760571EA157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Body.h in Headers */,
+				760571EC157C1713004CE04B /* com.badlogic.gdx.physics.box2d.ChainShape.h in Headers */,
+				760571EE157C1713004CE04B /* com.badlogic.gdx.physics.box2d.CircleShape.h in Headers */,
+				760571F0157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Contact.h in Headers */,
+				760571F2157C1713004CE04B /* com.badlogic.gdx.physics.box2d.ContactImpulse.h in Headers */,
+				760571F4157C1713004CE04B /* com.badlogic.gdx.physics.box2d.EdgeShape.h in Headers */,
+				760571F6157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Fixture.h in Headers */,
+				760571F8157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Joint.h in Headers */,
+				760571FA157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.DistanceJoint.h in Headers */,
+				760571FC157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.FrictionJoint.h in Headers */,
+				760571FE157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.GearJoint.h in Headers */,
+				76057200157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.MouseJoint.h in Headers */,
+				76057202157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.PrismaticJoint.h in Headers */,
+				76057204157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.PulleyJoint.h in Headers */,
+				76057206157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.RevoluteJoint.h in Headers */,
+				76057208157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.RopeJoint.h in Headers */,
+				7605720A157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.WheelJoint.h in Headers */,
+				7605720C157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Manifold.h in Headers */,
+				7605720E157C1713004CE04B /* com.badlogic.gdx.physics.box2d.PolygonShape.h in Headers */,
+				76057210157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Shape.h in Headers */,
+				76057212157C1713004CE04B /* com.badlogic.gdx.physics.box2d.World.h in Headers */,
+				76057214157C1713004CE04B /* com.badlogic.gdx.utils.BufferUtils.h in Headers */,
+				76057216157C1713004CE04B /* etc1_utils.h in Headers */,
+				76057218157C1713004CE04B /* gdx2d.h in Headers */,
+				7605721A157C1713004CE04B /* classfile_constants.h in Headers */,
+				7605721B157C1713004CE04B /* jawt.h in Headers */,
+				7605721C157C1713004CE04B /* jdwpTransport.h in Headers */,
+				7605721D157C1713004CE04B /* jni.h in Headers */,
+				7605721E157C1713004CE04B /* jawt_md.h in Headers */,
+				7605721F157C1713004CE04B /* jni_md.h in Headers */,
+				76057220157C1713004CE04B /* jni_md.h in Headers */,
+				76057221157C1713004CE04B /* jawt_md.h in Headers */,
+				76057222157C1713004CE04B /* jni_md.h in Headers */,
+				7657C33F1582B4FF0067030A /* iosgles20.h in Headers */,
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+		};
+/* End PBXHeadersBuildPhase section */
+
+/* Begin PBXNativeTarget section */
+		76056F74157C140D004CE04B /* natives */ = {
+			isa = PBXNativeTarget;
+			buildConfigurationList = 76056F82157C140D004CE04B /* Build configuration list for PBXNativeTarget "natives" */;
+			buildPhases = (
+				76056F71157C140D004CE04B /* Sources */,
+				76056F72157C140D004CE04B /* Frameworks */,
+				76056F73157C140D004CE04B /* Headers */,
+			);
+			buildRules = (
+			);
+			dependencies = (
+			);
+			name = natives;
+			productName = natives;
+			productReference = 76056F75157C140D004CE04B /* libnatives.a */;
+			productType = "com.apple.product-type.library.static";
+		};
+/* End PBXNativeTarget section */
+
+/* Begin PBXProject section */
+		76056F6C157C140D004CE04B /* Project object */ = {
+			isa = PBXProject;
+			attributes = {
+				LastUpgradeCheck = 0420;
+			};
+			buildConfigurationList = 76056F6F157C140D004CE04B /* Build configuration list for PBXProject "natives" */;
+			compatibilityVersion = "Xcode 3.2";
+			developmentRegion = English;
+			hasScannedForEncodings = 0;
+			knownRegions = (
+				en,
+			);
+			mainGroup = 76056F6A157C140D004CE04B;
+			productRefGroup = 76056F76157C140D004CE04B /* Products */;
+			projectDirPath = "";
+			projectRoot = "";
+			targets = (
+				76056F74157C140D004CE04B /* natives */,
+			);
+		};
+/* End PBXProject section */
+
+/* Begin PBXSourcesBuildPhase section */
+		76056F71157C140D004CE04B /* Sources */ = {
+			isa = PBXSourcesBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+				7605713F157C15EF004CE04B /* b2BroadPhase.cpp in Sources */,
+				76057141157C15EF004CE04B /* b2CollideCircle.cpp in Sources */,
+				76057142157C15EF004CE04B /* b2CollideEdge.cpp in Sources */,
+				76057143157C15EF004CE04B /* b2CollidePolygon.cpp in Sources */,
+				76057144157C15EF004CE04B /* b2Collision.cpp in Sources */,
+				76057146157C15EF004CE04B /* b2Distance.cpp in Sources */,
+				76057148157C15EF004CE04B /* b2DynamicTree.cpp in Sources */,
+				7605714A157C15EF004CE04B /* b2TimeOfImpact.cpp in Sources */,
+				7605714C157C15EF004CE04B /* b2ChainShape.cpp in Sources */,
+				7605714E157C15EF004CE04B /* b2CircleShape.cpp in Sources */,
+				76057150157C15EF004CE04B /* b2EdgeShape.cpp in Sources */,
+				76057152157C15EF004CE04B /* b2PolygonShape.cpp in Sources */,
+				76057155157C15EF004CE04B /* b2BlockAllocator.cpp in Sources */,
+				76057157157C15EF004CE04B /* b2Draw.cpp in Sources */,
+				7605715A157C15EF004CE04B /* b2Math.cpp in Sources */,
+				7605715C157C15EF004CE04B /* b2Settings.cpp in Sources */,
+				7605715E157C15EF004CE04B /* b2StackAllocator.cpp in Sources */,
+				76057160157C15EF004CE04B /* b2Timer.cpp in Sources */,
+				76057162157C15EF004CE04B /* b2Body.cpp in Sources */,
+				76057164157C15EF004CE04B /* b2ContactManager.cpp in Sources */,
+				76057166157C15EF004CE04B /* b2Fixture.cpp in Sources */,
+				76057168157C15EF004CE04B /* b2Island.cpp in Sources */,
+				7605716B157C15EF004CE04B /* b2World.cpp in Sources */,
+				7605716D157C15EF004CE04B /* b2WorldCallbacks.cpp in Sources */,
+				7605716F157C15EF004CE04B /* b2ChainAndCircleContact.cpp in Sources */,
+				76057171157C15EF004CE04B /* b2ChainAndPolygonContact.cpp in Sources */,
+				76057173157C15EF004CE04B /* b2CircleContact.cpp in Sources */,
+				76057175157C15EF004CE04B /* b2Contact.cpp in Sources */,
+				76057177157C15EF004CE04B /* b2ContactSolver.cpp in Sources */,
+				76057179157C15EF004CE04B /* b2EdgeAndCircleContact.cpp in Sources */,
+				7605717B157C15EF004CE04B /* b2EdgeAndPolygonContact.cpp in Sources */,
+				7605717D157C15EF004CE04B /* b2PolygonAndCircleContact.cpp in Sources */,
+				7605717F157C15EF004CE04B /* b2PolygonContact.cpp in Sources */,
+				76057181157C15EF004CE04B /* b2DistanceJoint.cpp in Sources */,
+				76057183157C15EF004CE04B /* b2FrictionJoint.cpp in Sources */,
+				76057185157C15EF004CE04B /* b2GearJoint.cpp in Sources */,
+				76057187157C15EF004CE04B /* b2Joint.cpp in Sources */,
+				76057189157C15EF004CE04B /* b2MouseJoint.cpp in Sources */,
+				7605718B157C15EF004CE04B /* b2PrismaticJoint.cpp in Sources */,
+				7605718D157C15EF004CE04B /* b2PulleyJoint.cpp in Sources */,
+				7605718F157C15EF004CE04B /* b2RevoluteJoint.cpp in Sources */,
+				76057191157C15EF004CE04B /* b2RopeJoint.cpp in Sources */,
+				76057193157C15EF004CE04B /* b2WeldJoint.cpp in Sources */,
+				76057195157C15EF004CE04B /* b2WheelJoint.cpp in Sources */,
+				76057197157C15EF004CE04B /* b2Rope.cpp in Sources */,
+				760571E1157C1713004CE04B /* com.badlogic.gdx.graphics.g2d.Gdx2DPixmap.cpp in Sources */,
+				760571E3157C1713004CE04B /* com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Jni.cpp in Sources */,
+				760571E5157C1713004CE04B /* com.badlogic.gdx.graphics.glutils.ETC1.cpp in Sources */,
+				760571E7157C1713004CE04B /* com.badlogic.gdx.math.Matrix4.cpp in Sources */,
+				760571E9157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Body.cpp in Sources */,
+				760571EB157C1713004CE04B /* com.badlogic.gdx.physics.box2d.ChainShape.cpp in Sources */,
+				760571ED157C1713004CE04B /* com.badlogic.gdx.physics.box2d.CircleShape.cpp in Sources */,
+				760571EF157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Contact.cpp in Sources */,
+				760571F1157C1713004CE04B /* com.badlogic.gdx.physics.box2d.ContactImpulse.cpp in Sources */,
+				760571F3157C1713004CE04B /* com.badlogic.gdx.physics.box2d.EdgeShape.cpp in Sources */,
+				760571F5157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Fixture.cpp in Sources */,
+				760571F7157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Joint.cpp in Sources */,
+				760571F9157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.DistanceJoint.cpp in Sources */,
+				760571FB157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.FrictionJoint.cpp in Sources */,
+				760571FD157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.GearJoint.cpp in Sources */,
+				760571FF157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.MouseJoint.cpp in Sources */,
+				76057201157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.PrismaticJoint.cpp in Sources */,
+				76057203157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.PulleyJoint.cpp in Sources */,
+				76057205157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.RevoluteJoint.cpp in Sources */,
+				76057207157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.RopeJoint.cpp in Sources */,
+				76057209157C1713004CE04B /* com.badlogic.gdx.physics.box2d.joints.WheelJoint.cpp in Sources */,
+				7605720B157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Manifold.cpp in Sources */,
+				7605720D157C1713004CE04B /* com.badlogic.gdx.physics.box2d.PolygonShape.cpp in Sources */,
+				7605720F157C1713004CE04B /* com.badlogic.gdx.physics.box2d.Shape.cpp in Sources */,
+				76057211157C1713004CE04B /* com.badlogic.gdx.physics.box2d.World.cpp in Sources */,
+				76057213157C1713004CE04B /* com.badlogic.gdx.utils.BufferUtils.cpp in Sources */,
+				76057215157C1713004CE04B /* etc1_utils.cpp in Sources */,
+				76057217157C1713004CE04B /* gdx2d.c in Sources */,
+				76057219157C1713004CE04B /* stb_image.c in Sources */,
+				7657C33E1582B4FF0067030A /* iosgles20.cpp in Sources */,
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+		};
+/* End PBXSourcesBuildPhase section */
+
+/* Begin XCBuildConfiguration section */
+		76056F80157C140D004CE04B /* Debug */ = {
+			isa = XCBuildConfiguration;
+			buildSettings = {
+				ALWAYS_SEARCH_USER_PATHS = NO;
+				ARCHS = "$(ARCHS_STANDARD_32_BIT)";
+				COPY_PHASE_STRIP = NO;
+				GCC_C_LANGUAGE_STANDARD = gnu99;
+				GCC_DYNAMIC_NO_PIC = NO;
+				GCC_OPTIMIZATION_LEVEL = 0;
+				GCC_PREPROCESSOR_DEFINITIONS = (
+					"DEBUG=1",
+					"$(inherited)",
+				);
+				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
+				GCC_VERSION = com.apple.compilers.llvm.clang.1_0;
+				GCC_WARN_ABOUT_MISSING_PROTOTYPES = YES;
+				GCC_WARN_ABOUT_RETURN_TYPE = YES;
+				GCC_WARN_UNUSED_VARIABLE = YES;
+				IPHONEOS_DEPLOYMENT_TARGET = 5.0;
+				SDKROOT = iphoneos;
+			};
+			name = Debug;
+		};
+		76056F81157C140D004CE04B /* Release */ = {
+			isa = XCBuildConfiguration;
+			buildSettings = {
+				ALWAYS_SEARCH_USER_PATHS = NO;
+				ARCHS = "$(ARCHS_STANDARD_32_BIT)";
+				COPY_PHASE_STRIP = YES;
+				GCC_C_LANGUAGE_STANDARD = gnu99;
+				GCC_VERSION = com.apple.compilers.llvm.clang.1_0;
+				GCC_WARN_ABOUT_MISSING_PROTOTYPES = YES;
+				GCC_WARN_ABOUT_RETURN_TYPE = YES;
+				GCC_WARN_UNUSED_VARIABLE = YES;
+				IPHONEOS_DEPLOYMENT_TARGET = 5.0;
+				SDKROOT = iphoneos;
+				VALIDATE_PRODUCT = YES;
+			};
+			name = Release;
+		};
+		76056F83157C140D004CE04B /* Debug */ = {
+			isa = XCBuildConfiguration;
+			buildSettings = {
+				DSTROOT = /tmp/natives.dst;
+				GCC_PRECOMPILE_PREFIX_HEADER = NO;
+				GCC_PREFIX_HEADER = "";
+				HEADER_SEARCH_PATHS = ../../../gdx/jni/;
+				OTHER_LDFLAGS = "-ObjC";
+				PRODUCT_NAME = "$(TARGET_NAME)";
+				SKIP_INSTALL = YES;
+			};
+			name = Debug;
+		};
+		76056F84157C140D004CE04B /* Release */ = {
+			isa = XCBuildConfiguration;
+			buildSettings = {
+				DSTROOT = /tmp/natives.dst;
+				GCC_PRECOMPILE_PREFIX_HEADER = NO;
+				GCC_PREFIX_HEADER = "";
+				HEADER_SEARCH_PATHS = ../../../gdx/jni/;
+				OTHER_LDFLAGS = "-ObjC";
+				PRODUCT_NAME = "$(TARGET_NAME)";
+				SKIP_INSTALL = YES;
+			};
+			name = Release;
+		};
+/* End XCBuildConfiguration section */
+
+/* Begin XCConfigurationList section */
+		76056F6F157C140D004CE04B /* Build configuration list for PBXProject "natives" */ = {
+			isa = XCConfigurationList;
+			buildConfigurations = (
+				76056F80157C140D004CE04B /* Debug */,
+				76056F81157C140D004CE04B /* Release */,
+			);
+			defaultConfigurationIsVisible = 0;
+			defaultConfigurationName = Release;
+		};
+		76056F82157C140D004CE04B /* Build configuration list for PBXNativeTarget "natives" */ = {
+			isa = XCConfigurationList;
+			buildConfigurations = (
+				76056F83157C140D004CE04B /* Debug */,
+				76056F84157C140D004CE04B /* Release */,
+			);
+			defaultConfigurationIsVisible = 0;
+			defaultConfigurationName = Release;
+		};
+/* End XCConfigurationList section */
+	};
+	rootObject = 76056F6C157C140D004CE04B /* Project object */;
+}
diff --git a/backends/gdx-backend-iosmonotouch/natives/natives.xcodeproj/project.xcworkspace/contents.xcworkspacedata b/backends/gdx-backend-iosmonotouch/natives/natives.xcodeproj/project.xcworkspace/contents.xcworkspacedata
new file mode 100644
index 0000000..e9a74e8
--- /dev/null
+++ b/backends/gdx-backend-iosmonotouch/natives/natives.xcodeproj/project.xcworkspace/contents.xcworkspacedata
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<Workspace
+   version = "1.0">
+   <FileRef
+      location = "self:natives.xcodeproj">
+   </FileRef>
+</Workspace>
diff --git a/backends/gdx-backend-iosmonotouch/natives/natives.xcodeproj/project.xcworkspace/xcuserdata/badlogic.xcuserdatad/UserInterfaceState.xcuserstate b/backends/gdx-backend-iosmonotouch/natives/natives.xcodeproj/project.xcworkspace/xcuserdata/badlogic.xcuserdatad/UserInterfaceState.xcuserstate
new file mode 100644
index 0000000..af7626c
Binary files /dev/null and b/backends/gdx-backend-iosmonotouch/natives/natives.xcodeproj/project.xcworkspace/xcuserdata/badlogic.xcuserdatad/UserInterfaceState.xcuserstate differ
diff --git a/backends/gdx-backend-iosmonotouch/natives/natives.xcodeproj/xcuserdata/badlogic.xcuserdatad/xcschemes/natives.xcscheme b/backends/gdx-backend-iosmonotouch/natives/natives.xcodeproj/xcuserdata/badlogic.xcuserdatad/xcschemes/natives.xcscheme
new file mode 100644
index 0000000..2dbbc0c
--- /dev/null
+++ b/backends/gdx-backend-iosmonotouch/natives/natives.xcodeproj/xcuserdata/badlogic.xcuserdatad/xcschemes/natives.xcscheme
@@ -0,0 +1,57 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<Scheme
+   version = "1.3">
+   <BuildAction
+      parallelizeBuildables = "YES"
+      buildImplicitDependencies = "YES">
+      <BuildActionEntries>
+         <BuildActionEntry
+            buildForTesting = "YES"
+            buildForRunning = "YES"
+            buildForProfiling = "YES"
+            buildForArchiving = "YES"
+            buildForAnalyzing = "YES">
+            <BuildableReference
+               BuildableIdentifier = "primary"
+               BlueprintIdentifier = "76056F74157C140D004CE04B"
+               BuildableName = "libnatives.a"
+               BlueprintName = "natives"
+               ReferencedContainer = "container:natives.xcodeproj">
+            </BuildableReference>
+         </BuildActionEntry>
+      </BuildActionEntries>
+   </BuildAction>
+   <TestAction
+      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.GDB"
+      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.GDB"
+      shouldUseLaunchSchemeArgsEnv = "YES"
+      buildConfiguration = "Debug">
+      <Testables>
+      </Testables>
+   </TestAction>
+   <LaunchAction
+      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.GDB"
+      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.GDB"
+      launchStyle = "0"
+      useCustomWorkingDirectory = "NO"
+      buildConfiguration = "Debug"
+      debugDocumentVersioning = "YES"
+      allowLocationSimulation = "YES">
+      <AdditionalOptions>
+      </AdditionalOptions>
+   </LaunchAction>
+   <ProfileAction
+      shouldUseLaunchSchemeArgsEnv = "YES"
+      savedToolIdentifier = ""
+      useCustomWorkingDirectory = "NO"
+      buildConfiguration = "Release"
+      debugDocumentVersioning = "YES">
+   </ProfileAction>
+   <AnalyzeAction
+      buildConfiguration = "Debug">
+   </AnalyzeAction>
+   <ArchiveAction
+      buildConfiguration = "Release"
+      revealArchiveInOrganizer = "YES">
+   </ArchiveAction>
+</Scheme>
diff --git a/backends/gdx-backend-iosmonotouch/natives/natives.xcodeproj/xcuserdata/badlogic.xcuserdatad/xcschemes/xcschememanagement.plist b/backends/gdx-backend-iosmonotouch/natives/natives.xcodeproj/xcuserdata/badlogic.xcuserdatad/xcschemes/xcschememanagement.plist
new file mode 100644
index 0000000..ba5921e
--- /dev/null
+++ b/backends/gdx-backend-iosmonotouch/natives/natives.xcodeproj/xcuserdata/badlogic.xcuserdatad/xcschemes/xcschememanagement.plist
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+	<key>SchemeUserState</key>
+	<dict>
+		<key>natives.xcscheme</key>
+		<dict>
+			<key>orderHint</key>
+			<integer>0</integer>
+		</dict>
+	</dict>
+	<key>SuppressBuildableAutocreation</key>
+	<dict>
+		<key>76056F74157C140D004CE04B</key>
+		<dict>
+			<key>primary</key>
+			<true/>
+		</dict>
+	</dict>
+</dict>
+</plist>
diff --git a/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSApplication.java b/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSApplication.java
index c094101..754745b 100644
--- a/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSApplication.java
+++ b/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSApplication.java
@@ -168,14 +168,6 @@ public class IOSApplication extends UIApplicationDelegate implements Application
 		Gdx.app.debug("IOSApplication", "created");
 		return true;
 	}
-	
-	/**
-	 * Return the UI view controller of IOSApplication
-	 * @return the view controller of IOSApplication
-	 */
-	public UIViewController getUIViewController(){
-		return uiViewController;
-	}
 
 	/** Returns our real display dimension based on screen orientation.
 	 * 
diff --git a/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSApplicationConfiguration.java b/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSApplicationConfiguration.java
index 5c74ccd..2f2194a 100644
--- a/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSApplicationConfiguration.java
+++ b/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSApplicationConfiguration.java
@@ -72,9 +72,9 @@ public class IOSApplicationConfiguration {
 	/** the update interval to poll the accelerometer with, in seconds **/
 	public float accelerometerUpdate = 0.05f;
 	
-	/** whether Monotouch GL20 implementation should be used or not, true by default, native iosgles20 is used when set to false. */
-	public boolean useMonotouchOpenTK = true;
+	/** whether Monotouch GL20 implementation should be used or not, false by default, so native iosgles20 is used. */
+	public boolean useMonotouchOpenTK = false;
 	
 	/** whether to use ObjectAL for sound implementation or not.  */
-	public boolean useObjectAL = true;
+	public boolean useObjectAL = false;
 }
diff --git a/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSFileHandle.java b/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSFileHandle.java
index a56fccd..86adf08 100644
--- a/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSFileHandle.java
+++ b/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSFileHandle.java
@@ -19,22 +19,15 @@ import java.io.File;
 
 import com.badlogic.gdx.Files.FileType;
 import com.badlogic.gdx.files.FileHandle;
-import com.badlogic.gdx.utils.GdxRuntimeException;
 
 // FIXME see if we can get classpath files to work
 public class IOSFileHandle extends FileHandle {
 	public IOSFileHandle (String fileName, FileType type) {
 		super(fileName, type);
-		if(type == FileType.Classpath) {
-			throw new GdxRuntimeException("Classpath files are not supported on iOS, this likely happened because you used the default constructor of BitmapFont.");
-		}
 	}
 
 	public IOSFileHandle (File file, FileType type) {
 		super(file, type);
-		if(type == FileType.Classpath) {
-			throw new GdxRuntimeException("Classpath files are not supported on iOS, this likely happened because you used the default constructor of BitmapFont.");
-		}
 	}
 
 	public FileHandle child (String name) {
diff --git a/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSFiles.java b/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSFiles.java
index a58b8dc..6927760 100644
--- a/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSFiles.java
+++ b/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSFiles.java
@@ -20,7 +20,6 @@ import cli.System.IO.Directory;
 
 import com.badlogic.gdx.Files;
 import com.badlogic.gdx.files.FileHandle;
-import com.badlogic.gdx.utils.GdxRuntimeException;
 
 public class IOSFiles implements Files {
 	static final String externalPath = Environment.GetFolderPath(Environment.SpecialFolder.wrap(Environment.SpecialFolder.MyDocuments));
@@ -37,8 +36,8 @@ public class IOSFiles implements Files {
 	}
 
 	@Override
-	public FileHandle classpath (String path) {
-		throw new GdxRuntimeException("Classpath files are not supported on iOS, this likely happened because you used the default constructor of BitmapFont.");
+	public FileHandle classpath (String path) {
+		return new IOSFileHandle(path, FileType.Classpath);
 	}
 
 	@Override
diff --git a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglApplication.java b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglApplication.java
index 588cd09..5050cc8 100644
--- a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglApplication.java
+++ b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglApplication.java
@@ -168,14 +168,18 @@ public class LwjglApplication implements Application {
 				executedRunnables.clear();
 				executedRunnables.addAll(runnables);
 				runnables.clear();
-			}
 
-			for (int i = 0; i < executedRunnables.size; i++) {
-				shouldRender = true;
-				executedRunnables.get(i).run(); // calls out to random app code that could do anything ...
+				for (int i = 0; i < executedRunnables.size; i++) {
+					shouldRender = true;
+					try {
+						executedRunnables.get(i).run();
+					} catch (Throwable t) {
+						t.printStackTrace();
+					}
+				}
 			}
 
-			// If one of the runnables set running to false, for example after an exit().
+			// If one of the runnables set running in false, for example after an exit().
 			if (!running) break;
 
 			input.update();
diff --git a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglCanvas.java b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglCanvas.java
index 10390e1..59e78a8 100644
--- a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglCanvas.java
+++ b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglCanvas.java
@@ -41,7 +41,6 @@ import com.badlogic.gdx.backends.openal.OpenALAudio;
 import com.badlogic.gdx.utils.Array;
 import com.badlogic.gdx.utils.Clipboard;
 import com.badlogic.gdx.utils.GdxRuntimeException;
-import com.badlogic.gdx.utils.SharedLibraryLoader;
 
 /** An OpenGL surface on an AWT Canvas, allowing OpenGL to be embedded in a Swing application. All OpenGL calls are done on the
  * EDT. This is slightly less efficient then a dedicated thread, but greatly simplifies synchronization. Note that you may need to
@@ -80,14 +79,7 @@ public class LwjglCanvas implements Application {
 
 			public final void addNotify () {
 				super.addNotify();
-				if (SharedLibraryLoader.isMac) {
-					EventQueue.invokeLater(new Runnable() {
-						public void run () {
-							create();
-						}
-					});
-				} else
-					create();
+				create();
 			}
 
 			public final void removeNotify () {
@@ -273,8 +265,8 @@ public class LwjglCanvas implements Application {
 				} catch (Throwable ignored) {
 				}
 				Array<LifecycleListener> listeners = lifecycleListeners;
-				synchronized (listeners) {
-					for (LifecycleListener listener : listeners) {
+				synchronized(listeners) {
+					for(LifecycleListener listener: listeners) {
 						listener.pause();
 						listener.dispose();
 					}
@@ -385,18 +377,18 @@ public class LwjglCanvas implements Application {
 	public void setCursor (Cursor cursor) {
 		this.cursor = cursor;
 	}
-
+	
 	@Override
 	public void addLifecycleListener (LifecycleListener listener) {
-		synchronized (lifecycleListeners) {
+		synchronized(lifecycleListeners) {
 			lifecycleListeners.add(listener);
 		}
 	}
 
 	@Override
 	public void removeLifecycleListener (LifecycleListener listener) {
-		synchronized (lifecycleListeners) {
+		synchronized(lifecycleListeners) {
 			lifecycleListeners.removeValue(listener, true);
-		}
+		}		
 	}
 }
diff --git a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGL20.java b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGL20.java
index 394ec92..6ea57e3 100644
--- a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGL20.java
+++ b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGL20.java
@@ -528,9 +528,7 @@ final class LwjglGL20 implements com.badlogic.gdx.graphics.GL20 {
 
 	public void glTexImage2D (int target, int level, int internalformat, int width, int height, int border, int format, int type,
 		Buffer pixels) {
-		if (pixels == null)
-			GL11.glTexImage2D(target, level, internalformat, width, height, border, format, type, (ByteBuffer)null);
-		else if (pixels instanceof ByteBuffer)
+		if (pixels instanceof ByteBuffer)
 			GL11.glTexImage2D(target, level, internalformat, width, height, border, format, type, (ByteBuffer)pixels);
 		else if (pixels instanceof ShortBuffer)
 			GL11.glTexImage2D(target, level, internalformat, width, height, border, format, type, (ShortBuffer)pixels);
diff --git a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/physics/box2d/Box2DDebugRenderer.java b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/physics/box2d/Box2DDebugRenderer.java
index 43d3042..36c9c31 100644
--- a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/physics/box2d/Box2DDebugRenderer.java
+++ b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/physics/box2d/Box2DDebugRenderer.java
@@ -161,7 +161,7 @@ public class Box2DDebugRenderer {
 			vertices[2].set(upper.x, upper.y);
 			vertices[3].set(lower.x, upper.y);
 
-			drawSolidPolygon(vertices, 4, AABB_COLOR, true);
+			drawSolidPolygon(vertices, 4, AABB_COLOR);
 		} else if (fixture.getType() == Type.Polygon) {
 			PolygonShape shape = (PolygonShape)fixture.getShape();
 			int vertexCount = shape.getVertexCount();
@@ -184,7 +184,7 @@ public class Box2DDebugRenderer {
 			vertices[2].set(upper.x, upper.y);
 			vertices[3].set(lower.x, upper.y);
 
-			drawSolidPolygon(vertices, 4, AABB_COLOR, true);
+			drawSolidPolygon(vertices, 4, AABB_COLOR);
 		}
 	}
 
@@ -205,7 +205,7 @@ public class Box2DDebugRenderer {
 			edge.getVertex2(vertices[1]);
 			transform.mul(vertices[0]);
 			transform.mul(vertices[1]);
-			drawSolidPolygon(vertices, 2, color, true);
+			drawSolidPolygon(vertices, 2, color);
 		}
 
 		if (fixture.getType() == Type.Polygon) {
@@ -215,7 +215,7 @@ public class Box2DDebugRenderer {
 				chain.getVertex(i, vertices[i]);
 				transform.mul(vertices[i]);
 			}
-			drawSolidPolygon(vertices, vertexCount, color, true);
+			drawSolidPolygon(vertices, vertexCount, color);
 		}
 
 		if (fixture.getType() == Type.Chain) {
@@ -225,7 +225,7 @@ public class Box2DDebugRenderer {
 				chain.getVertex(i, vertices[i]);
 				transform.mul(vertices[i]);
 			}
-			drawSolidPolygon(vertices, vertexCount, color, chain.isLooped());
+			drawSolidPolygon(vertices, vertexCount, color);
 		}
 	}
 
@@ -251,7 +251,7 @@ public class Box2DDebugRenderer {
 		renderer.line(center.x, center.y, 0, center.x + axis.x * radius, center.y + axis.y * radius, 0);
 	}
 
-	private void drawSolidPolygon (Vector2[] vertices, int vertexCount, Color color, boolean closed) {
+	private void drawSolidPolygon (Vector2[] vertices, int vertexCount, Color color) {
 		renderer.setColor(color.r, color.g, color.b, color.a);
 		for (int i = 0; i < vertexCount; i++) {
 			Vector2 v = vertices[i];
@@ -263,7 +263,7 @@ public class Box2DDebugRenderer {
 			renderer.line(lv.x, lv.y, v.x, v.y);
 			lv.set(v);
 		}
-		if(closed) renderer.line(f.x, f.y, lv.x, lv.y);
+		renderer.line(f.x, f.y, lv.x, lv.y);
 	}
 
 	private void drawJoint (Joint joint) {
diff --git a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/physics/box2d/ChainShape.java b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/physics/box2d/ChainShape.java
index 706886e..a6745d3 100644
--- a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/physics/box2d/ChainShape.java
+++ b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/physics/box2d/ChainShape.java
@@ -18,12 +18,10 @@ package com.badlogic.gdx.physics.box2d;
 
 import org.jbox2d.common.Vec2;
 
-import com.badlogic.gdx.graphics.Color;
 import com.badlogic.gdx.math.Vector2;
 
 public class ChainShape extends Shape {
 	org.jbox2d.collision.shapes.ChainShape shape;
-	boolean isLooped = false;
 
 	public ChainShape () {
 		super(new org.jbox2d.collision.shapes.ChainShape());
@@ -48,7 +46,6 @@ public class ChainShape extends Shape {
 			v[i] = new Vec2(vertices[i].x, vertices[i].y);
 		}
 		shape.createLoop(v, v.length);
-		isLooped = true;
 	}
 
 	/** Create a chain with isolated end vertices.
@@ -59,7 +56,6 @@ public class ChainShape extends Shape {
 			v[i] = new Vec2(vertices[i].x, vertices[i].y);
 		}
 		shape.createChain(v, v.length);
-		isLooped = false;
 	}
 
 	/** Establish connectivity to a vertex that precedes the first vertex. Don't call this for loops. */
@@ -109,8 +105,4 @@ public class ChainShape extends Shape {
 	public int getChildCount () {
 		return shape.getChildCount();
 	}
-
-	public boolean isLooped () {
-		return isLooped;
-	}
 }
diff --git a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/preloader/PreloaderBundleGenerator.java b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/preloader/PreloaderBundleGenerator.java
index 671ef92..b8ec933 100644
--- a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/preloader/PreloaderBundleGenerator.java
+++ b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/preloader/PreloaderBundleGenerator.java
@@ -53,6 +53,7 @@ public class PreloaderBundleGenerator extends Generator {
 		System.out.println(new File(".").getAbsolutePath());
 		String assetPath = getAssetPath(context);
 		String assetOutputPath = getAssetOutputPath(context);
+		System.out.println("TEST TEST TEST");
 		if ( assetOutputPath == null ){
 			assetOutputPath = "war/";
 		}
diff --git a/backends/gdx-backends-gwt/src/com/badlogic/gwtref/gen/ReflectionCacheSourceCreator.java b/backends/gdx-backends-gwt/src/com/badlogic/gwtref/gen/ReflectionCacheSourceCreator.java
index f07e005..6149613 100644
--- a/backends/gdx-backends-gwt/src/com/badlogic/gwtref/gen/ReflectionCacheSourceCreator.java
+++ b/backends/gdx-backends-gwt/src/com/badlogic/gwtref/gen/ReflectionCacheSourceCreator.java
@@ -92,7 +92,7 @@ public class ReflectionCacheSourceCreator {
 		if (printWriter == null) {
 			return packageName + "." + simpleName;
 		}
-		sw = composer.createSourceWriter(context, printWriter);		
+		sw = composer.createSourceWriter(context, printWriter);
 
 		generateLookups();
 
@@ -112,7 +112,6 @@ public class ReflectionCacheSourceCreator {
 
 		sw.commit(logger);
 		createProxy(type);
-		System.out.println(source.toString());
 		return packageName + "." + simpleName;
 	}
 
diff --git a/build-mac-ios.xml b/build-mac-ios.xml
deleted file mode 100644
index 290672b..0000000
--- a/build-mac-ios.xml
+++ /dev/null
@@ -1,75 +0,0 @@
-<project name="gdx-ios-build" default="all" basedir=".">
-	<!-- compile the distribution so we have all jars we need, do not compile natives -->
-	<target name="compile-jars">		
-		<ant antfile="build.xml" dir=".">
-			<property name="compile-natives" value="false"/>
-		</ant>
-	</target>
-		
-	<target name="core" depends="compile-jars">
-		<ant antfile="build-macosx32.xml" dir="gdx/jni">
-			<target name="clean"/>
-			<target name="postcompile"/>
-		</ant>
-		<ant antfile="build-ios32.xml" dir="gdx/jni"/>
-		<ant antfile="convert-ikvm.xml" dir=".">
-			<property name="IN" value="-srcpath:gdx/src/ dist/gdx.jar"/>
-			<property name="OUT" value="gdx/libs/ios32/gdx.dll"/>
-		</ant>
-	</target>
-	
-	<target name="backend-iosmonotouch" depends="core">
-		<ant antfile="convert-ikvm.xml" dir=".">
-			<property name="IN" value="-r:gdx/libs/ios32/gdx.dll -srcpath:backends/gdx-backend-iosmonotouch/src/ dist/gdx-backend-iosmonotouch.jar"/>
-			<property name="OUT" value="backends/gdx-backend-iosmonotouch/libs/ios32/gdx-backend-ios.dll"/>
-		</ant>
-	</target>
-	
-	<target name="freetype" depends="core">
-		<ant antfile="build-macosx32.xml" dir="extensions/gdx-freetype/jni">
-			<target name="clean"/>
-			<target name="postcompile"/>
-		</ant>
-		<ant antfile="build-ios32.xml" dir="extensions/gdx-freetype/jni"/>
-		<ant antfile="convert-ikvm.xml" dir=".">
-			<property name="IN" value="-r:gdx/libs/ios32/gdx.dll -srcpath:extensions/gdx-freetype/src/ dist/extensions/gdx-freetype/gdx-freetype.jar"/>
-			<property name="OUT" value="extensions/gdx-freetype/libs/ios32/gdx-freetype.dll"/>
-		</ant>
-	</target>
-	
-	<target name="bullet" depends="core">
-		<ant antfile="build-macosx32.xml" dir="extensions/gdx-bullet/jni">
-			<target name="clean"/>
-			<target name="postcompile"/>
-		</ant>
-		<!--<ant antfile="build-ios32.xml" dir="extensions/gdx-bullet/jni"/>
-		<ant antfile="convert-ikvm.xml" dir=".">
-			<property name="IN" value="-r:gdx/libs/ios32/gdx.dll -srcpath:extensions/gdx-bullet/src/ dist/extensions/gdx-bullet/gdx-bullet.jar"/>
-			<property name="OUT" value="extensions/gdx-bullet/libs/ios32/gdx-bullet.dll"/>
-		</ant>-->
-	</target>
-	
-	<target name="controllers" depends="core">
-		<ant antfile="build-macosx32.xml" dir="extensions/gdx-controllers/gdx-controllers-desktop/jni">
-			<target name="clean"/>
-			<target name="postcompile"/>
-		</ant>
-	</target>
-	
-	<target name="audio" depends="core">
-		<ant antfile="build-macosx32.xml" dir="extensions/gdx-audio/jni">
-			<target name="clean"/>
-			<target name="postcompile"/>
-		</ant>
-	</target>
-	
-	<target name="image" depends="core">
-		<ant antfile="build-macosx32.xml" dir="extensions/gdx-image/jni">
-			<target name="clean"/>
-			<target name="postcompile"/>
-		</ant>
-	</target>
-	
-	<target name="all" depends="core,backend-iosmonotouch,freetype,bullet,audio,image,controllers">	
-	</target>
-</project>
diff --git a/build-template-bullet.xml b/build-template-bullet.xml
new file mode 100644
index 0000000..06bbc2e
--- /dev/null
+++ b/build-template-bullet.xml
@@ -0,0 +1,137 @@
+<!-- 
+template Ant build file for all projects that should go into the distribution. 
+Fill out the properties at the beginning of the project definition.
+
+The following things have to be set from the outside:
+
+property name="jar" value="jar-name-without-suffix" -> the name of the resulting jar file
+property name="distDir" value="dist-directory" -> the output directory for the resulting jar
+path id="classpath" -> the filesets defining the classpath needed to compile the project
+zipfileset id="jarfiles" -> the jar files to be merged with the project's classes
+-->
+<project name="template" default="all" basedir=".">
+	<!-- default values -->
+	<property name="src" value="src"/>
+	<property name="jni" value="jni"/>
+	<property name="target" value="target" />
+	<property name="libs" value="libs" />
+	<path id="classpath"/>
+	<zipfileset id="jarfiles" dir="." excludes="**"/>
+	
+	<!-- clean output directories -->	
+	<target name="clean">		
+		<delete dir="${target}" />
+	</target>
+
+	<!-- init task, creates all necessary directories -->
+	<target name="init" depends="clean">
+		<mkdir dir="${libs}/android32" />
+		<mkdir dir="${libs}/armeabi" />
+		<mkdir dir="${libs}/armeabi-v7a" />
+		<mkdir dir="${libs}/linux32" />
+		<mkdir dir="${libs}/linux64" />
+		<mkdir dir="${libs}/macosx32" />
+		<mkdir dir="${libs}/windows32" />
+		<mkdir dir="${libs}/windows64" />
+		
+		<mkdir dir="${target}" />
+		<mkdir dir="${target}/java" />
+		<!-- need to copy the internal font to target if compiling the gdx core :/ -->
+		<copy failonerror="false" tofile="${target}/java/com/badlogic/gdx/utils/arial-15.png" file="src/com/badlogic/gdx/utils/arial-15.png" />
+		<copy failonerror="false" tofile="${target}/java/com/badlogic/gdx/utils/arial-15.fnt" file="src/com/badlogic/gdx/utils/arial-15.fnt" />
+		<!-- need to copy jni headers for gdx-jnigen -->
+		<copy failonerror="false" todir="${target}/java">
+			<fileset dir="src">
+				<include name="**/*.h"/>
+				<include name="**/*.template"/>
+			</fileset>
+		</copy>
+		<copy failonerror="false" todir="${target}/java">
+			<fileset dir="src">
+				<include name="**/*.gwt.xml"/>
+			</fileset>
+		</copy>
+	</target>
+
+	<!-- compiles the java code -->
+	<target name="compile" depends="init">
+		<javac debug="on" encoding="utf-8" srcdir="${src}" destdir="${target}/java">
+		    <src path="jni/swig-src"/> 
+			<classpath>
+				<path refid="classpath"/>
+				<fileset file="${libs}/*.jar">
+					<exclude name="*-natives.jar"/>
+				</fileset>
+			</classpath>
+			<exclude name="**/gwt/emu/java/lang/System.java"/>
+		</javac>
+	</target>
+
+
+	<!-- compile native code if available -->
+	<target name="check-natives">
+		<condition property="natives-present">
+			<and>
+				<available file="${jni}/build.xml"/>
+				<istrue value="${build-natives}"/>
+			</and>
+		</condition>
+	</target>
+	<target name="compile-natives" depends="init, check-natives" if="natives-present">
+		<echo message="compiling natives code"/>
+		<ant antfile="build.xml" target="clean" dir="${jni}"/>
+		<ant antfile="build.xml" target="all" dir="${jni}"/>
+		<!-- copy shared libs for android -->
+		<copy failonerror="false" todir="${distDir}/armeabi">
+			<fileset dir="${libs}/armeabi">
+				<include name="**/*.so"/>
+			</fileset>
+		</copy>
+		<copy failonerror="false" todir="${distDir}/armeabi-v7a">
+			<fileset dir="${libs}/armeabi-v7a">
+				<include name="**/*.so"/>
+			</fileset>
+		</copy>
+	</target>
+	
+	<!-- create source and class jar -->
+	<target name="all" depends="compile,compile-natives">
+		<!-- source jar -->
+		<mkdir dir="${distDir}/sources" />
+		<jar destfile="${distDir}/sources/${jar}-sources.jar" basedir="${src}" />
+		
+		<!-- copy shared libs for desktop -->
+		<copy failonerror="false" todir="${distDir}">
+			<fileset dir="${libs}">
+				<include name="**/*-natives.jar"/>
+				<exclude name="**/test-natives.jar"/>
+			</fileset>
+		</copy>
+		
+		<!-- copy shared libs for android -->
+		<copy failonerror="false" todir="${distDir}/armeabi">
+			<fileset dir="${libs}/armeabi">
+				<include name="**/*.so"/>
+			</fileset>
+		</copy>
+		<copy failonerror="false" todir="${distDir}/armeabi-v7a">
+			<fileset dir="${libs}/armeabi-v7a">
+				<include name="**/*.so"/>
+			</fileset>
+		</copy>
+		
+		<!-- class jar -->
+		<jar destfile="${distDir}/${jar}.jar">
+			<fileset dir="${target}/java"/>
+			<!-- merge dependencies found in libs/ folder, exclude native, debug and android/gwt jars -->
+			<zipgroupfileset file="${libs}/*.jar">
+				<exclude name="*-natives.jar"/>
+				<exclude name="*-debug.jar"/>
+				<exclude name="android-*.jar"/>
+				<exclude name="gwt*.jar"/>
+			</zipgroupfileset>
+			<!-- merge dependencies specified in parent build.xml -->
+			<zipfileset refid="jarfiles"/>
+		</jar>
+	</target>
+</project>
diff --git a/build-template.xml b/build-template.xml
index d3be8b9..4f5d7d4 100644
--- a/build-template.xml
+++ b/build-template.xml
@@ -11,23 +11,29 @@ zipfileset id="jarfiles" -> the jar files to be merged with the project's classe
 -->
 <project name="template" default="all" basedir=".">
 	<!-- default values -->
-	<path id="src">
-		<pathelement location="src"/>
-	</path>
-	<path id="classpath"/>
+	<property name="src" value="src"/>
 	<property name="jni" value="jni"/>
 	<property name="target" value="target" />
 	<property name="libs" value="libs" />
+	<path id="classpath"/>
 	<zipfileset id="jarfiles" dir="." excludes="**"/>
 	
-	<!-- clean output directories, create libs directory -->	
+	<!-- clean output directories -->	
 	<target name="clean">		
-		<mkdir dir="${libs}" />
 		<delete dir="${target}" />
 	</target>
 
 	<!-- init task, creates all necessary directories -->
-	<target name="init" depends="clean">		
+	<target name="init" depends="clean">
+		<mkdir dir="${libs}/android32" />
+		<mkdir dir="${libs}/armeabi" />
+		<mkdir dir="${libs}/armeabi-v7a" />
+		<mkdir dir="${libs}/linux32" />
+		<mkdir dir="${libs}/linux64" />
+		<mkdir dir="${libs}/macosx32" />
+		<mkdir dir="${libs}/windows32" />
+		<mkdir dir="${libs}/windows64" />
+		
 		<mkdir dir="${target}" />
 		<mkdir dir="${target}/java" />
 		<!-- need to copy the internal font to target if compiling the gdx core :/ -->
@@ -49,10 +55,7 @@ zipfileset id="jarfiles" -> the jar files to be merged with the project's classe
 
 	<!-- compiles the java code -->
 	<target name="compile" depends="init">
-		<javac debug="on" encoding="utf-8" source="1.6" target="1.6" destdir="${target}/java">
-			<src>
-				<path refid="src"/>
-			</src>
+		<javac debug="on" encoding="utf-8" srcdir="${src}" destdir="${target}/java">
 			<classpath>
 				<path refid="classpath"/>
 				<fileset file="${libs}/*.jar">
@@ -73,17 +76,7 @@ zipfileset id="jarfiles" -> the jar files to be merged with the project's classe
 			</and>
 		</condition>
 	</target>
-	
 	<target name="compile-natives" depends="init, check-natives" if="natives-present">
-		<mkdir dir="${libs}/android32" />
-		<mkdir dir="${libs}/armeabi" />
-		<mkdir dir="${libs}/armeabi-v7a" />
-		<mkdir dir="${libs}/linux32" />
-		<mkdir dir="${libs}/linux64" />
-		<mkdir dir="${libs}/macosx32" />
-		<mkdir dir="${libs}/windows32" />
-		<mkdir dir="${libs}/windows64" />
-		<mkdir dir="${libs}/ios32"/>
 		<echo message="compiling natives code"/>
 		<ant antfile="build.xml" target="clean" dir="${jni}"/>
 		<ant antfile="build.xml" target="all" dir="${jni}"/>
@@ -104,9 +97,7 @@ zipfileset id="jarfiles" -> the jar files to be merged with the project's classe
 	<target name="all" depends="compile,compile-natives">
 		<!-- source jar -->
 		<mkdir dir="${distDir}/sources" />
-		
-		<!-- FIXME doesn't work for bullet, as this only takes the src/ folder -->
-		<jar destfile="${distDir}/sources/${jar}-sources.jar" basedir="src"/>			
+		<jar destfile="${distDir}/sources/${jar}-sources.jar" basedir="${src}" />
 		
 		<!-- copy shared libs for desktop -->
 		<copy failonerror="false" todir="${distDir}">
diff --git a/build.xml b/build.xml
index 6d2dd6a..c520166 100644
--- a/build.xml
+++ b/build.xml
@@ -6,7 +6,7 @@
 	<property name="env.NDK_HOME" value="/home/mzechner/android-ndk-r5"/>
 	
 	<!-- library version -->
-	<property name="version" value="0.9.8"/>
+	<property name="version" value="0.9.3"/>
 	
 	<!-- define distribution/output directory -->
 	<property name="distDir" value="${basedir}/dist"/>
@@ -23,7 +23,7 @@
 	<!-- gdx jnigen -->
 	<target name="gdx-jnigen">
 		<ant antfile="../../build-template.xml" dir="extensions/gdx-jnigen">
-			<property name="distDir" value="${distDir}/extensions/gdx-jnigen"/>
+			<property name="distDir" value="${distDir}/extensions"/>
 			<property name="jar" value="gdx-jnigen"/>
 			<!-- we shouldn't build any natives -->
 			<property name="build-natives" value="false"/>
@@ -39,7 +39,7 @@
 	<!-- gdx core -->
 	<target name="gdx-core" depends="gdx-jnigen">
 		<path id="classpath">
-			<pathelement location="${distDir}/extensions/gdx-jnigen/gdx-jnigen.jar"/>
+			<pathelement location="${distDir}/extensions/gdx-jnigen.jar"/>
 		</path>
 		<ant antfile="../build-template.xml" dir="gdx">
 			<property name="jar" value="gdx"/>
@@ -95,24 +95,7 @@
 		<ant antfile="../../build-template.xml" dir="backends/gdx-backends-gwt">
 			<property name="jar" value="gdx-backend-gwt"/>
 			<reference refid="classpath"/>
-		</ant>
-	</target>
-	
-	<!-- gdx ios-monotouch backend -->
-	<target name="gdx-backend-iosmonotouch" depends="gdx-core">
-		<path id="classpath">
-			<pathelement location="${distDir}/gdx.jar"/>
-			<pathelement location="${basedir}/backends/gdx-backend-iosmonotouch/libs/monotouch-jars/monotouch-5.4.0.jar"/>
-			<pathelement location="${basedir}/backends/gdx-backend-iosmonotouch/libs/monotouch-jars/mscorlib-4.0.jar"/>
-			<pathelement location="${basedir}/backends/gdx-backend-iosmonotouch/libs/monotouch-jars/opentk-5.4.0.jar"/>
-			<pathelement location="${basedir}/backends/gdx-backend-iosmonotouch/libs/monotouch-jars/system-2.1.jar"/>
-			<pathelement location="${basedir}/backends/gdx-backend-iosmonotouch/libs/monotouch-jars/system-core-2.1.jar"/>
-			<pathelement location="${basedir}/backends/gdx-backend-iosmonotouch/libs/monotouch-jars/system-data-2.1.jar"/>
-			<pathelement location="${basedir}/backends/gdx-backend-iosmonotouch/libs/objectal/libObjectAL.jar"/>
-		</path>
-		<ant antfile="../../build-template.xml" dir="backends/gdx-backend-iosmonotouch">
-			<property name="jar" value="gdx-backend-iosmonotouch"/>
-			<reference refid="classpath"/>
+			<reference refid="jarfiles"/>
 		</ant>
 	</target>
 	
@@ -124,7 +107,7 @@
 			<pathelement location="${distDir}/gdx-backend-lwjgl.jar"/>			
 		</path>
 		<ant antfile="../../build-template.xml" dir="extensions/gdx-tools">
-			<property name="distDir" value="${distDir}/extensions/gdx-tools"/>
+			<property name="distDir" value="${distDir}/extensions"/>
 			<property name="jar" value="gdx-tools"/>
 			<reference refid="classpath"/>
 		</ant>
@@ -135,10 +118,10 @@
 		<path id="classpath">
 			<pathelement location="${distDir}/gdx.jar"/>
 			<pathelement location="${distDir}/gdx-backend-lwjgl.jar"/>
-			<pathelement location="${distDir}/extensions/gdx-tools/gdx-tools.jar"/>
+			<pathelement location="${distDir}/extensions/gdx-tools.jar"/>
 		</path>
 		<ant antfile="../../build-template.xml" dir="extensions/gdx-tiled-preprocessor">
-			<property name="distDir" value="${distDir}/extensions/gdx-tiled-preprocessor"/>
+			<property name="distDir" value="${distDir}/extensions"/>
 			<property name="jar" value="gdx-tiled-preprocessor"/>
 			<reference refid="classpath"/>
 		</ant>
@@ -150,7 +133,7 @@
 			<pathelement location="${distDir}/gdx.jar"/>
 		</path>
 		<ant antfile="../../../build-template.xml" dir="extensions/gdx-controllers/gdx-controllers">
-			<property name="distDir" value="${distDir}/extensions/gdx-controllers"/>
+			<property name="distDir" value="${distDir}/extensions"/>
 			<property name="jar" value="gdx-controllers"/>
 			<reference refid="classpath"/>
 		</ant>
@@ -160,11 +143,11 @@
 		<path id="classpath">
 			<pathelement location="${distDir}/gdx.jar"/>
 			<pathelement location="${distDir}/gdx-backend-lwjgl.jar"/>
-			<pathelement location="${distDir}/extensions/gdx-jnigen/gdx-jnigen.jar"/>
-			<pathelement location="${distDir}/extensions/gdx-controllers/gdx-controllers.jar"/>
+			<pathelement location="${distDir}/extensions/gdx-jnigen.jar"/>
+			<pathelement location="${distDir}/extensions/gdx-controllers.jar"/>
 		</path>
 		<ant antfile="../../../build-template.xml" dir="extensions/gdx-controllers/gdx-controllers-desktop">
-			<property name="distDir" value="${distDir}/extensions/gdx-controllers/"/>
+			<property name="distDir" value="${distDir}/extensions"/>
 			<property name="jar" value="gdx-controllers-desktop"/>
 			<reference refid="classpath"/>
 		</ant>
@@ -174,11 +157,11 @@
 		<path id="classpath">
 			<pathelement location="${distDir}/gdx.jar"/>
 			<pathelement location="${distDir}/gdx-backend-android.jar"/>
-			<pathelement location="${distDir}/extensions/gdx-controllers/gdx-controllers.jar"/>
+			<pathelement location="${distDir}/extensions/gdx-controllers.jar"/>
 			<pathelement location="${basedir}/backends/gdx-backend-android/libs/android-4.2.jar"/>
 		</path>
 		<ant antfile="../../../build-template.xml" dir="extensions/gdx-controllers/gdx-controllers-android">
-			<property name="distDir" value="${distDir}/extensions/gdx-controllers"/>
+			<property name="distDir" value="${distDir}/extensions"/>
 			<property name="jar" value="gdx-controllers-android"/>
 			<reference refid="classpath"/>
 		</ant>
@@ -188,10 +171,10 @@
 		<path id="classpath">
 			<pathelement location="${distDir}/gdx.jar"/>
 			<pathelement location="${distDir}/gdx-backend-gwt.jar"/>
-			<pathelement location="${distDir}/extensions/gdx-controllers/gdx-controllers.jar"/>
+			<pathelement location="${distDir}/extensions/gdx-controllers.jar"/>
 		</path>
 		<ant antfile="../../../build-template.xml" dir="extensions/gdx-controllers/gdx-controllers-gwt">
-			<property name="distDir" value="${distDir}/extensions/gdx-controllers"/>
+			<property name="distDir" value="${distDir}/extensions"/>
 			<property name="jar" value="gdx-controllers-gwt"/>
 			<reference refid="classpath"/>
 		</ant>
@@ -201,10 +184,10 @@
 	<target name="gdx-image" depends="gdx-core">
 		<path id="classpath">
 			<pathelement location="${distDir}/gdx.jar"/>
-			<pathelement location="${distDir}/extensions/gdx-jnigen/gdx-jnigen.jar"/>
+			<pathelement location="${distDir}/extensions/gdx-jnigen.jar"/>
 		</path>
 		<ant antfile="../../build-template.xml" dir="extensions/gdx-image">
-			<property name="distDir" value="${distDir}/extensions/gdx-image"/>
+			<property name="distDir" value="${distDir}/extensions"/>
 			<property name="jar" value="gdx-image"/>
 			<reference refid="classpath"/>
 		</ant>
@@ -214,10 +197,10 @@
 	<target name="gdx-audio" depends="gdx-core">
 		<path id="classpath">
 			<pathelement location="${distDir}/gdx.jar"/>
-			<pathelement location="${distDir}/extensions/gdx-jnigen/gdx-jnigen.jar"/>
+			<pathelement location="${distDir}/extensions/gdx-jnigen.jar"/>
 		</path>
 		<ant antfile="../../build-template.xml" dir="extensions/gdx-audio">
-			<property name="distDir" value="${distDir}/extensions/gdx-audio"/>
+			<property name="distDir" value="${distDir}/extensions"/>
 			<property name="jar" value="gdx-audio"/>
 			<reference refid="classpath"/>
 		</ant>
@@ -227,10 +210,10 @@
 	<target name="gdx-freetype" depends="gdx-core">
 		<path id="classpath">
 			<pathelement location="${distDir}/gdx.jar"/>
-			<pathelement location="${distDir}/extensions/gdx-jnigen/gdx-jnigen.jar"/>
+			<pathelement location="${distDir}/extensions/gdx-jnigen.jar"/>
 		</path>
 		<ant antfile="../../build-template.xml" dir="extensions/gdx-freetype">
-			<property name="distDir" value="${distDir}/extensions/gdx-freetype"/>
+			<property name="distDir" value="${distDir}/extensions"/>
 			<property name="jar" value="gdx-freetype"/>
 			<reference refid="classpath"/>
 		</ant>
@@ -240,24 +223,34 @@
 	<target name="gdx-bullet" depends="gdx-core">
 		<path id="classpath">
 			<pathelement location="${distDir}/gdx.jar"/>
-			<pathelement location="${distDir}/extensions/gdx-jnigen/gdx-jnigen.jar"/>
-		</path>
-		<path id="src">
-				<pathelement location="extensions/gdx-bullet/src"/>
-				<pathelement location="extensions/gdx-bullet/jni/swig-src"/>
+			<pathelement location="${distDir}/extensions/gdx-jnigen.jar"/>
 		</path>
-		<ant antfile="../../build-template.xml" dir="extensions/gdx-bullet">
+		<ant antfile="../../build-template-bullet.xml" dir="extensions/gdx-bullet">
 			<property name="distDir" value="${distDir}/extensions/gdx-bullet"/>
 			<property name="jar" value="gdx-bullet"/>
 			<reference refid="classpath"/>
-			<reference refid="src"/>
 		</ant>
 	</target>
+
+   <!-- model loaders -->
+   <target name="gdx-model-loaders" depends="gdx-core,gdx-backend-lwjgl">
+      <path id="classpath">
+         <pathelement location="${distDir}/gdx.jar"/>
+         <pathelement location="${distDir}/extensions/gdx-jnigen.jar"/>
+         <pathelement location="${distDir}/gdx-backend-lwjgl.jar"/>
+      </path>
+      <ant antfile="../../../build-template.xml" dir="extensions/model-loaders/model-loaders">
+         <property name="distDir" value="${distDir}/extensions/model-loaders/model-loaders"/>
+         <property name="jar" value="gdx-model-loaders"/>
+         <reference refid="classpath"/>
+      </ant>
+   </target>
+
 	
 	<!-- generates the javadoc for the core api and the application implementations -->
 	<target name="docs" depends="clean">
 		<javadoc destdir="${distDir}/docs/api" author="true" version="true" use="true"
-		windowtitle="libgdx API" doctitle="libgdx API" footer="libgdx API" useexternalfile="true">
+		windowtitle="libgdx API" doctitle="libgdx API" footer="libgdx API">
 			<header><![CDATA[
 				libgdx API
 				<style>
@@ -294,17 +287,9 @@
 		</javadoc>
 	</target>
 	
-	<!-- assumes that all the .dll and .a files have been compiled on a Mac and copied on top 
-	of the current libgdx folder -->
 	<target name="copy-iosfiles">
-		<!-- copy dll and .a files as well as IKVM, monotouch and ObjectAL binaries to ios folder-->
 		<copy todir="${distDir}/ios" flatten="true" failonerror="false">
-			<fileset dir="gdx/libs/ios32/">
-				<include name="*.a"/>
-				<include name="*.dll"/>
-				<include name="*.dll.mdb"/>
-			</fileset>
-			<fileset dir="backends/gdx-backend-iosmonotouch/libs/ios32">
+			<fileset dir="backends/gdx-backend-iosmonotouch/libs/">
 				<include name="*.dll"/>
 				<include name="*.dll.mdb"/>
 				<include name="*.a"/>
@@ -318,29 +303,11 @@
 		</copy>
 		<copy todir="${distDir}/ios/objectal" failonerror="false">
 			<fileset dir="backends/gdx-backend-iosmonotouch/libs/objectal"/>
-		</copy>		
-		
-		<!-- copy freetype extension dll and .a files -->
-		<copy todir="${distDir}/extensions/gdx-freetype/ios" failonerror="false">
-			<fileset dir="extensions/gdx-freetype/libs/ios32">
-				<include name="*.a"/>
-				<include name="*.dll"/>
-				<include name="*.dll.mdb"/>
-			</fileset>
-		</copy>
-		
-		<!-- copy bullet extension dll and .a files -->
-		<copy todir="${distDir}/extensions/gdx-bullet/ios" failonerror="false">
-			<fileset dir="extensions/gdx-bullet/libs/ios32">
-				<include name="*.a"/>
-				<include name="*.dll"/>
-				<include name="*.dll.mdb"/>
-			</fileset>
 		</copy>
 	</target>
 
 	<target name="jars" 
-depends="clean,gdx-setup-ui,gdx-core,gdx-openal,gdx-backend-lwjgl,gdx-backend-android,gdx-backend-gwt,gdx-backend-iosmonotouch,gdx-tools,gdx-tiled-preprocessor,gdx-controllers,gdx-controllers-desktop,gdx-controllers-android,gdx-controllers-gwt,gdx-image,gdx-audio,gdx-freetype,gdx-bullet"/>
+depends="clean,gdx-setup-ui,gdx-core,gdx-openal,gdx-backend-lwjgl,gdx-backend-android,gdx-backend-gwt,gdx-tools,gdx-tiled-preprocessor,gdx-controllers,gdx-controllers-desktop,gdx-controllers-android,gdx-controllers-gwt,gdx-image,gdx-audio,gdx-freetype,gdx-bullet"/>
 
 	<target name="all" depends="jars,docs,copy-iosfiles">
 		<!-- copy distribution files (licences etc.) -->
diff --git a/compile-macosx.sh b/compile-macosx.sh
new file mode 100755
index 0000000..f2fe587
--- /dev/null
+++ b/compile-macosx.sh
@@ -0,0 +1,33 @@
+# compiles all the natives for mac os x and ios
+cd extensions/gdx-controllers/gdx-controllers-desktop/jni
+ant -f build-macosx32.xml clean
+ant -f build-macosx32.xml
+cd ../../../..
+cd gdx/jni
+ant -f build-macosx32.xml clean
+ant -f build-macosx32.xml
+cd ../..
+cd extensions
+cd gdx-freetype/jni
+ant -f build-macosx32.xml clean
+ant -f build-macosx32.xml
+cd ../..
+cd gdx-audio/jni
+ant -f build-macosx32.xml clean
+ant -f build-macosx32.xml
+cd ../..
+cd gdx-image/jni
+ant -f build-macosx32.xml clean
+ant -f build-macosx32.xml
+cd ../..
+cd gdx-bullet/jni
+ant -f build-macosx32.xml clean
+ant -f build-macosx32.xml
+cd ../../..
+
+# special iOS sauce, you need to have IKVM_HOME set in your environment
+# MonoTouch must be installed as well as XCode. You also need Ant 1.8.x
+# in your PATH 
+cd backends/gdx-backend-iosmonotouch
+ant
+cd ../..
diff --git a/convert-ikvm.xml b/convert-ikvm.xml
deleted file mode 100755
index 0fda2de..0000000
--- a/convert-ikvm.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<project name="gdx" default="convert" basedir=".">
- 	<property environment="env"/>
-	<property name="IKVM_HOME" value="${basedir}/backends/gdx-backend-iosmonotouch/libs/ikvm"/>
-	<property name="MONO_HOME" value="/Developer/MonoTouch/usr/lib/mono/2.1"/>
-
-	<target name="convert">
-		<exec executable="mono">
-			<arg value="${IKVM_HOME}/bin/ikvmc.exe"/>
-			<arg value="-nostdlib"/>
-			<arg value="-target:library"/>
-			<arg value="-debug"/>
-			<arg value="-out:${OUT}"/>
-			<arg value="-r:backends/gdx-backend-iosmonotouch/libs/objectal/libObjectAL.dll"/>
-			<arg value="-r:${MONO_HOME}/mscorlib.dll"/>
-			<arg value="-r:${MONO_HOME}/System.dll"/>
-			<arg value="-r:${MONO_HOME}/System.Core.dll"/>
-			<arg value="-r:${MONO_HOME}/System.Data.dll"/>
-			<arg value="-r:${MONO_HOME}/OpenTK-1.0.dll"/>
-			<arg value="-r:${MONO_HOME}/monotouch.dll"/>
-			<arg value="-r:${MONO_HOME}/Mono.Data.Sqlite.dll"/>
-			<arg line="${IN}"/>
-		</exec>
-	</target>
-</project>
diff --git a/demos/cuboc/cuboc-android/.classpath b/demos/cuboc/cuboc-android/.classpath
index 67ed5c2..798681a 100644
--- a/demos/cuboc/cuboc-android/.classpath
+++ b/demos/cuboc/cuboc-android/.classpath
@@ -6,6 +6,5 @@
 	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx"/>
 	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx-backend-android"/>
 	<classpathentry kind="con" path="com.android.ide.eclipse.adt.ANDROID_FRAMEWORK"/>
-	<classpathentry exported="true" kind="con" path="com.android.ide.eclipse.adt.LIBRARIES"/>
 	<classpathentry kind="output" path="bin/classes"/>
 </classpath>
diff --git a/demos/cuboc/cuboc-android/libs/armeabi-v7a/libandroidgl20.so b/demos/cuboc/cuboc-android/libs/armeabi-v7a/libandroidgl20.so
new file mode 100644
index 0000000..7a7cd7f
Binary files /dev/null and b/demos/cuboc/cuboc-android/libs/armeabi-v7a/libandroidgl20.so differ
diff --git a/demos/cuboc/cuboc-android/libs/armeabi-v7a/libgdx.so b/demos/cuboc/cuboc-android/libs/armeabi-v7a/libgdx.so
new file mode 100644
index 0000000..8d31a3e
Binary files /dev/null and b/demos/cuboc/cuboc-android/libs/armeabi-v7a/libgdx.so differ
diff --git a/demos/cuboc/cuboc-android/libs/armeabi/libandroidgl20.so b/demos/cuboc/cuboc-android/libs/armeabi/libandroidgl20.so
new file mode 100644
index 0000000..7a7cd7f
Binary files /dev/null and b/demos/cuboc/cuboc-android/libs/armeabi/libandroidgl20.so differ
diff --git a/demos/cuboc/cuboc-android/libs/armeabi/libgdx.so b/demos/cuboc/cuboc-android/libs/armeabi/libgdx.so
new file mode 100644
index 0000000..36f294f
Binary files /dev/null and b/demos/cuboc/cuboc-android/libs/armeabi/libgdx.so differ
diff --git a/demos/cuboc/cuboc/src/com/badlogic/cubocy/Map.java b/demos/cuboc/cuboc/src/com/badlogic/cubocy/Map.java
index 33ece3f..53689ce 100644
--- a/demos/cuboc/cuboc/src/com/badlogic/cubocy/Map.java
+++ b/demos/cuboc/cuboc/src/com/badlogic/cubocy/Map.java
@@ -36,6 +36,7 @@ public class Map {
 		for (int y = 0; y < 35; y++) {
 			for (int x = 0; x < 150; x++) {
 				int pix = (pixmap.getPixel(x, y) >>> 8) & 0xffffff;
+				Gdx.app.log("Map", x + ", " + y + ", " + Integer.toHexString(pix));
 				if (match(pix, START)) {
 					Dispenser dispenser = new Dispenser(x, pixmap.getHeight() - 1 - y);
 					dispensers.add(dispenser);
diff --git a/demos/cuboc/cuboc/src/com/badlogic/cubocy/MapRenderer.java b/demos/cuboc/cuboc/src/com/badlogic/cubocy/MapRenderer.java
index f497244..5a2f23d 100644
--- a/demos/cuboc/cuboc/src/com/badlogic/cubocy/MapRenderer.java
+++ b/demos/cuboc/cuboc/src/com/badlogic/cubocy/MapRenderer.java
@@ -134,6 +134,7 @@ public class MapRenderer {
 			}
 		}
 		cache.end();
+		Gdx.app.debug("Cubocy", "blocks: " + b);
 		stateTime += deltaTime;
 		batch.setProjectionMatrix(cam.combined);
 		batch.begin();
diff --git a/demos/invaders/gdx-invaders-android/.classpath b/demos/invaders/gdx-invaders-android/.classpath
index 12aa5d0..529b7f5 100644
--- a/demos/invaders/gdx-invaders-android/.classpath
+++ b/demos/invaders/gdx-invaders-android/.classpath
@@ -8,6 +8,5 @@
 	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx-backend-android"/>
 	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx-controllers"/>
 	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx-controllers-android"/>
-	<classpathentry exported="true" kind="con" path="com.android.ide.eclipse.adt.LIBRARIES"/>
 	<classpathentry kind="output" path="bin/classes"/>
 </classpath>
diff --git a/demos/invaders/gdx-invaders-android/libs/armeabi-v7a/libandroidgl20.so b/demos/invaders/gdx-invaders-android/libs/armeabi-v7a/libandroidgl20.so
new file mode 100644
index 0000000..7a7cd7f
Binary files /dev/null and b/demos/invaders/gdx-invaders-android/libs/armeabi-v7a/libandroidgl20.so differ
diff --git a/demos/invaders/gdx-invaders-android/libs/armeabi-v7a/libgdx.so b/demos/invaders/gdx-invaders-android/libs/armeabi-v7a/libgdx.so
new file mode 100644
index 0000000..8d31a3e
Binary files /dev/null and b/demos/invaders/gdx-invaders-android/libs/armeabi-v7a/libgdx.so differ
diff --git a/demos/invaders/gdx-invaders-android/libs/armeabi/libandroidgl20.so b/demos/invaders/gdx-invaders-android/libs/armeabi/libandroidgl20.so
new file mode 100644
index 0000000..7a7cd7f
Binary files /dev/null and b/demos/invaders/gdx-invaders-android/libs/armeabi/libandroidgl20.so differ
diff --git a/demos/invaders/gdx-invaders-android/libs/armeabi/libgdx.so b/demos/invaders/gdx-invaders-android/libs/armeabi/libgdx.so
new file mode 100644
index 0000000..36f294f
Binary files /dev/null and b/demos/invaders/gdx-invaders-android/libs/armeabi/libgdx.so differ
diff --git a/demos/invaders/gdx-invaders-ios/gdx-invaders-ios.userprefs b/demos/invaders/gdx-invaders-ios/gdx-invaders-ios.userprefs
index 1de8c83..e3bbaf3 100644
--- a/demos/invaders/gdx-invaders-ios/gdx-invaders-ios.userprefs
+++ b/demos/invaders/gdx-invaders-ios/gdx-invaders-ios.userprefs
@@ -4,15 +4,6 @@
     <Files>
       <File FileName="gdx-invaders-ios/Main.cs" Line="9" Column="24" />
     </Files>
-    <Pads>
-      <Pad Id="ProjectPad">
-        <State expanded="True">
-          <Node name="gdx-invaders-ios" expanded="True">
-            <Node name="References" expanded="True" selected="True" />
-          </Node>
-        </State>
-      </Pad>
-    </Pads>
   </MonoDevelop.Ide.Workbench>
   <MonoDevelop.Ide.DebuggingService.Breakpoints>
     <BreakpointStore />
diff --git a/demos/invaders/gdx-invaders-ios/gdx-invaders-ios/gdx-invaders-ios.csproj b/demos/invaders/gdx-invaders-ios/gdx-invaders-ios/gdx-invaders-ios.csproj
index 90eedec..1eaf659 100644
--- a/demos/invaders/gdx-invaders-ios/gdx-invaders-ios/gdx-invaders-ios.csproj
+++ b/demos/invaders/gdx-invaders-ios/gdx-invaders-ios/gdx-invaders-ios.csproj
@@ -113,7 +113,7 @@
     <Reference Include="System.Core" />
     <Reference Include="monotouch" />
     <Reference Include="gdx">
-      <HintPath>..\..\..\..\gdx\libs\ios32\gdx.dll</HintPath>
+      <HintPath>..\..\..\..\backends\gdx-backend-iosmonotouch\libs\gdx.dll</HintPath>
     </Reference>
     <Reference Include="gdx-backend-ios">
       <HintPath>..\..\..\..\backends\gdx-backend-iosmonotouch\libs\gdx-backend-ios.dll</HintPath>
diff --git a/demos/invaders/gdx-invaders-ios/gdx-invaders-ios/libgdx.a b/demos/invaders/gdx-invaders-ios/gdx-invaders-ios/libgdx.a
new file mode 100644
index 0000000..a681686
Binary files /dev/null and b/demos/invaders/gdx-invaders-ios/gdx-invaders-ios/libgdx.a differ
diff --git a/demos/invaders/gdx-invaders-ios/gdx-invaders-ios/libikvm-natives.a b/demos/invaders/gdx-invaders-ios/gdx-invaders-ios/libikvm-natives.a
new file mode 100644
index 0000000..29296a2
Binary files /dev/null and b/demos/invaders/gdx-invaders-ios/gdx-invaders-ios/libikvm-natives.a differ
diff --git a/demos/metagun/metagun-android/libs/armeabi-v7a/libandroidgl20.so b/demos/metagun/metagun-android/libs/armeabi-v7a/libandroidgl20.so
new file mode 100644
index 0000000..7a7cd7f
Binary files /dev/null and b/demos/metagun/metagun-android/libs/armeabi-v7a/libandroidgl20.so differ
diff --git a/demos/metagun/metagun-android/libs/armeabi-v7a/libgdx.so b/demos/metagun/metagun-android/libs/armeabi-v7a/libgdx.so
new file mode 100644
index 0000000..8d31a3e
Binary files /dev/null and b/demos/metagun/metagun-android/libs/armeabi-v7a/libgdx.so differ
diff --git a/demos/metagun/metagun-android/libs/armeabi/libandroidgl20.so b/demos/metagun/metagun-android/libs/armeabi/libandroidgl20.so
new file mode 100644
index 0000000..7a7cd7f
Binary files /dev/null and b/demos/metagun/metagun-android/libs/armeabi/libandroidgl20.so differ
diff --git a/demos/metagun/metagun-android/libs/armeabi/libgdx.so b/demos/metagun/metagun-android/libs/armeabi/libgdx.so
new file mode 100644
index 0000000..36f294f
Binary files /dev/null and b/demos/metagun/metagun-android/libs/armeabi/libgdx.so differ
diff --git a/demos/pax-britannica/pax-britannica-android/.classpath b/demos/pax-britannica/pax-britannica-android/.classpath
index e962a8d..c7e842a 100755
--- a/demos/pax-britannica/pax-britannica-android/.classpath
+++ b/demos/pax-britannica/pax-britannica-android/.classpath
@@ -6,6 +6,5 @@
 	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx-backend-android"/>
 	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/pax-britannica"/>
 	<classpathentry kind="con" path="com.android.ide.eclipse.adt.ANDROID_FRAMEWORK"/>
-	<classpathentry exported="true" kind="con" path="com.android.ide.eclipse.adt.LIBRARIES"/>
 	<classpathentry kind="output" path="bin/classes"/>
 </classpath>
diff --git a/demos/pax-britannica/pax-britannica-android/libs/armeabi-v7a/libandroidgl20.so b/demos/pax-britannica/pax-britannica-android/libs/armeabi-v7a/libandroidgl20.so
new file mode 100755
index 0000000..7a7cd7f
Binary files /dev/null and b/demos/pax-britannica/pax-britannica-android/libs/armeabi-v7a/libandroidgl20.so differ
diff --git a/demos/pax-britannica/pax-britannica-android/libs/armeabi-v7a/libgdx.so b/demos/pax-britannica/pax-britannica-android/libs/armeabi-v7a/libgdx.so
new file mode 100755
index 0000000..8d31a3e
Binary files /dev/null and b/demos/pax-britannica/pax-britannica-android/libs/armeabi-v7a/libgdx.so differ
diff --git a/demos/pax-britannica/pax-britannica-android/libs/armeabi/libandroidgl20.so b/demos/pax-britannica/pax-britannica-android/libs/armeabi/libandroidgl20.so
new file mode 100755
index 0000000..7a7cd7f
Binary files /dev/null and b/demos/pax-britannica/pax-britannica-android/libs/armeabi/libandroidgl20.so differ
diff --git a/demos/pax-britannica/pax-britannica-android/libs/armeabi/libgdx.so b/demos/pax-britannica/pax-britannica-android/libs/armeabi/libgdx.so
new file mode 100755
index 0000000..36f294f
Binary files /dev/null and b/demos/pax-britannica/pax-britannica-android/libs/armeabi/libgdx.so differ
diff --git a/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch.userprefs b/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch.userprefs
index ec32389..2df5211 100644
--- a/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch.userprefs
+++ b/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch.userprefs
@@ -1,5 +1,5 @@
 ﻿<Properties>
-  <MonoDevelop.Ide.Workspace ActiveConfiguration="Debug|iPhone" />
+  <MonoDevelop.Ide.Workspace ActiveConfiguration="Debug|iPhoneSimulator" />
   <MonoDevelop.Ide.Workbench ActiveDocument="../pax-britannica/src/de/swagner/paxbritannica/settings/Settings.java">
     <Files>
       <File FileName="pax-britannica-iosmonotouch/Main.cs" Line="11" Column="2" />
@@ -9,15 +9,6 @@
       <File FileName="../pax-britannica/src/de/swagner/paxbritannica/settings/Settings.java" Line="101" Column="5" />
       <File FileName="../../../gdx/src/com/badlogic/gdx/Game.java" Line="59" Column="1" />
     </Files>
-    <Pads>
-      <Pad Id="ProjectPad">
-        <State expanded="True">
-          <Node name="pax-britannica-iosmonotouch" expanded="True" selected="True">
-            <Node name="References" expanded="True" />
-          </Node>
-        </State>
-      </Pad>
-    </Pads>
   </MonoDevelop.Ide.Workbench>
   <MonoDevelop.Ide.DebuggingService.Breakpoints>
     <BreakpointStore>
diff --git a/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch/convert.properties b/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch/convert.properties
deleted file mode 100644
index 0dc6846..0000000
--- a/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch/convert.properties
+++ /dev/null
@@ -1,6 +0,0 @@
-SRC =       ../../pax-britannica/src/
-CLASSPATH = ../../../../gdx/bin
-EXCLUDE   = **/*Desktop.java
-IN        = -r:../../../../gdx/libs/ios32/gdx.dll -recurse:target/*.class
-OUT       = paxbritannica.dll
-
diff --git a/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch/convert.xml b/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch/convert.xml
index 8848391..03d94e4 100644
--- a/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch/convert.xml
+++ b/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch/convert.xml
@@ -1,25 +1,28 @@
 <project name="gdx" default="convert" basedir=".">
 	<property environment="env"/>
-	<property file="convert.properties" />
-	<property name="IKVM_HOME" value="../../../../backends/gdx-backend-iosmonotouch/libs/ikvm"/>
+	<property name="IKVM_HOME" value="${env.IKVM_HOME}"/>
 	<property name="MONO_HOME" value="/Developer/MonoTouch/usr/lib/mono/2.1"/>
+	<property name="IN" value="-recurse:target/core/*.class"/>
+	<property name="OUT" value="gdx.dll"/>
+	<property name="SRC" value="src/"/>
+	<property name="CLASSPATH" value=""/>
+	<property name="EXCLUDE" value=""/>
 
 	<target name="compile">
 		<delete dir="target"/>
 		<mkdir dir="target"/>
-		<javac srcdir="${SRC}" debug="on" source="1.6" target="1.6" destdir="target" classpath="${CLASSPATH}">
+		<javac srcdir="${SRC}" debug="on" destdir="target" classpath="${CLASSPATH}">
 			<include name="**/*.java"/>
 			<exclude name="${EXCLUDE}"/>
 		</javac>
 	</target>
 
-	<target name="convert" depends="compile">
+	<target name="convert">
 		<exec executable="mono">
 			<arg value="${IKVM_HOME}/bin/ikvmc.exe"/>
 			<arg value="-nostdlib"/>
 			<arg value="-target:library"/>
 			<arg value="-debug"/>
-			<arg value="-srcpath:${SRC}"/>
 			<arg value="-out:${OUT}"/>
 			<arg value="-r:${MONO_HOME}/mscorlib.dll"/>
 			<arg value="-r:${MONO_HOME}/System.dll"/>
@@ -28,6 +31,7 @@
 			<arg value="-r:${MONO_HOME}/OpenTK.dll"/>
 			<arg value="-r:${MONO_HOME}/monotouch.dll"/>
 			<arg value="-r:${MONO_HOME}/Mono.Data.Sqlite.dll"/>
+			<arg value="-srcpath:${SRC}"/>
 			<arg line="${IN}"/>
 		</exec>
 	</target>
diff --git a/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch/libgdx.a b/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch/libgdx.a
new file mode 100644
index 0000000..a681686
Binary files /dev/null and b/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch/libgdx.a differ
diff --git a/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch/libikvm-natives.a b/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch/libikvm-natives.a
new file mode 100644
index 0000000..29296a2
Binary files /dev/null and b/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch/libikvm-natives.a differ
diff --git a/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch.csproj b/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch.csproj
index 0ead64d..abcfa92 100644
--- a/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch.csproj
+++ b/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch.csproj
@@ -26,7 +26,7 @@
     <MtouchLink>None</MtouchLink>
     <CustomCommands>
       <CustomCommands>
-        <Command type="BeforeBuild" command="ant -v -f convert.xml" workingdir="${ProjectDir}" />
+        <Command type="BeforeBuild" command="ant -f convert.xml compile convert -DSRC=&quot;../../pax-britannica/src&quot; -DCLASSPATH=&quot;../../../../gdx/bin/;../../../../backends/gdx-backend-lwjgl/bin&quot; -DIN=&quot;-r:../../../../backends/gdx-backend-iosmonotouch/libs/gdx.dll -recurse:target/*.class&quot;  -DOUT=&quot;paxbritannica.dll&quot; -DEXCLUDE=&quot;**/*Desktop.java&quot; -v" workingdir="${ProjectDir}" />
       </CustomCommands>
     </CustomCommands>
     <MtouchExtraArgs>-nosymbolstrip -nostrip -cxx -gcc_flags "-L${ProjectDir} -likvm-natives -lgdx -force_load ${ProjectDir}/libgdx.a -force_load ${ProjectDir}/libikvm-natives.a"</MtouchExtraArgs>
@@ -42,7 +42,7 @@
     <MtouchLink>None</MtouchLink>
     <CustomCommands>
       <CustomCommands>
-        <Command type="BeforeBuild" command="ant -v -f convert.xml" workingdir="${ProjectDir}" />
+        <Command type="BeforeBuild" command="ant -f convert.xml compile convert -DSRC=&quot;../../pax-britannica/src/&quot; -DCLASSPATH=&quot;../../../../gdx/bin/;../../../../backends/gdx-backend-lwjgl/bin&quot; -DIN=&quot;-r:../../../../backends/gdx-backend-iosmonotouch/libs/gdx.dll -recurse:target/*.class&quot;  -DOUT=&quot;paxbritannica.dll&quot; -DEXCLUDE=&quot;**/*Desktop.java&quot; -v" workingdir="${ProjectDir}" />
       </CustomCommands>
     </CustomCommands>
     <MtouchExtraArgs>-nosymbolstrip -nostrip -cxx -gcc_flags "-L${ProjectDir} -likvm-natives -lgdx -force_load ${ProjectDir}/libgdx.a -force_load ${ProjectDir}/libikvm-natives.a"</MtouchExtraArgs>
@@ -62,7 +62,7 @@
     <MtouchProfiling>True</MtouchProfiling>
     <CustomCommands>
       <CustomCommands>
-        <Command type="BeforeBuild" command="ant -v -f convert.xml" workingdir="${ProjectDir}" />
+        <Command type="BeforeBuild" command="ant -f convert.xml compile convert -DSRC=&quot;../../pax-britannica/src/&quot; -DCLASSPATH=&quot;../../../../gdx/bin/;../../../../backends/gdx-backend-lwjgl/bin&quot; -DIN=&quot;-r:../../../../backends/gdx-backend-iosmonotouch/libs/gdx.dll -recurse:target/*.class&quot;  -DOUT=&quot;paxbritannica.dll&quot; -DEXCLUDE=&quot;**/*Desktop.java&quot; -v" workingdir="${ProjectDir}" />
       </CustomCommands>
     </CustomCommands>
     <MtouchExtraArgs>-nosymbolstrip -nostrip -cxx -gcc_flags "-L${ProjectDir} -likvm-natives -lgdx -force_load ${ProjectDir}/libgdx.a -force_load ${ProjectDir}/libikvm-natives.a"</MtouchExtraArgs>
@@ -80,7 +80,7 @@
     <CodesignKey>iPhone Developer</CodesignKey>
     <CustomCommands>
       <CustomCommands>
-        <Command type="BeforeBuild" command="ant -v -f convert.xml" workingdir="${ProjectDir}" />
+        <Command type="BeforeBuild" command="ant -f convert.xml compile convert -DSRC=&quot;../../pax-britannica/src/&quot; -DCLASSPATH=&quot;../../../../gdx/bin/;../../../../backends/gdx-backend-lwjgl/bin&quot; -DIN=&quot;-r:../../../../backends/gdx-backend-iosmonotouch/libs/gdx.dll -recurse:target/*.class&quot;  -DOUT=&quot;paxbritannica.dll&quot; -DEXCLUDE=&quot;**/*Desktop.java&quot; -v" workingdir="${ProjectDir}" />
       </CustomCommands>
     </CustomCommands>
     <MtouchExtraArgs>-nosymbolstrip -nostrip -cxx -gcc_flags "-L${ProjectDir} -likvm-natives -lgdx -force_load ${ProjectDir}/libgdx.a -force_load ${ProjectDir}/libikvm-natives.a"</MtouchExtraArgs>
@@ -113,10 +113,10 @@
     <Reference Include="System.Core" />
     <Reference Include="monotouch" />
     <Reference Include="gdx">
-      <HintPath>..\..\..\..\gdx\libs\ios32\gdx.dll</HintPath>
+      <HintPath>..\..\..\..\backends\gdx-backend-iosmonotouch\libs\gdx.dll</HintPath>
     </Reference>
     <Reference Include="gdx-backend-ios">
-      <HintPath>..\..\..\..\backends\gdx-backend-iosmonotouch\libs\ios32\gdx-backend-ios.dll</HintPath>
+      <HintPath>..\..\..\..\backends\gdx-backend-iosmonotouch\libs\gdx-backend-ios.dll</HintPath>
     </Reference>
     <Reference Include="ICSharpCode.SharpZipLib">
       <HintPath>..\..\..\..\backends\gdx-backend-iosmonotouch\libs\ikvm\bin\ICSharpCode.SharpZipLib.dll</HintPath>
@@ -151,9 +151,6 @@
     <Reference Include="paxbritannica">
       <HintPath>paxbritannica.dll</HintPath>
     </Reference>
-    <Reference Include="libObjectAL">
-      <HintPath>..\..\..\..\backends\gdx-backend-iosmonotouch\libs\objectal\libObjectAL.dll</HintPath>
-    </Reference>
   </ItemGroup>
   <ItemGroup>
     <None Include="Info.plist" />
diff --git a/demos/superjumper/superjumper-android/.classpath b/demos/superjumper/superjumper-android/.classpath
index 1f85b4e..bc35b2c 100644
--- a/demos/superjumper/superjumper-android/.classpath
+++ b/demos/superjumper/superjumper-android/.classpath
@@ -6,6 +6,5 @@
 	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx-backend-android"/>
 	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/superjumper"/>
 	<classpathentry kind="con" path="com.android.ide.eclipse.adt.ANDROID_FRAMEWORK"/>
-	<classpathentry exported="true" kind="con" path="com.android.ide.eclipse.adt.LIBRARIES"/>
 	<classpathentry kind="output" path="bin/classes"/>
 </classpath>
diff --git a/demos/superjumper/superjumper-android/libs/armeabi-v7a/libandroidgl20.so b/demos/superjumper/superjumper-android/libs/armeabi-v7a/libandroidgl20.so
new file mode 100644
index 0000000..7a7cd7f
Binary files /dev/null and b/demos/superjumper/superjumper-android/libs/armeabi-v7a/libandroidgl20.so differ
diff --git a/demos/superjumper/superjumper-android/libs/armeabi-v7a/libgdx.so b/demos/superjumper/superjumper-android/libs/armeabi-v7a/libgdx.so
new file mode 100644
index 0000000..8d31a3e
Binary files /dev/null and b/demos/superjumper/superjumper-android/libs/armeabi-v7a/libgdx.so differ
diff --git a/demos/superjumper/superjumper-android/libs/armeabi/libandroidgl20.so b/demos/superjumper/superjumper-android/libs/armeabi/libandroidgl20.so
new file mode 100644
index 0000000..7a7cd7f
Binary files /dev/null and b/demos/superjumper/superjumper-android/libs/armeabi/libandroidgl20.so differ
diff --git a/demos/superjumper/superjumper-android/libs/armeabi/libgdx.so b/demos/superjumper/superjumper-android/libs/armeabi/libgdx.so
new file mode 100644
index 0000000..36f294f
Binary files /dev/null and b/demos/superjumper/superjumper-android/libs/armeabi/libgdx.so differ
diff --git a/demos/superjumper/superjumper-ios/superjumper-ios.userprefs b/demos/superjumper/superjumper-ios/superjumper-ios.userprefs
index f065fe0..6bb98af 100644
--- a/demos/superjumper/superjumper-ios/superjumper-ios.userprefs
+++ b/demos/superjumper/superjumper-ios/superjumper-ios.userprefs
@@ -1,19 +1,13 @@
 ﻿<Properties>
-  <MonoDevelop.Ide.Workspace ActiveConfiguration="Debug|iPhone" />
+  <MonoDevelop.Ide.Workspace ActiveConfiguration="Debug|iPhoneSimulator" />
   <MonoDevelop.Ide.Workbench ActiveDocument="superjumper-ios/Main.cs">
     <Files>
-      <File FileName="superjumper-ios/Main.cs" Line="8" Column="11" />
+      <File FileName="superjumper-ios/Main.cs" Line="11" Column="2" />
       <File FileName="superjumper-ios/Info.plist" />
     </Files>
     <Pads>
       <Pad Id="ProjectPad">
-        <State expanded="True">
-          <Node name="superjumper-ios" expanded="True">
-            <Node name="References" expanded="True">
-              <Node name="monotouch, Version=0.0.0.0, Culture=neutral" selected="True" />
-            </Node>
-          </Node>
-        </State>
+        <State />
       </Pad>
     </Pads>
   </MonoDevelop.Ide.Workbench>
diff --git a/demos/superjumper/superjumper-ios/superjumper-ios/Main.cs b/demos/superjumper/superjumper-ios/superjumper-ios/Main.cs
index 09e8542..3c465c5 100644
--- a/demos/superjumper/superjumper-ios/superjumper-ios/Main.cs
+++ b/demos/superjumper/superjumper-ios/superjumper-ios/Main.cs
@@ -22,8 +22,6 @@ namespace superjumperios
 				config.orientationLandscape = false;
 				config.orientationPortrait = true;
 				config.useAccelerometer = true;
-				config.useMonotouchOpenTK = true;
-				config.useObjectAL = true;
 				return config;
 			}
 		}
diff --git a/demos/superjumper/superjumper-ios/superjumper-ios/convert.properties b/demos/superjumper/superjumper-ios/superjumper-ios/convert.properties
deleted file mode 100644
index 950faf7..0000000
--- a/demos/superjumper/superjumper-ios/superjumper-ios/convert.properties
+++ /dev/null
@@ -1,6 +0,0 @@
-SRC =       ../../superjumper/src/
-CLASSPATH = ../../../../gdx/bin
-EXCLUDE   = **/*Desktop.java
-IN        = -r:../../../../gdx/libs/ios32/gdx.dll -recurse:target/*.class
-OUT       = superjumper.dll
-
diff --git a/demos/superjumper/superjumper-ios/superjumper-ios/convert.xml b/demos/superjumper/superjumper-ios/superjumper-ios/convert.xml
index 8848391..339b588 100644
--- a/demos/superjumper/superjumper-ios/superjumper-ios/convert.xml
+++ b/demos/superjumper/superjumper-ios/superjumper-ios/convert.xml
@@ -1,19 +1,23 @@
 <project name="gdx" default="convert" basedir=".">
 	<property environment="env"/>
-	<property file="convert.properties" />
-	<property name="IKVM_HOME" value="../../../../backends/gdx-backend-iosmonotouch/libs/ikvm"/>
+	<property name="IKVM_HOME" value="${env.IKVM_HOME}"/>
 	<property name="MONO_HOME" value="/Developer/MonoTouch/usr/lib/mono/2.1"/>
+	<property name="IN" value="-recurse:target/core/*.class"/>
+	<property name="OUT" value="gdx.dll"/>
+	<property name="SRC" value="src/"/>
+	<property name="CLASSPATH" value=""/>
+	<property name="EXCLUDE" value=""/>
 
 	<target name="compile">
 		<delete dir="target"/>
 		<mkdir dir="target"/>
-		<javac srcdir="${SRC}" debug="on" source="1.6" target="1.6" destdir="target" classpath="${CLASSPATH}">
+		<javac srcdir="${SRC}" debug="on" destdir="target" classpath="${CLASSPATH}">
 			<include name="**/*.java"/>
 			<exclude name="${EXCLUDE}"/>
 		</javac>
 	</target>
 
-	<target name="convert" depends="compile">
+	<target name="convert">
 		<exec executable="mono">
 			<arg value="${IKVM_HOME}/bin/ikvmc.exe"/>
 			<arg value="-nostdlib"/>
@@ -31,4 +35,4 @@
 			<arg line="${IN}"/>
 		</exec>
 	</target>
-</project>
+</project>
\ No newline at end of file
diff --git a/demos/superjumper/superjumper-ios/superjumper-ios/libgdx.a b/demos/superjumper/superjumper-ios/superjumper-ios/libgdx.a
new file mode 100644
index 0000000..a681686
Binary files /dev/null and b/demos/superjumper/superjumper-ios/superjumper-ios/libgdx.a differ
diff --git a/demos/superjumper/superjumper-ios/superjumper-ios/libikvm-natives.a b/demos/superjumper/superjumper-ios/superjumper-ios/libikvm-natives.a
new file mode 100644
index 0000000..29296a2
Binary files /dev/null and b/demos/superjumper/superjumper-ios/superjumper-ios/libikvm-natives.a differ
diff --git a/demos/superjumper/superjumper-ios/superjumper-ios/superjumper-ios.csproj b/demos/superjumper/superjumper-ios/superjumper-ios/superjumper-ios.csproj
index 285241e..f4d58d8 100644
--- a/demos/superjumper/superjumper-ios/superjumper-ios/superjumper-ios.csproj
+++ b/demos/superjumper/superjumper-ios/superjumper-ios/superjumper-ios.csproj
@@ -27,7 +27,7 @@
     <MtouchI18n>west</MtouchI18n>
     <CustomCommands>
       <CustomCommands>
-        <Command type="BeforeBuild" command="ant -v -f convert.xml" workingdir="${ProjectDir}" />
+        <Command type="BeforeBuild" command="ant -f convert.xml compile convert -DSRC=&quot;../../superjumper/src/&quot; -DCLASSPATH=&quot;../../../../gdx/bin/;../../../../backends/gdx-backend-lwjgl/bin&quot; -DIN=&quot;-r:../../../../backends/gdx-backend-iosmonotouch/libs/gdx.dll -recurse:target/*.class&quot;  -DOUT=&quot;superjumper.dll&quot; -DEXCLUDE=&quot;**/SuperJumperDesktop.java&quot; -v" workingdir="${ProjectDir}" />
       </CustomCommands>
     </CustomCommands>
     <MtouchArch>ARMv7</MtouchArch>
@@ -45,7 +45,7 @@
     <MtouchUseLlvm>True</MtouchUseLlvm>
     <CustomCommands>
       <CustomCommands>
-        <Command type="BeforeBuild" command="ant -v -f convert.xml" workingdir="${ProjectDir}" />
+        <Command type="BeforeBuild" command="ant -f convert.xml compile convert -DSRC=&quot;../../superjumper/src/&quot; -DCLASSPATH=&quot;../../../../gdx/bin/;../../../../backends/gdx-backend-lwjgl/bin&quot; -DIN=&quot;-r:../../../../backends/gdx-backend-iosmonotouch/libs/gdx.dll -recurse:target/*.class&quot;  -DOUT=&quot;superjumper.dll&quot; -DEXCLUDE=&quot;**/SuperJumperDesktop.java&quot; -v" workingdir="${ProjectDir}" />
       </CustomCommands>
     </CustomCommands>
   </PropertyGroup>
@@ -67,7 +67,7 @@
     <IpaPackageName />
     <CustomCommands>
       <CustomCommands>
-        <Command type="BeforeBuild" command="ant -v -f convert.xml" workingdir="${ProjectDir}" />
+        <Command type="BeforeBuild" command="ant -f convert.xml compile convert -DSRC=&quot;../../superjumper/src/&quot; -DCLASSPATH=&quot;../../../../gdx/bin/;../../../../backends/gdx-backend-lwjgl/bin&quot; -DIN=&quot;-r:../../../../backends/gdx-backend-iosmonotouch/libs/gdx.dll -recurse:target/*.class&quot;  -DOUT=&quot;superjumper.dll&quot; -DEXCLUDE=&quot;**/SuperJumperDesktop.java&quot; -v" workingdir="${ProjectDir}" />
       </CustomCommands>
     </CustomCommands>
   </PropertyGroup>
@@ -83,7 +83,7 @@
     <MtouchI18n>west</MtouchI18n>
     <CustomCommands>
       <CustomCommands>
-        <Command type="BeforeBuild" command="ant -v -f convert.xml" workingdir="${ProjectDir}" />
+        <Command type="BeforeBuild" command="ant -f convert.xml compile convert -DSRC=&quot;../../superjumper/src/&quot; -DCLASSPATH=&quot;../../../../gdx/bin/;../../../../backends/gdx-backend-lwjgl/bin&quot; -DIN=&quot;-r:../../../../backends/gdx-backend-iosmonotouch/libs/gdx.dll -recurse:target/*.class&quot;  -DOUT=&quot;superjumper.dll&quot; -DEXCLUDE=&quot;**/SuperJumperDesktop.java&quot; -v" workingdir="${ProjectDir}" />
       </CustomCommands>
     </CustomCommands>
     <MtouchArch>ARMv7</MtouchArch>
@@ -118,8 +118,11 @@
     <Reference Include="superjumper">
       <HintPath>superjumper.dll</HintPath>
     </Reference>
+    <Reference Include="gdx">
+      <HintPath>..\..\..\..\backends\gdx-backend-iosmonotouch\libs\gdx.dll</HintPath>
+    </Reference>
     <Reference Include="gdx-backend-ios">
-      <HintPath>..\..\..\..\backends\gdx-backend-iosmonotouch\libs\ios32\gdx-backend-ios.dll</HintPath>
+      <HintPath>..\..\..\..\backends\gdx-backend-iosmonotouch\libs\gdx-backend-ios.dll</HintPath>
     </Reference>
     <Reference Include="ICSharpCode.SharpZipLib">
       <HintPath>..\..\..\..\backends\gdx-backend-iosmonotouch\libs\ikvm\bin\ICSharpCode.SharpZipLib.dll</HintPath>
@@ -151,12 +154,6 @@
     <Reference Include="IKVM.Runtime.JNI">
       <HintPath>..\..\..\..\backends\gdx-backend-iosmonotouch\libs\ikvm\bin\IKVM.Runtime.JNI.dll</HintPath>
     </Reference>
-    <Reference Include="libObjectAL">
-      <HintPath>..\..\..\..\backends\gdx-backend-iosmonotouch\libs\objectal\libObjectAL.dll</HintPath>
-    </Reference>
-    <Reference Include="gdx">
-      <HintPath>..\..\..\..\gdx\libs\ios32\gdx.dll</HintPath>
-    </Reference>
   </ItemGroup>
   <ItemGroup>
     <None Include="Info.plist" />
diff --git a/demos/vector-pinball/gdx-vectorpinball-android/.classpath b/demos/vector-pinball/gdx-vectorpinball-android/.classpath
index 5f162d4..9cf1937 100644
--- a/demos/vector-pinball/gdx-vectorpinball-android/.classpath
+++ b/demos/vector-pinball/gdx-vectorpinball-android/.classpath
@@ -6,6 +6,5 @@
 	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx"/>
 	<classpathentry combineaccessrules="false" exported="true" kind="src" path="/gdx-backend-android"/>
 	<classpathentry kind="con" path="com.android.ide.eclipse.adt.ANDROID_FRAMEWORK"/>
-	<classpathentry exported="true" kind="con" path="com.android.ide.eclipse.adt.LIBRARIES"/>
 	<classpathentry kind="output" path="bin/classes"/>
 </classpath>
diff --git a/demos/vector-pinball/gdx-vectorpinball-android/libs/armeabi-v7a/libandroidgl20.so b/demos/vector-pinball/gdx-vectorpinball-android/libs/armeabi-v7a/libandroidgl20.so
new file mode 100644
index 0000000..7a7cd7f
Binary files /dev/null and b/demos/vector-pinball/gdx-vectorpinball-android/libs/armeabi-v7a/libandroidgl20.so differ
diff --git a/demos/vector-pinball/gdx-vectorpinball-android/libs/armeabi-v7a/libgdx.so b/demos/vector-pinball/gdx-vectorpinball-android/libs/armeabi-v7a/libgdx.so
new file mode 100644
index 0000000..8d31a3e
Binary files /dev/null and b/demos/vector-pinball/gdx-vectorpinball-android/libs/armeabi-v7a/libgdx.so differ
diff --git a/demos/vector-pinball/gdx-vectorpinball-android/libs/armeabi/libandroidgl20.so b/demos/vector-pinball/gdx-vectorpinball-android/libs/armeabi/libandroidgl20.so
new file mode 100644
index 0000000..7a7cd7f
Binary files /dev/null and b/demos/vector-pinball/gdx-vectorpinball-android/libs/armeabi/libandroidgl20.so differ
diff --git a/demos/vector-pinball/gdx-vectorpinball-android/libs/armeabi/libgdx.so b/demos/vector-pinball/gdx-vectorpinball-android/libs/armeabi/libgdx.so
new file mode 100644
index 0000000..36f294f
Binary files /dev/null and b/demos/vector-pinball/gdx-vectorpinball-android/libs/armeabi/libgdx.so differ
diff --git a/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios.userprefs b/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios.userprefs
index 7a7d3f3..9416360 100644
--- a/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios.userprefs
+++ b/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios.userprefs
@@ -1,19 +1,10 @@
 ﻿<Properties>
-  <MonoDevelop.Ide.Workspace ActiveConfiguration="Debug|iPhoneSimulator" />
+  <MonoDevelop.Ide.Workspace ActiveConfiguration="Release|iPhone" />
   <MonoDevelop.Ide.Workbench ActiveDocument="gdx-vectorpinball-ios/Main.cs">
     <Files>
-      <File FileName="gdx-vectorpinball-ios/Main.cs" Line="11" Column="3" />
+      <File FileName="gdx-vectorpinball-ios/Main.cs" Line="16" Column="2" />
       <File FileName="gdx-vectorpinball-ios/Info.plist" />
     </Files>
-    <Pads>
-      <Pad Id="ProjectPad">
-        <State expanded="True">
-          <Node name="gdx-vectorpinball-ios" expanded="True" selected="True">
-            <Node name="References" expanded="True" />
-          </Node>
-        </State>
-      </Pad>
-    </Pads>
   </MonoDevelop.Ide.Workbench>
   <MonoDevelop.Ide.DebuggingService.Breakpoints>
     <BreakpointStore />
diff --git a/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/Main.cs b/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/Main.cs
index 0362b91..3d2b079 100644
--- a/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/Main.cs
+++ b/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/Main.cs
@@ -8,7 +8,7 @@ using com.badlogic.gdx.backends.ios;
 using com.dozingcatsoftware.bouncy;
 
 namespace bouncy
-{	
+{		
 	public class Application
 	{
 		[Register ("AppDelegate")]
diff --git a/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/convert.properties b/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/convert.properties
deleted file mode 100644
index 3e9ed36..0000000
--- a/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/convert.properties
+++ /dev/null
@@ -1,6 +0,0 @@
-SRC =       ../../gdx-vectorpinball/src/
-CLASSPATH = ../../../../gdx/bin
-EXCLUDE   = **/*Desktop.java
-IN        = -r:../../../../gdx/libs/ios32/gdx.dll -recurse:target/*.class
-OUT       = vectorpinball.dll
-
diff --git a/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/convert.xml b/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/convert.xml
index 8848391..339b588 100644
--- a/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/convert.xml
+++ b/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/convert.xml
@@ -1,19 +1,23 @@
 <project name="gdx" default="convert" basedir=".">
 	<property environment="env"/>
-	<property file="convert.properties" />
-	<property name="IKVM_HOME" value="../../../../backends/gdx-backend-iosmonotouch/libs/ikvm"/>
+	<property name="IKVM_HOME" value="${env.IKVM_HOME}"/>
 	<property name="MONO_HOME" value="/Developer/MonoTouch/usr/lib/mono/2.1"/>
+	<property name="IN" value="-recurse:target/core/*.class"/>
+	<property name="OUT" value="gdx.dll"/>
+	<property name="SRC" value="src/"/>
+	<property name="CLASSPATH" value=""/>
+	<property name="EXCLUDE" value=""/>
 
 	<target name="compile">
 		<delete dir="target"/>
 		<mkdir dir="target"/>
-		<javac srcdir="${SRC}" debug="on" source="1.6" target="1.6" destdir="target" classpath="${CLASSPATH}">
+		<javac srcdir="${SRC}" debug="on" destdir="target" classpath="${CLASSPATH}">
 			<include name="**/*.java"/>
 			<exclude name="${EXCLUDE}"/>
 		</javac>
 	</target>
 
-	<target name="convert" depends="compile">
+	<target name="convert">
 		<exec executable="mono">
 			<arg value="${IKVM_HOME}/bin/ikvmc.exe"/>
 			<arg value="-nostdlib"/>
@@ -31,4 +35,4 @@
 			<arg line="${IN}"/>
 		</exec>
 	</target>
-</project>
+</project>
\ No newline at end of file
diff --git a/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/gdx-vectorpinball-ios.csproj b/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/gdx-vectorpinball-ios.csproj
index cb7856b..8f7ed26 100644
--- a/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/gdx-vectorpinball-ios.csproj
+++ b/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/gdx-vectorpinball-ios.csproj
@@ -26,12 +26,11 @@
     <MtouchLink>None</MtouchLink>
     <CustomCommands>
       <CustomCommands>
-        <Command type="BeforeBuild" command="ant -v -f convert.xml" workingdir="${ProjectDir}" />
+        <Command type="BeforeBuild" command="ant -f convert.xml compile convert -DSRC=&quot;../../gdx-vectorpinball/src/&quot; -DCLASSPATH=&quot;../../../../gdx/bin/;../../../../backends/gdx-backend-lwjgl/bin&quot; -DIN=&quot;-r:../../../../backends/gdx-backend-iosmonotouch/libs/gdx.dll -recurse:target/*.class&quot;  -DOUT=&quot;vectorpinball.dll&quot; -DEXCLUDE=&quot;**/BouncyDesktop.java&quot; -v" workingdir="${ProjectDir}" />
       </CustomCommands>
     </CustomCommands>
     <MtouchExtraArgs>-nosymbolstrip -nostrip -cxx -gcc_flags "-L${ProjectDir} -likvm-natives -lgdx -force_load ${ProjectDir}/libgdx.a -force_load ${ProjectDir}/libikvm-natives.a"</MtouchExtraArgs>
     <MtouchI18n>west</MtouchI18n>
-    <MtouchArch>ARMv7</MtouchArch>
   </PropertyGroup>
   <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|iPhoneSimulator' ">
     <DebugType>none</DebugType>
@@ -43,7 +42,7 @@
     <MtouchLink>None</MtouchLink>
     <CustomCommands>
       <CustomCommands>
-        <Command type="BeforeBuild" command="ant -v -f convert.xml" workingdir="${ProjectDir}" />
+        <Command type="BeforeBuild" command="ant -f convert.xml compile convert -DSRC=&quot;../../gdx-vectorpinball/src/&quot; -DCLASSPATH=&quot;../../../../gdx/bin/;../../../../backends/gdx-backend-lwjgl/bin&quot; -DIN=&quot;-r:../../../../backends/gdx-backend-iosmonotouch/libs/gdx.dll -recurse:target/*.class&quot;  -DOUT=&quot;vectorpinball.dll&quot; -DEXCLUDE=&quot;**/BouncyDesktop.java&quot; -v" workingdir="${ProjectDir}" />
       </CustomCommands>
     </CustomCommands>
     <MtouchExtraArgs>-nosymbolstrip -nostrip -cxx -gcc_flags "-L${ProjectDir} -likvm-natives -lgdx -force_load ${ProjectDir}/libgdx.a -force_load ${ProjectDir}/libikvm-natives.a"</MtouchExtraArgs>
@@ -63,7 +62,7 @@
     <MtouchProfiling>True</MtouchProfiling>
     <CustomCommands>
       <CustomCommands>
-        <Command type="BeforeBuild" command="ant -v -f convert.xml" workingdir="${ProjectDir}" />
+        <Command type="BeforeBuild" command="ant -f convert.xml compile convert -DSRC=&quot;../../gdx-vectorpinball/src/&quot; -DCLASSPATH=&quot;../../../../gdx/bin/;../../../../backends/gdx-backend-lwjgl/bin&quot; -DIN=&quot;-r:../../../../backends/gdx-backend-iosmonotouch/libs/gdx.dll -recurse:target/*.class&quot;  -DOUT=&quot;vectorpinball.dll&quot; -DEXCLUDE=&quot;**/BouncyDesktop.java&quot; -v" workingdir="${ProjectDir}" />
       </CustomCommands>
     </CustomCommands>
     <MtouchExtraArgs>-nosymbolstrip -nostrip -cxx -gcc_flags "-L${ProjectDir} -likvm-natives -lgdx -force_load ${ProjectDir}/libgdx.a -force_load ${ProjectDir}/libikvm-natives.a"</MtouchExtraArgs>
@@ -81,7 +80,7 @@
     <CodesignKey>iPhone Developer</CodesignKey>
     <CustomCommands>
       <CustomCommands>
-        <Command type="BeforeBuild" command="ant -v -f convert.xml" workingdir="${ProjectDir}" />
+        <Command type="BeforeBuild" command="ant -f convert.xml compile convert -DSRC=&quot;../../gdx-vectorpinball/src/&quot; -DCLASSPATH=&quot;../../../../gdx/bin/;../../../../backends/gdx-backend-lwjgl/bin&quot; -DIN=&quot;-r:../../../../backends/gdx-backend-iosmonotouch/libs/gdx.dll -recurse:target/*.class&quot;  -DOUT=&quot;vectorpinball.dll&quot; -DEXCLUDE=&quot;**/BouncyDesktop.java&quot; -v" workingdir="${ProjectDir}" />
       </CustomCommands>
     </CustomCommands>
     <MtouchExtraArgs>-nosymbolstrip -nostrip -cxx -gcc_flags "-L${ProjectDir} -likvm-natives -lgdx -force_load ${ProjectDir}/libgdx.a -force_load ${ProjectDir}/libikvm-natives.a"</MtouchExtraArgs>
@@ -117,10 +116,10 @@
       <HintPath>vectorpinball.dll</HintPath>
     </Reference>
     <Reference Include="gdx">
-      <HintPath>..\..\..\..\gdx\libs\ios32\gdx.dll</HintPath>
+      <HintPath>..\..\..\..\backends\gdx-backend-iosmonotouch\libs\gdx.dll</HintPath>
     </Reference>
     <Reference Include="gdx-backend-ios">
-      <HintPath>..\..\..\..\backends\gdx-backend-iosmonotouch\libs\ios32\gdx-backend-ios.dll</HintPath>
+      <HintPath>..\..\..\..\backends\gdx-backend-iosmonotouch\libs\gdx-backend-ios.dll</HintPath>
     </Reference>
     <Reference Include="ICSharpCode.SharpZipLib">
       <HintPath>..\..\..\..\backends\gdx-backend-iosmonotouch\libs\ikvm\bin\ICSharpCode.SharpZipLib.dll</HintPath>
@@ -152,9 +151,6 @@
     <Reference Include="IKVM.Runtime">
       <HintPath>..\..\..\..\backends\gdx-backend-iosmonotouch\libs\ikvm\bin\IKVM.Runtime.dll</HintPath>
     </Reference>
-    <Reference Include="libObjectAL">
-      <HintPath>..\..\..\..\backends\gdx-backend-iosmonotouch\libs\objectal\libObjectAL.dll</HintPath>
-    </Reference>
   </ItemGroup>
   <ItemGroup>
     <None Include="Info.plist" />
diff --git a/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/libgdx.a b/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/libgdx.a
new file mode 100644
index 0000000..79e81af
Binary files /dev/null and b/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/libgdx.a differ
diff --git a/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/libikvm-natives.a b/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/libikvm-natives.a
new file mode 100644
index 0000000..29296a2
Binary files /dev/null and b/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/libikvm-natives.a differ
diff --git a/demos/vector-pinball/gdx-vectorpinball/src/com/dozingcatsoftware/bouncy/GLFieldRenderer.java b/demos/vector-pinball/gdx-vectorpinball/src/com/dozingcatsoftware/bouncy/GLFieldRenderer.java
index 4590927..1979f61 100644
--- a/demos/vector-pinball/gdx-vectorpinball/src/com/dozingcatsoftware/bouncy/GLFieldRenderer.java
+++ b/demos/vector-pinball/gdx-vectorpinball/src/com/dozingcatsoftware/bouncy/GLFieldRenderer.java
@@ -29,12 +29,12 @@ public class GLFieldRenderer implements IFieldRenderer {
 	@Override
 	public void fillCircle (float cx, float cy, float radius, int r, int g, int b) {
 		end();
-		renderer.begin(ShapeType.Filled);
+		renderer.begin(ShapeType.FilledCircle);
 		float fr = r / 255f;
 		float fg = g / 255f;
 		float fb = b / 255f;
 		renderer.setColor(fr, fg, fb, 1);
-		renderer.circle(cx, cy, radius, 20);
+		renderer.filledCircle(cx, cy, radius, 20);
 		end();
 		begin();
 	}
@@ -42,7 +42,7 @@ public class GLFieldRenderer implements IFieldRenderer {
 	@Override
 	public void frameCircle (float cx, float cy, float radius, int r, int g, int b) {
 		end();
-		renderer.begin(ShapeType.Line);
+		renderer.begin(ShapeType.Circle);
 		float fr = r / 255f;
 		float fg = g / 255f;
 		float fb = b / 255f;
diff --git a/demos/very-angry-robots/very-angry-robots-android/libs/armeabi-v7a/libandroidgl20.so b/demos/very-angry-robots/very-angry-robots-android/libs/armeabi-v7a/libandroidgl20.so
new file mode 100644
index 0000000..7a7cd7f
Binary files /dev/null and b/demos/very-angry-robots/very-angry-robots-android/libs/armeabi-v7a/libandroidgl20.so differ
diff --git a/demos/very-angry-robots/very-angry-robots-android/libs/armeabi-v7a/libgdx.so b/demos/very-angry-robots/very-angry-robots-android/libs/armeabi-v7a/libgdx.so
new file mode 100644
index 0000000..8d31a3e
Binary files /dev/null and b/demos/very-angry-robots/very-angry-robots-android/libs/armeabi-v7a/libgdx.so differ
diff --git a/demos/very-angry-robots/very-angry-robots-android/libs/armeabi/libandroidgl20.so b/demos/very-angry-robots/very-angry-robots-android/libs/armeabi/libandroidgl20.so
new file mode 100644
index 0000000..7a7cd7f
Binary files /dev/null and b/demos/very-angry-robots/very-angry-robots-android/libs/armeabi/libandroidgl20.so differ
diff --git a/demos/very-angry-robots/very-angry-robots-android/libs/armeabi/libgdx.so b/demos/very-angry-robots/very-angry-robots-android/libs/armeabi/libgdx.so
new file mode 100644
index 0000000..36f294f
Binary files /dev/null and b/demos/very-angry-robots/very-angry-robots-android/libs/armeabi/libgdx.so differ
diff --git a/extensions/gdx-audio/libs/gdx-audio-natives.jar b/extensions/gdx-audio/libs/gdx-audio-natives.jar
new file mode 100644
index 0000000..f15da62
Binary files /dev/null and b/extensions/gdx-audio/libs/gdx-audio-natives.jar differ
diff --git a/extensions/gdx-bullet/jni/Android.mk b/extensions/gdx-bullet/jni/Android.mk
index aa7244f..83ccff0 100644
--- a/extensions/gdx-bullet/jni/Android.mk
+++ b/extensions/gdx-bullet/jni/Android.mk
@@ -10,154 +10,154 @@ LOCAL_LDLIBS := -lm
 LOCAL_ARM_MODE  := arm
  
 LOCAL_SRC_FILES := memcpy_wrap.c\
-	src/BulletCollision/BroadphaseCollision/btAxisSweep3.cpp\
-	src/BulletCollision/BroadphaseCollision/btBroadphaseProxy.cpp\
-	src/BulletCollision/BroadphaseCollision/btCollisionAlgorithm.cpp\
-	src/BulletCollision/BroadphaseCollision/btDbvt.cpp\
-	src/BulletCollision/BroadphaseCollision/btDbvtBroadphase.cpp\
-	src/BulletCollision/BroadphaseCollision/btDispatcher.cpp\
-	src/BulletCollision/BroadphaseCollision/btMultiSapBroadphase.cpp\
-	src/BulletCollision/BroadphaseCollision/btOverlappingPairCache.cpp\
-	src/BulletCollision/BroadphaseCollision/btQuantizedBvh.cpp\
-	src/BulletCollision/BroadphaseCollision/btSimpleBroadphase.cpp\
-	src/BulletCollision/CollisionDispatch/btActivatingCollisionAlgorithm.cpp\
-	src/BulletCollision/CollisionDispatch/btBox2dBox2dCollisionAlgorithm.cpp\
-	src/BulletCollision/CollisionDispatch/btBoxBoxCollisionAlgorithm.cpp\
-	src/BulletCollision/CollisionDispatch/btBoxBoxDetector.cpp\
-	src/BulletCollision/CollisionDispatch/btCollisionDispatcher.cpp\
-	src/BulletCollision/CollisionDispatch/btCollisionObject.cpp\
-	src/BulletCollision/CollisionDispatch/btCollisionWorld.cpp\
-	src/BulletCollision/CollisionDispatch/btCompoundCollisionAlgorithm.cpp\
-	src/BulletCollision/CollisionDispatch/btConvex2dConvex2dAlgorithm.cpp\
-	src/BulletCollision/CollisionDispatch/btConvexConcaveCollisionAlgorithm.cpp\
-	src/BulletCollision/CollisionDispatch/btConvexConvexAlgorithm.cpp\
-	src/BulletCollision/CollisionDispatch/btConvexPlaneCollisionAlgorithm.cpp\
-	src/BulletCollision/CollisionDispatch/btDefaultCollisionConfiguration.cpp\
-	src/BulletCollision/CollisionDispatch/btEmptyCollisionAlgorithm.cpp\
-	src/BulletCollision/CollisionDispatch/btGhostObject.cpp\
-	src/BulletCollision/CollisionDispatch/btInternalEdgeUtility.cpp\
-	src/BulletCollision/CollisionDispatch/btManifoldResult.cpp\
-	src/BulletCollision/CollisionDispatch/btSimulationIslandManager.cpp\
-	src/BulletCollision/CollisionDispatch/btSphereBoxCollisionAlgorithm.cpp\
-	src/BulletCollision/CollisionDispatch/btSphereSphereCollisionAlgorithm.cpp\
-	src/BulletCollision/CollisionDispatch/btSphereTriangleCollisionAlgorithm.cpp\
-	src/BulletCollision/CollisionDispatch/btUnionFind.cpp\
-	src/BulletCollision/CollisionDispatch/SphereTriangleDetector.cpp\
-	src/BulletCollision/CollisionShapes/btBox2dShape.cpp\
-	src/BulletCollision/CollisionShapes/btBoxShape.cpp\
-	src/BulletCollision/CollisionShapes/btBvhTriangleMeshShape.cpp\
+	src/BulletSoftBody/btSoftRigidCollisionAlgorithm.cpp\
+	src/BulletSoftBody/btSoftSoftCollisionAlgorithm.cpp\
+	src/BulletSoftBody/btSoftBody.cpp\
+	src/BulletSoftBody/btSoftBodyRigidBodyCollisionConfiguration.cpp\
+	src/BulletSoftBody/btSoftBodyHelpers.cpp\
+	src/BulletSoftBody/btSoftBodyConcaveCollisionAlgorithm.cpp\
+	src/BulletSoftBody/btDefaultSoftBodySolver.cpp\
+	src/BulletSoftBody/btSoftRigidDynamicsWorld.cpp\
+	src/MiniCL/MiniCL.cpp\
+	src/MiniCL/MiniCLTask/MiniCLTask.cpp\
+	src/MiniCL/MiniCLTaskScheduler.cpp\
+	src/BulletDynamics/Character/btKinematicCharacterController.cpp\
+	src/BulletDynamics/Vehicle/btWheelInfo.cpp\
+	src/BulletDynamics/Vehicle/btRaycastVehicle.cpp\
+	src/BulletDynamics/ConstraintSolver/btTypedConstraint.cpp\
+	src/BulletDynamics/ConstraintSolver/btHinge2Constraint.cpp\
+	src/BulletDynamics/ConstraintSolver/btHingeConstraint.cpp\
+	src/BulletDynamics/ConstraintSolver/btContactConstraint.cpp\
+	src/BulletDynamics/ConstraintSolver/btGeneric6DofSpringConstraint.cpp\
+	src/BulletDynamics/ConstraintSolver/btSolve2LinearConstraint.cpp\
+	src/BulletDynamics/ConstraintSolver/btUniversalConstraint.cpp\
+	src/BulletDynamics/ConstraintSolver/btConeTwistConstraint.cpp\
+	src/BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.cpp\
+	src/BulletDynamics/ConstraintSolver/btPoint2PointConstraint.cpp\
+	src/BulletDynamics/ConstraintSolver/btSliderConstraint.cpp\
+	src/BulletDynamics/ConstraintSolver/btGeneric6DofConstraint.cpp\
+	src/BulletDynamics/Dynamics/Bullet-C-API.cpp\
+	src/BulletDynamics/Dynamics/btSimpleDynamicsWorld.cpp\
+	src/BulletDynamics/Dynamics/btRigidBody.cpp\
+	src/BulletDynamics/Dynamics/btDiscreteDynamicsWorld.cpp\
+	src/BulletMultiThreaded/SpuSampleTask/SpuSampleTask.cpp\
+	src/BulletMultiThreaded/SpuNarrowPhaseCollisionTask/SpuContactResult.cpp\
+	src/BulletMultiThreaded/SpuNarrowPhaseCollisionTask/boxBoxDistance.cpp\
+	src/BulletMultiThreaded/SpuNarrowPhaseCollisionTask/SpuMinkowskiPenetrationDepthSolver.cpp\
+	src/BulletMultiThreaded/SpuNarrowPhaseCollisionTask/SpuCollisionShapes.cpp\
+	src/BulletMultiThreaded/SpuNarrowPhaseCollisionTask/SpuGatheringCollisionTask.cpp\
+	src/BulletMultiThreaded/Win32ThreadSupport.cpp\
+	src/BulletMultiThreaded/SpuFakeDma.cpp\
+	src/BulletMultiThreaded/SequentialThreadSupport.cpp\
+	src/BulletMultiThreaded/SpuLibspe2Support.cpp\
+	src/BulletMultiThreaded/btGpu3DGridBroadphase.cpp\
+	src/BulletMultiThreaded/SpuCollisionTaskProcess.cpp\
+	src/BulletMultiThreaded/SpuSampleTaskProcess.cpp\
+	src/BulletMultiThreaded/SpuCollisionObjectWrapper.cpp\
+	src/BulletMultiThreaded/PosixThreadSupport.cpp\
+	src/BulletMultiThreaded/SpuGatheringCollisionDispatcher.cpp\
+	src/BulletMultiThreaded/btThreadSupportInterface.cpp\
+	src/BulletMultiThreaded/SpuContactManifoldCollisionAlgorithm.cpp\
+	src/BulletMultiThreaded/btParallelConstraintSolver.cpp\
+	src/LinearMath/btGeometryUtil.cpp\
+	src/LinearMath/btSerializer.cpp\
+	src/LinearMath/btVector3.cpp\
+	src/LinearMath/btQuickprof.cpp\
+	src/LinearMath/btAlignedAllocator.cpp\
+	src/LinearMath/btConvexHullComputer.cpp\
+	src/LinearMath/btConvexHull.cpp\
+	src/BulletCollision/Gimpact/gim_box_set.cpp\
+	src/BulletCollision/Gimpact/btGenericPoolAllocator.cpp\
+	src/BulletCollision/Gimpact/btGImpactShape.cpp\
+	src/BulletCollision/Gimpact/gim_memory.cpp\
+	src/BulletCollision/Gimpact/btGImpactQuantizedBvh.cpp\
+	src/BulletCollision/Gimpact/gim_tri_collision.cpp\
+	src/BulletCollision/Gimpact/btGImpactBvh.cpp\
+	src/BulletCollision/Gimpact/gim_contact.cpp\
+	src/BulletCollision/Gimpact/btGImpactCollisionAlgorithm.cpp\
+	src/BulletCollision/Gimpact/btTriangleShapeEx.cpp\
+	src/BulletCollision/Gimpact/btContactProcessing.cpp\
+	src/BulletCollision/CollisionShapes/btTriangleCallback.cpp\
 	src/BulletCollision/CollisionShapes/btCapsuleShape.cpp\
-	src/BulletCollision/CollisionShapes/btCollisionShape.cpp\
+	src/BulletCollision/CollisionShapes/btTriangleIndexVertexArray.cpp\
+	src/BulletCollision/CollisionShapes/btPolyhedralConvexShape.cpp\
+	src/BulletCollision/CollisionShapes/btConvexPointCloudShape.cpp\
+	src/BulletCollision/CollisionShapes/btEmptyShape.cpp\
+	src/BulletCollision/CollisionShapes/btConvexShape.cpp\
+	src/BulletCollision/CollisionShapes/btStridingMeshInterface.cpp\
+	src/BulletCollision/CollisionShapes/btTriangleMesh.cpp\
+	src/BulletCollision/CollisionShapes/btBoxShape.cpp\
+	src/BulletCollision/CollisionShapes/btScaledBvhTriangleMeshShape.cpp\
+	src/BulletCollision/CollisionShapes/btStaticPlaneShape.cpp\
 	src/BulletCollision/CollisionShapes/btCompoundShape.cpp\
-	src/BulletCollision/CollisionShapes/btConcaveShape.cpp\
-	src/BulletCollision/CollisionShapes/btConeShape.cpp\
-	src/BulletCollision/CollisionShapes/btConvex2dShape.cpp\
 	src/BulletCollision/CollisionShapes/btConvexHullShape.cpp\
+	src/BulletCollision/CollisionShapes/btConvex2dShape.cpp\
+	src/BulletCollision/CollisionShapes/btCylinderShape.cpp\
+	src/BulletCollision/CollisionShapes/btCollisionShape.cpp\
+	src/BulletCollision/CollisionShapes/btConcaveShape.cpp\
+	src/BulletCollision/CollisionShapes/btSphereShape.cpp\
+	src/BulletCollision/CollisionShapes/btMultimaterialTriangleMeshShape.cpp\
+	src/BulletCollision/CollisionShapes/btTriangleIndexVertexMaterialArray.cpp\
+	src/BulletCollision/CollisionShapes/btBvhTriangleMeshShape.cpp\
 	src/BulletCollision/CollisionShapes/btConvexInternalShape.cpp\
-	src/BulletCollision/CollisionShapes/btConvexPointCloudShape.cpp\
+	src/BulletCollision/CollisionShapes/btShapeHull.cpp\
+	src/BulletCollision/CollisionShapes/btConeShape.cpp\
+	src/BulletCollision/CollisionShapes/btUniformScalingShape.cpp\
+	src/BulletCollision/CollisionShapes/btTetrahedronShape.cpp\
+	src/BulletCollision/CollisionShapes/btMinkowskiSumShape.cpp\
 	src/BulletCollision/CollisionShapes/btConvexPolyhedron.cpp\
-	src/BulletCollision/CollisionShapes/btConvexShape.cpp\
 	src/BulletCollision/CollisionShapes/btConvexTriangleMeshShape.cpp\
-	src/BulletCollision/CollisionShapes/btCylinderShape.cpp\
-	src/BulletCollision/CollisionShapes/btEmptyShape.cpp\
 	src/BulletCollision/CollisionShapes/btHeightfieldTerrainShape.cpp\
-	src/BulletCollision/CollisionShapes/btMinkowskiSumShape.cpp\
-	src/BulletCollision/CollisionShapes/btMultimaterialTriangleMeshShape.cpp\
 	src/BulletCollision/CollisionShapes/btMultiSphereShape.cpp\
-	src/BulletCollision/CollisionShapes/btOptimizedBvh.cpp\
-	src/BulletCollision/CollisionShapes/btPolyhedralConvexShape.cpp\
-	src/BulletCollision/CollisionShapes/btScaledBvhTriangleMeshShape.cpp\
-	src/BulletCollision/CollisionShapes/btShapeHull.cpp\
-	src/BulletCollision/CollisionShapes/btSphereShape.cpp\
-	src/BulletCollision/CollisionShapes/btStaticPlaneShape.cpp\
-	src/BulletCollision/CollisionShapes/btStridingMeshInterface.cpp\
-	src/BulletCollision/CollisionShapes/btTetrahedronShape.cpp\
-	src/BulletCollision/CollisionShapes/btTriangleBuffer.cpp\
-	src/BulletCollision/CollisionShapes/btTriangleCallback.cpp\
-	src/BulletCollision/CollisionShapes/btTriangleIndexVertexArray.cpp\
-	src/BulletCollision/CollisionShapes/btTriangleIndexVertexMaterialArray.cpp\
-	src/BulletCollision/CollisionShapes/btTriangleMesh.cpp\
 	src/BulletCollision/CollisionShapes/btTriangleMeshShape.cpp\
-	src/BulletCollision/CollisionShapes/btUniformScalingShape.cpp\
-	src/BulletCollision/Gimpact/btContactProcessing.cpp\
-	src/BulletCollision/Gimpact/btGenericPoolAllocator.cpp\
-	src/BulletCollision/Gimpact/btGImpactBvh.cpp\
-	src/BulletCollision/Gimpact/btGImpactCollisionAlgorithm.cpp\
-	src/BulletCollision/Gimpact/btGImpactQuantizedBvh.cpp\
-	src/BulletCollision/Gimpact/btGImpactShape.cpp\
-	src/BulletCollision/Gimpact/btTriangleShapeEx.cpp\
-	src/BulletCollision/Gimpact/gim_box_set.cpp\
-	src/BulletCollision/Gimpact/gim_contact.cpp\
-	src/BulletCollision/Gimpact/gim_memory.cpp\
-	src/BulletCollision/Gimpact/gim_tri_collision.cpp\
-	src/BulletCollision/NarrowPhaseCollision/btContinuousConvexCollision.cpp\
-	src/BulletCollision/NarrowPhaseCollision/btConvexCast.cpp\
-	src/BulletCollision/NarrowPhaseCollision/btGjkConvexCast.cpp\
-	src/BulletCollision/NarrowPhaseCollision/btGjkEpa2.cpp\
+	src/BulletCollision/CollisionShapes/btTriangleBuffer.cpp\
+	src/BulletCollision/CollisionShapes/btOptimizedBvh.cpp\
+	src/BulletCollision/CollisionShapes/btBox2dShape.cpp\
+	src/BulletCollision/CollisionDispatch/btGhostObject.cpp\
+	src/BulletCollision/CollisionDispatch/btBox2dBox2dCollisionAlgorithm.cpp\
+	src/BulletCollision/CollisionDispatch/btCompoundCollisionAlgorithm.cpp\
+	src/BulletCollision/CollisionDispatch/btSphereTriangleCollisionAlgorithm.cpp\
+	src/BulletCollision/CollisionDispatch/btConvexConcaveCollisionAlgorithm.cpp\
+	src/BulletCollision/CollisionDispatch/btCollisionObject.cpp\
+	src/BulletCollision/CollisionDispatch/btSimulationIslandManager.cpp\
+	src/BulletCollision/CollisionDispatch/btConvexPlaneCollisionAlgorithm.cpp\
+	src/BulletCollision/CollisionDispatch/btConvex2dConvex2dAlgorithm.cpp\
+	src/BulletCollision/CollisionDispatch/btConvexConvexAlgorithm.cpp\
+	src/BulletCollision/CollisionDispatch/btBoxBoxDetector.cpp\
+	src/BulletCollision/CollisionDispatch/btManifoldResult.cpp\
+	src/BulletCollision/CollisionDispatch/btActivatingCollisionAlgorithm.cpp\
+	src/BulletCollision/CollisionDispatch/SphereTriangleDetector.cpp\
+	src/BulletCollision/CollisionDispatch/btSphereSphereCollisionAlgorithm.cpp\
+	src/BulletCollision/CollisionDispatch/btCollisionDispatcher.cpp\
+	src/BulletCollision/CollisionDispatch/btDefaultCollisionConfiguration.cpp\
+	src/BulletCollision/CollisionDispatch/btCollisionWorld.cpp\
+	src/BulletCollision/CollisionDispatch/btBoxBoxCollisionAlgorithm.cpp\
+	src/BulletCollision/CollisionDispatch/btSphereBoxCollisionAlgorithm.cpp\
+	src/BulletCollision/CollisionDispatch/btInternalEdgeUtility.cpp\
+	src/BulletCollision/CollisionDispatch/btEmptyCollisionAlgorithm.cpp\
+	src/BulletCollision/CollisionDispatch/btUnionFind.cpp\
+	src/BulletCollision/BroadphaseCollision/btDbvt.cpp\
+	src/BulletCollision/BroadphaseCollision/btSimpleBroadphase.cpp\
+	src/BulletCollision/BroadphaseCollision/btBroadphaseProxy.cpp\
+	src/BulletCollision/BroadphaseCollision/btAxisSweep3.cpp\
+	src/BulletCollision/BroadphaseCollision/btDispatcher.cpp\
+	src/BulletCollision/BroadphaseCollision/btDbvtBroadphase.cpp\
+	src/BulletCollision/BroadphaseCollision/btQuantizedBvh.cpp\
+	src/BulletCollision/BroadphaseCollision/btMultiSapBroadphase.cpp\
+	src/BulletCollision/BroadphaseCollision/btCollisionAlgorithm.cpp\
+	src/BulletCollision/BroadphaseCollision/btOverlappingPairCache.cpp\
+	src/BulletCollision/NarrowPhaseCollision/btPersistentManifold.cpp\
 	src/BulletCollision/NarrowPhaseCollision/btGjkEpaPenetrationDepthSolver.cpp\
-	src/BulletCollision/NarrowPhaseCollision/btGjkPairDetector.cpp\
 	src/BulletCollision/NarrowPhaseCollision/btMinkowskiPenetrationDepthSolver.cpp\
-	src/BulletCollision/NarrowPhaseCollision/btPersistentManifold.cpp\
-	src/BulletCollision/NarrowPhaseCollision/btPolyhedralContactClipping.cpp\
+	src/BulletCollision/NarrowPhaseCollision/btGjkEpa2.cpp\
+	src/BulletCollision/NarrowPhaseCollision/btGjkConvexCast.cpp\
 	src/BulletCollision/NarrowPhaseCollision/btRaycastCallback.cpp\
+	src/BulletCollision/NarrowPhaseCollision/btPolyhedralContactClipping.cpp\
 	src/BulletCollision/NarrowPhaseCollision/btSubSimplexConvexCast.cpp\
+	src/BulletCollision/NarrowPhaseCollision/btGjkPairDetector.cpp\
+	src/BulletCollision/NarrowPhaseCollision/btConvexCast.cpp\
 	src/BulletCollision/NarrowPhaseCollision/btVoronoiSimplexSolver.cpp\
-	src/BulletDynamics/Character/btKinematicCharacterController.cpp\
-	src/BulletDynamics/ConstraintSolver/btConeTwistConstraint.cpp\
-	src/BulletDynamics/ConstraintSolver/btContactConstraint.cpp\
-	src/BulletDynamics/ConstraintSolver/btGeneric6DofConstraint.cpp\
-	src/BulletDynamics/ConstraintSolver/btGeneric6DofSpringConstraint.cpp\
-	src/BulletDynamics/ConstraintSolver/btHinge2Constraint.cpp\
-	src/BulletDynamics/ConstraintSolver/btHingeConstraint.cpp\
-	src/BulletDynamics/ConstraintSolver/btPoint2PointConstraint.cpp\
-	src/BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.cpp\
-	src/BulletDynamics/ConstraintSolver/btSliderConstraint.cpp\
-	src/BulletDynamics/ConstraintSolver/btSolve2LinearConstraint.cpp\
-	src/BulletDynamics/ConstraintSolver/btTypedConstraint.cpp\
-	src/BulletDynamics/ConstraintSolver/btUniversalConstraint.cpp\
-	src/BulletDynamics/Dynamics/btDiscreteDynamicsWorld.cpp\
-	src/BulletDynamics/Dynamics/btRigidBody.cpp\
-	src/BulletDynamics/Dynamics/btSimpleDynamicsWorld.cpp\
-	src/BulletDynamics/Dynamics/Bullet-C-API.cpp\
-	src/BulletDynamics/Vehicle/btRaycastVehicle.cpp\
-	src/BulletDynamics/Vehicle/btWheelInfo.cpp\
-	src/BulletMultiThreaded/btGpu3DGridBroadphase.cpp\
-	src/BulletMultiThreaded/btParallelConstraintSolver.cpp\
-	src/BulletMultiThreaded/btThreadSupportInterface.cpp\
-	src/BulletMultiThreaded/PosixThreadSupport.cpp\
-	src/BulletMultiThreaded/SequentialThreadSupport.cpp\
-	src/BulletMultiThreaded/SpuCollisionObjectWrapper.cpp\
-	src/BulletMultiThreaded/SpuCollisionTaskProcess.cpp\
-	src/BulletMultiThreaded/SpuContactManifoldCollisionAlgorithm.cpp\
-	src/BulletMultiThreaded/SpuFakeDma.cpp\
-	src/BulletMultiThreaded/SpuGatheringCollisionDispatcher.cpp\
-	src/BulletMultiThreaded/SpuLibspe2Support.cpp\
-	src/BulletMultiThreaded/SpuNarrowPhaseCollisionTask/boxBoxDistance.cpp\
-	src/BulletMultiThreaded/SpuNarrowPhaseCollisionTask/SpuCollisionShapes.cpp\
-	src/BulletMultiThreaded/SpuNarrowPhaseCollisionTask/SpuContactResult.cpp\
-	src/BulletMultiThreaded/SpuNarrowPhaseCollisionTask/SpuGatheringCollisionTask.cpp\
-	src/BulletMultiThreaded/SpuNarrowPhaseCollisionTask/SpuMinkowskiPenetrationDepthSolver.cpp\
-	src/BulletMultiThreaded/SpuSampleTask/SpuSampleTask.cpp\
-	src/BulletMultiThreaded/SpuSampleTaskProcess.cpp\
-	src/BulletMultiThreaded/Win32ThreadSupport.cpp\
-	src/BulletSoftBody/btDefaultSoftBodySolver.cpp\
-	src/BulletSoftBody/btSoftBody.cpp\
-	src/BulletSoftBody/btSoftBodyConcaveCollisionAlgorithm.cpp\
-	src/BulletSoftBody/btSoftBodyHelpers.cpp\
-	src/BulletSoftBody/btSoftBodyRigidBodyCollisionConfiguration.cpp\
-	src/BulletSoftBody/btSoftRigidCollisionAlgorithm.cpp\
-	src/BulletSoftBody/btSoftRigidDynamicsWorld.cpp\
-	src/BulletSoftBody/btSoftSoftCollisionAlgorithm.cpp\
-	src/LinearMath/btAlignedAllocator.cpp\
-	src/LinearMath/btConvexHull.cpp\
-	src/LinearMath/btConvexHullComputer.cpp\
-	src/LinearMath/btGeometryUtil.cpp\
-	src/LinearMath/btQuickprof.cpp\
-	src/LinearMath/btSerializer.cpp\
-	src/LinearMath/btVector3.cpp\
-	src/MiniCL/MiniCL.cpp\
-	src/MiniCL/MiniCLTask/MiniCLTask.cpp\
-	src/MiniCL/MiniCLTaskScheduler.cpp\
+	src/BulletCollision/NarrowPhaseCollision/btContinuousConvexCollision.cpp\
 	swig-src/gdxBullet_wrap.cpp
  
 include $(BUILD_SHARED_LIBRARY)
diff --git a/extensions/gdx-bullet/jni/build-ios32.xml b/extensions/gdx-bullet/jni/build-ios32.xml
deleted file mode 100755
index 634fbd5..0000000
--- a/extensions/gdx-bullet/jni/build-ios32.xml
+++ /dev/null
@@ -1,192 +0,0 @@
-<project name="gdx-bullet-IOS-32" basedir="." default="postcompile">
-	<!-- include the environment -->
-	<property environment="env"/>	
-	<!-- output directory for temporary object files -->
-	<property name="buildDir" value="target/ios32" />
-	<!-- output directory for the shared library -->
-	<property name="libsDir" value="../libs/ios32" />
-	<!-- the name of the shared library -->
-	<property name="libName" value="libgdx-bullet.a"/>
-	<!-- the jni header jniPlatform to use -->
-	<property name="jniPlatform" value="mac"/>
-	<!-- the compilerPrefix for the C & C++ compilers -->
-	<property name="compilerPrefix" value=""/>	
-	<property name="iphoneos-platform" value="/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin"/>
-	<property name="iphoneos-sdk" value="/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS6.0.sdk/"/>
-	<property name="iphonesimulator-platform" value="/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/usr/bin"/>
-	<property name="iphonesimulator-sdk" value="/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator6.0.sdk/"/>
-	
-	<!-- define gcc compiler, options and files to compile -->
-	<property name="gcc" value="${compilerPrefix}gcc"/>	
-	<property name="gcc-opts" value="-c -Wall -O2"/>
-	<fileset id="gcc-files" dir="./">
-		<exclude name="target/"/>		
-				<include name="memcpy_wrap.c"/>
-		<include name="**/*.c"/>
-
-				<exclude name="src/BulletMultiThreaded/GpuSoftBodySolvers/**"/>
-
-	</fileset>
-	
-	<!-- define g++ compiler, options and files to compile -->
-	<property name="g++" value="${compilerPrefix}g++"/>
-	<property name="g++-opts" value="-c -Wall -O2 -fno-strict-aliasing -fno-rtti -DBT_NO_PROFILE"/>
-	<fileset id="g++-files" dir="./">
-		<exclude name="target/"/>
-				<include name="**/*.cpp"/>
-
-				<exclude name="src/BulletMultiThreaded/GpuSoftBodySolvers/**"/>
-
-	</fileset>
-
-	<!-- define linker and options -->
-	<property name="linker" value="${compilerPrefix}ar"/>
-	<property name="linker-opts" value="rcs"/>
-	<property name="libraries" value=""/>
-	
-	<!-- cleans the build directory, removes all object files and shared libs -->
-	<target name="clean">
-		<delete includeemptydirs="true" quiet="true">
-			<fileset dir="${buildDir}"/>
-			<fileset dir="${libsDir}" includes="**/*" excludes="**/.svn"/>
-		</delete>
-	</target>
-	
-	<target name="clean-objfiles">
-		<delete>
-			<fileset dir="${buildDir}">
-				<include name="**/*.o"/>
-			</fileset>
-		</delete>
-	</target>
-	
-	<target name="create-build-dir">
-		<!-- FIXME this is pretty nasty :/ -->
-		<copy todir="${buildDir}">
-			<fileset refid="g++-files"/>
-			<fileset refid="gcc-files"/>
-		</copy>
-		<delete>
-			<fileset dir="${buildDir}">
-				<include name="*"/>
-				<exclude name="*.o"/>
-			</fileset>
-		</delete>
-	</target>
-
-	<!-- compiles all C and C++ files to object files in the build directory, for 386 builds-->
-	<target name="compile-386" depends="clean,create-build-dir">
-		<mkdir dir="${buildDir}"/>
-		<apply failonerror="true" executable="${iphonesimulator-platform}/${g++}" dest="${buildDir}" verbose="true">
-			<arg line="-isysroot ${iphonesimulator-sdk} -arch i386 ${g++-opts}"/>
-			<arg value="-Ijni-headers"/>
-			<arg value="-Ijni-headers/${jniPlatform}"/>
-			<arg value="-I."/>
-						<arg value="-Isrc/"/>
-
-			<srcfile/>
-			<arg value="-o"/>
-			<targetfile/>
-			<fileset refid="g++-files"/>
-			<compositemapper>
-				<mapper type="glob" from="*.cpp" to="*.o"/>
-				<mapper type="glob" from="*.mm" to="*.o"/>
-			</compositemapper>
-		</apply>
-		<apply failonerror="true" executable="${iphonesimulator-platform}/${gcc}" dest="${buildDir}" verbose="true">
-			<arg line="-isysroot ${iphonesimulator-sdk} -arch i386 ${gcc-opts}"/>
-			<arg value="-Ijni-headers"/>
-			<arg value="-Ijni-headers/${jniPlatform}"/>
-			<arg value="-I."/>
-						<arg value="-Isrc/"/>
-
-			<srcfile/>
-			<arg value="-o"/>
-			<targetfile/>
-			<fileset refid="gcc-files"/>
-			<compositemapper>
-				<mapper type="glob" from="*.c" to="*.o"/>
-			</compositemapper>
-		</apply>
-	</target>	
-
-	<!-- links the shared library based on the previously compiled object files -->
-	<target name="link-386" depends="compile-386">
-		<fileset dir="${buildDir}" id="objFileSet">
-			<patternset>
-				<include name="**/*.o" />
-			</patternset>
-		</fileset>
-		<pathconvert pathsep=" " property="objFiles" refid="objFileSet" />
-		<mkdir dir="${libsDir}" />
-		<exec executable="${iphonesimulator-platform}/${linker}" failonerror="true" dir="${buildDir}">
-			<arg line="${linker-opts}" />
-			<arg path="${libsDir}/${libName}.386" />
-			<arg line="${objFiles}"/>
-			<arg line="${libraries}" />
-		</exec>
-	</target>
-	
-	<!-- compiles all C and C++ files to object files in the build directory, for 386 builds-->
-	<target name="compile-arm" depends="create-build-dir,clean-objfiles">
-		<mkdir dir="${buildDir}"/>
-		<apply failonerror="true" executable="${iphoneos-platform}/${g++}" dest="${buildDir}" verbose="true">
-			<arg line="-isysroot ${iphoneos-sdk} -arch armv7 ${g++-opts}"/>
-			<arg value="-Ijni-headers"/>
-			<arg value="-Ijni-headers/${jniPlatform}"/>
-			<arg value="-I."/>
-						<arg value="-Isrc/"/>
-
-			<srcfile/>
-			<arg value="-o"/>
-			<targetfile/>
-			<fileset refid="g++-files"/>
-			<compositemapper>
-				<mapper type="glob" from="*.cpp" to="*.o"/>
-				<mapper type="glob" from="*.mm" to="*.o"/>
-			</compositemapper>
-		</apply>
-		<apply failonerror="true" executable="${iphoneos-platform}/${gcc}" dest="${buildDir}" verbose="true">
-			<arg line="-isysroot ${iphoneos-sdk} -arch armv7 ${gcc-opts}"/>
-			<arg value="-Ijni-headers"/>
-			<arg value="-Ijni-headers/${jniPlatform}"/>
-			<arg value="-I."/>
-						<arg value="-Isrc/"/>
-
-			<srcfile/>
-			<arg value="-o"/>
-			<targetfile/>
-			<fileset refid="gcc-files"/>
-			<compositemapper>
-				<mapper type="glob" from="*.c" to="*.o"/>
-			</compositemapper>
-		</apply>
-	</target>	
-
-	<!-- links the shared library based on the previously compiled object files -->
-	<target name="link-arm" depends="compile-arm">
-		<fileset dir="${buildDir}" id="objFileSet">
-			<patternset>
-				<include name="**/*.o" />
-			</patternset>
-		</fileset>
-		<pathconvert pathsep=" " property="objFiles" refid="objFileSet" />
-		<mkdir dir="${libsDir}" />
-		<exec executable="${iphoneos-platform}/${linker}" failonerror="true" dir="${buildDir}">
-			<arg line="${linker-opts}" />
-			<arg path="${libsDir}/${libName}.armv7" />
-			<arg line="${objFiles}"/>
-			<arg line="${libraries}" />
-		</exec>
-	</target>
-
-	<target name="link-fat">
-		<exec executable="lipo" failonerror="true" dir="${libsDir}">
-			<arg line="-create -output ${libName} ${libName}.386 ${libName}.armv7"/>
-		</exec>
-	</target>
-
-	<target name="postcompile" depends="link-386,link-arm,link-fat">
-		
-	</target>
-</project>
diff --git a/extensions/gdx-bullet/jni/build-linux32.xml b/extensions/gdx-bullet/jni/build-linux32.xml
index 32c7a53..c1599cd 100644
--- a/extensions/gdx-bullet/jni/build-linux32.xml
+++ b/extensions/gdx-bullet/jni/build-linux32.xml
@@ -17,8 +17,7 @@
 	<property name="gcc-opts" value="-c -Wall -O2 -mfpmath=sse -msse -fmessage-length=0 -m32 -fPIC"/>
 	<fileset id="gcc-files" dir="./">
 		<exclude name="target/"/>		
-				<include name="memcpy_wrap.c"/>
-		<include name="**/*.c"/>
+				<include name="**/*.c"/>
 
 				<exclude name="src/BulletMultiThreaded/GpuSoftBodySolvers/**"/>
 
@@ -38,7 +37,6 @@
 	<!-- define linker and options -->
 	<property name="linker" value="${compilerPrefix}g++"/>
 	<property name="linker-opts" value="-shared -m32"/>
-	<property name="libraries" value=""/>
 	
 	<!-- cleans the build directory, removes all object files and shared libs -->
 	<target name="clean">
@@ -97,10 +95,9 @@
 			<arg value="-o"/>
 			<targetfile/>
 			<fileset refid="g++-files"/>
-			<compositemapper>
+			<chainedmapper>
 				<mapper type="glob" from="*.cpp" to="*.o"/>
-				<mapper type="glob" from="*.mm" to="*.o"/>
-			</compositemapper>
+			</chainedmapper>
 		</apply>
 		<apply failonerror="true" executable="${gcc}" dest="${buildDir}" verbose="true">
 			<arg line="${gcc-opts}"/>
@@ -113,28 +110,25 @@
 			<arg value="-o"/>
 			<targetfile/>
 			<fileset refid="gcc-files"/>
-			<compositemapper>
+			<chainedmapper>
 				<mapper type="glob" from="*.c" to="*.o"/>
-			</compositemapper>
+			</chainedmapper>
 		</apply>
 	</target>	
 
 	<!-- links the shared library based on the previously compiled object files -->	
 	<target name="link" depends="compile" if="has-compiler">
-		<fileset dir="${buildDir}" id="objFileSet">
-			<patternset>
-				<include name="**/*.o" />
-			</patternset>
-		</fileset>
-		<pathconvert pathsep=" " property="objFiles" refid="objFileSet" />
-		<mkdir dir="${libsDir}" />
-		<exec executable="${linker}" failonerror="true" dir="${buildDir}">
-			<arg line="${linker-opts}" />
-			<arg value="-o" />
-			<arg path="${libsDir}/${libName}" />
-			<arg line="${objFiles}"/>
-			<arg line="${libraries}" />
-		</exec>
+		<mkdir dir="${libsDir}"/>
+		<apply failonerror="true" executable="${linker}" parallel="true" dir="${buildDir}">
+			<arg line="${linker-opts}"/>
+			<arg value="-o"/>
+			<arg path="${libsDir}/${libName}"/>		
+			<fileset dir="${buildDir}">
+				<patternset>
+					<include name="**/*.o"/>
+				</patternset>
+			</fileset>
+		</apply>
 	</target>	
 	
 	<target name="postcompile" depends="link">
diff --git a/extensions/gdx-bullet/jni/build-linux64.xml b/extensions/gdx-bullet/jni/build-linux64.xml
index 6e43e9e..cb5ade9 100644
--- a/extensions/gdx-bullet/jni/build-linux64.xml
+++ b/extensions/gdx-bullet/jni/build-linux64.xml
@@ -17,8 +17,7 @@
 	<property name="gcc-opts" value="-c -Wall -O2 -mfpmath=sse -msse -fmessage-length=0 -m64 -fPIC"/>
 	<fileset id="gcc-files" dir="./">
 		<exclude name="target/"/>		
-				<include name="memcpy_wrap.c"/>
-		<include name="**/*.c"/>
+				<include name="**/*.c"/>
 
 				<exclude name="src/BulletMultiThreaded/GpuSoftBodySolvers/**"/>
 
@@ -38,7 +37,6 @@
 	<!-- define linker and options -->
 	<property name="linker" value="${compilerPrefix}g++"/>
 	<property name="linker-opts" value="-shared -m64 -Wl,-wrap,memcpy"/>
-	<property name="libraries" value=""/>
 	
 	<!-- cleans the build directory, removes all object files and shared libs -->
 	<target name="clean">
@@ -97,10 +95,9 @@
 			<arg value="-o"/>
 			<targetfile/>
 			<fileset refid="g++-files"/>
-			<compositemapper>
+			<chainedmapper>
 				<mapper type="glob" from="*.cpp" to="*.o"/>
-				<mapper type="glob" from="*.mm" to="*.o"/>
-			</compositemapper>
+			</chainedmapper>
 		</apply>
 		<apply failonerror="true" executable="${gcc}" dest="${buildDir}" verbose="true">
 			<arg line="${gcc-opts}"/>
@@ -113,28 +110,25 @@
 			<arg value="-o"/>
 			<targetfile/>
 			<fileset refid="gcc-files"/>
-			<compositemapper>
+			<chainedmapper>
 				<mapper type="glob" from="*.c" to="*.o"/>
-			</compositemapper>
+			</chainedmapper>
 		</apply>
 	</target>	
 
 	<!-- links the shared library based on the previously compiled object files -->	
 	<target name="link" depends="compile" if="has-compiler">
-		<fileset dir="${buildDir}" id="objFileSet">
-			<patternset>
-				<include name="**/*.o" />
-			</patternset>
-		</fileset>
-		<pathconvert pathsep=" " property="objFiles" refid="objFileSet" />
-		<mkdir dir="${libsDir}" />
-		<exec executable="${linker}" failonerror="true" dir="${buildDir}">
-			<arg line="${linker-opts}" />
-			<arg value="-o" />
-			<arg path="${libsDir}/${libName}" />
-			<arg line="${objFiles}"/>
-			<arg line="${libraries}" />
-		</exec>
+		<mkdir dir="${libsDir}"/>
+		<apply failonerror="true" executable="${linker}" parallel="true" dir="${buildDir}">
+			<arg line="${linker-opts}"/>
+			<arg value="-o"/>
+			<arg path="${libsDir}/${libName}"/>		
+			<fileset dir="${buildDir}">
+				<patternset>
+					<include name="**/*.o"/>
+				</patternset>
+			</fileset>
+		</apply>
 	</target>	
 	
 	<target name="postcompile" depends="link">
diff --git a/extensions/gdx-bullet/jni/build-macosx32.xml b/extensions/gdx-bullet/jni/build-macosx32.xml
index c4a6ce3..c3743d8 100644
--- a/extensions/gdx-bullet/jni/build-macosx32.xml
+++ b/extensions/gdx-bullet/jni/build-macosx32.xml
@@ -17,8 +17,7 @@
 	<property name="gcc-opts" value="-c -Wall -O2 -arch i386 -arch x86_64 -DFIXED_POINT -fmessage-length=0 -fPIC -mmacosx-version-min=10.5"/>
 	<fileset id="gcc-files" dir="./">
 		<exclude name="target/"/>		
-				<include name="memcpy_wrap.c"/>
-		<include name="**/*.c"/>
+				<include name="**/*.c"/>
 
 				<exclude name="src/BulletMultiThreaded/GpuSoftBodySolvers/**"/>
 
@@ -38,7 +37,6 @@
 	<!-- define linker and options -->
 	<property name="linker" value="${compilerPrefix}g++"/>
 	<property name="linker-opts" value="-shared -arch i386 -arch x86_64 -mmacosx-version-min=10.5"/>
-	<property name="libraries" value=""/>
 	
 	<!-- cleans the build directory, removes all object files and shared libs -->
 	<target name="clean">
@@ -97,10 +95,9 @@
 			<arg value="-o"/>
 			<targetfile/>
 			<fileset refid="g++-files"/>
-			<compositemapper>
+			<chainedmapper>
 				<mapper type="glob" from="*.cpp" to="*.o"/>
-				<mapper type="glob" from="*.mm" to="*.o"/>
-			</compositemapper>
+			</chainedmapper>
 		</apply>
 		<apply failonerror="true" executable="${gcc}" dest="${buildDir}" verbose="true">
 			<arg line="${gcc-opts}"/>
@@ -113,28 +110,25 @@
 			<arg value="-o"/>
 			<targetfile/>
 			<fileset refid="gcc-files"/>
-			<compositemapper>
+			<chainedmapper>
 				<mapper type="glob" from="*.c" to="*.o"/>
-			</compositemapper>
+			</chainedmapper>
 		</apply>
 	</target>	
 
 	<!-- links the shared library based on the previously compiled object files -->	
 	<target name="link" depends="compile" if="has-compiler">
-		<fileset dir="${buildDir}" id="objFileSet">
-			<patternset>
-				<include name="**/*.o" />
-			</patternset>
-		</fileset>
-		<pathconvert pathsep=" " property="objFiles" refid="objFileSet" />
-		<mkdir dir="${libsDir}" />
-		<exec executable="${linker}" failonerror="true" dir="${buildDir}">
-			<arg line="${linker-opts}" />
-			<arg value="-o" />
-			<arg path="${libsDir}/${libName}" />
-			<arg line="${objFiles}"/>
-			<arg line="${libraries}" />
-		</exec>
+		<mkdir dir="${libsDir}"/>
+		<apply failonerror="true" executable="${linker}" parallel="true" dir="${buildDir}">
+			<arg line="${linker-opts}"/>
+			<arg value="-o"/>
+			<arg path="${libsDir}/${libName}"/>		
+			<fileset dir="${buildDir}">
+				<patternset>
+					<include name="**/*.o"/>
+				</patternset>
+			</fileset>
+		</apply>
 	</target>	
 	
 	<target name="postcompile" depends="link">
diff --git a/extensions/gdx-bullet/jni/build-windows32.xml b/extensions/gdx-bullet/jni/build-windows32.xml
index b8fd3c3..c03d783 100644
--- a/extensions/gdx-bullet/jni/build-windows32.xml
+++ b/extensions/gdx-bullet/jni/build-windows32.xml
@@ -17,8 +17,7 @@
 	<property name="gcc-opts" value="-c -Wall -O2 -mfpmath=sse -msse2 -fmessage-length=0 -m32"/>
 	<fileset id="gcc-files" dir="./">
 		<exclude name="target/"/>		
-				<include name="memcpy_wrap.c"/>
-		<include name="**/*.c"/>
+				<include name="**/*.c"/>
 
 				<exclude name="src/BulletMultiThreaded/GpuSoftBodySolvers/**"/>
 
@@ -38,7 +37,6 @@
 	<!-- define linker and options -->
 	<property name="linker" value="${compilerPrefix}g++"/>
 	<property name="linker-opts" value="-Wl,--kill-at -shared -m32 -static-libgcc -static-libstdc++"/>
-	<property name="libraries" value=""/>
 	
 	<!-- cleans the build directory, removes all object files and shared libs -->
 	<target name="clean">
@@ -97,10 +95,9 @@
 			<arg value="-o"/>
 			<targetfile/>
 			<fileset refid="g++-files"/>
-			<compositemapper>
+			<chainedmapper>
 				<mapper type="glob" from="*.cpp" to="*.o"/>
-				<mapper type="glob" from="*.mm" to="*.o"/>
-			</compositemapper>
+			</chainedmapper>
 		</apply>
 		<apply failonerror="true" executable="${gcc}" dest="${buildDir}" verbose="true">
 			<arg line="${gcc-opts}"/>
@@ -113,28 +110,25 @@
 			<arg value="-o"/>
 			<targetfile/>
 			<fileset refid="gcc-files"/>
-			<compositemapper>
+			<chainedmapper>
 				<mapper type="glob" from="*.c" to="*.o"/>
-			</compositemapper>
+			</chainedmapper>
 		</apply>
 	</target>	
 
 	<!-- links the shared library based on the previously compiled object files -->	
 	<target name="link" depends="compile" if="has-compiler">
-		<fileset dir="${buildDir}" id="objFileSet">
-			<patternset>
-				<include name="**/*.o" />
-			</patternset>
-		</fileset>
-		<pathconvert pathsep=" " property="objFiles" refid="objFileSet" />
-		<mkdir dir="${libsDir}" />
-		<exec executable="${linker}" failonerror="true" dir="${buildDir}">
-			<arg line="${linker-opts}" />
-			<arg value="-o" />
-			<arg path="${libsDir}/${libName}" />
-			<arg line="${objFiles}"/>
-			<arg line="${libraries}" />
-		</exec>
+		<mkdir dir="${libsDir}"/>
+		<apply failonerror="true" executable="${linker}" parallel="true" dir="${buildDir}">
+			<arg line="${linker-opts}"/>
+			<arg value="-o"/>
+			<arg path="${libsDir}/${libName}"/>		
+			<fileset dir="${buildDir}">
+				<patternset>
+					<include name="**/*.o"/>
+				</patternset>
+			</fileset>
+		</apply>
 	</target>	
 	
 	<target name="postcompile" depends="link">
diff --git a/extensions/gdx-bullet/jni/build-windows32home.xml b/extensions/gdx-bullet/jni/build-windows32home.xml
index f4fc627..dae7c70 100644
--- a/extensions/gdx-bullet/jni/build-windows32home.xml
+++ b/extensions/gdx-bullet/jni/build-windows32home.xml
@@ -17,8 +17,7 @@
 	<property name="gcc-opts" value="-c -Wall -O2 -mfpmath=sse -msse2 -fmessage-length=0 -m32"/>
 	<fileset id="gcc-files" dir="./">
 		<exclude name="target/"/>		
-				<include name="memcpy_wrap.c"/>
-		<include name="**/*.c"/>
+				<include name="**/*.c"/>
 
 				<exclude name="src/BulletMultiThreaded/GpuSoftBodySolvers/**"/>
 
@@ -38,7 +37,6 @@
 	<!-- define linker and options -->
 	<property name="linker" value="${compilerPrefix}g++"/>
 	<property name="linker-opts" value="-Wl,--kill-at -shared -m32 -static-libgcc -static-libstdc++"/>
-	<property name="libraries" value=""/>
 	
 	<!-- cleans the build directory, removes all object files and shared libs -->
 	<target name="clean">
@@ -97,10 +95,9 @@
 			<arg value="-o"/>
 			<targetfile/>
 			<fileset refid="g++-files"/>
-			<compositemapper>
+			<chainedmapper>
 				<mapper type="glob" from="*.cpp" to="*.o"/>
-				<mapper type="glob" from="*.mm" to="*.o"/>
-			</compositemapper>
+			</chainedmapper>
 		</apply>
 		<apply failonerror="true" executable="${gcc}" dest="${buildDir}" verbose="true">
 			<arg line="${gcc-opts}"/>
@@ -113,28 +110,25 @@
 			<arg value="-o"/>
 			<targetfile/>
 			<fileset refid="gcc-files"/>
-			<compositemapper>
+			<chainedmapper>
 				<mapper type="glob" from="*.c" to="*.o"/>
-			</compositemapper>
+			</chainedmapper>
 		</apply>
 	</target>	
 
 	<!-- links the shared library based on the previously compiled object files -->	
 	<target name="link" depends="compile" if="has-compiler">
-		<fileset dir="${buildDir}" id="objFileSet">
-			<patternset>
-				<include name="**/*.o" />
-			</patternset>
-		</fileset>
-		<pathconvert pathsep=" " property="objFiles" refid="objFileSet" />
-		<mkdir dir="${libsDir}" />
-		<exec executable="${linker}" failonerror="true" dir="${buildDir}">
-			<arg line="${linker-opts}" />
-			<arg value="-o" />
-			<arg path="${libsDir}/${libName}" />
-			<arg line="${objFiles}"/>
-			<arg line="${libraries}" />
-		</exec>
+		<mkdir dir="${libsDir}"/>
+		<apply failonerror="true" executable="${linker}" parallel="true" dir="${buildDir}">
+			<arg line="${linker-opts}"/>
+			<arg value="-o"/>
+			<arg path="${libsDir}/${libName}"/>		
+			<fileset dir="${buildDir}">
+				<patternset>
+					<include name="**/*.o"/>
+				</patternset>
+			</fileset>
+		</apply>
 	</target>	
 	
 	<target name="postcompile" depends="link">
diff --git a/extensions/gdx-bullet/jni/build-windows64.xml b/extensions/gdx-bullet/jni/build-windows64.xml
index 9d5534e..eb2e2fb 100644
--- a/extensions/gdx-bullet/jni/build-windows64.xml
+++ b/extensions/gdx-bullet/jni/build-windows64.xml
@@ -17,8 +17,7 @@
 	<property name="gcc-opts" value="-c -Wall -O2 -mfpmath=sse -msse2 -fmessage-length=0 -m64"/>
 	<fileset id="gcc-files" dir="./">
 		<exclude name="target/"/>		
-				<include name="memcpy_wrap.c"/>
-		<include name="**/*.c"/>
+				<include name="**/*.c"/>
 
 				<exclude name="src/BulletMultiThreaded/GpuSoftBodySolvers/**"/>
 
@@ -38,7 +37,6 @@
 	<!-- define linker and options -->
 	<property name="linker" value="${compilerPrefix}g++"/>
 	<property name="linker-opts" value="-Wl,--kill-at -shared -static-libgcc -static-libstdc++ -m64"/>
-	<property name="libraries" value=""/>
 	
 	<!-- cleans the build directory, removes all object files and shared libs -->
 	<target name="clean">
@@ -97,10 +95,9 @@
 			<arg value="-o"/>
 			<targetfile/>
 			<fileset refid="g++-files"/>
-			<compositemapper>
+			<chainedmapper>
 				<mapper type="glob" from="*.cpp" to="*.o"/>
-				<mapper type="glob" from="*.mm" to="*.o"/>
-			</compositemapper>
+			</chainedmapper>
 		</apply>
 		<apply failonerror="true" executable="${gcc}" dest="${buildDir}" verbose="true">
 			<arg line="${gcc-opts}"/>
@@ -113,28 +110,25 @@
 			<arg value="-o"/>
 			<targetfile/>
 			<fileset refid="gcc-files"/>
-			<compositemapper>
+			<chainedmapper>
 				<mapper type="glob" from="*.c" to="*.o"/>
-			</compositemapper>
+			</chainedmapper>
 		</apply>
 	</target>	
 
 	<!-- links the shared library based on the previously compiled object files -->	
 	<target name="link" depends="compile" if="has-compiler">
-		<fileset dir="${buildDir}" id="objFileSet">
-			<patternset>
-				<include name="**/*.o" />
-			</patternset>
-		</fileset>
-		<pathconvert pathsep=" " property="objFiles" refid="objFileSet" />
-		<mkdir dir="${libsDir}" />
-		<exec executable="${linker}" failonerror="true" dir="${buildDir}">
-			<arg line="${linker-opts}" />
-			<arg value="-o" />
-			<arg path="${libsDir}/${libName}" />
-			<arg line="${objFiles}"/>
-			<arg line="${libraries}" />
-		</exec>
+		<mkdir dir="${libsDir}"/>
+		<apply failonerror="true" executable="${linker}" parallel="true" dir="${buildDir}">
+			<arg line="${linker-opts}"/>
+			<arg value="-o"/>
+			<arg path="${libsDir}/${libName}"/>		
+			<fileset dir="${buildDir}">
+				<patternset>
+					<include name="**/*.o"/>
+				</patternset>
+			</fileset>
+		</apply>
 	</target>	
 	
 	<target name="postcompile" depends="link">
diff --git a/extensions/gdx-bullet/jni/build.xml b/extensions/gdx-bullet/jni/build.xml
index da65248..8b1bfa0 100644
--- a/extensions/gdx-bullet/jni/build.xml
+++ b/extensions/gdx-bullet/jni/build.xml
@@ -25,7 +25,6 @@
 			<fileset dir="../libs/linux64" includes="libgdx-bullet64.so"/>
 			<fileset dir="../libs/macosx32" includes="libgdx-bullet.dylib"/>
 			<fileset dir="../libs/android32" includes="libgdx-bullet.so"/>
-			<fileset dir="../libs/ios32" includes="libgdx-bullet.a"/>
 
 		</jar>
 	</target>
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/AllHitsRayResultCallback.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/AllHitsRayResultCallback.java
index f773748..c64f8b0 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/AllHitsRayResultCallback.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/AllHitsRayResultCallback.java
@@ -40,24 +40,8 @@ public class AllHitsRayResultCallback extends RayResultCallback {
     super.delete();
   }
 
-  protected void swigDirectorDisconnect() {
-    swigCMemOwn = false;
-    delete();
-  }
-
-  public void swigReleaseOwnership() {
-    swigCMemOwn = false;
-    gdxBulletJNI.AllHitsRayResultCallback_change_ownership(this, swigCPtr, false);
-  }
-
-  public void swigTakeOwnership() {
-    swigCMemOwn = true;
-    gdxBulletJNI.AllHitsRayResultCallback_change_ownership(this, swigCPtr, true);
-  }
-
   public AllHitsRayResultCallback(Vector3 rayFromWorld, Vector3 rayToWorld) {
     this(gdxBulletJNI.new_AllHitsRayResultCallback(rayFromWorld, rayToWorld), true);
-    gdxBulletJNI.AllHitsRayResultCallback_director_connect(this, swigCPtr, swigCMemOwn, true);
   }
 
   public void setM_collisionObjects(SWIGTYPE_p_btAlignedObjectArrayT_btCollisionObject_const_p_t value) {
@@ -114,8 +98,4 @@ public class AllHitsRayResultCallback extends RayResultCallback {
     return (cPtr == 0) ? null : new SWIGTYPE_p_btAlignedObjectArrayT_float_t(cPtr, false);
   }
 
-  public float addSingleResult(LocalRayResult rayResult, boolean normalInWorldSpace) {
-    return (getClass() == AllHitsRayResultCallback.class) ? gdxBulletJNI.AllHitsRayResultCallback_addSingleResult(swigCPtr, this, LocalRayResult.getCPtr(rayResult), rayResult, normalInWorldSpace) : gdxBulletJNI.AllHitsRayResultCallback_addSingleResultSwigExplicitAllHitsRayResultCallback(swigCPtr, this, LocalRayResult.getCPtr(rayResult), rayResult, normalInWorldSpace);
-  }
-
 }
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/ClosestConvexResultCallback.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/ClosestConvexResultCallback.java
index f2a6147..48b7297 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/ClosestConvexResultCallback.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/ClosestConvexResultCallback.java
@@ -40,24 +40,8 @@ public class ClosestConvexResultCallback extends ConvexResultCallback {
     super.delete();
   }
 
-  protected void swigDirectorDisconnect() {
-    swigCMemOwn = false;
-    delete();
-  }
-
-  public void swigReleaseOwnership() {
-    swigCMemOwn = false;
-    gdxBulletJNI.ClosestConvexResultCallback_change_ownership(this, swigCPtr, false);
-  }
-
-  public void swigTakeOwnership() {
-    swigCMemOwn = true;
-    gdxBulletJNI.ClosestConvexResultCallback_change_ownership(this, swigCPtr, true);
-  }
-
   public ClosestConvexResultCallback(Vector3 convexFromWorld, Vector3 convexToWorld) {
     this(gdxBulletJNI.new_ClosestConvexResultCallback(convexFromWorld, convexToWorld), true);
-    gdxBulletJNI.ClosestConvexResultCallback_director_connect(this, swigCPtr, swigCMemOwn, true);
   }
 
   public void setM_convexFromWorld(btVector3 value) {
@@ -105,8 +89,4 @@ public class ClosestConvexResultCallback extends ConvexResultCallback {
 	return (cPtr == 0) ? null : btCollisionObject.getInstance(cPtr, false);
 }
 
-  public float addSingleResult(LocalConvexResult convexResult, boolean normalInWorldSpace) {
-    return (getClass() == ClosestConvexResultCallback.class) ? gdxBulletJNI.ClosestConvexResultCallback_addSingleResult(swigCPtr, this, LocalConvexResult.getCPtr(convexResult), convexResult, normalInWorldSpace) : gdxBulletJNI.ClosestConvexResultCallback_addSingleResultSwigExplicitClosestConvexResultCallback(swigCPtr, this, LocalConvexResult.getCPtr(convexResult), convexResult, normalInWorldSpace);
-  }
-
 }
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/ClosestRayResultCallback.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/ClosestRayResultCallback.java
index d7334f2..8d06011 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/ClosestRayResultCallback.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/ClosestRayResultCallback.java
@@ -40,24 +40,8 @@ public class ClosestRayResultCallback extends RayResultCallback {
     super.delete();
   }
 
-  protected void swigDirectorDisconnect() {
-    swigCMemOwn = false;
-    delete();
-  }
-
-  public void swigReleaseOwnership() {
-    swigCMemOwn = false;
-    gdxBulletJNI.ClosestRayResultCallback_change_ownership(this, swigCPtr, false);
-  }
-
-  public void swigTakeOwnership() {
-    swigCMemOwn = true;
-    gdxBulletJNI.ClosestRayResultCallback_change_ownership(this, swigCPtr, true);
-  }
-
   public ClosestRayResultCallback(Vector3 rayFromWorld, Vector3 rayToWorld) {
     this(gdxBulletJNI.new_ClosestRayResultCallback(rayFromWorld, rayToWorld), true);
-    gdxBulletJNI.ClosestRayResultCallback_director_connect(this, swigCPtr, swigCMemOwn, true);
   }
 
   public void setM_rayFromWorld(btVector3 value) {
@@ -96,8 +80,4 @@ public class ClosestRayResultCallback extends RayResultCallback {
     return (cPtr == 0) ? null : new btVector3(cPtr, false);
   }
 
-  public float addSingleResult(LocalRayResult rayResult, boolean normalInWorldSpace) {
-    return (getClass() == ClosestRayResultCallback.class) ? gdxBulletJNI.ClosestRayResultCallback_addSingleResult(swigCPtr, this, LocalRayResult.getCPtr(rayResult), rayResult, normalInWorldSpace) : gdxBulletJNI.ClosestRayResultCallback_addSingleResultSwigExplicitClosestRayResultCallback(swigCPtr, this, LocalRayResult.getCPtr(rayResult), rayResult, normalInWorldSpace);
-  }
-
 }
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/ContactResultCallback.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/ContactResultCallback.java
index 7aa43ae..97bd96e 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/ContactResultCallback.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/ContactResultCallback.java
@@ -40,21 +40,6 @@ public class ContactResultCallback {
     }
   }
 
-  protected void swigDirectorDisconnect() {
-    swigCMemOwn = false;
-    delete();
-  }
-
-  public void swigReleaseOwnership() {
-    swigCMemOwn = false;
-    gdxBulletJNI.ContactResultCallback_change_ownership(this, swigCPtr, false);
-  }
-
-  public void swigTakeOwnership() {
-    swigCMemOwn = true;
-    gdxBulletJNI.ContactResultCallback_change_ownership(this, swigCPtr, true);
-  }
-
   public void setM_collisionFilterGroup(short value) {
     gdxBulletJNI.ContactResultCallback_m_collisionFilterGroup_set(swigCPtr, this, value);
   }
@@ -71,17 +56,12 @@ public class ContactResultCallback {
     return gdxBulletJNI.ContactResultCallback_m_collisionFilterMask_get(swigCPtr, this);
   }
 
-  public ContactResultCallback() {
-    this(gdxBulletJNI.new_ContactResultCallback(), true);
-    gdxBulletJNI.ContactResultCallback_director_connect(this, swigCPtr, swigCMemOwn, true);
-  }
-
   public boolean needsCollision(btBroadphaseProxy proxy0) {
-    return (getClass() == ContactResultCallback.class) ? gdxBulletJNI.ContactResultCallback_needsCollision(swigCPtr, this, btBroadphaseProxy.getCPtr(proxy0), proxy0) : gdxBulletJNI.ContactResultCallback_needsCollisionSwigExplicitContactResultCallback(swigCPtr, this, btBroadphaseProxy.getCPtr(proxy0), proxy0);
+    return gdxBulletJNI.ContactResultCallback_needsCollision(swigCPtr, this, btBroadphaseProxy.getCPtr(proxy0), proxy0);
   }
 
-  public float addSingleResult(btManifoldPoint cp, btCollisionObjectWrapper colObj0Wrap, int partId0, int index0, btCollisionObjectWrapper colObj1Wrap, int partId1, int index1) {
-    return gdxBulletJNI.ContactResultCallback_addSingleResult(swigCPtr, this, btManifoldPoint.getCPtr(cp), cp, btCollisionObjectWrapper.getCPtr(colObj0Wrap), colObj0Wrap, partId0, index0, btCollisionObjectWrapper.getCPtr(colObj1Wrap), colObj1Wrap, partId1, index1);
+  public float addSingleResult(btManifoldPoint cp, SWIGTYPE_p_btCollisionObjectWrapper colObj0Wrap, int partId0, int index0, SWIGTYPE_p_btCollisionObjectWrapper colObj1Wrap, int partId1, int index1) {
+    return gdxBulletJNI.ContactResultCallback_addSingleResult(swigCPtr, this, btManifoldPoint.getCPtr(cp), cp, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(colObj0Wrap), partId0, index0, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(colObj1Wrap), partId1, index1);
   }
 
 }
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/ConvexResultCallback.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/ConvexResultCallback.java
index eebb495..8c4e0cb 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/ConvexResultCallback.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/ConvexResultCallback.java
@@ -40,21 +40,6 @@ public class ConvexResultCallback {
     }
   }
 
-  protected void swigDirectorDisconnect() {
-    swigCMemOwn = false;
-    delete();
-  }
-
-  public void swigReleaseOwnership() {
-    swigCMemOwn = false;
-    gdxBulletJNI.ConvexResultCallback_change_ownership(this, swigCPtr, false);
-  }
-
-  public void swigTakeOwnership() {
-    swigCMemOwn = true;
-    gdxBulletJNI.ConvexResultCallback_change_ownership(this, swigCPtr, true);
-  }
-
   public void setM_closestHitFraction(float value) {
     gdxBulletJNI.ConvexResultCallback_m_closestHitFraction_set(swigCPtr, this, value);
   }
@@ -79,17 +64,12 @@ public class ConvexResultCallback {
     return gdxBulletJNI.ConvexResultCallback_m_collisionFilterMask_get(swigCPtr, this);
   }
 
-  public ConvexResultCallback() {
-    this(gdxBulletJNI.new_ConvexResultCallback(), true);
-    gdxBulletJNI.ConvexResultCallback_director_connect(this, swigCPtr, swigCMemOwn, true);
-  }
-
   public boolean hasHit() {
     return gdxBulletJNI.ConvexResultCallback_hasHit(swigCPtr, this);
   }
 
   public boolean needsCollision(btBroadphaseProxy proxy0) {
-    return (getClass() == ConvexResultCallback.class) ? gdxBulletJNI.ConvexResultCallback_needsCollision(swigCPtr, this, btBroadphaseProxy.getCPtr(proxy0), proxy0) : gdxBulletJNI.ConvexResultCallback_needsCollisionSwigExplicitConvexResultCallback(swigCPtr, this, btBroadphaseProxy.getCPtr(proxy0), proxy0);
+    return gdxBulletJNI.ConvexResultCallback_needsCollision(swigCPtr, this, btBroadphaseProxy.getCPtr(proxy0), proxy0);
   }
 
   public float addSingleResult(LocalConvexResult convexResult, boolean normalInWorldSpace) {
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/RayResultCallback.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/RayResultCallback.java
index bde1679..7959c84 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/RayResultCallback.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/RayResultCallback.java
@@ -40,21 +40,6 @@ public class RayResultCallback {
     }
   }
 
-  protected void swigDirectorDisconnect() {
-    swigCMemOwn = false;
-    delete();
-  }
-
-  public void swigReleaseOwnership() {
-    swigCMemOwn = false;
-    gdxBulletJNI.RayResultCallback_change_ownership(this, swigCPtr, false);
-  }
-
-  public void swigTakeOwnership() {
-    swigCMemOwn = true;
-    gdxBulletJNI.RayResultCallback_change_ownership(this, swigCPtr, true);
-  }
-
   public void setM_closestHitFraction(float value) {
     gdxBulletJNI.RayResultCallback_m_closestHitFraction_set(swigCPtr, this, value);
   }
@@ -100,13 +85,8 @@ public class RayResultCallback {
     return gdxBulletJNI.RayResultCallback_hasHit(swigCPtr, this);
   }
 
-  public RayResultCallback() {
-    this(gdxBulletJNI.new_RayResultCallback(), true);
-    gdxBulletJNI.RayResultCallback_director_connect(this, swigCPtr, swigCMemOwn, true);
-  }
-
   public boolean needsCollision(btBroadphaseProxy proxy0) {
-    return (getClass() == RayResultCallback.class) ? gdxBulletJNI.RayResultCallback_needsCollision(swigCPtr, this, btBroadphaseProxy.getCPtr(proxy0), proxy0) : gdxBulletJNI.RayResultCallback_needsCollisionSwigExplicitRayResultCallback(swigCPtr, this, btBroadphaseProxy.getCPtr(proxy0), proxy0);
+    return gdxBulletJNI.RayResultCallback_needsCollision(swigCPtr, this, btBroadphaseProxy.getCPtr(proxy0), proxy0);
   }
 
   public float addSingleResult(LocalRayResult rayResult, boolean normalInWorldSpace) {
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/SWIGTYPE_p_btCollisionObjectWrapper.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/SWIGTYPE_p_btCollisionObjectWrapper.java
new file mode 100755
index 0000000..1ab3cd3
--- /dev/null
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/SWIGTYPE_p_btCollisionObjectWrapper.java
@@ -0,0 +1,26 @@
+/* ----------------------------------------------------------------------------
+ * This file was automatically generated by SWIG (http://www.swig.org).
+ * Version 2.0.9
+ *
+ * Do not make changes to this file unless you know what you are doing--modify
+ * the SWIG interface file instead.
+ * ----------------------------------------------------------------------------- */
+
+package com.badlogic.gdx.physics.bullet;
+
+public class SWIGTYPE_p_btCollisionObjectWrapper {
+  private long swigCPtr;
+
+  protected SWIGTYPE_p_btCollisionObjectWrapper(long cPtr, boolean futureUse) {
+    swigCPtr = cPtr;
+  }
+
+  protected SWIGTYPE_p_btCollisionObjectWrapper() {
+    swigCPtr = 0;
+  }
+
+  public static long getCPtr(SWIGTYPE_p_btCollisionObjectWrapper obj) {
+    return (obj == null) ? 0 : obj.swigCPtr;
+  }
+}
+
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btBox2dBox2dCollisionAlgorithm.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btBox2dBox2dCollisionAlgorithm.java
index e54688a..cb4abf1 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btBox2dBox2dCollisionAlgorithm.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btBox2dBox2dCollisionAlgorithm.java
@@ -44,8 +44,8 @@ public class btBox2dBox2dCollisionAlgorithm extends btActivatingCollisionAlgorit
     this(gdxBulletJNI.new_btBox2dBox2dCollisionAlgorithm__SWIG_0(btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci), true);
   }
 
-  public btBox2dBox2dCollisionAlgorithm(btPersistentManifold mf, btCollisionAlgorithmConstructionInfo ci, btCollisionObjectWrapper body0Wrap, btCollisionObjectWrapper body1Wrap) {
-    this(gdxBulletJNI.new_btBox2dBox2dCollisionAlgorithm__SWIG_1(btPersistentManifold.getCPtr(mf), mf, btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, btCollisionObjectWrapper.getCPtr(body0Wrap), body0Wrap, btCollisionObjectWrapper.getCPtr(body1Wrap), body1Wrap), true);
+  public btBox2dBox2dCollisionAlgorithm(btPersistentManifold mf, btCollisionAlgorithmConstructionInfo ci, SWIGTYPE_p_btCollisionObjectWrapper body0Wrap, SWIGTYPE_p_btCollisionObjectWrapper body1Wrap) {
+    this(gdxBulletJNI.new_btBox2dBox2dCollisionAlgorithm__SWIG_1(btPersistentManifold.getCPtr(mf), mf, btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body0Wrap), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body1Wrap)), true);
   }
 
 }
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btBoxBoxCollisionAlgorithm.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btBoxBoxCollisionAlgorithm.java
index c96239b..447f265 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btBoxBoxCollisionAlgorithm.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btBoxBoxCollisionAlgorithm.java
@@ -44,8 +44,8 @@ public class btBoxBoxCollisionAlgorithm extends btActivatingCollisionAlgorithm {
     this(gdxBulletJNI.new_btBoxBoxCollisionAlgorithm__SWIG_0(btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci), true);
   }
 
-  public btBoxBoxCollisionAlgorithm(btPersistentManifold mf, btCollisionAlgorithmConstructionInfo ci, btCollisionObjectWrapper body0Wrap, btCollisionObjectWrapper body1Wrap) {
-    this(gdxBulletJNI.new_btBoxBoxCollisionAlgorithm__SWIG_1(btPersistentManifold.getCPtr(mf), mf, btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, btCollisionObjectWrapper.getCPtr(body0Wrap), body0Wrap, btCollisionObjectWrapper.getCPtr(body1Wrap), body1Wrap), true);
+  public btBoxBoxCollisionAlgorithm(btPersistentManifold mf, btCollisionAlgorithmConstructionInfo ci, SWIGTYPE_p_btCollisionObjectWrapper body0Wrap, SWIGTYPE_p_btCollisionObjectWrapper body1Wrap) {
+    this(gdxBulletJNI.new_btBoxBoxCollisionAlgorithm__SWIG_1(btPersistentManifold.getCPtr(mf), mf, btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body0Wrap), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body1Wrap)), true);
   }
 
 }
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btBvhTriangleMeshShape.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btBvhTriangleMeshShape.java
index 148b824..a33f1bd 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btBvhTriangleMeshShape.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btBvhTriangleMeshShape.java
@@ -42,7 +42,7 @@ public class btBvhTriangleMeshShape extends btTriangleMeshShape {
   }
 
 
-	protected btStridingMeshInterface meshInterface = null;
+	btStridingMeshInterface meshInterface = null;
 	
 	/** @param managed If true this btBvhTriangleMeshShape will keep a reference to the {@link btStridingMeshInterface}
 	 * and deletes it when this btBvhTriangleMeshShape gets deleted. */
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCollisionAlgorithm.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCollisionAlgorithm.java
index 2a1b032..95f4cd5 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCollisionAlgorithm.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCollisionAlgorithm.java
@@ -40,8 +40,8 @@ public class btCollisionAlgorithm {
     }
   }
 
-  public void processCollision(btCollisionObjectWrapper body0Wrap, btCollisionObjectWrapper body1Wrap, btDispatcherInfo dispatchInfo, btManifoldResult resultOut) {
-    gdxBulletJNI.btCollisionAlgorithm_processCollision(swigCPtr, this, btCollisionObjectWrapper.getCPtr(body0Wrap), body0Wrap, btCollisionObjectWrapper.getCPtr(body1Wrap), body1Wrap, btDispatcherInfo.getCPtr(dispatchInfo), dispatchInfo, btManifoldResult.getCPtr(resultOut), resultOut);
+  public void processCollision(SWIGTYPE_p_btCollisionObjectWrapper body0Wrap, SWIGTYPE_p_btCollisionObjectWrapper body1Wrap, btDispatcherInfo dispatchInfo, btManifoldResult resultOut) {
+    gdxBulletJNI.btCollisionAlgorithm_processCollision(swigCPtr, this, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body0Wrap), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body1Wrap), btDispatcherInfo.getCPtr(dispatchInfo), dispatchInfo, btManifoldResult.getCPtr(resultOut), resultOut);
   }
 
   public float calculateTimeOfImpact(btCollisionObject body0, btCollisionObject body1, btDispatcherInfo dispatchInfo, btManifoldResult resultOut) {
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCollisionAlgorithmCreateFunc.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCollisionAlgorithmCreateFunc.java
index 2679a06..0ffe9a9 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCollisionAlgorithmCreateFunc.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCollisionAlgorithmCreateFunc.java
@@ -52,8 +52,8 @@ public class btCollisionAlgorithmCreateFunc {
     this(gdxBulletJNI.new_btCollisionAlgorithmCreateFunc(), true);
   }
 
-  public btCollisionAlgorithm CreateCollisionAlgorithm(btCollisionAlgorithmConstructionInfo arg0, btCollisionObjectWrapper body0Wrap, btCollisionObjectWrapper body1Wrap) {
-    long cPtr = gdxBulletJNI.btCollisionAlgorithmCreateFunc_CreateCollisionAlgorithm(swigCPtr, this, btCollisionAlgorithmConstructionInfo.getCPtr(arg0), arg0, btCollisionObjectWrapper.getCPtr(body0Wrap), body0Wrap, btCollisionObjectWrapper.getCPtr(body1Wrap), body1Wrap);
+  public btCollisionAlgorithm CreateCollisionAlgorithm(btCollisionAlgorithmConstructionInfo arg0, SWIGTYPE_p_btCollisionObjectWrapper body0Wrap, SWIGTYPE_p_btCollisionObjectWrapper body1Wrap) {
+    long cPtr = gdxBulletJNI.btCollisionAlgorithmCreateFunc_CreateCollisionAlgorithm(swigCPtr, this, btCollisionAlgorithmConstructionInfo.getCPtr(arg0), arg0, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body0Wrap), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body1Wrap));
     return (cPtr == 0) ? null : new btCollisionAlgorithm(cPtr, false);
   }
 
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCollisionDispatcher.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCollisionDispatcher.java
index 264ff28..3980592 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCollisionDispatcher.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCollisionDispatcher.java
@@ -61,13 +61,13 @@ public class btCollisionDispatcher extends btDispatcher {
     this(gdxBulletJNI.new_btCollisionDispatcher(btCollisionConfiguration.getCPtr(collisionConfiguration), collisionConfiguration), true);
   }
 
-  public btCollisionAlgorithm findAlgorithm(btCollisionObjectWrapper body0Wrap, btCollisionObjectWrapper body1Wrap, btPersistentManifold sharedManifold) {
-    long cPtr = gdxBulletJNI.btCollisionDispatcher_findAlgorithm__SWIG_0(swigCPtr, this, btCollisionObjectWrapper.getCPtr(body0Wrap), body0Wrap, btCollisionObjectWrapper.getCPtr(body1Wrap), body1Wrap, btPersistentManifold.getCPtr(sharedManifold), sharedManifold);
+  public btCollisionAlgorithm findAlgorithm(SWIGTYPE_p_btCollisionObjectWrapper body0Wrap, SWIGTYPE_p_btCollisionObjectWrapper body1Wrap, btPersistentManifold sharedManifold) {
+    long cPtr = gdxBulletJNI.btCollisionDispatcher_findAlgorithm__SWIG_0(swigCPtr, this, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body0Wrap), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body1Wrap), btPersistentManifold.getCPtr(sharedManifold), sharedManifold);
     return (cPtr == 0) ? null : new btCollisionAlgorithm(cPtr, false);
   }
 
-  public btCollisionAlgorithm findAlgorithm(btCollisionObjectWrapper body0Wrap, btCollisionObjectWrapper body1Wrap) {
-    long cPtr = gdxBulletJNI.btCollisionDispatcher_findAlgorithm__SWIG_1(swigCPtr, this, btCollisionObjectWrapper.getCPtr(body0Wrap), body0Wrap, btCollisionObjectWrapper.getCPtr(body1Wrap), body1Wrap);
+  public btCollisionAlgorithm findAlgorithm(SWIGTYPE_p_btCollisionObjectWrapper body0Wrap, SWIGTYPE_p_btCollisionObjectWrapper body1Wrap) {
+    long cPtr = gdxBulletJNI.btCollisionDispatcher_findAlgorithm__SWIG_1(swigCPtr, this, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body0Wrap), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body1Wrap));
     return (cPtr == 0) ? null : new btCollisionAlgorithm(cPtr, false);
   }
 
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCollisionObject.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCollisionObject.java
index 06ccfe4..c1d0c0b 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCollisionObject.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCollisionObject.java
@@ -13,9 +13,7 @@ import com.badlogic.gdx.math.Quaternion;
 import com.badlogic.gdx.math.Matrix3;
 import com.badlogic.gdx.math.Matrix4;
 
-public class btCollisionObject implements 
-	com.badlogic.gdx.utils.Disposable
- {
+public class btCollisionObject {
 	public final static com.badlogic.gdx.utils.LongMap<btCollisionObject> instances = new com.badlogic.gdx.utils.LongMap<btCollisionObject>();
 	
 	public static btCollisionObject getInstance(final long swigCPtr, boolean owner) {
@@ -28,20 +26,12 @@ public class btCollisionObject implements
 	private long swigCPtr;
 	protected boolean swigCMemOwn;
 	
-	public Object userData;
-	
 	protected btCollisionObject(long cPtr, boolean cMemoryOwn) {
 		swigCMemOwn = cMemoryOwn;
 		swigCPtr = cPtr;
 		instances.put(cPtr, this);
 	}
 	
-	@Override
-	public void dispose() {
-		instances.remove(swigCPtr);
-		delete();
-	}
-	
 	public void takeOwnership() {
 		swigCMemOwn = true;
 	}
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCollisionObjectWrapper.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCollisionObjectWrapper.java
deleted file mode 100644
index 00efa4e..0000000
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCollisionObjectWrapper.java
+++ /dev/null
@@ -1,84 +0,0 @@
-/* ----------------------------------------------------------------------------
- * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 2.0.9
- *
- * Do not make changes to this file unless you know what you are doing--modify
- * the SWIG interface file instead.
- * ----------------------------------------------------------------------------- */
-
-package com.badlogic.gdx.physics.bullet;
-
-import com.badlogic.gdx.math.Vector3;
-import com.badlogic.gdx.math.Quaternion;
-import com.badlogic.gdx.math.Matrix3;
-import com.badlogic.gdx.math.Matrix4;
-
-public class btCollisionObjectWrapper {
-  private long swigCPtr;
-  protected boolean swigCMemOwn;
-
-  protected btCollisionObjectWrapper(long cPtr, boolean cMemoryOwn) {
-    swigCMemOwn = cMemoryOwn;
-    swigCPtr = cPtr;
-  }
-
-  public static long getCPtr(btCollisionObjectWrapper obj) {
-    return (obj == null) ? 0 : obj.swigCPtr;
-  }
-
-  public synchronized void delete() {
-    if (swigCPtr != 0) {
-      if (swigCMemOwn) {
-        swigCMemOwn = false;
-        throw new UnsupportedOperationException("C++ destructor does not have public access");
-      }
-      swigCPtr = 0;
-    }
-  }
-
-  public void setM_parent(btCollisionObjectWrapper value) {
-    gdxBulletJNI.btCollisionObjectWrapper_m_parent_set(swigCPtr, this, btCollisionObjectWrapper.getCPtr(value), value);
-  }
-
-  public btCollisionObjectWrapper getM_parent() {
-    long cPtr = gdxBulletJNI.btCollisionObjectWrapper_m_parent_get(swigCPtr, this);
-    return (cPtr == 0) ? null : new btCollisionObjectWrapper(cPtr, false);
-  }
-
-  public void setM_shape(btCollisionShape value) {
-    gdxBulletJNI.btCollisionObjectWrapper_m_shape_set(swigCPtr, this, btCollisionShape.getCPtr(value), value);
-  }
-
-  public btCollisionShape getM_shape() {
-    long cPtr = gdxBulletJNI.btCollisionObjectWrapper_m_shape_get(swigCPtr, this);
-    return (cPtr == 0) ? null : btCollisionShape.newDerivedObject(cPtr, false);
-  }
-
-  public void setM_collisionObject(btCollisionObject value) {
-    gdxBulletJNI.btCollisionObjectWrapper_m_collisionObject_set(swigCPtr, this, btCollisionObject.getCPtr(value), value);
-  }
-
-  public btCollisionObject getM_collisionObject() {
-	long cPtr = gdxBulletJNI.btCollisionObjectWrapper_m_collisionObject_get(swigCPtr, this);
-	return (cPtr == 0) ? null : btCollisionObject.getInstance(cPtr, false);
-}
-
-  public Matrix4 getM_worldTransform() {
-	return gdxBulletJNI.btCollisionObjectWrapper_m_worldTransform_get(swigCPtr, this);
-}
-
-  public Matrix4 getWorldTransform() {
-	return gdxBulletJNI.btCollisionObjectWrapper_getWorldTransform(swigCPtr, this);
-}
-
-  public btCollisionObject getCollisionObject() {
-	long cPtr = gdxBulletJNI.btCollisionObjectWrapper_getCollisionObject(swigCPtr, this);
-	return (cPtr == 0) ? null : btCollisionObject.getInstance(cPtr, false);
-}
-
-  public btCollisionShape getCollisionShape() {
-    long cPtr = gdxBulletJNI.btCollisionObjectWrapper_getCollisionShape(swigCPtr, this);
-    return (cPtr == 0) ? null : btCollisionShape.newDerivedObject(cPtr, false);
-  }
-
-}
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCollisionWorld.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCollisionWorld.java
index 8bb0436..e80b22f 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCollisionWorld.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCollisionWorld.java
@@ -116,16 +116,16 @@ public class btCollisionWorld {
     gdxBulletJNI.btCollisionWorld_rayTestSingle(rayFromTrans, rayToTrans, btCollisionObject.getCPtr(collisionObject), collisionObject, btCollisionShape.getCPtr(collisionShape), collisionShape, colObjWorldTransform, RayResultCallback.getCPtr(resultCallback), resultCallback);
   }
 
-  public static void rayTestSingleInternal(Matrix4 rayFromTrans, Matrix4 rayToTrans, btCollisionObjectWrapper collisionObjectWrap, RayResultCallback resultCallback) {
-    gdxBulletJNI.btCollisionWorld_rayTestSingleInternal(rayFromTrans, rayToTrans, btCollisionObjectWrapper.getCPtr(collisionObjectWrap), collisionObjectWrap, RayResultCallback.getCPtr(resultCallback), resultCallback);
+  public static void rayTestSingleInternal(Matrix4 rayFromTrans, Matrix4 rayToTrans, SWIGTYPE_p_btCollisionObjectWrapper collisionObjectWrap, RayResultCallback resultCallback) {
+    gdxBulletJNI.btCollisionWorld_rayTestSingleInternal(rayFromTrans, rayToTrans, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(collisionObjectWrap), RayResultCallback.getCPtr(resultCallback), resultCallback);
   }
 
   public static void objectQuerySingle(btConvexShape castShape, Matrix4 rayFromTrans, Matrix4 rayToTrans, btCollisionObject collisionObject, btCollisionShape collisionShape, Matrix4 colObjWorldTransform, ConvexResultCallback resultCallback, float allowedPenetration) {
     gdxBulletJNI.btCollisionWorld_objectQuerySingle(btConvexShape.getCPtr(castShape), castShape, rayFromTrans, rayToTrans, btCollisionObject.getCPtr(collisionObject), collisionObject, btCollisionShape.getCPtr(collisionShape), collisionShape, colObjWorldTransform, ConvexResultCallback.getCPtr(resultCallback), resultCallback, allowedPenetration);
   }
 
-  public static void objectQuerySingleInternal(btConvexShape castShape, Matrix4 convexFromTrans, Matrix4 convexToTrans, btCollisionObjectWrapper colObjWrap, ConvexResultCallback resultCallback, float allowedPenetration) {
-    gdxBulletJNI.btCollisionWorld_objectQuerySingleInternal(btConvexShape.getCPtr(castShape), castShape, convexFromTrans, convexToTrans, btCollisionObjectWrapper.getCPtr(colObjWrap), colObjWrap, ConvexResultCallback.getCPtr(resultCallback), resultCallback, allowedPenetration);
+  public static void objectQuerySingleInternal(btConvexShape castShape, Matrix4 convexFromTrans, Matrix4 convexToTrans, SWIGTYPE_p_btCollisionObjectWrapper colObjWrap, ConvexResultCallback resultCallback, float allowedPenetration) {
+    gdxBulletJNI.btCollisionWorld_objectQuerySingleInternal(btConvexShape.getCPtr(castShape), castShape, convexFromTrans, convexToTrans, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(colObjWrap), ConvexResultCallback.getCPtr(resultCallback), resultCallback, allowedPenetration);
   }
 
   public void addCollisionObject(btCollisionObject collisionObject, short collisionFilterGroup, short collisionFilterMask) {
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCompoundCollisionAlgorithm.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCompoundCollisionAlgorithm.java
index e9b358f..a78887e 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCompoundCollisionAlgorithm.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCompoundCollisionAlgorithm.java
@@ -40,8 +40,8 @@ public class btCompoundCollisionAlgorithm extends btActivatingCollisionAlgorithm
     super.delete();
   }
 
-  public btCompoundCollisionAlgorithm(btCollisionAlgorithmConstructionInfo ci, btCollisionObjectWrapper body0Wrap, btCollisionObjectWrapper body1Wrap, boolean isSwapped) {
-    this(gdxBulletJNI.new_btCompoundCollisionAlgorithm(btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, btCollisionObjectWrapper.getCPtr(body0Wrap), body0Wrap, btCollisionObjectWrapper.getCPtr(body1Wrap), body1Wrap, isSwapped), true);
+  public btCompoundCollisionAlgorithm(btCollisionAlgorithmConstructionInfo ci, SWIGTYPE_p_btCollisionObjectWrapper body0Wrap, SWIGTYPE_p_btCollisionObjectWrapper body1Wrap, boolean isSwapped) {
+    this(gdxBulletJNI.new_btCompoundCollisionAlgorithm(btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body0Wrap), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body1Wrap), isSwapped), true);
   }
 
 }
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCompoundShape.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCompoundShape.java
index 9a5e9b6..f09e2dd 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCompoundShape.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btCompoundShape.java
@@ -8,7 +8,6 @@
 
 package com.badlogic.gdx.physics.bullet;
 
-import com.badlogic.gdx.utils.Array;
 import com.badlogic.gdx.math.Vector3;
 import com.badlogic.gdx.math.Quaternion;
 import com.badlogic.gdx.math.Matrix3;
@@ -30,7 +29,7 @@ public class btCompoundShape extends btCollisionShape {
     delete();
   }
 
-  public synchronized void delete()  {
+  public synchronized void delete() {
     if (swigCPtr != 0) {
       if (swigCMemOwn) {
         swigCMemOwn = false;
@@ -39,23 +38,7 @@ public class btCompoundShape extends btCollisionShape {
       swigCPtr = 0;
     }
     super.delete();
-	dispose();
-  }
-
-
-	protected Array<btCollisionShape> children = new Array<btCollisionShape>();
-	
-	public void addChildShape(Matrix4 localTransform, btCollisionShape shape, boolean managed) {
-		addChildShape(localTransform, shape);
-		if (managed)
-			children.add(shape);
-	}
-	
-	protected void dispose() {
-		for (int i = 0; i < children.size; i++)
-			children.get(i).delete();
-		children.clear();
-	}
+  }
 
   public btCompoundShape(boolean enableDynamicAabbTree) {
     this(gdxBulletJNI.new_btCompoundShape__SWIG_0(enableDynamicAabbTree), true);
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btConvex2dConvex2dAlgorithm.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btConvex2dConvex2dAlgorithm.java
index 50428ce..140cba0 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btConvex2dConvex2dAlgorithm.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btConvex2dConvex2dAlgorithm.java
@@ -40,8 +40,8 @@ public class btConvex2dConvex2dAlgorithm extends btActivatingCollisionAlgorithm
     super.delete();
   }
 
-  public btConvex2dConvex2dAlgorithm(btPersistentManifold mf, btCollisionAlgorithmConstructionInfo ci, btCollisionObjectWrapper body0Wrap, btCollisionObjectWrapper body1Wrap, SWIGTYPE_p_btSimplexSolverInterface simplexSolver, btConvexPenetrationDepthSolver pdSolver, int numPerturbationIterations, int minimumPointsPerturbationThreshold) {
-    this(gdxBulletJNI.new_btConvex2dConvex2dAlgorithm(btPersistentManifold.getCPtr(mf), mf, btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, btCollisionObjectWrapper.getCPtr(body0Wrap), body0Wrap, btCollisionObjectWrapper.getCPtr(body1Wrap), body1Wrap, SWIGTYPE_p_btSimplexSolverInterface.getCPtr(simplexSolver), btConvexPenetrationDepthSolver.getCPtr(pdSolver), pdSolver, numPerturbationIterations, minimumPointsPerturbationThreshold), true);
+  public btConvex2dConvex2dAlgorithm(btPersistentManifold mf, btCollisionAlgorithmConstructionInfo ci, SWIGTYPE_p_btCollisionObjectWrapper body0Wrap, SWIGTYPE_p_btCollisionObjectWrapper body1Wrap, SWIGTYPE_p_btSimplexSolverInterface simplexSolver, btConvexPenetrationDepthSolver pdSolver, int numPerturbationIterations, int minimumPointsPerturbationThreshold) {
+    this(gdxBulletJNI.new_btConvex2dConvex2dAlgorithm(btPersistentManifold.getCPtr(mf), mf, btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body0Wrap), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body1Wrap), SWIGTYPE_p_btSimplexSolverInterface.getCPtr(simplexSolver), btConvexPenetrationDepthSolver.getCPtr(pdSolver), pdSolver, numPerturbationIterations, minimumPointsPerturbationThreshold), true);
   }
 
   public void setLowLevelOfDetail(boolean useLowLevel) {
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btConvexConcaveCollisionAlgorithm.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btConvexConcaveCollisionAlgorithm.java
index 5287f5e..3cfa2b4 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btConvexConcaveCollisionAlgorithm.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btConvexConcaveCollisionAlgorithm.java
@@ -40,8 +40,8 @@ public class btConvexConcaveCollisionAlgorithm extends btActivatingCollisionAlgo
     super.delete();
   }
 
-  public btConvexConcaveCollisionAlgorithm(btCollisionAlgorithmConstructionInfo ci, btCollisionObjectWrapper body0Wrap, btCollisionObjectWrapper body1Wrap, boolean isSwapped) {
-    this(gdxBulletJNI.new_btConvexConcaveCollisionAlgorithm(btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, btCollisionObjectWrapper.getCPtr(body0Wrap), body0Wrap, btCollisionObjectWrapper.getCPtr(body1Wrap), body1Wrap, isSwapped), true);
+  public btConvexConcaveCollisionAlgorithm(btCollisionAlgorithmConstructionInfo ci, SWIGTYPE_p_btCollisionObjectWrapper body0Wrap, SWIGTYPE_p_btCollisionObjectWrapper body1Wrap, boolean isSwapped) {
+    this(gdxBulletJNI.new_btConvexConcaveCollisionAlgorithm(btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body0Wrap), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body1Wrap), isSwapped), true);
   }
 
   public void clearCache() {
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btConvexConvexAlgorithm.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btConvexConvexAlgorithm.java
index b898d7d..e4e3cc9 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btConvexConvexAlgorithm.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btConvexConvexAlgorithm.java
@@ -40,8 +40,8 @@ public class btConvexConvexAlgorithm extends btActivatingCollisionAlgorithm {
     super.delete();
   }
 
-  public btConvexConvexAlgorithm(btPersistentManifold mf, btCollisionAlgorithmConstructionInfo ci, btCollisionObjectWrapper body0Wrap, btCollisionObjectWrapper body1Wrap, SWIGTYPE_p_btSimplexSolverInterface simplexSolver, btConvexPenetrationDepthSolver pdSolver, int numPerturbationIterations, int minimumPointsPerturbationThreshold) {
-    this(gdxBulletJNI.new_btConvexConvexAlgorithm(btPersistentManifold.getCPtr(mf), mf, btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, btCollisionObjectWrapper.getCPtr(body0Wrap), body0Wrap, btCollisionObjectWrapper.getCPtr(body1Wrap), body1Wrap, SWIGTYPE_p_btSimplexSolverInterface.getCPtr(simplexSolver), btConvexPenetrationDepthSolver.getCPtr(pdSolver), pdSolver, numPerturbationIterations, minimumPointsPerturbationThreshold), true);
+  public btConvexConvexAlgorithm(btPersistentManifold mf, btCollisionAlgorithmConstructionInfo ci, SWIGTYPE_p_btCollisionObjectWrapper body0Wrap, SWIGTYPE_p_btCollisionObjectWrapper body1Wrap, SWIGTYPE_p_btSimplexSolverInterface simplexSolver, btConvexPenetrationDepthSolver pdSolver, int numPerturbationIterations, int minimumPointsPerturbationThreshold) {
+    this(gdxBulletJNI.new_btConvexConvexAlgorithm(btPersistentManifold.getCPtr(mf), mf, btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body0Wrap), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body1Wrap), SWIGTYPE_p_btSimplexSolverInterface.getCPtr(simplexSolver), btConvexPenetrationDepthSolver.getCPtr(pdSolver), pdSolver, numPerturbationIterations, minimumPointsPerturbationThreshold), true);
   }
 
   public void setLowLevelOfDetail(boolean useLowLevel) {
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btConvexPlaneCollisionAlgorithm.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btConvexPlaneCollisionAlgorithm.java
index 9b89e73..ae27832 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btConvexPlaneCollisionAlgorithm.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btConvexPlaneCollisionAlgorithm.java
@@ -40,12 +40,12 @@ public class btConvexPlaneCollisionAlgorithm extends btCollisionAlgorithm {
     super.delete();
   }
 
-  public btConvexPlaneCollisionAlgorithm(btPersistentManifold mf, btCollisionAlgorithmConstructionInfo ci, btCollisionObjectWrapper body0Wrap, btCollisionObjectWrapper body1Wrap, boolean isSwapped, int numPerturbationIterations, int minimumPointsPerturbationThreshold) {
-    this(gdxBulletJNI.new_btConvexPlaneCollisionAlgorithm(btPersistentManifold.getCPtr(mf), mf, btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, btCollisionObjectWrapper.getCPtr(body0Wrap), body0Wrap, btCollisionObjectWrapper.getCPtr(body1Wrap), body1Wrap, isSwapped, numPerturbationIterations, minimumPointsPerturbationThreshold), true);
+  public btConvexPlaneCollisionAlgorithm(btPersistentManifold mf, btCollisionAlgorithmConstructionInfo ci, SWIGTYPE_p_btCollisionObjectWrapper body0Wrap, SWIGTYPE_p_btCollisionObjectWrapper body1Wrap, boolean isSwapped, int numPerturbationIterations, int minimumPointsPerturbationThreshold) {
+    this(gdxBulletJNI.new_btConvexPlaneCollisionAlgorithm(btPersistentManifold.getCPtr(mf), mf, btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body0Wrap), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body1Wrap), isSwapped, numPerturbationIterations, minimumPointsPerturbationThreshold), true);
   }
 
-  public void collideSingleContact(Quaternion perturbeRot, btCollisionObjectWrapper body0Wrap, btCollisionObjectWrapper body1Wrap, btDispatcherInfo dispatchInfo, btManifoldResult resultOut) {
-    gdxBulletJNI.btConvexPlaneCollisionAlgorithm_collideSingleContact(swigCPtr, this, perturbeRot, btCollisionObjectWrapper.getCPtr(body0Wrap), body0Wrap, btCollisionObjectWrapper.getCPtr(body1Wrap), body1Wrap, btDispatcherInfo.getCPtr(dispatchInfo), dispatchInfo, btManifoldResult.getCPtr(resultOut), resultOut);
+  public void collideSingleContact(Quaternion perturbeRot, SWIGTYPE_p_btCollisionObjectWrapper body0Wrap, SWIGTYPE_p_btCollisionObjectWrapper body1Wrap, btDispatcherInfo dispatchInfo, btManifoldResult resultOut) {
+    gdxBulletJNI.btConvexPlaneCollisionAlgorithm_collideSingleContact(swigCPtr, this, perturbeRot, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body0Wrap), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body1Wrap), btDispatcherInfo.getCPtr(dispatchInfo), dispatchInfo, btManifoldResult.getCPtr(resultOut), resultOut);
   }
 
 }
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btConvexTriangleCallback.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btConvexTriangleCallback.java
index fc60404..9fe9e98 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btConvexTriangleCallback.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btConvexTriangleCallback.java
@@ -57,12 +57,12 @@ public class btConvexTriangleCallback extends btTriangleCallback {
     return (cPtr == 0) ? null : new btPersistentManifold(cPtr, false);
   }
 
-  public btConvexTriangleCallback(btDispatcher dispatcher, btCollisionObjectWrapper body0Wrap, btCollisionObjectWrapper body1Wrap, boolean isSwapped) {
-    this(gdxBulletJNI.new_btConvexTriangleCallback(btDispatcher.getCPtr(dispatcher), dispatcher, btCollisionObjectWrapper.getCPtr(body0Wrap), body0Wrap, btCollisionObjectWrapper.getCPtr(body1Wrap), body1Wrap, isSwapped), true);
+  public btConvexTriangleCallback(btDispatcher dispatcher, SWIGTYPE_p_btCollisionObjectWrapper body0Wrap, SWIGTYPE_p_btCollisionObjectWrapper body1Wrap, boolean isSwapped) {
+    this(gdxBulletJNI.new_btConvexTriangleCallback(btDispatcher.getCPtr(dispatcher), dispatcher, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body0Wrap), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body1Wrap), isSwapped), true);
   }
 
-  public void setTimeStepAndCounters(float collisionMarginTriangle, btDispatcherInfo dispatchInfo, btCollisionObjectWrapper convexBodyWrap, btCollisionObjectWrapper triBodyWrap, btManifoldResult resultOut) {
-    gdxBulletJNI.btConvexTriangleCallback_setTimeStepAndCounters(swigCPtr, this, collisionMarginTriangle, btDispatcherInfo.getCPtr(dispatchInfo), dispatchInfo, btCollisionObjectWrapper.getCPtr(convexBodyWrap), convexBodyWrap, btCollisionObjectWrapper.getCPtr(triBodyWrap), triBodyWrap, btManifoldResult.getCPtr(resultOut), resultOut);
+  public void setTimeStepAndCounters(float collisionMarginTriangle, btDispatcherInfo dispatchInfo, SWIGTYPE_p_btCollisionObjectWrapper convexBodyWrap, SWIGTYPE_p_btCollisionObjectWrapper triBodyWrap, btManifoldResult resultOut) {
+    gdxBulletJNI.btConvexTriangleCallback_setTimeStepAndCounters(swigCPtr, this, collisionMarginTriangle, btDispatcherInfo.getCPtr(dispatchInfo), dispatchInfo, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(convexBodyWrap), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(triBodyWrap), btManifoldResult.getCPtr(resultOut), resultOut);
   }
 
   public void clearWrapperData() {
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btDefaultSoftBodySolver.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btDefaultSoftBodySolver.java
index 99e962d..6df5481 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btDefaultSoftBodySolver.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btDefaultSoftBodySolver.java
@@ -64,8 +64,8 @@ public class btDefaultSoftBodySolver extends btSoftBodySolver {
     gdxBulletJNI.btDefaultSoftBodySolver_copySoftBodyToVertexBuffer(swigCPtr, this, btSoftBody.getCPtr(softBody), softBody, btVertexBufferDescriptor.getCPtr(vertexBuffer), vertexBuffer);
   }
 
-  public void processCollision(btSoftBody arg0, btCollisionObjectWrapper arg1) {
-    gdxBulletJNI.btDefaultSoftBodySolver_processCollision__SWIG_0(swigCPtr, this, btSoftBody.getCPtr(arg0), arg0, btCollisionObjectWrapper.getCPtr(arg1), arg1);
+  public void processCollision(btSoftBody arg0, SWIGTYPE_p_btCollisionObjectWrapper arg1) {
+    gdxBulletJNI.btDefaultSoftBodySolver_processCollision__SWIG_0(swigCPtr, this, btSoftBody.getCPtr(arg0), arg0, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(arg1));
   }
 
   public void processCollision(btSoftBody arg0, btSoftBody arg1) {
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btDispatcher.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btDispatcher.java
index 999329d..5d886d2 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btDispatcher.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btDispatcher.java
@@ -40,13 +40,13 @@ public class btDispatcher {
     }
   }
 
-  public btCollisionAlgorithm findAlgorithm(btCollisionObjectWrapper body0Wrap, btCollisionObjectWrapper body1Wrap, btPersistentManifold sharedManifold) {
-    long cPtr = gdxBulletJNI.btDispatcher_findAlgorithm__SWIG_0(swigCPtr, this, btCollisionObjectWrapper.getCPtr(body0Wrap), body0Wrap, btCollisionObjectWrapper.getCPtr(body1Wrap), body1Wrap, btPersistentManifold.getCPtr(sharedManifold), sharedManifold);
+  public btCollisionAlgorithm findAlgorithm(SWIGTYPE_p_btCollisionObjectWrapper body0Wrap, SWIGTYPE_p_btCollisionObjectWrapper body1Wrap, btPersistentManifold sharedManifold) {
+    long cPtr = gdxBulletJNI.btDispatcher_findAlgorithm__SWIG_0(swigCPtr, this, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body0Wrap), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body1Wrap), btPersistentManifold.getCPtr(sharedManifold), sharedManifold);
     return (cPtr == 0) ? null : new btCollisionAlgorithm(cPtr, false);
   }
 
-  public btCollisionAlgorithm findAlgorithm(btCollisionObjectWrapper body0Wrap, btCollisionObjectWrapper body1Wrap) {
-    long cPtr = gdxBulletJNI.btDispatcher_findAlgorithm__SWIG_1(swigCPtr, this, btCollisionObjectWrapper.getCPtr(body0Wrap), body0Wrap, btCollisionObjectWrapper.getCPtr(body1Wrap), body1Wrap);
+  public btCollisionAlgorithm findAlgorithm(SWIGTYPE_p_btCollisionObjectWrapper body0Wrap, SWIGTYPE_p_btCollisionObjectWrapper body1Wrap) {
+    long cPtr = gdxBulletJNI.btDispatcher_findAlgorithm__SWIG_1(swigCPtr, this, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body0Wrap), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body1Wrap));
     return (cPtr == 0) ? null : new btCollisionAlgorithm(cPtr, false);
   }
 
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btManifoldResult.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btManifoldResult.java
index 5df209a..74e4f89 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btManifoldResult.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btManifoldResult.java
@@ -44,8 +44,8 @@ public class btManifoldResult {
     this(gdxBulletJNI.new_btManifoldResult__SWIG_0(), true);
   }
 
-  public btManifoldResult(btCollisionObjectWrapper body0Wrap, btCollisionObjectWrapper body1Wrap) {
-    this(gdxBulletJNI.new_btManifoldResult__SWIG_1(btCollisionObjectWrapper.getCPtr(body0Wrap), body0Wrap, btCollisionObjectWrapper.getCPtr(body1Wrap), body1Wrap), true);
+  public btManifoldResult(SWIGTYPE_p_btCollisionObjectWrapper body0Wrap, SWIGTYPE_p_btCollisionObjectWrapper body1Wrap) {
+    this(gdxBulletJNI.new_btManifoldResult__SWIG_1(SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body0Wrap), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body1Wrap)), true);
   }
 
   public void setPersistentManifold(btPersistentManifold manifoldPtr) {
@@ -73,22 +73,22 @@ public class btManifoldResult {
     gdxBulletJNI.btManifoldResult_refreshContactPoints(swigCPtr, this);
   }
 
-  public btCollisionObjectWrapper getBody0Wrap() {
+  public SWIGTYPE_p_btCollisionObjectWrapper getBody0Wrap() {
     long cPtr = gdxBulletJNI.btManifoldResult_getBody0Wrap(swigCPtr, this);
-    return (cPtr == 0) ? null : new btCollisionObjectWrapper(cPtr, false);
+    return (cPtr == 0) ? null : new SWIGTYPE_p_btCollisionObjectWrapper(cPtr, false);
   }
 
-  public btCollisionObjectWrapper getBody1Wrap() {
+  public SWIGTYPE_p_btCollisionObjectWrapper getBody1Wrap() {
     long cPtr = gdxBulletJNI.btManifoldResult_getBody1Wrap(swigCPtr, this);
-    return (cPtr == 0) ? null : new btCollisionObjectWrapper(cPtr, false);
+    return (cPtr == 0) ? null : new SWIGTYPE_p_btCollisionObjectWrapper(cPtr, false);
   }
 
-  public void setBody0Wrap(btCollisionObjectWrapper obj0Wrap) {
-    gdxBulletJNI.btManifoldResult_setBody0Wrap(swigCPtr, this, btCollisionObjectWrapper.getCPtr(obj0Wrap), obj0Wrap);
+  public void setBody0Wrap(SWIGTYPE_p_btCollisionObjectWrapper obj0Wrap) {
+    gdxBulletJNI.btManifoldResult_setBody0Wrap(swigCPtr, this, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(obj0Wrap));
   }
 
-  public void setBody1Wrap(btCollisionObjectWrapper obj1Wrap) {
-    gdxBulletJNI.btManifoldResult_setBody1Wrap(swigCPtr, this, btCollisionObjectWrapper.getCPtr(obj1Wrap), obj1Wrap);
+  public void setBody1Wrap(SWIGTYPE_p_btCollisionObjectWrapper obj1Wrap) {
+    gdxBulletJNI.btManifoldResult_setBody1Wrap(swigCPtr, this, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(obj1Wrap));
   }
 
   public btCollisionObject getBody0Internal() {
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSoftBody.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSoftBody.java
index 0171613..b22295b 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSoftBody.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSoftBody.java
@@ -693,8 +693,8 @@ public class btSoftBody extends btCollisionObject {
     gdxBulletJNI.btSoftBody_integrateMotion(swigCPtr, this);
   }
 
-  public void defaultCollisionHandler(btCollisionObjectWrapper pcoWrap) {
-    gdxBulletJNI.btSoftBody_defaultCollisionHandler__SWIG_0(swigCPtr, this, btCollisionObjectWrapper.getCPtr(pcoWrap), pcoWrap);
+  public void defaultCollisionHandler(SWIGTYPE_p_btCollisionObjectWrapper pcoWrap) {
+    gdxBulletJNI.btSoftBody_defaultCollisionHandler__SWIG_0(swigCPtr, this, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(pcoWrap));
   }
 
   public void defaultCollisionHandler(btSoftBody psb) {
@@ -754,8 +754,8 @@ public class btSoftBody extends btCollisionObject {
 	return gdxBulletJNI.btSoftBody_evaluateCom(swigCPtr, this);
 }
 
-  public boolean checkContact(btCollisionObjectWrapper colObjWrap, Vector3 x, float margin, sCti cti) {
-    return gdxBulletJNI.btSoftBody_checkContact(swigCPtr, this, btCollisionObjectWrapper.getCPtr(colObjWrap), colObjWrap, x, margin, sCti.getCPtr(cti), cti);
+  public boolean checkContact(SWIGTYPE_p_btCollisionObjectWrapper colObjWrap, Vector3 x, float margin, sCti cti) {
+    return gdxBulletJNI.btSoftBody_checkContact(swigCPtr, this, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(colObjWrap), x, margin, sCti.getCPtr(cti), cti);
   }
 
   public void updateNormals() {
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSoftBodyConcaveCollisionAlgorithm.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSoftBodyConcaveCollisionAlgorithm.java
index 9cf41a8..833b862 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSoftBodyConcaveCollisionAlgorithm.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSoftBodyConcaveCollisionAlgorithm.java
@@ -40,8 +40,8 @@ public class btSoftBodyConcaveCollisionAlgorithm extends btCollisionAlgorithm {
     super.delete();
   }
 
-  public btSoftBodyConcaveCollisionAlgorithm(btCollisionAlgorithmConstructionInfo ci, btCollisionObjectWrapper body0Wrap, btCollisionObjectWrapper body1Wrap, boolean isSwapped) {
-    this(gdxBulletJNI.new_btSoftBodyConcaveCollisionAlgorithm(btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, btCollisionObjectWrapper.getCPtr(body0Wrap), body0Wrap, btCollisionObjectWrapper.getCPtr(body1Wrap), body1Wrap, isSwapped), true);
+  public btSoftBodyConcaveCollisionAlgorithm(btCollisionAlgorithmConstructionInfo ci, SWIGTYPE_p_btCollisionObjectWrapper body0Wrap, SWIGTYPE_p_btCollisionObjectWrapper body1Wrap, boolean isSwapped) {
+    this(gdxBulletJNI.new_btSoftBodyConcaveCollisionAlgorithm(btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body0Wrap), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body1Wrap), isSwapped), true);
   }
 
   public void clearCache() {
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSoftBodySolver.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSoftBodySolver.java
index a8d2a68..a0232e9 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSoftBodySolver.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSoftBodySolver.java
@@ -76,8 +76,8 @@ public class btSoftBodySolver {
     gdxBulletJNI.btSoftBodySolver_updateSoftBodies(swigCPtr, this);
   }
 
-  public void processCollision(btSoftBody arg0, btCollisionObjectWrapper arg1) {
-    gdxBulletJNI.btSoftBodySolver_processCollision__SWIG_0(swigCPtr, this, btSoftBody.getCPtr(arg0), arg0, btCollisionObjectWrapper.getCPtr(arg1), arg1);
+  public void processCollision(btSoftBody arg0, SWIGTYPE_p_btCollisionObjectWrapper arg1) {
+    gdxBulletJNI.btSoftBodySolver_processCollision__SWIG_0(swigCPtr, this, btSoftBody.getCPtr(arg0), arg0, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(arg1));
   }
 
   public void processCollision(btSoftBody arg0, btSoftBody arg1) {
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSoftBodyTriangleCallback.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSoftBodyTriangleCallback.java
index ec19d02..82cc836 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSoftBodyTriangleCallback.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSoftBodyTriangleCallback.java
@@ -48,12 +48,12 @@ public class btSoftBodyTriangleCallback extends btTriangleCallback {
     return gdxBulletJNI.btSoftBodyTriangleCallback_m_triangleCount_get(swigCPtr, this);
   }
 
-  public btSoftBodyTriangleCallback(btDispatcher dispatcher, btCollisionObjectWrapper body0Wrap, btCollisionObjectWrapper body1Wrap, boolean isSwapped) {
-    this(gdxBulletJNI.new_btSoftBodyTriangleCallback(btDispatcher.getCPtr(dispatcher), dispatcher, btCollisionObjectWrapper.getCPtr(body0Wrap), body0Wrap, btCollisionObjectWrapper.getCPtr(body1Wrap), body1Wrap, isSwapped), true);
+  public btSoftBodyTriangleCallback(btDispatcher dispatcher, SWIGTYPE_p_btCollisionObjectWrapper body0Wrap, SWIGTYPE_p_btCollisionObjectWrapper body1Wrap, boolean isSwapped) {
+    this(gdxBulletJNI.new_btSoftBodyTriangleCallback(btDispatcher.getCPtr(dispatcher), dispatcher, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body0Wrap), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body1Wrap), isSwapped), true);
   }
 
-  public void setTimeStepAndCounters(float collisionMarginTriangle, btCollisionObjectWrapper triObjWrap, btDispatcherInfo dispatchInfo, btManifoldResult resultOut) {
-    gdxBulletJNI.btSoftBodyTriangleCallback_setTimeStepAndCounters(swigCPtr, this, collisionMarginTriangle, btCollisionObjectWrapper.getCPtr(triObjWrap), triObjWrap, btDispatcherInfo.getCPtr(dispatchInfo), dispatchInfo, btManifoldResult.getCPtr(resultOut), resultOut);
+  public void setTimeStepAndCounters(float collisionMarginTriangle, SWIGTYPE_p_btCollisionObjectWrapper triObjWrap, btDispatcherInfo dispatchInfo, btManifoldResult resultOut) {
+    gdxBulletJNI.btSoftBodyTriangleCallback_setTimeStepAndCounters(swigCPtr, this, collisionMarginTriangle, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(triObjWrap), btDispatcherInfo.getCPtr(dispatchInfo), dispatchInfo, btManifoldResult.getCPtr(resultOut), resultOut);
   }
 
   public void clearCache() {
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSoftRigidCollisionAlgorithm.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSoftRigidCollisionAlgorithm.java
index 4e2a29d..592954c 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSoftRigidCollisionAlgorithm.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSoftRigidCollisionAlgorithm.java
@@ -40,8 +40,8 @@ public class btSoftRigidCollisionAlgorithm extends btCollisionAlgorithm {
     super.delete();
   }
 
-  public btSoftRigidCollisionAlgorithm(btPersistentManifold mf, btCollisionAlgorithmConstructionInfo ci, btCollisionObjectWrapper col0, btCollisionObjectWrapper col1Wrap, boolean isSwapped) {
-    this(gdxBulletJNI.new_btSoftRigidCollisionAlgorithm(btPersistentManifold.getCPtr(mf), mf, btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, btCollisionObjectWrapper.getCPtr(col0), col0, btCollisionObjectWrapper.getCPtr(col1Wrap), col1Wrap, isSwapped), true);
+  public btSoftRigidCollisionAlgorithm(btPersistentManifold mf, btCollisionAlgorithmConstructionInfo ci, SWIGTYPE_p_btCollisionObjectWrapper col0, SWIGTYPE_p_btCollisionObjectWrapper col1Wrap, boolean isSwapped) {
+    this(gdxBulletJNI.new_btSoftRigidCollisionAlgorithm(btPersistentManifold.getCPtr(mf), mf, btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(col0), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(col1Wrap), isSwapped), true);
   }
 
 }
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSoftSoftCollisionAlgorithm.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSoftSoftCollisionAlgorithm.java
index 1924ac6..efa1934 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSoftSoftCollisionAlgorithm.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSoftSoftCollisionAlgorithm.java
@@ -44,8 +44,8 @@ public class btSoftSoftCollisionAlgorithm extends btCollisionAlgorithm {
     this(gdxBulletJNI.new_btSoftSoftCollisionAlgorithm__SWIG_0(btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci), true);
   }
 
-  public btSoftSoftCollisionAlgorithm(btPersistentManifold mf, btCollisionAlgorithmConstructionInfo ci, btCollisionObjectWrapper body0Wrap, btCollisionObjectWrapper body1Wrap) {
-    this(gdxBulletJNI.new_btSoftSoftCollisionAlgorithm__SWIG_1(btPersistentManifold.getCPtr(mf), mf, btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, btCollisionObjectWrapper.getCPtr(body0Wrap), body0Wrap, btCollisionObjectWrapper.getCPtr(body1Wrap), body1Wrap), true);
+  public btSoftSoftCollisionAlgorithm(btPersistentManifold mf, btCollisionAlgorithmConstructionInfo ci, SWIGTYPE_p_btCollisionObjectWrapper body0Wrap, SWIGTYPE_p_btCollisionObjectWrapper body1Wrap) {
+    this(gdxBulletJNI.new_btSoftSoftCollisionAlgorithm__SWIG_1(btPersistentManifold.getCPtr(mf), mf, btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body0Wrap), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body1Wrap)), true);
   }
 
 }
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSphereBoxCollisionAlgorithm.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSphereBoxCollisionAlgorithm.java
index 16d5b63..fd2a89e 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSphereBoxCollisionAlgorithm.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSphereBoxCollisionAlgorithm.java
@@ -40,12 +40,12 @@ public class btSphereBoxCollisionAlgorithm extends btActivatingCollisionAlgorith
     super.delete();
   }
 
-  public btSphereBoxCollisionAlgorithm(btPersistentManifold mf, btCollisionAlgorithmConstructionInfo ci, btCollisionObjectWrapper body0Wrap, btCollisionObjectWrapper body1Wrap, boolean isSwapped) {
-    this(gdxBulletJNI.new_btSphereBoxCollisionAlgorithm(btPersistentManifold.getCPtr(mf), mf, btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, btCollisionObjectWrapper.getCPtr(body0Wrap), body0Wrap, btCollisionObjectWrapper.getCPtr(body1Wrap), body1Wrap, isSwapped), true);
+  public btSphereBoxCollisionAlgorithm(btPersistentManifold mf, btCollisionAlgorithmConstructionInfo ci, SWIGTYPE_p_btCollisionObjectWrapper body0Wrap, SWIGTYPE_p_btCollisionObjectWrapper body1Wrap, boolean isSwapped) {
+    this(gdxBulletJNI.new_btSphereBoxCollisionAlgorithm(btPersistentManifold.getCPtr(mf), mf, btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body0Wrap), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body1Wrap), isSwapped), true);
   }
 
-  public boolean getSphereDistance(btCollisionObjectWrapper boxObjWrap, Vector3 v3PointOnBox, Vector3 normal, SWIGTYPE_p_float penetrationDepth, Vector3 v3SphereCenter, float fRadius, float maxContactDistance) {
-    return gdxBulletJNI.btSphereBoxCollisionAlgorithm_getSphereDistance(swigCPtr, this, btCollisionObjectWrapper.getCPtr(boxObjWrap), boxObjWrap, v3PointOnBox, normal, SWIGTYPE_p_float.getCPtr(penetrationDepth), v3SphereCenter, fRadius, maxContactDistance);
+  public boolean getSphereDistance(SWIGTYPE_p_btCollisionObjectWrapper boxObjWrap, Vector3 v3PointOnBox, Vector3 normal, SWIGTYPE_p_float penetrationDepth, Vector3 v3SphereCenter, float fRadius, float maxContactDistance) {
+    return gdxBulletJNI.btSphereBoxCollisionAlgorithm_getSphereDistance(swigCPtr, this, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(boxObjWrap), v3PointOnBox, normal, SWIGTYPE_p_float.getCPtr(penetrationDepth), v3SphereCenter, fRadius, maxContactDistance);
   }
 
   public float getSpherePenetration(Vector3 boxHalfExtent, Vector3 sphereRelPos, Vector3 closestPoint, Vector3 normal) {
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSphereSphereCollisionAlgorithm.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSphereSphereCollisionAlgorithm.java
index d73c516..d26d277 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSphereSphereCollisionAlgorithm.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSphereSphereCollisionAlgorithm.java
@@ -40,8 +40,8 @@ public class btSphereSphereCollisionAlgorithm extends btActivatingCollisionAlgor
     super.delete();
   }
 
-  public btSphereSphereCollisionAlgorithm(btPersistentManifold mf, btCollisionAlgorithmConstructionInfo ci, btCollisionObjectWrapper col0Wrap, btCollisionObjectWrapper col1Wrap) {
-    this(gdxBulletJNI.new_btSphereSphereCollisionAlgorithm__SWIG_0(btPersistentManifold.getCPtr(mf), mf, btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, btCollisionObjectWrapper.getCPtr(col0Wrap), col0Wrap, btCollisionObjectWrapper.getCPtr(col1Wrap), col1Wrap), true);
+  public btSphereSphereCollisionAlgorithm(btPersistentManifold mf, btCollisionAlgorithmConstructionInfo ci, SWIGTYPE_p_btCollisionObjectWrapper col0Wrap, SWIGTYPE_p_btCollisionObjectWrapper col1Wrap) {
+    this(gdxBulletJNI.new_btSphereSphereCollisionAlgorithm__SWIG_0(btPersistentManifold.getCPtr(mf), mf, btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(col0Wrap), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(col1Wrap)), true);
   }
 
   public btSphereSphereCollisionAlgorithm(btCollisionAlgorithmConstructionInfo ci) {
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSphereTriangleCollisionAlgorithm.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSphereTriangleCollisionAlgorithm.java
index 4a7231f..57fc4cb 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSphereTriangleCollisionAlgorithm.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/btSphereTriangleCollisionAlgorithm.java
@@ -40,8 +40,8 @@ public class btSphereTriangleCollisionAlgorithm extends btActivatingCollisionAlg
     super.delete();
   }
 
-  public btSphereTriangleCollisionAlgorithm(btPersistentManifold mf, btCollisionAlgorithmConstructionInfo ci, btCollisionObjectWrapper body0Wrap, btCollisionObjectWrapper body1Wrap, boolean swapped) {
-    this(gdxBulletJNI.new_btSphereTriangleCollisionAlgorithm__SWIG_0(btPersistentManifold.getCPtr(mf), mf, btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, btCollisionObjectWrapper.getCPtr(body0Wrap), body0Wrap, btCollisionObjectWrapper.getCPtr(body1Wrap), body1Wrap, swapped), true);
+  public btSphereTriangleCollisionAlgorithm(btPersistentManifold mf, btCollisionAlgorithmConstructionInfo ci, SWIGTYPE_p_btCollisionObjectWrapper body0Wrap, SWIGTYPE_p_btCollisionObjectWrapper body1Wrap, boolean swapped) {
+    this(gdxBulletJNI.new_btSphereTriangleCollisionAlgorithm__SWIG_0(btPersistentManifold.getCPtr(mf), mf, btCollisionAlgorithmConstructionInfo.getCPtr(ci), ci, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body0Wrap), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(body1Wrap), swapped), true);
   }
 
   public btSphereTriangleCollisionAlgorithm(btCollisionAlgorithmConstructionInfo ci) {
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/gdxBullet.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/gdxBullet.java
index ac5f86d..e9a79a5 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/gdxBullet.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/gdxBullet.java
@@ -400,12 +400,12 @@ public class gdxBullet implements gdxBulletConstants {
     gdxBulletJNI.btGenerateInternalEdgeInfo(btBvhTriangleMeshShape.getCPtr(trimeshShape), trimeshShape, btTriangleInfoMap.getCPtr(triangleInfoMap), triangleInfoMap);
   }
 
-  public static void btAdjustInternalEdgeContacts(btManifoldPoint cp, btCollisionObjectWrapper trimeshColObj0Wrap, btCollisionObjectWrapper otherColObj1Wrap, int partId0, int index0, int normalAdjustFlags) {
-    gdxBulletJNI.btAdjustInternalEdgeContacts__SWIG_0(btManifoldPoint.getCPtr(cp), cp, btCollisionObjectWrapper.getCPtr(trimeshColObj0Wrap), trimeshColObj0Wrap, btCollisionObjectWrapper.getCPtr(otherColObj1Wrap), otherColObj1Wrap, partId0, index0, normalAdjustFlags);
+  public static void btAdjustInternalEdgeContacts(btManifoldPoint cp, SWIGTYPE_p_btCollisionObjectWrapper trimeshColObj0Wrap, SWIGTYPE_p_btCollisionObjectWrapper otherColObj1Wrap, int partId0, int index0, int normalAdjustFlags) {
+    gdxBulletJNI.btAdjustInternalEdgeContacts__SWIG_0(btManifoldPoint.getCPtr(cp), cp, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(trimeshColObj0Wrap), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(otherColObj1Wrap), partId0, index0, normalAdjustFlags);
   }
 
-  public static void btAdjustInternalEdgeContacts(btManifoldPoint cp, btCollisionObjectWrapper trimeshColObj0Wrap, btCollisionObjectWrapper otherColObj1Wrap, int partId0, int index0) {
-    gdxBulletJNI.btAdjustInternalEdgeContacts__SWIG_1(btManifoldPoint.getCPtr(cp), cp, btCollisionObjectWrapper.getCPtr(trimeshColObj0Wrap), trimeshColObj0Wrap, btCollisionObjectWrapper.getCPtr(otherColObj1Wrap), otherColObj1Wrap, partId0, index0);
+  public static void btAdjustInternalEdgeContacts(btManifoldPoint cp, SWIGTYPE_p_btCollisionObjectWrapper trimeshColObj0Wrap, SWIGTYPE_p_btCollisionObjectWrapper otherColObj1Wrap, int partId0, int index0) {
+    gdxBulletJNI.btAdjustInternalEdgeContacts__SWIG_1(btManifoldPoint.getCPtr(cp), cp, SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(trimeshColObj0Wrap), SWIGTYPE_p_btCollisionObjectWrapper.getCPtr(otherColObj1Wrap), partId0, index0);
   }
 
   public static void setGContactBreakingThreshold(float value) {
diff --git a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/gdxBulletJNI.java b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/gdxBulletJNI.java
index 5048065..fc542e9 100755
--- a/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/gdxBulletJNI.java
+++ b/extensions/gdx-bullet/jni/swig-src/com/badlogic/gdx/physics/bullet/gdxBulletJNI.java
@@ -916,7 +916,7 @@ public class gdxBulletJNI {
   public final static native long btCollisionAlgorithmConstructionInfo_m_manifold_get(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_);
   public final static native void delete_btCollisionAlgorithmConstructionInfo(long jarg1);
   public final static native void delete_btCollisionAlgorithm(long jarg1);
-  public final static native void btCollisionAlgorithm_processCollision(long jarg1, btCollisionAlgorithm jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btDispatcherInfo jarg4_, long jarg5, btManifoldResult jarg5_);
+  public final static native void btCollisionAlgorithm_processCollision(long jarg1, btCollisionAlgorithm jarg1_, long jarg2, long jarg3, long jarg4, btDispatcherInfo jarg4_, long jarg5, btManifoldResult jarg5_);
   public final static native float btCollisionAlgorithm_calculateTimeOfImpact(long jarg1, btCollisionAlgorithm jarg1_, long jarg2, btCollisionObject jarg2_, long jarg3, btCollisionObject jarg3_, long jarg4, btDispatcherInfo jarg4_, long jarg5, btManifoldResult jarg5_);
   public final static native void btCollisionAlgorithm_getAllContactManifolds(long jarg1, btCollisionAlgorithm jarg1_, long jarg2);
   public final static native void delete_btOverlappingPairCallback(long jarg1);
@@ -1002,8 +1002,8 @@ public class gdxBulletJNI {
   public final static native long btDispatcherInfo_m_stackAllocator_get(long jarg1, btDispatcherInfo jarg1_);
   public final static native void delete_btDispatcherInfo(long jarg1);
   public final static native void delete_btDispatcher(long jarg1);
-  public final static native long btDispatcher_findAlgorithm__SWIG_0(long jarg1, btDispatcher jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btPersistentManifold jarg4_);
-  public final static native long btDispatcher_findAlgorithm__SWIG_1(long jarg1, btDispatcher jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_);
+  public final static native long btDispatcher_findAlgorithm__SWIG_0(long jarg1, btDispatcher jarg1_, long jarg2, long jarg3, long jarg4, btPersistentManifold jarg4_);
+  public final static native long btDispatcher_findAlgorithm__SWIG_1(long jarg1, btDispatcher jarg1_, long jarg2, long jarg3);
   public final static native long btDispatcher_getNewManifold(long jarg1, btDispatcher jarg1_, long jarg2, btCollisionObject jarg2_, long jarg3, btCollisionObject jarg3_);
   public final static native void btDispatcher_releaseManifold(long jarg1, btDispatcher jarg1_, long jarg2, btPersistentManifold jarg2_);
   public final static native void btDispatcher_clearManifold(long jarg1, btDispatcher jarg1_, long jarg2, btPersistentManifold jarg2_);
@@ -2078,16 +2078,6 @@ public class gdxBulletJNI {
   public final static native String btRigidBodyDoubleData_m_padding_get(long jarg1, btRigidBodyDoubleData jarg1_);
   public final static native long new_btRigidBodyDoubleData();
   public final static native void delete_btRigidBodyDoubleData(long jarg1);
-  public final static native void btCollisionObjectWrapper_m_parent_set(long jarg1, btCollisionObjectWrapper jarg1_, long jarg2, btCollisionObjectWrapper jarg2_);
-  public final static native long btCollisionObjectWrapper_m_parent_get(long jarg1, btCollisionObjectWrapper jarg1_);
-  public final static native void btCollisionObjectWrapper_m_shape_set(long jarg1, btCollisionObjectWrapper jarg1_, long jarg2, btCollisionShape jarg2_);
-  public final static native long btCollisionObjectWrapper_m_shape_get(long jarg1, btCollisionObjectWrapper jarg1_);
-  public final static native void btCollisionObjectWrapper_m_collisionObject_set(long jarg1, btCollisionObjectWrapper jarg1_, long jarg2, btCollisionObject jarg2_);
-  public final static native long btCollisionObjectWrapper_m_collisionObject_get(long jarg1, btCollisionObjectWrapper jarg1_);
-  public final static native Matrix4 btCollisionObjectWrapper_m_worldTransform_get(long jarg1, btCollisionObjectWrapper jarg1_);
-  public final static native Matrix4 btCollisionObjectWrapper_getWorldTransform(long jarg1, btCollisionObjectWrapper jarg1_);
-  public final static native long btCollisionObjectWrapper_getCollisionObject(long jarg1, btCollisionObjectWrapper jarg1_);
-  public final static native long btCollisionObjectWrapper_getCollisionShape(long jarg1, btCollisionObjectWrapper jarg1_);
   public final static native long new_btEmptyAlgorithm(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_);
   public final static native void delete_btEmptyAlgorithm(long jarg1);
   public final static native void delete_btActivatingCollisionAlgorithm(long jarg1);
@@ -2095,19 +2085,19 @@ public class gdxBulletJNI {
   public final static native int btConvexTriangleCallback_m_triangleCount_get(long jarg1, btConvexTriangleCallback jarg1_);
   public final static native void btConvexTriangleCallback_m_manifoldPtr_set(long jarg1, btConvexTriangleCallback jarg1_, long jarg2, btPersistentManifold jarg2_);
   public final static native long btConvexTriangleCallback_m_manifoldPtr_get(long jarg1, btConvexTriangleCallback jarg1_);
-  public final static native long new_btConvexTriangleCallback(long jarg1, btDispatcher jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, boolean jarg4);
-  public final static native void btConvexTriangleCallback_setTimeStepAndCounters(long jarg1, btConvexTriangleCallback jarg1_, float jarg2, long jarg3, btDispatcherInfo jarg3_, long jarg4, btCollisionObjectWrapper jarg4_, long jarg5, btCollisionObjectWrapper jarg5_, long jarg6, btManifoldResult jarg6_);
+  public final static native long new_btConvexTriangleCallback(long jarg1, btDispatcher jarg1_, long jarg2, long jarg3, boolean jarg4);
+  public final static native void btConvexTriangleCallback_setTimeStepAndCounters(long jarg1, btConvexTriangleCallback jarg1_, float jarg2, long jarg3, btDispatcherInfo jarg3_, long jarg4, long jarg5, long jarg6, btManifoldResult jarg6_);
   public final static native void btConvexTriangleCallback_clearWrapperData(long jarg1, btConvexTriangleCallback jarg1_);
   public final static native void delete_btConvexTriangleCallback(long jarg1);
   public final static native void btConvexTriangleCallback_clearCache(long jarg1, btConvexTriangleCallback jarg1_);
   public final static native Vector3 btConvexTriangleCallback_getAabbMin(long jarg1, btConvexTriangleCallback jarg1_);
   public final static native Vector3 btConvexTriangleCallback_getAabbMax(long jarg1, btConvexTriangleCallback jarg1_);
-  public final static native long new_btConvexConcaveCollisionAlgorithm(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, boolean jarg4);
+  public final static native long new_btConvexConcaveCollisionAlgorithm(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_, long jarg2, long jarg3, boolean jarg4);
   public final static native void delete_btConvexConcaveCollisionAlgorithm(long jarg1);
   public final static native void btConvexConcaveCollisionAlgorithm_clearCache(long jarg1, btConvexConcaveCollisionAlgorithm jarg1_);
-  public final static native long new_btConvexPlaneCollisionAlgorithm(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_, boolean jarg5, int jarg6, int jarg7);
+  public final static native long new_btConvexPlaneCollisionAlgorithm(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, long jarg4, boolean jarg5, int jarg6, int jarg7);
   public final static native void delete_btConvexPlaneCollisionAlgorithm(long jarg1);
-  public final static native void btConvexPlaneCollisionAlgorithm_collideSingleContact(long jarg1, btConvexPlaneCollisionAlgorithm jarg1_, Quaternion jarg2, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_, long jarg5, btDispatcherInfo jarg5_, long jarg6, btManifoldResult jarg6_);
+  public final static native void btConvexPlaneCollisionAlgorithm_collideSingleContact(long jarg1, btConvexPlaneCollisionAlgorithm jarg1_, Quaternion jarg2, long jarg3, long jarg4, long jarg5, btDispatcherInfo jarg5_, long jarg6, btManifoldResult jarg6_);
   public final static native void delete_btCollisionConfiguration(long jarg1);
   public final static native long btCollisionConfiguration_getPersistentManifoldPool(long jarg1, btCollisionConfiguration jarg1_);
   public final static native long btCollisionConfiguration_getCollisionAlgorithmPool(long jarg1, btCollisionConfiguration jarg1_);
@@ -2144,7 +2134,7 @@ public class gdxBulletJNI {
   public final static native void gContactAddedCallback_set(long jarg1);
   public final static native long gContactAddedCallback_get();
   public final static native long new_btManifoldResult__SWIG_0();
-  public final static native long new_btManifoldResult__SWIG_1(long jarg1, btCollisionObjectWrapper jarg1_, long jarg2, btCollisionObjectWrapper jarg2_);
+  public final static native long new_btManifoldResult__SWIG_1(long jarg1, long jarg2);
   public final static native void delete_btManifoldResult(long jarg1);
   public final static native void btManifoldResult_setPersistentManifold(long jarg1, btManifoldResult jarg1_, long jarg2, btPersistentManifold jarg2_);
   public final static native long btManifoldResult_getPersistentManifold__SWIG_0(long jarg1, btManifoldResult jarg1_);
@@ -2154,23 +2144,23 @@ public class gdxBulletJNI {
   public final static native void btManifoldResult_refreshContactPoints(long jarg1, btManifoldResult jarg1_);
   public final static native long btManifoldResult_getBody0Wrap(long jarg1, btManifoldResult jarg1_);
   public final static native long btManifoldResult_getBody1Wrap(long jarg1, btManifoldResult jarg1_);
-  public final static native void btManifoldResult_setBody0Wrap(long jarg1, btManifoldResult jarg1_, long jarg2, btCollisionObjectWrapper jarg2_);
-  public final static native void btManifoldResult_setBody1Wrap(long jarg1, btManifoldResult jarg1_, long jarg2, btCollisionObjectWrapper jarg2_);
+  public final static native void btManifoldResult_setBody0Wrap(long jarg1, btManifoldResult jarg1_, long jarg2);
+  public final static native void btManifoldResult_setBody1Wrap(long jarg1, btManifoldResult jarg1_, long jarg2);
   public final static native long btManifoldResult_getBody0Internal(long jarg1, btManifoldResult jarg1_);
   public final static native long btManifoldResult_getBody1Internal(long jarg1, btManifoldResult jarg1_);
-  public final static native long new_btSphereSphereCollisionAlgorithm__SWIG_0(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_);
+  public final static native long new_btSphereSphereCollisionAlgorithm__SWIG_0(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, long jarg4);
   public final static native long new_btSphereSphereCollisionAlgorithm__SWIG_1(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_);
   public final static native void delete_btSphereSphereCollisionAlgorithm(long jarg1);
   public final static native long new_btBoxBoxCollisionAlgorithm__SWIG_0(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_);
-  public final static native long new_btBoxBoxCollisionAlgorithm__SWIG_1(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_);
+  public final static native long new_btBoxBoxCollisionAlgorithm__SWIG_1(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, long jarg4);
   public final static native void delete_btBoxBoxCollisionAlgorithm(long jarg1);
   public final static native void btCollisionAlgorithmCreateFunc_m_swapped_set(long jarg1, btCollisionAlgorithmCreateFunc jarg1_, boolean jarg2);
   public final static native boolean btCollisionAlgorithmCreateFunc_m_swapped_get(long jarg1, btCollisionAlgorithmCreateFunc jarg1_);
   public final static native long new_btCollisionAlgorithmCreateFunc();
   public final static native void delete_btCollisionAlgorithmCreateFunc(long jarg1);
-  public final static native long btCollisionAlgorithmCreateFunc_CreateCollisionAlgorithm(long jarg1, btCollisionAlgorithmCreateFunc jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_);
+  public final static native long btCollisionAlgorithmCreateFunc_CreateCollisionAlgorithm(long jarg1, btCollisionAlgorithmCreateFunc jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, long jarg4);
   public final static native long new_btBox2dBox2dCollisionAlgorithm__SWIG_0(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_);
-  public final static native long new_btBox2dBox2dCollisionAlgorithm__SWIG_1(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_);
+  public final static native long new_btBox2dBox2dCollisionAlgorithm__SWIG_1(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, long jarg4);
   public final static native void delete_btBox2dBox2dCollisionAlgorithm(long jarg1);
   public final static native void btElement_m_id_set(long jarg1, btElement jarg1_, int jarg2);
   public final static native int btElement_m_id_get(long jarg1, btElement jarg1_);
@@ -2190,7 +2180,7 @@ public class gdxBulletJNI {
   public final static native int btUnionFind_find__SWIG_0(long jarg1, btUnionFind jarg1_, int jarg2, int jarg3);
   public final static native void btUnionFind_unite(long jarg1, btUnionFind jarg1_, int jarg2, int jarg3);
   public final static native int btUnionFind_find__SWIG_1(long jarg1, btUnionFind jarg1_, int jarg2);
-  public final static native long new_btSphereTriangleCollisionAlgorithm__SWIG_0(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_, boolean jarg5);
+  public final static native long new_btSphereTriangleCollisionAlgorithm__SWIG_0(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, long jarg4, boolean jarg5);
   public final static native long new_btSphereTriangleCollisionAlgorithm__SWIG_1(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_);
   public final static native void delete_btSphereTriangleCollisionAlgorithm(long jarg1);
   public final static native long new_btSimulationIslandManager();
@@ -2254,12 +2244,8 @@ public class gdxBulletJNI {
   public final static native long RayResultCallback_m_flags_get(long jarg1, RayResultCallback jarg1_);
   public final static native void delete_RayResultCallback(long jarg1);
   public final static native boolean RayResultCallback_hasHit(long jarg1, RayResultCallback jarg1_);
-  public final static native long new_RayResultCallback();
   public final static native boolean RayResultCallback_needsCollision(long jarg1, RayResultCallback jarg1_, long jarg2, btBroadphaseProxy jarg2_);
-  public final static native boolean RayResultCallback_needsCollisionSwigExplicitRayResultCallback(long jarg1, RayResultCallback jarg1_, long jarg2, btBroadphaseProxy jarg2_);
   public final static native float RayResultCallback_addSingleResult(long jarg1, RayResultCallback jarg1_, long jarg2, LocalRayResult jarg2_, boolean jarg3);
-  public final static native void RayResultCallback_director_connect(RayResultCallback obj, long cptr, boolean mem_own, boolean weak_global);
-  public final static native void RayResultCallback_change_ownership(RayResultCallback obj, long cptr, boolean take_or_release);
   public final static native long new_ClosestRayResultCallback(Vector3 jarg1, Vector3 jarg2);
   public final static native void ClosestRayResultCallback_m_rayFromWorld_set(long jarg1, ClosestRayResultCallback jarg1_, long jarg2, btVector3 jarg2_);
   public final static native long ClosestRayResultCallback_m_rayFromWorld_get(long jarg1, ClosestRayResultCallback jarg1_);
@@ -2269,11 +2255,7 @@ public class gdxBulletJNI {
   public final static native long ClosestRayResultCallback_m_hitNormalWorld_get(long jarg1, ClosestRayResultCallback jarg1_);
   public final static native void ClosestRayResultCallback_m_hitPointWorld_set(long jarg1, ClosestRayResultCallback jarg1_, long jarg2, btVector3 jarg2_);
   public final static native long ClosestRayResultCallback_m_hitPointWorld_get(long jarg1, ClosestRayResultCallback jarg1_);
-  public final static native float ClosestRayResultCallback_addSingleResult(long jarg1, ClosestRayResultCallback jarg1_, long jarg2, LocalRayResult jarg2_, boolean jarg3);
-  public final static native float ClosestRayResultCallback_addSingleResultSwigExplicitClosestRayResultCallback(long jarg1, ClosestRayResultCallback jarg1_, long jarg2, LocalRayResult jarg2_, boolean jarg3);
   public final static native void delete_ClosestRayResultCallback(long jarg1);
-  public final static native void ClosestRayResultCallback_director_connect(ClosestRayResultCallback obj, long cptr, boolean mem_own, boolean weak_global);
-  public final static native void ClosestRayResultCallback_change_ownership(ClosestRayResultCallback obj, long cptr, boolean take_or_release);
   public final static native long new_AllHitsRayResultCallback(Vector3 jarg1, Vector3 jarg2);
   public final static native void AllHitsRayResultCallback_m_collisionObjects_set(long jarg1, AllHitsRayResultCallback jarg1_, long jarg2);
   public final static native long AllHitsRayResultCallback_m_collisionObjects_get(long jarg1, AllHitsRayResultCallback jarg1_);
@@ -2287,11 +2269,7 @@ public class gdxBulletJNI {
   public final static native long AllHitsRayResultCallback_m_hitPointWorld_get(long jarg1, AllHitsRayResultCallback jarg1_);
   public final static native void AllHitsRayResultCallback_m_hitFractions_set(long jarg1, AllHitsRayResultCallback jarg1_, long jarg2);
   public final static native long AllHitsRayResultCallback_m_hitFractions_get(long jarg1, AllHitsRayResultCallback jarg1_);
-  public final static native float AllHitsRayResultCallback_addSingleResult(long jarg1, AllHitsRayResultCallback jarg1_, long jarg2, LocalRayResult jarg2_, boolean jarg3);
-  public final static native float AllHitsRayResultCallback_addSingleResultSwigExplicitAllHitsRayResultCallback(long jarg1, AllHitsRayResultCallback jarg1_, long jarg2, LocalRayResult jarg2_, boolean jarg3);
   public final static native void delete_AllHitsRayResultCallback(long jarg1);
-  public final static native void AllHitsRayResultCallback_director_connect(AllHitsRayResultCallback obj, long cptr, boolean mem_own, boolean weak_global);
-  public final static native void AllHitsRayResultCallback_change_ownership(AllHitsRayResultCallback obj, long cptr, boolean take_or_release);
   public final static native long new_LocalConvexResult(long jarg1, btCollisionObject jarg1_, long jarg2, LocalShapeInfo jarg2_, Vector3 jarg3, Vector3 jarg4, float jarg5);
   public final static native void LocalConvexResult_m_hitCollisionObject_set(long jarg1, LocalConvexResult jarg1_, long jarg2, btCollisionObject jarg2_);
   public final static native long LocalConvexResult_m_hitCollisionObject_get(long jarg1, LocalConvexResult jarg1_);
@@ -2310,14 +2288,10 @@ public class gdxBulletJNI {
   public final static native short ConvexResultCallback_m_collisionFilterGroup_get(long jarg1, ConvexResultCallback jarg1_);
   public final static native void ConvexResultCallback_m_collisionFilterMask_set(long jarg1, ConvexResultCallback jarg1_, short jarg2);
   public final static native short ConvexResultCallback_m_collisionFilterMask_get(long jarg1, ConvexResultCallback jarg1_);
-  public final static native long new_ConvexResultCallback();
   public final static native void delete_ConvexResultCallback(long jarg1);
   public final static native boolean ConvexResultCallback_hasHit(long jarg1, ConvexResultCallback jarg1_);
   public final static native boolean ConvexResultCallback_needsCollision(long jarg1, ConvexResultCallback jarg1_, long jarg2, btBroadphaseProxy jarg2_);
-  public final static native boolean ConvexResultCallback_needsCollisionSwigExplicitConvexResultCallback(long jarg1, ConvexResultCallback jarg1_, long jarg2, btBroadphaseProxy jarg2_);
   public final static native float ConvexResultCallback_addSingleResult(long jarg1, ConvexResultCallback jarg1_, long jarg2, LocalConvexResult jarg2_, boolean jarg3);
-  public final static native void ConvexResultCallback_director_connect(ConvexResultCallback obj, long cptr, boolean mem_own, boolean weak_global);
-  public final static native void ConvexResultCallback_change_ownership(ConvexResultCallback obj, long cptr, boolean take_or_release);
   public final static native long new_ClosestConvexResultCallback(Vector3 jarg1, Vector3 jarg2);
   public final static native void ClosestConvexResultCallback_m_convexFromWorld_set(long jarg1, ClosestConvexResultCallback jarg1_, long jarg2, btVector3 jarg2_);
   public final static native long ClosestConvexResultCallback_m_convexFromWorld_get(long jarg1, ClosestConvexResultCallback jarg1_);
@@ -2329,22 +2303,14 @@ public class gdxBulletJNI {
   public final static native long ClosestConvexResultCallback_m_hitPointWorld_get(long jarg1, ClosestConvexResultCallback jarg1_);
   public final static native void ClosestConvexResultCallback_m_hitCollisionObject_set(long jarg1, ClosestConvexResultCallback jarg1_, long jarg2, btCollisionObject jarg2_);
   public final static native long ClosestConvexResultCallback_m_hitCollisionObject_get(long jarg1, ClosestConvexResultCallback jarg1_);
-  public final static native float ClosestConvexResultCallback_addSingleResult(long jarg1, ClosestConvexResultCallback jarg1_, long jarg2, LocalConvexResult jarg2_, boolean jarg3);
-  public final static native float ClosestConvexResultCallback_addSingleResultSwigExplicitClosestConvexResultCallback(long jarg1, ClosestConvexResultCallback jarg1_, long jarg2, LocalConvexResult jarg2_, boolean jarg3);
   public final static native void delete_ClosestConvexResultCallback(long jarg1);
-  public final static native void ClosestConvexResultCallback_director_connect(ClosestConvexResultCallback obj, long cptr, boolean mem_own, boolean weak_global);
-  public final static native void ClosestConvexResultCallback_change_ownership(ClosestConvexResultCallback obj, long cptr, boolean take_or_release);
   public final static native void ContactResultCallback_m_collisionFilterGroup_set(long jarg1, ContactResultCallback jarg1_, short jarg2);
   public final static native short ContactResultCallback_m_collisionFilterGroup_get(long jarg1, ContactResultCallback jarg1_);
   public final static native void ContactResultCallback_m_collisionFilterMask_set(long jarg1, ContactResultCallback jarg1_, short jarg2);
   public final static native short ContactResultCallback_m_collisionFilterMask_get(long jarg1, ContactResultCallback jarg1_);
-  public final static native long new_ContactResultCallback();
   public final static native void delete_ContactResultCallback(long jarg1);
   public final static native boolean ContactResultCallback_needsCollision(long jarg1, ContactResultCallback jarg1_, long jarg2, btBroadphaseProxy jarg2_);
-  public final static native boolean ContactResultCallback_needsCollisionSwigExplicitContactResultCallback(long jarg1, ContactResultCallback jarg1_, long jarg2, btBroadphaseProxy jarg2_);
-  public final static native float ContactResultCallback_addSingleResult(long jarg1, ContactResultCallback jarg1_, long jarg2, btManifoldPoint jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, int jarg4, int jarg5, long jarg6, btCollisionObjectWrapper jarg6_, int jarg7, int jarg8);
-  public final static native void ContactResultCallback_director_connect(ContactResultCallback obj, long cptr, boolean mem_own, boolean weak_global);
-  public final static native void ContactResultCallback_change_ownership(ContactResultCallback obj, long cptr, boolean take_or_release);
+  public final static native float ContactResultCallback_addSingleResult(long jarg1, ContactResultCallback jarg1_, long jarg2, btManifoldPoint jarg2_, long jarg3, int jarg4, int jarg5, long jarg6, int jarg7, int jarg8);
   public final static native long new_btCollisionWorld(long jarg1, btDispatcher jarg1_, long jarg2, btBroadphaseInterface jarg2_, long jarg3, btCollisionConfiguration jarg3_);
   public final static native void delete_btCollisionWorld(long jarg1);
   public final static native void btCollisionWorld_setBroadphase(long jarg1, btCollisionWorld jarg1_, long jarg2, btBroadphaseInterface jarg2_);
@@ -2364,9 +2330,9 @@ public class gdxBulletJNI {
   public final static native void btCollisionWorld_contactTest(long jarg1, btCollisionWorld jarg1_, long jarg2, btCollisionObject jarg2_, long jarg3, ContactResultCallback jarg3_);
   public final static native void btCollisionWorld_contactPairTest(long jarg1, btCollisionWorld jarg1_, long jarg2, btCollisionObject jarg2_, long jarg3, btCollisionObject jarg3_, long jarg4, ContactResultCallback jarg4_);
   public final static native void btCollisionWorld_rayTestSingle(Matrix4 jarg1, Matrix4 jarg2, long jarg3, btCollisionObject jarg3_, long jarg4, btCollisionShape jarg4_, Matrix4 jarg5, long jarg6, RayResultCallback jarg6_);
-  public final static native void btCollisionWorld_rayTestSingleInternal(Matrix4 jarg1, Matrix4 jarg2, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, RayResultCallback jarg4_);
+  public final static native void btCollisionWorld_rayTestSingleInternal(Matrix4 jarg1, Matrix4 jarg2, long jarg3, long jarg4, RayResultCallback jarg4_);
   public final static native void btCollisionWorld_objectQuerySingle(long jarg1, btConvexShape jarg1_, Matrix4 jarg2, Matrix4 jarg3, long jarg4, btCollisionObject jarg4_, long jarg5, btCollisionShape jarg5_, Matrix4 jarg6, long jarg7, ConvexResultCallback jarg7_, float jarg8);
-  public final static native void btCollisionWorld_objectQuerySingleInternal(long jarg1, btConvexShape jarg1_, Matrix4 jarg2, Matrix4 jarg3, long jarg4, btCollisionObjectWrapper jarg4_, long jarg5, ConvexResultCallback jarg5_, float jarg6);
+  public final static native void btCollisionWorld_objectQuerySingleInternal(long jarg1, btConvexShape jarg1_, Matrix4 jarg2, Matrix4 jarg3, long jarg4, long jarg5, ConvexResultCallback jarg5_, float jarg6);
   public final static native void btCollisionWorld_addCollisionObject__SWIG_0(long jarg1, btCollisionWorld jarg1_, long jarg2, btCollisionObject jarg2_, short jarg3, short jarg4);
   public final static native void btCollisionWorld_addCollisionObject__SWIG_1(long jarg1, btCollisionWorld jarg1_, long jarg2, btCollisionObject jarg2_, short jarg3);
   public final static native void btCollisionWorld_addCollisionObject__SWIG_2(long jarg1, btCollisionWorld jarg1_, long jarg2, btCollisionObject jarg2_);
@@ -2385,7 +2351,7 @@ public class gdxBulletJNI {
   public final static native void delete_ClosestNotMeConvexResultCallback(long jarg1);
   public final static native long new_ClosestNotMeRayResultCallback(long jarg1, btCollisionObject jarg1_);
   public final static native void delete_ClosestNotMeRayResultCallback(long jarg1);
-  public final static native long new_btConvex2dConvex2dAlgorithm(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_, long jarg5, long jarg6, btConvexPenetrationDepthSolver jarg6_, int jarg7, int jarg8);
+  public final static native long new_btConvex2dConvex2dAlgorithm(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, long jarg4, long jarg5, long jarg6, btConvexPenetrationDepthSolver jarg6_, int jarg7, int jarg8);
   public final static native void delete_btConvex2dConvex2dAlgorithm(long jarg1);
   public final static native void btConvex2dConvex2dAlgorithm_setLowLevelOfDetail(long jarg1, btConvex2dConvex2dAlgorithm jarg1_, boolean jarg2);
   public final static native long btConvex2dConvex2dAlgorithm_getManifold(long jarg1, btConvex2dConvex2dAlgorithm jarg1_);
@@ -2397,9 +2363,9 @@ public class gdxBulletJNI {
   public final static native void delete_btBoxBoxDetector(long jarg1);
   public final static native void btBoxBoxDetector_getClosestPoints__SWIG_0(long jarg1, btBoxBoxDetector jarg1_, long jarg2, ClosestPointInput jarg2_, long jarg3, Result jarg3_, long jarg4, btIDebugDraw jarg4_, boolean jarg5);
   public final static native void btBoxBoxDetector_getClosestPoints__SWIG_1(long jarg1, btBoxBoxDetector jarg1_, long jarg2, ClosestPointInput jarg2_, long jarg3, Result jarg3_, long jarg4, btIDebugDraw jarg4_);
-  public final static native long new_btSphereBoxCollisionAlgorithm(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_, boolean jarg5);
+  public final static native long new_btSphereBoxCollisionAlgorithm(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, long jarg4, boolean jarg5);
   public final static native void delete_btSphereBoxCollisionAlgorithm(long jarg1);
-  public final static native boolean btSphereBoxCollisionAlgorithm_getSphereDistance(long jarg1, btSphereBoxCollisionAlgorithm jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, Vector3 jarg3, Vector3 jarg4, long jarg5, Vector3 jarg6, float jarg7, float jarg8);
+  public final static native boolean btSphereBoxCollisionAlgorithm_getSphereDistance(long jarg1, btSphereBoxCollisionAlgorithm jarg1_, long jarg2, Vector3 jarg3, Vector3 jarg4, long jarg5, Vector3 jarg6, float jarg7, float jarg8);
   public final static native float btSphereBoxCollisionAlgorithm_getSpherePenetration(long jarg1, btSphereBoxCollisionAlgorithm jarg1_, Vector3 jarg2, Vector3 jarg3, Vector3 jarg4, Vector3 jarg5);
   public final static native int btCollisionDispatcher_getDispatcherFlags(long jarg1, btCollisionDispatcher jarg1_);
   public final static native void btCollisionDispatcher_setDispatcherFlags(long jarg1, btCollisionDispatcher jarg1_, int jarg2);
@@ -2407,15 +2373,15 @@ public class gdxBulletJNI {
   public final static native long btCollisionDispatcher_getManifoldByIndexInternal__SWIG_0(long jarg1, btCollisionDispatcher jarg1_, int jarg2);
   public final static native long new_btCollisionDispatcher(long jarg1, btCollisionConfiguration jarg1_);
   public final static native void delete_btCollisionDispatcher(long jarg1);
-  public final static native long btCollisionDispatcher_findAlgorithm__SWIG_0(long jarg1, btCollisionDispatcher jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btPersistentManifold jarg4_);
-  public final static native long btCollisionDispatcher_findAlgorithm__SWIG_1(long jarg1, btCollisionDispatcher jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_);
+  public final static native long btCollisionDispatcher_findAlgorithm__SWIG_0(long jarg1, btCollisionDispatcher jarg1_, long jarg2, long jarg3, long jarg4, btPersistentManifold jarg4_);
+  public final static native long btCollisionDispatcher_findAlgorithm__SWIG_1(long jarg1, btCollisionDispatcher jarg1_, long jarg2, long jarg3);
   public final static native void btCollisionDispatcher_setNearCallback(long jarg1, btCollisionDispatcher jarg1_, long jarg2);
   public final static native long btCollisionDispatcher_getNearCallback(long jarg1, btCollisionDispatcher jarg1_);
   public final static native void btCollisionDispatcher_defaultNearCallback(long jarg1, btBroadphasePair jarg1_, long jarg2, btCollisionDispatcher jarg2_, long jarg3, btDispatcherInfo jarg3_);
   public final static native long btCollisionDispatcher_getCollisionConfiguration__SWIG_0(long jarg1, btCollisionDispatcher jarg1_);
   public final static native void btCollisionDispatcher_setCollisionConfiguration(long jarg1, btCollisionDispatcher jarg1_, long jarg2, btCollisionConfiguration jarg2_);
   public final static native long btCollisionDispatcher_getInternalManifoldPool__SWIG_0(long jarg1, btCollisionDispatcher jarg1_);
-  public final static native long new_btConvexConvexAlgorithm(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_, long jarg5, long jarg6, btConvexPenetrationDepthSolver jarg6_, int jarg7, int jarg8);
+  public final static native long new_btConvexConvexAlgorithm(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, long jarg4, long jarg5, long jarg6, btConvexPenetrationDepthSolver jarg6_, int jarg7, int jarg8);
   public final static native void delete_btConvexConvexAlgorithm(long jarg1);
   public final static native void btConvexConvexAlgorithm_setLowLevelOfDetail(long jarg1, btConvexConvexAlgorithm jarg1_, boolean jarg2);
   public final static native long btConvexConvexAlgorithm_getManifold(long jarg1, btConvexConvexAlgorithm jarg1_);
@@ -2425,9 +2391,9 @@ public class gdxBulletJNI {
   public final static native void delete_SphereTriangleDetector(long jarg1);
   public final static native boolean SphereTriangleDetector_collide(long jarg1, SphereTriangleDetector jarg1_, Vector3 jarg2, Vector3 jarg3, Vector3 jarg4, long jarg5, long jarg6, float jarg7);
   public final static native void btGenerateInternalEdgeInfo(long jarg1, btBvhTriangleMeshShape jarg1_, long jarg2, btTriangleInfoMap jarg2_);
-  public final static native void btAdjustInternalEdgeContacts__SWIG_0(long jarg1, btManifoldPoint jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, int jarg4, int jarg5, int jarg6);
-  public final static native void btAdjustInternalEdgeContacts__SWIG_1(long jarg1, btManifoldPoint jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, int jarg4, int jarg5);
-  public final static native long new_btCompoundCollisionAlgorithm(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, boolean jarg4);
+  public final static native void btAdjustInternalEdgeContacts__SWIG_0(long jarg1, btManifoldPoint jarg1_, long jarg2, long jarg3, int jarg4, int jarg5, int jarg6);
+  public final static native void btAdjustInternalEdgeContacts__SWIG_1(long jarg1, btManifoldPoint jarg1_, long jarg2, long jarg3, int jarg4, int jarg5);
+  public final static native long new_btCompoundCollisionAlgorithm(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_, long jarg2, long jarg3, boolean jarg4);
   public final static native void delete_btCompoundCollisionAlgorithm(long jarg1);
   public final static native void delete_btConvexCast(long jarg1);
   public final static native boolean btConvexCast_calcTimeOfImpact(long jarg1, btConvexCast jarg1_, Matrix4 jarg2, Matrix4 jarg3, Matrix4 jarg4, Matrix4 jarg5, long jarg6);
@@ -3559,7 +3525,7 @@ public class gdxBulletJNI {
   public final static native void btSoftBodySolver_predictMotion(long jarg1, btSoftBodySolver jarg1_, float jarg2);
   public final static native void btSoftBodySolver_solveConstraints(long jarg1, btSoftBodySolver jarg1_, float jarg2);
   public final static native void btSoftBodySolver_updateSoftBodies(long jarg1, btSoftBodySolver jarg1_);
-  public final static native void btSoftBodySolver_processCollision__SWIG_0(long jarg1, btSoftBodySolver jarg1_, long jarg2, btSoftBody jarg2_, long jarg3, btCollisionObjectWrapper jarg3_);
+  public final static native void btSoftBodySolver_processCollision__SWIG_0(long jarg1, btSoftBodySolver jarg1_, long jarg2, btSoftBody jarg2_, long jarg3);
   public final static native void btSoftBodySolver_processCollision__SWIG_1(long jarg1, btSoftBodySolver jarg1_, long jarg2, btSoftBody jarg2_, long jarg3, btSoftBody jarg3_);
   public final static native void btSoftBodySolver_setNumberOfPositionIterations(long jarg1, btSoftBodySolver jarg1_, int jarg2);
   public final static native int btSoftBodySolver_getNumberOfPositionIterations(long jarg1, btSoftBodySolver jarg1_);
@@ -3575,7 +3541,7 @@ public class gdxBulletJNI {
   public final static native void btDefaultSoftBodySolver_copyBackToSoftBodies__SWIG_0(long jarg1, btDefaultSoftBodySolver jarg1_, boolean jarg2);
   public final static native void btDefaultSoftBodySolver_copyBackToSoftBodies__SWIG_1(long jarg1, btDefaultSoftBodySolver jarg1_);
   public final static native void btDefaultSoftBodySolver_copySoftBodyToVertexBuffer(long jarg1, btDefaultSoftBodySolver jarg1_, long jarg2, btSoftBody jarg2_, long jarg3, btVertexBufferDescriptor jarg3_);
-  public final static native void btDefaultSoftBodySolver_processCollision__SWIG_0(long jarg1, btDefaultSoftBodySolver jarg1_, long jarg2, btSoftBody jarg2_, long jarg3, btCollisionObjectWrapper jarg3_);
+  public final static native void btDefaultSoftBodySolver_processCollision__SWIG_0(long jarg1, btDefaultSoftBodySolver jarg1_, long jarg2, btSoftBody jarg2_, long jarg3);
   public final static native void btDefaultSoftBodySolver_processCollision__SWIG_1(long jarg1, btDefaultSoftBodySolver jarg1_, long jarg2, btSoftBody jarg2_, long jarg3, btSoftBody jarg3_);
   public final static native void sCti_m_colObj_set(long jarg1, sCti jarg1_, long jarg2, btCollisionObject jarg2_);
   public final static native long sCti_m_colObj_get(long jarg1, sCti jarg1_);
@@ -3857,7 +3823,7 @@ public class gdxBulletJNI {
   public final static native void btSoftBody_solveCommonConstraints(long jarg1, int jarg2, int jarg3);
   public final static native void btSoftBody_solveClusters__SWIG_0(long jarg1);
   public final static native void btSoftBody_integrateMotion(long jarg1, btSoftBody jarg1_);
-  public final static native void btSoftBody_defaultCollisionHandler__SWIG_0(long jarg1, btSoftBody jarg1_, long jarg2, btCollisionObjectWrapper jarg2_);
+  public final static native void btSoftBody_defaultCollisionHandler__SWIG_0(long jarg1, btSoftBody jarg1_, long jarg2);
   public final static native void btSoftBody_defaultCollisionHandler__SWIG_1(long jarg1, btSoftBody jarg1_, long jarg2, btSoftBody jarg2_);
   public final static native void btSoftBody_setWindVelocity(long jarg1, btSoftBody jarg1_, Vector3 jarg2);
   public final static native Vector3 btSoftBody_getWindVelocity(long jarg1, btSoftBody jarg1_);
@@ -3871,7 +3837,7 @@ public class gdxBulletJNI {
   public final static native int btSoftBody_rayTest__SWIG_1(long jarg1, btSoftBody jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4, long jarg5, long jarg6, boolean jarg7);
   public final static native void btSoftBody_initializeFaceTree(long jarg1, btSoftBody jarg1_);
   public final static native Vector3 btSoftBody_evaluateCom(long jarg1, btSoftBody jarg1_);
-  public final static native boolean btSoftBody_checkContact(long jarg1, btSoftBody jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, Vector3 jarg3, float jarg4, long jarg5, sCti jarg5_);
+  public final static native boolean btSoftBody_checkContact(long jarg1, btSoftBody jarg1_, long jarg2, Vector3 jarg3, float jarg4, long jarg5, sCti jarg5_);
   public final static native void btSoftBody_updateNormals(long jarg1, btSoftBody jarg1_);
   public final static native void btSoftBody_updateBounds(long jarg1, btSoftBody jarg1_);
   public final static native void btSoftBody_updatePose(long jarg1, btSoftBody jarg1_);
@@ -3934,13 +3900,13 @@ public class gdxBulletJNI {
   public final static native void delete_btTriIndex(long jarg1);
   public final static native void btSoftBodyTriangleCallback_m_triangleCount_set(long jarg1, btSoftBodyTriangleCallback jarg1_, int jarg2);
   public final static native int btSoftBodyTriangleCallback_m_triangleCount_get(long jarg1, btSoftBodyTriangleCallback jarg1_);
-  public final static native long new_btSoftBodyTriangleCallback(long jarg1, btDispatcher jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, boolean jarg4);
-  public final static native void btSoftBodyTriangleCallback_setTimeStepAndCounters(long jarg1, btSoftBodyTriangleCallback jarg1_, float jarg2, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btDispatcherInfo jarg4_, long jarg5, btManifoldResult jarg5_);
+  public final static native long new_btSoftBodyTriangleCallback(long jarg1, btDispatcher jarg1_, long jarg2, long jarg3, boolean jarg4);
+  public final static native void btSoftBodyTriangleCallback_setTimeStepAndCounters(long jarg1, btSoftBodyTriangleCallback jarg1_, float jarg2, long jarg3, long jarg4, btDispatcherInfo jarg4_, long jarg5, btManifoldResult jarg5_);
   public final static native void delete_btSoftBodyTriangleCallback(long jarg1);
   public final static native void btSoftBodyTriangleCallback_clearCache(long jarg1, btSoftBodyTriangleCallback jarg1_);
   public final static native Vector3 btSoftBodyTriangleCallback_getAabbMin(long jarg1, btSoftBodyTriangleCallback jarg1_);
   public final static native Vector3 btSoftBodyTriangleCallback_getAabbMax(long jarg1, btSoftBodyTriangleCallback jarg1_);
-  public final static native long new_btSoftBodyConcaveCollisionAlgorithm(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_, long jarg2, btCollisionObjectWrapper jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, boolean jarg4);
+  public final static native long new_btSoftBodyConcaveCollisionAlgorithm(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_, long jarg2, long jarg3, boolean jarg4);
   public final static native void delete_btSoftBodyConcaveCollisionAlgorithm(long jarg1);
   public final static native void btSoftBodyConcaveCollisionAlgorithm_clearCache(long jarg1, btSoftBodyConcaveCollisionAlgorithm jarg1_);
   public final static native void SoftBodyMaterialData_m_linearStiffness_set(long jarg1, SoftBodyMaterialData jarg1_, float jarg2);
@@ -4315,7 +4281,7 @@ public class gdxBulletJNI {
   public final static native long new_btCPUVertexBufferDescriptor__SWIG_1(java.nio.FloatBuffer jarg1, int jarg2, int jarg3, int jarg4, int jarg5);
   public final static native void delete_btCPUVertexBufferDescriptor(long jarg1);
   public final static native java.nio.FloatBuffer btCPUVertexBufferDescriptor_getBasePointer(long jarg1, btCPUVertexBufferDescriptor jarg1_);
-  public final static native long new_btSoftRigidCollisionAlgorithm(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_, boolean jarg5);
+  public final static native long new_btSoftRigidCollisionAlgorithm(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, long jarg4, boolean jarg5);
   public final static native void delete_btSoftRigidCollisionAlgorithm(long jarg1);
   public final static native long new_btSoftRigidDynamicsWorld__SWIG_0(long jarg1, btDispatcher jarg1_, long jarg2, btBroadphaseInterface jarg2_, long jarg3, btConstraintSolver jarg3_, long jarg4, btCollisionConfiguration jarg4_, long jarg5, btSoftBodySolver jarg5_);
   public final static native long new_btSoftRigidDynamicsWorld__SWIG_1(long jarg1, btDispatcher jarg1_, long jarg2, btBroadphaseInterface jarg2_, long jarg3, btConstraintSolver jarg3_, long jarg4, btCollisionConfiguration jarg4_);
@@ -4330,7 +4296,7 @@ public class gdxBulletJNI {
   public final static native long btSoftRigidDynamicsWorld_getSoftBodyArray__SWIG_0(long jarg1, btSoftRigidDynamicsWorld jarg1_);
   public final static native void btSoftRigidDynamicsWorld_rayTestSingle(Matrix4 jarg1, Matrix4 jarg2, long jarg3, btCollisionObject jarg3_, long jarg4, btCollisionShape jarg4_, Matrix4 jarg5, long jarg6, RayResultCallback jarg6_);
   public final static native long new_btSoftSoftCollisionAlgorithm__SWIG_0(long jarg1, btCollisionAlgorithmConstructionInfo jarg1_);
-  public final static native long new_btSoftSoftCollisionAlgorithm__SWIG_1(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, btCollisionObjectWrapper jarg3_, long jarg4, btCollisionObjectWrapper jarg4_);
+  public final static native long new_btSoftSoftCollisionAlgorithm__SWIG_1(long jarg1, btPersistentManifold jarg1_, long jarg2, btCollisionAlgorithmConstructionInfo jarg2_, long jarg3, long jarg4);
   public final static native void delete_btSoftSoftCollisionAlgorithm(long jarg1);
   public final static native void delete_btVehicleRaycaster(long jarg1);
   public final static native long btVehicleRaycaster_castRay(long jarg1, btVehicleRaycaster jarg1_, Vector3 jarg2, Vector3 jarg3, long jarg4);
@@ -4687,42 +4653,6 @@ public class gdxBulletJNI {
   public static void SwigDirector_btMotionState_setWorldTransform(btMotionState self, Matrix4 worldTrans) {
     self.setWorldTransform(worldTrans);
   }
-  public static boolean SwigDirector_RayResultCallback_needsCollision(RayResultCallback self, long proxy0) {
-    return self.needsCollision((proxy0 == 0) ? null : new btBroadphaseProxy(proxy0, false));
-  }
-  public static float SwigDirector_RayResultCallback_addSingleResult(RayResultCallback self, long rayResult, boolean normalInWorldSpace) {
-    return self.addSingleResult(new LocalRayResult(rayResult, false), normalInWorldSpace);
-  }
-  public static boolean SwigDirector_ClosestRayResultCallback_needsCollision(ClosestRayResultCallback self, long proxy0) {
-    return self.needsCollision((proxy0 == 0) ? null : new btBroadphaseProxy(proxy0, false));
-  }
-  public static float SwigDirector_ClosestRayResultCallback_addSingleResult(ClosestRayResultCallback self, long rayResult, boolean normalInWorldSpace) {
-    return self.addSingleResult(new LocalRayResult(rayResult, false), normalInWorldSpace);
-  }
-  public static boolean SwigDirector_AllHitsRayResultCallback_needsCollision(AllHitsRayResultCallback self, long proxy0) {
-    return self.needsCollision((proxy0 == 0) ? null : new btBroadphaseProxy(proxy0, false));
-  }
-  public static float SwigDirector_AllHitsRayResultCallback_addSingleResult(AllHitsRayResultCallback self, long rayResult, boolean normalInWorldSpace) {
-    return self.addSingleResult(new LocalRayResult(rayResult, false), normalInWorldSpace);
-  }
-  public static boolean SwigDirector_ConvexResultCallback_needsCollision(ConvexResultCallback self, long proxy0) {
-    return self.needsCollision((proxy0 == 0) ? null : new btBroadphaseProxy(proxy0, false));
-  }
-  public static float SwigDirector_ConvexResultCallback_addSingleResult(ConvexResultCallback self, long convexResult, boolean normalInWorldSpace) {
-    return self.addSingleResult(new LocalConvexResult(convexResult, false), normalInWorldSpace);
-  }
-  public static boolean SwigDirector_ClosestConvexResultCallback_needsCollision(ClosestConvexResultCallback self, long proxy0) {
-    return self.needsCollision((proxy0 == 0) ? null : new btBroadphaseProxy(proxy0, false));
-  }
-  public static float SwigDirector_ClosestConvexResultCallback_addSingleResult(ClosestConvexResultCallback self, long convexResult, boolean normalInWorldSpace) {
-    return self.addSingleResult(new LocalConvexResult(convexResult, false), normalInWorldSpace);
-  }
-  public static boolean SwigDirector_ContactResultCallback_needsCollision(ContactResultCallback self, long proxy0) {
-    return self.needsCollision((proxy0 == 0) ? null : new btBroadphaseProxy(proxy0, false));
-  }
-  public static float SwigDirector_ContactResultCallback_addSingleResult(ContactResultCallback self, long cp, long colObj0Wrap, int partId0, int index0, long colObj1Wrap, int partId1, int index1) {
-    return self.addSingleResult(new btManifoldPoint(cp, false), (colObj0Wrap == 0) ? null : new btCollisionObjectWrapper(colObj0Wrap, false), partId0, index0, (colObj1Wrap == 0) ? null : new btCollisionObjectWrapper(colObj1Wrap, false), partId1, index1);
-  }
   public static void SwigDirector_InternalTickCallback_onInternalTick(InternalTickCallback self, long dynamicsWorld, float timeStep) {
     self.onInternalTick((dynamicsWorld == 0) ? null : new btDynamicsWorld(dynamicsWorld, false), timeStep);
   }
diff --git a/extensions/gdx-bullet/jni/swig-src/gdxBullet_wrap.cpp b/extensions/gdx-bullet/jni/swig-src/gdxBullet_wrap.cpp
index 01b30f1..af9660a 100755
--- a/extensions/gdx-bullet/jni/swig-src/gdxBullet_wrap.cpp
+++ b/extensions/gdx-bullet/jni/swig-src/gdxBullet_wrap.cpp
@@ -412,7 +412,7 @@ namespace Swig {
 namespace Swig {
   namespace {
     jclass jclass_gdxBulletJNI = NULL;
-    jmethodID director_methids[38];
+    jmethodID director_methids[26];
   }
 }
 
@@ -1816,9 +1816,6 @@ SWIGINTERN void btCollisionObject_getInterpolationAngularVelocity__SWIG_1(btColl
 typedef btRigidBody::btRigidBodyConstructionInfo btRigidBodyConstructionInfo;
 
 
-#include <BulletCollision/CollisionDispatch/btCollisionObjectWrapper.h>
-
-
 #include <BulletCollision/CollisionDispatch/btEmptyCollisionAlgorithm.h>
 
 
@@ -3009,601 +3006,6 @@ void SwigDirector_btMotionState::swig_connect_director(JNIEnv *jenv, jobject jse
 }
 
 
-SwigDirector_RayResultCallback::SwigDirector_RayResultCallback(JNIEnv *jenv) : RayResultCallback(), Swig::Director(jenv) {
-}
-
-SwigDirector_RayResultCallback::~SwigDirector_RayResultCallback() {
-  swig_disconnect_director_self("swigDirectorDisconnect");
-}
-
-
-bool SwigDirector_RayResultCallback::needsCollision(btBroadphaseProxy *proxy0) const {
-  bool c_result = SwigValueInit< bool >() ;
-  jboolean jresult = 0 ;
-  JNIEnvWrapper swigjnienv(this) ;
-  JNIEnv * jenv = swigjnienv.getJNIEnv() ;
-  jobject swigjobj = (jobject) NULL ;
-  jlong jproxy0 = 0 ;
-  
-  if (!swig_override[0]) {
-    return RayResultCallback::needsCollision(proxy0);
-  }
-  swigjobj = swig_get_self(jenv);
-  if (swigjobj && jenv->IsSameObject(swigjobj, NULL) == JNI_FALSE) {
-    *((btBroadphaseProxy **)&jproxy0) = (btBroadphaseProxy *) proxy0; 
-    jresult = (jboolean) jenv->CallStaticBooleanMethod(Swig::jclass_gdxBulletJNI, Swig::director_methids[25], swigjobj, jproxy0);
-    if (jenv->ExceptionCheck() == JNI_TRUE) return c_result;
-    c_result = jresult ? true : false; 
-  } else {
-    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null upcall object");
-  }
-  if (swigjobj) jenv->DeleteLocalRef(swigjobj);
-  return c_result;
-}
-
-btScalar SwigDirector_RayResultCallback::addSingleResult(LocalRayResult &rayResult, bool normalInWorldSpace) {
-  btScalar c_result = SwigValueInit< btScalar >() ;
-  jfloat jresult = 0 ;
-  JNIEnvWrapper swigjnienv(this) ;
-  JNIEnv * jenv = swigjnienv.getJNIEnv() ;
-  jobject swigjobj = (jobject) NULL ;
-  jlong jrayResult = 0 ;
-  jboolean jnormalInWorldSpace  ;
-  
-  if (!swig_override[1]) {
-    SWIG_JavaThrowException(JNIEnvWrapper(this).getJNIEnv(), SWIG_JavaDirectorPureVirtual, "Attempted to invoke pure virtual method RayResultCallback::addSingleResult.");
-    return c_result;
-  }
-  swigjobj = swig_get_self(jenv);
-  if (swigjobj && jenv->IsSameObject(swigjobj, NULL) == JNI_FALSE) {
-    *(LocalRayResult **)&jrayResult = (LocalRayResult *) &rayResult; 
-    jnormalInWorldSpace = (jboolean) normalInWorldSpace;
-    jresult = (jfloat) jenv->CallStaticFloatMethod(Swig::jclass_gdxBulletJNI, Swig::director_methids[26], swigjobj, jrayResult, jnormalInWorldSpace);
-    if (jenv->ExceptionCheck() == JNI_TRUE) return c_result;
-    c_result = (btScalar)jresult; 
-  } else {
-    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null upcall object");
-  }
-  if (swigjobj) jenv->DeleteLocalRef(swigjobj);
-  return c_result;
-}
-
-void SwigDirector_RayResultCallback::swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global) {
-  static struct {
-    const char *mname;
-    const char *mdesc;
-    jmethodID base_methid;
-  } methods[] = {
-    {
-      "needsCollision", "(Lcom/badlogic/gdx/physics/bullet/btBroadphaseProxy;)Z", NULL 
-    },
-    {
-      "addSingleResult", "(Lcom/badlogic/gdx/physics/bullet/LocalRayResult;Z)F", NULL 
-    }
-  };
-  
-  static jclass baseclass = 0 ;
-  
-  if (swig_set_self(jenv, jself, swig_mem_own, weak_global)) {
-    if (!baseclass) {
-      baseclass = jenv->FindClass("com/badlogic/gdx/physics/bullet/RayResultCallback");
-      if (!baseclass) return;
-      baseclass = (jclass) jenv->NewGlobalRef(baseclass);
-    }
-    bool derived = (jenv->IsSameObject(baseclass, jcls) ? false : true);
-    for (int i = 0; i < 2; ++i) {
-      if (!methods[i].base_methid) {
-        methods[i].base_methid = jenv->GetMethodID(baseclass, methods[i].mname, methods[i].mdesc);
-        if (!methods[i].base_methid) return;
-      }
-      swig_override[i] = false;
-      if (derived) {
-        jmethodID methid = jenv->GetMethodID(jcls, methods[i].mname, methods[i].mdesc);
-        swig_override[i] = (methid != methods[i].base_methid);
-        jenv->ExceptionClear();
-      }
-    }
-  }
-}
-
-
-SwigDirector_ClosestRayResultCallback::SwigDirector_ClosestRayResultCallback(JNIEnv *jenv, btVector3 const &rayFromWorld, btVector3 const &rayToWorld) : ClosestRayResultCallback(rayFromWorld, rayToWorld), Swig::Director(jenv) {
-}
-
-SwigDirector_ClosestRayResultCallback::~SwigDirector_ClosestRayResultCallback() {
-  swig_disconnect_director_self("swigDirectorDisconnect");
-}
-
-
-bool SwigDirector_ClosestRayResultCallback::needsCollision(btBroadphaseProxy *proxy0) const {
-  bool c_result = SwigValueInit< bool >() ;
-  jboolean jresult = 0 ;
-  JNIEnvWrapper swigjnienv(this) ;
-  JNIEnv * jenv = swigjnienv.getJNIEnv() ;
-  jobject swigjobj = (jobject) NULL ;
-  jlong jproxy0 = 0 ;
-  
-  if (!swig_override[0]) {
-    return RayResultCallback::needsCollision(proxy0);
-  }
-  swigjobj = swig_get_self(jenv);
-  if (swigjobj && jenv->IsSameObject(swigjobj, NULL) == JNI_FALSE) {
-    *((btBroadphaseProxy **)&jproxy0) = (btBroadphaseProxy *) proxy0; 
-    jresult = (jboolean) jenv->CallStaticBooleanMethod(Swig::jclass_gdxBulletJNI, Swig::director_methids[27], swigjobj, jproxy0);
-    if (jenv->ExceptionCheck() == JNI_TRUE) return c_result;
-    c_result = jresult ? true : false; 
-  } else {
-    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null upcall object");
-  }
-  if (swigjobj) jenv->DeleteLocalRef(swigjobj);
-  return c_result;
-}
-
-btScalar SwigDirector_ClosestRayResultCallback::addSingleResult(LocalRayResult &rayResult, bool normalInWorldSpace) {
-  btScalar c_result = SwigValueInit< btScalar >() ;
-  jfloat jresult = 0 ;
-  JNIEnvWrapper swigjnienv(this) ;
-  JNIEnv * jenv = swigjnienv.getJNIEnv() ;
-  jobject swigjobj = (jobject) NULL ;
-  jlong jrayResult = 0 ;
-  jboolean jnormalInWorldSpace  ;
-  
-  if (!swig_override[1]) {
-    return ClosestRayResultCallback::addSingleResult(rayResult,normalInWorldSpace);
-  }
-  swigjobj = swig_get_self(jenv);
-  if (swigjobj && jenv->IsSameObject(swigjobj, NULL) == JNI_FALSE) {
-    *(LocalRayResult **)&jrayResult = (LocalRayResult *) &rayResult; 
-    jnormalInWorldSpace = (jboolean) normalInWorldSpace;
-    jresult = (jfloat) jenv->CallStaticFloatMethod(Swig::jclass_gdxBulletJNI, Swig::director_methids[28], swigjobj, jrayResult, jnormalInWorldSpace);
-    if (jenv->ExceptionCheck() == JNI_TRUE) return c_result;
-    c_result = (btScalar)jresult; 
-  } else {
-    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null upcall object");
-  }
-  if (swigjobj) jenv->DeleteLocalRef(swigjobj);
-  return c_result;
-}
-
-void SwigDirector_ClosestRayResultCallback::swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global) {
-  static struct {
-    const char *mname;
-    const char *mdesc;
-    jmethodID base_methid;
-  } methods[] = {
-    {
-      "needsCollision", "(Lcom/badlogic/gdx/physics/bullet/btBroadphaseProxy;)Z", NULL 
-    },
-    {
-      "addSingleResult", "(Lcom/badlogic/gdx/physics/bullet/LocalRayResult;Z)F", NULL 
-    }
-  };
-  
-  static jclass baseclass = 0 ;
-  
-  if (swig_set_self(jenv, jself, swig_mem_own, weak_global)) {
-    if (!baseclass) {
-      baseclass = jenv->FindClass("com/badlogic/gdx/physics/bullet/ClosestRayResultCallback");
-      if (!baseclass) return;
-      baseclass = (jclass) jenv->NewGlobalRef(baseclass);
-    }
-    bool derived = (jenv->IsSameObject(baseclass, jcls) ? false : true);
-    for (int i = 0; i < 2; ++i) {
-      if (!methods[i].base_methid) {
-        methods[i].base_methid = jenv->GetMethodID(baseclass, methods[i].mname, methods[i].mdesc);
-        if (!methods[i].base_methid) return;
-      }
-      swig_override[i] = false;
-      if (derived) {
-        jmethodID methid = jenv->GetMethodID(jcls, methods[i].mname, methods[i].mdesc);
-        swig_override[i] = (methid != methods[i].base_methid);
-        jenv->ExceptionClear();
-      }
-    }
-  }
-}
-
-
-SwigDirector_AllHitsRayResultCallback::SwigDirector_AllHitsRayResultCallback(JNIEnv *jenv, btVector3 const &rayFromWorld, btVector3 const &rayToWorld) : AllHitsRayResultCallback(rayFromWorld, rayToWorld), Swig::Director(jenv) {
-}
-
-SwigDirector_AllHitsRayResultCallback::~SwigDirector_AllHitsRayResultCallback() {
-  swig_disconnect_director_self("swigDirectorDisconnect");
-}
-
-
-bool SwigDirector_AllHitsRayResultCallback::needsCollision(btBroadphaseProxy *proxy0) const {
-  bool c_result = SwigValueInit< bool >() ;
-  jboolean jresult = 0 ;
-  JNIEnvWrapper swigjnienv(this) ;
-  JNIEnv * jenv = swigjnienv.getJNIEnv() ;
-  jobject swigjobj = (jobject) NULL ;
-  jlong jproxy0 = 0 ;
-  
-  if (!swig_override[0]) {
-    return RayResultCallback::needsCollision(proxy0);
-  }
-  swigjobj = swig_get_self(jenv);
-  if (swigjobj && jenv->IsSameObject(swigjobj, NULL) == JNI_FALSE) {
-    *((btBroadphaseProxy **)&jproxy0) = (btBroadphaseProxy *) proxy0; 
-    jresult = (jboolean) jenv->CallStaticBooleanMethod(Swig::jclass_gdxBulletJNI, Swig::director_methids[29], swigjobj, jproxy0);
-    if (jenv->ExceptionCheck() == JNI_TRUE) return c_result;
-    c_result = jresult ? true : false; 
-  } else {
-    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null upcall object");
-  }
-  if (swigjobj) jenv->DeleteLocalRef(swigjobj);
-  return c_result;
-}
-
-btScalar SwigDirector_AllHitsRayResultCallback::addSingleResult(LocalRayResult &rayResult, bool normalInWorldSpace) {
-  btScalar c_result = SwigValueInit< btScalar >() ;
-  jfloat jresult = 0 ;
-  JNIEnvWrapper swigjnienv(this) ;
-  JNIEnv * jenv = swigjnienv.getJNIEnv() ;
-  jobject swigjobj = (jobject) NULL ;
-  jlong jrayResult = 0 ;
-  jboolean jnormalInWorldSpace  ;
-  
-  if (!swig_override[1]) {
-    return AllHitsRayResultCallback::addSingleResult(rayResult,normalInWorldSpace);
-  }
-  swigjobj = swig_get_self(jenv);
-  if (swigjobj && jenv->IsSameObject(swigjobj, NULL) == JNI_FALSE) {
-    *(LocalRayResult **)&jrayResult = (LocalRayResult *) &rayResult; 
-    jnormalInWorldSpace = (jboolean) normalInWorldSpace;
-    jresult = (jfloat) jenv->CallStaticFloatMethod(Swig::jclass_gdxBulletJNI, Swig::director_methids[30], swigjobj, jrayResult, jnormalInWorldSpace);
-    if (jenv->ExceptionCheck() == JNI_TRUE) return c_result;
-    c_result = (btScalar)jresult; 
-  } else {
-    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null upcall object");
-  }
-  if (swigjobj) jenv->DeleteLocalRef(swigjobj);
-  return c_result;
-}
-
-void SwigDirector_AllHitsRayResultCallback::swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global) {
-  static struct {
-    const char *mname;
-    const char *mdesc;
-    jmethodID base_methid;
-  } methods[] = {
-    {
-      "needsCollision", "(Lcom/badlogic/gdx/physics/bullet/btBroadphaseProxy;)Z", NULL 
-    },
-    {
-      "addSingleResult", "(Lcom/badlogic/gdx/physics/bullet/LocalRayResult;Z)F", NULL 
-    }
-  };
-  
-  static jclass baseclass = 0 ;
-  
-  if (swig_set_self(jenv, jself, swig_mem_own, weak_global)) {
-    if (!baseclass) {
-      baseclass = jenv->FindClass("com/badlogic/gdx/physics/bullet/AllHitsRayResultCallback");
-      if (!baseclass) return;
-      baseclass = (jclass) jenv->NewGlobalRef(baseclass);
-    }
-    bool derived = (jenv->IsSameObject(baseclass, jcls) ? false : true);
-    for (int i = 0; i < 2; ++i) {
-      if (!methods[i].base_methid) {
-        methods[i].base_methid = jenv->GetMethodID(baseclass, methods[i].mname, methods[i].mdesc);
-        if (!methods[i].base_methid) return;
-      }
-      swig_override[i] = false;
-      if (derived) {
-        jmethodID methid = jenv->GetMethodID(jcls, methods[i].mname, methods[i].mdesc);
-        swig_override[i] = (methid != methods[i].base_methid);
-        jenv->ExceptionClear();
-      }
-    }
-  }
-}
-
-
-SwigDirector_ConvexResultCallback::SwigDirector_ConvexResultCallback(JNIEnv *jenv) : ConvexResultCallback(), Swig::Director(jenv) {
-}
-
-SwigDirector_ConvexResultCallback::~SwigDirector_ConvexResultCallback() {
-  swig_disconnect_director_self("swigDirectorDisconnect");
-}
-
-
-bool SwigDirector_ConvexResultCallback::needsCollision(btBroadphaseProxy *proxy0) const {
-  bool c_result = SwigValueInit< bool >() ;
-  jboolean jresult = 0 ;
-  JNIEnvWrapper swigjnienv(this) ;
-  JNIEnv * jenv = swigjnienv.getJNIEnv() ;
-  jobject swigjobj = (jobject) NULL ;
-  jlong jproxy0 = 0 ;
-  
-  if (!swig_override[0]) {
-    return ConvexResultCallback::needsCollision(proxy0);
-  }
-  swigjobj = swig_get_self(jenv);
-  if (swigjobj && jenv->IsSameObject(swigjobj, NULL) == JNI_FALSE) {
-    *((btBroadphaseProxy **)&jproxy0) = (btBroadphaseProxy *) proxy0; 
-    jresult = (jboolean) jenv->CallStaticBooleanMethod(Swig::jclass_gdxBulletJNI, Swig::director_methids[31], swigjobj, jproxy0);
-    if (jenv->ExceptionCheck() == JNI_TRUE) return c_result;
-    c_result = jresult ? true : false; 
-  } else {
-    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null upcall object");
-  }
-  if (swigjobj) jenv->DeleteLocalRef(swigjobj);
-  return c_result;
-}
-
-btScalar SwigDirector_ConvexResultCallback::addSingleResult(LocalConvexResult &convexResult, bool normalInWorldSpace) {
-  btScalar c_result = SwigValueInit< btScalar >() ;
-  jfloat jresult = 0 ;
-  JNIEnvWrapper swigjnienv(this) ;
-  JNIEnv * jenv = swigjnienv.getJNIEnv() ;
-  jobject swigjobj = (jobject) NULL ;
-  jlong jconvexResult = 0 ;
-  jboolean jnormalInWorldSpace  ;
-  
-  if (!swig_override[1]) {
-    SWIG_JavaThrowException(JNIEnvWrapper(this).getJNIEnv(), SWIG_JavaDirectorPureVirtual, "Attempted to invoke pure virtual method ConvexResultCallback::addSingleResult.");
-    return c_result;
-  }
-  swigjobj = swig_get_self(jenv);
-  if (swigjobj && jenv->IsSameObject(swigjobj, NULL) == JNI_FALSE) {
-    *(LocalConvexResult **)&jconvexResult = (LocalConvexResult *) &convexResult; 
-    jnormalInWorldSpace = (jboolean) normalInWorldSpace;
-    jresult = (jfloat) jenv->CallStaticFloatMethod(Swig::jclass_gdxBulletJNI, Swig::director_methids[32], swigjobj, jconvexResult, jnormalInWorldSpace);
-    if (jenv->ExceptionCheck() == JNI_TRUE) return c_result;
-    c_result = (btScalar)jresult; 
-  } else {
-    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null upcall object");
-  }
-  if (swigjobj) jenv->DeleteLocalRef(swigjobj);
-  return c_result;
-}
-
-void SwigDirector_ConvexResultCallback::swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global) {
-  static struct {
-    const char *mname;
-    const char *mdesc;
-    jmethodID base_methid;
-  } methods[] = {
-    {
-      "needsCollision", "(Lcom/badlogic/gdx/physics/bullet/btBroadphaseProxy;)Z", NULL 
-    },
-    {
-      "addSingleResult", "(Lcom/badlogic/gdx/physics/bullet/LocalConvexResult;Z)F", NULL 
-    }
-  };
-  
-  static jclass baseclass = 0 ;
-  
-  if (swig_set_self(jenv, jself, swig_mem_own, weak_global)) {
-    if (!baseclass) {
-      baseclass = jenv->FindClass("com/badlogic/gdx/physics/bullet/ConvexResultCallback");
-      if (!baseclass) return;
-      baseclass = (jclass) jenv->NewGlobalRef(baseclass);
-    }
-    bool derived = (jenv->IsSameObject(baseclass, jcls) ? false : true);
-    for (int i = 0; i < 2; ++i) {
-      if (!methods[i].base_methid) {
-        methods[i].base_methid = jenv->GetMethodID(baseclass, methods[i].mname, methods[i].mdesc);
-        if (!methods[i].base_methid) return;
-      }
-      swig_override[i] = false;
-      if (derived) {
-        jmethodID methid = jenv->GetMethodID(jcls, methods[i].mname, methods[i].mdesc);
-        swig_override[i] = (methid != methods[i].base_methid);
-        jenv->ExceptionClear();
-      }
-    }
-  }
-}
-
-
-SwigDirector_ClosestConvexResultCallback::SwigDirector_ClosestConvexResultCallback(JNIEnv *jenv, btVector3 const &convexFromWorld, btVector3 const &convexToWorld) : ClosestConvexResultCallback(convexFromWorld, convexToWorld), Swig::Director(jenv) {
-}
-
-SwigDirector_ClosestConvexResultCallback::~SwigDirector_ClosestConvexResultCallback() {
-  swig_disconnect_director_self("swigDirectorDisconnect");
-}
-
-
-bool SwigDirector_ClosestConvexResultCallback::needsCollision(btBroadphaseProxy *proxy0) const {
-  bool c_result = SwigValueInit< bool >() ;
-  jboolean jresult = 0 ;
-  JNIEnvWrapper swigjnienv(this) ;
-  JNIEnv * jenv = swigjnienv.getJNIEnv() ;
-  jobject swigjobj = (jobject) NULL ;
-  jlong jproxy0 = 0 ;
-  
-  if (!swig_override[0]) {
-    return ConvexResultCallback::needsCollision(proxy0);
-  }
-  swigjobj = swig_get_self(jenv);
-  if (swigjobj && jenv->IsSameObject(swigjobj, NULL) == JNI_FALSE) {
-    *((btBroadphaseProxy **)&jproxy0) = (btBroadphaseProxy *) proxy0; 
-    jresult = (jboolean) jenv->CallStaticBooleanMethod(Swig::jclass_gdxBulletJNI, Swig::director_methids[33], swigjobj, jproxy0);
-    if (jenv->ExceptionCheck() == JNI_TRUE) return c_result;
-    c_result = jresult ? true : false; 
-  } else {
-    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null upcall object");
-  }
-  if (swigjobj) jenv->DeleteLocalRef(swigjobj);
-  return c_result;
-}
-
-btScalar SwigDirector_ClosestConvexResultCallback::addSingleResult(LocalConvexResult &convexResult, bool normalInWorldSpace) {
-  btScalar c_result = SwigValueInit< btScalar >() ;
-  jfloat jresult = 0 ;
-  JNIEnvWrapper swigjnienv(this) ;
-  JNIEnv * jenv = swigjnienv.getJNIEnv() ;
-  jobject swigjobj = (jobject) NULL ;
-  jlong jconvexResult = 0 ;
-  jboolean jnormalInWorldSpace  ;
-  
-  if (!swig_override[1]) {
-    return ClosestConvexResultCallback::addSingleResult(convexResult,normalInWorldSpace);
-  }
-  swigjobj = swig_get_self(jenv);
-  if (swigjobj && jenv->IsSameObject(swigjobj, NULL) == JNI_FALSE) {
-    *(LocalConvexResult **)&jconvexResult = (LocalConvexResult *) &convexResult; 
-    jnormalInWorldSpace = (jboolean) normalInWorldSpace;
-    jresult = (jfloat) jenv->CallStaticFloatMethod(Swig::jclass_gdxBulletJNI, Swig::director_methids[34], swigjobj, jconvexResult, jnormalInWorldSpace);
-    if (jenv->ExceptionCheck() == JNI_TRUE) return c_result;
-    c_result = (btScalar)jresult; 
-  } else {
-    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null upcall object");
-  }
-  if (swigjobj) jenv->DeleteLocalRef(swigjobj);
-  return c_result;
-}
-
-void SwigDirector_ClosestConvexResultCallback::swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global) {
-  static struct {
-    const char *mname;
-    const char *mdesc;
-    jmethodID base_methid;
-  } methods[] = {
-    {
-      "needsCollision", "(Lcom/badlogic/gdx/physics/bullet/btBroadphaseProxy;)Z", NULL 
-    },
-    {
-      "addSingleResult", "(Lcom/badlogic/gdx/physics/bullet/LocalConvexResult;Z)F", NULL 
-    }
-  };
-  
-  static jclass baseclass = 0 ;
-  
-  if (swig_set_self(jenv, jself, swig_mem_own, weak_global)) {
-    if (!baseclass) {
-      baseclass = jenv->FindClass("com/badlogic/gdx/physics/bullet/ClosestConvexResultCallback");
-      if (!baseclass) return;
-      baseclass = (jclass) jenv->NewGlobalRef(baseclass);
-    }
-    bool derived = (jenv->IsSameObject(baseclass, jcls) ? false : true);
-    for (int i = 0; i < 2; ++i) {
-      if (!methods[i].base_methid) {
-        methods[i].base_methid = jenv->GetMethodID(baseclass, methods[i].mname, methods[i].mdesc);
-        if (!methods[i].base_methid) return;
-      }
-      swig_override[i] = false;
-      if (derived) {
-        jmethodID methid = jenv->GetMethodID(jcls, methods[i].mname, methods[i].mdesc);
-        swig_override[i] = (methid != methods[i].base_methid);
-        jenv->ExceptionClear();
-      }
-    }
-  }
-}
-
-
-SwigDirector_ContactResultCallback::SwigDirector_ContactResultCallback(JNIEnv *jenv) : ContactResultCallback(), Swig::Director(jenv) {
-}
-
-SwigDirector_ContactResultCallback::~SwigDirector_ContactResultCallback() {
-  swig_disconnect_director_self("swigDirectorDisconnect");
-}
-
-
-bool SwigDirector_ContactResultCallback::needsCollision(btBroadphaseProxy *proxy0) const {
-  bool c_result = SwigValueInit< bool >() ;
-  jboolean jresult = 0 ;
-  JNIEnvWrapper swigjnienv(this) ;
-  JNIEnv * jenv = swigjnienv.getJNIEnv() ;
-  jobject swigjobj = (jobject) NULL ;
-  jlong jproxy0 = 0 ;
-  
-  if (!swig_override[0]) {
-    return ContactResultCallback::needsCollision(proxy0);
-  }
-  swigjobj = swig_get_self(jenv);
-  if (swigjobj && jenv->IsSameObject(swigjobj, NULL) == JNI_FALSE) {
-    *((btBroadphaseProxy **)&jproxy0) = (btBroadphaseProxy *) proxy0; 
-    jresult = (jboolean) jenv->CallStaticBooleanMethod(Swig::jclass_gdxBulletJNI, Swig::director_methids[35], swigjobj, jproxy0);
-    if (jenv->ExceptionCheck() == JNI_TRUE) return c_result;
-    c_result = jresult ? true : false; 
-  } else {
-    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null upcall object");
-  }
-  if (swigjobj) jenv->DeleteLocalRef(swigjobj);
-  return c_result;
-}
-
-btScalar SwigDirector_ContactResultCallback::addSingleResult(btManifoldPoint &cp, btCollisionObjectWrapper const *colObj0Wrap, int partId0, int index0, btCollisionObjectWrapper const *colObj1Wrap, int partId1, int index1) {
-  btScalar c_result = SwigValueInit< btScalar >() ;
-  jfloat jresult = 0 ;
-  JNIEnvWrapper swigjnienv(this) ;
-  JNIEnv * jenv = swigjnienv.getJNIEnv() ;
-  jobject swigjobj = (jobject) NULL ;
-  jlong jcp = 0 ;
-  jlong jcolObj0Wrap = 0 ;
-  jint jpartId0  ;
-  jint jindex0  ;
-  jlong jcolObj1Wrap = 0 ;
-  jint jpartId1  ;
-  jint jindex1  ;
-  
-  if (!swig_override[1]) {
-    SWIG_JavaThrowException(JNIEnvWrapper(this).getJNIEnv(), SWIG_JavaDirectorPureVirtual, "Attempted to invoke pure virtual method ContactResultCallback::addSingleResult.");
-    return c_result;
-  }
-  swigjobj = swig_get_self(jenv);
-  if (swigjobj && jenv->IsSameObject(swigjobj, NULL) == JNI_FALSE) {
-    *(btManifoldPoint **)&jcp = (btManifoldPoint *) &cp; 
-    *((btCollisionObjectWrapper **)&jcolObj0Wrap) = (btCollisionObjectWrapper *) colObj0Wrap; 
-    jpartId0 = (jint) partId0;
-    jindex0 = (jint) index0;
-    *((btCollisionObjectWrapper **)&jcolObj1Wrap) = (btCollisionObjectWrapper *) colObj1Wrap; 
-    jpartId1 = (jint) partId1;
-    jindex1 = (jint) index1;
-    jresult = (jfloat) jenv->CallStaticFloatMethod(Swig::jclass_gdxBulletJNI, Swig::director_methids[36], swigjobj, jcp, jcolObj0Wrap, jpartId0, jindex0, jcolObj1Wrap, jpartId1, jindex1);
-    if (jenv->ExceptionCheck() == JNI_TRUE) return c_result;
-    c_result = (btScalar)jresult; 
-  } else {
-    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null upcall object");
-  }
-  if (swigjobj) jenv->DeleteLocalRef(swigjobj);
-  return c_result;
-}
-
-void SwigDirector_ContactResultCallback::swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global) {
-  static struct {
-    const char *mname;
-    const char *mdesc;
-    jmethodID base_methid;
-  } methods[] = {
-    {
-      "needsCollision", "(Lcom/badlogic/gdx/physics/bullet/btBroadphaseProxy;)Z", NULL 
-    },
-    {
-      "addSingleResult", "(Lcom/badlogic/gdx/physics/bullet/btManifoldPoint;Lcom/badlogic/gdx/physics/bullet/btCollisionObjectWrapper;IILcom/badlogic/gdx/physics/bullet/btCollisionObjectWrapper;II)F", NULL 
-    }
-  };
-  
-  static jclass baseclass = 0 ;
-  
-  if (swig_set_self(jenv, jself, swig_mem_own, weak_global)) {
-    if (!baseclass) {
-      baseclass = jenv->FindClass("com/badlogic/gdx/physics/bullet/ContactResultCallback");
-      if (!baseclass) return;
-      baseclass = (jclass) jenv->NewGlobalRef(baseclass);
-    }
-    bool derived = (jenv->IsSameObject(baseclass, jcls) ? false : true);
-    for (int i = 0; i < 2; ++i) {
-      if (!methods[i].base_methid) {
-        methods[i].base_methid = jenv->GetMethodID(baseclass, methods[i].mname, methods[i].mdesc);
-        if (!methods[i].base_methid) return;
-      }
-      swig_override[i] = false;
-      if (derived) {
-        jmethodID methid = jenv->GetMethodID(jcls, methods[i].mname, methods[i].mdesc);
-        swig_override[i] = (methid != methods[i].base_methid);
-        jenv->ExceptionClear();
-      }
-    }
-  }
-}
-
-
 SwigDirector_InternalTickCallback::SwigDirector_InternalTickCallback(JNIEnv *jenv, btDynamicsWorld *dynamicsWorld, bool isPreTick) : InternalTickCallback(dynamicsWorld, isPreTick), Swig::Director(jenv) {
 }
 
@@ -3622,7 +3024,7 @@ void SwigDirector_InternalTickCallback::onInternalTick(btDynamicsWorld *dynamics
   if (swigjobj && jenv->IsSameObject(swigjobj, NULL) == JNI_FALSE) {
     *((btDynamicsWorld **)&jdynamicsWorld) = (btDynamicsWorld *) dynamicsWorld; 
     jtimeStep = (jfloat) timeStep;
-    jenv->CallStaticVoidMethod(Swig::jclass_gdxBulletJNI, Swig::director_methids[37], swigjobj, jdynamicsWorld, jtimeStep);
+    jenv->CallStaticVoidMethod(Swig::jclass_gdxBulletJNI, Swig::director_methids[25], swigjobj, jdynamicsWorld, jtimeStep);
     if (jenv->ExceptionCheck() == JNI_TRUE) return ;
   } else {
     SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null upcall object");
@@ -18646,7 +18048,7 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_delete
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCollisionAlgorithm_1processCollision(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_) {
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCollisionAlgorithm_1processCollision(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_) {
   btCollisionAlgorithm *arg1 = (btCollisionAlgorithm *) 0 ;
   btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
   btCollisionObjectWrapper *arg3 = (btCollisionObjectWrapper *) 0 ;
@@ -18656,8 +18058,6 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btColl
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
-  (void)jarg2_;
-  (void)jarg3_;
   (void)jarg4_;
   (void)jarg5_;
   arg1 = *(btCollisionAlgorithm **)&jarg1; 
@@ -20341,7 +19741,7 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_delete
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btDispatcher_1findAlgorithm_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
+SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btDispatcher_1findAlgorithm_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4, jobject jarg4_) {
   jlong jresult = 0 ;
   btDispatcher *arg1 = (btDispatcher *) 0 ;
   btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
@@ -20352,8 +19752,6 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btDis
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
-  (void)jarg2_;
-  (void)jarg3_;
   (void)jarg4_;
   arg1 = *(btDispatcher **)&jarg1; 
   arg2 = *(btCollisionObjectWrapper **)&jarg2; 
@@ -20365,7 +19763,7 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btDis
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btDispatcher_1findAlgorithm_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
+SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btDispatcher_1findAlgorithm_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
   jlong jresult = 0 ;
   btDispatcher *arg1 = (btDispatcher *) 0 ;
   btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
@@ -20375,8 +19773,6 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btDis
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
-  (void)jarg2_;
-  (void)jarg3_;
   arg1 = *(btDispatcher **)&jarg1; 
   arg2 = *(btCollisionObjectWrapper **)&jarg2; 
   arg3 = *(btCollisionObjectWrapper **)&jarg3; 
@@ -37138,155 +36534,6 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_delete
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCollisionObjectWrapper_1m_1parent_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
-  btCollisionObjectWrapper *arg1 = (btCollisionObjectWrapper *) 0 ;
-  btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  (void)jarg2_;
-  arg1 = *(btCollisionObjectWrapper **)&jarg1; 
-  arg2 = *(btCollisionObjectWrapper **)&jarg2; 
-  if (arg1) (arg1)->m_parent = (btCollisionObjectWrapper const *)arg2;
-}
-
-
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCollisionObjectWrapper_1m_1parent_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
-  jlong jresult = 0 ;
-  btCollisionObjectWrapper *arg1 = (btCollisionObjectWrapper *) 0 ;
-  btCollisionObjectWrapper *result = 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  arg1 = *(btCollisionObjectWrapper **)&jarg1; 
-  result = (btCollisionObjectWrapper *) ((arg1)->m_parent);
-  *(btCollisionObjectWrapper **)&jresult = result; 
-  return jresult;
-}
-
-
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCollisionObjectWrapper_1m_1shape_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
-  btCollisionObjectWrapper *arg1 = (btCollisionObjectWrapper *) 0 ;
-  btCollisionShape *arg2 = (btCollisionShape *) 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  (void)jarg2_;
-  arg1 = *(btCollisionObjectWrapper **)&jarg1; 
-  arg2 = *(btCollisionShape **)&jarg2; 
-  if (arg1) (arg1)->m_shape = (btCollisionShape const *)arg2;
-}
-
-
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCollisionObjectWrapper_1m_1shape_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
-  jlong jresult = 0 ;
-  btCollisionObjectWrapper *arg1 = (btCollisionObjectWrapper *) 0 ;
-  btCollisionShape *result = 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  arg1 = *(btCollisionObjectWrapper **)&jarg1; 
-  result = (btCollisionShape *) ((arg1)->m_shape);
-  *(btCollisionShape **)&jresult = result; 
-  return jresult;
-}
-
-
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCollisionObjectWrapper_1m_1collisionObject_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
-  btCollisionObjectWrapper *arg1 = (btCollisionObjectWrapper *) 0 ;
-  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  (void)jarg2_;
-  arg1 = *(btCollisionObjectWrapper **)&jarg1; 
-  arg2 = *(btCollisionObject **)&jarg2; 
-  if (arg1) (arg1)->m_collisionObject = (btCollisionObject const *)arg2;
-}
-
-
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCollisionObjectWrapper_1m_1collisionObject_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
-  jlong jresult = 0 ;
-  btCollisionObjectWrapper *arg1 = (btCollisionObjectWrapper *) 0 ;
-  btCollisionObject *result = 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  arg1 = *(btCollisionObjectWrapper **)&jarg1; 
-  result = (btCollisionObject *) ((arg1)->m_collisionObject);
-  *(btCollisionObject **)&jresult = result; 
-  return jresult;
-}
-
-
-SWIGEXPORT jobject JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCollisionObjectWrapper_1m_1worldTransform_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
-  jobject jresult = 0 ;
-  btCollisionObjectWrapper *arg1 = (btCollisionObjectWrapper *) 0 ;
-  btTransform *result = 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  arg1 = *(btCollisionObjectWrapper **)&jarg1; 
-  result = (btTransform *) &(btTransform const &) ((arg1)->m_worldTransform);
-  jresult = gdx_getReturnMatrix4(jenv);
-  gdx_setMatrix4FrombtTransform(jenv, jresult, result);
-  return jresult;
-}
-
-
-SWIGEXPORT jobject JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCollisionObjectWrapper_1getWorldTransform(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
-  jobject jresult = 0 ;
-  btCollisionObjectWrapper *arg1 = (btCollisionObjectWrapper *) 0 ;
-  btTransform *result = 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  arg1 = *(btCollisionObjectWrapper **)&jarg1; 
-  result = (btTransform *) &((btCollisionObjectWrapper const *)arg1)->getWorldTransform();
-  jresult = gdx_getReturnMatrix4(jenv);
-  gdx_setMatrix4FrombtTransform(jenv, jresult, result);
-  return jresult;
-}
-
-
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCollisionObjectWrapper_1getCollisionObject(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
-  jlong jresult = 0 ;
-  btCollisionObjectWrapper *arg1 = (btCollisionObjectWrapper *) 0 ;
-  btCollisionObject *result = 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  arg1 = *(btCollisionObjectWrapper **)&jarg1; 
-  result = (btCollisionObject *)((btCollisionObjectWrapper const *)arg1)->getCollisionObject();
-  *(btCollisionObject **)&jresult = result; 
-  return jresult;
-}
-
-
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCollisionObjectWrapper_1getCollisionShape(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
-  jlong jresult = 0 ;
-  btCollisionObjectWrapper *arg1 = (btCollisionObjectWrapper *) 0 ;
-  btCollisionShape *result = 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  arg1 = *(btCollisionObjectWrapper **)&jarg1; 
-  result = (btCollisionShape *)((btCollisionObjectWrapper const *)arg1)->getCollisionShape();
-  *(btCollisionShape **)&jresult = result; 
-  return jresult;
-}
-
-
 SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btEmptyAlgorithm(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
   jlong jresult = 0 ;
   btCollisionAlgorithmConstructionInfo *arg1 = 0 ;
@@ -37383,7 +36630,7 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCon
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btConvexTriangleCallback(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jboolean jarg4) {
+SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btConvexTriangleCallback(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jboolean jarg4) {
   jlong jresult = 0 ;
   btDispatcher *arg1 = (btDispatcher *) 0 ;
   btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
@@ -37394,8 +36641,6 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
-  (void)jarg2_;
-  (void)jarg3_;
   arg1 = *(btDispatcher **)&jarg1; 
   arg2 = *(btCollisionObjectWrapper **)&jarg2; 
   arg3 = *(btCollisionObjectWrapper **)&jarg3; 
@@ -37406,7 +36651,7 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btConvexTriangleCallback_1setTimeStepAndCounters(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_, jlong jarg6, jobject jarg6_) {
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btConvexTriangleCallback_1setTimeStepAndCounters(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jlong jarg5, jlong jarg6, jobject jarg6_) {
   btConvexTriangleCallback *arg1 = (btConvexTriangleCallback *) 0 ;
   btScalar arg2 ;
   btDispatcherInfo *arg3 = 0 ;
@@ -37418,8 +36663,6 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btConv
   (void)jcls;
   (void)jarg1_;
   (void)jarg3_;
-  (void)jarg4_;
-  (void)jarg5_;
   (void)jarg6_;
   arg1 = *(btConvexTriangleCallback **)&jarg1; 
   arg2 = (btScalar)jarg2; 
@@ -37499,7 +36742,7 @@ SWIGEXPORT jobject JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btC
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btConvexConcaveCollisionAlgorithm(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jboolean jarg4) {
+SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btConvexConcaveCollisionAlgorithm(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jboolean jarg4) {
   jlong jresult = 0 ;
   btCollisionAlgorithmConstructionInfo *arg1 = 0 ;
   btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
@@ -37510,8 +36753,6 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
-  (void)jarg2_;
-  (void)jarg3_;
   arg1 = *(btCollisionAlgorithmConstructionInfo **)&jarg1;
   if (!arg1) {
     SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "btCollisionAlgorithmConstructionInfo const & reference is null");
@@ -37547,7 +36788,7 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btConv
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btConvexPlaneCollisionAlgorithm(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jboolean jarg5, jint jarg6, jint jarg7) {
+SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btConvexPlaneCollisionAlgorithm(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4, jboolean jarg5, jint jarg6, jint jarg7) {
   jlong jresult = 0 ;
   btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
   btCollisionAlgorithmConstructionInfo *arg2 = 0 ;
@@ -37562,8 +36803,6 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
   (void)jcls;
   (void)jarg1_;
   (void)jarg2_;
-  (void)jarg3_;
-  (void)jarg4_;
   arg1 = *(btPersistentManifold **)&jarg1; 
   arg2 = *(btCollisionAlgorithmConstructionInfo **)&jarg2;
   if (!arg2) {
@@ -37591,7 +36830,7 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_delete
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btConvexPlaneCollisionAlgorithm_1collideSingleContact(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_, jlong jarg6, jobject jarg6_) {
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btConvexPlaneCollisionAlgorithm_1collideSingleContact(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jobject jarg5_, jlong jarg6, jobject jarg6_) {
   btConvexPlaneCollisionAlgorithm *arg1 = (btConvexPlaneCollisionAlgorithm *) 0 ;
   btQuaternion *arg2 = 0 ;
   btCollisionObjectWrapper *arg3 = (btCollisionObjectWrapper *) 0 ;
@@ -37602,8 +36841,6 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btConv
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
-  (void)jarg3_;
-  (void)jarg4_;
   (void)jarg5_;
   (void)jarg6_;
   arg1 = *(btConvexPlaneCollisionAlgorithm **)&jarg1; 
@@ -38114,7 +37351,7 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btManifoldResult_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
+SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btManifoldResult_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
   jlong jresult = 0 ;
   btCollisionObjectWrapper *arg1 = (btCollisionObjectWrapper *) 0 ;
   btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
@@ -38122,8 +37359,6 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
   
   (void)jenv;
   (void)jcls;
-  (void)jarg1_;
-  (void)jarg2_;
   arg1 = *(btCollisionObjectWrapper **)&jarg1; 
   arg2 = *(btCollisionObjectWrapper **)&jarg2; 
   result = (btManifoldResult *)new btManifoldResult((btCollisionObjectWrapper const *)arg1,(btCollisionObjectWrapper const *)arg2);
@@ -38265,28 +37500,26 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btMan
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btManifoldResult_1setBody0Wrap(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btManifoldResult_1setBody0Wrap(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
   btManifoldResult *arg1 = (btManifoldResult *) 0 ;
   btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
   
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
-  (void)jarg2_;
   arg1 = *(btManifoldResult **)&jarg1; 
   arg2 = *(btCollisionObjectWrapper **)&jarg2; 
   (arg1)->setBody0Wrap((btCollisionObjectWrapper const *)arg2);
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btManifoldResult_1setBody1Wrap(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btManifoldResult_1setBody1Wrap(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
   btManifoldResult *arg1 = (btManifoldResult *) 0 ;
   btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
   
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
-  (void)jarg2_;
   arg1 = *(btManifoldResult **)&jarg1; 
   arg2 = *(btCollisionObjectWrapper **)&jarg2; 
   (arg1)->setBody1Wrap((btCollisionObjectWrapper const *)arg2);
@@ -38323,7 +37556,7 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btMan
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btSphereSphereCollisionAlgorithm_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
+SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btSphereSphereCollisionAlgorithm_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4) {
   jlong jresult = 0 ;
   btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
   btCollisionAlgorithmConstructionInfo *arg2 = 0 ;
@@ -38335,8 +37568,6 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
   (void)jcls;
   (void)jarg1_;
   (void)jarg2_;
-  (void)jarg3_;
-  (void)jarg4_;
   arg1 = *(btPersistentManifold **)&jarg1; 
   arg2 = *(btCollisionAlgorithmConstructionInfo **)&jarg2;
   if (!arg2) {
@@ -38399,7 +37630,7 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btBoxBoxCollisionAlgorithm_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
+SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btBoxBoxCollisionAlgorithm_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4) {
   jlong jresult = 0 ;
   btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
   btCollisionAlgorithmConstructionInfo *arg2 = 0 ;
@@ -38411,8 +37642,6 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
   (void)jcls;
   (void)jarg1_;
   (void)jarg2_;
-  (void)jarg3_;
-  (void)jarg4_;
   arg1 = *(btPersistentManifold **)&jarg1; 
   arg2 = *(btCollisionAlgorithmConstructionInfo **)&jarg2;
   if (!arg2) {
@@ -38487,7 +37716,7 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_delete
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCollisionAlgorithmCreateFunc_1CreateCollisionAlgorithm(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
+SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCollisionAlgorithmCreateFunc_1CreateCollisionAlgorithm(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4) {
   jlong jresult = 0 ;
   btCollisionAlgorithmCreateFunc *arg1 = (btCollisionAlgorithmCreateFunc *) 0 ;
   btCollisionAlgorithmConstructionInfo *arg2 = 0 ;
@@ -38499,8 +37728,6 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCol
   (void)jcls;
   (void)jarg1_;
   (void)jarg2_;
-  (void)jarg3_;
-  (void)jarg4_;
   arg1 = *(btCollisionAlgorithmCreateFunc **)&jarg1; 
   arg2 = *(btCollisionAlgorithmConstructionInfo **)&jarg2;
   if (!arg2) {
@@ -38534,7 +37761,7 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btBox2dBox2dCollisionAlgorithm_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
+SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btBox2dBox2dCollisionAlgorithm_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4) {
   jlong jresult = 0 ;
   btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
   btCollisionAlgorithmConstructionInfo *arg2 = 0 ;
@@ -38546,8 +37773,6 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
   (void)jcls;
   (void)jarg1_;
   (void)jarg2_;
-  (void)jarg3_;
-  (void)jarg4_;
   arg1 = *(btPersistentManifold **)&jarg1; 
   arg2 = *(btCollisionAlgorithmConstructionInfo **)&jarg2;
   if (!arg2) {
@@ -38820,7 +38045,7 @@ SWIGEXPORT jint JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btUnio
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btSphereTriangleCollisionAlgorithm_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jboolean jarg5) {
+SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btSphereTriangleCollisionAlgorithm_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4, jboolean jarg5) {
   jlong jresult = 0 ;
   btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
   btCollisionAlgorithmConstructionInfo *arg2 = 0 ;
@@ -38833,8 +38058,6 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
   (void)jcls;
   (void)jarg1_;
   (void)jarg2_;
-  (void)jarg3_;
-  (void)jarg4_;
   arg1 = *(btPersistentManifold **)&jarg1; 
   arg2 = *(btCollisionAlgorithmConstructionInfo **)&jarg2;
   if (!arg2) {
@@ -39806,18 +39029,6 @@ SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_Ra
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1RayResultCallback(JNIEnv *jenv, jclass jcls) {
-  jlong jresult = 0 ;
-  RayResultCallback *result = 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  result = (RayResultCallback *)new SwigDirector_RayResultCallback(jenv);
-  *(RayResultCallback **)&jresult = result; 
-  return jresult;
-}
-
-
 SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_RayResultCallback_1needsCollision(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
   jboolean jresult = 0 ;
   RayResultCallback *arg1 = (RayResultCallback *) 0 ;
@@ -39836,24 +39047,6 @@ SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_Ra
 }
 
 
-SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_RayResultCallback_1needsCollisionSwigExplicitRayResultCallback(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
-  jboolean jresult = 0 ;
-  RayResultCallback *arg1 = (RayResultCallback *) 0 ;
-  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
-  bool result;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  (void)jarg2_;
-  arg1 = *(RayResultCallback **)&jarg1; 
-  arg2 = *(btBroadphaseProxy **)&jarg2; 
-  result = (bool)((RayResultCallback const *)arg1)->RayResultCallback::needsCollision(arg2);
-  jresult = (jboolean)result; 
-  return jresult;
-}
-
-
 SWIGEXPORT jfloat JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_RayResultCallback_1addSingleResult(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jboolean jarg3) {
   jfloat jresult = 0 ;
   RayResultCallback *arg1 = (RayResultCallback *) 0 ;
@@ -39878,26 +39071,6 @@ SWIGEXPORT jfloat JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_RayR
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_RayResultCallback_1director_1connect(JNIEnv *jenv, jclass jcls, jobject jself, jlong objarg, jboolean jswig_mem_own, jboolean jweak_global) {
-  RayResultCallback *obj = *((RayResultCallback **)&objarg);
-  (void)jcls;
-  SwigDirector_RayResultCallback *director = (SwigDirector_RayResultCallback *)(obj);
-  if (director) {
-    director->swig_connect_director(jenv, jself, jenv->GetObjectClass(jself), (jswig_mem_own == JNI_TRUE), (jweak_global == JNI_TRUE));
-  }
-}
-
-
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_RayResultCallback_1change_1ownership(JNIEnv *jenv, jclass jcls, jobject jself, jlong objarg, jboolean jtake_or_release) {
-  RayResultCallback *obj = *((RayResultCallback **)&objarg);
-  SwigDirector_RayResultCallback *director = (SwigDirector_RayResultCallback *)(obj);
-  (void)jcls;
-  if (director) {
-    director->swig_java_change_ownership(jenv, jself, jtake_or_release ? true : false);
-  }
-}
-
-
 SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1ClosestRayResultCallback(JNIEnv *jenv, jclass jcls, jobject jarg1, jobject jarg2) {
   jlong jresult = 0 ;
   btVector3 *arg1 = 0 ;
@@ -39914,7 +39087,7 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
   gdx_setbtVector3FromVector3(jenv, local_arg2, jarg2);
   arg2 = &local_arg2;
   gdxAutoCommitVector3 auto_commit_arg2(jenv, jarg2, &local_arg2);
-  result = (ClosestRayResultCallback *)new SwigDirector_ClosestRayResultCallback(jenv,(btVector3 const &)*arg1,(btVector3 const &)*arg2);
+  result = (ClosestRayResultCallback *)new ClosestRayResultCallback((btVector3 const &)*arg1,(btVector3 const &)*arg2);
   *(ClosestRayResultCallback **)&jresult = result; 
   return jresult;
 }
@@ -40036,54 +39209,6 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_Close
 }
 
 
-SWIGEXPORT jfloat JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_ClosestRayResultCallback_1addSingleResult(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jboolean jarg3) {
-  jfloat jresult = 0 ;
-  ClosestRayResultCallback *arg1 = (ClosestRayResultCallback *) 0 ;
-  LocalRayResult *arg2 = 0 ;
-  bool arg3 ;
-  btScalar result;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  (void)jarg2_;
-  arg1 = *(ClosestRayResultCallback **)&jarg1; 
-  arg2 = *(LocalRayResult **)&jarg2;
-  if (!arg2) {
-    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "LocalRayResult & reference is null");
-    return 0;
-  } 
-  arg3 = jarg3 ? true : false; 
-  result = (btScalar)(arg1)->addSingleResult(*arg2,arg3);
-  jresult = (jfloat)result; 
-  return jresult;
-}
-
-
-SWIGEXPORT jfloat JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_ClosestRayResultCallback_1addSingleResultSwigExplicitClosestRayResultCallback(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jboolean jarg3) {
-  jfloat jresult = 0 ;
-  ClosestRayResultCallback *arg1 = (ClosestRayResultCallback *) 0 ;
-  LocalRayResult *arg2 = 0 ;
-  bool arg3 ;
-  btScalar result;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  (void)jarg2_;
-  arg1 = *(ClosestRayResultCallback **)&jarg1; 
-  arg2 = *(LocalRayResult **)&jarg2;
-  if (!arg2) {
-    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "LocalRayResult & reference is null");
-    return 0;
-  } 
-  arg3 = jarg3 ? true : false; 
-  result = (btScalar)(arg1)->ClosestRayResultCallback::addSingleResult(*arg2,arg3);
-  jresult = (jfloat)result; 
-  return jresult;
-}
-
-
 SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_delete_1ClosestRayResultCallback(JNIEnv *jenv, jclass jcls, jlong jarg1) {
   ClosestRayResultCallback *arg1 = (ClosestRayResultCallback *) 0 ;
   
@@ -40094,26 +39219,6 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_delete
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_ClosestRayResultCallback_1director_1connect(JNIEnv *jenv, jclass jcls, jobject jself, jlong objarg, jboolean jswig_mem_own, jboolean jweak_global) {
-  ClosestRayResultCallback *obj = *((ClosestRayResultCallback **)&objarg);
-  (void)jcls;
-  SwigDirector_ClosestRayResultCallback *director = (SwigDirector_ClosestRayResultCallback *)(obj);
-  if (director) {
-    director->swig_connect_director(jenv, jself, jenv->GetObjectClass(jself), (jswig_mem_own == JNI_TRUE), (jweak_global == JNI_TRUE));
-  }
-}
-
-
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_ClosestRayResultCallback_1change_1ownership(JNIEnv *jenv, jclass jcls, jobject jself, jlong objarg, jboolean jtake_or_release) {
-  ClosestRayResultCallback *obj = *((ClosestRayResultCallback **)&objarg);
-  SwigDirector_ClosestRayResultCallback *director = (SwigDirector_ClosestRayResultCallback *)(obj);
-  (void)jcls;
-  if (director) {
-    director->swig_java_change_ownership(jenv, jself, jtake_or_release ? true : false);
-  }
-}
-
-
 SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1AllHitsRayResultCallback(JNIEnv *jenv, jclass jcls, jobject jarg1, jobject jarg2) {
   jlong jresult = 0 ;
   btVector3 *arg1 = 0 ;
@@ -40130,7 +39235,7 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
   gdx_setbtVector3FromVector3(jenv, local_arg2, jarg2);
   arg2 = &local_arg2;
   gdxAutoCommitVector3 auto_commit_arg2(jenv, jarg2, &local_arg2);
-  result = (AllHitsRayResultCallback *)new SwigDirector_AllHitsRayResultCallback(jenv,(btVector3 const &)*arg1,(btVector3 const &)*arg2);
+  result = (AllHitsRayResultCallback *)new AllHitsRayResultCallback((btVector3 const &)*arg1,(btVector3 const &)*arg2);
   *(AllHitsRayResultCallback **)&jresult = result; 
   return jresult;
 }
@@ -40306,54 +39411,6 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_AllHi
 }
 
 
-SWIGEXPORT jfloat JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_AllHitsRayResultCallback_1addSingleResult(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jboolean jarg3) {
-  jfloat jresult = 0 ;
-  AllHitsRayResultCallback *arg1 = (AllHitsRayResultCallback *) 0 ;
-  LocalRayResult *arg2 = 0 ;
-  bool arg3 ;
-  btScalar result;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  (void)jarg2_;
-  arg1 = *(AllHitsRayResultCallback **)&jarg1; 
-  arg2 = *(LocalRayResult **)&jarg2;
-  if (!arg2) {
-    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "LocalRayResult & reference is null");
-    return 0;
-  } 
-  arg3 = jarg3 ? true : false; 
-  result = (btScalar)(arg1)->addSingleResult(*arg2,arg3);
-  jresult = (jfloat)result; 
-  return jresult;
-}
-
-
-SWIGEXPORT jfloat JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_AllHitsRayResultCallback_1addSingleResultSwigExplicitAllHitsRayResultCallback(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jboolean jarg3) {
-  jfloat jresult = 0 ;
-  AllHitsRayResultCallback *arg1 = (AllHitsRayResultCallback *) 0 ;
-  LocalRayResult *arg2 = 0 ;
-  bool arg3 ;
-  btScalar result;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  (void)jarg2_;
-  arg1 = *(AllHitsRayResultCallback **)&jarg1; 
-  arg2 = *(LocalRayResult **)&jarg2;
-  if (!arg2) {
-    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "LocalRayResult & reference is null");
-    return 0;
-  } 
-  arg3 = jarg3 ? true : false; 
-  result = (btScalar)(arg1)->AllHitsRayResultCallback::addSingleResult(*arg2,arg3);
-  jresult = (jfloat)result; 
-  return jresult;
-}
-
-
 SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_delete_1AllHitsRayResultCallback(JNIEnv *jenv, jclass jcls, jlong jarg1) {
   AllHitsRayResultCallback *arg1 = (AllHitsRayResultCallback *) 0 ;
   
@@ -40364,26 +39421,6 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_delete
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_AllHitsRayResultCallback_1director_1connect(JNIEnv *jenv, jclass jcls, jobject jself, jlong objarg, jboolean jswig_mem_own, jboolean jweak_global) {
-  AllHitsRayResultCallback *obj = *((AllHitsRayResultCallback **)&objarg);
-  (void)jcls;
-  SwigDirector_AllHitsRayResultCallback *director = (SwigDirector_AllHitsRayResultCallback *)(obj);
-  if (director) {
-    director->swig_connect_director(jenv, jself, jenv->GetObjectClass(jself), (jswig_mem_own == JNI_TRUE), (jweak_global == JNI_TRUE));
-  }
-}
-
-
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_AllHitsRayResultCallback_1change_1ownership(JNIEnv *jenv, jclass jcls, jobject jself, jlong objarg, jboolean jtake_or_release) {
-  AllHitsRayResultCallback *obj = *((AllHitsRayResultCallback **)&objarg);
-  SwigDirector_AllHitsRayResultCallback *director = (SwigDirector_AllHitsRayResultCallback *)(obj);
-  (void)jcls;
-  if (director) {
-    director->swig_java_change_ownership(jenv, jself, jtake_or_release ? true : false);
-  }
-}
-
-
 SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1LocalConvexResult(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jobject jarg3, jobject jarg4, jfloat jarg5) {
   jlong jresult = 0 ;
   btCollisionObject *arg1 = (btCollisionObject *) 0 ;
@@ -40652,18 +39689,6 @@ SWIGEXPORT jshort JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_Conv
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1ConvexResultCallback(JNIEnv *jenv, jclass jcls) {
-  jlong jresult = 0 ;
-  ConvexResultCallback *result = 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  result = (ConvexResultCallback *)new SwigDirector_ConvexResultCallback(jenv);
-  *(ConvexResultCallback **)&jresult = result; 
-  return jresult;
-}
-
-
 SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_delete_1ConvexResultCallback(JNIEnv *jenv, jclass jcls, jlong jarg1) {
   ConvexResultCallback *arg1 = (ConvexResultCallback *) 0 ;
   
@@ -40707,24 +39732,6 @@ SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_Co
 }
 
 
-SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_ConvexResultCallback_1needsCollisionSwigExplicitConvexResultCallback(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
-  jboolean jresult = 0 ;
-  ConvexResultCallback *arg1 = (ConvexResultCallback *) 0 ;
-  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
-  bool result;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  (void)jarg2_;
-  arg1 = *(ConvexResultCallback **)&jarg1; 
-  arg2 = *(btBroadphaseProxy **)&jarg2; 
-  result = (bool)((ConvexResultCallback const *)arg1)->ConvexResultCallback::needsCollision(arg2);
-  jresult = (jboolean)result; 
-  return jresult;
-}
-
-
 SWIGEXPORT jfloat JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_ConvexResultCallback_1addSingleResult(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jboolean jarg3) {
   jfloat jresult = 0 ;
   ConvexResultCallback *arg1 = (ConvexResultCallback *) 0 ;
@@ -40749,26 +39756,6 @@ SWIGEXPORT jfloat JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_Conv
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_ConvexResultCallback_1director_1connect(JNIEnv *jenv, jclass jcls, jobject jself, jlong objarg, jboolean jswig_mem_own, jboolean jweak_global) {
-  ConvexResultCallback *obj = *((ConvexResultCallback **)&objarg);
-  (void)jcls;
-  SwigDirector_ConvexResultCallback *director = (SwigDirector_ConvexResultCallback *)(obj);
-  if (director) {
-    director->swig_connect_director(jenv, jself, jenv->GetObjectClass(jself), (jswig_mem_own == JNI_TRUE), (jweak_global == JNI_TRUE));
-  }
-}
-
-
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_ConvexResultCallback_1change_1ownership(JNIEnv *jenv, jclass jcls, jobject jself, jlong objarg, jboolean jtake_or_release) {
-  ConvexResultCallback *obj = *((ConvexResultCallback **)&objarg);
-  SwigDirector_ConvexResultCallback *director = (SwigDirector_ConvexResultCallback *)(obj);
-  (void)jcls;
-  if (director) {
-    director->swig_java_change_ownership(jenv, jself, jtake_or_release ? true : false);
-  }
-}
-
-
 SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1ClosestConvexResultCallback(JNIEnv *jenv, jclass jcls, jobject jarg1, jobject jarg2) {
   jlong jresult = 0 ;
   btVector3 *arg1 = 0 ;
@@ -40785,7 +39772,7 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
   gdx_setbtVector3FromVector3(jenv, local_arg2, jarg2);
   arg2 = &local_arg2;
   gdxAutoCommitVector3 auto_commit_arg2(jenv, jarg2, &local_arg2);
-  result = (ClosestConvexResultCallback *)new SwigDirector_ClosestConvexResultCallback(jenv,(btVector3 const &)*arg1,(btVector3 const &)*arg2);
+  result = (ClosestConvexResultCallback *)new ClosestConvexResultCallback((btVector3 const &)*arg1,(btVector3 const &)*arg2);
   *(ClosestConvexResultCallback **)&jresult = result; 
   return jresult;
 }
@@ -40936,54 +39923,6 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_Close
 }
 
 
-SWIGEXPORT jfloat JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_ClosestConvexResultCallback_1addSingleResult(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jboolean jarg3) {
-  jfloat jresult = 0 ;
-  ClosestConvexResultCallback *arg1 = (ClosestConvexResultCallback *) 0 ;
-  LocalConvexResult *arg2 = 0 ;
-  bool arg3 ;
-  btScalar result;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  (void)jarg2_;
-  arg1 = *(ClosestConvexResultCallback **)&jarg1; 
-  arg2 = *(LocalConvexResult **)&jarg2;
-  if (!arg2) {
-    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "LocalConvexResult & reference is null");
-    return 0;
-  } 
-  arg3 = jarg3 ? true : false; 
-  result = (btScalar)(arg1)->addSingleResult(*arg2,arg3);
-  jresult = (jfloat)result; 
-  return jresult;
-}
-
-
-SWIGEXPORT jfloat JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_ClosestConvexResultCallback_1addSingleResultSwigExplicitClosestConvexResultCallback(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jboolean jarg3) {
-  jfloat jresult = 0 ;
-  ClosestConvexResultCallback *arg1 = (ClosestConvexResultCallback *) 0 ;
-  LocalConvexResult *arg2 = 0 ;
-  bool arg3 ;
-  btScalar result;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  (void)jarg2_;
-  arg1 = *(ClosestConvexResultCallback **)&jarg1; 
-  arg2 = *(LocalConvexResult **)&jarg2;
-  if (!arg2) {
-    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "LocalConvexResult & reference is null");
-    return 0;
-  } 
-  arg3 = jarg3 ? true : false; 
-  result = (btScalar)(arg1)->ClosestConvexResultCallback::addSingleResult(*arg2,arg3);
-  jresult = (jfloat)result; 
-  return jresult;
-}
-
-
 SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_delete_1ClosestConvexResultCallback(JNIEnv *jenv, jclass jcls, jlong jarg1) {
   ClosestConvexResultCallback *arg1 = (ClosestConvexResultCallback *) 0 ;
   
@@ -40994,26 +39933,6 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_delete
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_ClosestConvexResultCallback_1director_1connect(JNIEnv *jenv, jclass jcls, jobject jself, jlong objarg, jboolean jswig_mem_own, jboolean jweak_global) {
-  ClosestConvexResultCallback *obj = *((ClosestConvexResultCallback **)&objarg);
-  (void)jcls;
-  SwigDirector_ClosestConvexResultCallback *director = (SwigDirector_ClosestConvexResultCallback *)(obj);
-  if (director) {
-    director->swig_connect_director(jenv, jself, jenv->GetObjectClass(jself), (jswig_mem_own == JNI_TRUE), (jweak_global == JNI_TRUE));
-  }
-}
-
-
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_ClosestConvexResultCallback_1change_1ownership(JNIEnv *jenv, jclass jcls, jobject jself, jlong objarg, jboolean jtake_or_release) {
-  ClosestConvexResultCallback *obj = *((ClosestConvexResultCallback **)&objarg);
-  SwigDirector_ClosestConvexResultCallback *director = (SwigDirector_ClosestConvexResultCallback *)(obj);
-  (void)jcls;
-  if (director) {
-    director->swig_java_change_ownership(jenv, jself, jtake_or_release ? true : false);
-  }
-}
-
-
 SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_ContactResultCallback_1m_1collisionFilterGroup_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jshort jarg2) {
   ContactResultCallback *arg1 = (ContactResultCallback *) 0 ;
   short arg2 ;
@@ -41070,18 +39989,6 @@ SWIGEXPORT jshort JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_Cont
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1ContactResultCallback(JNIEnv *jenv, jclass jcls) {
-  jlong jresult = 0 ;
-  ContactResultCallback *result = 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  result = (ContactResultCallback *)new SwigDirector_ContactResultCallback(jenv);
-  *(ContactResultCallback **)&jresult = result; 
-  return jresult;
-}
-
-
 SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_delete_1ContactResultCallback(JNIEnv *jenv, jclass jcls, jlong jarg1) {
   ContactResultCallback *arg1 = (ContactResultCallback *) 0 ;
   
@@ -41110,25 +40017,7 @@ SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_Co
 }
 
 
-SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_ContactResultCallback_1needsCollisionSwigExplicitContactResultCallback(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
-  jboolean jresult = 0 ;
-  ContactResultCallback *arg1 = (ContactResultCallback *) 0 ;
-  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
-  bool result;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  (void)jarg2_;
-  arg1 = *(ContactResultCallback **)&jarg1; 
-  arg2 = *(btBroadphaseProxy **)&jarg2; 
-  result = (bool)((ContactResultCallback const *)arg1)->ContactResultCallback::needsCollision(arg2);
-  jresult = (jboolean)result; 
-  return jresult;
-}
-
-
-SWIGEXPORT jfloat JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_ContactResultCallback_1addSingleResult(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5, jlong jarg6, jobject jarg6_, jint jarg7, jint jarg8) {
+SWIGEXPORT jfloat JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_ContactResultCallback_1addSingleResult(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4, jint jarg5, jlong jarg6, jint jarg7, jint jarg8) {
   jfloat jresult = 0 ;
   ContactResultCallback *arg1 = (ContactResultCallback *) 0 ;
   btManifoldPoint *arg2 = 0 ;
@@ -41144,8 +40033,6 @@ SWIGEXPORT jfloat JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_Cont
   (void)jcls;
   (void)jarg1_;
   (void)jarg2_;
-  (void)jarg3_;
-  (void)jarg6_;
   arg1 = *(ContactResultCallback **)&jarg1; 
   arg2 = *(btManifoldPoint **)&jarg2;
   if (!arg2) {
@@ -41164,26 +40051,6 @@ SWIGEXPORT jfloat JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_Cont
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_ContactResultCallback_1director_1connect(JNIEnv *jenv, jclass jcls, jobject jself, jlong objarg, jboolean jswig_mem_own, jboolean jweak_global) {
-  ContactResultCallback *obj = *((ContactResultCallback **)&objarg);
-  (void)jcls;
-  SwigDirector_ContactResultCallback *director = (SwigDirector_ContactResultCallback *)(obj);
-  if (director) {
-    director->swig_connect_director(jenv, jself, jenv->GetObjectClass(jself), (jswig_mem_own == JNI_TRUE), (jweak_global == JNI_TRUE));
-  }
-}
-
-
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_ContactResultCallback_1change_1ownership(JNIEnv *jenv, jclass jcls, jobject jself, jlong objarg, jboolean jtake_or_release) {
-  ContactResultCallback *obj = *((ContactResultCallback **)&objarg);
-  SwigDirector_ContactResultCallback *director = (SwigDirector_ContactResultCallback *)(obj);
-  (void)jcls;
-  if (director) {
-    director->swig_java_change_ownership(jenv, jself, jtake_or_release ? true : false);
-  }
-}
-
-
 SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btCollisionWorld(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
   jlong jresult = 0 ;
   btDispatcher *arg1 = (btDispatcher *) 0 ;
@@ -41551,7 +40418,7 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btColl
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCollisionWorld_1rayTestSingleInternal(JNIEnv *jenv, jclass jcls, jobject jarg1, jobject jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCollisionWorld_1rayTestSingleInternal(JNIEnv *jenv, jclass jcls, jobject jarg1, jobject jarg2, jlong jarg3, jlong jarg4, jobject jarg4_) {
   btTransform *arg1 = 0 ;
   btTransform *arg2 = 0 ;
   btCollisionObjectWrapper *arg3 = (btCollisionObjectWrapper *) 0 ;
@@ -41559,7 +40426,6 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btColl
   
   (void)jenv;
   (void)jcls;
-  (void)jarg3_;
   (void)jarg4_;
   btTransform local_arg1;
   gdx_setbtTransformFromMatrix4(jenv, local_arg1, jarg1);
@@ -41620,7 +40486,7 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btColl
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCollisionWorld_1objectQuerySingleInternal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jobject jarg3, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_, jfloat jarg6) {
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCollisionWorld_1objectQuerySingleInternal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jobject jarg3, jlong jarg4, jlong jarg5, jobject jarg5_, jfloat jarg6) {
   btConvexShape *arg1 = (btConvexShape *) 0 ;
   btTransform *arg2 = 0 ;
   btTransform *arg3 = 0 ;
@@ -41631,7 +40497,6 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btColl
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
-  (void)jarg4_;
   (void)jarg5_;
   arg1 = *(btConvexShape **)&jarg1; 
   btTransform local_arg2;
@@ -41914,7 +40779,7 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_delete
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btConvex2dConvex2dAlgorithm(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jlong jarg6, jobject jarg6_, jint jarg7, jint jarg8) {
+SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btConvex2dConvex2dAlgorithm(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4, jlong jarg5, jlong jarg6, jobject jarg6_, jint jarg7, jint jarg8) {
   jlong jresult = 0 ;
   btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
   btCollisionAlgorithmConstructionInfo *arg2 = 0 ;
@@ -41930,8 +40795,6 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
   (void)jcls;
   (void)jarg1_;
   (void)jarg2_;
-  (void)jarg3_;
-  (void)jarg4_;
   (void)jarg6_;
   arg1 = *(btPersistentManifold **)&jarg1; 
   arg2 = *(btCollisionAlgorithmConstructionInfo **)&jarg2;
@@ -42133,7 +40996,7 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btBoxB
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btSphereBoxCollisionAlgorithm(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jboolean jarg5) {
+SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btSphereBoxCollisionAlgorithm(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4, jboolean jarg5) {
   jlong jresult = 0 ;
   btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
   btCollisionAlgorithmConstructionInfo *arg2 = 0 ;
@@ -42146,8 +41009,6 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
   (void)jcls;
   (void)jarg1_;
   (void)jarg2_;
-  (void)jarg3_;
-  (void)jarg4_;
   arg1 = *(btPersistentManifold **)&jarg1; 
   arg2 = *(btCollisionAlgorithmConstructionInfo **)&jarg2;
   if (!arg2) {
@@ -42173,7 +41034,7 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_delete
 }
 
 
-SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btSphereBoxCollisionAlgorithm_1getSphereDistance(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jobject jarg3, jobject jarg4, jlong jarg5, jobject jarg6, jfloat jarg7, jfloat jarg8) {
+SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btSphereBoxCollisionAlgorithm_1getSphereDistance(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg3, jobject jarg4, jlong jarg5, jobject jarg6, jfloat jarg7, jfloat jarg8) {
   jboolean jresult = 0 ;
   btSphereBoxCollisionAlgorithm *arg1 = (btSphereBoxCollisionAlgorithm *) 0 ;
   btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
@@ -42188,7 +41049,6 @@ SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_bt
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
-  (void)jarg2_;
   arg1 = *(btSphereBoxCollisionAlgorithm **)&jarg1; 
   arg2 = *(btCollisionObjectWrapper **)&jarg2; 
   btVector3 local_arg3;
@@ -42339,7 +41199,7 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_delete
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCollisionDispatcher_1findAlgorithm_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
+SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCollisionDispatcher_1findAlgorithm_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4, jobject jarg4_) {
   jlong jresult = 0 ;
   btCollisionDispatcher *arg1 = (btCollisionDispatcher *) 0 ;
   btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
@@ -42350,8 +41210,6 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCol
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
-  (void)jarg2_;
-  (void)jarg3_;
   (void)jarg4_;
   arg1 = *(btCollisionDispatcher **)&jarg1; 
   arg2 = *(btCollisionObjectWrapper **)&jarg2; 
@@ -42363,7 +41221,7 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCol
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCollisionDispatcher_1findAlgorithm_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
+SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCollisionDispatcher_1findAlgorithm_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
   jlong jresult = 0 ;
   btCollisionDispatcher *arg1 = (btCollisionDispatcher *) 0 ;
   btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
@@ -42373,8 +41231,6 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCol
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
-  (void)jarg2_;
-  (void)jarg3_;
   arg1 = *(btCollisionDispatcher **)&jarg1; 
   arg2 = *(btCollisionObjectWrapper **)&jarg2; 
   arg3 = *(btCollisionObjectWrapper **)&jarg3; 
@@ -42485,7 +41341,7 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btCol
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btConvexConvexAlgorithm(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jlong jarg6, jobject jarg6_, jint jarg7, jint jarg8) {
+SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btConvexConvexAlgorithm(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4, jlong jarg5, jlong jarg6, jobject jarg6_, jint jarg7, jint jarg8) {
   jlong jresult = 0 ;
   btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
   btCollisionAlgorithmConstructionInfo *arg2 = 0 ;
@@ -42501,8 +41357,6 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
   (void)jcls;
   (void)jarg1_;
   (void)jarg2_;
-  (void)jarg3_;
-  (void)jarg4_;
   (void)jarg6_;
   arg1 = *(btPersistentManifold **)&jarg1; 
   arg2 = *(btCollisionAlgorithmConstructionInfo **)&jarg2;
@@ -42706,7 +41560,7 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btGene
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btAdjustInternalEdgeContacts_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5, jint jarg6) {
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btAdjustInternalEdgeContacts_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jint jarg4, jint jarg5, jint jarg6) {
   btManifoldPoint *arg1 = 0 ;
   btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
   btCollisionObjectWrapper *arg3 = (btCollisionObjectWrapper *) 0 ;
@@ -42717,8 +41571,6 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btAdju
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
-  (void)jarg2_;
-  (void)jarg3_;
   arg1 = *(btManifoldPoint **)&jarg1;
   if (!arg1) {
     SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "btManifoldPoint & reference is null");
@@ -42733,7 +41585,7 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btAdju
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btAdjustInternalEdgeContacts_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btAdjustInternalEdgeContacts_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jint jarg4, jint jarg5) {
   btManifoldPoint *arg1 = 0 ;
   btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
   btCollisionObjectWrapper *arg3 = (btCollisionObjectWrapper *) 0 ;
@@ -42743,8 +41595,6 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btAdju
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
-  (void)jarg2_;
-  (void)jarg3_;
   arg1 = *(btManifoldPoint **)&jarg1;
   if (!arg1) {
     SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "btManifoldPoint & reference is null");
@@ -42758,7 +41608,7 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btAdju
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btCompoundCollisionAlgorithm(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jboolean jarg4) {
+SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btCompoundCollisionAlgorithm(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jboolean jarg4) {
   jlong jresult = 0 ;
   btCollisionAlgorithmConstructionInfo *arg1 = 0 ;
   btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
@@ -42769,8 +41619,6 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
-  (void)jarg2_;
-  (void)jarg3_;
   arg1 = *(btCollisionAlgorithmConstructionInfo **)&jarg1;
   if (!arg1) {
     SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "btCollisionAlgorithmConstructionInfo const & reference is null");
@@ -60824,7 +59672,7 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btSoft
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btSoftBodySolver_1processCollision_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btSoftBodySolver_1processCollision_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
   btSoftBodySolver *arg1 = (btSoftBodySolver *) 0 ;
   btSoftBody *arg2 = (btSoftBody *) 0 ;
   btCollisionObjectWrapper *arg3 = (btCollisionObjectWrapper *) 0 ;
@@ -60833,7 +59681,6 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btSoft
   (void)jcls;
   (void)jarg1_;
   (void)jarg2_;
-  (void)jarg3_;
   arg1 = *(btSoftBodySolver **)&jarg1; 
   arg2 = *(btSoftBody **)&jarg2; 
   arg3 = *(btCollisionObjectWrapper **)&jarg3; 
@@ -61055,7 +59902,7 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btDefa
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btDefaultSoftBodySolver_1processCollision_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btDefaultSoftBodySolver_1processCollision_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
   btDefaultSoftBodySolver *arg1 = (btDefaultSoftBodySolver *) 0 ;
   btSoftBody *arg2 = (btSoftBody *) 0 ;
   btCollisionObjectWrapper *arg3 = (btCollisionObjectWrapper *) 0 ;
@@ -61064,7 +59911,6 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btDefa
   (void)jcls;
   (void)jarg1_;
   (void)jarg2_;
-  (void)jarg3_;
   arg1 = *(btDefaultSoftBodySolver **)&jarg1; 
   arg2 = *(btSoftBody **)&jarg2; 
   arg3 = *(btCollisionObjectWrapper **)&jarg3; 
@@ -65473,14 +64319,13 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btSoft
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btSoftBody_1defaultCollisionHandler_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btSoftBody_1defaultCollisionHandler_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
   btSoftBody *arg1 = (btSoftBody *) 0 ;
   btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
   
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
-  (void)jarg2_;
   arg1 = *(btSoftBody **)&jarg1; 
   arg2 = *(btCollisionObjectWrapper **)&jarg2; 
   (arg1)->defaultCollisionHandler((btCollisionObjectWrapper const *)arg2);
@@ -65711,7 +64556,7 @@ SWIGEXPORT jobject JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btS
 }
 
 
-SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btSoftBody_1checkContact(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jobject jarg3, jfloat jarg4, jlong jarg5, jobject jarg5_) {
+SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btSoftBody_1checkContact(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg3, jfloat jarg4, jlong jarg5, jobject jarg5_) {
   jboolean jresult = 0 ;
   btSoftBody *arg1 = (btSoftBody *) 0 ;
   btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
@@ -65723,7 +64568,6 @@ SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_bt
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
-  (void)jarg2_;
   (void)jarg5_;
   arg1 = *(btSoftBody **)&jarg1; 
   arg2 = *(btCollisionObjectWrapper **)&jarg2; 
@@ -66627,7 +65471,7 @@ SWIGEXPORT jint JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btSoft
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btSoftBodyTriangleCallback(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jboolean jarg4) {
+SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btSoftBodyTriangleCallback(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jboolean jarg4) {
   jlong jresult = 0 ;
   btDispatcher *arg1 = (btDispatcher *) 0 ;
   btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
@@ -66638,8 +65482,6 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
-  (void)jarg2_;
-  (void)jarg3_;
   arg1 = *(btDispatcher **)&jarg1; 
   arg2 = *(btCollisionObjectWrapper **)&jarg2; 
   arg3 = *(btCollisionObjectWrapper **)&jarg3; 
@@ -66650,7 +65492,7 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btSoftBodyTriangleCallback_1setTimeStepAndCounters(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_) {
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btSoftBodyTriangleCallback_1setTimeStepAndCounters(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jlong jarg3, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_) {
   btSoftBodyTriangleCallback *arg1 = (btSoftBodyTriangleCallback *) 0 ;
   btScalar arg2 ;
   btCollisionObjectWrapper *arg3 = (btCollisionObjectWrapper *) 0 ;
@@ -66660,7 +65502,6 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btSoft
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
-  (void)jarg3_;
   (void)jarg4_;
   (void)jarg5_;
   arg1 = *(btSoftBodyTriangleCallback **)&jarg1; 
@@ -66729,7 +65570,7 @@ SWIGEXPORT jobject JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btS
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btSoftBodyConcaveCollisionAlgorithm(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jboolean jarg4) {
+SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btSoftBodyConcaveCollisionAlgorithm(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jboolean jarg4) {
   jlong jresult = 0 ;
   btCollisionAlgorithmConstructionInfo *arg1 = 0 ;
   btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
@@ -66740,8 +65581,6 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
-  (void)jarg2_;
-  (void)jarg3_;
   arg1 = *(btCollisionAlgorithmConstructionInfo **)&jarg1;
   if (!arg1) {
     SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "btCollisionAlgorithmConstructionInfo const & reference is null");
@@ -72673,7 +71512,7 @@ SWIGEXPORT jobject JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_btC
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btSoftRigidCollisionAlgorithm(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jboolean jarg5) {
+SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btSoftRigidCollisionAlgorithm(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4, jboolean jarg5) {
   jlong jresult = 0 ;
   btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
   btCollisionAlgorithmConstructionInfo *arg2 = 0 ;
@@ -72686,8 +71525,6 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
   (void)jcls;
   (void)jarg1_;
   (void)jarg2_;
-  (void)jarg3_;
-  (void)jarg4_;
   arg1 = *(btPersistentManifold **)&jarg1; 
   arg2 = *(btCollisionAlgorithmConstructionInfo **)&jarg2;
   if (!arg2) {
@@ -72949,7 +71786,7 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btSoftSoftCollisionAlgorithm_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
+SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1btSoftSoftCollisionAlgorithm_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4) {
   jlong jresult = 0 ;
   btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
   btCollisionAlgorithmConstructionInfo *arg2 = 0 ;
@@ -72961,8 +71798,6 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_new_1
   (void)jcls;
   (void)jarg1_;
   (void)jarg2_;
-  (void)jarg3_;
-  (void)jarg4_;
   arg1 = *(btPersistentManifold **)&jarg1; 
   arg2 = *(btCollisionAlgorithmConstructionInfo **)&jarg2;
   if (!arg2) {
@@ -76274,7 +75109,7 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_swig_1
   static struct {
     const char *method;
     const char *signature;
-  } methods[38] = {
+  } methods[26] = {
     {
       "SwigDirector_btIDebugDraw_drawLine__SWIG_0", "(Lcom/badlogic/gdx/physics/bullet/btIDebugDraw;JJJ)V" 
     },
@@ -76351,42 +75186,6 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_gdxBulletJNI_swig_1
       "SwigDirector_btMotionState_setWorldTransform", "(Lcom/badlogic/gdx/physics/bullet/btMotionState;Lcom/badlogic/gdx/math/Matrix4;)V" 
     },
     {
-      "SwigDirector_RayResultCallback_needsCollision", "(Lcom/badlogic/gdx/physics/bullet/RayResultCallback;J)Z" 
-    },
-    {
-      "SwigDirector_RayResultCallback_addSingleResult", "(Lcom/badlogic/gdx/physics/bullet/RayResultCallback;JZ)F" 
-    },
-    {
-      "SwigDirector_ClosestRayResultCallback_needsCollision", "(Lcom/badlogic/gdx/physics/bullet/ClosestRayResultCallback;J)Z" 
-    },
-    {
-      "SwigDirector_ClosestRayResultCallback_addSingleResult", "(Lcom/badlogic/gdx/physics/bullet/ClosestRayResultCallback;JZ)F" 
-    },
-    {
-      "SwigDirector_AllHitsRayResultCallback_needsCollision", "(Lcom/badlogic/gdx/physics/bullet/AllHitsRayResultCallback;J)Z" 
-    },
-    {
-      "SwigDirector_AllHitsRayResultCallback_addSingleResult", "(Lcom/badlogic/gdx/physics/bullet/AllHitsRayResultCallback;JZ)F" 
-    },
-    {
-      "SwigDirector_ConvexResultCallback_needsCollision", "(Lcom/badlogic/gdx/physics/bullet/ConvexResultCallback;J)Z" 
-    },
-    {
-      "SwigDirector_ConvexResultCallback_addSingleResult", "(Lcom/badlogic/gdx/physics/bullet/ConvexResultCallback;JZ)F" 
-    },
-    {
-      "SwigDirector_ClosestConvexResultCallback_needsCollision", "(Lcom/badlogic/gdx/physics/bullet/ClosestConvexResultCallback;J)Z" 
-    },
-    {
-      "SwigDirector_ClosestConvexResultCallback_addSingleResult", "(Lcom/badlogic/gdx/physics/bullet/ClosestConvexResultCallback;JZ)F" 
-    },
-    {
-      "SwigDirector_ContactResultCallback_needsCollision", "(Lcom/badlogic/gdx/physics/bullet/ContactResultCallback;J)Z" 
-    },
-    {
-      "SwigDirector_ContactResultCallback_addSingleResult", "(Lcom/badlogic/gdx/physics/bullet/ContactResultCallback;JJIIJII)F" 
-    },
-    {
       "SwigDirector_InternalTickCallback_onInternalTick", "(Lcom/badlogic/gdx/physics/bullet/InternalTickCallback;JF)V" 
     }
   };
diff --git a/extensions/gdx-bullet/jni/swig-src/gdxBullet_wrap.h b/extensions/gdx-bullet/jni/swig-src/gdxBullet_wrap.h
index 031a840..741ca05 100755
--- a/extensions/gdx-bullet/jni/swig-src/gdxBullet_wrap.h
+++ b/extensions/gdx-bullet/jni/swig-src/gdxBullet_wrap.h
@@ -62,102 +62,6 @@ protected:
     bool swig_override[2];
 };
 
-struct SwigDirector_RayResultCallback : public RayResultCallback, public Swig::Director {
-
-public:
-    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
-    SwigDirector_RayResultCallback(JNIEnv *jenv);
-    virtual ~SwigDirector_RayResultCallback();
-    virtual bool needsCollision(btBroadphaseProxy *proxy0) const;
-    virtual btScalar addSingleResult(LocalRayResult &rayResult, bool normalInWorldSpace);
-public:
-    bool swig_overrides(int n) {
-      return (n < 2 ? swig_override[n] : false);
-    }
-protected:
-    bool swig_override[2];
-};
-
-struct SwigDirector_ClosestRayResultCallback : public ClosestRayResultCallback, public Swig::Director {
-
-public:
-    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
-    SwigDirector_ClosestRayResultCallback(JNIEnv *jenv, btVector3 const &rayFromWorld, btVector3 const &rayToWorld);
-    virtual ~SwigDirector_ClosestRayResultCallback();
-    virtual bool needsCollision(btBroadphaseProxy *proxy0) const;
-    virtual btScalar addSingleResult(LocalRayResult &rayResult, bool normalInWorldSpace);
-public:
-    bool swig_overrides(int n) {
-      return (n < 2 ? swig_override[n] : false);
-    }
-protected:
-    bool swig_override[2];
-};
-
-struct SwigDirector_AllHitsRayResultCallback : public AllHitsRayResultCallback, public Swig::Director {
-
-public:
-    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
-    SwigDirector_AllHitsRayResultCallback(JNIEnv *jenv, btVector3 const &rayFromWorld, btVector3 const &rayToWorld);
-    virtual ~SwigDirector_AllHitsRayResultCallback();
-    virtual bool needsCollision(btBroadphaseProxy *proxy0) const;
-    virtual btScalar addSingleResult(LocalRayResult &rayResult, bool normalInWorldSpace);
-public:
-    bool swig_overrides(int n) {
-      return (n < 2 ? swig_override[n] : false);
-    }
-protected:
-    bool swig_override[2];
-};
-
-struct SwigDirector_ConvexResultCallback : public ConvexResultCallback, public Swig::Director {
-
-public:
-    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
-    SwigDirector_ConvexResultCallback(JNIEnv *jenv);
-    virtual ~SwigDirector_ConvexResultCallback();
-    virtual bool needsCollision(btBroadphaseProxy *proxy0) const;
-    virtual btScalar addSingleResult(LocalConvexResult &convexResult, bool normalInWorldSpace);
-public:
-    bool swig_overrides(int n) {
-      return (n < 2 ? swig_override[n] : false);
-    }
-protected:
-    bool swig_override[2];
-};
-
-struct SwigDirector_ClosestConvexResultCallback : public ClosestConvexResultCallback, public Swig::Director {
-
-public:
-    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
-    SwigDirector_ClosestConvexResultCallback(JNIEnv *jenv, btVector3 const &convexFromWorld, btVector3 const &convexToWorld);
-    virtual ~SwigDirector_ClosestConvexResultCallback();
-    virtual bool needsCollision(btBroadphaseProxy *proxy0) const;
-    virtual btScalar addSingleResult(LocalConvexResult &convexResult, bool normalInWorldSpace);
-public:
-    bool swig_overrides(int n) {
-      return (n < 2 ? swig_override[n] : false);
-    }
-protected:
-    bool swig_override[2];
-};
-
-struct SwigDirector_ContactResultCallback : public ContactResultCallback, public Swig::Director {
-
-public:
-    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
-    SwigDirector_ContactResultCallback(JNIEnv *jenv);
-    virtual ~SwigDirector_ContactResultCallback();
-    virtual bool needsCollision(btBroadphaseProxy *proxy0) const;
-    virtual btScalar addSingleResult(btManifoldPoint &cp, btCollisionObjectWrapper const *colObj0Wrap, int partId0, int index0, btCollisionObjectWrapper const *colObj1Wrap, int partId1, int index1);
-public:
-    bool swig_overrides(int n) {
-      return (n < 2 ? swig_override[n] : false);
-    }
-protected:
-    bool swig_override[2];
-};
-
 class SwigDirector_InternalTickCallback : public InternalTickCallback, public Swig::Director {
 
 public:
diff --git a/extensions/gdx-bullet/jni/swig/custom/btBvhTriangleMeshShape.i b/extensions/gdx-bullet/jni/swig/custom/btBvhTriangleMeshShape.i
index bbdb707..de34be5 100644
--- a/extensions/gdx-bullet/jni/swig/custom/btBvhTriangleMeshShape.i
+++ b/extensions/gdx-bullet/jni/swig/custom/btBvhTriangleMeshShape.i
@@ -8,7 +8,7 @@
 %}
 
 %typemap(javacode) btBvhTriangleMeshShape %{
-	protected btStridingMeshInterface meshInterface = null;
+	btStridingMeshInterface meshInterface = null;
 	
 	/** @param managed If true this btBvhTriangleMeshShape will keep a reference to the {@link btStridingMeshInterface}
 	 * and deletes it when this btBvhTriangleMeshShape gets deleted. */
diff --git a/extensions/gdx-bullet/jni/swig/custom/btCollisionObject.i b/extensions/gdx-bullet/jni/swig/custom/btCollisionObject.i
index 954fd00..9d3b8f4 100644
--- a/extensions/gdx-bullet/jni/swig/custom/btCollisionObject.i
+++ b/extensions/gdx-bullet/jni/swig/custom/btCollisionObject.i
@@ -9,10 +9,6 @@
 	return (cPtr == 0) ? null : btCollisionObject.getInstance(cPtr, $owner);
 }
 
-%typemap(javainterfaces) btCollisionObject %{
-	com.badlogic.gdx.utils.Disposable
-%}
-
 %typemap(javabody) btCollisionObject %{
 	public final static com.badlogic.gdx.utils.LongMap<btCollisionObject> instances = new com.badlogic.gdx.utils.LongMap<btCollisionObject>();
 	
@@ -26,20 +22,12 @@
 	private long swigCPtr;
 	protected boolean swigCMemOwn;
 	
-	public Object userData;
-	
 	protected btCollisionObject(long cPtr, boolean cMemoryOwn) {
 		swigCMemOwn = cMemoryOwn;
 		swigCPtr = cPtr;
 		instances.put(cPtr, this);
 	}
 	
-	@Override
-	public void dispose() {
-		instances.remove(swigCPtr);
-		delete();
-	}
-	
 	public void takeOwnership() {
 		swigCMemOwn = true;
 	}
diff --git a/extensions/gdx-bullet/jni/swig/custom/btCollisionObjectWrapper.i b/extensions/gdx-bullet/jni/swig/custom/btCollisionObjectWrapper.i
deleted file mode 100644
index b1e9489..0000000
--- a/extensions/gdx-bullet/jni/swig/custom/btCollisionObjectWrapper.i
+++ /dev/null
@@ -1,8 +0,0 @@
-%module btCollisionObjectWrapper
-
-%nodefaultdtor btCollisionObjectWrapper;
-
-%{
-#include <BulletCollision/CollisionDispatch/btCollisionObjectWrapper.h>
-%}
-%include "BulletCollision/CollisionDispatch/btCollisionObjectWrapper.h"
\ No newline at end of file
diff --git a/extensions/gdx-bullet/jni/swig/custom/btCollisionWorld.i b/extensions/gdx-bullet/jni/swig/custom/btCollisionWorld.i
index 35aa65a..7889bb9 100644
--- a/extensions/gdx-bullet/jni/swig/custom/btCollisionWorld.i
+++ b/extensions/gdx-bullet/jni/swig/custom/btCollisionWorld.i
@@ -2,17 +2,7 @@
  *	Interface module for a class with inner structs or classes.
  */
  
-%module(directors="1") btCollisionWorld
-
-%feature("director") LocalShapeInfo;
-%feature("director") LocalRayResult;
-%feature("director") RayResultCallback;
-%feature("director") ClosestRayResultCallback;
-%feature("director") AllHitsRayResultCallback;
-%feature("director") LocalConvexResult;
-%feature("director") ConvexResultCallback;
-%feature("director") ClosestConvexResultCallback;
-%feature("director") ContactResultCallback;
+%module btCollisionWorld
 
 	///LocalShapeInfo gives extra information for complex shapes
 	///Currently, only btTriangleMeshShape is available, so it just contains triangleIndex and subpart
diff --git a/extensions/gdx-bullet/jni/swig/gdxBullet.i b/extensions/gdx-bullet/jni/swig/gdxBullet.i
index cf2287a..748f387 100644
--- a/extensions/gdx-bullet/jni/swig/gdxBullet.i
+++ b/extensions/gdx-bullet/jni/swig/gdxBullet.i
@@ -432,7 +432,6 @@ ENABLE_POOLED_TYPEMAP(btTransform, Matrix4, "Lcom/badlogic/gdx/math/Matrix4;");
 %}
 %include "BulletCollision/CollisionShapes/btUniformScalingShape.h"
 
-%include "javacode/btCompoundShape.i"
 %{
 #include <BulletCollision/CollisionShapes/btCompoundShape.h>
 %}
@@ -454,8 +453,6 @@ ENABLE_POOLED_TYPEMAP(btTransform, Matrix4, "Lcom/badlogic/gdx/math/Matrix4;");
 /* Has nested classes or structs */
 %include "custom/btRigidBody.i"
 
-%include "custom/btCollisionObjectWrapper.i"
-
 %{
 #include <BulletCollision/CollisionDispatch/btEmptyCollisionAlgorithm.h>
 %}
diff --git a/extensions/gdx-bullet/jni/swig/javacode/btCompoundShape.i b/extensions/gdx-bullet/jni/swig/javacode/btCompoundShape.i
deleted file mode 100644
index d418607..0000000
--- a/extensions/gdx-bullet/jni/swig/javacode/btCompoundShape.i
+++ /dev/null
@@ -1,38 +0,0 @@
-%module btCompoundShape
-
-%typemap(javaimports) btCompoundShape %{
-import com.badlogic.gdx.utils.Array;
-import com.badlogic.gdx.math.Vector3;
-import com.badlogic.gdx.math.Quaternion;
-import com.badlogic.gdx.math.Matrix3;
-import com.badlogic.gdx.math.Matrix4;
-%}
-
-%typemap(javacode) btCompoundShape %{
-	protected Array<btCollisionShape> children = new Array<btCollisionShape>();
-	
-	public void addChildShape(Matrix4 localTransform, btCollisionShape shape, boolean managed) {
-		addChildShape(localTransform, shape);
-		if (managed)
-			children.add(shape);
-	}
-	
-	protected void dispose() {
-		for (int i = 0; i < children.size; i++)
-			children.get(i).delete();
-		children.clear();
-	}
-%}
-
-%typemap(javadestruct_derived, methodname="delete", methodmodifiers="public synchronized") btCompoundShape %{ {
-    if (swigCPtr != 0) {
-      if (swigCMemOwn) {
-        swigCMemOwn = false;
-        gdxBulletJNI.delete_btCompoundShape(swigCPtr);
-      }
-      swigCPtr = 0;
-    }
-    super.delete();
-	dispose();
-  }
-%}
\ No newline at end of file
diff --git a/extensions/gdx-bullet/libs/gdx-bullet-natives.jar b/extensions/gdx-bullet/libs/gdx-bullet-natives.jar
new file mode 100644
index 0000000..92b7ede
Binary files /dev/null and b/extensions/gdx-bullet/libs/gdx-bullet-natives.jar differ
diff --git a/extensions/gdx-bullet/src/com/badlogic/gdx/physics/bullet/BulletBuild.java b/extensions/gdx-bullet/src/com/badlogic/gdx/physics/bullet/BulletBuild.java
index d36f927..94cc3c0 100644
--- a/extensions/gdx-bullet/src/com/badlogic/gdx/physics/bullet/BulletBuild.java
+++ b/extensions/gdx-bullet/src/com/badlogic/gdx/physics/bullet/BulletBuild.java
@@ -89,13 +89,8 @@ public class BulletBuild {
 		android.cExcludes = android.cppExcludes = excludes;
 		android.headerDirs = headers;
 		android.cppFlags += cppFlags;
-		
-		BuildTarget ios = BuildTarget.newDefaultTarget(TargetOs.IOS, false);
-		ios.cExcludes = ios.cppExcludes = excludes;
-		ios.headerDirs = headers;
-		ios.cppFlags += cppFlags;
 
-		new AntScriptGenerator().generate(new BuildConfig("gdx-bullet"), win32home, win32, win64, lin32, lin64, mac, android, ios);
+		new AntScriptGenerator().generate(new BuildConfig("gdx-bullet"), win32home, win32, win64, lin32, lin64, mac, android);
 
 		// build natives
 		// BuildExecutor.executeAnt("jni/build-windows32home.xml", "-v");
diff --git a/extensions/gdx-controllers/gdx-controllers-desktop/jni/com.badlogic.gdx.controllers.desktop.ois.OisJoystick.cpp b/extensions/gdx-controllers/gdx-controllers-desktop/jni/com.badlogic.gdx.controllers.desktop.ois.OisJoystick.cpp
index 88971d7..2a578cf 100755
--- a/extensions/gdx-controllers/gdx-controllers-desktop/jni/com.badlogic.gdx.controllers.desktop.ois.OisJoystick.cpp
+++ b/extensions/gdx-controllers/gdx-controllers-desktop/jni/com.badlogic.gdx.controllers.desktop.ois.OisJoystick.cpp
@@ -1,6 +1,6 @@
 #include <com.badlogic.gdx.controllers.desktop.ois.OisJoystick.h>
 
-//@line:157
+//@line:151
 
 	#include <OISJoyStick.h>
 	#include <OISInputManager.h>
@@ -69,7 +69,7 @@
 	 JNIEXPORT void JNICALL Java_com_badlogic_gdx_controllers_desktop_ois_OisJoystick_initialize(JNIEnv* env, jobject object, jobject joystick) {
 
 
-//@line:224
+//@line:218
 
 		initializeClasses(env, joystick);
 	
@@ -79,7 +79,7 @@
 JNIEXPORT void JNICALL Java_com_badlogic_gdx_controllers_desktop_ois_OisJoystick_update(JNIEnv* env, jobject object, jlong joystickPtr, jobject callback) {
 
 
-//@line:228
+//@line:222
 
 		OIS::JoyStick* joystick = (OIS::JoyStick*)joystickPtr;
 		Listener listener(env, callback);
@@ -92,7 +92,7 @@ JNIEXPORT void JNICALL Java_com_badlogic_gdx_controllers_desktop_ois_OisJoystick
 JNIEXPORT jint JNICALL Java_com_badlogic_gdx_controllers_desktop_ois_OisJoystick_getAxesCount(JNIEnv* env, jobject object, jlong joystickPtr) {
 
 
-//@line:235
+//@line:229
 
 		OIS::JoyStick* joystick = (OIS::JoyStick*)joystickPtr;
 		return joystick->getNumberOfComponents(OIS::OIS_Axis);
@@ -103,7 +103,7 @@ JNIEXPORT jint JNICALL Java_com_badlogic_gdx_controllers_desktop_ois_OisJoystick
 JNIEXPORT jint JNICALL Java_com_badlogic_gdx_controllers_desktop_ois_OisJoystick_getButtonCount(JNIEnv* env, jobject object, jlong joystickPtr) {
 
 
-//@line:240
+//@line:234
 
 		OIS::JoyStick* joystick = (OIS::JoyStick*)joystickPtr;
 		return joystick->getNumberOfComponents(OIS::OIS_Button);
@@ -114,7 +114,7 @@ JNIEXPORT jint JNICALL Java_com_badlogic_gdx_controllers_desktop_ois_OisJoystick
 JNIEXPORT jint JNICALL Java_com_badlogic_gdx_controllers_desktop_ois_OisJoystick_getPovCount(JNIEnv* env, jobject object, jlong joystickPtr) {
 
 
-//@line:245
+//@line:239
 
 		OIS::JoyStick* joystick = (OIS::JoyStick*)joystickPtr;
 		return joystick->getNumberOfComponents(OIS::OIS_POV);
@@ -125,7 +125,7 @@ JNIEXPORT jint JNICALL Java_com_badlogic_gdx_controllers_desktop_ois_OisJoystick
 JNIEXPORT jint JNICALL Java_com_badlogic_gdx_controllers_desktop_ois_OisJoystick_getSliderCount(JNIEnv* env, jobject object, jlong joystickPtr) {
 
 
-//@line:250
+//@line:244
 
 		OIS::JoyStick* joystick = (OIS::JoyStick*)joystickPtr;
 		return joystick->getNumberOfComponents(OIS::OIS_Slider);
diff --git a/extensions/gdx-controllers/gdx-controllers-desktop/jni/ois-v1-4svn/src/mac/CocoaJoyStick.mm b/extensions/gdx-controllers/gdx-controllers-desktop/jni/ois-v1-4svn/src/mac/CocoaJoyStick.mm
index 73ffa96..e1dc9f4 100755
--- a/extensions/gdx-controllers/gdx-controllers-desktop/jni/ois-v1-4svn/src/mac/CocoaJoyStick.mm
+++ b/extensions/gdx-controllers/gdx-controllers-desktop/jni/ois-v1-4svn/src/mac/CocoaJoyStick.mm
@@ -108,9 +108,9 @@ void CocoaJoyStick::capture()
 				
 				if(mBuffered && mListener)
 				{
-					if(event.value == 1)
+					if(event.value == 0)
 						mListener->buttonPressed(JoyStickEvent(this, mState), button);
-					else if(event.value == 0)
+					else if(event.value == 1)
 						mListener->buttonReleased(JoyStickEvent(this, mState), button);
 				}
 				break;
diff --git a/extensions/gdx-controllers/gdx-controllers-desktop/jni/ois-v1-4svn/src/mac/MacHIDManager.cpp b/extensions/gdx-controllers/gdx-controllers-desktop/jni/ois-v1-4svn/src/mac/MacHIDManager.cpp
index c6cd96e..a0c0537 100644
--- a/extensions/gdx-controllers/gdx-controllers-desktop/jni/ois-v1-4svn/src/mac/MacHIDManager.cpp
+++ b/extensions/gdx-controllers/gdx-controllers-desktop/jni/ois-v1-4svn/src/mac/MacHIDManager.cpp
@@ -205,56 +205,23 @@ void MacHIDManager::iterateAndOpenDevices(io_iterator_t iterator)
 	IOObjectRelease(iterator);
 }
 
-const char* getCString(CFStringRef cfString) {
-	const char *useUTF8StringPtr = NULL;
-	UInt8 *freeUTF8StringPtr = NULL;
-
-	CFIndex stringLength = CFStringGetLength(cfString), usedBytes = 0L;
-
-	if ((useUTF8StringPtr = CFStringGetCStringPtr(cfString,	kCFStringEncodingUTF8)) == NULL) {
-		if ((freeUTF8StringPtr = (UInt8*)malloc(stringLength + 1L)) != NULL) {
-			CFStringGetBytes(cfString, CFRangeMake(0L, stringLength),
-					kCFStringEncodingUTF8, '?', false, freeUTF8StringPtr,
-					stringLength, &usedBytes);
-			freeUTF8StringPtr[usedBytes] = 0;
-			useUTF8StringPtr = (const char *) freeUTF8StringPtr;
-		}
-	}
-
-	return useUTF8StringPtr;
-}
-
 //------------------------------------------------------------------------------------------------------//
 HidInfo* MacHIDManager::enumerateDeviceProperties(CFMutableDictionaryRef propertyMap)
 {
 	HidInfo* info = new HidInfo();
 	
 	info->type = OISJoyStick;
-
+	
 	CFStringRef str = getDictionaryItemAsRef<CFStringRef>(propertyMap, kIOHIDManufacturerKey);
-	if (str) {
-		const char* str_c = getCString(str);
-		if(str_c) {
-			info->vendor = str_c;
-			free((char*)str_c);
-		} else {
-			info->vendor = "Unknown Vendor";
-		}
-	}
-
+	if (str)
+		info->vendor = CFStringGetCStringPtr(str, CFStringGetSystemEncoding());
+	
 	str = getDictionaryItemAsRef<CFStringRef>(propertyMap, kIOHIDProductKey);
-	if (str) {
-		const char* str_c = getCString(str);
-		if(str_c) {
-			info->productKey = str_c;
-			free((char*)str_c);
-		} else {
-			info->productKey = "Unknown Product";
-		}
-	}
-
+	if (str)
+		info->productKey = CFStringGetCStringPtr(str, CFStringGetSystemEncoding());
+	
 	info->combinedKey = info->vendor + " " + info->productKey;
-
+	
 	//Go through all items in this device (i.e. buttons, hats, sticks, axes, etc)
 	CFArrayRef array = getDictionaryItemAsRef<CFArrayRef>(propertyMap, kIOHIDElementKey);
 	if (array)
diff --git a/extensions/gdx-controllers/gdx-controllers-desktop/jni/ois-v1-4svn/src/mac/MacJoyStick.cpp b/extensions/gdx-controllers/gdx-controllers-desktop/jni/ois-v1-4svn/src/mac/MacJoyStick.cpp
index 1bdc7ca..c6cfa0d 100644
--- a/extensions/gdx-controllers/gdx-controllers-desktop/jni/ois-v1-4svn/src/mac/MacJoyStick.cpp
+++ b/extensions/gdx-controllers/gdx-controllers-desktop/jni/ois-v1-4svn/src/mac/MacJoyStick.cpp
@@ -108,9 +108,9 @@ void MacJoyStick::capture()
 				
 				if(mBuffered && mListener)
 				{
-					if(event.value == 1)
+					if(event.value == 0)
 						mListener->buttonPressed(JoyStickEvent(this, mState), button);
-					else if(event.value == 0)
+					else if(event.value == 1)
 						mListener->buttonReleased(JoyStickEvent(this, mState), button);
 				}
 				break;
diff --git a/extensions/gdx-controllers/gdx-controllers-desktop/libs/gdx-controllers-desktop-natives.jar b/extensions/gdx-controllers/gdx-controllers-desktop/libs/gdx-controllers-desktop-natives.jar
new file mode 100755
index 0000000..a38cd92
Binary files /dev/null and b/extensions/gdx-controllers/gdx-controllers-desktop/libs/gdx-controllers-desktop-natives.jar differ
diff --git a/extensions/gdx-freetype/jni/Android.mk b/extensions/gdx-freetype/jni/Android.mk
index bbd05bb..6d87244 100644
--- a/extensions/gdx-freetype/jni/Android.mk
+++ b/extensions/gdx-freetype/jni/Android.mk
@@ -10,49 +10,49 @@ LOCAL_LDLIBS := -lm
 LOCAL_ARM_MODE  := arm
  
 LOCAL_SRC_FILES := com.badlogic.gdx.graphics.g2d.freetype.FreeType.cpp\
+	freetype-2.4.10/src/pshinter/pshinter.c\
+	freetype-2.4.10/src/otvalid/otvalid.c\
 	freetype-2.4.10/src/autofit/autofit.c\
-	freetype-2.4.10/src/base/ftbase.c\
-	freetype-2.4.10/src/base/ftbbox.c\
+	freetype-2.4.10/src/cff/cff.c\
+	freetype-2.4.10/src/pfr/pfr.c\
+	freetype-2.4.10/src/bzip2/ftbzip2.c\
+	freetype-2.4.10/src/cache/ftcache.c\
+	freetype-2.4.10/src/bdf/bdf.c\
+	freetype-2.4.10/src/raster/raster.c\
+	freetype-2.4.10/src/cid/type1cid.c\
+	freetype-2.4.10/src/truetype/truetype.c\
+	freetype-2.4.10/src/sfnt/sfnt.c\
+	freetype-2.4.10/src/winfonts/winfnt.c\
+	freetype-2.4.10/src/pcf/pcf.c\
+	freetype-2.4.10/src/gxvalid/gxvalid.c\
+	freetype-2.4.10/src/psaux/psaux.c\
+	freetype-2.4.10/src/base/ftpfr.c\
+	freetype-2.4.10/src/base/ftlcdfil.c\
+	freetype-2.4.10/src/base/ftwinfnt.c\
+	freetype-2.4.10/src/base/ftsynth.c\
+	freetype-2.4.10/src/base/ftglyph.c\
 	freetype-2.4.10/src/base/ftbdf.c\
+	freetype-2.4.10/src/base/ftgasp.c\
+	freetype-2.4.10/src/base/ftbase.c\
 	freetype-2.4.10/src/base/ftbitmap.c\
-	freetype-2.4.10/src/base/ftcid.c\
-	freetype-2.4.10/src/base/ftdebug.c\
 	freetype-2.4.10/src/base/ftfstype.c\
-	freetype-2.4.10/src/base/ftgasp.c\
-	freetype-2.4.10/src/base/ftglyph.c\
-	freetype-2.4.10/src/base/ftgxval.c\
-	freetype-2.4.10/src/base/ftinit.c\
-	freetype-2.4.10/src/base/ftlcdfil.c\
+	freetype-2.4.10/src/base/ftsystem.c\
 	freetype-2.4.10/src/base/ftmm.c\
-	freetype-2.4.10/src/base/ftotval.c\
 	freetype-2.4.10/src/base/ftpatent.c\
-	freetype-2.4.10/src/base/ftpfr.c\
 	freetype-2.4.10/src/base/ftstroke.c\
-	freetype-2.4.10/src/base/ftsynth.c\
-	freetype-2.4.10/src/base/ftsystem.c\
 	freetype-2.4.10/src/base/fttype1.c\
-	freetype-2.4.10/src/base/ftwinfnt.c\
+	freetype-2.4.10/src/base/ftotval.c\
 	freetype-2.4.10/src/base/ftxf86.c\
-	freetype-2.4.10/src/bdf/bdf.c\
-	freetype-2.4.10/src/bzip2/ftbzip2.c\
-	freetype-2.4.10/src/cache/ftcache.c\
-	freetype-2.4.10/src/cff/cff.c\
-	freetype-2.4.10/src/cid/type1cid.c\
-	freetype-2.4.10/src/gxvalid/gxvalid.c\
+	freetype-2.4.10/src/base/ftdebug.c\
+	freetype-2.4.10/src/base/ftbbox.c\
+	freetype-2.4.10/src/base/ftgxval.c\
+	freetype-2.4.10/src/base/ftinit.c\
+	freetype-2.4.10/src/base/ftcid.c\
 	freetype-2.4.10/src/gzip/ftgzip.c\
-	freetype-2.4.10/src/lzw/ftlzw.c\
-	freetype-2.4.10/src/otvalid/otvalid.c\
-	freetype-2.4.10/src/pcf/pcf.c\
-	freetype-2.4.10/src/pfr/pfr.c\
-	freetype-2.4.10/src/psaux/psaux.c\
-	freetype-2.4.10/src/pshinter/pshinter.c\
+	freetype-2.4.10/src/type42/type42.c\
 	freetype-2.4.10/src/psnames/psnames.c\
-	freetype-2.4.10/src/raster/raster.c\
-	freetype-2.4.10/src/sfnt/sfnt.c\
-	freetype-2.4.10/src/smooth/smooth.c\
-	freetype-2.4.10/src/truetype/truetype.c\
+	freetype-2.4.10/src/lzw/ftlzw.c\
 	freetype-2.4.10/src/type1/type1.c\
-	freetype-2.4.10/src/type42/type42.c\
-	freetype-2.4.10/src/winfonts/winfnt.c
+	freetype-2.4.10/src/smooth/smooth.c
  
 include $(BUILD_SHARED_LIBRARY)
diff --git a/extensions/gdx-freetype/jni/build-ios32.xml b/extensions/gdx-freetype/jni/build-ios32.xml
deleted file mode 100755
index 5587e2c..0000000
--- a/extensions/gdx-freetype/jni/build-ios32.xml
+++ /dev/null
@@ -1,233 +0,0 @@
-<project name="gdx-freetype-IOS-32" basedir="." default="postcompile">
-	<!-- include the environment -->
-	<property environment="env"/>	
-	<!-- output directory for temporary object files -->
-	<property name="buildDir" value="target/ios32" />
-	<!-- output directory for the shared library -->
-	<property name="libsDir" value="../libs/ios32" />
-	<!-- the name of the shared library -->
-	<property name="libName" value="libgdx-freetype.a"/>
-	<!-- the jni header jniPlatform to use -->
-	<property name="jniPlatform" value="mac"/>
-	<!-- the compilerPrefix for the C & C++ compilers -->
-	<property name="compilerPrefix" value=""/>	
-	<property name="iphoneos-platform" value="/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin"/>
-	<property name="iphoneos-sdk" value="/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS6.0.sdk/"/>
-	<property name="iphonesimulator-platform" value="/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/usr/bin"/>
-	<property name="iphonesimulator-sdk" value="/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator6.0.sdk/"/>
-	
-	<!-- define gcc compiler, options and files to compile -->
-	<property name="gcc" value="${compilerPrefix}gcc"/>	
-	<property name="gcc-opts" value="-c -Wall -O2 -std=c99 -DFT2_BUILD_LIBRARY"/>
-	<fileset id="gcc-files" dir="./">
-		<exclude name="target/"/>		
-				<include name="memcpy_wrap.c"/>
-		<include name="freetype-2.4.10/src/base/ftsystem.c"/>
-		<include name="freetype-2.4.10/src/base/ftinit.c"/>
-		<include name="freetype-2.4.10/src/base/ftdebug.c"/>
-		<include name="freetype-2.4.10/src/base/ftbase.c"/>
-		<include name="freetype-2.4.10/src/base/ftbbox.c"/>
-		<include name="freetype-2.4.10/src/base/ftglyph.c"/>
-		<include name="freetype-2.4.10/src/base/ftbdf.c"/>
-		<include name="freetype-2.4.10/src/base/ftbitmap.c"/>
-		<include name="freetype-2.4.10/src/base/ftcid.c"/>
-		<include name="freetype-2.4.10/src/base/ftfstype.c"/>
-		<include name="freetype-2.4.10/src/base/ftgasp.c"/>
-		<include name="freetype-2.4.10/src/base/ftgxval.c"/>
-		<include name="freetype-2.4.10/src/base/ftlcdfil.c"/>
-		<include name="freetype-2.4.10/src/base/ftmm.c"/>
-		<include name="freetype-2.4.10/src/base/ftotval.c"/>
-		<include name="freetype-2.4.10/src/base/ftpatent.c"/>
-		<include name="freetype-2.4.10/src/base/ftpfr.c"/>
-		<include name="freetype-2.4.10/src/base/ftstroke.c"/>
-		<include name="freetype-2.4.10/src/base/ftsynth.c"/>
-		<include name="freetype-2.4.10/src/base/fttype1.c"/>
-		<include name="freetype-2.4.10/src/base/ftwinfnt.c"/>
-		<include name="freetype-2.4.10/src/base/ftxf86.c"/>
-		<include name="freetype-2.4.10/src/bdf/bdf.c"/>
-		<include name="freetype-2.4.10/src/cff/cff.c"/>
-		<include name="freetype-2.4.10/src/cid/type1cid.c"/>
-		<include name="freetype-2.4.10/src/pcf/pcf.c"/>
-		<include name="freetype-2.4.10/src/pfr/pfr.c"/>
-		<include name="freetype-2.4.10/src/sfnt/sfnt.c"/>
-		<include name="freetype-2.4.10/src/truetype/truetype.c"/>
-		<include name="freetype-2.4.10/src/type1/type1.c"/>
-		<include name="freetype-2.4.10/src/type42/type42.c"/>
-		<include name="freetype-2.4.10/src/winfonts/winfnt.c"/>
-		<include name="freetype-2.4.10/src/raster/raster.c"/>
-		<include name="freetype-2.4.10/src/smooth/smooth.c"/>
-		<include name="freetype-2.4.10/src/autofit/autofit.c"/>
-		<include name="freetype-2.4.10/src/cache/ftcache.c"/>
-		<include name="freetype-2.4.10/src/gzip/ftgzip.c"/>
-		<include name="freetype-2.4.10/src/lzw/ftlzw.c"/>
-		<include name="freetype-2.4.10/src/bzip2/ftbzip2.c"/>
-		<include name="freetype-2.4.10/src/gxvalid/gxvalid.c"/>
-		<include name="freetype-2.4.10/src/otvalid/otvalid.c"/>
-		<include name="freetype-2.4.10/src/psaux/psaux.c"/>
-		<include name="freetype-2.4.10/src/pshinter/pshinter.c"/>
-		<include name="freetype-2.4.10/src/psnames/psnames.c"/>
-
-		
-	</fileset>
-	
-	<!-- define g++ compiler, options and files to compile -->
-	<property name="g++" value="${compilerPrefix}g++"/>
-	<property name="g++-opts" value="-c -Wall -O2 -std=c99 -DFT2_BUILD_LIBRARY"/>
-	<fileset id="g++-files" dir="./">
-		<exclude name="target/"/>
-				<include name="**/*.cpp"/>
-
-		
-	</fileset>
-
-	<!-- define linker and options -->
-	<property name="linker" value="${compilerPrefix}ar"/>
-	<property name="linker-opts" value="rcs"/>
-	<property name="libraries" value=""/>
-	
-	<!-- cleans the build directory, removes all object files and shared libs -->
-	<target name="clean">
-		<delete includeemptydirs="true" quiet="true">
-			<fileset dir="${buildDir}"/>
-			<fileset dir="${libsDir}" includes="**/*" excludes="**/.svn"/>
-		</delete>
-	</target>
-	
-	<target name="clean-objfiles">
-		<delete>
-			<fileset dir="${buildDir}">
-				<include name="**/*.o"/>
-			</fileset>
-		</delete>
-	</target>
-	
-	<target name="create-build-dir">
-		<!-- FIXME this is pretty nasty :/ -->
-		<copy todir="${buildDir}">
-			<fileset refid="g++-files"/>
-			<fileset refid="gcc-files"/>
-		</copy>
-		<delete>
-			<fileset dir="${buildDir}">
-				<include name="*"/>
-				<exclude name="*.o"/>
-			</fileset>
-		</delete>
-	</target>
-
-	<!-- compiles all C and C++ files to object files in the build directory, for 386 builds-->
-	<target name="compile-386" depends="clean,create-build-dir">
-		<mkdir dir="${buildDir}"/>
-		<apply failonerror="true" executable="${iphonesimulator-platform}/${g++}" dest="${buildDir}" verbose="true">
-			<arg line="-isysroot ${iphonesimulator-sdk} -arch i386 ${g++-opts}"/>
-			<arg value="-Ijni-headers"/>
-			<arg value="-Ijni-headers/${jniPlatform}"/>
-			<arg value="-I."/>
-						<arg value="-Ifreetype-2.4.10/include"/>
-
-			<srcfile/>
-			<arg value="-o"/>
-			<targetfile/>
-			<fileset refid="g++-files"/>
-			<compositemapper>
-				<mapper type="glob" from="*.cpp" to="*.o"/>
-				<mapper type="glob" from="*.mm" to="*.o"/>
-			</compositemapper>
-		</apply>
-		<apply failonerror="true" executable="${iphonesimulator-platform}/${gcc}" dest="${buildDir}" verbose="true">
-			<arg line="-isysroot ${iphonesimulator-sdk} -arch i386 ${gcc-opts}"/>
-			<arg value="-Ijni-headers"/>
-			<arg value="-Ijni-headers/${jniPlatform}"/>
-			<arg value="-I."/>
-						<arg value="-Ifreetype-2.4.10/include"/>
-
-			<srcfile/>
-			<arg value="-o"/>
-			<targetfile/>
-			<fileset refid="gcc-files"/>
-			<compositemapper>
-				<mapper type="glob" from="*.c" to="*.o"/>
-			</compositemapper>
-		</apply>
-	</target>	
-
-	<!-- links the shared library based on the previously compiled object files -->
-	<target name="link-386" depends="compile-386">
-		<fileset dir="${buildDir}" id="objFileSet">
-			<patternset>
-				<include name="**/*.o" />
-			</patternset>
-		</fileset>
-		<pathconvert pathsep=" " property="objFiles" refid="objFileSet" />
-		<mkdir dir="${libsDir}" />
-		<exec executable="${iphonesimulator-platform}/${linker}" failonerror="true" dir="${buildDir}">
-			<arg line="${linker-opts}" />
-			<arg path="${libsDir}/${libName}.386" />
-			<arg line="${objFiles}"/>
-			<arg line="${libraries}" />
-		</exec>
-	</target>
-	
-	<!-- compiles all C and C++ files to object files in the build directory, for 386 builds-->
-	<target name="compile-arm" depends="create-build-dir,clean-objfiles">
-		<mkdir dir="${buildDir}"/>
-		<apply failonerror="true" executable="${iphoneos-platform}/${g++}" dest="${buildDir}" verbose="true">
-			<arg line="-isysroot ${iphoneos-sdk} -arch armv7 ${g++-opts}"/>
-			<arg value="-Ijni-headers"/>
-			<arg value="-Ijni-headers/${jniPlatform}"/>
-			<arg value="-I."/>
-						<arg value="-Ifreetype-2.4.10/include"/>
-
-			<srcfile/>
-			<arg value="-o"/>
-			<targetfile/>
-			<fileset refid="g++-files"/>
-			<compositemapper>
-				<mapper type="glob" from="*.cpp" to="*.o"/>
-				<mapper type="glob" from="*.mm" to="*.o"/>
-			</compositemapper>
-		</apply>
-		<apply failonerror="true" executable="${iphoneos-platform}/${gcc}" dest="${buildDir}" verbose="true">
-			<arg line="-isysroot ${iphoneos-sdk} -arch armv7 ${gcc-opts}"/>
-			<arg value="-Ijni-headers"/>
-			<arg value="-Ijni-headers/${jniPlatform}"/>
-			<arg value="-I."/>
-						<arg value="-Ifreetype-2.4.10/include"/>
-
-			<srcfile/>
-			<arg value="-o"/>
-			<targetfile/>
-			<fileset refid="gcc-files"/>
-			<compositemapper>
-				<mapper type="glob" from="*.c" to="*.o"/>
-			</compositemapper>
-		</apply>
-	</target>	
-
-	<!-- links the shared library based on the previously compiled object files -->
-	<target name="link-arm" depends="compile-arm">
-		<fileset dir="${buildDir}" id="objFileSet">
-			<patternset>
-				<include name="**/*.o" />
-			</patternset>
-		</fileset>
-		<pathconvert pathsep=" " property="objFiles" refid="objFileSet" />
-		<mkdir dir="${libsDir}" />
-		<exec executable="${iphoneos-platform}/${linker}" failonerror="true" dir="${buildDir}">
-			<arg line="${linker-opts}" />
-			<arg path="${libsDir}/${libName}.armv7" />
-			<arg line="${objFiles}"/>
-			<arg line="${libraries}" />
-		</exec>
-	</target>
-
-	<target name="link-fat">
-		<exec executable="lipo" failonerror="true" dir="${libsDir}">
-			<arg line="-create -output ${libName} ${libName}.386 ${libName}.armv7"/>
-		</exec>
-	</target>
-
-	<target name="postcompile" depends="link-386,link-arm,link-fat">
-		
-	</target>
-</project>
diff --git a/extensions/gdx-freetype/jni/build-linux32.xml b/extensions/gdx-freetype/jni/build-linux32.xml
index 9d4c8e8..1dc27f3 100644
--- a/extensions/gdx-freetype/jni/build-linux32.xml
+++ b/extensions/gdx-freetype/jni/build-linux32.xml
@@ -79,7 +79,6 @@
 	<!-- define linker and options -->
 	<property name="linker" value="${compilerPrefix}g++"/>
 	<property name="linker-opts" value="-shared -m32"/>
-	<property name="libraries" value=""/>
 	
 	<!-- cleans the build directory, removes all object files and shared libs -->
 	<target name="clean">
@@ -138,10 +137,9 @@
 			<arg value="-o"/>
 			<targetfile/>
 			<fileset refid="g++-files"/>
-			<compositemapper>
+			<chainedmapper>
 				<mapper type="glob" from="*.cpp" to="*.o"/>
-				<mapper type="glob" from="*.mm" to="*.o"/>
-			</compositemapper>
+			</chainedmapper>
 		</apply>
 		<apply failonerror="true" executable="${gcc}" dest="${buildDir}" verbose="true">
 			<arg line="${gcc-opts}"/>
@@ -154,28 +152,25 @@
 			<arg value="-o"/>
 			<targetfile/>
 			<fileset refid="gcc-files"/>
-			<compositemapper>
+			<chainedmapper>
 				<mapper type="glob" from="*.c" to="*.o"/>
-			</compositemapper>
+			</chainedmapper>
 		</apply>
 	</target>	
 
 	<!-- links the shared library based on the previously compiled object files -->	
 	<target name="link" depends="compile" if="has-compiler">
-		<fileset dir="${buildDir}" id="objFileSet">
-			<patternset>
-				<include name="**/*.o" />
-			</patternset>
-		</fileset>
-		<pathconvert pathsep=" " property="objFiles" refid="objFileSet" />
-		<mkdir dir="${libsDir}" />
-		<exec executable="${linker}" failonerror="true" dir="${buildDir}">
-			<arg line="${linker-opts}" />
-			<arg value="-o" />
-			<arg path="${libsDir}/${libName}" />
-			<arg line="${objFiles}"/>
-			<arg line="${libraries}" />
-		</exec>
+		<mkdir dir="${libsDir}"/>
+		<apply failonerror="true" executable="${linker}" parallel="true" dir="${buildDir}">
+			<arg line="${linker-opts}"/>
+			<arg value="-o"/>
+			<arg path="${libsDir}/${libName}"/>		
+			<fileset dir="${buildDir}">
+				<patternset>
+					<include name="**/*.o"/>
+				</patternset>
+			</fileset>
+		</apply>
 	</target>	
 	
 	<target name="postcompile" depends="link">
diff --git a/extensions/gdx-freetype/jni/build-linux64.xml b/extensions/gdx-freetype/jni/build-linux64.xml
index cc39238..3a7783d 100644
--- a/extensions/gdx-freetype/jni/build-linux64.xml
+++ b/extensions/gdx-freetype/jni/build-linux64.xml
@@ -79,7 +79,6 @@
 	<!-- define linker and options -->
 	<property name="linker" value="${compilerPrefix}g++"/>
 	<property name="linker-opts" value="-shared -m64 -Wl,-wrap,memcpy"/>
-	<property name="libraries" value=""/>
 	
 	<!-- cleans the build directory, removes all object files and shared libs -->
 	<target name="clean">
@@ -138,10 +137,9 @@
 			<arg value="-o"/>
 			<targetfile/>
 			<fileset refid="g++-files"/>
-			<compositemapper>
+			<chainedmapper>
 				<mapper type="glob" from="*.cpp" to="*.o"/>
-				<mapper type="glob" from="*.mm" to="*.o"/>
-			</compositemapper>
+			</chainedmapper>
 		</apply>
 		<apply failonerror="true" executable="${gcc}" dest="${buildDir}" verbose="true">
 			<arg line="${gcc-opts}"/>
@@ -154,28 +152,25 @@
 			<arg value="-o"/>
 			<targetfile/>
 			<fileset refid="gcc-files"/>
-			<compositemapper>
+			<chainedmapper>
 				<mapper type="glob" from="*.c" to="*.o"/>
-			</compositemapper>
+			</chainedmapper>
 		</apply>
 	</target>	
 
 	<!-- links the shared library based on the previously compiled object files -->	
 	<target name="link" depends="compile" if="has-compiler">
-		<fileset dir="${buildDir}" id="objFileSet">
-			<patternset>
-				<include name="**/*.o" />
-			</patternset>
-		</fileset>
-		<pathconvert pathsep=" " property="objFiles" refid="objFileSet" />
-		<mkdir dir="${libsDir}" />
-		<exec executable="${linker}" failonerror="true" dir="${buildDir}">
-			<arg line="${linker-opts}" />
-			<arg value="-o" />
-			<arg path="${libsDir}/${libName}" />
-			<arg line="${objFiles}"/>
-			<arg line="${libraries}" />
-		</exec>
+		<mkdir dir="${libsDir}"/>
+		<apply failonerror="true" executable="${linker}" parallel="true" dir="${buildDir}">
+			<arg line="${linker-opts}"/>
+			<arg value="-o"/>
+			<arg path="${libsDir}/${libName}"/>		
+			<fileset dir="${buildDir}">
+				<patternset>
+					<include name="**/*.o"/>
+				</patternset>
+			</fileset>
+		</apply>
 	</target>	
 	
 	<target name="postcompile" depends="link">
diff --git a/extensions/gdx-freetype/jni/build-macosx32.xml b/extensions/gdx-freetype/jni/build-macosx32.xml
index df92031..c171d4e 100644
--- a/extensions/gdx-freetype/jni/build-macosx32.xml
+++ b/extensions/gdx-freetype/jni/build-macosx32.xml
@@ -79,7 +79,6 @@
 	<!-- define linker and options -->
 	<property name="linker" value="${compilerPrefix}g++"/>
 	<property name="linker-opts" value="-shared -arch i386 -arch x86_64 -mmacosx-version-min=10.5 -framework CoreServices -framework Carbon"/>
-	<property name="libraries" value=""/>
 	
 	<!-- cleans the build directory, removes all object files and shared libs -->
 	<target name="clean">
@@ -138,10 +137,9 @@
 			<arg value="-o"/>
 			<targetfile/>
 			<fileset refid="g++-files"/>
-			<compositemapper>
+			<chainedmapper>
 				<mapper type="glob" from="*.cpp" to="*.o"/>
-				<mapper type="glob" from="*.mm" to="*.o"/>
-			</compositemapper>
+			</chainedmapper>
 		</apply>
 		<apply failonerror="true" executable="${gcc}" dest="${buildDir}" verbose="true">
 			<arg line="${gcc-opts}"/>
@@ -154,28 +152,25 @@
 			<arg value="-o"/>
 			<targetfile/>
 			<fileset refid="gcc-files"/>
-			<compositemapper>
+			<chainedmapper>
 				<mapper type="glob" from="*.c" to="*.o"/>
-			</compositemapper>
+			</chainedmapper>
 		</apply>
 	</target>	
 
 	<!-- links the shared library based on the previously compiled object files -->	
 	<target name="link" depends="compile" if="has-compiler">
-		<fileset dir="${buildDir}" id="objFileSet">
-			<patternset>
-				<include name="**/*.o" />
-			</patternset>
-		</fileset>
-		<pathconvert pathsep=" " property="objFiles" refid="objFileSet" />
-		<mkdir dir="${libsDir}" />
-		<exec executable="${linker}" failonerror="true" dir="${buildDir}">
-			<arg line="${linker-opts}" />
-			<arg value="-o" />
-			<arg path="${libsDir}/${libName}" />
-			<arg line="${objFiles}"/>
-			<arg line="${libraries}" />
-		</exec>
+		<mkdir dir="${libsDir}"/>
+		<apply failonerror="true" executable="${linker}" parallel="true" dir="${buildDir}">
+			<arg line="${linker-opts}"/>
+			<arg value="-o"/>
+			<arg path="${libsDir}/${libName}"/>		
+			<fileset dir="${buildDir}">
+				<patternset>
+					<include name="**/*.o"/>
+				</patternset>
+			</fileset>
+		</apply>
 	</target>	
 	
 	<target name="postcompile" depends="link">
diff --git a/extensions/gdx-freetype/jni/build-windows32.xml b/extensions/gdx-freetype/jni/build-windows32.xml
index 5f1145a..e5f2a24 100644
--- a/extensions/gdx-freetype/jni/build-windows32.xml
+++ b/extensions/gdx-freetype/jni/build-windows32.xml
@@ -79,7 +79,6 @@
 	<!-- define linker and options -->
 	<property name="linker" value="${compilerPrefix}g++"/>
 	<property name="linker-opts" value="-Wl,--kill-at -shared -m32 -static-libgcc -static-libstdc++"/>
-	<property name="libraries" value=""/>
 	
 	<!-- cleans the build directory, removes all object files and shared libs -->
 	<target name="clean">
@@ -138,10 +137,9 @@
 			<arg value="-o"/>
 			<targetfile/>
 			<fileset refid="g++-files"/>
-			<compositemapper>
+			<chainedmapper>
 				<mapper type="glob" from="*.cpp" to="*.o"/>
-				<mapper type="glob" from="*.mm" to="*.o"/>
-			</compositemapper>
+			</chainedmapper>
 		</apply>
 		<apply failonerror="true" executable="${gcc}" dest="${buildDir}" verbose="true">
 			<arg line="${gcc-opts}"/>
@@ -154,28 +152,25 @@
 			<arg value="-o"/>
 			<targetfile/>
 			<fileset refid="gcc-files"/>
-			<compositemapper>
+			<chainedmapper>
 				<mapper type="glob" from="*.c" to="*.o"/>
-			</compositemapper>
+			</chainedmapper>
 		</apply>
 	</target>	
 
 	<!-- links the shared library based on the previously compiled object files -->	
 	<target name="link" depends="compile" if="has-compiler">
-		<fileset dir="${buildDir}" id="objFileSet">
-			<patternset>
-				<include name="**/*.o" />
-			</patternset>
-		</fileset>
-		<pathconvert pathsep=" " property="objFiles" refid="objFileSet" />
-		<mkdir dir="${libsDir}" />
-		<exec executable="${linker}" failonerror="true" dir="${buildDir}">
-			<arg line="${linker-opts}" />
-			<arg value="-o" />
-			<arg path="${libsDir}/${libName}" />
-			<arg line="${objFiles}"/>
-			<arg line="${libraries}" />
-		</exec>
+		<mkdir dir="${libsDir}"/>
+		<apply failonerror="true" executable="${linker}" parallel="true" dir="${buildDir}">
+			<arg line="${linker-opts}"/>
+			<arg value="-o"/>
+			<arg path="${libsDir}/${libName}"/>		
+			<fileset dir="${buildDir}">
+				<patternset>
+					<include name="**/*.o"/>
+				</patternset>
+			</fileset>
+		</apply>
 	</target>	
 	
 	<target name="postcompile" depends="link">
diff --git a/extensions/gdx-freetype/jni/build-windows32home.xml b/extensions/gdx-freetype/jni/build-windows32home.xml
index 9661993..bb1a896 100644
--- a/extensions/gdx-freetype/jni/build-windows32home.xml
+++ b/extensions/gdx-freetype/jni/build-windows32home.xml
@@ -79,7 +79,6 @@
 	<!-- define linker and options -->
 	<property name="linker" value="${compilerPrefix}g++"/>
 	<property name="linker-opts" value="-Wl,--kill-at -shared -m32 -static-libgcc -static-libstdc++"/>
-	<property name="libraries" value=""/>
 	
 	<!-- cleans the build directory, removes all object files and shared libs -->
 	<target name="clean">
@@ -138,10 +137,9 @@
 			<arg value="-o"/>
 			<targetfile/>
 			<fileset refid="g++-files"/>
-			<compositemapper>
+			<chainedmapper>
 				<mapper type="glob" from="*.cpp" to="*.o"/>
-				<mapper type="glob" from="*.mm" to="*.o"/>
-			</compositemapper>
+			</chainedmapper>
 		</apply>
 		<apply failonerror="true" executable="${gcc}" dest="${buildDir}" verbose="true">
 			<arg line="${gcc-opts}"/>
@@ -154,28 +152,25 @@
 			<arg value="-o"/>
 			<targetfile/>
 			<fileset refid="gcc-files"/>
-			<compositemapper>
+			<chainedmapper>
 				<mapper type="glob" from="*.c" to="*.o"/>
-			</compositemapper>
+			</chainedmapper>
 		</apply>
 	</target>	
 
 	<!-- links the shared library based on the previously compiled object files -->	
 	<target name="link" depends="compile" if="has-compiler">
-		<fileset dir="${buildDir}" id="objFileSet">
-			<patternset>
-				<include name="**/*.o" />
-			</patternset>
-		</fileset>
-		<pathconvert pathsep=" " property="objFiles" refid="objFileSet" />
-		<mkdir dir="${libsDir}" />
-		<exec executable="${linker}" failonerror="true" dir="${buildDir}">
-			<arg line="${linker-opts}" />
-			<arg value="-o" />
-			<arg path="${libsDir}/${libName}" />
-			<arg line="${objFiles}"/>
-			<arg line="${libraries}" />
-		</exec>
+		<mkdir dir="${libsDir}"/>
+		<apply failonerror="true" executable="${linker}" parallel="true" dir="${buildDir}">
+			<arg line="${linker-opts}"/>
+			<arg value="-o"/>
+			<arg path="${libsDir}/${libName}"/>		
+			<fileset dir="${buildDir}">
+				<patternset>
+					<include name="**/*.o"/>
+				</patternset>
+			</fileset>
+		</apply>
 	</target>	
 	
 	<target name="postcompile" depends="link">
diff --git a/extensions/gdx-freetype/jni/build-windows64.xml b/extensions/gdx-freetype/jni/build-windows64.xml
index 7c55ba1..1218db4 100644
--- a/extensions/gdx-freetype/jni/build-windows64.xml
+++ b/extensions/gdx-freetype/jni/build-windows64.xml
@@ -79,7 +79,6 @@
 	<!-- define linker and options -->
 	<property name="linker" value="${compilerPrefix}g++"/>
 	<property name="linker-opts" value="-Wl,--kill-at -shared -static-libgcc -static-libstdc++ -m64"/>
-	<property name="libraries" value=""/>
 	
 	<!-- cleans the build directory, removes all object files and shared libs -->
 	<target name="clean">
@@ -138,10 +137,9 @@
 			<arg value="-o"/>
 			<targetfile/>
 			<fileset refid="g++-files"/>
-			<compositemapper>
+			<chainedmapper>
 				<mapper type="glob" from="*.cpp" to="*.o"/>
-				<mapper type="glob" from="*.mm" to="*.o"/>
-			</compositemapper>
+			</chainedmapper>
 		</apply>
 		<apply failonerror="true" executable="${gcc}" dest="${buildDir}" verbose="true">
 			<arg line="${gcc-opts}"/>
@@ -154,28 +152,25 @@
 			<arg value="-o"/>
 			<targetfile/>
 			<fileset refid="gcc-files"/>
-			<compositemapper>
+			<chainedmapper>
 				<mapper type="glob" from="*.c" to="*.o"/>
-			</compositemapper>
+			</chainedmapper>
 		</apply>
 	</target>	
 
 	<!-- links the shared library based on the previously compiled object files -->	
 	<target name="link" depends="compile" if="has-compiler">
-		<fileset dir="${buildDir}" id="objFileSet">
-			<patternset>
-				<include name="**/*.o" />
-			</patternset>
-		</fileset>
-		<pathconvert pathsep=" " property="objFiles" refid="objFileSet" />
-		<mkdir dir="${libsDir}" />
-		<exec executable="${linker}" failonerror="true" dir="${buildDir}">
-			<arg line="${linker-opts}" />
-			<arg value="-o" />
-			<arg path="${libsDir}/${libName}" />
-			<arg line="${objFiles}"/>
-			<arg line="${libraries}" />
-		</exec>
+		<mkdir dir="${libsDir}"/>
+		<apply failonerror="true" executable="${linker}" parallel="true" dir="${buildDir}">
+			<arg line="${linker-opts}"/>
+			<arg value="-o"/>
+			<arg path="${libsDir}/${libName}"/>		
+			<fileset dir="${buildDir}">
+				<patternset>
+					<include name="**/*.o"/>
+				</patternset>
+			</fileset>
+		</apply>
 	</target>	
 	
 	<target name="postcompile" depends="link">
diff --git a/extensions/gdx-freetype/jni/build.xml b/extensions/gdx-freetype/jni/build.xml
index ec78c63..9fc3a35 100644
--- a/extensions/gdx-freetype/jni/build.xml
+++ b/extensions/gdx-freetype/jni/build.xml
@@ -25,7 +25,6 @@
 			<fileset dir="../libs/linux64" includes="libgdx-freetype64.so"/>
 			<fileset dir="../libs/macosx32" includes="libgdx-freetype.dylib"/>
 			<fileset dir="../libs/android32" includes="libgdx-freetype.so"/>
-			<fileset dir="../libs/ios32" includes="libgdx-freetype.a"/>
 
 		</jar>
 	</target>
diff --git a/extensions/gdx-freetype/libs/gdx-freetype-natives.jar b/extensions/gdx-freetype/libs/gdx-freetype-natives.jar
new file mode 100644
index 0000000..6fcbab8
Binary files /dev/null and b/extensions/gdx-freetype/libs/gdx-freetype-natives.jar differ
diff --git a/extensions/gdx-freetype/src/com/badlogic/gdx/graphics/g2d/freetype/FreetypeBuild.java b/extensions/gdx-freetype/src/com/badlogic/gdx/graphics/g2d/freetype/FreetypeBuild.java
index 947ce8b..344862f 100644
--- a/extensions/gdx-freetype/src/com/badlogic/gdx/graphics/g2d/freetype/FreetypeBuild.java
+++ b/extensions/gdx-freetype/src/com/badlogic/gdx/graphics/g2d/freetype/FreetypeBuild.java
@@ -113,15 +113,9 @@ public class FreetypeBuild {
 		android.cIncludes = sources;
 		android.cFlags += " -std=c99 -DFT2_BUILD_LIBRARY";
 		android.cppFlags += " -std=c99 -DFT2_BUILD_LIBRARY";
-		
-		BuildTarget ios = BuildTarget.newDefaultTarget(TargetOs.IOS, false);
-		ios.headerDirs = headers;
-		ios.cIncludes = sources;
-		ios.cFlags += " -std=c99 -DFT2_BUILD_LIBRARY";
-		ios.cppFlags += " -std=c99 -DFT2_BUILD_LIBRARY";
 
 		new NativeCodeGenerator().generate();
-		new AntScriptGenerator().generate(new BuildConfig("gdx-freetype"), win32home, win32, win64, lin32, lin64, mac, android, ios);
+		new AntScriptGenerator().generate(new BuildConfig("gdx-freetype"), win32home, win32, win64, lin32, lin64, mac, android);
 // BuildExecutor.executeAnt("jni/build-windows32home.xml", "-v clean");
 // BuildExecutor.executeAnt("jni/build-windows32home.xml", "-v");
 //		BuildExecutor.executeAnt("jni/build.xml", "pack-natives -v");
diff --git a/extensions/gdx-image/libs/gdx-image-natives.jar b/extensions/gdx-image/libs/gdx-image-natives.jar
new file mode 100644
index 0000000..d14af30
Binary files /dev/null and b/extensions/gdx-image/libs/gdx-image-natives.jar differ
diff --git a/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/AndroidNdkScriptGenerator.java b/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/AndroidNdkScriptGenerator.java
index 92d8c99..ca2ed44 100644
--- a/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/AndroidNdkScriptGenerator.java
+++ b/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/AndroidNdkScriptGenerator.java
@@ -86,6 +86,7 @@ public class AndroidNdkScriptGenerator {
 		template = template.replace("%linkerFlags%", target.linkerFlags);
 		template = template.replace("%srcFiles%", srcFiles);
 
+		System.out.println(template);
 		config.jniDir.child("Android.mk").writeString(template, false);
 	}
 
diff --git a/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/AntScriptGenerator.java b/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/AntScriptGenerator.java
index 6be4ada..7a50007 100644
--- a/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/AntScriptGenerator.java
+++ b/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/AntScriptGenerator.java
@@ -98,9 +98,9 @@ public class AntScriptGenerator {
 				+ config.jniDir.child(buildFileName) + "'");
 
 			if (!target.excludeFromMasterBuildFile) {
-				if (target.os != TargetOs.MacOsX && target.os != TargetOs.IOS) {
+				if (target.os != TargetOs.MacOsX) {
 					buildFiles.add(buildFileName);
-				} 
+				}
 				sharedLibFiles.add(getSharedLibFilename(target.os, target.is64Bit, config.sharedLibName));
 				libsDirs.add("../" + libsDir.path().replace('\\', '/'));
 			}
@@ -158,10 +158,6 @@ public class AntScriptGenerator {
 			libPrefix = "lib";
 			libSuffix = ".dylib";
 		}
-		if (os == TargetOs.IOS) {
-			libPrefix = "lib";
-			libSuffix = ".a";
-		}
 		return libPrefix + sharedLibName + libSuffix;
 	}
 
@@ -188,14 +184,8 @@ public class AntScriptGenerator {
 		}
 
 		// read template file from resources
-		String template = null;
-		if(target.os == TargetOs.IOS) {
-			template = new FileDescriptor("com/badlogic/gdx/jnigen/resources/scripts/build-ios.xml.template",
+		String template = new FileDescriptor("com/badlogic/gdx/jnigen/resources/scripts/build-target.xml.template",
 			FileType.Classpath).readString();
-		} else {
-			template = new FileDescriptor("com/badlogic/gdx/jnigen/resources/scripts/build-target.xml.template",
-				FileType.Classpath).readString();
-		}
 
 		// generate shared lib filename and jni platform headers directory name
 		String libName = getSharedLibFilename(target.os, target.is64Bit, config.sharedLibName);
diff --git a/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/BuildTarget.java b/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/BuildTarget.java
index 2e844f4..10d9624 100644
--- a/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/BuildTarget.java
+++ b/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/BuildTarget.java
@@ -21,7 +21,7 @@ package com.badlogic.gdx.jnigen;
 public class BuildTarget {
 	/** The target operating system of a build target. */
 	public enum TargetOs {
-		Windows, Linux, MacOsX, Android, IOS
+		Windows, Linux, MacOsX, Android
 	}
 
 	/** the target operating system **/
@@ -133,16 +133,6 @@ public class BuildTarget {
 				"-lm");
 			return android;
 		}
-		
-		if(type == TargetOs.IOS) {
-			// iOS, 386 simulator and armv7a, compiled to fat static lib
-			BuildTarget ios = new BuildTarget(TargetOs.IOS, false, new String[] {"**/*.c"}, new String[0],
-				new String[] {"**/*.cpp"}, new String[0], new String[0], "",
-				"-c -Wall -O2",
-				"-c -Wall -O2",
-				"rcs");
-			return ios;
-		}
 
 		throw new RuntimeException("Unknown target type");
 	}
diff --git a/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/resources/scripts/build-ios.xml.template b/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/resources/scripts/build-ios.xml.template
deleted file mode 100755
index 6b3baf6..0000000
--- a/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/resources/scripts/build-ios.xml.template
+++ /dev/null
@@ -1,183 +0,0 @@
-<project name="%projectName%" basedir="." default="postcompile">
-	<!-- include the environment -->
-	<property environment="env"/>	
-	<!-- output directory for temporary object files -->
-	<property name="buildDir" value="%buildDir%" />
-	<!-- output directory for the shared library -->
-	<property name="libsDir" value="%libsDir%" />
-	<!-- the name of the shared library -->
-	<property name="libName" value="%libName%"/>
-	<!-- the jni header jniPlatform to use -->
-	<property name="jniPlatform" value="mac"/>
-	<!-- the compilerPrefix for the C & C++ compilers -->
-	<property name="compilerPrefix" value="%compilerPrefix%"/>	
-	<property name="iphoneos-platform" value="/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin"/>
-	<property name="iphoneos-sdk" value="/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS6.0.sdk/"/>
-	<property name="iphonesimulator-platform" value="/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/usr/bin"/>
-	<property name="iphonesimulator-sdk" value="/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator6.0.sdk/"/>
-	
-	<!-- define gcc compiler, options and files to compile -->
-	<property name="gcc" value="${compilerPrefix}gcc"/>	
-	<property name="gcc-opts" value="%cFlags%"/>
-	<fileset id="gcc-files" dir="./">
-		<exclude name="target/"/>		
-		%cIncludes%
-		%cExcludes%
-	</fileset>
-	
-	<!-- define g++ compiler, options and files to compile -->
-	<property name="g++" value="${compilerPrefix}g++"/>
-	<property name="g++-opts" value="%cppFlags%"/>
-	<fileset id="g++-files" dir="./">
-		<exclude name="target/"/>
-		%cppIncludes%
-		%cppExcludes%
-	</fileset>
-
-	<!-- define linker and options -->
-	<property name="linker" value="${compilerPrefix}ar"/>
-	<property name="linker-opts" value="%linkerFlags%"/>
-	<property name="libraries" value="%libraries%"/>
-	
-	<!-- cleans the build directory, removes all object files and shared libs -->
-	<target name="clean">
-		<delete includeemptydirs="true" quiet="true">
-			<fileset dir="${buildDir}"/>
-			<fileset dir="${libsDir}" includes="**/*" excludes="**/.svn"/>
-		</delete>
-	</target>
-	
-	<target name="clean-objfiles">
-		<delete>
-			<fileset dir="${buildDir}">
-				<include name="**/*.o"/>
-			</fileset>
-		</delete>
-	</target>
-	
-	<target name="create-build-dir">
-		<!-- FIXME this is pretty nasty :/ -->
-		<copy todir="${buildDir}">
-			<fileset refid="g++-files"/>
-			<fileset refid="gcc-files"/>
-		</copy>
-		<delete>
-			<fileset dir="${buildDir}">
-				<include name="*"/>
-				<exclude name="*.o"/>
-			</fileset>
-		</delete>
-	</target>
-
-	<!-- compiles all C and C++ files to object files in the build directory, for 386 builds-->
-	<target name="compile-386" depends="clean,create-build-dir">
-		<mkdir dir="${buildDir}"/>
-		<apply failonerror="true" executable="${iphonesimulator-platform}/${g++}" dest="${buildDir}" verbose="true">
-			<arg line="-isysroot ${iphonesimulator-sdk} -arch i386 ${g++-opts}"/>
-			<arg value="-Ijni-headers"/>
-			<arg value="-Ijni-headers/${jniPlatform}"/>
-			<arg value="-I."/>
-			%headerDirs%
-			<srcfile/>
-			<arg value="-o"/>
-			<targetfile/>
-			<fileset refid="g++-files"/>
-			<compositemapper>
-				<mapper type="glob" from="*.cpp" to="*.o"/>
-				<mapper type="glob" from="*.mm" to="*.o"/>
-			</compositemapper>
-		</apply>
-		<apply failonerror="true" executable="${iphonesimulator-platform}/${gcc}" dest="${buildDir}" verbose="true">
-			<arg line="-isysroot ${iphonesimulator-sdk} -arch i386 ${gcc-opts}"/>
-			<arg value="-Ijni-headers"/>
-			<arg value="-Ijni-headers/${jniPlatform}"/>
-			<arg value="-I."/>
-			%headerDirs%
-			<srcfile/>
-			<arg value="-o"/>
-			<targetfile/>
-			<fileset refid="gcc-files"/>
-			<compositemapper>
-				<mapper type="glob" from="*.c" to="*.o"/>
-			</compositemapper>
-		</apply>
-	</target>	
-
-	<!-- links the shared library based on the previously compiled object files -->
-	<target name="link-386" depends="compile-386">
-		<fileset dir="${buildDir}" id="objFileSet">
-			<patternset>
-				<include name="**/*.o" />
-			</patternset>
-		</fileset>
-		<pathconvert pathsep=" " property="objFiles" refid="objFileSet" />
-		<mkdir dir="${libsDir}" />
-		<exec executable="${iphonesimulator-platform}/${linker}" failonerror="true" dir="${buildDir}">
-			<arg line="${linker-opts}" />
-			<arg path="${libsDir}/${libName}.386" />
-			<arg line="${objFiles}"/>
-			<arg line="${libraries}" />
-		</exec>
-	</target>
-	
-	<!-- compiles all C and C++ files to object files in the build directory, for 386 builds-->
-	<target name="compile-arm" depends="create-build-dir,clean-objfiles">
-		<mkdir dir="${buildDir}"/>
-		<apply failonerror="true" executable="${iphoneos-platform}/${g++}" dest="${buildDir}" verbose="true">
-			<arg line="-isysroot ${iphoneos-sdk} -arch armv7 ${g++-opts}"/>
-			<arg value="-Ijni-headers"/>
-			<arg value="-Ijni-headers/${jniPlatform}"/>
-			<arg value="-I."/>
-			%headerDirs%
-			<srcfile/>
-			<arg value="-o"/>
-			<targetfile/>
-			<fileset refid="g++-files"/>
-			<compositemapper>
-				<mapper type="glob" from="*.cpp" to="*.o"/>
-				<mapper type="glob" from="*.mm" to="*.o"/>
-			</compositemapper>
-		</apply>
-		<apply failonerror="true" executable="${iphoneos-platform}/${gcc}" dest="${buildDir}" verbose="true">
-			<arg line="-isysroot ${iphoneos-sdk} -arch armv7 ${gcc-opts}"/>
-			<arg value="-Ijni-headers"/>
-			<arg value="-Ijni-headers/${jniPlatform}"/>
-			<arg value="-I."/>
-			%headerDirs%
-			<srcfile/>
-			<arg value="-o"/>
-			<targetfile/>
-			<fileset refid="gcc-files"/>
-			<compositemapper>
-				<mapper type="glob" from="*.c" to="*.o"/>
-			</compositemapper>
-		</apply>
-	</target>	
-
-	<!-- links the shared library based on the previously compiled object files -->
-	<target name="link-arm" depends="compile-arm">
-		<fileset dir="${buildDir}" id="objFileSet">
-			<patternset>
-				<include name="**/*.o" />
-			</patternset>
-		</fileset>
-		<pathconvert pathsep=" " property="objFiles" refid="objFileSet" />
-		<mkdir dir="${libsDir}" />
-		<exec executable="${iphoneos-platform}/${linker}" failonerror="true" dir="${buildDir}">
-			<arg line="${linker-opts}" />
-			<arg path="${libsDir}/${libName}.armv7" />
-			<arg line="${objFiles}"/>
-			<arg line="${libraries}" />
-		</exec>
-	</target>
-
-	<target name="link-fat">
-		<exec executable="lipo" failonerror="true" dir="${libsDir}">
-			<arg line="-create -output ${libName} ${libName}.386 ${libName}.armv7"/>
-		</exec>
-	</target>
-
-	<target name="postcompile" depends="link-386,link-arm,link-fat">
-		%postcompile%
-	</target>
-</project>
diff --git a/extensions/gdx-remote/libs/armeabi-v7a/libandroidgl20.so b/extensions/gdx-remote/libs/armeabi-v7a/libandroidgl20.so
new file mode 100644
index 0000000..7a7cd7f
Binary files /dev/null and b/extensions/gdx-remote/libs/armeabi-v7a/libandroidgl20.so differ
diff --git a/extensions/gdx-remote/libs/armeabi-v7a/libgdx.so b/extensions/gdx-remote/libs/armeabi-v7a/libgdx.so
new file mode 100644
index 0000000..8d31a3e
Binary files /dev/null and b/extensions/gdx-remote/libs/armeabi-v7a/libgdx.so differ
diff --git a/extensions/gdx-remote/libs/armeabi/libandroidgl20.so b/extensions/gdx-remote/libs/armeabi/libandroidgl20.so
new file mode 100644
index 0000000..7a7cd7f
Binary files /dev/null and b/extensions/gdx-remote/libs/armeabi/libandroidgl20.so differ
diff --git a/extensions/gdx-remote/libs/armeabi/libgdx.so b/extensions/gdx-remote/libs/armeabi/libgdx.so
new file mode 100644
index 0000000..36f294f
Binary files /dev/null and b/extensions/gdx-remote/libs/armeabi/libgdx.so differ
diff --git a/extensions/gdx-setup-ui/config/libgdx.txt b/extensions/gdx-setup-ui/config/libgdx.txt
index d96a45a..5353ffe 100644
--- a/extensions/gdx-setup-ui/config/libgdx.txt
+++ b/extensions/gdx-setup-ui/config/libgdx.txt
@@ -22,10 +22,10 @@ http://libgdx.badlogicgames.com/
 http://libgdx.googlecode.com/svn/trunk/extensions/gdx-setup-ui/config/libgdx-logo.png
 
 [stable-version]
-0.9.8
+0.9.7
 
 [stable-url]
-http://libgdx.googlecode.com/files/libgdx-0.9.8.zip
+http://libgdx.googlecode.com/files/libgdx-0.9.7.zip
 
 [latest-url]
 http://libgdx.badlogicgames.com/nightlies/libgdx-nightly-latest.zip
@@ -53,26 +53,4 @@ gdx-backend-android-sources.jar
 
 [libs-html]
 gdx-backend-gwt.jar
-gdx-backend-gwt-sources.jar
-
-[libs-ios]
-ios/gdx.dll
-ios/gdx.dll.mdb
-ios/gdx-backend-ios.dll
-ios/gdx-backend-ios.dll.mdb
-ios/libgdx.a
-ios/objectal/libObjectAL.dll
-ios/ikvm/bin/ICSharpCode.SharpZipLib.dll
-ios/ikvm/bin/IKVM.OpenJDK.Beans.dll
-ios/ikvm/bin/IKVM.OpenJDK.Charsets.dll
-ios/ikvm/bin/IKVM.OpenJDK.Core.dll
-ios/ikvm/bin/IKVM.OpenJDK.Misc.dll
-ios/ikvm/bin/IKVM.OpenJDK.Text.dll
-ios/ikvm/bin/IKVM.OpenJDK.Util.dll
-ios/ikvm/bin/IKVM.Reflection.dll
-ios/ikvm/bin/IKVM.Runtime.JNI.dll
-ios/ikvm/bin/IKVM.Runtime.dll
-ios/ikvm/bin/ikvm.exe
-ios/ikvm/bin/ikvmc.exe
-ios/ikvm/bin/ikvmstub.exe
-ios/ikvm/bin/libikvm-natives.a
\ No newline at end of file
+gdx-backend-gwt-sources.jar
\ No newline at end of file
diff --git a/extensions/gdx-setup-ui/src/aurelienribon/gdxsetupui/BaseProjectConfiguration.java b/extensions/gdx-setup-ui/src/aurelienribon/gdxsetupui/BaseProjectConfiguration.java
index 1297d68..d8d7ffe 100644
--- a/extensions/gdx-setup-ui/src/aurelienribon/gdxsetupui/BaseProjectConfiguration.java
+++ b/extensions/gdx-setup-ui/src/aurelienribon/gdxsetupui/BaseProjectConfiguration.java
@@ -29,11 +29,9 @@ public abstract class BaseProjectConfiguration {
 	public boolean isDesktopIncluded = false;
 	public boolean isAndroidIncluded = false;
 	public boolean isHtmlIncluded = false;
-	public boolean isIosIncluded = true;
 	public String suffixCommon = "";
 	public String suffixDesktop = "-desktop";
 	public String suffixAndroid = "-android";
-	public String suffixIos = "-ios";
 	public String suffixHtml = "-html";
 
 	public final List<String> libraries = new ArrayList<String>();
diff --git a/extensions/gdx-setup-ui/src/aurelienribon/gdxsetupui/Helper.java b/extensions/gdx-setup-ui/src/aurelienribon/gdxsetupui/Helper.java
index 0823913..85c2331 100644
--- a/extensions/gdx-setup-ui/src/aurelienribon/gdxsetupui/Helper.java
+++ b/extensions/gdx-setup-ui/src/aurelienribon/gdxsetupui/Helper.java
@@ -65,10 +65,6 @@ public class Helper {
 	public static String getHtmlPrjPath(BaseProjectConfiguration cfg) {
 		return FilenameUtils.normalize(cfg.destinationPath + "/" + cfg.projectName + cfg.suffixHtml + "/", true);
 	}
-	
-	public static String getIosPrjPath (ProjectUpdateConfiguration cfg) {
-		return FilenameUtils.normalize(cfg.destinationPath + "/" + cfg.projectName + cfg.suffixIos + "/", true);
-	}
 
 	// -------------------------------------------------------------------------
 	// Classpath
diff --git a/extensions/gdx-setup-ui/src/aurelienribon/gdxsetupui/LibraryDef.java b/extensions/gdx-setup-ui/src/aurelienribon/gdxsetupui/LibraryDef.java
index 2198072..90f7496 100644
--- a/extensions/gdx-setup-ui/src/aurelienribon/gdxsetupui/LibraryDef.java
+++ b/extensions/gdx-setup-ui/src/aurelienribon/gdxsetupui/LibraryDef.java
@@ -37,7 +37,6 @@ public class LibraryDef {
 	public final List<String> libsDesktop;
 	public final List<String> libsAndroid;
 	public final List<String> libsHtml;
-	public final List<String> libsIos;
 	public final List<String> data;
 
 	/**
@@ -59,7 +58,6 @@ public class LibraryDef {
 		this.libsDesktop = ParseUtils.parseBlockAsList(content, "libs-desktop");
 		this.libsAndroid = ParseUtils.parseBlockAsList(content, "libs-android");
 		this.libsHtml = ParseUtils.parseBlockAsList(content, "libs-html");
-		this.libsIos = ParseUtils.parseBlockAsList(content, "libs-ios");
 		this.data = ParseUtils.parseBlockAsList(content, "data");
 	}
 }
\ No newline at end of file
diff --git a/extensions/gdx-setup-ui/src/aurelienribon/gdxsetupui/ProjectSetup.java b/extensions/gdx-setup-ui/src/aurelienribon/gdxsetupui/ProjectSetup.java
index 5be6a5b..0df1187 100644
--- a/extensions/gdx-setup-ui/src/aurelienribon/gdxsetupui/ProjectSetup.java
+++ b/extensions/gdx-setup-ui/src/aurelienribon/gdxsetupui/ProjectSetup.java
@@ -75,7 +75,6 @@ public class ProjectSetup {
 		if (cfg.isDesktopIncluded) templateManager.define("PRJ_DESKTOP_NAME", cfg.projectName + cfg.suffixDesktop);
 		if (cfg.isAndroidIncluded) templateManager.define("PRJ_ANDROID_NAME", cfg.projectName + cfg.suffixAndroid);
 		if (cfg.isHtmlIncluded) templateManager.define("PRJ_HTML_NAME", cfg.projectName + cfg.suffixHtml);
-		if (cfg.isIosIncluded) templateManager.define("PRJ_IOS_NAME", cfg.projectName + cfg.suffixIos);
 
 		// Android manifest definitions
 		if (!cfg.androidMinSdkVersion.equals("")) templateManager.define("ANDROID_MIN_SDK", cfg.androidMinSdkVersion);
@@ -125,7 +124,6 @@ public class ProjectSetup {
 		File desktopPrjLibsDir = new File(tmpDst, "/prj-desktop/libs");
 		File androidPrjLibsDir = new File(tmpDst, "/prj-android/libs");
 		File htmlPrjLibsDir = new File(tmpDst, "/prj-html/war/WEB-INF/lib");
-		File iosPrjLibsDir = new File(tmpDst, "/prj-ios/libs");
 		File dataDir = new File(tmpDst, "/prj-android/assets");
 
 		for (String library : cfg.libraries) {
@@ -147,8 +145,6 @@ public class ProjectSetup {
 					if (entryName.endsWith(elemName)) copyEntry(zis, elemName, androidPrjLibsDir);
 				for (String elemName : def.libsHtml)
 					if (entryName.endsWith(elemName)) copyEntry(zis, elemName, htmlPrjLibsDir);
-				for (String elemName : def.libsIos)
-					if(entryName.endsWith(elemName)) copyEntry(zis, elemName, iosPrjLibsDir);
 				for (String elemName : def.data)
 					if (entryName.endsWith(elemName)) copyEntry(zis, elemName, dataDir);
 			}
@@ -254,15 +250,6 @@ public class ProjectSetup {
 			templateDir(src);
 			FileUtils.moveDirectory(src, dst);
 		}
-		
-		if(cfg.isIosIncluded) {
-			File src = new File(tmpDst, "prj-ios");
-			File dst = new File(tmpDst, cfg.projectName + cfg.suffixIos);
-			move(src, "my-gdx-game-ios.csproj", cfg.projectName + cfg.suffixIos + ".csproj");
-			move(src, "my-gdx-game-ios.sln", cfg.projectName + cfg.suffixIos + ".sln");
-			templateDir(src);
-			FileUtils.moveDirectory(src, dst);
-		}
 	}
 
 	/**
@@ -288,11 +275,6 @@ public class ProjectSetup {
 			src = new File(tmpDst, cfg.projectName + cfg.suffixHtml);
 			FileUtils.copyDirectoryToDirectory(src, dst);
 		}
-		
-		if(cfg.isIosIncluded) {
-			src = new File(tmpDst, cfg.projectName + cfg.suffixIos);
-			FileUtils.copyDirectoryToDirectory(src, dst);
-		}
 	}
 
 	/**
@@ -313,7 +295,7 @@ public class ProjectSetup {
 			if (file.isDirectory()) {
 				templateDir(file);
 			} else {
-				if (endsWith(file.getName(), ".jar", ".zip", ".dll", ".a", ".png")) continue;
+				if (endsWith(file.getName(), ".jar", ".zip", ".png")) continue;
 				templateManager.processOver(file);
 			}
 		}
diff --git a/extensions/gdx-setup-ui/src/aurelienribon/gdxsetupui/ProjectUpdate.java b/extensions/gdx-setup-ui/src/aurelienribon/gdxsetupui/ProjectUpdate.java
index ff2730b..2c15427 100644
--- a/extensions/gdx-setup-ui/src/aurelienribon/gdxsetupui/ProjectUpdate.java
+++ b/extensions/gdx-setup-ui/src/aurelienribon/gdxsetupui/ProjectUpdate.java
@@ -67,7 +67,6 @@ public class ProjectUpdate {
 		File desktopPrjLibsDir = new File(Helper.getDesktopPrjPath(cfg) + "libs");
 		File androidPrjLibsDir = new File(Helper.getAndroidPrjPath(cfg) + "libs");
 		File htmlPrjLibsDir = new File(Helper.getHtmlPrjPath(cfg) + "war/WEB-INF/lib");
-		File iosPrjLibsDir = new File(Helper.getIosPrjPath(cfg) + "libs");
 		File dataDir = new File(Helper.getAndroidPrjPath(cfg) + "assets");
 
 		for (String library : cfg.libraries) {
@@ -100,11 +99,6 @@ public class ProjectUpdate {
 					for (String elemName : def.libsHtml)
 						if (entryName.endsWith(elemName)) copyEntry(zis, elemName, htmlPrjLibsDir);
 				}
-				
-				if(cfg.isIosIncluded) {
-					for(String elemName : def.libsIos)
-						if (entryName.endsWith(elemName)) copyEntry(zis, elemName, iosPrjLibsDir);
-				}
 			}
 
 			zis.close();
diff --git a/extensions/gdx-setup-ui/src/aurelienribon/gdxsetupui/ShellBuilder.java b/extensions/gdx-setup-ui/src/aurelienribon/gdxsetupui/ShellBuilder.java
deleted file mode 100755
index 6b11925..0000000
--- a/extensions/gdx-setup-ui/src/aurelienribon/gdxsetupui/ShellBuilder.java
+++ /dev/null
@@ -1,53 +0,0 @@
-package aurelienribon.gdxsetupui;
-
-import java.io.IOException;
-
-import org.apache.commons.io.IOUtils;
-
-import aurelienribon.gdxsetupui.ui.Ctx;
-import aurelienribon.utils.Res;
-import aurelienribon.utils.HttpUtils.DownloadTask;
-
-/**
- * Executes a {@link ProjectSetup} on the shell. Mainly used for testing
- * the packaging of new libs.
- * 
- * @author mzechner
- *
- */
-public class ShellBuilder {
-	private static final String MASTER_CONFIG = "https://raw.github.com/libgdx/libgdx/master/extensions/gdx-setup-ui/config/config.txt";
-	
-	public static void main (String[] args) throws IOException {
-		LibraryManager libs = new LibraryManager(MASTER_CONFIG);
-		ProjectSetupConfiguration config = new ProjectSetupConfiguration();
-		config.projectName="test-game";
-		config.isDesktopIncluded = true;
-		config.isAndroidIncluded = true;
-		config.isHtmlIncluded = true;
-		config.isIosIncluded = true;
-		config.destinationPath = "d:/tmp";
-		ProjectSetup setup = new ProjectSetup(config, libs);
-		
-		libs.downloadConfigFile();
-		String rawDef = IOUtils.toString(Res.getStream("libgdx.txt"));
-		LibraryDef def = new LibraryDef(rawDef);
-		libs.addDef("libgdx", def);
-		config.libraries.add("libgdx");
-		config.librariesZipPaths.put("libgdx", "d:/tmp/libgdx-nightly-latest.zip");
-		
-		System.out.println("Decompressing projects...");
-		setup.inflateProjects();
-		System.out.println(" done\nDecompressing libraries...");
-		setup.inflateLibraries();
-		System.out.println(" done\nConfiguring libraries...");
-		setup.configureLibraries();
-		System.out.println(" done\nPost-processing files...");
-		setup.postProcess();
-		System.out.println(" done\nCopying projects...");
-		setup.copy();
-		System.out.println(" done\nCleaning...");
-		setup.clean();
-		System.out.println(" done\nAll done!");
-	}
-}
diff --git a/extensions/gdx-setup-ui/src/aurelienribon/gdxsetupui/ui/panels/AdvancedSettingsPanel.form b/extensions/gdx-setup-ui/src/aurelienribon/gdxsetupui/ui/panels/AdvancedSettingsPanel.form
index 450b913..0f9aabf 100644
--- a/extensions/gdx-setup-ui/src/aurelienribon/gdxsetupui/ui/panels/AdvancedSettingsPanel.form
+++ b/extensions/gdx-setup-ui/src/aurelienribon/gdxsetupui/ui/panels/AdvancedSettingsPanel.form
@@ -33,7 +33,7 @@
               <Component id="paintedPanel2" min="-2" max="-2" attributes="0"/>
               <EmptySpace type="unrelated" max="-2" attributes="0"/>
               <Component id="paintedPanel1" min="-2" max="-2" attributes="0"/>
-              <EmptySpace pref="80" max="32767" attributes="0"/>
+              <EmptySpace pref="92" max="32767" attributes="0"/>
           </Group>
       </Group>
     </DimensionLayout>
@@ -147,7 +147,7 @@
       <Layout>
         <DimensionLayout dim="0">
           <Group type="103" groupAlignment="0" attributes="0">
-              <Group type="102" attributes="0">
+              <Group type="102" alignment="0" attributes="0">
                   <EmptySpace max="-2" attributes="0"/>
                   <Group type="103" groupAlignment="0" attributes="0">
                       <Group type="102" alignment="0" attributes="0">
@@ -176,14 +176,7 @@
                       </Group>
                       <Group type="102" alignment="1" attributes="0">
                           <EmptySpace min="0" pref="0" max="32767" attributes="0"/>
-                          <Group type="103" groupAlignment="0" attributes="0">
-                              <Component id="jLabel9" alignment="1" min="-2" max="-2" attributes="0"/>
-                              <Group type="102" alignment="1" attributes="0">
-                                  <Component id="jLabel11" min="-2" pref="107" max="-2" attributes="0"/>
-                                  <EmptySpace type="unrelated" max="-2" attributes="0"/>
-                                  <Component id="iosSuffixField" min="-2" pref="140" max="-2" attributes="0"/>
-                              </Group>
-                          </Group>
+                          <Component id="jLabel9" min="-2" max="-2" attributes="0"/>
                       </Group>
                   </Group>
                   <EmptySpace max="-2" attributes="0"/>
@@ -207,12 +200,7 @@
                       <Component id="jLabel2" alignment="3" min="-2" max="-2" attributes="0"/>
                       <Component id="desktopSuffixField" alignment="3" min="-2" max="-2" attributes="0"/>
                   </Group>
-                  <EmptySpace max="-2" attributes="0"/>
-                  <Group type="103" groupAlignment="3" attributes="0">
-                      <Component id="jLabel11" alignment="3" min="-2" max="-2" attributes="0"/>
-                      <Component id="iosSuffixField" alignment="3" min="-2" max="-2" attributes="0"/>
-                  </Group>
-                  <EmptySpace min="-2" pref="4" max="-2" attributes="0"/>
+                  <EmptySpace type="separate" max="-2" attributes="0"/>
                   <Component id="jLabel9" min="-2" max="-2" attributes="0"/>
                   <EmptySpace max="32767" attributes="0"/>
               </Group>
@@ -266,18 +254,6 @@
             <Property name="text" type="java.lang.String" value="Do not use twice the same suffix to avoid undefined behavior"/>
           </Properties>
         </Component>
-        <Component class="javax.swing.JTextField" name="iosSuffixField">
-          <Properties>
-            <Property name="text" type="java.lang.String" value="-ios"/>
-            <Property name="name" type="java.lang.String" value="" noResource="true"/>
-          </Properties>
-        </Component>
-        <Component class="javax.swing.JLabel" name="jLabel11">
-          <Properties>
-            <Property name="horizontalAlignment" type="int" value="4"/>
-            <Property name="text" type="java.lang.String" value="iOS project suffix"/>
-          </Properties>
-        </Component>
       </SubComponents>
     </Container>
   </SubComponents>
diff --git a/extensions/gdx-setup-ui/src/aurelienribon/gdxsetupui/ui/panels/AdvancedSettingsPanel.java b/extensions/gdx-setup-ui/src/aurelienribon/gdxsetupui/ui/panels/AdvancedSettingsPanel.java
index 40315d8..2571da4 100644
--- a/extensions/gdx-setup-ui/src/aurelienribon/gdxsetupui/ui/panels/AdvancedSettingsPanel.java
+++ b/extensions/gdx-setup-ui/src/aurelienribon/gdxsetupui/ui/panels/AdvancedSettingsPanel.java
@@ -36,7 +36,6 @@ public class AdvancedSettingsPanel extends javax.swing.JPanel {
 		desktopSuffixField.setText(Ctx.cfgSetup.suffixDesktop);
 		androidSuffixField.setText(Ctx.cfgSetup.suffixAndroid);
 		htmlSuffixField.setText(Ctx.cfgSetup.suffixHtml);
-                iosSuffixField.setText(Ctx.cfgSetup.suffixIos);
 		androidMinSdkField.setText(Ctx.cfgSetup.androidMinSdkVersion);
 		androidTargetSdkField.setText(Ctx.cfgSetup.androidTargetSdkVersion);
 		androidMaxSdkField.setText(Ctx.cfgSetup.androidMaxSdkVersion);
@@ -45,7 +44,6 @@ public class AdvancedSettingsPanel extends javax.swing.JPanel {
 		desktopSuffixField.addKeyListener(updateOnTypeKeyListener);
 		androidSuffixField.addKeyListener(updateOnTypeKeyListener);
 		htmlSuffixField.addKeyListener(updateOnTypeKeyListener);
-                iosSuffixField.addKeyListener(updateOnTypeKeyListener);
 		androidMinSdkField.addKeyListener(updateOnTypeKeyListener);
 		androidTargetSdkField.addKeyListener(updateOnTypeKeyListener);
 		androidMaxSdkField.addKeyListener(updateOnTypeKeyListener);
@@ -62,7 +60,6 @@ public class AdvancedSettingsPanel extends javax.swing.JPanel {
 		Ctx.cfgSetup.suffixCommon = coreSuffixField.getText();
 		Ctx.cfgSetup.suffixDesktop = desktopSuffixField.getText();
 		Ctx.cfgSetup.suffixAndroid = androidSuffixField.getText();
-                Ctx.cfgSetup.suffixIos = iosSuffixField.getText();
 		Ctx.cfgSetup.androidMinSdkVersion = androidMinSdkField.getText();
 		Ctx.cfgSetup.androidMaxSdkVersion = androidMaxSdkField.getText();
 		Ctx.cfgSetup.androidTargetSdkVersion = androidTargetSdkField.getText();
@@ -70,7 +67,6 @@ public class AdvancedSettingsPanel extends javax.swing.JPanel {
 		Ctx.cfgUpdate.suffixCommon = coreSuffixField.getText();
 		Ctx.cfgUpdate.suffixDesktop = desktopSuffixField.getText();
 		Ctx.cfgUpdate.suffixAndroid = androidSuffixField.getText();
-                Ctx.cfgUpdate.suffixIos = iosSuffixField.getText();
 		Ctx.fireCfgSetupChanged();
 	}
 
@@ -129,8 +125,6 @@ public class AdvancedSettingsPanel extends javax.swing.JPanel {
         jLabel3 = new javax.swing.JLabel();
         jLabel2 = new javax.swing.JLabel();
         jLabel9 = new javax.swing.JLabel();
-        iosSuffixField = new javax.swing.JTextField();
-        jLabel11 = new javax.swing.JLabel();
 
         jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
         jLabel7.setText("android:maxSdkVersion");
@@ -220,12 +214,6 @@ public class AdvancedSettingsPanel extends javax.swing.JPanel {
 
         jLabel9.setText("Do not use twice the same suffix to avoid undefined behavior");
 
-        iosSuffixField.setText("-ios");
-        iosSuffixField.setName(""); // NOI18N
-
-        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
-        jLabel11.setText("iOS project suffix");
-
         javax.swing.GroupLayout paintedPanel2Layout = new javax.swing.GroupLayout(paintedPanel2);
         paintedPanel2.setLayout(paintedPanel2Layout);
         paintedPanel2Layout.setHorizontalGroup(
@@ -253,12 +241,7 @@ public class AdvancedSettingsPanel extends javax.swing.JPanel {
                             .addComponent(androidSuffixField, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                     .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paintedPanel2Layout.createSequentialGroup()
                         .addGap(0, 0, Short.MAX_VALUE)
-                        .addGroup(paintedPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
-                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
-                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paintedPanel2Layout.createSequentialGroup()
-                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
-                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
-                                .addComponent(iosSuffixField, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))))
+                        .addComponent(jLabel9)))
                 .addContainerGap())
         );
 
@@ -281,11 +264,7 @@ public class AdvancedSettingsPanel extends javax.swing.JPanel {
                     .addComponent(htmlSuffixField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                     .addComponent(jLabel2)
                     .addComponent(desktopSuffixField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
-                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
-                .addGroup(paintedPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
-                    .addComponent(jLabel11)
-                    .addComponent(iosSuffixField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
-                .addGap(4, 4, 4)
+                .addGap(18, 18, 18)
                 .addComponent(jLabel9)
                 .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
         );
@@ -308,7 +287,7 @@ public class AdvancedSettingsPanel extends javax.swing.JPanel {
                 .addComponent(paintedPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                 .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                 .addComponent(paintedPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
-                .addContainerGap(80, Short.MAX_VALUE))
+                .addContainerGap(92, Short.MAX_VALUE))
         );
     }// </editor-fold>//GEN-END:initComponents
 
@@ -320,10 +299,8 @@ public class AdvancedSettingsPanel extends javax.swing.JPanel {
     private javax.swing.JTextField coreSuffixField;
     private javax.swing.JTextField desktopSuffixField;
     private javax.swing.JTextField htmlSuffixField;
-    private javax.swing.JTextField iosSuffixField;
     private javax.swing.JLabel jLabel1;
     private javax.swing.JLabel jLabel10;
-    private javax.swing.JLabel jLabel11;
     private javax.swing.JLabel jLabel2;
     private javax.swing.JLabel jLabel3;
     private javax.swing.JLabel jLabel4;
diff --git a/extensions/gdx-setup-ui/src/aurelienribon/gdxsetupui/ui/panels/ConfigSetupPanel.form b/extensions/gdx-setup-ui/src/aurelienribon/gdxsetupui/ui/panels/ConfigSetupPanel.form
index 7431492..79a944a 100644
--- a/extensions/gdx-setup-ui/src/aurelienribon/gdxsetupui/ui/panels/ConfigSetupPanel.form
+++ b/extensions/gdx-setup-ui/src/aurelienribon/gdxsetupui/ui/panels/ConfigSetupPanel.form
@@ -11,7 +11,7 @@
     <AuxValue name="FormSettings_listenerGenerationStyle" type="java.lang.Integer" value="0"/>
     <AuxValue name="FormSettings_variablesLocal" type="java.lang.Boolean" value="false"/>
     <AuxValue name="FormSettings_variablesModifier" type="java.lang.Integer" value="2"/>
-    <AuxValue name="designerSize" type="java.awt.Dimension" value="-84,-19,0,5,115,114,0,18,106,97,118,97,46,97,119,116,46,68,105,109,101,110,115,105,111,110,65,-114,-39,-41,-84,95,68,20,2,0,2,73,0,6,104,101,105,103,104,116,73,0,5,119,105,100,116,104,120,112,0,0,1,30,0,0,1,77"/>
+    <AuxValue name="designerSize" type="java.awt.Dimension" value="-84,-19,0,5,115,114,0,18,106,97,118,97,46,97,119,116,46,68,105,109,101,110,115,105,111,110,65,-114,-39,-41,-84,95,68,20,2,0,2,73,0,6,104,101,105,103,104,116,73,0,5,119,105,100,116,104,120,112,0,0,1,22,0,0,1,77"/>
   </AuxValues>
 
   <Layout class="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout"/>
@@ -105,7 +105,6 @@
                               <Component id="genAndroidPrjChk" alignment="0" min="-2" max="-2" attributes="0"/>
                               <Component id="genDesktopPrjChk" alignment="0" min="-2" max="-2" attributes="0"/>
                               <Component id="genHtmlPrjChk" alignment="0" min="-2" max="-2" attributes="0"/>
-                              <Component id="genIosPrjChk" alignment="0" min="-2" max="-2" attributes="0"/>
                           </Group>
                           <EmptySpace min="0" pref="0" max="32767" attributes="0"/>
                       </Group>
@@ -146,9 +145,7 @@
                   <Component id="genDesktopPrjChk" min="-2" max="-2" attributes="0"/>
                   <EmptySpace max="-2" attributes="0"/>
                   <Component id="genHtmlPrjChk" min="-2" max="-2" attributes="0"/>
-                  <EmptySpace max="-2" attributes="0"/>
-                  <Component id="genIosPrjChk" min="-2" max="-2" attributes="0"/>
-                  <EmptySpace max="-2" attributes="0"/>
+                  <EmptySpace type="separate" max="-2" attributes="0"/>
                   <Component id="advancedSettingsLabel" min="-2" max="-2" attributes="0"/>
                   <EmptySpace max="32767" attributes="0"/>
               </Group>
@@ -229,12 +226,6 @@
             <Property name="text" type="java.lang.String" value="Generate the html project"/>
           </Properties>
         </Component>
-        <Component class="aurelienribon.ui.CompactCheckBox" name="genIosPrjChk">
-          <Properties>
-            <Property name="selected" type="boolean" value="true"/>
-            <Property name="text" type="java.lang.String" value="Generate the ios project"/>
-          </Properties>
-        </Component>
       </SubComponents>
     </Container>
   </SubComponents>
diff --git a/extensions/gdx-setup-ui/src/aurelienribon/gdxsetupui/ui/panels/ConfigSetupPanel.java b/extensions/gdx-setup-ui/src/aurelienribon/gdxsetupui/ui/panels/ConfigSetupPanel.java
index b4bbf4e..9b02be0 100644
--- a/extensions/gdx-setup-ui/src/aurelienribon/gdxsetupui/ui/panels/ConfigSetupPanel.java
+++ b/extensions/gdx-setup-ui/src/aurelienribon/gdxsetupui/ui/panels/ConfigSetupPanel.java
@@ -70,7 +70,6 @@ public class ConfigSetupPanel extends javax.swing.JPanel {
 		genDesktopPrjChk.addActionListener(new ActionListener() {@Override public void actionPerformed(ActionEvent e) {update();}});
 		genAndroidPrjChk.addActionListener(new ActionListener() {@Override public void actionPerformed(ActionEvent e) {update();}});
 		genHtmlPrjChk.addActionListener(new ActionListener() {@Override public void actionPerformed(ActionEvent e) {update();}});
-                genIosPrjChk.addActionListener(new ActionListener() {@Override public void actionPerformed(ActionEvent e) {update();}});
 
 		advancedSettingsLabel.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
 		advancedSettingsLabel.addMouseListener(new MouseAdapter() {
@@ -119,7 +118,6 @@ public class ConfigSetupPanel extends javax.swing.JPanel {
 		Ctx.cfgSetup.isDesktopIncluded = genDesktopPrjChk.isSelected();
 		Ctx.cfgSetup.isAndroidIncluded = genAndroidPrjChk.isSelected();
 		Ctx.cfgSetup.isHtmlIncluded = genHtmlPrjChk.isSelected();
-                Ctx.cfgSetup.isIosIncluded = genIosPrjChk.isSelected();
 		Ctx.fireCfgSetupChanged();
 	}
 
@@ -231,7 +229,6 @@ public class ConfigSetupPanel extends javax.swing.JPanel {
         genAndroidPrjChk = new aurelienribon.ui.CompactCheckBox();
         genDesktopPrjChk = new aurelienribon.ui.CompactCheckBox();
         genHtmlPrjChk = new aurelienribon.ui.CompactCheckBox();
-        genIosPrjChk = new aurelienribon.ui.CompactCheckBox();
 
         setLayout(new java.awt.BorderLayout());
 
@@ -291,9 +288,6 @@ public class ConfigSetupPanel extends javax.swing.JPanel {
         genHtmlPrjChk.setSelected(true);
         genHtmlPrjChk.setText("Generate the html project");
 
-        genIosPrjChk.setSelected(true);
-        genIosPrjChk.setText("Generate the ios project");
-
         javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
         jPanel1.setLayout(jPanel1Layout);
         jPanel1Layout.setHorizontalGroup(
@@ -328,8 +322,7 @@ public class ConfigSetupPanel extends javax.swing.JPanel {
                             .addComponent(genCorePrjChk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                             .addComponent(genAndroidPrjChk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                             .addComponent(genDesktopPrjChk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
-                            .addComponent(genHtmlPrjChk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
-                            .addComponent(genIosPrjChk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
+                            .addComponent(genHtmlPrjChk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                         .addGap(0, 0, Short.MAX_VALUE)))
                 .addContainerGap())
         );
@@ -361,9 +354,7 @@ public class ConfigSetupPanel extends javax.swing.JPanel {
                 .addComponent(genDesktopPrjChk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                 .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                 .addComponent(genHtmlPrjChk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
-                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
-                .addComponent(genIosPrjChk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
-                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
+                .addGap(18, 18, 18)
                 .addComponent(advancedSettingsLabel)
                 .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
         );
@@ -381,7 +372,6 @@ public class ConfigSetupPanel extends javax.swing.JPanel {
     private aurelienribon.ui.CompactCheckBox genCorePrjChk;
     private aurelienribon.ui.CompactCheckBox genDesktopPrjChk;
     private aurelienribon.ui.CompactCheckBox genHtmlPrjChk;
-    private aurelienribon.ui.CompactCheckBox genIosPrjChk;
     private javax.swing.JPanel headerPanel;
     private javax.swing.JLabel jLabel1;
     private javax.swing.JLabel jLabel2;
diff --git a/extensions/gdx-setup-ui/src/aurelienribon/gdxsetupui/ui/panels/PreviewPanel.java b/extensions/gdx-setup-ui/src/aurelienribon/gdxsetupui/ui/panels/PreviewPanel.java
index f6e3233..5fa3249 100644
--- a/extensions/gdx-setup-ui/src/aurelienribon/gdxsetupui/ui/panels/PreviewPanel.java
+++ b/extensions/gdx-setup-ui/src/aurelienribon/gdxsetupui/ui/panels/PreviewPanel.java
@@ -114,14 +114,12 @@ public class PreviewPanel extends javax.swing.JPanel {
 			DefaultMutableTreeNode desktopPrjNode = nodes.get("#DIR#prj-desktop");
 			DefaultMutableTreeNode androidPrjNode = nodes.get("#DIR#prj-android");
 			DefaultMutableTreeNode htmlPrjNode = nodes.get("#DIR#prj-html");
-                        DefaultMutableTreeNode iosPrjNode = nodes.get("#DIR#prj-ios");
 
 			rootNode.removeAllChildren();
 			rootNode.add(commonPrjNode);
 			if (Ctx.cfgSetup.isDesktopIncluded) rootNode.add(desktopPrjNode);
 			if (Ctx.cfgSetup.isAndroidIncluded) rootNode.add(androidPrjNode);
 			if (Ctx.cfgSetup.isHtmlIncluded) rootNode.add(htmlPrjNode);
-                        if (Ctx.cfgSetup.isIosIncluded) rootNode.add(iosPrjNode);
 
 			updateSrc();
 			updateLibs();
@@ -224,7 +222,6 @@ public class PreviewPanel extends javax.swing.JPanel {
 			DefaultMutableTreeNode desktopLibsNode = nodes.get("#DIR#prj-desktop/libs");
 			DefaultMutableTreeNode androidLibsNode = nodes.get("#DIR#prj-android/libs");
 			DefaultMutableTreeNode htmlLibsNode = nodes.get("#DIR#prj-html/war/WEB-INF/lib");
-                        DefaultMutableTreeNode iosLibsNode = nodes.get("#DIR#prj-ios/libs");
 			DefaultMutableTreeNode dataNode = nodes.get("#DIR#prj-android/assets");
 
 			commonLibsNode.removeAllChildren();
@@ -239,8 +236,7 @@ public class PreviewPanel extends javax.swing.JPanel {
 				for (String path : def.libsDesktop) pathToNodes(path, desktopLibsNode);
 				for (String path : def.libsAndroid) pathToNodes(path, androidLibsNode);
 				for (String path : def.libsHtml) pathToNodes(path, htmlLibsNode);
-                                for (String path : def.libsIos) pathToNodes(path, iosLibsNode);
-				for (String path : def.data) pathToNodes(path, dataNode);                              
+				for (String path : def.data) pathToNodes(path, dataNode);
 			}
 		}
 
@@ -283,7 +279,6 @@ public class PreviewPanel extends javax.swing.JPanel {
 					if (isDir && name.equals("prj-desktop")) name = Ctx.cfgSetup.projectName + Ctx.cfgSetup.suffixDesktop;
 					if (isDir && name.equals("prj-android")) name = Ctx.cfgSetup.projectName + Ctx.cfgSetup.suffixAndroid;
 					if (isDir && name.equals("prj-html")) name = Ctx.cfgSetup.projectName + Ctx.cfgSetup.suffixHtml;
-                                        if (isDir && name.equals("prj-ios")) name = Ctx.cfgSetup.projectName + Ctx.cfgSetup.suffixIos;
 
 					label.setText(FilenameUtils.getName(name));
 					label.setIcon(isDir ? Res.getImage("gfx/ic_folder.png") : Res.getImage("gfx/ic_file.png"));
diff --git a/extensions/gdx-setup-ui/src/res/libgdx.txt b/extensions/gdx-setup-ui/src/res/libgdx.txt
index d96a45a..5353ffe 100644
--- a/extensions/gdx-setup-ui/src/res/libgdx.txt
+++ b/extensions/gdx-setup-ui/src/res/libgdx.txt
@@ -22,10 +22,10 @@ http://libgdx.badlogicgames.com/
 http://libgdx.googlecode.com/svn/trunk/extensions/gdx-setup-ui/config/libgdx-logo.png
 
 [stable-version]
-0.9.8
+0.9.7
 
 [stable-url]
-http://libgdx.googlecode.com/files/libgdx-0.9.8.zip
+http://libgdx.googlecode.com/files/libgdx-0.9.7.zip
 
 [latest-url]
 http://libgdx.badlogicgames.com/nightlies/libgdx-nightly-latest.zip
@@ -53,26 +53,4 @@ gdx-backend-android-sources.jar
 
 [libs-html]
 gdx-backend-gwt.jar
-gdx-backend-gwt-sources.jar
-
-[libs-ios]
-ios/gdx.dll
-ios/gdx.dll.mdb
-ios/gdx-backend-ios.dll
-ios/gdx-backend-ios.dll.mdb
-ios/libgdx.a
-ios/objectal/libObjectAL.dll
-ios/ikvm/bin/ICSharpCode.SharpZipLib.dll
-ios/ikvm/bin/IKVM.OpenJDK.Beans.dll
-ios/ikvm/bin/IKVM.OpenJDK.Charsets.dll
-ios/ikvm/bin/IKVM.OpenJDK.Core.dll
-ios/ikvm/bin/IKVM.OpenJDK.Misc.dll
-ios/ikvm/bin/IKVM.OpenJDK.Text.dll
-ios/ikvm/bin/IKVM.OpenJDK.Util.dll
-ios/ikvm/bin/IKVM.Reflection.dll
-ios/ikvm/bin/IKVM.Runtime.JNI.dll
-ios/ikvm/bin/IKVM.Runtime.dll
-ios/ikvm/bin/ikvm.exe
-ios/ikvm/bin/ikvmc.exe
-ios/ikvm/bin/ikvmstub.exe
-ios/ikvm/bin/libikvm-natives.a
\ No newline at end of file
+gdx-backend-gwt-sources.jar
\ No newline at end of file
diff --git a/extensions/gdx-setup-ui/src/res/projects.zip b/extensions/gdx-setup-ui/src/res/projects.zip
old mode 100755
new mode 100644
index 8ffa263..c267019
Binary files a/extensions/gdx-setup-ui/src/res/projects.zip and b/extensions/gdx-setup-ui/src/res/projects.zip differ
diff --git a/extensions/gdx-tools/src/com/badlogic/gdx/tools/FileProcessor.java b/extensions/gdx-tools/src/com/badlogic/gdx/tools/FileProcessor.java
index d6ef4e5..fafe58f 100644
--- a/extensions/gdx-tools/src/com/badlogic/gdx/tools/FileProcessor.java
+++ b/extensions/gdx-tools/src/com/badlogic/gdx/tools/FileProcessor.java
@@ -50,19 +50,6 @@ public class FileProcessor {
 		}
 	};
 
-	public FileProcessor () {
-	}
-
-	/** Copy constructor. */
-	public FileProcessor (FileProcessor processor) {
-		inputFilter = processor.inputFilter;
-		comparator = processor.comparator;
-		inputRegex.addAll(processor.inputRegex);
-		outputSuffix = processor.outputSuffix;
-		recursive = processor.recursive;
-		flattenOutput = processor.flattenOutput;
-	}
-
 	public FileProcessor setInputFilter (FilenameFilter inputFilter) {
 		this.inputFilter = inputFilter;
 		return this;
@@ -130,11 +117,7 @@ public class FileProcessor {
 			if (comparator != null) Collections.sort(dirEntries, entryComparator);
 
 			File inputDir = mapEntry.getKey();
-			File newOutputDir = null;
-			if (flattenOutput)
-				newOutputDir = outputRoot;
-			else if (!dirEntries.isEmpty()) //
-				newOutputDir = dirEntries.get(0).outputDir;
+			File newOutputDir = flattenOutput ? outputRoot : dirEntries.get(0).outputDir;
 			String outputName = inputDir.getName();
 			if (outputSuffix != null) outputName = outputName.replaceAll("(.*)\\..*", "$1") + outputSuffix;
 
@@ -166,16 +149,6 @@ public class FileProcessor {
 
 	private void process (File[] files, File outputRoot, File outputDir, LinkedHashMap<File, ArrayList<Entry>> dirToEntries,
 		int depth) {
-		// Store empty entries for every directory.
-		for (File file : files) {
-			File dir = file.getParentFile();
-			ArrayList<Entry> entries = dirToEntries.get(dir);
-			if (entries == null) {
-				entries = new ArrayList();
-				dirToEntries.put(dir, entries);
-			}
-		}
-
 		for (File file : files) {
 			if (file.isFile()) {
 				if (inputRegex.size > 0) {
@@ -206,7 +179,12 @@ public class FileProcessor {
 					entry.outputFile = outputDir.length() == 0 ? new File(outputName) : new File(outputDir, outputName);
 				}
 
-				dirToEntries.get(dir).add(entry);
+				ArrayList<Entry> entries = dirToEntries.get(dir);
+				if (entries == null) {
+					entries = new ArrayList();
+					dirToEntries.put(dir, entries);
+				}
+				entries.add(entry);
 			}
 			if (recursive && file.isDirectory()) {
 				File subdir = outputDir.getPath().length() == 0 ? new File(file.getName()) : new File(outputDir, file.getName());
@@ -244,9 +222,5 @@ public class FileProcessor {
 			this.inputFile = inputFile;
 			this.outputFile = outputFile;
 		}
-
-		public String toString () {
-			return inputFile.toString();
-		}
 	}
 }
diff --git a/extensions/gdx-tools/src/com/badlogic/gdx/tools/imagepacker/TexturePacker2.java b/extensions/gdx-tools/src/com/badlogic/gdx/tools/imagepacker/TexturePacker2.java
index 916a900..5cc3ba8 100644
--- a/extensions/gdx-tools/src/com/badlogic/gdx/tools/imagepacker/TexturePacker2.java
+++ b/extensions/gdx-tools/src/com/badlogic/gdx/tools/imagepacker/TexturePacker2.java
@@ -12,15 +12,13 @@
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
- ******************************************************************************/
-
+ ******************************************************************************/
 package com.badlogic.gdx.tools.imagepacker;
 
 import java.awt.Color;
 import java.awt.Graphics2D;
 import java.awt.image.BufferedImage;
 import java.io.File;
-import java.io.FileReader;
 import java.io.FileWriter;
 import java.io.IOException;
 import java.util.ArrayList;
@@ -32,18 +30,11 @@ import javax.imageio.ImageWriteParam;
 import javax.imageio.ImageWriter;
 import javax.imageio.stream.ImageOutputStream;
 
-import com.badlogic.gdx.files.FileHandle;
 import com.badlogic.gdx.graphics.Pixmap.Format;
 import com.badlogic.gdx.graphics.Texture.TextureFilter;
 import com.badlogic.gdx.graphics.Texture.TextureWrap;
-import com.badlogic.gdx.graphics.g2d.TextureAtlas;
-import com.badlogic.gdx.graphics.g2d.TextureAtlas.TextureAtlasData;
-import com.badlogic.gdx.graphics.g2d.TextureAtlas.TextureAtlasData.Region;
 import com.badlogic.gdx.math.MathUtils;
 import com.badlogic.gdx.utils.Array;
-import com.badlogic.gdx.utils.GdxRuntimeException;
-import com.badlogic.gdx.utils.JsonReader;
-import com.badlogic.gdx.utils.SerializationException;
 
 /** @author Nathan Sweet */
 public class TexturePacker2 {
@@ -112,14 +103,6 @@ public class TexturePacker2 {
 			width = Math.max(settings.minWidth, width);
 			height = Math.max(settings.minHeight, height);
 
-			if (settings.forceSquareOutput) {
-				if (width > height) {
-					height = width;
-				} else {
-					width = height;
-				}
-			}
-
 			File outputFile;
 			while (true) {
 				outputFile = new File(outputDir, imageName + (fileIndex++ == 0 ? "" : fileIndex) + "." + settings.outputFormat);
@@ -148,12 +131,10 @@ public class TexturePacker2 {
 					int imageHeight = image.getHeight();
 					// Copy corner pixels to fill corners of the padding.
 					g.drawImage(image, rectX - amountX, rectY - amountY, rectX, rectY, 0, 0, 1, 1, null);
-					g.drawImage(image, rectX + imageWidth, rectY - amountY, rectX + imageWidth + amountX, rectY, imageWidth - 1, 0,
-						imageWidth, 1, null);
-					g.drawImage(image, rectX - amountX, rectY + imageHeight, rectX, rectY + imageHeight + amountY, 0, imageHeight - 1,
-						1, imageHeight, null);
+					g.drawImage(image, rectX + imageWidth, rectY - amountY, rectX + imageWidth + amountX, rectY, 0, 0, 1, 1, null);
+					g.drawImage(image, rectX - amountX, rectY + imageHeight, rectX, rectY + imageHeight + amountY, 0, 0, 1, 1, null);
 					g.drawImage(image, rectX + imageWidth, rectY + imageHeight, rectX + imageWidth + amountX, rectY + imageHeight
-						+ amountY, imageWidth - 1, imageHeight - 1, imageWidth, imageHeight, null);
+						+ amountY, 0, 0, 1, 1, null);
 					// Copy edge pixels into padding.
 					g.drawImage(image, rectX, rectY - amountY, rectX + imageWidth, rectY, 0, 0, imageWidth, 1, null);
 					g.drawImage(image, rectX, rectY + imageHeight, rectX + imageWidth, rectY + imageHeight + amountY, 0,
@@ -200,27 +181,7 @@ public class TexturePacker2 {
 
 	private void writePackFile (File outputDir, Array<Page> pages, String packFileName) throws IOException {
 		File packFile = new File(outputDir, packFileName);
-
-		if (packFile.exists()) {
-			// Make sure there aren't duplicate names.
-			TextureAtlasData textureAtlasData = new TextureAtlasData(new FileHandle(packFile), new FileHandle(packFile), false);
-			for (Page page : pages) {
-				for (Rect rect : page.outputRects) {
-					String rectName = settings.flattenPaths ? new FileHandle(rect.name).name() : rect.name;
-					System.out.println(rectName);
-					for (Region region : textureAtlasData.getRegions()) {
-						if (region.name.equals(rectName)) {
-							throw new GdxRuntimeException("A region with the name \"" + rectName + "\" has already been packed: "
-								+ rect.name);
-						}
-					}
-				}
-			}
-		}
-
 		FileWriter writer = new FileWriter(packFile, true);
-// if (settings.jsonOutput) {
-// } else {
 		for (Page page : pages) {
 			writer.write("\n" + page.imageName + "\n");
 			writer.write("format: " + settings.format + "\n");
@@ -235,13 +196,11 @@ public class TexturePacker2 {
 				}
 			}
 		}
-// }
 		writer.close();
 	}
 
 	private void writeRect (FileWriter writer, Page page, Rect rect) throws IOException {
-		String rectName = settings.flattenPaths ? new FileHandle(rect.name).name() : rect.name;
-		writer.write(rectName + "\n");
+		writer.write(rect.name + "\n");
 		writer.write("  rotate: " + rect.rotated + "\n");
 		writer.write("  xy: " + (page.x + rect.x) + ", " + (page.y + page.height - rect.height - rect.y) + "\n");
 		writer.write("  size: " + rect.image.getWidth() + ", " + rect.image.getHeight() + "\n");
@@ -376,7 +335,6 @@ public class TexturePacker2 {
 		public boolean rotation;
 		public int minWidth = 16, minHeight = 16;
 		public int maxWidth = 1024, maxHeight = 1024;
-		public boolean forceSquareOutput = false;
 		public boolean stripWhitespaceX, stripWhitespaceY;
 		public int alphaThreshold;
 		public TextureFilter filterMin = TextureFilter.Nearest, filterMag = TextureFilter.Nearest;
@@ -388,9 +346,6 @@ public class TexturePacker2 {
 		public boolean ignoreBlankImages = true;
 		public boolean fast;
 		public boolean debug;
-		public boolean combineSubdirectories;
-		public boolean jsonOutput = true;
-		public boolean flattenPaths;
 
 		public Settings () {
 		}
@@ -420,9 +375,6 @@ public class TexturePacker2 {
 			wrapY = settings.wrapY;
 			duplicatePadding = settings.duplicatePadding;
 			debug = settings.debug;
-			combineSubdirectories = settings.combineSubdirectories;
-			jsonOutput = settings.jsonOutput;
-			flattenPaths = settings.flattenPaths;
 		}
 	}
 
@@ -487,4 +439,4 @@ public class TexturePacker2 {
 
 		process(input, output, packFileName);
 	}
-}
+}
\ No newline at end of file
diff --git a/extensions/gdx-tools/src/com/badlogic/gdx/tools/imagepacker/TexturePackerFileProcessor.java b/extensions/gdx-tools/src/com/badlogic/gdx/tools/imagepacker/TexturePackerFileProcessor.java
index 55c37b5..d0442dc 100644
--- a/extensions/gdx-tools/src/com/badlogic/gdx/tools/imagepacker/TexturePackerFileProcessor.java
+++ b/extensions/gdx-tools/src/com/badlogic/gdx/tools/imagepacker/TexturePackerFileProcessor.java
@@ -12,24 +12,19 @@
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
- ******************************************************************************/
-
+ ******************************************************************************/
 package com.badlogic.gdx.tools.imagepacker;
 
+import java.io.File;
+import java.io.FileReader;
+import java.util.ArrayList;
+import java.util.regex.Pattern;
+
 import com.badlogic.gdx.tools.FileProcessor;
 import com.badlogic.gdx.tools.imagepacker.TexturePacker2.Settings;
-import com.badlogic.gdx.utils.GdxRuntimeException;
 import com.badlogic.gdx.utils.Json;
 import com.badlogic.gdx.utils.JsonReader;
 import com.badlogic.gdx.utils.ObjectMap;
-import com.badlogic.gdx.utils.SerializationException;
-
-import java.io.File;
-import java.io.FileReader;
-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.Comparator;
-import java.util.regex.Pattern;
 
 /** @author Nathan Sweet */
 public class TexturePackerFileProcessor extends FileProcessor {
@@ -38,7 +33,6 @@ public class TexturePackerFileProcessor extends FileProcessor {
 	private Json json = new Json();
 	private String packFileName;
 	private File root;
-	ArrayList<File> ignoreDirs = new ArrayList();
 
 	public TexturePackerFileProcessor () {
 		this(new Settings(), "pack.atlas");
@@ -56,46 +50,6 @@ public class TexturePackerFileProcessor extends FileProcessor {
 
 	public ArrayList<Entry> process (File inputFile, File outputRoot) throws Exception {
 		root = inputFile;
-
-		// Collect pack.json setting files.
-		final ArrayList<File> settingsFiles = new ArrayList();
-		FileProcessor settingsProcessor = new FileProcessor() {
-			protected void processFile (Entry inputFile) throws Exception {
-				settingsFiles.add(inputFile.inputFile);
-			}
-		};
-		settingsProcessor.addInputRegex("pack\\.json");
-		settingsProcessor.process(inputFile, null);
-		// Sort parent first.
-		Collections.sort(settingsFiles, new Comparator<File>() {
-			public int compare (File file1, File file2) {
-				return file1.toString().length() - file2.toString().length();
-			}
-		});
-		for (File settingsFile : settingsFiles) {
-			// Find first parent with settings, or use defaults.
-			Settings settings = null;
-			File parent = settingsFile.getParentFile();
-			while (true) {
-				if (parent.equals(root)) break;
-				parent = parent.getParentFile();
-				settings = dirToSettings.get(parent);
-				if (settings != null) {
-					settings = new Settings(settings);
-					break;
-				}
-			}
-			if (settings == null) settings = new Settings(defaultSettings);
-			// Merge settings from current directory.
-			try {
-				json.readFields(settings, new JsonReader().parse(new FileReader(settingsFile)));
-			} catch (SerializationException ex) {
-				throw new GdxRuntimeException("Error reading settings file: " + settingsFile, ex);
-			}
-			dirToSettings.put(settingsFile.getParentFile(), settings);
-		}
-
-		// Do actual processing.
 		return super.process(inputFile, outputRoot);
 	}
 
@@ -121,39 +75,31 @@ public class TexturePackerFileProcessor extends FileProcessor {
 	}
 
 	protected void processDir (Entry inputDir, ArrayList<Entry> files) throws Exception {
-		if (ignoreDirs.contains(inputDir.inputFile)) return;
+		System.out.println(inputDir.inputFile.getName());
 
-		// Find first parent with settings, or use defaults.
+		// Start with a copy of a parent dir's settings or the default settings.
 		Settings settings = null;
 		File parent = inputDir.inputFile;
 		while (true) {
-			settings = dirToSettings.get(parent);
-			if (settings != null) break;
 			if (parent.equals(root)) break;
 			parent = parent.getParentFile();
+			settings = dirToSettings.get(parent);
+			if (settings != null) {
+				settings = new Settings(settings);
+				break;
+			}
 		}
-		if (settings == null) settings = defaultSettings;
-
-		if (settings.combineSubdirectories) {
-			// Collect all files under subdirectories and ignore subdirectories so they won't be packed twice.
-			files = new FileProcessor(this) {
-				protected void processDir (Entry entryDir, ArrayList<Entry> files) {
-					ignoreDirs.add(entryDir.inputFile);
-				}
-
-				protected void processFile (Entry entry) {
-					addProcessedFile(entry);
-				}
-			}.process(inputDir.inputFile, null);
-		}
+		if (settings == null) settings = new Settings(defaultSettings);
+		dirToSettings.put(inputDir.inputFile, settings);
 
-		if (files.isEmpty()) return;
+		// Merge settings from pack.json file.
+		File settingsFile = new File(inputDir.inputFile, "pack.json");
+		if (settingsFile.exists()) json.readFields(settings, new JsonReader().parse(new FileReader(settingsFile)));
 
 		// Pack.
-		System.out.println(inputDir.inputFile.getName());
 		TexturePacker2 packer = new TexturePacker2(root, settings);
 		for (Entry file : files)
 			packer.addImage(file.inputFile);
 		packer.pack(inputDir.outputDir, packFileName);
 	}
-}
+}
\ No newline at end of file
diff --git a/extensions/gdx-tools/src/com/badlogic/gdx/tools/imagepacker/TexturePackerTest.java b/extensions/gdx-tools/src/com/badlogic/gdx/tools/imagepacker/TexturePackerTest.java
index 06543fb..47e83d2 100644
--- a/extensions/gdx-tools/src/com/badlogic/gdx/tools/imagepacker/TexturePackerTest.java
+++ b/extensions/gdx-tools/src/com/badlogic/gdx/tools/imagepacker/TexturePackerTest.java
@@ -81,15 +81,15 @@ public class TexturePackerTest extends ApplicationAdapter {
 		int x = 20, y = 20;
 		for (Page page : pages) {
 			renderer.setColor(Color.GRAY);
-			renderer.begin(ShapeType.Filled);
+			renderer.begin(ShapeType.FilledRectangle);
 			for (int i = 0; i < page.outputRects.size; i++) {
 				Rect rect = page.outputRects.get(i);
-				renderer.rect(x + rect.x + settings.paddingX, y + rect.y + settings.paddingY, rect.width - settings.paddingX,
+				renderer.filledRect(x + rect.x + settings.paddingX, y + rect.y + settings.paddingY, rect.width - settings.paddingX,
 					rect.height - settings.paddingY);
 			}
 			renderer.end();
 			renderer.setColor(Color.RED);
-			renderer.begin(ShapeType.Line);
+			renderer.begin(ShapeType.Rectangle);
 			for (int i = 0; i < page.outputRects.size; i++) {
 				Rect rect = page.outputRects.get(i);
 				renderer.rect(x + rect.x + settings.paddingX, y + rect.y + settings.paddingY, rect.width - settings.paddingX,
diff --git a/extensions/model-loaders/model-loaders-android/libs/armeabi-v7a/libandroidgl20.so b/extensions/model-loaders/model-loaders-android/libs/armeabi-v7a/libandroidgl20.so
new file mode 100644
index 0000000..7a7cd7f
Binary files /dev/null and b/extensions/model-loaders/model-loaders-android/libs/armeabi-v7a/libandroidgl20.so differ
diff --git a/extensions/model-loaders/model-loaders-android/libs/armeabi-v7a/libgdx.so b/extensions/model-loaders/model-loaders-android/libs/armeabi-v7a/libgdx.so
new file mode 100644
index 0000000..8d31a3e
Binary files /dev/null and b/extensions/model-loaders/model-loaders-android/libs/armeabi-v7a/libgdx.so differ
diff --git a/extensions/model-loaders/model-loaders-android/libs/armeabi/libandroidgl20.so b/extensions/model-loaders/model-loaders-android/libs/armeabi/libandroidgl20.so
new file mode 100644
index 0000000..7a7cd7f
Binary files /dev/null and b/extensions/model-loaders/model-loaders-android/libs/armeabi/libandroidgl20.so differ
diff --git a/extensions/model-loaders/model-loaders-android/libs/armeabi/libgdx.so b/extensions/model-loaders/model-loaders-android/libs/armeabi/libgdx.so
new file mode 100644
index 0000000..36f294f
Binary files /dev/null and b/extensions/model-loaders/model-loaders-android/libs/armeabi/libgdx.so differ
diff --git a/fetch.xml b/fetch.xml
deleted file mode 100755
index f0fb91e..0000000
--- a/fetch.xml
+++ /dev/null
@@ -1,133 +0,0 @@
-<!-- Call this to fetch all the natives from the build server -->
-<project name="fetch-natives" default="all">
-	<property name="domain" value="http://libgdx.badlogicgames.com/nightlies/dist"/>
-	<target name="fetch">		
-		<!-- create a temporary directory for all android and ios natives, to be distributed
-		     across demos and tests. The xxx-natives.jar files are put into the respective 
-			 project's libs/ folder -->
-		<mkdir dir="tmp"/>
-		<mkdir dir="tmp/armeabi"/>
-		<mkdir dir="tmp/armeabi-v7a"/>
-		<mkdir dir="tmp/ios"/>
-		
-		<!-- core -->
-		<mkdir dir="gdx/libs/ios32"/>
-		<get src="${domain}/gdx-natives.jar" dest="gdx/libs"/>
-		<get src="${domain}/armeabi/libandroidgl20.so" dest="tmp/armeabi"/>
-		<get src="${domain}/armeabi/libgdx.so" dest="tmp/armeabi"/>
-		<get src="${domain}/armeabi-v7a/libandroidgl20.so" dest="tmp/armeabi-v7a"/>
-		<get src="${domain}/armeabi-v7a/libgdx.so" dest="tmp/armeabi-v7a"/>
-		<get src="${domain}/ios/gdx.dll" dest="gdx/libs/ios32"/>
-		<get src="${domain}/ios/gdx.dll.mdb" dest="gdx/libs/ios32"/>
-		<get src="${domain}/ios/libgdx.a" dest="tmp/ios"/>
-		<get src="${domain}/ios/ikvm/bin/libikvm-natives.a" dest="tmp/ios"/>
-		
-		<!-- ios backend -->
-		<mkdir dir="backends/gdx-backend-iosmonotouch/libs/ios32"/>
-		<get src="${domain}/ios/gdx-backend-ios.dll" dest="backends/gdx-backend-iosmonotouch/libs/ios32"/>
-		<get src="${domain}/ios/gdx-backend-ios.dll.mdb" dest="backends/gdx-backend-iosmonotouch/libs/ios32"/>		
-		
-		<!-- audio natives -->
-		<mkdir dir="extensions/gdx-audio/libs/ios32"/>
-		<get src="${domain}/extensions/gdx-audio/gdx-audio-natives.jar" dest="extensions/gdx-audio/libs"/>
-		<get src="${domain}/extensions/gdx-audio/armeabi/libgdx-audio.so" dest="tmp/armeabi"/>
-		<get src="${domain}/extensions/gdx-audio/armeabi-v7a/libgdx-audio.so" dest="tmp/armeabi-v7a"/>
-		
-		<!-- bullet natives -->
-		<mkdir dir="extensions/gdx-bullet/libs/ios32"/>
-		<get src="${domain}/extensions/gdx-bullet/gdx-bullet-natives.jar" dest="extensions/gdx-bullet/libs"/>
-		<get src="${domain}/extensions/gdx-bullet/armeabi/libgdx-bullet.so" dest="tmp/armeabi"/>
-		<get src="${domain}/extensions/gdx-bullet/armeabi-v7a/libgdx-bullet.so" dest="tmp/armeabi-v7a"/>
-		
-		<!-- controllers natives, desktop only -->
-		<mkdir dir="extensions/gdx-controllers/gdx-controllers-desktop/libs/ios32"/>
-		<get src="${domain}/extensions/gdx-controllers/gdx-controllers-desktop-natives.jar" dest="extensions/gdx-controllers/gdx-controllers-desktop/libs"/>
-		
-		<!-- freetype natives -->
-		<mkdir dir="extensions/gdx-freetype/libs/ios32"/>
-		<get src="${domain}/extensions/gdx-freetype/gdx-freetype-natives.jar" dest="extensions/gdx-freetype/libs"/>
-		<get src="${domain}/extensions/gdx-freetype/armeabi/libgdx-freetype.so" dest="tmp/armeabi"/>
-		<get src="${domain}/extensions/gdx-freetype/armeabi-v7a/libgdx-freetype.so" dest="tmp/armeabi-v7a"/>
-		<get src="${domain}/extensions/gdx-freetype/ios/gdx-freetype.dll" dest="extensions/gdx-freetype/libs/ios32"/>
-		<get src="${domain}/extensions/gdx-freetype/ios/gdx-freetype.dll.mdb" dest="extensions/gdx-freetype/libs/ios32"/>
-		<get src="${domain}/extensions/gdx-freetype/ios/libgdx-freetype.a" dest="tmp/ios"/>
-		
-		<!-- image natives -->
-		<mkdir dir="extensions/gdx-image/libs/ios32"/>
-		<get src="${domain}/extensions/gdx-image/gdx-image-natives.jar" dest="extensions/gdx-image/libs"/>
-		<get src="${domain}/extensions/gdx-image/armeabi/libgdx-image.so" dest="tmp/armeabi"/>
-		<get src="${domain}/extensions/gdx-image/armeabi-v7a/libgdx-image.so" dest="tmp/armeabi-v7a"/>	
-	</target>
-	
-	<target name="copy">
-		<!-- copy all extension natives to android tests -->
-		<copy todir="tests/gdx-tests-android/libs/armeabi">
-			<fileset dir="tmp/armeabi"/>			
-		</copy>
-		<copy todir="tests/gdx-tests-android/libs/armeabi-v7a">
-			<fileset dir="tmp/armeabi-v7a"/>			
-		</copy>
-		
-		<!-- copy all extension natives to ios tests -->
-		<copy todir="tests/gdx-tests-iosmonotouch/gdx-tests-iosmonotouch">
-			<fileset dir="tmp/ios"/>
-		</copy>
-	
-		<!-- filesets to copy to demos -->
-		<fileset id="gdx-armeabi" dir="tmp/armeabi">
-			<include name="**/libandroidgl20.so"/>
-			<include name="**/libgdx.so"/>
-		</fileset>
-		<fileset id="gdx-armeabi-v7a" dir="tmp/armeabi-v7a">
-			<include name="**/libandroidgl20.so"/>
-			<include name="**/libgdx.so"/>
-		</fileset>
-		<fileset id="gdx-ios" dir="tmp/ios">
-			<include name="**/libgdx.a"/>
-			<include name="**/libikvm-natives.a"/>
-		</fileset>
-		
-		<!-- copy to demos -->
-		<!-- invaders -->
-		<copy todir="demos/invaders/gdx-invaders-android/libs/armeabi"><fileset refid="gdx-armeabi"/></copy>
-		<copy todir="demos/invaders/gdx-invaders-android/libs/armeabi-v7a"><fileset refid="gdx-armeabi-v7a"/></copy>
-		<copy todir="demos/invaders/gdx-invaders-ios/gdx-invaders-ios"><fileset refid="gdx-ios"/></copy>
-				
-		<!-- vector pinball -->
-		<copy todir="demos/vector-pinball/gdx-vectorpinball-android/libs/armeabi"><fileset refid="gdx-armeabi"/></copy>
-		<copy todir="demos/vector-pinball/gdx-vectorpinball-android/libs/armeabi-v7a"><fileset refid="gdx-armeabi-v7a"/></copy>
-		<copy todir="demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios"><fileset refid="gdx-ios"/></copy>
-		
-		<!-- super jumper -->
-		<copy todir="demos/superjumper/superjumper-android/libs/armeabi"><fileset refid="gdx-armeabi"/></copy>
-		<copy todir="demos/superjumper/superjumper-android/libs/armeabi-v7a"><fileset refid="gdx-armeabi-v7a"/></copy>
-		<copy todir="demos/superjumper/superjumper-ios/superjumper-ios"><fileset refid="gdx-ios"/></copy>
-		
-		<!-- metagun -->
-		<copy todir="demos/metagun/metagun-android/libs/armeabi"><fileset refid="gdx-armeabi"/></copy>
-		<copy todir="demos/metagun/metagun-android/libs/armeabi-v7a"><fileset refid="gdx-armeabi-v7a"/></copy>
-		
-		<!-- cuboc -->
-		<copy todir="demos/cuboc/cuboc-android/libs/armeabi"><fileset refid="gdx-armeabi"/></copy>
-		<copy todir="demos/cuboc/cuboc-android/libs/armeabi-v7a"><fileset refid="gdx-armeabi-v7a"/></copy>
-		
-		<!-- pax britannica -->
-		<copy todir="demos/pax-britannica/pax-britannica-android/libs/armeabi"><fileset refid="gdx-armeabi"/></copy>
-		<copy todir="demos/pax-britannica/pax-britannica-android/libs/armeabi-v7a"><fileset refid="gdx-armeabi-v7a"/></copy>
-		<copy todir="demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch"><fileset refid="gdx-ios"/></copy>
-		
-		<!-- very angry robots -->
-		<copy todir="demos/very-angry-robots/very-angry-robots-android/libs/armeabi"><fileset refid="gdx-armeabi"/></copy>
-		<copy todir="demos/very-angry-robots/very-angry-robots-android/libs/armeabi-v7a"><fileset refid="gdx-armeabi-v7a"/></copy>
-		
-		<!-- model loaders -->
-		<copy todir="extensions/model-loaders/model-loaders-android/libs/armeabi"><fileset refid="gdx-armeabi"/></copy>
-		<copy todir="extensions/model-loaders/model-loaders-android/libs/armeabi-v7a"><fileset refid="gdx-armeabi-v7a"/></copy>
-		
-		<!-- gdx remote -->
-		<copy todir="extensions/gdx-remote/libs/armeabi"><fileset refid="gdx-armeabi"/></copy>
-		<copy todir="extensions/gdx-remote/libs/armeabi-v7a"><fileset refid="gdx-armeabi-v7a"/></copy>
-	</target>
-	
-	<target name="all" depends="fetch,copy"/>
-</project>
\ No newline at end of file
diff --git a/gdx/jni/build-ios32.xml b/gdx/jni/build-ios32.xml
deleted file mode 100755
index 54d559c..0000000
--- a/gdx/jni/build-ios32.xml
+++ /dev/null
@@ -1,186 +0,0 @@
-<project name="gdx-IOS-32" basedir="." default="postcompile">
-	<!-- include the environment -->
-	<property environment="env"/>	
-	<!-- output directory for temporary object files -->
-	<property name="buildDir" value="../target/native/ios32" />
-	<!-- output directory for the shared library -->
-	<property name="libsDir" value="../libs/ios32" />
-	<!-- the name of the shared library -->
-	<property name="libName" value="libgdx.a"/>
-	<!-- the jni header jniPlatform to use -->
-	<property name="jniPlatform" value="mac"/>
-	<!-- the compilerPrefix for the C & C++ compilers -->
-	<property name="compilerPrefix" value=""/>	
-	<property name="iphoneos-platform" value="/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin"/>
-	<property name="iphoneos-sdk" value="/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS6.0.sdk/"/>
-	<property name="iphonesimulator-platform" value="/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/usr/bin"/>
-	<property name="iphonesimulator-sdk" value="/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator6.0.sdk/"/>
-	
-	<!-- define gcc compiler, options and files to compile -->
-	<property name="gcc" value="${compilerPrefix}gcc"/>	
-	<property name="gcc-opts" value="-c -Wall -O2"/>
-	<fileset id="gcc-files" dir="./">
-		<exclude name="target/"/>		
-				<include name="memcpy_wrap.c"/>
-		<include name="**/*.c"/>
-
-		
-	</fileset>
-	
-	<!-- define g++ compiler, options and files to compile -->
-	<property name="g++" value="${compilerPrefix}g++"/>
-	<property name="g++-opts" value="-c -Wall -O2"/>
-	<fileset id="g++-files" dir="./">
-		<exclude name="target/"/>
-				<include name="**/*.cpp"/>
-
-		
-	</fileset>
-
-	<!-- define linker and options -->
-	<property name="linker" value="${compilerPrefix}ar"/>
-	<property name="linker-opts" value="rcs"/>
-	<property name="libraries" value=""/>
-	
-	<!-- cleans the build directory, removes all object files and shared libs -->
-	<target name="clean">
-		<delete includeemptydirs="true" quiet="true">
-			<fileset dir="${buildDir}"/>
-			<fileset dir="${libsDir}" includes="**/*" excludes="**/.svn"/>
-		</delete>
-	</target>
-	
-	<target name="clean-objfiles">
-		<delete>
-			<fileset dir="${buildDir}">
-				<include name="**/*.o"/>
-			</fileset>
-		</delete>
-	</target>
-	
-	<target name="create-build-dir">
-		<!-- FIXME this is pretty nasty :/ -->
-		<copy todir="${buildDir}">
-			<fileset refid="g++-files"/>
-			<fileset refid="gcc-files"/>
-		</copy>
-		<delete>
-			<fileset dir="${buildDir}">
-				<include name="*"/>
-				<exclude name="*.o"/>
-			</fileset>
-		</delete>
-	</target>
-
-	<!-- compiles all C and C++ files to object files in the build directory, for 386 builds-->
-	<target name="compile-386" depends="clean,create-build-dir">
-		<mkdir dir="${buildDir}"/>
-		<apply failonerror="true" executable="${iphonesimulator-platform}/${g++}" dest="${buildDir}" verbose="true">
-			<arg line="-isysroot ${iphonesimulator-sdk} -arch i386 ${g++-opts}"/>
-			<arg value="-Ijni-headers"/>
-			<arg value="-Ijni-headers/${jniPlatform}"/>
-			<arg value="-I."/>
-			
-			<srcfile/>
-			<arg value="-o"/>
-			<targetfile/>
-			<fileset refid="g++-files"/>
-			<compositemapper>
-				<mapper type="glob" from="*.cpp" to="*.o"/>
-				<mapper type="glob" from="*.mm" to="*.o"/>
-			</compositemapper>
-		</apply>
-		<apply failonerror="true" executable="${iphonesimulator-platform}/${gcc}" dest="${buildDir}" verbose="true">
-			<arg line="-isysroot ${iphonesimulator-sdk} -arch i386 ${gcc-opts}"/>
-			<arg value="-Ijni-headers"/>
-			<arg value="-Ijni-headers/${jniPlatform}"/>
-			<arg value="-I."/>
-			
-			<srcfile/>
-			<arg value="-o"/>
-			<targetfile/>
-			<fileset refid="gcc-files"/>
-			<compositemapper>
-				<mapper type="glob" from="*.c" to="*.o"/>
-			</compositemapper>
-		</apply>
-	</target>	
-
-	<!-- links the shared library based on the previously compiled object files -->
-	<target name="link-386" depends="compile-386">
-		<fileset dir="${buildDir}" id="objFileSet">
-			<patternset>
-				<include name="**/*.o" />
-			</patternset>
-		</fileset>
-		<pathconvert pathsep=" " property="objFiles" refid="objFileSet" />
-		<mkdir dir="${libsDir}" />
-		<exec executable="${iphonesimulator-platform}/${linker}" failonerror="true" dir="${buildDir}">
-			<arg line="${linker-opts}" />
-			<arg path="${libsDir}/${libName}.386" />
-			<arg line="${objFiles}"/>
-			<arg line="${libraries}" />
-		</exec>
-	</target>
-	
-	<!-- compiles all C and C++ files to object files in the build directory, for 386 builds-->
-	<target name="compile-arm" depends="create-build-dir,clean-objfiles">
-		<mkdir dir="${buildDir}"/>
-		<apply failonerror="true" executable="${iphoneos-platform}/${g++}" dest="${buildDir}" verbose="true">
-			<arg line="-isysroot ${iphoneos-sdk} -arch armv7 ${g++-opts}"/>
-			<arg value="-Ijni-headers"/>
-			<arg value="-Ijni-headers/${jniPlatform}"/>
-			<arg value="-I."/>
-			
-			<srcfile/>
-			<arg value="-o"/>
-			<targetfile/>
-			<fileset refid="g++-files"/>
-			<compositemapper>
-				<mapper type="glob" from="*.cpp" to="*.o"/>
-				<mapper type="glob" from="*.mm" to="*.o"/>
-			</compositemapper>
-		</apply>
-		<apply failonerror="true" executable="${iphoneos-platform}/${gcc}" dest="${buildDir}" verbose="true">
-			<arg line="-isysroot ${iphoneos-sdk} -arch armv7 ${gcc-opts}"/>
-			<arg value="-Ijni-headers"/>
-			<arg value="-Ijni-headers/${jniPlatform}"/>
-			<arg value="-I."/>
-			
-			<srcfile/>
-			<arg value="-o"/>
-			<targetfile/>
-			<fileset refid="gcc-files"/>
-			<compositemapper>
-				<mapper type="glob" from="*.c" to="*.o"/>
-			</compositemapper>
-		</apply>
-	</target>	
-
-	<!-- links the shared library based on the previously compiled object files -->
-	<target name="link-arm" depends="compile-arm">
-		<fileset dir="${buildDir}" id="objFileSet">
-			<patternset>
-				<include name="**/*.o" />
-			</patternset>
-		</fileset>
-		<pathconvert pathsep=" " property="objFiles" refid="objFileSet" />
-		<mkdir dir="${libsDir}" />
-		<exec executable="${iphoneos-platform}/${linker}" failonerror="true" dir="${buildDir}">
-			<arg line="${linker-opts}" />
-			<arg path="${libsDir}/${libName}.armv7" />
-			<arg line="${objFiles}"/>
-			<arg line="${libraries}" />
-		</exec>
-	</target>
-
-	<target name="link-fat">
-		<exec executable="lipo" failonerror="true" dir="${libsDir}">
-			<arg line="-create -output ${libName} ${libName}.386 ${libName}.armv7"/>
-		</exec>
-	</target>
-
-	<target name="postcompile" depends="link-386,link-arm,link-fat">
-		
-	</target>
-</project>
diff --git a/gdx/jni/build.xml b/gdx/jni/build.xml
index 077eade..43dbc5e 100644
--- a/gdx/jni/build.xml
+++ b/gdx/jni/build.xml
@@ -25,7 +25,6 @@
 			<fileset dir="../libs/linux32" includes="libgdx.so"/>
 			<fileset dir="../libs/linux64" includes="libgdx64.so"/>
 			<fileset dir="../libs/android32" includes="libgdx.so"/>
-			<fileset dir="../libs/ios32" includes="libgdx.a"/>
 
 		</jar>
 	</target>
diff --git a/gdx/jni/com.badlogic.gdx.physics.box2d.ChainShape.cpp b/gdx/jni/com.badlogic.gdx.physics.box2d.ChainShape.cpp
index ba87534..f2f43c2 100644
--- a/gdx/jni/com.badlogic.gdx.physics.box2d.ChainShape.cpp
+++ b/gdx/jni/com.badlogic.gdx.physics.box2d.ChainShape.cpp
@@ -6,7 +6,7 @@
 	 JNIEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_box2d_ChainShape_newChainShape(JNIEnv* env, jobject object) {
 
 
-//@line:32
+//@line:31
 
 		return (jlong)(new b2ChainShape());
 	
@@ -17,7 +17,7 @@ JNIEXPORT void JNICALL Java_com_badlogic_gdx_physics_box2d_ChainShape_jniCreateL
 	float* verts = (float*)env->GetPrimitiveArrayCritical(obj_verts, 0);
 
 
-//@line:57
+//@line:55
 
 		b2ChainShape* chain = (b2ChainShape*)addr;
 		b2Vec2* verticesOut = new b2Vec2[numVertices];
@@ -34,7 +34,7 @@ JNIEXPORT void JNICALL Java_com_badlogic_gdx_physics_box2d_ChainShape_jniCreateC
 	float* verts = (float*)env->GetPrimitiveArrayCritical(obj_verts, 0);
 
 
-//@line:78
+//@line:75
 
 		b2ChainShape* chain = (b2ChainShape*)addr;
 		b2Vec2* verticesOut = new b2Vec2[numVertices];
@@ -50,7 +50,7 @@ JNIEXPORT void JNICALL Java_com_badlogic_gdx_physics_box2d_ChainShape_jniCreateC
 JNIEXPORT void JNICALL Java_com_badlogic_gdx_physics_box2d_ChainShape_jniSetPrevVertex(JNIEnv* env, jobject object, jlong addr, jfloat x, jfloat y) {
 
 
-//@line:97
+//@line:94
 
 		b2ChainShape* chain = (b2ChainShape*)addr;
 		chain->SetPrevVertex(b2Vec2(x, y));
@@ -61,7 +61,7 @@ JNIEXPORT void JNICALL Java_com_badlogic_gdx_physics_box2d_ChainShape_jniSetPrev
 JNIEXPORT void JNICALL Java_com_badlogic_gdx_physics_box2d_ChainShape_jniSetNextVertex(JNIEnv* env, jobject object, jlong addr, jfloat x, jfloat y) {
 
 
-//@line:112
+//@line:109
 
 		b2ChainShape* chain = (b2ChainShape*)addr;
 		chain->SetNextVertex(b2Vec2(x, y));
@@ -72,7 +72,7 @@ JNIEXPORT void JNICALL Java_com_badlogic_gdx_physics_box2d_ChainShape_jniSetNext
 JNIEXPORT jint JNICALL Java_com_badlogic_gdx_physics_box2d_ChainShape_jniGetVertexCount(JNIEnv* env, jobject object, jlong addr) {
 
 
-//@line:122
+//@line:119
 
 		b2ChainShape* chain = (b2ChainShape*)addr;
 		return chain->GetVertexCount();
@@ -84,7 +84,7 @@ JNIEXPORT void JNICALL Java_com_badlogic_gdx_physics_box2d_ChainShape_jniGetVert
 	float* verts = (float*)env->GetPrimitiveArrayCritical(obj_verts, 0);
 
 
-//@line:138
+//@line:135
 
 		b2ChainShape* chain = (b2ChainShape*)addr;
 		const b2Vec2 v = chain->GetVertex( index );
diff --git a/gdx/jni/com.badlogic.gdx.physics.box2d.joints.WeldJoint.cpp b/gdx/jni/com.badlogic.gdx.physics.box2d.joints.WeldJoint.cpp
old mode 100644
new mode 100755
diff --git a/gdx/jni/com.badlogic.gdx.physics.box2d.joints.WeldJoint.h b/gdx/jni/com.badlogic.gdx.physics.box2d.joints.WeldJoint.h
old mode 100644
new mode 100755
diff --git a/gdx/libs/gdx-natives.jar b/gdx/libs/gdx-natives.jar
new file mode 100644
index 0000000..32a1664
Binary files /dev/null and b/gdx/libs/gdx-natives.jar differ
diff --git a/gdx/libs/macosx32/libgdx.dylib b/gdx/libs/macosx32/libgdx.dylib
new file mode 100755
index 0000000..bb3ee4e
Binary files /dev/null and b/gdx/libs/macosx32/libgdx.dylib differ
diff --git a/gdx/src/com/badlogic/gdx/Application.java b/gdx/src/com/badlogic/gdx/Application.java
index 0c35288..e277eeb 100644
--- a/gdx/src/com/badlogic/gdx/Application.java
+++ b/gdx/src/com/badlogic/gdx/Application.java
@@ -21,23 +21,17 @@ import com.badlogic.gdx.utils.Clipboard;
 /** <p>
  * An <code>Application</code> is the main entry point of your project. It sets up a window and rendering surface and manages the
  * different aspects of your application, namely {@link Graphics}, {@link Audio}, {@link Input} and {@link Files}. Think of an
- * Application being equivalent to Swing's <code>JFrame</code> or Android's <code>Activity</code>.
+ * Application being equivalent to a JFrame of Activity.
  * </p>
  * 
  * <p>
- * An application can be an instance of any of the following:
- * <ul>
- * <li>a desktop application (see <code>LwjglApplication</code> found in gdx-backends-lwjgl.jar)</li>
- * <li>an Android application (see <code>AndroidApplication</code> found in gdx-backends-android.jar)</li>
- * <li>a HTML5 application (see <code>GwtApplication</code> found in gdx-backends-gwt.jar)</li>
- * <li>an iOS application (see <code>IOSApplication</code> found in gdx-backends-iosmonotouch.jar)</li>
- * </ul>
- * Each application class has it's own startup and
+ * An application can either be a desktop application (LwjglApplication found in gdx-backends-lwjgl.jar), or an Android
+ * application (AndroidApplication found in gdx-backends-android.jar). Each application class has it's own startup and
  * initialization methods. Please refer to their documentation for more information.
  * </p>
  * 
  * <p>
- * While game programmers are used to having a main loop, libgdx employs a different concept to accommodate the event based nature
+ * While game programmers are used to having a main loop, libgdx employs a different concept to accomodate the event based nature
  * of Android applications a little more. You application logic must be implemented in a {@link ApplicationListener} which has
  * methods that get called by the Application when the application is created, resumed, paused, disposed or rendered. As a
  * developer you will simply implement the ApplicationListener interface and fill in the functionality accordingly. The
@@ -70,11 +64,11 @@ import com.badlogic.gdx.utils.Clipboard;
  * 
  * <p>
  * {@link Files} offers you various methods to access internal and external files. An internal file is a file that is stored near
- * your application. On Android internal files are equivalent to assets. On the desktop the classpath is first scanned for the
+ * your application. On Android internal file are equivalent to assets. On the desktop the classpath is first scanned for the
  * specified file. If that fails then the root directory of your application is used for a look up. External files are resources
  * you create in your application and write to an external storage. On Android external files reside on the SD-card, on the
- * desktop external files are written to a users home directory. If you know what you are doing you can also specify absolute file names.
- * Absolute filenames are not portable, so take great care when using this feature.
+ * desktop external files are written to a users home directory. If you know what you do you can also specify absolute file names.
+ * This is not portable, so take great care when using this feature.
  * </p>
  * 
  * <p>
@@ -169,7 +163,7 @@ public interface Application {
 	 * @param runnable the runnable. */
 	public void postRunnable (Runnable runnable);
 
-	/** Schedule an exit from the application. On android, this will cause a call to pause() and dispose() some time in the future, it will not
+	/** Exits the application. On android, this will cause a call to pause() and dispose() some time in the future, it will not
 	 * immediately finish your application. */
 	public void exit ();
 	
diff --git a/gdx/src/com/badlogic/gdx/ApplicationAdapter.java b/gdx/src/com/badlogic/gdx/ApplicationAdapter.java
index cc8e6d1..e004b9c 100644
--- a/gdx/src/com/badlogic/gdx/ApplicationAdapter.java
+++ b/gdx/src/com/badlogic/gdx/ApplicationAdapter.java
@@ -16,7 +16,7 @@
 
 package com.badlogic.gdx;
 
-/** Convenience implementation of {@link ApplicationListener}. Derive from this and only override what you need.
+/** Convenience implementation of {@link ApplicationListener}. Derrive from this and only override what you need.
  * @author mzechner */
 public abstract class ApplicationAdapter implements ApplicationListener {
 	@Override
diff --git a/gdx/src/com/badlogic/gdx/Graphics.java b/gdx/src/com/badlogic/gdx/Graphics.java
index 61424b8..4989543 100644
--- a/gdx/src/com/badlogic/gdx/Graphics.java
+++ b/gdx/src/com/badlogic/gdx/Graphics.java
@@ -33,19 +33,15 @@ import com.badlogic.gdx.graphics.glutils.VertexArray;
 import com.badlogic.gdx.graphics.glutils.VertexBufferObject;
 
 /** <p>
- * This interface encapsulates communication with the graphics processor. Depending on the available hardware and the current
- * {@link Application} configuration, access to the {@link GL10}, {@link GL11}, {@link GL20}, and/or {@link GLCommon} are provided
- * here.
+ * This interface encapsulates the communication with the graphics processor. It allows to retrieve {@link GL10}, {@link GL11} and
+ * {@link GL20} instances depending on the available hardware and configuration of the {@link Application}. Additionally it
+ * features methods to generate {@link Pixmap}s and {@link Texture}s.
  * </p>
  * 
  * <p>
- * If supported by the backend, this interface lets you query the available display modes (graphics resolution and color depth)
- * and change it.
- * </p>
- * 
- * <p>
- * This interface can be used to switch between continuous and non-continuous rendering (see
- * {@link #setContinuousRendering(boolean)}), and to explicitly {@link #requestRendering()}.
+ * {@link Texture}s can be either managed or not managed. Managed and Textures will be restored when the OpenGL context is lost.
+ * An OpenGL ES context loss happens when a user pauses the Application ( {@link ApplicationListener#pause()}) and switches to
+ * another application on Android. On the desktop there is no concept of context loss for OpenGL.
  * </p>
  * 
  * <p>
@@ -54,6 +50,11 @@ import com.badlogic.gdx.graphics.glutils.VertexBufferObject;
  * context loss. Explore the com.badlogic.gdx.graphics package for more classes that might come in handy.
  * </p>
  * 
+ * <p>
+ * All graphical resources, be the generated by the {@link Graphics} interface or via a constructor <b>must</b> be disposed when
+ * no longer used!
+ * </p>
+ * 
  * @author mzechner */
 public interface Graphics {
 	/** Enumeration describing different types of {@link Graphics} implementations.
@@ -63,7 +64,7 @@ public interface Graphics {
 		AndroidGL, LWJGL, Angle, WebGL, iOSGL
 	}
 
-	/** Describe a fullscreen display mode
+	/** Class describing a fullscreen display mode
 	 * 
 	 * @author mzechner */
 	public class DisplayMode {
@@ -86,11 +87,11 @@ public interface Graphics {
 
 	/** Class describing the bits per pixel, depth buffer precision, stencil precision and number of MSAA samples. */
 	public static class BufferFormat {
-		/* number of bits per color channel */
+		/** number of bits per color channel **/
 		public final int r, g, b, a;
-		/* number of bits for depth and stencil buffer */
+		/** number of bits for depth and stencil buffer **/
 		public final int depth, stencil;
-		/** number of samples for multi-sample anti-aliasing (MSAA) **/
+		/** number of samples for MSAA **/
 		public final int samples;
 		/** whether coverage sampling anti-aliasing is used. in that case you have to clear the coverage buffer as well! */
 		public final boolean coverageSampling;
@@ -182,13 +183,13 @@ public interface Graphics {
 	 * @return whether display mode changes are supported or not. */
 	public boolean supportsDisplayModeChange ();
 
-	/** @return the supported fullscreen {@link DisplayMode}(s). */
+	/** @return the supported fullscreen {@link DisplayMode}. */
 	public DisplayMode[] getDisplayModes ();
 
 	/** @return the display mode of the primary graphics adapter. */
 	public DisplayMode getDesktopDisplayMode ();
 
-	/** Sets the current {@link DisplayMode}. Returns false in case the operation failed. Not all backends support this method. See
+	/** Sets the current {@link DisplayMode}. Returns false in case the operation failed. Not all backends support this methods. See
 	 * {@link Graphics#supportsDisplayModeChange()}.
 	 * 
 	 * @param displayMode the display mode.
diff --git a/gdx/src/com/badlogic/gdx/Input.java b/gdx/src/com/badlogic/gdx/Input.java
index 7952d59..9d1e099 100644
--- a/gdx/src/com/badlogic/gdx/Input.java
+++ b/gdx/src/com/badlogic/gdx/Input.java
@@ -17,25 +17,23 @@
 package com.badlogic.gdx;
 
 /** <p>
- * Interface to the input facilities. This allows polling the state of the keyboard, the touch screen and the accelerometer. On
- * some backends (desktop, gwt, etc) the touch screen is replaced by mouse input. The accelerometer is of course not available on
- * all backends.
+ * Interface to the input facilities. This allows to poll the state of the keyboard, touch screen and accelerometer. On the
+ * desktop the touch screen is replaced by mouse input, the accelerometer is of course not available.
  * </p>
  * 
  * <p>
- * Instead of polling for events, one can process all input events with an {@link InputProcessor}. You can set the InputProcessor via the
+ * Additionally one can process events with an {@link InputProcessor} with this module. You can set the InputProcessor via the
  * {@link #setInputProcessor(InputProcessor)} method. It will be called before the {@link ApplicationListener#render()} method in
  * each frame.
  * </p>
  * 
  * <p>
- * Keyboard keys are translated to the constants in {@link Keys} transparently on all systems. Do not use system specific key
+ * Keyboard keys are translated to the constants in {@link Keys} transparantely on all systems. Do not use system specific key
  * constants.
  * </p>
  * 
  * <p>
- * The class also offers methods to use (and test for the presence of) other input systems like vibration, compass,
- * on-screen keyboards, and cursor capture.  Support for simple input dialogs is also provided.
+ * The class also offers methods to let the phone vibrate as well as getting compass readings.
  * </p>
  * 
  * @author mzechner */
diff --git a/gdx/src/com/badlogic/gdx/InputProcessor.java b/gdx/src/com/badlogic/gdx/InputProcessor.java
index 532164a..b9729ed 100644
--- a/gdx/src/com/badlogic/gdx/InputProcessor.java
+++ b/gdx/src/com/badlogic/gdx/InputProcessor.java
@@ -20,10 +20,11 @@ import com.badlogic.gdx.Input.Buttons;
 
 /** An InputProcessor is used to receive input events from the keyboard and the touch screen (mouse on the desktop). For this it
  * has to be registered with the {@link Input#setInputProcessor(InputProcessor)} method. It will be called each frame before the
- * call to {@link ApplicationListener#render()}. Each method returns a boolean in case you want to use this with the {@link InputMultiplexer}
- * to chain input processors.
+ * call to {@link ApplicationListener#render()}. The methods return a* boolean in case you want to write a multiplexing
+ * InputProcessor that has a chain of child processors that signal whether they processed the event. The {@link InputMultiplexer}
+ * offers you exactly this functionality.
  * 
- * @author mzechner */
+ * @author badlogicgames@gmail.com */
 public interface InputProcessor {
 	/** Called when a key was pressed
 	 * 
diff --git a/gdx/src/com/badlogic/gdx/LifecycleListener.java b/gdx/src/com/badlogic/gdx/LifecycleListener.java
old mode 100644
new mode 100755
diff --git a/gdx/src/com/badlogic/gdx/Net.java b/gdx/src/com/badlogic/gdx/Net.java
index 6b9430e..1288ee0 100755
--- a/gdx/src/com/badlogic/gdx/Net.java
+++ b/gdx/src/com/badlogic/gdx/Net.java
@@ -97,6 +97,7 @@ public interface Net {
 	 * <ul>
 	 * <li>GET</li>
 	 * <li>POST</li>
+	 * <li>JSON</li>
 	 * </ul> */
 	public static interface HttpMethods {
 
diff --git a/gdx/src/com/badlogic/gdx/Preferences.java b/gdx/src/com/badlogic/gdx/Preferences.java
index b8ff72b..1c17cfb 100644
--- a/gdx/src/com/badlogic/gdx/Preferences.java
+++ b/gdx/src/com/badlogic/gdx/Preferences.java
@@ -20,18 +20,12 @@ import java.util.Map;
 
 /** <p>
  * A Preference instance is a hash map holding different values. It is stored alongside your application (SharedPreferences on
- * Android, LocalStorage on GWT, on the desktop a Java Preferences file in a ".prefs" directory will be created, 
- * and on iOS an NSMutableDictonary will be written to the given file). 
+ * Android, flat file in apps root directory on desktop).
  * </p>
  * 
  * <p>
- * Changes to a preferences instance will be cached in memory until {@link #flush()} is invoked.
- * </p>
- * 
- * <p>
- * Use {@link Application#getPreferences(String)} to look up a specific preferences instance.  Note that 
- * on several backends the preferences name will be used as the filename, so make sure the name is valid
- * for a filename.
+ * On the desktop the file will be located in the user directory. Make sure you give the preferences instance a name that can be
+ * used as a filename.
  * </p>
  * 
  * @author mzechner */
diff --git a/gdx/src/com/badlogic/gdx/StreamUtils.java b/gdx/src/com/badlogic/gdx/StreamUtils.java
index 31a8a22..4c0f1ce 100644
--- a/gdx/src/com/badlogic/gdx/StreamUtils.java
+++ b/gdx/src/com/badlogic/gdx/StreamUtils.java
@@ -11,7 +11,7 @@ import java.util.Set;
 
 import com.badlogic.gdx.Net.HttpRequest;
 
-/** Provides utility methods to copy streams */
+/** Provides utility methods to work streams */
 public class StreamUtils {
 
 	/** Copy the data from an {@link InputStream} to an {@link OutputStream}.
diff --git a/gdx/src/com/badlogic/gdx/Version.java b/gdx/src/com/badlogic/gdx/Version.java
index 7df4444..738cde6 100644
--- a/gdx/src/com/badlogic/gdx/Version.java
+++ b/gdx/src/com/badlogic/gdx/Version.java
@@ -20,6 +20,6 @@ package com.badlogic.gdx;
  * 
  * @author mzechner */
 public class Version {
-	/** the current version of libgdx in the major.minor.minorer format **/
-	public static String VERSION = "0.9.9";
+	/** the current version of libgdx in the major.minor format **/
+	public static String VERSION = "0.9.8";
 }
diff --git a/gdx/src/com/badlogic/gdx/files/FileHandle.java b/gdx/src/com/badlogic/gdx/files/FileHandle.java
index 5f0f145..a002c59 100644
--- a/gdx/src/com/badlogic/gdx/files/FileHandle.java
+++ b/gdx/src/com/badlogic/gdx/files/FileHandle.java
@@ -37,11 +37,6 @@ import java.io.Writer;
 
 /** Represents a file or directory on the filesystem, classpath, Android SD card, or Android assets directory. FileHandles are
  * created via a {@link Files} instance.
- * 
- * Because some of the file types are backed by composite files and may be compressed (for example, if they are in an Android .apk or are
- * found via the classpath), the methods for extracting a {@link #path()} or {@link #file()} may not be appropriate for all types.
- * Use the Reader or Stream methods here to hide these dependencies from your platform independent code.
- * 
  * @author mzechner
  * @author Nathan Sweet */
 public class FileHandle {
@@ -124,7 +119,7 @@ public class FileHandle {
 	}
 
 	/** Returns a stream for reading this file as bytes.
-	 * @throws GdxRuntimeException if the file handle represents a directory, doesn't exist, or could not be read. */
+	 * @throw GdxRuntimeException if the file handle represents a directory, doesn't exist, or could not be read. */
 	public InputStream read () {
 		if (type == FileType.Classpath || (type == FileType.Internal && !file.exists())
 			|| (type == FileType.Local && !file.exists())) {
@@ -142,19 +137,19 @@ public class FileHandle {
 	}
 
 	/** Returns a buffered stream for reading this file as bytes.
-	 * @throws GdxRuntimeException if the file handle represents a directory, doesn't exist, or could not be read. */
+	 * @throw GdxRuntimeException if the file handle represents a directory, doesn't exist, or could not be read. */
 	public BufferedInputStream read (int bufferSize) {
 		return new BufferedInputStream(read(), bufferSize);
 	}
 
 	/** Returns a reader for reading this file as characters.
-	 * @throws GdxRuntimeException if the file handle represents a directory, doesn't exist, or could not be read. */
+	 * @throw GdxRuntimeException if the file handle represents a directory, doesn't exist, or could not be read. */
 	public Reader reader () {
 		return new InputStreamReader(read());
 	}
 
 	/** Returns a reader for reading this file as characters.
-	 * @throws GdxRuntimeException if the file handle represents a directory, doesn't exist, or could not be read. */
+	 * @throw GdxRuntimeException if the file handle represents a directory, doesn't exist, or could not be read. */
 	public Reader reader (String charset) {
 		try {
 			return new InputStreamReader(read(), charset);
@@ -164,13 +159,13 @@ public class FileHandle {
 	}
 
 	/** Returns a buffered reader for reading this file as characters.
-	 * @throws GdxRuntimeException if the file handle represents a directory, doesn't exist, or could not be read. */
+	 * @throw GdxRuntimeException if the file handle represents a directory, doesn't exist, or could not be read. */
 	public BufferedReader reader (int bufferSize) {
 		return new BufferedReader(new InputStreamReader(read()), bufferSize);
 	}
 
 	/** Returns a buffered reader for reading this file as characters.
-	 * @throws GdxRuntimeException if the file handle represents a directory, doesn't exist, or could not be read. */
+	 * @throw GdxRuntimeException if the file handle represents a directory, doesn't exist, or could not be read. */
 	public BufferedReader reader (int bufferSize, String charset) {
 		try {
 			return new BufferedReader(new InputStreamReader(read(), charset), bufferSize);
@@ -180,13 +175,13 @@ public class FileHandle {
 	}
 
 	/** Reads the entire file into a string using the platform's default charset.
-	 * @throws GdxRuntimeException if the file handle represents a directory, doesn't exist, or could not be read. */
+	 * @throw GdxRuntimeException if the file handle represents a directory, doesn't exist, or could not be read. */
 	public String readString () {
 		return readString(null);
 	}
 
 	/** Reads the entire file into a string using the specified charset.
-	 * @throws GdxRuntimeException if the file handle represents a directory, doesn't exist, or could not be read. */
+	 * @throw GdxRuntimeException if the file handle represents a directory, doesn't exist, or could not be read. */
 	public String readString (String charset) {
 		int fileLength = (int)length();
 		if (fileLength == 0) fileLength = 512;
@@ -215,7 +210,7 @@ public class FileHandle {
 	}
 
 	/** Reads the entire file into a byte array.
-	 * @throws GdxRuntimeException if the file handle represents a directory, doesn't exist, or could not be read. */
+	 * @throw GdxRuntimeException if the file handle represents a directory, doesn't exist, or could not be read. */
 	public byte[] readBytes () {
 		int length = (int)length();
 		if (length == 0) length = 512;
@@ -281,7 +276,7 @@ public class FileHandle {
 
 	/** Returns a stream for writing to this file. Parent directories will be created if necessary.
 	 * @param append If false, this file will be overwritten if it exists, otherwise it will be appended.
-	 * @throws GdxRuntimeException if this file handle represents a directory, if it is a {@link FileType#Classpath} or
+	 * @throw GdxRuntimeException if this file handle represents a directory, if it is a {@link FileType#Classpath} or
 	 *        {@link FileType#Internal} file, or if it could not be written. */
 	public OutputStream write (boolean append) {
 		if (type == FileType.Classpath) throw new GdxRuntimeException("Cannot write to a classpath file: " + file);
@@ -299,7 +294,7 @@ public class FileHandle {
 	/** Reads the remaining bytes from the specified stream and writes them to this file. The stream is closed. Parent directories
 	 * will be created if necessary.
 	 * @param append If false, this file will be overwritten if it exists, otherwise it will be appended.
-	 * @throws GdxRuntimeException if this file handle represents a directory, if it is a {@link FileType#Classpath} or
+	 * @throw GdxRuntimeException if this file handle represents a directory, if it is a {@link FileType#Classpath} or
 	 *        {@link FileType#Internal} file, or if it could not be written. */
 	public void write (InputStream input, boolean append) {
 		OutputStream output = null;
@@ -328,7 +323,7 @@ public class FileHandle {
 
 	/** Returns a writer for writing to this file using the default charset. Parent directories will be created if necessary.
 	 * @param append If false, this file will be overwritten if it exists, otherwise it will be appended.
-	 * @throws GdxRuntimeException if this file handle represents a directory, if it is a {@link FileType#Classpath} or
+	 * @throw GdxRuntimeException if this file handle represents a directory, if it is a {@link FileType#Classpath} or
 	 *        {@link FileType#Internal} file, or if it could not be written. */
 	public Writer writer (boolean append) {
 		return writer(append, null);
@@ -337,7 +332,7 @@ public class FileHandle {
 	/** Returns a writer for writing to this file. Parent directories will be created if necessary.
 	 * @param append If false, this file will be overwritten if it exists, otherwise it will be appended.
 	 * @param charset May be null to use the default charset.
-	 * @throws GdxRuntimeException if this file handle represents a directory, if it is a {@link FileType#Classpath} or
+	 * @throw GdxRuntimeException if this file handle represents a directory, if it is a {@link FileType#Classpath} or
 	 *        {@link FileType#Internal} file, or if it could not be written. */
 	public Writer writer (boolean append, String charset) {
 		if (type == FileType.Classpath) throw new GdxRuntimeException("Cannot write to a classpath file: " + file);
@@ -358,7 +353,7 @@ public class FileHandle {
 
 	/** Writes the specified string to the file using the default charset. Parent directories will be created if necessary.
 	 * @param append If false, this file will be overwritten if it exists, otherwise it will be appended.
-	 * @throws GdxRuntimeException if this file handle represents a directory, if it is a {@link FileType#Classpath} or
+	 * @throw GdxRuntimeException if this file handle represents a directory, if it is a {@link FileType#Classpath} or
 	 *        {@link FileType#Internal} file, or if it could not be written. */
 	public void writeString (String string, boolean append) {
 		writeString(string, append, null);
@@ -367,7 +362,7 @@ public class FileHandle {
 	/** Writes the specified string to the file as UTF-8. Parent directories will be created if necessary.
 	 * @param append If false, this file will be overwritten if it exists, otherwise it will be appended.
 	 * @param charset May be null to use the default charset.
-	 * @throws GdxRuntimeException if this file handle represents a directory, if it is a {@link FileType#Classpath} or
+	 * @throw GdxRuntimeException if this file handle represents a directory, if it is a {@link FileType#Classpath} or
 	 *        {@link FileType#Internal} file, or if it could not be written. */
 	public void writeString (String string, boolean append, String charset) {
 		Writer writer = null;
@@ -386,7 +381,7 @@ public class FileHandle {
 
 	/** Writes the specified bytes to the file. Parent directories will be created if necessary.
 	 * @param append If false, this file will be overwritten if it exists, otherwise it will be appended.
-	 * @throws GdxRuntimeException if this file handle represents a directory, if it is a {@link FileType#Classpath} or
+	 * @throw GdxRuntimeException if this file handle represents a directory, if it is a {@link FileType#Classpath} or
 	 *        {@link FileType#Internal} file, or if it could not be written. */
 	public void writeBytes (byte[] bytes, boolean append) {
 		OutputStream output = write(append);
@@ -404,7 +399,7 @@ public class FileHandle {
 
 	/** Writes the specified bytes to the file. Parent directories will be created if necessary.
 	 * @param append If false, this file will be overwritten if it exists, otherwise it will be appended.
-	 * @throws GdxRuntimeException if this file handle represents a directory, if it is a {@link FileType#Classpath} or
+	 * @throw GdxRuntimeException if this file handle represents a directory, if it is a {@link FileType#Classpath} or
 	 *        {@link FileType#Internal} file, or if it could not be written. */
 	public void writeBytes (byte[] bytes, int offset, int length, boolean append) {
 		OutputStream output = write(append);
@@ -423,7 +418,7 @@ public class FileHandle {
 	/** Returns the paths to the children of this directory. Returns an empty list if this file handle represents a file and not a
 	 * directory. On the desktop, an {@link FileType#Internal} handle to a directory on the classpath will return a zero length
 	 * array.
-	 * @throws GdxRuntimeException if this file is an {@link FileType#Classpath} file. */
+	 * @throw GdxRuntimeException if this file is an {@link FileType#Classpath} file. */
 	public FileHandle[] list () {
 		if (type == FileType.Classpath) throw new GdxRuntimeException("Cannot list a classpath directory: " + file);
 		String[] relativePaths = file().list();
@@ -437,7 +432,7 @@ public class FileHandle {
 	/** Returns the paths to the children of this directory with the specified suffix. Returns an empty list if this file handle
 	 * represents a file and not a directory. On the desktop, an {@link FileType#Internal} handle to a directory on the classpath
 	 * will return a zero length array.
-	 * @throws GdxRuntimeException if this file is an {@link FileType#Classpath} file. */
+	 * @throw GdxRuntimeException if this file is an {@link FileType#Classpath} file. */
 	public FileHandle[] list (String suffix) {
 		if (type == FileType.Classpath) throw new GdxRuntimeException("Cannot list a classpath directory: " + file);
 		String[] relativePaths = file().list();
@@ -467,7 +462,7 @@ public class FileHandle {
 	}
 
 	/** Returns a handle to the child with the specified name.
-	 * @throws GdxRuntimeException if this file handle is a {@link FileType#Classpath} or {@link FileType#Internal} and the child
+	 * @throw GdxRuntimeException if this file handle is a {@link FileType#Classpath} or {@link FileType#Internal} and the child
 	 *        doesn't exist. */
 	public FileHandle child (String name) {
 		if (file.getPath().length() == 0) return new FileHandle(new File(name), type);
@@ -475,7 +470,7 @@ public class FileHandle {
 	}
 
 	/** Returns a handle to the sibling with the specified name.
-	 * @throws GdxRuntimeException if this file handle is a {@link FileType#Classpath} or {@link FileType#Internal} and the sibling
+	 * @throw GdxRuntimeException if this file handle is a {@link FileType#Classpath} or {@link FileType#Internal} and the sibling
 	 *        doesn't exist, or this file is the root. */
 	public FileHandle sibling (String name) {
 		if (file.getPath().length() == 0) throw new GdxRuntimeException("Cannot get the sibling of the root.");
@@ -493,7 +488,7 @@ public class FileHandle {
 		return new FileHandle(parent, type);
 	}
 
-	/** @throws GdxRuntimeException if this file handle is a {@link FileType#Classpath} or {@link FileType#Internal} file. */
+	/** @throw GdxRuntimeException if this file handle is a {@link FileType#Classpath} or {@link FileType#Internal} file. */
 	public void mkdirs () {
 		if (type == FileType.Classpath) throw new GdxRuntimeException("Cannot mkdirs with a classpath file: " + file);
 		if (type == FileType.Internal) throw new GdxRuntimeException("Cannot mkdirs with an internal file: " + file);
@@ -514,7 +509,7 @@ public class FileHandle {
 	}
 
 	/** Deletes this file or empty directory and returns success. Will not delete a directory that has children.
-	 * @throws GdxRuntimeException if this file handle is a {@link FileType#Classpath} or {@link FileType#Internal} file. */
+	 * @throw GdxRuntimeException if this file handle is a {@link FileType#Classpath} or {@link FileType#Internal} file. */
 	public boolean delete () {
 		if (type == FileType.Classpath) throw new GdxRuntimeException("Cannot delete a classpath file: " + file);
 		if (type == FileType.Internal) throw new GdxRuntimeException("Cannot delete an internal file: " + file);
@@ -522,7 +517,7 @@ public class FileHandle {
 	}
 
 	/** Deletes this file or directory and all children, recursively.
-	 * @throws GdxRuntimeException if this file handle is a {@link FileType#Classpath} or {@link FileType#Internal} file. */
+	 * @throw GdxRuntimeException if this file handle is a {@link FileType#Classpath} or {@link FileType#Internal} file. */
 	public boolean deleteDirectory () {
 		if (type == FileType.Classpath) throw new GdxRuntimeException("Cannot delete a classpath file: " + file);
 		if (type == FileType.Internal) throw new GdxRuntimeException("Cannot delete an internal file: " + file);
@@ -530,13 +525,13 @@ public class FileHandle {
 	}
 	
 	/** Deletes all children of this directory, recursively.
-	 * @throws GdxRuntimeException if this file handle is a {@link FileType#Classpath} or {@link FileType#Internal} file. */
+	 * @throw GdxRuntimeException if this file handle is a {@link FileType#Classpath} or {@link FileType#Internal} file. */
 	public void emptyDirectory () {
 		emptyDirectory(false);
 	}
 	
 	/** Deletes all children of this directory, recursively. Optionally preserving the folder structure.
-	 * @throws GdxRuntimeException if this file handle is a {@link FileType#Classpath} or {@link FileType#Internal} file. */
+	 * @throw GdxRuntimeException if this file handle is a {@link FileType#Classpath} or {@link FileType#Internal} file. */
 	public void emptyDirectory (boolean preserveTree) {
 		if (type == FileType.Classpath) throw new GdxRuntimeException("Cannot delete a classpath file: " + file);
 		if (type == FileType.Internal) throw new GdxRuntimeException("Cannot delete an internal file: " + file);
@@ -549,7 +544,7 @@ public class FileHandle {
 	 * this handle is a directory, then 1) if the destination is a file, GdxRuntimeException is thrown, or 2) if the destination is
 	 * a directory, this directory is copied into it recursively, overwriting existing files, or 3) if the destination doesn't
 	 * exist, {@link #mkdirs()} is called on the destination and this directory is copied into it recursively.
-	 * @throws GdxRuntimeException if the destination file handle is a {@link FileType#Classpath} or {@link FileType#Internal} file,
+	 * @throw GdxRuntimeException if the destination file handle is a {@link FileType#Classpath} or {@link FileType#Internal} file,
 	 *        or copying failed. */
 	public void copyTo (FileHandle dest) {
 		boolean sourceDir = isDirectory();
@@ -569,7 +564,7 @@ public class FileHandle {
 	}
 
 	/** Moves this file to the specified file, overwriting the file if it already exists.
-	 * @throws GdxRuntimeException if the source or destination file handle is a {@link FileType#Classpath} or
+	 * @throw GdxRuntimeException if the source or destination file handle is a {@link FileType#Classpath} or
 	 *        {@link FileType#Internal} file. */
 	public void moveTo (FileHandle dest) {
 		if (type == FileType.Classpath) throw new GdxRuntimeException("Cannot move a classpath file: " + file);
diff --git a/gdx/src/com/badlogic/gdx/files/FileHandleStream.java b/gdx/src/com/badlogic/gdx/files/FileHandleStream.java
index 66c6225..42f664d 100644
--- a/gdx/src/com/badlogic/gdx/files/FileHandleStream.java
+++ b/gdx/src/com/badlogic/gdx/files/FileHandleStream.java
@@ -26,7 +26,6 @@ import com.badlogic.gdx.Files.FileType;
  * that would manipulate the file instead throw UnsupportedOperationException.
  * @author Nathan Sweet */
 public abstract class FileHandleStream extends FileHandle {
-	/** Create an {@link FileType#Absolute} file at the given location. */
 	public FileHandleStream (String path) {
 		super(new File(path), FileType.Absolute);
 	}
diff --git a/gdx/src/com/badlogic/gdx/files/package-info.java b/gdx/src/com/badlogic/gdx/files/package-info.java
deleted file mode 100644
index 3c21094..0000000
--- a/gdx/src/com/badlogic/gdx/files/package-info.java
+++ /dev/null
@@ -1,10 +0,0 @@
-/**
- * Platform independent wrappers for file handles and file streaming.
- * 
- * Use {@link com.badlogic.gdx.Gdx#files} to get a reference to the {@link com.badlogic.gdx.Files} implementation
- * to create and look up files.
- *  
- */
-package com.badlogic.gdx.files;
-
-// This is a doc-only file and has no actual content.
\ No newline at end of file
diff --git a/gdx/src/com/badlogic/gdx/graphics/Color.java b/gdx/src/com/badlogic/gdx/graphics/Color.java
index 3aedfe2..04ee24b 100644
--- a/gdx/src/com/badlogic/gdx/graphics/Color.java
+++ b/gdx/src/com/badlogic/gdx/graphics/Color.java
@@ -157,30 +157,6 @@ public class Color {
 		this.a = a;
 	}
 
-	public void add (float r, float g, float b, float a) {
-		this.r += r;
-		this.g += g;
-		this.b += b;
-		this.a += a;
-		clamp();
-	}
-
-	public void sub (float r, float g, float b, float a) {
-		this.r -= r;
-		this.g -= g;
-		this.b -= b;
-		this.a -= a;
-		clamp();
-	}
-
-	public void mul (float r, float g, float b, float a) {
-		this.r *= r;
-		this.g *= g;
-		this.b *= b;
-		this.a *= a;
-		clamp();
-	}
-
 	@Override
 	public boolean equals (Object o) {
 		if (this == o) return true;
diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/Animation.java b/gdx/src/com/badlogic/gdx/graphics/g2d/Animation.java
index b679557..846c5a1 100644
--- a/gdx/src/com/badlogic/gdx/graphics/g2d/Animation.java
+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/Animation.java
@@ -124,9 +124,6 @@ public class Animation {
 	public int getKeyFrameIndex (float stateTime) {
 		int frameNumber = (int)(stateTime / frameDuration);
 
-		if(keyFrames.length == 1)
-         return 0;
-		
 		switch (playMode) {
 		case NORMAL:
 			frameNumber = Math.min(keyFrames.length - 1, frameNumber);
@@ -135,10 +132,9 @@ public class Animation {
 			frameNumber = frameNumber % keyFrames.length;
 			break;
 		case LOOP_PINGPONG:
-			frameNumber = frameNumber % ((keyFrames.length * 2) - 2);
-         if (frameNumber >= keyFrames.length)
-            frameNumber = keyFrames.length - 2 - (frameNumber - keyFrames.length);
-         break;
+			frameNumber = frameNumber % (keyFrames.length * 2);
+			if (frameNumber >= keyFrames.length) frameNumber = keyFrames.length - 1 - (frameNumber - keyFrames.length);
+			break;
 		case LOOP_RANDOM:
 			frameNumber = MathUtils.random(keyFrames.length - 1);
 			break;
diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/PixmapPacker.java b/gdx/src/com/badlogic/gdx/graphics/g2d/PixmapPacker.java
index 75cc065..afa4792 100644
--- a/gdx/src/com/badlogic/gdx/graphics/g2d/PixmapPacker.java
+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/PixmapPacker.java
@@ -181,24 +181,30 @@ public class PixmapPacker implements Disposable {
 		Blending blending = Pixmap.getBlending();
 		Pixmap.setBlending(Blending.None);
 		this.currPage.image.drawPixmap(image, (int)rect.x, (int)rect.y);
+		Pixmap.setBlending(blending);
 
+		// not terribly efficient (as the rest of the code) but will do :p
 		if (duplicateBorder) {
-			int imageWidth = image.getWidth();
-			int imageHeight = image.getHeight();
-			// Copy corner pixels to fill corners of the padding.
-			this.currPage.image.drawPixmap(image, 0, 0, 1, 1, (int)rect.x - 1, (int)rect.y - 1, 1, 1);
-			this.currPage.image.drawPixmap(image, imageWidth - 1, 0, 1, 1, (int)rect.x + (int)rect.width, (int)rect.y - 1, 1, 1);
-			this.currPage.image.drawPixmap(image, 0, imageHeight - 1, 1, 1, (int)rect.x - 1, (int)rect.y + (int)rect.height, 1, 1);
-			this.currPage.image.drawPixmap(image, imageWidth - 1, imageHeight - 1, 1, 1, (int)rect.x + (int)rect.width, (int)rect.y + (int)rect.height, 1, 1);
-			// Copy edge pixels into padding.
-			this.currPage.image.drawPixmap(image, 0, 0, imageWidth, 1, (int)rect.x, (int)rect.y - 1, (int)rect.width, 1);
-			this.currPage.image.drawPixmap(image, 0, imageHeight - 1, imageWidth, 1, (int)rect.x, (int)rect.y + (int)rect.height, (int)rect.width, 1);
-			this.currPage.image.drawPixmap(image, 0, 0, 1, imageHeight, (int)rect.x - 1, (int)rect.y, 1, (int)rect.height);
-			this.currPage.image.drawPixmap(image, imageWidth - 1, 0, 1, imageHeight, (int)rect.x + (int)rect.width, (int)rect.y, 1, (int)rect.height);
+			this.currPage.image.drawPixmap(image, (int)rect.x, (int)rect.y - 1, (int)rect.x + (int)rect.width, (int)rect.y, 0, 0,
+				image.getWidth(), 1);
+			this.currPage.image.drawPixmap(image, (int)rect.x, (int)rect.y + (int)rect.height, (int)rect.x + (int)rect.width,
+				(int)rect.y + (int)rect.height + 1, 0, image.getHeight() - 1, image.getWidth(), image.getHeight());
+
+			this.currPage.image.drawPixmap(image, (int)rect.x - 1, (int)rect.y, (int)rect.x, (int)rect.y + (int)rect.height, 0, 0,
+				1, image.getHeight());
+			this.currPage.image.drawPixmap(image, (int)rect.x + (int)rect.width, (int)rect.y, (int)rect.x + (int)rect.width + 1,
+				(int)rect.y + (int)rect.height, image.getWidth() - 1, 0, image.getWidth(), image.getHeight());
+
+			this.currPage.image.drawPixmap(image, (int)rect.x - 1, (int)rect.y - 1, (int)rect.x, (int)rect.y, 0, 0, 1, 1);
+			this.currPage.image.drawPixmap(image, (int)rect.x + (int)rect.width, (int)rect.y - 1, (int)rect.x + (int)rect.width + 1,
+				(int)rect.y, image.getWidth() - 1, 0, image.getWidth(), 1);
+
+			this.currPage.image.drawPixmap(image, (int)rect.x - 1, (int)rect.y + (int)rect.height, (int)rect.x, (int)rect.y
+				+ (int)rect.height + 1, 0, image.getHeight() - 1, 1, image.getHeight());
+			this.currPage.image.drawPixmap(image, (int)rect.x + (int)rect.width, (int)rect.y + (int)rect.height, (int)rect.x
+				+ (int)rect.width + 1, (int)rect.y + (int)rect.height + 1, image.getWidth() - 1, image.getHeight() - 1,
+				image.getWidth(), image.getHeight());
 		}
-		
-		Pixmap.setBlending(blending);
-		
 		currPage.addedRects.add(name);
 		return rect;
 	}
diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/TextureAtlas.java b/gdx/src/com/badlogic/gdx/graphics/g2d/TextureAtlas.java
index f12fae1..1e5d5bf 100644
--- a/gdx/src/com/badlogic/gdx/graphics/g2d/TextureAtlas.java
+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/TextureAtlas.java
@@ -222,9 +222,8 @@ public class TextureAtlas implements Disposable {
 		this(new TextureAtlasData(packFile, imagesDir, flip));
 	}
 
-	/** @param data May be null. */
 	public TextureAtlas (TextureAtlasData data) {
-		if (data != null) load(data);
+		load(data);
 	}
 
 	private void load (TextureAtlasData data) {
@@ -489,8 +488,6 @@ public class TextureAtlas implements Disposable {
 
 		public AtlasRegion (Texture texture, int x, int y, int width, int height) {
 			super(texture, x, y, width, height);
-			originalWidth = width;
-			originalHeight = height;
 			packedWidth = width;
 			packedHeight = height;
 		}
diff --git a/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java b/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java
index d2bc9c9..873b2a2 100644
--- a/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java
+++ b/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java
@@ -20,7 +20,6 @@ import com.badlogic.gdx.Gdx;
 import com.badlogic.gdx.graphics.Camera;
 import com.badlogic.gdx.graphics.Color;
 import com.badlogic.gdx.graphics.GL10;
-import com.badlogic.gdx.graphics.glutils.ShapeRenderer.ShapeType;
 import com.badlogic.gdx.math.MathUtils;
 import com.badlogic.gdx.math.Matrix4;
 import com.badlogic.gdx.utils.GdxRuntimeException;
@@ -44,14 +43,12 @@ import com.badlogic.gdx.utils.GdxRuntimeException;
  * shapeRenderer.begin(ShapeType.Line);
  * shapeRenderer.color(1, 1, 0, 1);
  * shapeRenderer.line(x, y, x2, y2);
- * shapeRenderer.rect(x, y, width, height);
- * shapeRenderer.circle(x, y, radius);
+ * shapeRenderer.line(x3, y3, x4, y4);
  * shapeRenderer.end();
  * 
- * shapeRenderer.begin(ShapeType.Filled);
+ * shapeRenderer.begin(ShapeType.Box);
  * shapeRenderer.color(0, 1, 0, 1);
- * shapeRenderer.rect(x, y, width, height);
- * shapeRenderer.circle(x, y, radius);
+ * shapeRenderer.box(x, y, z, width, height, depth);
  * shapeRenderer.end();
  * }
  * </pre>
@@ -61,7 +58,7 @@ import com.badlogic.gdx.utils.GdxRuntimeException;
  * rectangle around its center using the z-axis as the rotation axis and placing it's center at (20, 12, 2):
  * 
  * <pre>
- * shapeRenderer.begin(ShapeType.Line);
+ * shapeRenderer.begin(ShapeType.Rectangle);
  * shapeRenderer.identity();
  * shapeRenderer.translate(20, 12, 2);
  * shapeRenderer.rotate(0, 0, 1, 90);
@@ -75,14 +72,24 @@ import com.badlogic.gdx.utils.GdxRuntimeException;
  * The projection and transformation matrices are a state of the ShapeRenderer, just like the color and will be applied to all
  * shapes until they are changed.
  * 
- * @author mzechner, stbachmann */
+ * @author mzechner */
 public class ShapeRenderer {
 	/** Shape types to be used with {@link #begin(ShapeType)}.
-	 * @author mzechner, stbachmann */
+	 * @author mzechner */
 	public enum ShapeType {
-		Point(GL10.GL_POINTS),
-		Line(GL10.GL_LINES),
-		Filled(GL10.GL_TRIANGLES);
+		Point(GL10.GL_POINTS), //
+		Line(GL10.GL_LINES), //
+		Rectangle(GL10.GL_LINES), //
+		FilledRectangle(GL10.GL_TRIANGLES), //
+		Box(GL10.GL_LINES), //
+		Circle(GL10.GL_LINES), //
+		FilledCircle(GL10.GL_TRIANGLES), //
+		Triangle(GL10.GL_LINES), //
+		FilledTriangle(GL10.GL_TRIANGLES), //
+		Cone(GL10.GL_LINES), //
+		FilledCone(GL10.GL_TRIANGLES), //
+		Curve(GL10.GL_LINES), //
+		;
 
 		private final int glType;
 
@@ -94,7 +101,7 @@ public class ShapeRenderer {
 			return glType;
 		}
 	}
-	
+
 	ImmediateModeRenderer renderer;
 	boolean matrixDirty = false;
 	Matrix4 projView = new Matrix4();
@@ -116,7 +123,7 @@ public class ShapeRenderer {
 		projView.setToOrtho2D(0, 0, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
 		matrixDirty = true;
 	}
-	
+
 	/** Sets the {@link Color} to be used by shapes.
 	 * @param color */
 	public void setColor (Color color) {
@@ -177,7 +184,7 @@ public class ShapeRenderer {
 		transform.scale(scaleX, scaleY, scaleZ);
 		matrixDirty = true;
 	}
-	
+
 	/** Starts a new batch of shapes. All shapes within the batch have to have the type specified. E.g. if {@link ShapeType#Point}
 	 * is specified, only call #point().
 	 * 
@@ -196,12 +203,12 @@ public class ShapeRenderer {
 		}
 		renderer.begin(combined, currType.getGlType());
 	}
-	
+
 	/** Draws a point. The {@link ShapeType} passed to begin has to be {@link ShapeType#Point}.
 	 * @param x
 	 * @param y
 	 * @param z */
-	public void point(float x, float y, float z){
+	public void point (float x, float y, float z) {
 		if (currType != ShapeType.Point) throw new GdxRuntimeException("Must call begin(ShapeType.Point)");
 		checkDirty();
 		checkFlush(1);
@@ -216,7 +223,7 @@ public class ShapeRenderer {
 	 * @param x2
 	 * @param y2
 	 * @param z2 */
-	public void line(float x, float y, float z, float x2, float y2, float z2){
+	public void line (float x, float y, float z, float x2, float y2, float z2) {
 		if (currType != ShapeType.Line) throw new GdxRuntimeException("Must call begin(ShapeType.Line)");
 		checkDirty();
 		checkFlush(2);
@@ -225,13 +232,13 @@ public class ShapeRenderer {
 		renderer.color(color.r, color.g, color.b, color.a);
 		renderer.vertex(x2, y2, z2);
 	}
-	
+
 	/** Draws a line in the x/y plane. The {@link ShapeType} passed to begin has to be {@link ShapeType#Line}.
 	 * @param x
 	 * @param y
 	 * @param x2
 	 * @param y2 */
-	public void line(float x, float y, float x2, float y2){
+	public void line (float x, float y, float x2, float y2) {
 		if (currType != ShapeType.Line) throw new GdxRuntimeException("Must call begin(ShapeType.Line)");
 		checkDirty();
 		checkFlush(2);
@@ -240,9 +247,24 @@ public class ShapeRenderer {
 		renderer.color(color.r, color.g, color.b, color.a);
 		renderer.vertex(x2, y2, 0);
 	}
-	
-	public void curve(float x1, float y1, float cx1, float cy1, float cx2, float cy2, float x2, float y2, int segments){
-		if (currType != ShapeType.Line) throw new GdxRuntimeException("Must call begin(ShapeType.Line)");
+
+	/** Calls {@link #curve(float, float, float, float, float, float, float, float, int)} by estimating the number of segments
+	 * needed for a smooth curve. */
+	public void curve (float x1, float y1, float cx1, float cy1, float cx2, float cy2, float x2, float y2) {
+		float dx1 = cx1 - x1;
+		float dy1 = cy1 - y1;
+		float dx2 = cx2 - cx1;
+		float dy2 = cy2 - cy1;
+		float dx3 = x2 - cx2;
+		float dy3 = y2 - cy2;
+		float length = (float)Math.sqrt(dx1 * dx1 + dy1 * dy1) + (float)Math.sqrt(dx2 * dx2 + dy2 * dy2)
+			+ (float)Math.sqrt(dx3 * dx3 + dy3 * dy3);
+		curve(x1, y1, cx1, cy1, cx2, cy2, x2, y2, 4 * (int)Math.cbrt(length));
+	}
+
+	/** Draws a curve in the x/y plane. The {@link ShapeType} passed to begin has to be {@link ShapeType#Curve}. */
+	public void curve (float x1, float y1, float cx1, float cy1, float cx2, float cy2, float x2, float y2, int segments) {
+		if (currType != ShapeType.Curve) throw new GdxRuntimeException("Must call begin(ShapeType.Curve)");
 		checkDirty();
 		checkFlush(segments * 2 + 2);
 
@@ -291,155 +313,101 @@ public class ShapeRenderer {
 		renderer.color(color.r, color.g, color.b, color.a);
 		renderer.vertex(x2, y2, 0);
 	}
-	
-	public void triangle(float x1, float y1, float x2, float y2, float x3, float y3){
-		if (currType != ShapeType.Filled && currType != ShapeType.Line) 
-			throw new GdxRuntimeException("Must call begin(ShapeType.Filled) or begin(ShapeType.Line)");
+
+	/** Draws a rectangle in the x/y plane. The x and y coordinate specify the bottom left corner of the rectangle. The
+	 * {@link ShapeType} passed to begin has to be {@link ShapeType#Rectangle}.
+	 * @param x
+	 * @param y
+	 * @param width
+	 * @param height */
+	public void rect (float x, float y, float width, float height) {
+		if (currType != ShapeType.Rectangle) throw new GdxRuntimeException("Must call begin(ShapeType.Rectangle)");
 		checkDirty();
-		checkFlush(6);
-		if(currType == ShapeType.Line){
-			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x1, y1, 0);
-			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x2, y2, 0);
-	
-			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x2, y2, 0);
-			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x3, y3, 0);
-	
-			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x3, y3, 0);
-			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x1, y1, 0);
-		}
-		else {
-			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x1, y1, 0);
-			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x2, y2, 0);
-			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x3, y3, 0);
-		}
+		checkFlush(8);
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x, y, 0);
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x + width, y, 0);
+
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x + width, y, 0);
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x + width, y + height, 0);
+
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x + width, y + height, 0);
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x, y + height, 0);
+
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x, y + height, 0);
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x, y, 0);
 	}
-	
-	/** Draws a rectangle in the x/y plane. The x and y coordinate specify the bottom left corner of the rectangle. The
-	 * {@link ShapeType} passed to begin has to be {@link ShapeType#Filled} or  {@link ShapeType#Line}.
+
+	/** Draws a filled rectangle in the x/y plane. The x and y coordinate specify the bottom left corner of the rectangle. The
+	 * {@link ShapeType} passed to begin has to be {@link ShapeType#FilledRectangle}.
 	 * @param x
 	 * @param y
 	 * @param width
 	 * @param height */
-	public void rect(float x, float y, float width, float height){
-		if (currType != ShapeType.Filled && currType != ShapeType.Line) 
-			throw new GdxRuntimeException("Must call begin(ShapeType.Filled) or begin(ShapeType.Line)");
-		
+	public void filledRect (float x, float y, float width, float height) {
+		if (currType != ShapeType.FilledRectangle) throw new GdxRuntimeException("Must call begin(ShapeType.FilledRectangle)");
 		checkDirty();
 		checkFlush(8);
-		
-		if(currType == ShapeType.Line){
-			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x, y, 0);
-			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x + width, y, 0);
-	
-			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x + width, y, 0);
-			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x + width, y + height, 0);
-	
-			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x + width, y + height, 0);
-			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x, y + height, 0);
-	
-			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x, y + height, 0);
-			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x, y, 0);
-		}
-		else {
-			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x, y, 0);
-			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x + width, y, 0);
-			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x + width, y + height, 0);
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x, y, 0);
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x + width, y, 0);
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x + width, y + height, 0);
 
-			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x + width, y + height, 0);
-			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x, y + height, 0);
-			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x, y, 0);
-		}
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x + width, y + height, 0);
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x, y + height, 0);
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x, y, 0);
 	}
-	
-	
-	/** Draws a rectangle in the x/y plane. The x and y coordinate specify the bottom left corner of the rectangle. The
-	 * {@link ShapeType} passed to begin has to be {@link ShapeType#Filled} or  {@link ShapeType#Line}.
+
+	/** Draws a filled rectangle in the x/y plane. The x and y coordinate specify the bottom left corner of the rectangle. The
+	 * {@link ShapeType} passed to begin has to be {@link ShapeType#FilledRectangle}. The 4 color parameters specify the color for
+	 * the bottom left, bottom right, top right and top left corner of the rectangle, allowing you to create gradients.
 	 * @param x
 	 * @param y
 	 * @param width
 	 * @param height */
-	public void rect(float x, float y, float width, float height, Color col1, Color col2, Color col3, Color col4){
-		if (currType != ShapeType.Filled && currType != ShapeType.Line) 
-			throw new GdxRuntimeException("Must call begin(ShapeType.Filled) or begin(ShapeType.Line)");
-		
+	public void filledRect (float x, float y, float width, float height, Color c1, Color c2, Color c3, Color c4) {
+		if (currType != ShapeType.FilledRectangle) throw new GdxRuntimeException("Must call begin(ShapeType.FilledRectangle)");
 		checkDirty();
 		checkFlush(8);
-		
-		if(currType == ShapeType.Line){
-			renderer.color(col1.r, col1.g, col1.b, col1.a);
-			renderer.vertex(x, y, 0);
-			renderer.color(col2.r, col2.g, col2.b, col2.a);
-			renderer.vertex(x + width, y, 0);
-	
-			renderer.color(col2.r, col2.g, col2.b, col2.a);
-			renderer.vertex(x + width, y, 0);
-			renderer.color(col3.r, col3.g, col3.b, col3.a);
-			renderer.vertex(x + width, y + height, 0);
-	
-			renderer.color(col3.r, col3.g, col3.b, col3.a);
-			renderer.vertex(x + width, y + height, 0);
-			renderer.color(col4.r, col4.g, col4.b, col4.a);
-			renderer.vertex(x, y + height, 0);
-	
-			renderer.color(col4.r, col4.g, col4.b, col4.a);
-			renderer.vertex(x, y + height, 0);
-			renderer.color(col1.r, col1.g, col1.b, col1.a);
-			renderer.vertex(x, y, 0);
-		}
-		else {
-			renderer.color(col1.r, col1.g, col1.b, col1.a);
-			renderer.vertex(x, y, 0);
-			renderer.color(col2.r, col2.g, col2.b, col2.a);
-			renderer.vertex(x + width, y, 0);
-			renderer.color(col3.r, col3.g, col3.b, col3.a);
-			renderer.vertex(x + width, y + height, 0);
-
-			renderer.color(col3.r, col3.g, col3.b, col3.a);
-			renderer.vertex(x + width, y + height, 0);
-			renderer.color(col4.r, col4.g, col4.b, col4.a);
-			renderer.vertex(x, y + height, 0);
-			renderer.color(col1.r, col1.g, col1.b, col1.a);
-			renderer.vertex(x, y, 0);
-		}
+		renderer.color(c1.r, c1.g, c1.b, c1.a);
+		renderer.vertex(x, y, 0);
+		renderer.color(c2.r, c2.g, c2.b, c2.a);
+		renderer.vertex(x + width, y, 0);
+		renderer.color(c3.r, c3.g, c3.b, c3.a);
+		renderer.vertex(x + width, y + height, 0);
+
+		renderer.color(c3.r, c3.g, c3.b, c3.a);
+		renderer.vertex(x + width, y + height, 0);
+		renderer.color(c4.r, c4.g, c4.b, c4.a);
+		renderer.vertex(x, y + height, 0);
+		renderer.color(c1.r, c1.g, c1.b, c1.a);
+		renderer.vertex(x, y, 0);
 	}
-	
+
 	/** Draws a box. The x, y and z coordinate specify the bottom left front corner of the rectangle. The {@link ShapeType} passed
-	 * to begin has to be {@link ShapeType#Line}.
+	 * to begin has to be {@link ShapeType#Box}.
 	 * @param x
 	 * @param y
 	 * @param width
 	 * @param height */
-	public void box(float x, float y, float z, float width, float height, float depth){
-		if (currType != ShapeType.Line) throw new GdxRuntimeException("Must call begin(ShapeType.Line)");
-		
+	public void box (float x, float y, float z, float width, float height, float depth) {
+		if (currType != ShapeType.Box) throw new GdxRuntimeException("Must call begin(ShapeType.Box)");
 		checkDirty();
 		checkFlush(16);
-		
+
 		depth = -depth;
-		
 		renderer.color(color.r, color.g, color.b, color.a);
 		renderer.vertex(x, y, z);
 		renderer.color(color.r, color.g, color.b, color.a);
@@ -500,16 +468,15 @@ public class ShapeRenderer {
 		renderer.color(color.r, color.g, color.b, color.a);
 		renderer.vertex(x, y + height, z + depth);
 	}
-	
+
 	/** Calls {@link #circle(float, float, float, int)} by estimating the number of segments needed for a smooth circle. */
 	public void circle (float x, float y, float radius) {
 		circle(x, y, radius, (int)(6 * (float)Math.cbrt(radius)));
 	}
-	
-	public void circle(float x, float y, float radius, int segments){
+
+	public void circle (float x, float y, float radius, int segments) {
 		if (segments <= 0) throw new IllegalArgumentException("segments must be >= 0.");
-		if (currType != ShapeType.Filled && currType != ShapeType.Line) 
-			throw new GdxRuntimeException("Must call begin(ShapeType.Filled) or begin(ShapeType.Line)");
+		if (currType != ShapeType.Circle) throw new GdxRuntimeException("Must call begin(ShapeType.Circle)");
 		checkDirty();
 		checkFlush(segments * 2 + 2);
 
@@ -517,150 +484,177 @@ public class ShapeRenderer {
 		float cos = MathUtils.cos(angle);
 		float sin = MathUtils.sin(angle);
 		float cx = radius, cy = 0;
-		if(currType == ShapeType.Line){
-			for (int i = 0; i < segments; i++) {
-				renderer.color(color.r, color.g, color.b, color.a);
-				renderer.vertex(x + cx, y + cy, 0);
-				float temp = cx;
-				cx = cos * cx - sin * cy;
-				cy = sin * temp + cos * cy;
-				renderer.color(color.r, color.g, color.b, color.a);
-				renderer.vertex(x + cx, y + cy, 0);
-			}
-			// Ensure the last segment is identical to the first.
+		for (int i = 0; i < segments; i++) {
+			renderer.color(color.r, color.g, color.b, color.a);
+			renderer.vertex(x + cx, y + cy, 0);
+			float temp = cx;
+			cx = cos * cx - sin * cy;
+			cy = sin * temp + cos * cy;
 			renderer.color(color.r, color.g, color.b, color.a);
 			renderer.vertex(x + cx, y + cy, 0);
 		}
-		else {
-			segments--;
-			for (int i = 0; i < segments; i++) {
-				renderer.color(color.r, color.g, color.b, color.a);
-				renderer.vertex(x, y, 0);
-				renderer.color(color.r, color.g, color.b, color.a);
-				renderer.vertex(x + cx, y + cy, 0);
-				float temp = cx;
-				cx = cos * cx - sin * cy;
-				cy = sin * temp + cos * cy;
-				renderer.color(color.r, color.g, color.b, color.a);
-				renderer.vertex(x + cx, y + cy, 0);
-			}
-			// Ensure the last segment is identical to the first.
+		// Ensure the last segment is identical to the first.
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x + cx, y + cy, 0);
+		float temp = cx;
+		cx = radius;
+		cy = 0;
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x + cx, y + cy, 0);
+	}
+
+	/** Calls {@link #filledCircle(float, float, float, int)} by estimating the number of segments needed for a smooth circle. */
+	public void filledCircle (float x, float y, float radius) {
+		filledCircle(x, y, radius, (int)(6 * (float)Math.cbrt(radius)));
+	}
+
+	public void filledCircle (float x, float y, float radius, int segments) {
+		if (segments <= 0) throw new IllegalArgumentException("segments must be >= 0.");
+		if (currType != ShapeType.FilledCircle) throw new GdxRuntimeException("Must call begin(ShapeType.FilledCircle)");
+		checkDirty();
+		checkFlush(segments * 3 + 3);
+
+		int inc = 360 / segments;
+		float angle = 2 * 3.1415926f / segments;
+		float cos = MathUtils.cos(angle);
+		float sin = MathUtils.sin(angle);
+		float cx = radius, cy = 0;
+		segments--;
+		for (int i = 0; i < segments; i++) {
 			renderer.color(color.r, color.g, color.b, color.a);
 			renderer.vertex(x, y, 0);
 			renderer.color(color.r, color.g, color.b, color.a);
 			renderer.vertex(x + cx, y + cy, 0);
+			float temp = cx;
+			cx = cos * cx - sin * cy;
+			cy = sin * temp + cos * cy;
+			renderer.color(color.r, color.g, color.b, color.a);
+			renderer.vertex(x + cx, y + cy, 0);
 		}
-		
-		float temp = cx;
+		// Ensure the last segment is identical to the first.
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x, y, 0);
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x + cx, y + cy, 0);
 		cx = radius;
 		cy = 0;
 		renderer.color(color.r, color.g, color.b, color.a);
 		renderer.vertex(x + cx, y + cy, 0);
 	}
-	
-	/** Calls {@link #cone(float, float, float, float, float, int)} by estimating the number of segments needed for a smooth
-	 * circular base. */
+
+	public void triangle (float x1, float y1, float x2, float y2, float x3, float y3) {
+		if (currType != ShapeType.Triangle) throw new GdxRuntimeException("Must call begin(ShapeType.Triangle)");
+		checkDirty();
+		checkFlush(6);
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x1, y1, 0);
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x2, y2, 0);
+
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x2, y2, 0);
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x3, y3, 0);
+
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x3, y3, 0);
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x1, y1, 0);
+	}
+
+	public void filledTriangle (float x1, float y1, float x2, float y2, float x3, float y3) {
+		if (currType != ShapeType.FilledTriangle) throw new GdxRuntimeException("Must call begin(ShapeType.FilledTriangle)");
+		checkDirty();
+		checkFlush(3);
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x1, y1, 0);
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x2, y2, 0);
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x3, y3, 0);
+	}
+
 	public void cone (float x, float y, float z, float radius, float height) {
-		cone(x, y, z, radius, height, (int)(4 * (float)Math.sqrt(radius)));
+		cone(x, y, z, radius, height, (int)(6 * (float)Math.cbrt(radius)));
 	}
-	
-	public void cone(float x, float y, float z, float radius, float height, int segments){
-		if (segments <= 0) throw new IllegalArgumentException("segments must be >= 0.");
-		if (currType != ShapeType.Filled && currType != ShapeType.Line) 
-			throw new GdxRuntimeException("Must call begin(ShapeType.Filled) or begin(ShapeType.Line)");
+
+	public void cone (float x, float y, float z, float radius, float height, int segments) {
+		if (currType != ShapeType.Cone) throw new GdxRuntimeException("Must call begin(ShapeType.Cone)");
 		checkDirty();
 		checkFlush(segments * 4 + 2);
 		float angle = 2 * 3.1415926f / segments;
 		float cos = MathUtils.cos(angle);
 		float sin = MathUtils.sin(angle);
 		float cx = radius, cy = 0;
-		if(currType == ShapeType.Line){
-			for (int i = 0; i < segments; i++) {
-				renderer.color(color.r, color.g, color.b, color.a);
-				renderer.vertex(x + cx, y + cy, z);
-				renderer.color(color.r, color.g, color.b, color.a);
-				renderer.vertex(x, y, z + height);
-				renderer.color(color.r, color.g, color.b, color.a);
-				renderer.vertex(x + cx, y + cy, z);
-				float temp = cx;
-				cx = cos * cx - sin * cy;
-				cy = sin * temp + cos * cy;
-				renderer.color(color.r, color.g, color.b, color.a);
-				renderer.vertex(x + cx, y + cy, z);
-			}
-			// Ensure the last segment is identical to the first.
+		for (int i = 0; i < segments; i++) {
 			renderer.color(color.r, color.g, color.b, color.a);
 			renderer.vertex(x + cx, y + cy, z);
-		}
-		else {
-			segments--;
-			for (int i = 0; i < segments; i++) {
-				renderer.color(color.r, color.g, color.b, color.a);
-				renderer.vertex(x, y, z);
-				renderer.color(color.r, color.g, color.b, color.a);
-				renderer.vertex(x + cx, y + cy, z);
-				float temp = cx;
-				float temp2 = cy;
-				cx = cos * cx - sin * cy;
-				cy = sin * temp + cos * cy;
-				renderer.color(color.r, color.g, color.b, color.a);
-				renderer.vertex(x + cx, y + cy, z);
-				renderer.color(color.r, color.g, color.b, color.a);
-				renderer.vertex(x + temp, y + temp2, z);
-				renderer.color(color.r, color.g, color.b, color.a);
-				renderer.vertex(x + cx, y + cy, z);
-				renderer.color(color.r, color.g, color.b, color.a);
-				renderer.vertex(x, y, z + height);
-			}
-			// Ensure the last segment is identical to the first.
 			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x, y, z);
+			renderer.vertex(x, y, z + height);
+			renderer.color(color.r, color.g, color.b, color.a);
+			renderer.vertex(x + cx, y + cy, z);
+			float temp = cx;
+			cx = cos * cx - sin * cy;
+			cy = sin * temp + cos * cy;
 			renderer.color(color.r, color.g, color.b, color.a);
 			renderer.vertex(x + cx, y + cy, z);
 		}
+		// Ensure the last segment is identical to the first.
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x + cx, y + cy, z);
+		float temp = cx;
 		cx = radius;
 		cy = 0;
 		renderer.color(color.r, color.g, color.b, color.a);
 		renderer.vertex(x + cx, y + cy, z);
 	}
-	
-	/** Draws a polygon in the x/y plane. The vertices must contain at least 3 points (6 floats x,y). The
-	 * {@link ShapeType} passed to begin has to be {@link ShapeType#Line}.
-	 * @param vertices */
-	public void polygon(float[] vertices){
-		if (currType != ShapeType.Line) throw new GdxRuntimeException("Must call begin(ShapeType.Line)");
-		if (vertices.length < 6) throw new IllegalArgumentException("Polygons must contain at least 3 points.");
-		if (vertices.length % 2 != 0) throw new IllegalArgumentException("Polygons must have a pair number of vertices.");
-		final int numFloats = vertices.length;
-		
+
+	/** Calls {@link #filledCone(float, float, float, float, float, int)} by estimating the number of segments needed for a smooth
+	 * circular base. */
+	public void filledCone (float x, float y, float z, float radius, float height) {
+		filledCone(x, y, z, radius, height, (int)(4 * (float)Math.sqrt(radius)));
+	}
+
+	public void filledCone (float x, float y, float z, float radius, float height, int segments) {
+		if (segments <= 0) throw new IllegalArgumentException("segments must be >= 0.");
+		if (currType != ShapeType.FilledCone) throw new GdxRuntimeException("Must call begin(ShapeType.FilledCone)");
 		checkDirty();
-		checkFlush(numFloats);
-		
-		float firstX = vertices[0];
-		float firstY = vertices[1];
-		
-		for (int i = 0; i < numFloats; i += 2) {
-			float x1 = vertices[i];
-			float y1 = vertices[i + 1];
-			
-			float x2;
-			float y2;
-			
-			if(i + 2 >= numFloats){
-				x2 = firstX;
-				y2 = firstY;
-			}else{
-				x2 = vertices[i + 2];
-				y2 = vertices[i + 3];
-			}
-			
+		checkFlush(segments * 6 + 3);
+		int inc = 360 / segments;
+		float angle = 2 * 3.1415926f / segments;
+		float cos = MathUtils.cos(angle);
+		float sin = MathUtils.sin(angle);
+		float cx = radius, cy = 0;
+		segments--;
+		for (int i = 0; i < segments; i++) {
 			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x1, y1, 0);
+			renderer.vertex(x, y, z);
+			renderer.color(color.r, color.g, color.b, color.a);
+			renderer.vertex(x + cx, y + cy, z);
+			float temp = cx;
+			float temp2 = cy;
+			cx = cos * cx - sin * cy;
+			cy = sin * temp + cos * cy;
+			renderer.color(color.r, color.g, color.b, color.a);
+			renderer.vertex(x + cx, y + cy, z);
+			renderer.color(color.r, color.g, color.b, color.a);
+			renderer.vertex(x + temp, y + temp2, z);
+			renderer.color(color.r, color.g, color.b, color.a);
+			renderer.vertex(x + cx, y + cy, z);
 			renderer.color(color.r, color.g, color.b, color.a);
-			renderer.vertex(x2, y2, 0);
+			renderer.vertex(x, y, z + height);
 		}
+		// Ensure the last segment is identical to the first.
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x, y, z);
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x + cx, y + cy, z);
+		cx = radius;
+		cy = 0;
+		renderer.color(color.r, color.g, color.b, color.a);
+		renderer.vertex(x + cx, y + cy, z);
 	}
-	
+
 	private void checkDirty () {
 		if (!matrixDirty) return;
 		ShapeType type = currType;
@@ -686,11 +680,6 @@ public class ShapeRenderer {
 		end();
 		begin(type);
 	}
-	
-	/** Returns the current {@link ShapeType} used */
-	public ShapeType getCurrentType () {
-		return currType;
-	}
 
 	public void dispose () {
 		renderer.dispose();
diff --git a/gdx/src/com/badlogic/gdx/maps/Map.java b/gdx/src/com/badlogic/gdx/maps/Map.java
index aa0ae7c..8cb34e1 100644
--- a/gdx/src/com/badlogic/gdx/maps/Map.java
+++ b/gdx/src/com/badlogic/gdx/maps/Map.java
@@ -1,18 +1,47 @@
 package com.badlogic.gdx.maps;
 
+/**
+ * @brief Generic map
+ * 
+ * A Map instance contains the following data
+ * 
+ * <ul>
+ * <li> MapLayers<ul>
+ * 	<li>MapLayer<ul>
+ * 		<li>MapObjects<ul>
+ * 			<li>MapObject<ul>
+ * 				<li>Can be: TextureMapObject, CircleMapObject, RectangleMapObject, PolygonMapObject or PolylineMapObject</li>
+ * 				<li>MapProperties</li>
+ * 			</ul></li>
+ * 		</ul></li>
+ * 		<li>MapProperties</li>	
+ * 	</ul></li>
+ * </ul></li>
+ * <li> MapProperties
+ * </ul>
+ */
 public class Map {
 	
 	private MapLayers layers = new MapLayers();
 	private MapProperties properties = new MapProperties();
 	
+	/**
+	 * @return map's layers
+	 */
 	public MapLayers getLayers() {
 		return layers;
 	}
 
+	/**
+	 * @return map's properties set
+	 */
 	public MapProperties getProperties() {
 		return properties;
 	}
 	
+	/**
+	 * Creates empty map
+	 */
 	public Map() {
 		
 	}
diff --git a/gdx/src/com/badlogic/gdx/maps/MapLayer.java b/gdx/src/com/badlogic/gdx/maps/MapLayer.java
index b3a586f..fac4aa6 100644
--- a/gdx/src/com/badlogic/gdx/maps/MapLayer.java
+++ b/gdx/src/com/badlogic/gdx/maps/MapLayer.java
@@ -1,5 +1,8 @@
 package com.badlogic.gdx.maps;
 
+/**
+ * @brief Map layer containing a set of objects and properties
+ */
 public class MapLayer {
 
 	private String name = "";
@@ -8,38 +11,65 @@ public class MapLayer {
 	private MapObjects objects = new MapObjects();
 	private MapProperties properties = new MapProperties();
 
+	/**
+	 * @return layer's name
+	 */
 	public String getName() {
 		return name;
 	}
 	
+	/**
+	 * @param name new name for the layer
+	 */
 	public void setName(String name) {
 		this.name = name;
 	}
 	
+	/**
+	 * @return layer's opacity
+	 */
 	public float getOpacity() {
 		return opacity;
 	}
 
+	/**
+	 * @param opacity new opacity for the layer
+	 */
 	public void setOpacity(float opacity) {
 		this.opacity = opacity;
 	}
 	
+	/**
+	 * @return collection of objects contained in the layer
+	 */
 	public MapObjects getObjects() {
 		return objects;
 	}
 	
+	/**
+	 * @return whether the layer is visible or not
+	 */
 	public boolean getVisible() {
 		return visible;
 	}
 
+	/**
+	 * @param visible toggles layer's visibility
+	 */
 	public void setVisible(boolean visible) {
 		this.visible = visible;
 	}
 
+	/**
+	 * @return layer's set of properties
+	 */
 	public MapProperties getProperties() {
 		return properties;
 	}
 	
+	/**
+	 * Creates empty layer
+	 */
 	public MapLayer() {
 		
 	}
diff --git a/gdx/src/com/badlogic/gdx/maps/MapLayers.java b/gdx/src/com/badlogic/gdx/maps/MapLayers.java
index b77aa95..98bc077 100644
--- a/gdx/src/com/badlogic/gdx/maps/MapLayers.java
+++ b/gdx/src/com/badlogic/gdx/maps/MapLayers.java
@@ -4,18 +4,32 @@ import java.util.Iterator;
 
 import com.badlogic.gdx.utils.Array;
 
+/**
+ * @brief set of MapLayer instances
+ */
 public class MapLayers implements Iterable<MapLayer> {
 	
 	private Array<MapLayer> layers = new Array<MapLayer>();
 
+	/**
+	 * Creates empty set of layers
+	 */
 	public MapLayers() {
 	
 	}
 	
+	/**
+	 * @param index
+	 * @return layer at index
+	 */
 	public MapLayer getLayer(int index) {
 		return layers.get(index);
 	}
 	
+	/**
+	 * @param name
+	 * @return matching layer if exists, otherwise, null
+	 */
 	public MapLayer getLayer(String name) {
 		for (MapLayer layer : layers) {
 			if (name.equals(layer.getName())) {
@@ -25,22 +39,41 @@ public class MapLayers implements Iterable<MapLayer> {
 		return null;
 	}
 	
+	/**
+	 * @param layer layer to be added to the set
+	 */
 	public void addLayer(MapLayer layer) {
 		this.layers.add(layer);
 	}
 	
+	/**
+	 * @param index removes layer at index
+	 */
 	public void removeLayer(int index) {
 		layers.removeIndex(index);
 	}
 	
+	/**
+	 * @param layer layer to be removed
+	 */
 	public void removeLayer(MapLayer layer) {
 		layers.removeValue(layer, true);
 	}
 
+	/**
+	 * @param type
+	 * @return array with all the layers matching type
+	 */
 	public <T extends MapLayer> Array<T> getLayersByType(Class<T> type) {
 		return getLayersByType(type, new Array<T>());	
 	}
 	
+	/**
+	 * 
+	 * @param type
+	 * @param fill array to be filled with the matching layers
+	 * @return array with all the layers matching type
+	 */
 	public <T extends MapLayer> Array<T> getLayersByType(Class<T> type, Array<T> fill) {
 		fill.clear();
 		for (MapLayer layer : layers) {
@@ -51,6 +84,9 @@ public class MapLayers implements Iterable<MapLayer> {
 		return fill;
 	}
 
+	/**
+	 * @return iterator to set of layers
+	 */
 	@Override
 	public Iterator<MapLayer> iterator() {
 		return layers.iterator();
diff --git a/gdx/src/com/badlogic/gdx/maps/MapObject.java b/gdx/src/com/badlogic/gdx/maps/MapObject.java
index da4bb2f..e0141d2 100644
--- a/gdx/src/com/badlogic/gdx/maps/MapObject.java
+++ b/gdx/src/com/badlogic/gdx/maps/MapObject.java
@@ -2,6 +2,9 @@ package com.badlogic.gdx.maps;
 
 import com.badlogic.gdx.graphics.Color;
 
+/**
+ * @brief Generic Map entity
+ */
 public class MapObject {
 
 	private String name = "";
@@ -10,44 +13,73 @@ public class MapObject {
 	private MapProperties properties = new MapProperties();
 	private Color color = Color.WHITE.cpy();
 	
+	/**
+	 * @return object's name
+	 */
 	public String getName() {
 		return name;
 	}
 	
+	/**
+	 * @param name new name for the object
+	 */
 	public void setName(String name) {
 		this.name = name;
 	}
 	
+	/**
+	 * @return object's color
+	 */
 	public Color getColor() {
 		return color;
 	}
 	
+	/**
+	 * @param color new color for the object
+	 */
 	public void setColor(Color color) {
 		this.color = color;
 	}
 
+	/**
+	 * @return object's opacity
+	 */
 	public float getOpacity() {
 		return opacity;
 	}
 
+	/**
+	 * @param opacity new opacity value for the object
+	 */
 	public void setOpacity(float opacity) {
 		this.opacity = opacity;
 	}
 	
+	/**
+	 * @return whether the object is visible or not
+	 */
 	public boolean getVisible() {
 		return visible;
 	}
 
+	/**
+	 * @param visible toggles object's visibility
+	 */
 	public void setVisible(boolean visible) {
 		this.visible = visible;
 	}
 	
+	/**
+	 * @return object's properties set
+	 */
 	public MapProperties getProperties() {
 		return properties;
 	}
 	
+	/**
+	 * Creates empty object 
+	 */
 	public MapObject() {
 		
 	}
-	
 }
diff --git a/gdx/src/com/badlogic/gdx/maps/MapObjects.java b/gdx/src/com/badlogic/gdx/maps/MapObjects.java
index 564f2fe..80ecce5 100644
--- a/gdx/src/com/badlogic/gdx/maps/MapObjects.java
+++ b/gdx/src/com/badlogic/gdx/maps/MapObjects.java
@@ -4,17 +4,32 @@ import java.util.Iterator;
 
 import com.badlogic.gdx.utils.Array;
 
+/**
+ * @brief Collection of MapObject instances
+ */
 public class MapObjects implements Iterable<MapObject> {
 
 	private Array<MapObject> objects;
 
+	/**
+	 * Creates and empty set of MapObject instances
+	 */
 	public MapObjects() {
 		objects = new Array<MapObject>();		
 	}
+	
+	/**
+	 * @param index
+	 * @return MapObject at index
+	 */
 	public MapObject getObject(int index) {
 		return objects.get(index);
 	}
 	
+	/**
+	 * @param name
+	 * @return name matching object, null if it´s not in the set
+	 */
 	public MapObject getObject(String name) {
 		for (MapObject object : objects) {
 			if (name.equals(object.getName())) {
@@ -24,26 +39,47 @@ public class MapObjects implements Iterable<MapObject> {
 		return null;
 	}
 	
+	/**
+	 * @param object instance to be added to the collection
+	 */
 	public void addObject(MapObject object) {
 		this.objects.add(object);
 	}
 	
+	/**
+	 * @param index removes MapObject instance at index
+	 */
 	public void removeObject(int index) {
 		objects.removeIndex(index);
 	}
 	
+	/**
+	 * @param object instance to be removed
+	 */
 	public void removeObject(MapObject object) {
 		objects.removeValue(object, true);
 	}
 	
+	/**
+	 * @return number of objects in the collection
+	 */
 	public int getNumObjects() {
 		return objects.size;
 	}
 
+	/**
+	 * @param type class of the objects we want to retrieve
+	 * @return array filled with all the objects in the collection matching type
+	 */
 	public <T extends MapObject> Array<T> getObjectsByType(Class<T> type) {
 		return getObjectsByType(type, new Array<T>());	
 	}
 	
+	/**
+	 * @param type class of the objects we want to retrieve
+	 * @param fill collection to put the returned objects in
+	 * @return array filled with all the objects in the collection matching type
+	 */
 	public <T extends MapObject> Array<T> getObjectsByType(Class<T> type, Array<T> fill) {
 		fill.clear();
 		for (MapObject object : objects) {
@@ -54,6 +90,9 @@ public class MapObjects implements Iterable<MapObject> {
 		return fill;
 	}
 
+	/**
+	 * @return iterator for the objects within the collection
+	 */
 	@Override
 	public Iterator<MapObject> iterator() {
 		return objects.iterator();
diff --git a/gdx/src/com/badlogic/gdx/maps/MapProperties.java b/gdx/src/com/badlogic/gdx/maps/MapProperties.java
index 2811662..d3c7cf7 100644
--- a/gdx/src/com/badlogic/gdx/maps/MapProperties.java
+++ b/gdx/src/com/badlogic/gdx/maps/MapProperties.java
@@ -6,22 +6,41 @@ import com.badlogic.gdx.graphics.Color;
 import com.badlogic.gdx.math.Vector2;
 import com.badlogic.gdx.utils.ObjectMap;
 
+/**
+ * @brief Set of string indexed values representing map elements' properties, allowing
+ * to retrieve, modify and add properties to the set.
+ */
 public class MapProperties {
 
 	private ObjectMap<String, Object> properties;
 	
+	/**
+	 * Creates an empty properties set
+	 */
 	public MapProperties() {
 		properties = new ObjectMap<String, Object>();
 	}
 
+	/**
+	 * @param key property name 
+	 * @return true if and only if the property exists
+	 */
 	public boolean has(String key) {
 		return properties.containsKey(key);
 	}
 	
+	/**
+	 * @param key property name 
+	 * @return the value for that property if it exists, otherwise, null
+	 */
 	public Object get(String key) {
 		return properties.get(key);
 	}
 	
+	/**
+	 * @param key property name 
+	 * @return the value for that property if it exists and can be interpreted as a boolean, otherwise, null
+	 */
 	public Boolean getAsBoolean(String key) {
 		Object value = properties.get(key);
 		try {
@@ -35,6 +54,10 @@ public class MapProperties {
 		}
 	}
 	
+	/**
+	 * @param key property name 
+	 * @return the value for that property if it exists and can be interpreted as a byte, otherwise, null
+	 */
 	public Byte getAsByte(String key) {
 		Object value = properties.get(key);
 		if (value != null) {
@@ -56,6 +79,10 @@ public class MapProperties {
 		}
 	}
 	
+	/**
+	 * @param key property name 
+	 * @return the value for that property if it exists and can be interpreted as a double, otherwise, null
+	 */
 	public Double getAsDouble(String key) {
 		Object value = properties.get(key);
 		if (value != null) {
@@ -77,6 +104,10 @@ public class MapProperties {
 		}
 	}
 	
+	/**
+	 * @param key property name 
+	 * @return the value for that property if it exists and can be interpreted as a float, otherwise, null
+	 */
 	public Float getAsFloat(String key) {
 		Object value = properties.get(key);
 		if (value != null) {
@@ -98,6 +129,10 @@ public class MapProperties {
 		}
 	}
 	
+	/**
+	 * @param key property name 
+	 * @return the value for that property if it exists and can be interpreted as an integer, otherwise, null
+	 */
 	public Integer getAsInteger(String key) {
 		Object value = properties.get(key);
 		if (value != null) {
@@ -119,6 +154,10 @@ public class MapProperties {
 		}
 	}
 	
+	/**
+	 * @param key property name 
+	 * @return the value for that property if it exists and can be interpreted as a long, otherwise, null
+	 */
 	public Long getAsLong(String key) {
 		Object value = properties.get(key);
 		if (value != null) {
@@ -140,6 +179,10 @@ public class MapProperties {
 		}
 	}
 	
+	/**
+	 * @param key property name 
+	 * @return the value for that property if it exists and can be interpreted as a short, otherwise, null
+	 */
 	public Short getAsShort(String key) {
 		Object value = properties.get(key);
 		if (value != null) {
@@ -161,6 +204,10 @@ public class MapProperties {
 		}
 	}
 	
+	/**
+	 * @param key property name 
+	 * @return the value for that property as a string if it exists, otherwise, null
+	 */
 	public String getAsString(String key) {
 		Object value = properties.get(key);
 		if (value != null) {
@@ -170,6 +217,10 @@ public class MapProperties {
 		}
 	}
 	
+	/**
+	 * @param key property name 
+	 * @return the value for that property if it exists and it's a Vector2, otherwise, null
+	 */
 	public Vector2 getAsVector2(String key) {
 		Object value = properties.get(key);
 		
@@ -180,6 +231,10 @@ public class MapProperties {
 		return null;
 	}
 	
+	/**
+	 * @param key property name 
+	 * @return the value for that property if it exists and it's a Color, otherwise, null
+	 */
 	public Color getAsColor(String key) {
 		Object value = properties.get(key);
 		
@@ -190,112 +245,217 @@ public class MapProperties {
 		return null;
 	}
 	
+	/**
+	 * @param key property name 
+	 * @param defaultValue value to be returned in case of failure
+	 * @return the value for that property if it exists and it's a boolean, otherwise, defaultValue
+	 */
 	public Boolean getAsBoolean(String key, Boolean defaultValue) {
 		Boolean value = getAsBoolean(key);
 		return value == null? defaultValue : value;
 	}
 	
+	/**
+	 * @param key property name 
+	 * @param defaultValue value to be returned in case of failure
+	 * @return the value for that property if it exists and it's a byte, otherwise, defaultValue
+	 */
 	public Byte getAsByte(String key, Byte defaultValue) {
 		Byte value = getAsByte(key);
 		return value == null? defaultValue : value;
 	}
 	
+	/**
+	 * @param key property name 
+	 * @param defaultValue value to be returned in case of failure
+	 * @return the value for that property if it exists and it's a double, otherwise, defaultValue
+	 */
 	public Double getAsDouble(String key, Double defaultValue) {
 		Double value = getAsDouble(key);
 		return value == null? defaultValue : value;
 	}
 	
+	/**
+	 * @param key property name 
+	 * @param defaultValue value to be returned in case of failure
+	 * @return the value for that property if it exists and it's a float, otherwise, defaultValue
+	 */
 	public Float getAsFloat(String key, Float defaultValue) {
 		Float value = getAsFloat(key);
 		return value == null? defaultValue : value;
 	}
 	
+	/**
+	 * @param key property name 
+	 * @param defaultValue value to be returned in case of failure
+	 * @return the value for that property if it exists and it's an integer, otherwise, defaultValue
+	 */
 	public Integer getAsInteger(String key, Integer defaultValue) {
 		Integer value = getAsInteger(key);
 		return value == null? defaultValue : value;
 	}
 	
+	/**
+	 * @param key property name 
+	 * @param defaultValue value to be returned in case of failure
+	 * @return the value for that property if it exists and it's a long, otherwise, defaultValue
+	 */
 	public Long getAsLong(String key, Long defaultValue) {
 		Long value = getAsLong(key);
 		return value == null? defaultValue : value;
 	}
 	
+	/**
+	 * @param key property name 
+	 * @param defaultValue value to be returned in case of failure
+	 * @return the value for that property if it exists and it's a short, otherwise, defaultValue
+	 */
 	public Short getAsShort(String key, Short defaultValue) {
 		Short value = getAsShort(key);
 		return value == null? defaultValue : value;
 	}
 	
+	/**
+	 * @param key property name 
+	 * @param defaultValue value to be returned in case of failure
+	 * @return the value for that property as a string if it exists, otherwise, defaultValue
+	 */
 	public String getAsString(String key, String defaultValue) {
 		String value = getAsString(key);
 		return value == null? defaultValue : value;
 	}
 	
+	/**
+	 * @param key property name 
+	 * @param defaultValue value to be returned in case of failure
+	 * @return the value for that property if it exists and it's a Vector2, otherwise, defaultValue
+	 */
 	public Vector2 getAsVector2(String key, Vector2 defaultValue) {
 		Vector2 value = getAsVector2(key);
 		return value == null? defaultValue : value;
 	}
 	
+	/**
+	 * @param key property name 
+	 * @param defaultValue value to be returned in case of failure
+	 * @return the value for that property if it exists and it's a Color, otherwise, defaultValue
+	 */
 	public Color getAsColor(String key, Color defaultValue) {
 		Color value = getAsColor(key);
 		return value == null? defaultValue : value;
 	}
 	
+	/**
+	 * @param key property name
+	 * @param value value to be inserted or modified (if it already existed)
+	 */
 	public void put(String key, Boolean value) {
 		properties.put(key, value);
 	}
 	
+	/**
+	 * @param key property name
+	 * @param value value to be inserted or modified (if it already existed)
+	 */
 	public void put(String key, Byte value) {
 		properties.put(key, value);
 	}
 	
+	/**
+	 * @param key property name
+	 * @param value value to be inserted or modified (if it already existed)
+	 */
 	public void put(String key, Double value) {
 		properties.put(key, value);
 	}
 	
+	/**
+	 * @param key property name
+	 * @param value value to be inserted or modified (if it already existed)
+	 */
 	public void put(String key, Float value) {
 		properties.put(key, value);
 	}
 	
+	/**
+	 * @param key property name
+	 * @param value value to be inserted or modified (if it already existed)
+	 */
 	public void put(String key, Integer value) {
 		properties.put(key, value);
 	}
 	
+	/**
+	 * @param key property name
+	 * @param value value to be inserted or modified (if it already existed)
+	 */
 	public void put(String key, Long value) {
 		properties.put(key, value);
 	}
 	
+	/**
+	 * @param key property name
+	 * @param value value to be inserted or modified (if it already existed)
+	 */
 	public void put(String key, Short value) {
 		properties.put(key, value);
 	}
 	
+	/**
+	 * @param key property name
+	 * @param value value to be inserted or modified (if it already existed)
+	 */
 	public void put(String key, String value) {
 		properties.put(key, value);
 	}
 	
+	/**
+	 * @param key property name
+	 * @param value value to be inserted or modified (if it already existed)
+	 */
 	public void put(String key, Vector2 value) {
 		properties.put(key, value);
 	}
 	
+	/**
+	 * @param key property name
+	 * @param value value to be inserted or modified (if it already existed)
+	 */
 	public void put(String key, Color value) {
 		properties.put(key, value);
 	}
 	
+	/**
+	 * @param properties set of properties to be added
+	 */
 	public void putAll(MapProperties properties) {
 		this.properties.putAll(properties.properties);
 	}
 	
+	/**
+	 * @param key property name to be removed
+	 */
 	public void remove(String key) {
 		properties.remove(key);
 	}
 	
+	/**
+	 * Removes all properties
+	 */
 	public void clear() {
 		properties.clear();
 	}
 	
+	/**
+	 * @return iterator for the property names
+	 */
 	public Iterator<String> getKeys() {
 		return properties.keys();
 	}
 	
+	/**
+	 * @return iterator to properties' values
+	 */
 	public Iterator<Object> getValues() {
 		return properties.values();
 	}
diff --git a/gdx/src/com/badlogic/gdx/maps/MapRenderer.java b/gdx/src/com/badlogic/gdx/maps/MapRenderer.java
index 2f58114..c0a550a 100644
--- a/gdx/src/com/badlogic/gdx/maps/MapRenderer.java
+++ b/gdx/src/com/badlogic/gdx/maps/MapRenderer.java
@@ -2,7 +2,9 @@ package com.badlogic.gdx.maps;
 
 import com.badlogic.gdx.math.Matrix4;
 
-
+/**
+ * @brief models a common way of rendering Map objects
+ */
 public interface MapRenderer {
 
 	public void setProjectionMatrix(Matrix4 projectionMatrix);
diff --git a/gdx/src/com/badlogic/gdx/maps/gleed/GleedMapRenderer.java b/gdx/src/com/badlogic/gdx/maps/gleed/GleedMapRenderer.java
index e66961f..6adf8ed 100644
--- a/gdx/src/com/badlogic/gdx/maps/gleed/GleedMapRenderer.java
+++ b/gdx/src/com/badlogic/gdx/maps/gleed/GleedMapRenderer.java
@@ -57,6 +57,8 @@ public class GleedMapRenderer implements MapRenderer, Disposable {
 	
 	/**
 	 * @param map map data that will be used to render
+	 * 
+	 * Uses its own SpriteBatch
 	 */
 	public GleedMapRenderer(Map map) {
 		this(map, new SpriteBatch(), 1.0f);
diff --git a/gdx/src/com/badlogic/gdx/maps/loaders/TmxMapLoader.java b/gdx/src/com/badlogic/gdx/maps/loaders/TmxMapLoader.java
index c3d4309..f0a5166 100644
--- a/gdx/src/com/badlogic/gdx/maps/loaders/TmxMapLoader.java
+++ b/gdx/src/com/badlogic/gdx/maps/loaders/TmxMapLoader.java
@@ -34,6 +34,9 @@ import com.badlogic.gdx.utils.GdxRuntimeException;
 import com.badlogic.gdx.utils.XmlReader;
 import com.badlogic.gdx.utils.XmlReader.Element;
 
+/**
+ * @brief synchronous loader for TMX maps created with the Tiled tool
+ */
 public class TmxMapLoader extends SynchronousAssetLoader<TiledMap, TmxMapLoader.Parameters> {
 
 	public static class Parameters extends AssetLoaderParameters<TiledMap> {
@@ -49,10 +52,23 @@ public class TmxMapLoader extends SynchronousAssetLoader<TiledMap, TmxMapLoader.
 	private FileHandle tmx;
 	private XmlReader xml;
 	
+	/**
+	 * Creates loader 
+	 *  
+	 * @param resolver
+	 */
 	public TmxMapLoader(FileHandleResolver resolver) {
 		super(resolver);
 	}
 
+	/**
+	 * Loads a .tmx file
+	 * 
+	 * @param assetManager
+	 * @param fileName
+	 * @param parameter not used for now
+	 * @return loaded TiledMap instance
+	 */
 	@Override
 	public TiledMap load(AssetManager assetManager, String fileName, Parameters parameter) {
 		this.assetManager = assetManager;
@@ -86,6 +102,13 @@ public class TmxMapLoader extends SynchronousAssetLoader<TiledMap, TmxMapLoader.
 		return null;
 	}
 
+	/**
+	 * Retrieves TiledMap resource dependencies
+	 * 
+	 * @param fileName
+	 * @param parameter not used for now
+	 * @return dependencies for the given .tmx file
+	 */
 	@Override
 	public Array<AssetDescriptor> getDependencies(String fileName, Parameters parameter) {
 		Array<AssetDescriptor> dependencies = new Array<AssetDescriptor>();
@@ -187,7 +210,7 @@ public class TmxMapLoader extends SynchronousAssetLoader<TiledMap, TmxMapLoader.
 			int width = element.getIntAttribute("width", 0);
 			int height = element.getIntAttribute("height", 0);
 			int tileWidth = element.getParent().getIntAttribute("tilewidth", 0);
-			int tileHeight = element.getParent().getIntAttribute("tileheight", 0);
+			int tileHeight = element.getParent().getIntAttribute("tilewidth", 0);
 			TiledMapTileLayer layer = new TiledMapTileLayer(width, height, tileWidth, tileHeight);
 			layer.setName(name);
 			
@@ -215,14 +238,14 @@ public class TmxMapLoader extends SynchronousAssetLoader<TiledMap, TmxMapLoader.
 							if (flipDiagonally) {
 								if (flipHorizontally && flipVertically) {
 									cell.setFlipHorizontally(true);
-									cell.setRotation(Cell.ROTATE_90);
+									cell.setRotation(-90);
 								} else if (flipHorizontally) {
-									cell.setRotation(Cell.ROTATE_90);
+									cell.setRotation(-90);
 								} else if (flipVertically) {
-									cell.setRotation(Cell.ROTATE_270);
+									cell.setRotation(+90);
 								} else {
 									cell.setFlipVertically(true);
-									cell.setRotation(Cell.ROTATE_90);
+									cell.setRotation(-90);
 								}
 							} else {
 								cell.setFlipHorizontally(flipHorizontally);
@@ -259,14 +282,14 @@ public class TmxMapLoader extends SynchronousAssetLoader<TiledMap, TmxMapLoader.
 									if (flipDiagonally) {
 										if (flipHorizontally && flipVertically) {
 											cell.setFlipHorizontally(true);
-											cell.setRotation(Cell.ROTATE_90);
+											cell.setRotation(-90);
 										} else if (flipHorizontally) {
-											cell.setRotation(Cell.ROTATE_90);
+											cell.setRotation(-90);
 										} else if (flipVertically) {
-											cell.setRotation(Cell.ROTATE_270);
+											cell.setRotation(+90);
 										} else {
 											cell.setFlipVertically(true);
-											cell.setRotation(Cell.ROTATE_90);
+											cell.setRotation(-90);
 										}
 									} else {
 										cell.setFlipHorizontally(flipHorizontally);
@@ -308,14 +331,14 @@ public class TmxMapLoader extends SynchronousAssetLoader<TiledMap, TmxMapLoader.
 										if (flipDiagonally) {
 											if (flipHorizontally && flipVertically) {
 												cell.setFlipHorizontally(true);
-												cell.setRotation(Cell.ROTATE_90);
+												cell.setRotation(-90);
 											} else if (flipHorizontally) {
-												cell.setRotation(Cell.ROTATE_90);
+												cell.setRotation(-90);
 											} else if (flipVertically) {
-												cell.setRotation(Cell.ROTATE_270);
+												cell.setRotation(+90);
 											} else {
 												cell.setFlipVertically(true);
-												cell.setRotation(Cell.ROTATE_90);
+												cell.setRotation(-90);
 											}
 										} else {
 											cell.setFlipHorizontally(flipHorizontally);
diff --git a/gdx/src/com/badlogic/gdx/maps/objects/CircleMapObject.java b/gdx/src/com/badlogic/gdx/maps/objects/CircleMapObject.java
index 86ae2b5..cdc4b71 100644
--- a/gdx/src/com/badlogic/gdx/maps/objects/CircleMapObject.java
+++ b/gdx/src/com/badlogic/gdx/maps/objects/CircleMapObject.java
@@ -3,18 +3,34 @@ package com.badlogic.gdx.maps.objects;
 import com.badlogic.gdx.maps.MapObject;
 import com.badlogic.gdx.math.Circle;
 
+/**
+ * @brief represents circle shaped map objects
+ */
 public class CircleMapObject extends MapObject {
 	
 	private Circle circle;
 	
+	/**
+	 * @return circle shape
+	 */
 	public Circle getCircle() {
 		return circle;
 	}
 	
+	/**
+	 * Creates a circle map object at (0,0) with r=1.0
+	 */
 	public CircleMapObject() {
 		this(0.0f, 0.0f, 1.0f);
 	}
 	
+	/**
+	 * Creates circle map object
+	 * 
+	 * @param x
+	 * @param y
+	 * @param radius
+	 */
 	public CircleMapObject(float x, float y, float radius) {
 		super();
 		circle = new Circle(x, y, radius);
diff --git a/gdx/src/com/badlogic/gdx/maps/objects/PolygonMapObject.java b/gdx/src/com/badlogic/gdx/maps/objects/PolygonMapObject.java
index 976d57a..e7ec6fb 100644
--- a/gdx/src/com/badlogic/gdx/maps/objects/PolygonMapObject.java
+++ b/gdx/src/com/badlogic/gdx/maps/objects/PolygonMapObject.java
@@ -6,22 +6,37 @@ package com.badlogic.gdx.maps.objects;
 import com.badlogic.gdx.maps.MapObject;
 import com.badlogic.gdx.math.Polygon;
 
+/**
+ * @brief represents polygon map objects
+ */
 public class PolygonMapObject extends MapObject {
 
 	private Polygon polygon;
 	
+	/**
+	 * @return polygon shape
+	 */
 	public Polygon getPolygon() {
 		return polygon;
 	}
 	
+	/**
+	 * @param polygon new object's polygon shape
+	 */
 	public void setPolygon(Polygon polygon) {
 		this.polygon = polygon;
 	}
 	
+	/**
+	 * Creates empty polygon map object
+	 */
 	public PolygonMapObject() {
 		this(new float[0]);
 	}
 	
+	/**
+	 * @param vertices polygon defining vertices (at least 3)
+	 */
 	public PolygonMapObject(float[] vertices) {
 		super();
 		polygon = new Polygon(vertices);
diff --git a/gdx/src/com/badlogic/gdx/maps/objects/PolylineMapObject.java b/gdx/src/com/badlogic/gdx/maps/objects/PolylineMapObject.java
index 09f2843..816c753 100644
--- a/gdx/src/com/badlogic/gdx/maps/objects/PolylineMapObject.java
+++ b/gdx/src/com/badlogic/gdx/maps/objects/PolylineMapObject.java
@@ -3,22 +3,37 @@ package com.badlogic.gdx.maps.objects;
 import com.badlogic.gdx.maps.MapObject;
 import com.badlogic.gdx.math.Polygon;
 
+/**
+ * @brief Represents polyline map objects
+ */
 public class PolylineMapObject extends MapObject {
 
 	private Polygon polygon;
 	
+	/**
+	 * @return polygon shape
+	 */
 	public Polygon getPolygon() {
 		return polygon;
 	}
 	
+	/**
+	 * @param polygon new object's polygon shape
+	 */
 	public void setPolygon(Polygon polygon) {
 		this.polygon = polygon;
 	}
 	
+	/**
+	 * Creates empty polyline 
+	 */
 	public PolylineMapObject() {
 		this(new float[0]);
 	}
 	
+	/**
+	 * @param vertices polyline defining vertices (at least 3 because a polygon is used to represent it)
+	 */
 	public PolylineMapObject(float[] vertices) {
 		super();
 		polygon = new Polygon(vertices);
diff --git a/gdx/src/com/badlogic/gdx/maps/objects/RectangleMapObject.java b/gdx/src/com/badlogic/gdx/maps/objects/RectangleMapObject.java
index f7e47d0..6f73e38 100644
--- a/gdx/src/com/badlogic/gdx/maps/objects/RectangleMapObject.java
+++ b/gdx/src/com/badlogic/gdx/maps/objects/RectangleMapObject.java
@@ -3,18 +3,33 @@ package com.badlogic.gdx.maps.objects;
 import com.badlogic.gdx.maps.MapObject;
 import com.badlogic.gdx.math.Rectangle;
 
+/**
+ * @brief Represents rectangle shaped map object
+ */
 public class RectangleMapObject extends MapObject {
 	
 	private Rectangle rectangle;
 	
+	/**
+	 * @return rectangle shape
+	 */
 	public Rectangle getRectangle() {
 		return rectangle;
 	}
 	
+	/**
+	 * Creates a rectangle object which lower left corner is at (0, 0) with width=1 and height=1
+	 */
 	public RectangleMapObject() {
 		this(0.0f, 0.0f, 1.0f, 1.0f);
 	}
 	
+	/**
+	 * @param x
+	 * @param y
+	 * @param width
+	 * @param height
+	 */
 	public RectangleMapObject(float x, float y, float width, float height) {
 		super();
 		rectangle = new Rectangle(x, y, width, height);
diff --git a/gdx/src/com/badlogic/gdx/maps/objects/TextureMapObject.java b/gdx/src/com/badlogic/gdx/maps/objects/TextureMapObject.java
index 82b24f9..5f74e90 100644
--- a/gdx/src/com/badlogic/gdx/maps/objects/TextureMapObject.java
+++ b/gdx/src/com/badlogic/gdx/maps/objects/TextureMapObject.java
@@ -3,6 +3,9 @@ package com.badlogic.gdx.maps.objects;
 import com.badlogic.gdx.graphics.g2d.TextureRegion;
 import com.badlogic.gdx.maps.MapObject;
 
+/**
+ * @brief Represents a map object containing a texture (region)
+ */
 public class TextureMapObject extends MapObject {
 	
 	private float x = 0.0f;
@@ -14,74 +17,130 @@ public class TextureMapObject extends MapObject {
 	private float rotation = 0.0f;
 	private TextureRegion textureRegion = null;
 
+	/**
+	 * @return x axis coordinate
+	 */
 	public float getX() {
 		return x;
 	}
 
+	/**
+	 * @param x new x axis coordinate
+	 */
 	public void setX(float x) {
 		this.x = x;
 	}
 
+	/**
+	 * @return y axis coordinate
+	 */
 	public float getY() {
 		return y;
 	}
 
+	/**
+	 * @param y new y axis coordinate
+	 */
 	public void setY(float y) {
 		this.y = y;
 	}
 	
+	/**
+	 * @return x axis origin
+	 */
 	public float getOriginX() {
 		return originX;
 	}
 
+	/**
+	 * @param x new x axis origin
+	 */
 	public void setOriginX(float x) {
 		this.originX = x;
 	}
 
+	/**
+	 * @return y axis origin
+	 */
 	public float getOriginY() {
 		return originY;
 	}
 
+	/**
+	 * @param y new axis origin
+	 */
 	public void setOriginY(float y) {
 		this.originY = y;
 	}
 	
+	/**
+	 * @return x axis scale
+	 */
 	public float getScaleX() {
 		return scaleX;
 	}
 
+	/**
+	 * @param x new x axis scale 
+	 */
 	public void setScaleX(float x) {
 		this.scaleX = x;
 	}
 
+	/**
+	 * @return y axis scale
+	 */
 	public float getScaleY() {
 		return scaleY;
 	}
 
+	/**
+	 * @param y new y axis scale
+	 */
 	public void setScaleY(float y) {
 		this.scaleY = y;
 	}
 	
+	/**
+	 * @return texture's rotation in radians
+	 */
 	public float getRotation() {
 		return rotation;
 	}
 	
+	/**
+	 * @param rotation new texture's rotation in radians
+	 */
 	public void setRotation(float rotation) {
 		this.rotation = rotation;
 	}
 
+	/**
+	 * @return region
+	 */
 	public TextureRegion getTextureRegion() {
 		return textureRegion;
 	}
 	
+	/**
+	 * @param region new texture region
+	 */
 	public void setTextureRegion(TextureRegion region) {
 		textureRegion = region;
 	}
 	
+	/**
+	 * Creates empty texture map object
+	 */
 	public TextureMapObject() {
 		this(null);
 	}
 	
+	/**
+	 * Creates texture map object with the given region
+	 * 
+	 * @param textureRegion
+	 */
 	public TextureMapObject(TextureRegion textureRegion) {
 		super();
 		this.textureRegion = textureRegion;
diff --git a/gdx/src/com/badlogic/gdx/maps/tiled/TiledMap.java b/gdx/src/com/badlogic/gdx/maps/tiled/TiledMap.java
index 44a2811..103ef0d 100644
--- a/gdx/src/com/badlogic/gdx/maps/tiled/TiledMap.java
+++ b/gdx/src/com/badlogic/gdx/maps/tiled/TiledMap.java
@@ -2,14 +2,25 @@ package com.badlogic.gdx.maps.tiled;
 
 import com.badlogic.gdx.maps.Map;
 
+/**
+ * @brief Represents a Tiled created map, adds the concept of tiles and tilesets
+ * 
+ * @see Map
+ */
 public class TiledMap extends Map {
 	
 	private TiledMapTileSets tilesets;
 	
+	/**
+	 * @return collection of tilesets for this map
+	 */
 	public TiledMapTileSets getTileSets() {
 		return tilesets;
 	}
 	
+	/**
+	 * Creates empty TiledMap
+	 */
 	public TiledMap() {
 		tilesets = new TiledMapTileSets();
 	}
diff --git a/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapRenderer.java b/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapRenderer.java
index 3dafc6c..d42ea76 100644
--- a/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapRenderer.java
+++ b/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapRenderer.java
@@ -1,6 +1,5 @@
 package com.badlogic.gdx.maps.tiled;
 
-import com.badlogic.gdx.graphics.Color;
 import com.badlogic.gdx.graphics.OrthographicCamera;
 import com.badlogic.gdx.graphics.g2d.SpriteBatch;
 import com.badlogic.gdx.graphics.g2d.TextureRegion;
@@ -8,12 +7,14 @@ import com.badlogic.gdx.maps.Map;
 import com.badlogic.gdx.maps.MapLayer;
 import com.badlogic.gdx.maps.MapLayers;
 import com.badlogic.gdx.maps.MapRenderer;
-import com.badlogic.gdx.maps.tiled.TiledMapTileLayer.Cell;
 import com.badlogic.gdx.math.Matrix4;
 import com.badlogic.gdx.utils.Disposable;
 
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.*;
-
+/**
+ * @brief Logic for rendering TiledMap objects
+ * 
+ * Includes several optimisations such as SpriteCache usage, fustrum culling etc.
+ */
 public class TiledMapRenderer implements MapRenderer, Disposable {
 
 	private Map map;
@@ -24,34 +25,63 @@ public class TiledMapRenderer implements MapRenderer, Disposable {
 	
 	private boolean ownsSpriteBatch = false;
 	
+	/**
+	 * @return map currently being used for rendering
+	 */
 	public Map getMap() {
 		return map;
 	}
 	
+	/**
+	 * @return batch used for rendering
+	 */
 	public SpriteBatch getSpriteBatch() {
 		return spriteBatch;
 	}
 	
+	/**
+	 * @return world units per pixel used for rendering
+	 */
 	public float getUnitScale() {
 		return unitScale;
 	}
 	
+	/**
+	 * Creates a renderer from a map. Will use own spritebatch and world units of 1.0 pixels
+	 * 
+	 * @param map will use this map for rendering 
+	 */
 	public TiledMapRenderer(TiledMap map) {
 		this(map, new SpriteBatch());
 		ownsSpriteBatch = true;
 	}
 	
+	/**
+	 * Creates a renderer from a map using the given world units. Will use a batch from its own.
+	 * 
+	 * @param map will use this map for rendering
+	 * @param unitScale world units per pixel
+	 */
 	public TiledMapRenderer(TiledMap map, float unitScale) {
 		this(map, new SpriteBatch(), unitScale);
 		ownsSpriteBatch = true;
 	}
 	
+	/**
+	 * @param map will use this map for rendering
+	 * @param spriteBatch batch that will be used for rendering
+	 */
 	public TiledMapRenderer(TiledMap map, SpriteBatch spriteBatch) {
 		this.map = map;
 		this.spriteBatch = spriteBatch;
 		this.ownsSpriteBatch = false;
 	}
 	
+	/**
+	 * @param map will use this map for rendering
+	 * @param spriteBatch batch that will be used for rendering
+	 * @param unitScale world units per pixel
+	 */
 	public TiledMapRenderer(TiledMap map, SpriteBatch spriteBatch, float unitScale) {
 		this.map = map;
 		this.spriteBatch = spriteBatch;
@@ -59,6 +89,9 @@ public class TiledMapRenderer implements MapRenderer, Disposable {
 		this.ownsSpriteBatch = false;
 	}
 
+	/**
+	 * @param projection projection matrix that will be used for rendering the map
+	 */
 	@Override
 	public void setProjectionMatrix (Matrix4 projection) {
 		spriteBatch.setProjectionMatrix(projection);
@@ -109,8 +142,13 @@ public class TiledMapRenderer implements MapRenderer, Disposable {
 		}
 	}
 	
-	/* (non-Javadoc)
-	 * @see com.badlogic.gdx.maps.MapRenderer2#render(float, float, float, float, int[])
+	/**
+	 * Renders all the layers using the projection matrix and the given bounds for fustrum culling
+	 * 
+	 * @param viewboundsX
+	 * @param viewboundsY
+	 * @param viewboundsWidth
+	 * @param viewboundsHeight
 	 */
 	@Override
 	public void render (float viewboundsX, float viewboundsY, float viewboundsWidth, float viewboundsHeight) {
@@ -120,8 +158,14 @@ public class TiledMapRenderer implements MapRenderer, Disposable {
 		}
 	}
 	
-	/* (non-Javadoc)
-	 * @see com.badlogic.gdx.maps.MapRenderer2#render(float, float, float, float, int[])
+	/**
+	 * Renders the given layers using the projection matrix and the given bounds for fustrum culling
+	 * 
+	 * @param viewboundsX
+	 * @param viewboundsY
+	 * @param viewboundsWidth
+	 * @param viewboundsHeight
+	 * @param layers
 	 */
 	@Override
 	public void render (float viewboundsX, float viewboundsY, float viewboundsWidth, float viewboundsHeight, int[] layers) {
@@ -130,12 +174,10 @@ public class TiledMapRenderer implements MapRenderer, Disposable {
 			renderLayer(viewboundsX, viewboundsY, viewboundsX + viewboundsHeight, viewboundsY + viewboundsHeight, mapLayers.getLayer(i));
 		}
 	}
-
-	float[] vertices = new float[20];
+	
 	protected void renderLayer(float camLeft, float camTop, float camRight, float camBottom, MapLayer layer) {
 		if (layer.getVisible()) {
-			
-			float color = Color.toFloatBits(1, 1, 1, layer.getOpacity());
+			spriteBatch.setColor(1, 1, 1, layer.getOpacity());
 			
 			if (layer instanceof TiledMapTileLayer) {
 				final TiledMapTileLayer tileLayer = (TiledMapTileLayer) layer;
@@ -146,122 +188,81 @@ public class TiledMapRenderer implements MapRenderer, Disposable {
 				final float layerTileWidth = tileLayer.getTileWidth() * unitScale;
 				final float layerTileHeight = tileLayer.getTileHeight() * unitScale;
 				
-				final int col1 = Math.max(0, (int) (camLeft / layerTileWidth));
-				final int col2 = Math.min(layerWidth, (int) ((camRight + layerTileWidth) / layerTileWidth));
+				final int x1 = Math.max(0, (int) (camLeft / layerTileWidth));
+				final int x2 = Math.min(layerWidth, (int) ((camRight + layerTileWidth) / layerTileWidth));
 
-				final int row1 = Math.max(0, (int) (camBottom / layerTileHeight));
-				final int row2 = Math.min(layerHeight, (int) ((camTop + layerTileHeight) / layerTileHeight));				
+				final int y1 = Math.max(0, (int) (camBottom / layerTileHeight));
+				final int y2 = Math.min(layerHeight, (int) ((camTop + layerTileHeight) / layerTileHeight));				
 				
-				for (int row = row1; row < row2; row++) {
-					for (int col = col1; col < col2; col++) {
-						final TiledMapTileLayer.Cell cell = tileLayer.getCell(col, row);
+				for (int x = x1; x < x2; x++) {
+					for (int y = y1; y < y2; y++) {
+						final TiledMapTileLayer.Cell cell = tileLayer.getCell(x, y);
 						final TiledMapTile tile = cell.getTile();
 						if (tile != null) {
 							
 							final boolean flipX = cell.getFlipHorizontally();
 							final boolean flipY = cell.getFlipVertically();
-							final int rotations = cell.getRotation();
+							final float rotate = cell.getRotation();
 							
 							TextureRegion region = tile.getTextureRegion();
-							
-							float x1 = col * layerTileWidth;
-							float y1 = row * layerTileHeight;
-							float x2 = x1 + region.getRegionWidth() * unitScale;
-							float y2 = y1 + region.getRegionHeight() * unitScale;
-							
-							float u1 = region.getU();
-							float v1 = region.getV2();
-							float u2 = region.getU2();
-							float v2 = region.getV();
-							
-							vertices[X1] = x1;
-							vertices[Y1] = y1;
-							vertices[C1] = color;
-							vertices[U1] = u1;
-							vertices[V1] = v1;
-							
-							vertices[X2] = x1;
-							vertices[Y2] = y2;
-							vertices[C2] = color;
-							vertices[U2] = u1;
-							vertices[V2] = v2;
-							
-							vertices[X3] = x2;
-							vertices[Y3] = y2;
-							vertices[C3] = color;
-							vertices[U3] = u2;
-							vertices[V3] = v2;
-							
-							vertices[X4] = x2;
-							vertices[Y4] = y1;
-							vertices[C4] = color;
-							vertices[U4] = u2;
-							vertices[V4] = v1;							
-							
+							float drawX = x * layerTileWidth;
+							float drawY = y * layerTileHeight;
+							float width = region.getRegionWidth() * unitScale;
+							float height = region.getRegionHeight() * unitScale;
+							float originX = width * 0.5f;
+							float originY = height * 0.5f;
+							float scaleX = 1;
+							float scaleY = 1;
+							float rotation = 0;
+							int sourceX = region.getRegionX();
+							int sourceY = region.getRegionY();
+							int sourceWidth = region.getRegionWidth();
+							int sourceHeight = region.getRegionHeight();
+
 							if (flipX) {
-								float temp = vertices[U1];
-								vertices[U1] = vertices[U3];
-								vertices[U3] = temp;
-								temp = vertices[U2];
-								vertices[U2] = vertices[U4];
-								vertices[U4] = temp;
+								sourceX += sourceWidth;
+								sourceWidth = -sourceWidth;
 							}
 							if (flipY) {
-								float temp = vertices[V1];
-								vertices[V1] = vertices[V3];
-								vertices[V3] = temp;
-								temp = vertices[V2];
-								vertices[V2] = vertices[V4];
-								vertices[V4] = temp;
+								sourceY += sourceHeight;
+								sourceHeight = -sourceHeight;
 							}
-							if (rotations != 0) {
-								switch (rotations) {
-									case Cell.ROTATE_90: {
-										float tempV = vertices[V1];
-										vertices[V1] = vertices[V2];
-										vertices[V2] = vertices[V3];
-										vertices[V3] = vertices[V4];
-										vertices[V4] = tempV;
-	
-										float tempU = vertices[U1];
-										vertices[U1] = vertices[U2];
-										vertices[U2] = vertices[U3];
-										vertices[U3] = vertices[U4];
-										vertices[U4] = tempU;									
-										break;
-									}
-									case Cell.ROTATE_180: {
-										float tempU = vertices[U1];
-										vertices[U1] = vertices[U3];
-										vertices[U3] = tempU;
-										tempU = vertices[U2];
-										vertices[U2] = vertices[U4];
-										vertices[U4] = tempU;									
-										float tempV = vertices[V1];
-										vertices[V1] = vertices[V3];
-										vertices[V3] = tempV;
-										tempV = vertices[V2];
-										vertices[V2] = vertices[V4];
-										vertices[V4] = tempV;
-										break;
-									}
-									case Cell.ROTATE_270: {
-										float tempV = vertices[V1];
-										vertices[V1] = vertices[V4];
-										vertices[V4] = vertices[V3];
-										vertices[V3] = vertices[V2];
-										vertices[V2] = tempV;
-	
-										float tempU = vertices[U1];
-										vertices[U1] = vertices[U4];
-										vertices[U4] = vertices[U3];
-										vertices[U3] = vertices[U2];
-										vertices[U2] = tempU;									
-										break;
-									}
-								}								
+							if (rotation == 0) {
+								spriteBatch.draw(
+									region.getTexture(),
+									drawX,
+									drawY,
+									width,
+									height,
+									sourceX,
+									sourceY,
+									sourceWidth,
+									sourceHeight,
+									false,
+									false
+								);
+							} else {
+								spriteBatch.draw(
+									region.getTexture(),
+									drawX,
+									drawY,
+									originX,
+									originY,
+									width,
+									height,
+									scaleX,
+									scaleY,
+									rotate,
+									sourceX,
+									sourceY,
+									sourceWidth,
+									sourceHeight,
+									false,
+									false
+								);
 							}
-							spriteBatch.draw(region.getTexture(), vertices, 0, 20);
+							
+							
 						}
 					}
 				}				
diff --git a/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapRenderer2.java b/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapRenderer2.java
deleted file mode 100644
index 4af106a..0000000
--- a/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapRenderer2.java
+++ /dev/null
@@ -1,675 +0,0 @@
-package com.badlogic.gdx.maps.tiled;
-
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.C1;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.C2;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.C3;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.C4;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.U1;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.U2;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.U3;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.U4;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.V1;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.V2;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.V3;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.V4;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.X1;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.X2;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.X3;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.X4;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.Y1;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.Y2;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.Y3;
-import static com.badlogic.gdx.graphics.g2d.SpriteBatch.Y4;
-
-import com.badlogic.gdx.Gdx;
-import com.badlogic.gdx.graphics.Color;
-import com.badlogic.gdx.graphics.GL10;
-import com.badlogic.gdx.graphics.GL11;
-import com.badlogic.gdx.graphics.g2d.SpriteBatch;
-import com.badlogic.gdx.graphics.g2d.SpriteCache;
-import com.badlogic.gdx.graphics.g2d.TextureRegion;
-import com.badlogic.gdx.graphics.glutils.ShapeRenderer;
-import com.badlogic.gdx.maps.MapLayer;
-import com.badlogic.gdx.maps.MapObject;
-import com.badlogic.gdx.maps.tiled.TiledMapTileLayer.Cell;
-import com.badlogic.gdx.math.Matrix4;
-import com.badlogic.gdx.math.Polygon;
-import com.badlogic.gdx.math.Rectangle;
-
-public interface TiledMapRenderer2 {
-	
-	public void setViewBounds(float x, float y, float width, float height);
-	
-	public void setProjectionMatrix(Matrix4 projection);
-	
-	public void begin();
-	public void end();
-	
-	public void render();
-	public void renderObject(MapObject object);
-	public void renderTileLayer(TiledMapTileLayer layer);
-	
-	public class BaseTiledMapRenderer implements TiledMapRenderer2 {
-		
-		protected TiledMap map;
-
-		protected float unitScale;
-		
-		protected SpriteBatch spriteBatch;
-		
-		protected Rectangle viewBounds; 
-
-		public TiledMap getMap() {
-			return map;			
-		}
-		
-		public float getUnitScale() {
-			return unitScale;
-		}
-		
-		public SpriteBatch getSpriteBatch() {
-			return spriteBatch;
-		}
-
-		public Rectangle getViewBounds() {
-			return viewBounds;
-		}
-		
-		public BaseTiledMapRenderer(TiledMap map) {
-			this.map = map;
-			this.unitScale = 1;
-			this.spriteBatch = new SpriteBatch();
-			this.viewBounds = new Rectangle();
-		}
-		
-		public BaseTiledMapRenderer(TiledMap map, float unitScale) {
-			this.map = map;
-			this.unitScale = unitScale;
-			this.viewBounds = new Rectangle();
-			this.spriteBatch = new SpriteBatch();
-		}
-		
-		@Override
-		public void setViewBounds (float x, float y, float width, float height) {
-			viewBounds.set(x, y, width, height);
-		}
-		
-		@Override
-		public void setProjectionMatrix (Matrix4 projection) {
-			spriteBatch.setProjectionMatrix(projection);
-		}
-		
-		@Override
-		public void begin () {
-			spriteBatch.begin();
-		}
-
-		@Override
-		public void end () {
-			spriteBatch.end();
-		}
-		
-		@Override
-		public void render () {
-			for (MapLayer layer : map.getLayers()) {
-				if (layer.getVisible()) {
-					if (layer instanceof TiledMapTileLayer) {
-						renderTileLayer((TiledMapTileLayer) layer);
-					} else {
-						for (MapObject object : layer.getObjects()) {
-							renderObject(object);
-						}
-					}					
-				}				
-			}			
-		}
-
-		@Override
-		public void renderObject (MapObject object) {
-			// Do nothing
-		}
-
-		@Override
-		public void renderTileLayer (TiledMapTileLayer layer) {
-			// Do nothing			
-		}
-
-	}
-	
-	public class IsometricTiledMapRenderer extends  BaseTiledMapRenderer {
-
-		private TiledMap map;
-		
-		private float[] vertices = new float[20];
-		
-		public IsometricTiledMapRenderer(TiledMap map) {
-			super(map);
-		}
-		
-		public IsometricTiledMapRenderer(TiledMap map, float unitScale) {
-			super(map, unitScale);
-		}	
-		
-		@Override
-		public void renderObject (MapObject object) {
-			
-		}
-		
-		@Override
-		public void renderTileLayer (TiledMapTileLayer layer) {
-
-			final float color = Color.toFloatBits(1, 1, 1, layer.getOpacity());
-			
-			int col1 = 0;
-			int col2 = layer.getWidth() - 1;
-			
-			int row1 = 0;
-			int row2 = layer.getHeight() - 1;
-			
-			float tileWidth = layer.getTileWidth() * unitScale;
-			float tileHeight = layer.getTileHeight() * unitScale;
-			float halfTileWidth = tileWidth * 0.5f;
-			float halfTileHeight = tileHeight * 0.5f;
-			
-			for (int row = row2; row >= row1; row--) {
-				boolean firstCol = true;
-				for (int col = col1; col <= col2; col++) {
-					float x = (col * halfTileWidth) + (row * halfTileWidth);
-					float y = (row * halfTileHeight) - (col * halfTileHeight);
-
-					final TiledMapTileLayer.Cell cell = layer.getCell(col, row);
-					final TiledMapTile tile = cell.getTile();
-					if (tile != null) {
-						
-						final boolean flipX = cell.getFlipHorizontally();
-						final boolean flipY = cell.getFlipVertically();
-						final int rotations = cell.getRotation();
-						
-						TextureRegion region = tile.getTextureRegion();
-						
-						float x1 = x;
-						float y1 = y;
-						float x2 = x1 + region.getRegionWidth() * unitScale;
-						float y2 = y1 + region.getRegionHeight() * unitScale;
-						
-						float u1 = region.getU();
-						float v1 = region.getV2();
-						float u2 = region.getU2();
-						float v2 = region.getV();
-						
-						vertices[X1] = x1;
-						vertices[Y1] = y1;
-						vertices[C1] = color;
-						vertices[U1] = u1;
-						vertices[V1] = v1;
-						
-						vertices[X2] = x1;
-						vertices[Y2] = y2;
-						vertices[C2] = color;
-						vertices[U2] = u1;
-						vertices[V2] = v2;
-						
-						vertices[X3] = x2;
-						vertices[Y3] = y2;
-						vertices[C3] = color;
-						vertices[U3] = u2;
-						vertices[V3] = v2;
-						
-						vertices[X4] = x2;
-						vertices[Y4] = y1;
-						vertices[C4] = color;
-						vertices[U4] = u2;
-						vertices[V4] = v1;							
-						
-						if (flipX) {
-							float temp = vertices[U1];
-							vertices[U1] = vertices[U3];
-							vertices[U3] = temp;
-							temp = vertices[U2];
-							vertices[U2] = vertices[U4];
-							vertices[U4] = temp;
-						}
-						if (flipY) {
-							float temp = vertices[V1];
-							vertices[V1] = vertices[V3];
-							vertices[V3] = temp;
-							temp = vertices[V2];
-							vertices[V2] = vertices[V4];
-							vertices[V4] = temp;
-						}
-						if (rotations != 0) {
-							switch (rotations) {
-								case Cell.ROTATE_90: {
-									float tempV = vertices[V1];
-									vertices[V1] = vertices[V2];
-									vertices[V2] = vertices[V3];
-									vertices[V3] = vertices[V4];
-									vertices[V4] = tempV;
-
-									float tempU = vertices[U1];
-									vertices[U1] = vertices[U2];
-									vertices[U2] = vertices[U3];
-									vertices[U3] = vertices[U4];
-									vertices[U4] = tempU;									
-									break;
-								}
-								case Cell.ROTATE_180: {
-									float tempU = vertices[U1];
-									vertices[U1] = vertices[U3];
-									vertices[U3] = tempU;
-									tempU = vertices[U2];
-									vertices[U2] = vertices[U4];
-									vertices[U4] = tempU;									
-									float tempV = vertices[V1];
-									vertices[V1] = vertices[V3];
-									vertices[V3] = tempV;
-									tempV = vertices[V2];
-									vertices[V2] = vertices[V4];
-									vertices[V4] = tempV;
-									break;
-								}
-								case Cell.ROTATE_270: {
-									float tempV = vertices[V1];
-									vertices[V1] = vertices[V4];
-									vertices[V4] = vertices[V3];
-									vertices[V3] = vertices[V2];
-									vertices[V2] = tempV;
-
-									float tempU = vertices[U1];
-									vertices[U1] = vertices[U4];
-									vertices[U4] = vertices[U3];
-									vertices[U3] = vertices[U2];
-									vertices[U2] = tempU;									
-									break;
-								}
-							}								
-						}
-						spriteBatch.draw(region.getTexture(), vertices, 0, 20);
-					}					
-				}
-			}
-		}
-		
-	}
-	
-	public class OrthogonalTiledMapRenderer extends BaseTiledMapRenderer {
-		
-		private float[] vertices = new float[20];
-		
-		public OrthogonalTiledMapRenderer(TiledMap map) {
-			super(map);
-		}
-
-		public OrthogonalTiledMapRenderer(TiledMap map, float unitScale) {
-			super(map, unitScale);
-		}		
-		
-		@Override
-		public void renderObject (MapObject object) {
-			
-		}
-
-		@Override
-		public void renderTileLayer (TiledMapTileLayer layer) {
-			
-			final float color = Color.toFloatBits(1, 1, 1, layer.getOpacity());
-			
-			final int layerWidth = layer.getWidth();
-			final int layerHeight = layer.getHeight();
-			
-			final float layerTileWidth = layer.getTileWidth() * unitScale;
-			final float layerTileHeight = layer.getTileHeight() * unitScale;
-			
-			final int col1 = Math.max(0, (int) (viewBounds.x / layerTileWidth));
-			final int col2 = Math.min(layerWidth, (int) ((viewBounds.x + viewBounds.width + layerTileWidth) / layerTileWidth));
-
-			final int row1 = Math.max(0, (int) (viewBounds.y / layerTileHeight));
-			final int row2 = Math.min(layerHeight, (int) ((viewBounds.y + viewBounds.height + layerTileHeight) / layerTileHeight));				
-			
-			for (int row = row1; row < row2; row++) {
-				for (int col = col1; col < col2; col++) {
-					final TiledMapTileLayer.Cell cell = layer.getCell(col, row);
-					final TiledMapTile tile = cell.getTile();
-					if (tile != null) {
-						
-						final boolean flipX = cell.getFlipHorizontally();
-						final boolean flipY = cell.getFlipVertically();
-						final int rotations = cell.getRotation();
-						
-						TextureRegion region = tile.getTextureRegion();
-						
-						float x1 = col * layerTileWidth;
-						float y1 = row * layerTileHeight;
-						float x2 = x1 + region.getRegionWidth() * unitScale;
-						float y2 = y1 + region.getRegionHeight() * unitScale;
-						
-						float u1 = region.getU();
-						float v1 = region.getV2();
-						float u2 = region.getU2();
-						float v2 = region.getV();
-						
-						vertices[X1] = x1;
-						vertices[Y1] = y1;
-						vertices[C1] = color;
-						vertices[U1] = u1;
-						vertices[V1] = v1;
-						
-						vertices[X2] = x1;
-						vertices[Y2] = y2;
-						vertices[C2] = color;
-						vertices[U2] = u1;
-						vertices[V2] = v2;
-						
-						vertices[X3] = x2;
-						vertices[Y3] = y2;
-						vertices[C3] = color;
-						vertices[U3] = u2;
-						vertices[V3] = v2;
-						
-						vertices[X4] = x2;
-						vertices[Y4] = y1;
-						vertices[C4] = color;
-						vertices[U4] = u2;
-						vertices[V4] = v1;							
-						
-						if (flipX) {
-							float temp = vertices[U1];
-							vertices[U1] = vertices[U3];
-							vertices[U3] = temp;
-							temp = vertices[U2];
-							vertices[U2] = vertices[U4];
-							vertices[U4] = temp;
-						}
-						if (flipY) {
-							float temp = vertices[V1];
-							vertices[V1] = vertices[V3];
-							vertices[V3] = temp;
-							temp = vertices[V2];
-							vertices[V2] = vertices[V4];
-							vertices[V4] = temp;
-						}
-						if (rotations != 0) {
-							switch (rotations) {
-								case Cell.ROTATE_90: {
-									float tempV = vertices[V1];
-									vertices[V1] = vertices[V2];
-									vertices[V2] = vertices[V3];
-									vertices[V3] = vertices[V4];
-									vertices[V4] = tempV;
-
-									float tempU = vertices[U1];
-									vertices[U1] = vertices[U2];
-									vertices[U2] = vertices[U3];
-									vertices[U3] = vertices[U4];
-									vertices[U4] = tempU;									
-									break;
-								}
-								case Cell.ROTATE_180: {
-									float tempU = vertices[U1];
-									vertices[U1] = vertices[U3];
-									vertices[U3] = tempU;
-									tempU = vertices[U2];
-									vertices[U2] = vertices[U4];
-									vertices[U4] = tempU;									
-									float tempV = vertices[V1];
-									vertices[V1] = vertices[V3];
-									vertices[V3] = tempV;
-									tempV = vertices[V2];
-									vertices[V2] = vertices[V4];
-									vertices[V4] = tempV;
-									break;
-								}
-								case Cell.ROTATE_270: {
-									float tempV = vertices[V1];
-									vertices[V1] = vertices[V4];
-									vertices[V4] = vertices[V3];
-									vertices[V3] = vertices[V2];
-									vertices[V2] = tempV;
-
-									float tempU = vertices[U1];
-									vertices[U1] = vertices[U4];
-									vertices[U4] = vertices[U3];
-									vertices[U3] = vertices[U2];
-									vertices[U2] = tempU;									
-									break;
-								}
-							}								
-						}
-						spriteBatch.draw(region.getTexture(), vertices, 0, 20);
-					}
-				}
-			}			
-		}
-		
-	}
-
-	public class OrthogonalTiledMapRenderer2 implements TiledMapRenderer2 {
-
-		protected TiledMap map;
-
-		protected float unitScale;
-		
-		protected SpriteCache spriteCache;
-		
-		protected Rectangle viewBounds; 
-		
-		private float[] vertices = new float[20];
-		
-		public boolean recache;
-		
-		public OrthogonalTiledMapRenderer2(TiledMap map) {
-			this.map = map;
-			this.unitScale = 1;
-			this.spriteCache = new SpriteCache(4000, true);
-			this.viewBounds = new Rectangle();
-		}
-		
-		public OrthogonalTiledMapRenderer2(TiledMap map, float unitScale) {
-			this.map = map;
-			this.unitScale = unitScale;
-			this.viewBounds = new Rectangle();
-			this.spriteCache = new SpriteCache(4000, true);
-		}	
-		
-		@Override
-		public void setViewBounds (float x, float y, float width, float height) {
-			viewBounds.set(x, y, width, height);
-		}
-
-		@Override
-		public void setProjectionMatrix (Matrix4 projection) {
-			spriteCache.setProjectionMatrix(projection);
-		}
-
-		@Override
-		public void begin () {
-			if (recache) {
-				cached = false;
-				recache = false;
-				spriteCache.clear();
-			}
-			if (!cached) {
-				spriteCache.beginCache();	
-			} else {
-				Gdx.gl.glEnable(GL10.GL_BLEND);
-				Gdx.gl.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
-				spriteCache.begin();
-			}
-			
-		}
-
-		@Override
-		public void end () {
-			if (!cached) {
-				spriteCache.endCache();
-				cached = true;
-				begin();
-				render();
-				end();
-			} else {
-				spriteCache.end();
-				Gdx.gl.glDisable(GL10.GL_BLEND);
-			}
-		}
-
-		@Override
-		public void render () {
-			if (cached) {
-				spriteCache.draw(0);
-			} else {
-				for (MapLayer layer : map.getLayers()) {
-					if (layer.getVisible()) {
-						if (layer instanceof TiledMapTileLayer) {
-							renderTileLayer((TiledMapTileLayer) layer);
-						} else {
-							for (MapObject object : layer.getObjects()) {
-								renderObject(object);
-							}
-						}					
-					}				
-				}				
-			}
-
-		}
-
-		@Override
-		public void renderObject (MapObject object) {
-			// TODO Auto-generated method stub
-			
-		}
-
-		boolean cached = false;
-		int count = 0;
-		@Override
-		public void renderTileLayer (TiledMapTileLayer layer) {
-			final float color = Color.toFloatBits(1, 1, 1, layer.getOpacity());
-		
-			final int layerWidth = layer.getWidth();
-			final int layerHeight = layer.getHeight();
-			
-			final float layerTileWidth = layer.getTileWidth() * unitScale;
-			final float layerTileHeight = layer.getTileHeight() * unitScale;
-			
-			final int col1 = Math.max(0, (int) (viewBounds.x / layerTileWidth));
-			final int col2 = Math.min(layerWidth, (int) ((viewBounds.x + viewBounds.width + layerTileWidth) / layerTileWidth));
-
-			final int row1 = Math.max(0, (int) (viewBounds.y / layerTileHeight));
-			final int row2 = Math.min(layerHeight, (int) ((viewBounds.y + viewBounds.height + layerTileHeight) / layerTileHeight));				
-			
-			for (int row = row1; row < row2; row++) {
-				for (int col = col1; col < col2; col++) {
-					final TiledMapTileLayer.Cell cell = layer.getCell(col, row);
-					final TiledMapTile tile = cell.getTile();
-					if (tile != null) {
-						count++;
-						final boolean flipX = cell.getFlipHorizontally();
-						final boolean flipY = cell.getFlipVertically();
-						final int rotations = cell.getRotation();
-						
-						TextureRegion region = tile.getTextureRegion();
-						
-						float x1 = col * layerTileWidth;
-						float y1 = row * layerTileHeight;
-						float x2 = x1 + region.getRegionWidth() * unitScale;
-						float y2 = y1 + region.getRegionHeight() * unitScale;
-						
-						float u1 = region.getU();
-						float v1 = region.getV2();
-						float u2 = region.getU2();
-						float v2 = region.getV();
-						
-						vertices[X1] = x1;
-						vertices[Y1] = y1;
-						vertices[C1] = color;
-						vertices[U1] = u1;
-						vertices[V1] = v1;
-						
-						vertices[X2] = x1;
-						vertices[Y2] = y2;
-						vertices[C2] = color;
-						vertices[U2] = u1;
-						vertices[V2] = v2;
-						
-						vertices[X3] = x2;
-						vertices[Y3] = y2;
-						vertices[C3] = color;
-						vertices[U3] = u2;
-						vertices[V3] = v2;
-						
-						vertices[X4] = x2;
-						vertices[Y4] = y1;
-						vertices[C4] = color;
-						vertices[U4] = u2;
-						vertices[V4] = v1;							
-						
-						if (flipX) {
-							float temp = vertices[U1];
-							vertices[U1] = vertices[U3];
-							vertices[U3] = temp;
-							temp = vertices[U2];
-							vertices[U2] = vertices[U4];
-							vertices[U4] = temp;
-						}
-						if (flipY) {
-							float temp = vertices[V1];
-							vertices[V1] = vertices[V3];
-							vertices[V3] = temp;
-							temp = vertices[V2];
-							vertices[V2] = vertices[V4];
-							vertices[V4] = temp;
-						}
-						if (rotations != 0) {
-							switch (rotations) {
-								case Cell.ROTATE_90: {
-									float tempV = vertices[V1];
-									vertices[V1] = vertices[V2];
-									vertices[V2] = vertices[V3];
-									vertices[V3] = vertices[V4];
-									vertices[V4] = tempV;
-
-									float tempU = vertices[U1];
-									vertices[U1] = vertices[U2];
-									vertices[U2] = vertices[U3];
-									vertices[U3] = vertices[U4];
-									vertices[U4] = tempU;									
-									break;
-								}
-								case Cell.ROTATE_180: {
-									float tempU = vertices[U1];
-									vertices[U1] = vertices[U3];
-									vertices[U3] = tempU;
-									tempU = vertices[U2];
-									vertices[U2] = vertices[U4];
-									vertices[U4] = tempU;									
-									float tempV = vertices[V1];
-									vertices[V1] = vertices[V3];
-									vertices[V3] = tempV;
-									tempV = vertices[V2];
-									vertices[V2] = vertices[V4];
-									vertices[V4] = tempV;
-									break;
-								}
-								case Cell.ROTATE_270: {
-									float tempV = vertices[V1];
-									vertices[V1] = vertices[V4];
-									vertices[V4] = vertices[V3];
-									vertices[V3] = vertices[V2];
-									vertices[V2] = tempV;
-
-									float tempU = vertices[U1];
-									vertices[U1] = vertices[U4];
-									vertices[U4] = vertices[U3];
-									vertices[U3] = vertices[U2];
-									vertices[U2] = tempU;									
-									break;
-								}
-							}								
-						}
-						spriteCache.add(region.getTexture(), vertices, 0, 20);
-					}
-				}
-			}
-		}
-		
-	}
-}
diff --git a/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapTile.java b/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapTile.java
index c0e06b4..ff1e50c 100644
--- a/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapTile.java
+++ b/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapTile.java
@@ -3,10 +3,20 @@ package com.badlogic.gdx.maps.tiled;
 import com.badlogic.gdx.graphics.g2d.TextureRegion;
 import com.badlogic.gdx.maps.MapProperties;
 
+/**
+ * @brief Generalises the concept of tile in a TiledMap
+ *
+ */
 public interface TiledMapTile {
 
+	/**
+	 * @return texture region used to render the tile
+	 */
 	public TextureRegion getTextureRegion();
 
+	/**
+	 * @return tile's properties set
+	 */
 	public MapProperties getProperties();
 	
 }
diff --git a/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapTileLayer.java b/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapTileLayer.java
index 364646c..6325411 100644
--- a/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapTileLayer.java
+++ b/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapTileLayer.java
@@ -2,6 +2,9 @@ package com.badlogic.gdx.maps.tiled;
 
 import com.badlogic.gdx.maps.MapLayer;
 
+/**
+ * @brief Layer for a TiledMap 
+ */
 public class TiledMapTileLayer extends MapLayer {
 
 	private int width;
@@ -12,22 +15,42 @@ public class TiledMapTileLayer extends MapLayer {
 	
 	private Cell[][] cells;
 	
+	/**
+	 * @return layer's witdth in tiles
+	 */
 	public int getWidth() {
 		return width;
 	}
 	
+	/**
+	 * @return layer's height in tiles
+	 */
 	public int getHeight() {
 		return height;
 	}
 	
+	/**
+	 * @return tiles' width in pixels
+	 */
 	public float getTileWidth() {
 		return tileWidth;
 	}
 	
+	/**
+	 * @return tiles' height in pixels
+	 */
 	public float getTileHeight() {
 		return tileHeight;
 	}
 	
+	/**
+	 * Creates TiledMap layer
+	 * 
+	 * @param width layer width in tiles
+	 * @param height layer height in tiles
+	 * @param tileWidth tile width in pixels
+	 * @param tileHeight tile height in pixels 
+	 */
 	public TiledMapTileLayer(int width, int height, int tileWidth, int tileHeight) {
 		super();
 		this.width = width;
@@ -42,6 +65,11 @@ public class TiledMapTileLayer extends MapLayer {
 		}
 	}
 	
+	/**
+	 * @param x
+	 * @param y 
+	 * @return cell at (x, y)
+	 */
 	public Cell getCell(int x, int y) {
 		return cells[x][y];
 	}
@@ -57,6 +85,9 @@ public class TiledMapTileLayer extends MapLayer {
 		cells[x][y].setTile(tile);
 	}
 	
+	/**
+	 * @brief represents a slot in a TiledLayer: TiledMapTile, flip and rotation properties.
+	 */
 	public class Cell {
 		
 		private TiledMapTile tile;
@@ -65,7 +96,7 @@ public class TiledMapTileLayer extends MapLayer {
 		
 		private boolean flipVertically;
 		
-		private int rotation;
+		private float rotation;
 		
 		/**
 		 * @return The tile currently assigned to this cell.
@@ -118,7 +149,7 @@ public class TiledMapTileLayer extends MapLayer {
 		/**
 		 * @return The rotation of this cell, in degrees.
 		 */
-		public int getRotation() {
+		public float getRotation() {
 			return rotation;
 		}
 		
@@ -127,15 +158,9 @@ public class TiledMapTileLayer extends MapLayer {
 		 * 
 		 * @param rotation
 		 */
-		public void setRotation(int rotation) {
+		public void setRotation(float rotation) {
 			this.rotation = rotation;
 		}
-		
-		public static final int ROTATE_0 = 0;
-		public static final int ROTATE_90 = 1;
-		public static final int ROTATE_180 = 2;
-		public static final int ROTATE_270 = 3;
-		
 	}
 	
 }
diff --git a/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapTileSet.java b/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapTileSet.java
index e1902ab..3affe23 100644
--- a/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapTileSet.java
+++ b/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapTileSet.java
@@ -3,6 +3,9 @@ package com.badlogic.gdx.maps.tiled;
 import com.badlogic.gdx.maps.MapProperties;
 import com.badlogic.gdx.utils.IntMap;
 
+/**
+ * @brief Set of TiledMapTile instances used to compose a TiledMapLayer
+ */
 public class TiledMapTileSet {
 	
 	private String name;
@@ -11,31 +14,56 @@ public class TiledMapTileSet {
 
 	private MapProperties properties;
 
+	/**
+	 * @return tileset's name
+	 */
 	public String getName() {
 		return name;
 	}
 	
+	/**
+	 * @param name new name for the tileset
+	 */
 	public void setName(String name) {
 		this.name = name;
 	}
 	
+	/**
+	 * @return tileset's properties set
+	 */
 	public MapProperties getProperties() {
 		return properties;
 	}
 	
+	/**
+	 * Creates empty tileset
+	 */
 	public TiledMapTileSet() {
 		tiles = new IntMap<TiledMapTile>();
 		properties = new MapProperties();
 	}
 	
+	/**
+	 * @param id
+	 * @return tile matching id, null if it doesn't exist
+	 */
 	public TiledMapTile getTile(int id) {
 		return tiles.get(id);
 	}
 	
+	/**
+	 * Adds or replaces tile with that id
+	 * 
+	 * @param id
+	 * @param tile
+	 */
 	public void putTile(int id, TiledMapTile tile) {
 		tiles.put(id, tile);
 	}
 	
+	/**
+	 * @param id tile's id to be removed
+	 */
 	public void removeTile(int id) {
 		tiles.remove(id);
 	}
diff --git a/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapTileSets.java b/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapTileSets.java
index d3ebd12..82b8fa5 100644
--- a/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapTileSets.java
+++ b/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapTileSets.java
@@ -4,18 +4,32 @@ import java.util.Iterator;
 
 import com.badlogic.gdx.utils.Array;
 
+/**
+ * @brief Collection of TiledMapTileSet
+ */
 public class TiledMapTileSets implements Iterable<TiledMapTileSet> {
 	
 	private Array<TiledMapTileSet> tilesets;
 	
+	/**
+	 * Creates empty collection of tilesets
+	 */
 	public TiledMapTileSets() {
 		tilesets = new Array<TiledMapTileSet>();
 	}
 	
+	/**
+	 * @param index
+	 * @return tileset at index
+	 */
 	public TiledMapTileSet getTileSet(int index) {
 		return tilesets.get(index);
 	}
 	
+	/**
+	 * @param name
+	 * @return tileset with matching name, null if it doesn't exist
+	 */
 	public TiledMapTileSet getTileSet(String name) {
 		for (TiledMapTileSet tileset : tilesets) {
 			if (name.equals(tileset.getName())) {
@@ -25,18 +39,33 @@ public class TiledMapTileSets implements Iterable<TiledMapTileSet> {
 		return null;
 	}
 	
+	/**
+	 * @param tileset set to be added to the collection
+	 */
 	public void addTileSet(TiledMapTileSet tileset) {
 		tilesets.add(tileset);
 	}
 	
+	/**
+	 * Removes tileset at index
+	 * 
+	 * @param index
+	 */
 	public void removeTileSet(int index) {
 		tilesets.removeIndex(index);
 	}
 	
+	/**
+	 * @param tileset set to be removed
+	 */
 	public void removeTileSet(TiledMapTileSet tileset) {
 		tilesets.removeValue(tileset, true);
 	}
 	
+	/**
+	 * @param id
+	 * @return tile with matching id, null if it doesn't exist
+	 */
 	public TiledMapTile getTile(int id) {
 		for (TiledMapTileSet tileset : tilesets) {
 			TiledMapTile tile = tileset.getTile(id);
@@ -47,6 +76,9 @@ public class TiledMapTileSets implements Iterable<TiledMapTileSet> {
 		return null;
 	}
 	
+	/**
+	 * @return iterator to tilesets
+	 */
 	@Override
 	public Iterator<TiledMapTileSet> iterator() {
 		return tilesets.iterator();
diff --git a/gdx/src/com/badlogic/gdx/maps/tiled/tiles/StaticTiledMapTile.java b/gdx/src/com/badlogic/gdx/maps/tiled/tiles/StaticTiledMapTile.java
index c3fb28e..9486296 100644
--- a/gdx/src/com/badlogic/gdx/maps/tiled/tiles/StaticTiledMapTile.java
+++ b/gdx/src/com/badlogic/gdx/maps/tiled/tiles/StaticTiledMapTile.java
@@ -4,26 +4,45 @@ import com.badlogic.gdx.graphics.g2d.TextureRegion;
 import com.badlogic.gdx.maps.MapProperties;
 import com.badlogic.gdx.maps.tiled.TiledMapTile;
 
+/**
+ * @brief Represents a non changing TiledMapTile (can be cached)
+ */
 public class StaticTiledMapTile implements TiledMapTile {
 
 	private MapProperties properties;
 	
 	private TextureRegion textureRegion;	
 
+	/**
+	 * @return tile's properties set
+	 */
 	@Override
 	public MapProperties getProperties() {
 		return properties;
 	}
-	
+
+	/**
+	 * @return texture region used to render the tile
+	 */
 	@Override
 	public TextureRegion getTextureRegion() {
 		return textureRegion;
 	}
 	
+	/**
+	 * Creates a static tile with the given region
+	 * 
+	 * @param textureRegion
+	 */
 	public StaticTiledMapTile(TextureRegion textureRegion) {
 		this.textureRegion = textureRegion;
 	}
 	
+	/**
+	 * Copy constructor
+	 * 
+	 * @param copy
+	 */
 	public StaticTiledMapTile(StaticTiledMapTile copy) {
 		this.properties.putAll(copy.properties);
 		this.textureRegion = copy.textureRegion;
diff --git a/gdx/src/com/badlogic/gdx/math/CatmullRomSpline.java b/gdx/src/com/badlogic/gdx/math/CatmullRomSpline.java
index a806343..0f660c8 100644
--- a/gdx/src/com/badlogic/gdx/math/CatmullRomSpline.java
+++ b/gdx/src/com/badlogic/gdx/math/CatmullRomSpline.java
@@ -19,10 +19,9 @@ package com.badlogic.gdx.math;
 import java.io.Serializable;
 import java.util.ArrayList;
 import java.util.List;
-import java.util.Vector;
 
-/** Encapsulates a Catmull-Rom spline with n control points, n >= 4. For more information on this type of spline see
- * <a href="http://www.mvps.org/directx/articles/catmull/">http://www.mvps.org/directx/articles/catmull/</a>
+/** Encapsulates a catmull rom spline with n control points, n >= 4. For more information on this type of spline see
+ * http://www.mvps.org/directx/articles/catmull/.
  * 
  * @author badlogicgames@gmail.com */
 public class CatmullRomSpline implements Serializable {
@@ -43,12 +42,8 @@ public class CatmullRomSpline implements Serializable {
 		return controlPoints;
 	}
 
-	/** Returns a path.  Between every pair of consecutive control points numPoints are generated along the path.
-	 * The control points themselves are added to the path too.
-	 * The first and the last control point are omitted.  
-	 * If there are fewer than four control points an empty path is returned.
-	 * 
-	 * <p>This method is not thread-safe.  It uses the global {@link Vector3#tmp()}.  
+	/** Returns a path, between every two control points numPoints are generated and the control points themselves are added too.
+	 * The first and the last controlpoint are omitted. if there's less than 4 controlpoints an empty path is returned.
 	 * 
 	 * @param numPoints number of points returned for a segment
 	 * @return the path */
@@ -91,14 +86,8 @@ public class CatmullRomSpline implements Serializable {
 		return points;
 	}
 
-	/** Returns a path.  Between every pair of consecutive control points numPoints are generated along the path.
-	 * The control points themselves are added to the path too.
-	 * The first and the last control point are omitted.  
-	 * If there are fewer than four control points an empty path is returned.
-	 * 
-	 * <p>The points array must be large enough for all the path points or an exception will be thrown.
-	 * 
-	 * <p>This method is not thread-safe.  It uses the global {@link Vector3#tmp()}.  
+	/** Returns a path, between every two control points numPoints are generated and the control points themselves are added too.
+	 * The first and the last controlpoint are omitted. if there's less than 4 controlpoints an empty path is returned.
 	 * 
 	 * @param points the array of Vector3 instances to store the path in
 	 * @param numPoints number of points returned for a segment */
@@ -136,8 +125,6 @@ public class CatmullRomSpline implements Serializable {
 
 	/** Returns all tangents for the points in a path. Same semantics as getPath.
 	 * 
-	 * <p>This method is not thread-safe.  It uses the global {@link Vector3#tmp()}.
-	 *  
 	 * @param numPoints number of points returned for a segment
 	 * @return the tangents of the points in the path */
 	public List<Vector3> getTangents (int numPoints) {
@@ -182,8 +169,6 @@ public class CatmullRomSpline implements Serializable {
 	/** Returns all tangent's normals in 2D space for the points in a path. The controlpoints have to lie in the x/y plane for this
 	 * to work. Same semantics as getPath.
 	 * 
-	 * <p>This method is not thread-safe.  It uses the global {@link Vector3#tmp()}.
-	 *  
 	 * @param numPoints number of points returned for a segment
 	 * @return the tangents of the points in the path */
 	public List<Vector3> getTangentNormals2D (int numPoints) {
diff --git a/gdx/src/com/badlogic/gdx/math/EarClippingTriangulator.java b/gdx/src/com/badlogic/gdx/math/EarClippingTriangulator.java
index 701d735..7402e66 100644
--- a/gdx/src/com/badlogic/gdx/math/EarClippingTriangulator.java
+++ b/gdx/src/com/badlogic/gdx/math/EarClippingTriangulator.java
@@ -21,10 +21,8 @@ import java.util.Collections;
 import java.util.List;
 
 /** A simple implementation of the ear cutting algorithm to triangulate simple polygons without holes. For more information:
- * <ul>
- * <li><a href="http://cgm.cs.mcgill.ca/~godfried/teaching/cg-projects/97/Ian/algorithm2.html">http://cgm.cs.mcgill.ca/~godfried/teaching/cg-projects/97/Ian/algorithm2.html</a></li>
- * <li><a href="http://www.geometrictools.com/Documentation/TriangulationByEarClipping.pdf">http://www.geometrictools.com/Documentation/TriangulationByEarClipping.pdf</a></li>
- * </ul>
+ * http://cgm.cs.mcgill.ca/~godfried/teaching/cg-projects/97/Ian/algorithm2.html
+ * http://www.geometrictools.com/Documentation/TriangulationByEarClipping.pdf
  * 
  * @author badlogicgames@gmail.com
  * @author Nicolas Gramlich (Improved performance. Collinear edges are now supported.)
diff --git a/gdx/src/com/badlogic/gdx/math/FloatCounter.java b/gdx/src/com/badlogic/gdx/math/FloatCounter.java
index e6e85e7..c802486 100644
--- a/gdx/src/com/badlogic/gdx/math/FloatCounter.java
+++ b/gdx/src/com/badlogic/gdx/math/FloatCounter.java
@@ -18,11 +18,7 @@ package com.badlogic.gdx.math;
 
 import com.badlogic.gdx.utils.StringBuilder;
 
-/** 
- * Track properties of a stream of float values.  The properties (total value, minimum, etc) are updated as
- * values are {@link #put(float)} into the stream.
- * 
- * @author xoppa */
+/** @author xoppa */
 public class FloatCounter {	
 	/** The amount of values added */
 	public int count;
diff --git a/gdx/src/com/badlogic/gdx/math/Frustum.java b/gdx/src/com/badlogic/gdx/math/Frustum.java
index 082d7a3..4f7abe6 100644
--- a/gdx/src/com/badlogic/gdx/math/Frustum.java
+++ b/gdx/src/com/badlogic/gdx/math/Frustum.java
@@ -16,16 +16,11 @@
 
 package com.badlogic.gdx.math;
 
-import com.badlogic.gdx.graphics.Camera;
 import com.badlogic.gdx.graphics.OrthographicCamera;
 import com.badlogic.gdx.graphics.PerspectiveCamera;
 import com.badlogic.gdx.math.Plane.PlaneSide;
 import com.badlogic.gdx.math.collision.BoundingBox;
 
-/**
- * A truncated rectangular pyramid.  Used to define the viewable region and its projection onto the screen.  
- * See {@link Camera#frustum}.
- */
 public class Frustum {
 	protected static final Vector3[] clipSpacePlanePoints = {new Vector3(-1, -1, -1), new Vector3(1, -1, -1),
 		new Vector3(1, 1, -1), new Vector3(-1, 1, -1), // near clip
diff --git a/gdx/src/com/badlogic/gdx/math/Intersector.java b/gdx/src/com/badlogic/gdx/math/Intersector.java
index 47b3fe2..7560140 100644
--- a/gdx/src/com/badlogic/gdx/math/Intersector.java
+++ b/gdx/src/com/badlogic/gdx/math/Intersector.java
@@ -717,7 +717,10 @@ public final class Intersector {
 	}
 
 	public static boolean overlapRectangles (Rectangle r1, Rectangle r2) {
-		return r1.overlaps(r2);
+		if (r1.x < r2.x + r2.width && r1.x + r1.width > r2.x && r1.y < r2.y + r2.height && r1.y + r1.height > r2.y)
+			return true;
+		else
+			return false;
 	}
 
 	public static boolean overlapCircleRectangle (Circle c, Rectangle r) {
diff --git a/gdx/src/com/badlogic/gdx/math/Matrix4.java b/gdx/src/com/badlogic/gdx/math/Matrix4.java
index ce21b40..a692a4c 100644
--- a/gdx/src/com/badlogic/gdx/math/Matrix4.java
+++ b/gdx/src/com/badlogic/gdx/math/Matrix4.java
@@ -335,7 +335,7 @@ public class Matrix4 implements Serializable {
 	 * @param near The near plane
 	 * @param far The far plane
 	 * @param fov The field of view in degrees
-	 * @param aspectRatio The "width over height" aspect ratio
+	 * @param aspectRatio The aspect ratio
 	 * @return This matrix for the purpose of chaining methods together. */
 	public Matrix4 setToProjection (float near, float far, float fov, float aspectRatio) {
 		idt();
diff --git a/gdx/src/com/badlogic/gdx/math/Polygon.java b/gdx/src/com/badlogic/gdx/math/Polygon.java
index f9402a9..269c454 100644
--- a/gdx/src/com/badlogic/gdx/math/Polygon.java
+++ b/gdx/src/com/badlogic/gdx/math/Polygon.java
@@ -25,10 +25,6 @@ public class Polygon {
 	private float scaleX = 1, scaleY = 1;
 	private boolean dirty = true;
 	private Rectangle bounds;
-	
-	public Polygon () {
-		this.localVertices = new float[0];
-	}
 
 	public Polygon (float[] vertices) {
 		if (vertices.length < 6) throw new IllegalArgumentException("polygons must contain at least 3 points.");
@@ -147,13 +143,6 @@ public class Polygon {
 		return area;
 	}
 
-	/** Returns an axis-aligned bounding box of this polygon.  
-	 * 
-	 * Note the returned Rectangle is cached in this polygon, and will
-	 * be reused if this Polygon is changed.
-	 * 
-	 * @return this polygon's bounding box Rectangle
-	 */
 	public Rectangle getBoundingRectangle () {
 		float[] vertices = getTransformedVertices();
 
diff --git a/gdx/src/com/badlogic/gdx/math/Quaternion.java b/gdx/src/com/badlogic/gdx/math/Quaternion.java
index 47c1550..f27bc2c 100644
--- a/gdx/src/com/badlogic/gdx/math/Quaternion.java
+++ b/gdx/src/com/badlogic/gdx/math/Quaternion.java
@@ -18,9 +18,7 @@ package com.badlogic.gdx.math;
 
 import java.io.Serializable;
 
-/** A simple quaternion class. See 
- * <a href="http://en.wikipedia.org/wiki/Quaternion">http://en.wikipedia.org/wiki/Quaternion</a>
- * for more information.
+/** A simple quaternion class. See http://en.wikipedia.org/wiki/Quaternion for more information.
  * 
  * @author badlogicgames@gmail.com
  * @author vesuvio */
diff --git a/gdx/src/com/badlogic/gdx/math/Vector2.java b/gdx/src/com/badlogic/gdx/math/Vector2.java
index c956cc7..32a2a40 100644
--- a/gdx/src/com/badlogic/gdx/math/Vector2.java
+++ b/gdx/src/com/badlogic/gdx/math/Vector2.java
@@ -285,10 +285,9 @@ public class Vector2 implements Serializable {
 	 * @param alpha The interpolation coefficient
 	 * @return This vector for chaining. */
 	public Vector2 lerp (Vector2 target, float alpha) {
-		final float invAlpha = 1.0f - alpha;
-		this.x = (x * invAlpha) + (target.x * alpha);
-		this.y = (y * invAlpha) + (target.y * alpha);
-		return this;
+		Vector2 r = this.mul(1.0f - alpha);
+		r.add(target.tmp().mul(alpha));
+		return r;
 	}
 
 	@Override
diff --git a/gdx/src/com/badlogic/gdx/physics/box2d/Box2DDebugRenderer.java b/gdx/src/com/badlogic/gdx/physics/box2d/Box2DDebugRenderer.java
index 1b34856..44330c1 100644
--- a/gdx/src/com/badlogic/gdx/physics/box2d/Box2DDebugRenderer.java
+++ b/gdx/src/com/badlogic/gdx/physics/box2d/Box2DDebugRenderer.java
@@ -159,7 +159,7 @@ public class Box2DDebugRenderer {
 			vertices[2].set(upper.x, upper.y);
 			vertices[3].set(lower.x, upper.y);
 
-			drawSolidPolygon(vertices, 4, AABB_COLOR, true);
+			drawSolidPolygon(vertices, 4, AABB_COLOR);
 		} else if (fixture.getType() == Type.Polygon) {
 			PolygonShape shape = (PolygonShape)fixture.getShape();
 			int vertexCount = shape.getVertexCount();
@@ -182,7 +182,7 @@ public class Box2DDebugRenderer {
 			vertices[2].set(upper.x, upper.y);
 			vertices[3].set(lower.x, upper.y);
 
-			drawSolidPolygon(vertices, 4, AABB_COLOR, true);
+			drawSolidPolygon(vertices, 4, AABB_COLOR);
 		}
 	}
 
@@ -203,7 +203,7 @@ public class Box2DDebugRenderer {
 			edge.getVertex2(vertices[1]);
 			transform.mul(vertices[0]);
 			transform.mul(vertices[1]);
-			drawSolidPolygon(vertices, 2, color, true);
+			drawSolidPolygon(vertices, 2, color);
 		}
 
 		if (fixture.getType() == Type.Polygon) {
@@ -213,7 +213,7 @@ public class Box2DDebugRenderer {
 				chain.getVertex(i, vertices[i]);
 				transform.mul(vertices[i]);
 			}
-			drawSolidPolygon(vertices, vertexCount, color, true);
+			drawSolidPolygon(vertices, vertexCount, color);
 		}
 
 		if (fixture.getType() == Type.Chain) {
@@ -223,7 +223,7 @@ public class Box2DDebugRenderer {
 				chain.getVertex(i, vertices[i]);
 				transform.mul(vertices[i]);
 			}
-			drawSolidPolygon(vertices, vertexCount, color, false);
+			drawSolidPolygon(vertices, vertexCount, color);
 		}
 	}
 
@@ -249,7 +249,7 @@ public class Box2DDebugRenderer {
 		renderer.line(center.x, center.y, 0, center.x + axis.x * radius, center.y + axis.y * radius, 0);
 	}
 
-	private void drawSolidPolygon (Vector2[] vertices, int vertexCount, Color color, boolean closed) {
+	private void drawSolidPolygon (Vector2[] vertices, int vertexCount, Color color) {
 		renderer.setColor(color.r, color.g, color.b, color.a);
 		for (int i = 0; i < vertexCount; i++) {
 			Vector2 v = vertices[i];
@@ -261,7 +261,7 @@ public class Box2DDebugRenderer {
 			renderer.line(lv.x, lv.y, v.x, v.y);
 			lv.set(v);
 		}
-		if(closed) renderer.line(f.x, f.y, lv.x, lv.y);
+		renderer.line(f.x, f.y, lv.x, lv.y);
 	}
 
 	private void drawJoint (Joint joint) {
diff --git a/gdx/src/com/badlogic/gdx/physics/box2d/ChainShape.java b/gdx/src/com/badlogic/gdx/physics/box2d/ChainShape.java
index 1306dcd..f1706a4 100644
--- a/gdx/src/com/badlogic/gdx/physics/box2d/ChainShape.java
+++ b/gdx/src/com/badlogic/gdx/physics/box2d/ChainShape.java
@@ -23,7 +23,6 @@ public class ChainShape extends Shape {
 	/*JNI
 #include <Box2D/Box2D.h>
 	 */
-	boolean isLooped = false;
 	
 	public ChainShape () {
 		addr = newChainShape();
@@ -51,7 +50,6 @@ public class ChainShape extends Shape {
 			verts[i + 1] = vertices[j].y;
 		}
 		jniCreateLoop(addr, verts, verts.length / 2);
-		isLooped = true;
 	}
 
 	private native void jniCreateLoop (long addr, float[] verts, int numVertices); /*
@@ -72,7 +70,6 @@ public class ChainShape extends Shape {
 			verts[i + 1] = vertices[j].y;
 		}
 		jniCreateChain(addr, verts, verts.length / 2);
-		isLooped = false;
 	}
 
 	private native void jniCreateChain (long addr, float[] verts, int numVertices); /*
@@ -141,10 +138,6 @@ public class ChainShape extends Shape {
 		verts[0] = v.x;
 		verts[1] = v.y;
 	*/
-	
-	public boolean isLooped() {
-		return isLooped;
-	}
 
 // /// Implement b2Shape. Vertices are cloned using b2Alloc.
 // b2Shape* Clone(b2BlockAllocator* allocator) const;
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/Actor.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/Actor.java
index 8d729d1..635de91 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/Actor.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/Actor.java
@@ -22,8 +22,6 @@ import com.badlogic.gdx.math.MathUtils;
 import com.badlogic.gdx.math.Rectangle;
 import com.badlogic.gdx.math.Vector2;
 import com.badlogic.gdx.scenes.scene2d.InputEvent.Type;
-import com.badlogic.gdx.scenes.scene2d.actions.Actions;
-import com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener;
 import com.badlogic.gdx.scenes.scene2d.utils.ClickListener;
 import com.badlogic.gdx.scenes.scene2d.utils.ScissorStack;
 import com.badlogic.gdx.utils.Array;
@@ -31,24 +29,12 @@ import com.badlogic.gdx.utils.DelayedRemovalArray;
 import com.badlogic.gdx.utils.GdxRuntimeException;
 import com.badlogic.gdx.utils.Pools;
 
-/** 2D scene graph node. An actor has a position, rectangular size, origin, scale, rotation, Z index, and color. The position corresponds to
+/** 2D scene graph node. An actor has a position, rectangular size, origin, scale, rotation, and color. The position corresponds to
  * the unrotated, unscaled bottom left corner of the actor. The position is relative to the actor's parent. The origin is relative
  * to the position and is used for scale and rotation.
  * <p>
- * An actor has a list of in-progress {@link Action actions} that are applied to the actor (over time).  These are generally used to change
- * the presentation of the actor (moving it, resizing it, etc).  See {@link #act(float)} and {@link Action}.
- * <p>
- * An actor has two kinds of listeners associated with it: "capture" and regular.  
- * The listeners are notified of
- * events the actor or its children receive. 
- * The capture listeners are 
- * designed to allow a parent or container actor to hide events from child actors.  The regular listeners
- * are designed to allow an actor to respond to events that have been delivered.  See {@link #fire} for more details.
- * <p>
- * An {@link InputListener} can receive all the basic input events, and more 
- * complex listeners (like {@link ClickListener} and {@link ActorGestureListener}) can listen for and combine 
- * primitive events and recognize complex interactions like multi-click or pinch. 
- * 
+ * An actor also has a list of actions that can manipulate the actor over time, and a list of listeners that are notified of
+ * events the actor receives.
  * @author mzechner
  * @author Nathan Sweet */
 public class Actor {
@@ -75,7 +61,7 @@ public class Actor {
 	 * {@link SpriteBatch#begin()} must be called before the method returns.
 	 * <p>
 	 * The default implementation does nothing.
-	 * @param parentAlpha Should be multiplied with the actor's alpha, allowing a parent's alpha to affect all children. */
+	 * @param parentAlpha Should be multipied with the actor's alpha, allowing a parent's alpha to affect all children. */
 	public void draw (SpriteBatch batch, float parentAlpha) {
 	}
 
@@ -98,16 +84,11 @@ public class Actor {
 	/** Sets this actor as the event {@link Event#setTarget(Actor) target} and propagates the event to this actor and ancestor
 	 * actors as necessary. If this actor is not in the stage, the stage must be set before calling this method.
 	 * <p>
-	 * Events are fired in 2 phases. 
-	 * <ol>
-	 * <li>The first phase (the "capture" phase) notifies listeners on each actor starting at the root and propagating downward
-	 * to (and including) this actor.</li> 
-	 * <li>The second phase notifies listeners on each actor starting at this actor and, if
-	 * {@link Event#getBubbles()} is true, propagating upward to the root.</li>
-	 * </ol>
-	 * If the event is {@link Event#stop() stopped} at any time,
+	 * Events are fired in 2 phases. The first phase notifies listeners on each actor starting at the root and propagating downward
+	 * to (and including) this actor. The second phase notifes listeners on each actor starting at this actor and, if
+	 * {@link Event#getBubbles()} is true, propagating upward to the root. If the event is {@link Event#stop() stopped} at any time,
 	 * it will not propagate to the next actor.
-	 * @return true if the event was {@link Event#cancel() cancelled}. */
+	 * @return true of the event was {@link Event#cancel() cancelled}. */
 	public boolean fire (Event event) {
 		if (event.getStage() == null) event.setStage(getStage());
 		event.setTarget(this);
@@ -188,10 +169,9 @@ public class Actor {
 	 * {@link #isVisible() visible}, or null if no actor was hit. The point is specified in the actor's local coordinate system (0,0
 	 * is the bottom left of the actor and width,height is the upper right).
 	 * <p>
-	 * This method is used to delegate touchDown, mouse, and enter/exit events. If this method returns null, those events will not occur on this Actor.
+	 * This method is used to delegate touchDown events. If this method returns null, touchDown will not occur.
 	 * <p>
 	 * The default implementation returns this actor if the point is within this actor's bounds.
-	 * 
 	 * @param touchable If true, the hit detection will respect the {@link #setTouchable(Touchable) touchability}.
 	 * @see Touchable */
 	public Actor hit (float x, float y, boolean touchable) {
@@ -207,11 +187,9 @@ public class Actor {
 	}
 
 	/**
-	 * Add a listener to receive events that {@link #hit(float, float, boolean) hit} this actor.  
-	 * See {@link #fire(Event)}.
-	 * 
 	 * @see InputListener
-	 * @see ClickListener */
+	 * @see ClickListener
+	 */
 	public boolean addListener (EventListener listener) {
 		if (!listeners.contains(listener, true)) {
 			listeners.add(listener);
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/Event.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/Event.java
index 516b369..95a66f8 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/Event.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/Event.java
@@ -19,16 +19,6 @@ package com.badlogic.gdx.scenes.scene2d;
 import com.badlogic.gdx.utils.Pool.Poolable;
 
 /** The base class for all events.
- * <p>
- * By default an event will "bubble" up through an actor's parent's handlers (see {@link #setBubbles(boolean)}).
- * <p>
- * An actor's capture listeners can {@link #stop()} an event to prevent child actors from seeing it. 
- * <p>
- * An Event may be marked as "handled" which will end its propagation outside of the Stage (see {@link #handle()}).  
- * The default {@link Actor#fire(Event)} will mark events handled if an {@link EventListener} returns true.
- * <p>
- * A cancelled event will be stopped and handled.  Additionally, many actors will undo the side-effects of a canceled event.  (See {@link #cancel()}.)
- * 
  * @see InputEvent
  * @see Actor#fire(Event) */
 public class Event implements Poolable {
@@ -41,13 +31,13 @@ public class Event implements Poolable {
 	private boolean stopped; // true means event propagation was stopped
 	private boolean cancelled; // true means propagation was stopped and any action that this event would cause should not happen
 
-	/** Marks this event as handled. This does not affect event propagation inside scene2d, but causes the {@link Stage}
+	/** Marks this event has being handled. This does not affect event propagation inside scene2d, but causes the {@link Stage}
 	 * event methods to return false, which will eat the event so it is not passed on to the application under the stage. */
 	public void handle () {
 		handled = true;
 	}
 
-	/** Marks this event cancelled. This {@link #handle() handles} the event and {@link #stop() stops} the event
+	/** Marks this event has being cancelled. This {@link #handle() handles} the event and {@link #stop() stops} the event
 	 * propagation. It also cancels any default action that would have been taken by the code that fired the event. Eg, if the
 	 * event is for a checkbox being checked, cancelling the event could uncheck the checkbox. */
 	public void cancel () {
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/EventListener.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/EventListener.java
index ac08856..843a852 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/EventListener.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/EventListener.java
@@ -20,10 +20,5 @@ package com.badlogic.gdx.scenes.scene2d;
  * @see InputListener
  * @see InputEvent */
 public interface EventListener {
-	/**
-	 * Try to handle the given event, if it is applicable.
-	 *  
-	 * @return true if the event should be considered {@link Event#handle() handled} by scene2d. 
-	 */
 	public boolean handle (Event event);
 }
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/InputEvent.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/InputEvent.java
index 62b2cb5..474bc41 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/InputEvent.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/InputEvent.java
@@ -33,7 +33,7 @@ public class InputEvent extends Event {
 		button = -1;
 	}
 
-	/** The stage x coordinate where the event occurred. Valid for: touchDown, touchDragged, touchUp, mouseMoved, enter, and exit. */
+	/** The stage x coordinate where the event occured. Valid for: touchDown, touchDragged, touchUp, mouseMoved, enter, and exit. */
 	public float getStageX () {
 		return stageX;
 	}
@@ -42,7 +42,7 @@ public class InputEvent extends Event {
 		this.stageX = stageX;
 	}
 
-	/** The stage x coordinate where the event occurred. Valid for: touchDown, touchDragged, touchUp, mouseMoved, enter, and exit. */
+	/** The stage x coordinate where the event occured. Valid for: touchDown, touchDragged, touchUp, mouseMoved, enter, and exit. */
 	public float getStageY () {
 		return stageY;
 	}
@@ -122,27 +122,7 @@ public class InputEvent extends Event {
 		return type.toString();
 	}
 
-	/** Types of low-level input events supported by stage2d. */
 	static public enum Type {
-		/** A new touch for a pointer on the stage was detected */
-		touchDown, 
-		/** A pointer has stopped touching the stage. */
-		touchUp, 
-		/** A pointer that is touching the stage has moved. */
-		touchDragged, 
-		/** The mouse pointer has moved (without a mouse button being active). */
-		mouseMoved, 
-		/** The mouse pointer or an active touch have entered (i.e., {@link Actor#hit(float, float, boolean) hit}) an actor. */ 
-		enter, 
-		/** The mouse pointer or an active touch have exited an actor. */ 
-		exit, 
-		/** The mouse scroll wheel has changed. */
-		scrolled, 
-		/** A keyboard key has been pressed. */
-		keyDown, 
-		/** A keyboard key has been released. */
-		keyUp, 
-		/** A keyboard key has been pressed and released. */
-		keyTyped
+		touchDown, touchUp, touchDragged, mouseMoved, enter, exit, scrolled, keyDown, keyUp, keyTyped
 	}
 }
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/InputListener.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/InputListener.java
index 3ecbf5b..668768a 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/InputListener.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/InputListener.java
@@ -18,22 +18,7 @@ package com.badlogic.gdx.scenes.scene2d;
 
 import com.badlogic.gdx.math.Vector2;
 
-/** EventListener for low-level input events.  Unpacks {@link InputEvent}s and calls the appropriate method.  By default
- * the methods here do nothing with the event.  Users are expected to override the methods they are interested in, like this:
- * 
- * <pre>
- * {@code
- * actor.addListener(new InputListener() {
- *    public boolean touchDown(InputEvent event, float x, float y, int pointer, int button) {
- *       Gdx.app.log("Example", "touch started at (" +x+ ", " +y+ ")");
- *    }
- *    public void touchUp(InputEvent event, float x, float y, int pointer, int button) {
- *       Gdx.app.log("Example", "touch done at (" +x+ ", " +y+ ")");
- *    }
- * });
- * }
- * </pre>
- */
+/** Listener for actor input events. */
 public class InputListener implements EventListener {
 	public boolean handle (Event e) {
 		if (!(e instanceof InputEvent)) return false;
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java
index 30c7a7b..be0d727 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java
@@ -37,16 +37,15 @@ import com.badlogic.gdx.utils.Pool.Poolable;
 import com.badlogic.gdx.utils.Pools;
 import com.badlogic.gdx.utils.SnapshotArray;
 
-/** A 2D scene graph containing hierarchies of {@link Actor actors}. Stage handles the viewport and distributes input events.
+/** A 2D scenegraph containing hierarchies of {@link Actor actors}. Stage handles the viewport and distributing input events.
  * <p>
  * A stage fills the whole screen. {@link #setViewport} controls the coordinates used within the stage and sets up the camera used
- * to convert between stage coordinates and screen coordinates.
+ * to convert between stage coordinates and screen coordinates. *
  * <p>
  * A stage must receive input events so it can distribute them to actors. This is typically done by passing the stage to
  * {@link Input#setInputProcessor(com.badlogic.gdx.InputProcessor) Gdx.input.setInputProcessor}. An {@link InputMultiplexer} may be
  * used to handle input events before or after the stage does. If an actor handles an event by returning true from the input
  * method, then the stage's input method will also return true, causing subsequent InputProcessors to not receive the event.
-
  * @author mzechner
  * @author Nathan Sweet */
 public class Stage extends InputAdapter implements Disposable {
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Button.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Button.java
index 8ddfc2b..91f42a4 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Button.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Button.java
@@ -132,10 +132,6 @@ public class Button extends Table {
 		return clickListener.isOver();
 	}
 
-	public ClickListener getClickListener () {
-		return clickListener;
-	}
-
 	public boolean isDisabled () {
 		return isDisabled;
 	}
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Slider.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Slider.java
index bd7005c..379cbb1 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Slider.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Slider.java
@@ -28,7 +28,7 @@ import com.badlogic.gdx.scenes.scene2d.utils.ChangeListener.ChangeEvent;
 import com.badlogic.gdx.scenes.scene2d.utils.Drawable;
 import com.badlogic.gdx.utils.Pools;
 
-/** A slider is a horizontal indicator that allows a user to set a value. The slider has a range (min, max) and a stepping between
+/** A slider is a horizontal indicator that allows a user to set a value. The slider his a range (min, max) and a stepping between
  * each value the slider represents.
  * <p>
  * {@link ChangeEvent} is fired when the slider knob is moved. Cancelling the event will move the knob to where it was previously.
@@ -134,11 +134,9 @@ public class Slider extends Widget {
 			bg.draw(batch, x + (int)((width - bg.getMinWidth()) * 0.5f), y, bg.getMinWidth(), height);
 
 			float sliderPosHeight = height - (bg.getTopHeight() + bg.getBottomHeight());
-			if(min!=max){
-				sliderPos = (value - min) / (max - min) * (sliderPosHeight - knobHeight);
-				sliderPos = Math.max(0, sliderPos);
-				sliderPos = Math.min(sliderPosHeight - knobHeight, sliderPos) + bg.getBottomHeight();
-			}
+			sliderPos = (value - min) / (max - min) * (sliderPosHeight - knobHeight);
+			sliderPos = Math.max(0, sliderPos);
+			sliderPos = Math.min(sliderPosHeight - knobHeight, sliderPos) + bg.getBottomHeight();
 
 			float knobHeightHalf = knobHeight * 0.5f;
 			if (knobBefore != null) {
@@ -154,11 +152,9 @@ public class Slider extends Widget {
 			bg.draw(batch, x, y + (int)((height - bg.getMinHeight()) * 0.5f), width, bg.getMinHeight());
 
 			float sliderPosWidth = width - (bg.getLeftWidth() + bg.getRightWidth());
-			if(min!=max){
-				sliderPos = (value - min) / (max - min) * (sliderPosWidth - knobWidth);
-				sliderPos = Math.max(0, sliderPos);
-				sliderPos = Math.min(sliderPosWidth - knobWidth, sliderPos) + bg.getLeftWidth();
-			}
+			sliderPos = (value - min) / (max - min) * (sliderPosWidth - knobWidth);
+			sliderPos = Math.max(0, sliderPos);
+			sliderPos = Math.min(sliderPosWidth - knobWidth, sliderPos) + bg.getLeftWidth();
 
 			float knobHeightHalf = knobHeight * 0.5f;
 			if (knobBefore != null) {
@@ -213,7 +209,7 @@ public class Slider extends Widget {
 
 	/** If {@link #setAnimateDuration(float) animating} the slider value, this returns the value current displayed. */
 	public float getVisualValue () {
-		if (animateTime > 0) return animateInterpolation.apply(animateFromValue, value, 1 - animateTime / animateDuration);
+		if (animateTime > 0) return animateInterpolation.apply(animateFromValue, value, animateTime / animateDuration);
 		return value;
 	}
 
@@ -223,25 +219,23 @@ public class Slider extends Widget {
 		value = MathUtils.clamp(Math.round(value / stepSize) * stepSize, min, max);
 		float oldValue = this.value;
 		if (value == oldValue) return;
-		float oldVisualValue = getVisualValue();
 		this.value = value;
 		ChangeEvent changeEvent = Pools.obtain(ChangeEvent.class);
 		if (fire(changeEvent))
 			this.value = oldValue;
 		else if (animateDuration > 0) {
-			animateFromValue = oldVisualValue;
 			animateTime = animateDuration;
+			animateFromValue = getVisualValue();
 		}
 		Pools.free(changeEvent);
 	}
 
 	/** Sets the range of this slider. The slider's current value is reset to min. */
 	public void setRange (float min, float max) {
-		if (min > max) throw new IllegalArgumentException("min must be <= max");
+		if (min >= max) throw new IllegalArgumentException("min must be < max");
 		this.min = min;
 		this.max = max;
-		if (value<min) setValue(min);
-		else if (value>max) setValue(max);
+		setValue(min);
 	}
 
 	/** Sets the step size of the slider */
@@ -311,4 +305,4 @@ public class Slider extends Widget {
 			this.knob = style.knob;
 		}
 	}
-}
+}
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java
index 164b3db..7b69f18 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java
@@ -644,7 +644,7 @@ public class TextField extends Widget {
 	}
 
 	/** Sets the text that will be drawn in the text field if no text has been entered.
-	 * @param messageText may be null. */
+	 * @parma messageText May be null. */
 	public void setMessageText (String messageText) {
 		this.messageText = messageText;
 	}
diff --git a/gdx/src/com/badlogic/gdx/utils/Array.java b/gdx/src/com/badlogic/gdx/utils/Array.java
index cea779a..b87585a 100644
--- a/gdx/src/com/badlogic/gdx/utils/Array.java
+++ b/gdx/src/com/badlogic/gdx/utils/Array.java
@@ -151,11 +151,7 @@ public class Array<T> implements Iterable<T> {
 		items[second] = firstValue;
 	}
 
-	/**
-	 * Returns if this array contains value.
-	 * @param identity If true, == comparison will be used. If false, .equals() comparison will be used.
-	 * @return true if array contains value, false if it doesn't
-	 */
+	/** @param identity If true, == comparison will be used. If false, .equals() comaparison will be used. */
 	public boolean contains (T value, boolean identity) {
 		T[] items = this.items;
 		int i = size - 1;
@@ -169,11 +165,6 @@ public class Array<T> implements Iterable<T> {
 		return false;
 	}
 
-	/**
-	 * Returns an index of first occurrence of value in array or -1 if no such value exists
-	 * @param identity If true, == comparison will be used. If false, .equals() comparison will be used.
-	 * @return An index of first occurrence of value in array or -1 if no such value exists
-	 */
 	public int indexOf (T value, boolean identity) {
 		T[] items = this.items;
 		if (identity || value == null) {
@@ -186,12 +177,6 @@ public class Array<T> implements Iterable<T> {
 		return -1;
 	}
 
-	/**
-	 * Returns an index of last occurrence of value in array or -1 if no such value exists.
-	 * Search is started from the end of an array.
-	 * @param identity If true, == comparison will be used. If false, .equals() comparison will be used.
-	 * @return An index of last occurrence of value in array or -1 if no such value exists
-	 */
 	public int lastIndexOf (T value, boolean identity) {
 		T[] items = this.items;
 		if (identity || value == null) {
@@ -204,11 +189,6 @@ public class Array<T> implements Iterable<T> {
 		return -1;
 	}
 
-	/**
-	 * Removes value from an array if it exists.
-	 * @param identity If true, == comparison will be used. If false, .equals() comparison will be used.
-	 * @return true if value was found and removed, false otherwise
-	 */
 	public boolean removeValue (T value, boolean identity) {
 		T[] items = this.items;
 		if (identity || value == null) {
diff --git a/gdx/src/com/badlogic/gdx/utils/GdxBuild.java b/gdx/src/com/badlogic/gdx/utils/GdxBuild.java
index 3aab4b9..d7a81a6 100644
--- a/gdx/src/com/badlogic/gdx/utils/GdxBuild.java
+++ b/gdx/src/com/badlogic/gdx/utils/GdxBuild.java
@@ -45,9 +45,8 @@ public class GdxBuild {
 		BuildTarget lin64 = BuildTarget.newDefaultTarget(TargetOs.Linux, true);
 		BuildTarget android = BuildTarget.newDefaultTarget(TargetOs.Android, false);
 		BuildTarget mac = BuildTarget.newDefaultTarget(TargetOs.MacOsX, false);
-		BuildTarget ios = BuildTarget.newDefaultTarget(TargetOs.IOS, false);
 		new AntScriptGenerator().generate(new BuildConfig("gdx", "../target/native", LIBS_DIR, JNI_DIR), mac, win32home, win32,
-			win64, lin32, lin64, android, ios);
+			win64, lin32, lin64, android);
 
 		// build natives
 		// BuildExecutor.executeAnt("jni/build-windows32home.xml", "-v");
diff --git a/gdx/src/com/badlogic/gdx/utils/JsonWriter.java b/gdx/src/com/badlogic/gdx/utils/JsonWriter.java
index 21aac12..abc3cd3 100644
--- a/gdx/src/com/badlogic/gdx/utils/JsonWriter.java
+++ b/gdx/src/com/badlogic/gdx/utils/JsonWriter.java
@@ -149,7 +149,8 @@ public class JsonWriter extends Writer {
 		json,
 		/** Like JSON, but names are only quoted if necessary. */
 		javascript,
-		/** Like JSON, but names and values are only quoted if necessary. */
+		/** Like JSON, but names and values are only quoted if necessary. This is best for object serialization, because it has a
+		 * difference between a String field being null and "null". */
 		minimal;
 
 		static private Pattern javascriptPattern = Pattern.compile("[a-zA-Z_$][a-zA-Z_$0-9]*");
@@ -157,7 +158,8 @@ public class JsonWriter extends Writer {
 		static private Pattern minimalNamePattern = Pattern.compile("[a-zA-Z0-9_$][^:}\\], ]*");
 
 		public String quoteValue (Object value) {
-			if (value == null || value instanceof Number || value instanceof Boolean) return String.valueOf(value);
+			if (this != OutputType.json && (value == null || value instanceof Number || value instanceof Boolean))
+				return String.valueOf(value);
 			String string = String.valueOf(value).replace("\\", "\\\\");
 			if (this == OutputType.minimal && !string.equals("true") && !string.equals("false") && !string.equals("null")
 				&& minimalValuePattern.matcher(string).matches()) return string;
diff --git a/gdx/src/com/badlogic/gdx/utils/SharedLibraryLoader.java b/gdx/src/com/badlogic/gdx/utils/SharedLibraryLoader.java
index de03a69..adecee9 100644
--- a/gdx/src/com/badlogic/gdx/utils/SharedLibraryLoader.java
+++ b/gdx/src/com/badlogic/gdx/utils/SharedLibraryLoader.java
@@ -35,7 +35,6 @@ public class SharedLibraryLoader {
 	static public boolean isWindows = System.getProperty("os.name").contains("Windows");
 	static public boolean isLinux = System.getProperty("os.name").contains("Linux");
 	static public boolean isMac = System.getProperty("os.name").contains("Mac");
-	static public boolean isIos = false;
 	static public boolean isAndroid = false;
 	static public boolean is64Bit = System.getProperty("os.arch").equals("amd64");
 	static {
@@ -47,10 +46,6 @@ public class SharedLibraryLoader {
 			isMac = false;
 			is64Bit = false;
 		}
-		if(!isAndroid && !isWindows && !isLinux && !isMac) {
-			isIos = true;
-			is64Bit = false;
-		}
 	}
 
 	static private HashSet<String> loadedLibraries = new HashSet();
@@ -97,9 +92,6 @@ public class SharedLibraryLoader {
 	/** Loads a shared library for the platform the application is running on.
 	 * @param libraryName The platform independent library name. If not contain a prefix (eg lib) or suffix (eg .dll). */
 	public synchronized void load (String libraryName) {
-		// in case of iOS, things have been linked statically to the executable, bail out.
-		if(isIos) return;
-		
 		libraryName = mapLibraryName(libraryName);
 		if (loadedLibraries.contains(libraryName)) return;
 
diff --git a/gdx/src/com/badlogic/gdx/utils/StringBuilder.java b/gdx/src/com/badlogic/gdx/utils/StringBuilder.java
index 7980019..6e120df 100644
--- a/gdx/src/com/badlogic/gdx/utils/StringBuilder.java
+++ b/gdx/src/com/badlogic/gdx/utils/StringBuilder.java
@@ -706,7 +706,7 @@ public class StringBuilder implements Appendable, CharSequence {
 	}
 
 	/** Appends the string representation of the specified {@code int} value. The {@code int} value is converted to a string
-	 * without memory allocation.
+	 * according to the rule defined by {@link String#valueOf(int)}.
 	 * 
 	 * @param i the {@code int} value to append.
 	 * @return this builder.
@@ -736,10 +736,11 @@ public class StringBuilder implements Appendable, CharSequence {
 	}
 
 	/** Appends the string representation of the specified {@code long} value. The {@code long} value is converted to a string
-	 * without memory allocation.
+	 * according to the rule defined by {@link String#valueOf(long)}.
 	 * 
 	 * @param lng the {@code long} value.
-	 * @return this builder. */
+	 * @return this builder.
+	 * @see String#valueOf(long) */
 	public StringBuilder append (long lng) {
 		if (lng == Long.MIN_VALUE) {
 			append0("-9223372036854775808");
@@ -777,7 +778,8 @@ public class StringBuilder implements Appendable, CharSequence {
 	 * according to the rule defined by {@link String#valueOf(float)}.
 	 * 
 	 * @param f the {@code float} value to append.
-	 * @return this builder. */
+	 * @return this builder.
+	 * @see String#valueOf(float) */
 	public StringBuilder append (float f) {
 		append0(Float.toString(f));
 		return this;
diff --git a/tests/gdx-tests-android/assets/data/maps/isometric_grass_and_water.png b/tests/gdx-tests-android/assets/data/maps/isometric_grass_and_water.png
deleted file mode 100644
index b342a0c..0000000
Binary files a/tests/gdx-tests-android/assets/data/maps/isometric_grass_and_water.png and /dev/null differ
diff --git a/tests/gdx-tests-android/assets/data/maps/isometric_grass_and_water.tmx b/tests/gdx-tests-android/assets/data/maps/isometric_grass_and_water.tmx
deleted file mode 100644
index b7bb262..0000000
--- a/tests/gdx-tests-android/assets/data/maps/isometric_grass_and_water.tmx
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<map version="1.0" orientation="isometric" width="25" height="25" tilewidth="64" tileheight="32">
- <tileset firstgid="1" name="isometric_grass_and_water" tilewidth="64" tileheight="64">
-  <tileoffset x="0" y="16"/>
-  <image source="isometric_grass_and_water.png" width="256" height="384"/>
-  <terraintypes>
-   <terrain name="Grass" tile="0"/>
-   <terrain name="Water" tile="22"/>
-  </terraintypes>
-  <tile id="0" terrain="0,0,0,0"/>
-  <tile id="1" terrain="0,0,0,0"/>
-  <tile id="2" terrain="0,0,0,0"/>
-  <tile id="3" terrain="0,0,0,0"/>
-  <tile id="4" terrain="0,0,0,1"/>
-  <tile id="5" terrain="0,0,1,0"/>
-  <tile id="6" terrain="1,0,0,0"/>
-  <tile id="7" terrain="0,1,0,0"/>
-  <tile id="8" terrain="0,1,1,1"/>
-  <tile id="9" terrain="1,0,1,1"/>
-  <tile id="10" terrain="1,1,1,0"/>
-  <tile id="11" terrain="1,1,0,1"/>
-  <tile id="12" terrain="0,0,1,1"/>
-  <tile id="13" terrain="1,0,1,0"/>
-  <tile id="14" terrain="1,1,0,0"/>
-  <tile id="15" terrain="0,1,0,1"/>
-  <tile id="16" terrain="0,0,1,1"/>
-  <tile id="17" terrain="1,0,1,0"/>
-  <tile id="18" terrain="1,1,0,0"/>
-  <tile id="19" terrain="0,1,0,1"/>
-  <tile id="20" terrain="0,1,1,0"/>
-  <tile id="21" terrain="1,0,0,1"/>
-  <tile id="22" terrain="1,1,1,1"/>
-  <tile id="23" terrain="1,1,1,1"/>
- </tileset>
- <layer name="Tile Layer 1" width="25" height="25">
-  <data encoding="base64" compression="zlib">
-   eJx1lttywjAMROVgyqVtAoFC/v9L68xoh5PFPGhIYktrrVYyS0QszZ7Nvpvd0n7y24L1Q7MhrTSreN/le821HZ7lv9qYa6sdE0cYs/kX7PXYwtfaevYp7WDrd+SnHByjYr/npP1zZ4/elcuM71rjeckdc5KNHX75fMwc9s2uzb6AsYstJzwrv5/Tz89SLIZy8v203llV8xl7yMU+462/v81OqA114/UhrzUxRqwprnh6ZGzp2PNQfPqRu/X9hnMV8F/xLg1L42erDf2oaa2RI2qPtbgbhmw2H69nMUxx/gVccXdC3AW/o/HV60vW59Lhu8arDxmfGIPFUV1qbLVQEIs4PlOeHQxqVjmzr5mLYsmf+5Qj5yM1r3Ne4p1D5VcMh3qWZibLx2fYkBhPYOv81I9wbrGd45zFU7zrndpwDjkHXXfej9zHc3EG+D3AWcCZMJif7hTnVxr6i9edtoBDz8N7kxqbY6sN9gJnsnqIOqCme7Un76579sIV8dccHvHqZefH76BP9wjzkVapM2rL+5/8cR6QS9eh8p2AT12y5oO9+7yh5hzLZypnHX29/pzB9PE7bOg8Mza5KvGu4R7mp/89zqvr7x+TnxEn
-  </data>
- </layer>
-</map>
diff --git a/tests/gdx-tests-android/libs/armeabi-v7a/libandroidgl20.so b/tests/gdx-tests-android/libs/armeabi-v7a/libandroidgl20.so
new file mode 100644
index 0000000..7a7cd7f
Binary files /dev/null and b/tests/gdx-tests-android/libs/armeabi-v7a/libandroidgl20.so differ
diff --git a/tests/gdx-tests-android/libs/armeabi-v7a/libgdx-audio.so b/tests/gdx-tests-android/libs/armeabi-v7a/libgdx-audio.so
new file mode 100644
index 0000000..5cc1530
Binary files /dev/null and b/tests/gdx-tests-android/libs/armeabi-v7a/libgdx-audio.so differ
diff --git a/tests/gdx-tests-android/libs/armeabi-v7a/libgdx-bullet.so b/tests/gdx-tests-android/libs/armeabi-v7a/libgdx-bullet.so
new file mode 100644
index 0000000..9b29f0e
Binary files /dev/null and b/tests/gdx-tests-android/libs/armeabi-v7a/libgdx-bullet.so differ
diff --git a/tests/gdx-tests-android/libs/armeabi-v7a/libgdx-freetype.so b/tests/gdx-tests-android/libs/armeabi-v7a/libgdx-freetype.so
new file mode 100644
index 0000000..93b065f
Binary files /dev/null and b/tests/gdx-tests-android/libs/armeabi-v7a/libgdx-freetype.so differ
diff --git a/tests/gdx-tests-android/libs/armeabi-v7a/libgdx-image.so b/tests/gdx-tests-android/libs/armeabi-v7a/libgdx-image.so
new file mode 100644
index 0000000..3e551ee
Binary files /dev/null and b/tests/gdx-tests-android/libs/armeabi-v7a/libgdx-image.so differ
diff --git a/tests/gdx-tests-android/libs/armeabi-v7a/libgdx-stb-truetype.so b/tests/gdx-tests-android/libs/armeabi-v7a/libgdx-stb-truetype.so
new file mode 100644
index 0000000..89fc918
Binary files /dev/null and b/tests/gdx-tests-android/libs/armeabi-v7a/libgdx-stb-truetype.so differ
diff --git a/tests/gdx-tests-android/libs/armeabi-v7a/libgdx.so b/tests/gdx-tests-android/libs/armeabi-v7a/libgdx.so
new file mode 100644
index 0000000..8d31a3e
Binary files /dev/null and b/tests/gdx-tests-android/libs/armeabi-v7a/libgdx.so differ
diff --git a/tests/gdx-tests-android/libs/armeabi/libandroidgl20.so b/tests/gdx-tests-android/libs/armeabi/libandroidgl20.so
new file mode 100644
index 0000000..7a7cd7f
Binary files /dev/null and b/tests/gdx-tests-android/libs/armeabi/libandroidgl20.so differ
diff --git a/tests/gdx-tests-android/libs/armeabi/libgdx-audio.so b/tests/gdx-tests-android/libs/armeabi/libgdx-audio.so
new file mode 100644
index 0000000..5cf4b11
Binary files /dev/null and b/tests/gdx-tests-android/libs/armeabi/libgdx-audio.so differ
diff --git a/tests/gdx-tests-android/libs/armeabi/libgdx-bullet.so b/tests/gdx-tests-android/libs/armeabi/libgdx-bullet.so
new file mode 100644
index 0000000..b388e1b
Binary files /dev/null and b/tests/gdx-tests-android/libs/armeabi/libgdx-bullet.so differ
diff --git a/tests/gdx-tests-android/libs/armeabi/libgdx-freetype.so b/tests/gdx-tests-android/libs/armeabi/libgdx-freetype.so
new file mode 100644
index 0000000..04d1c93
Binary files /dev/null and b/tests/gdx-tests-android/libs/armeabi/libgdx-freetype.so differ
diff --git a/tests/gdx-tests-android/libs/armeabi/libgdx-image.so b/tests/gdx-tests-android/libs/armeabi/libgdx-image.so
new file mode 100644
index 0000000..27c680c
Binary files /dev/null and b/tests/gdx-tests-android/libs/armeabi/libgdx-image.so differ
diff --git a/tests/gdx-tests-android/libs/armeabi/libgdx-stb-truetype.so b/tests/gdx-tests-android/libs/armeabi/libgdx-stb-truetype.so
new file mode 100644
index 0000000..9ed3ca8
Binary files /dev/null and b/tests/gdx-tests-android/libs/armeabi/libgdx-stb-truetype.so differ
diff --git a/tests/gdx-tests-android/libs/armeabi/libgdx.so b/tests/gdx-tests-android/libs/armeabi/libgdx.so
new file mode 100644
index 0000000..36f294f
Binary files /dev/null and b/tests/gdx-tests-android/libs/armeabi/libgdx.so differ
diff --git a/tests/gdx-tests-iosmonotouch/gdx-tests-iosmonotouch/libgdx.a b/tests/gdx-tests-iosmonotouch/gdx-tests-iosmonotouch/libgdx.a
new file mode 100644
index 0000000..79e81af
Binary files /dev/null and b/tests/gdx-tests-iosmonotouch/gdx-tests-iosmonotouch/libgdx.a differ
diff --git a/tests/gdx-tests-iosmonotouch/gdx-tests-iosmonotouch/libikvm-natives.a b/tests/gdx-tests-iosmonotouch/gdx-tests-iosmonotouch/libikvm-natives.a
new file mode 100644
index 0000000..29296a2
Binary files /dev/null and b/tests/gdx-tests-iosmonotouch/gdx-tests-iosmonotouch/libikvm-natives.a differ
diff --git a/tests/gdx-tests-lwjgl/src/com/badlogic/gdx/tests/lwjgl/LocalLwjglTest.java b/tests/gdx-tests-lwjgl/src/com/badlogic/gdx/tests/lwjgl/LocalLwjglTest.java
index 5eb1130..e36477c 100644
--- a/tests/gdx-tests-lwjgl/src/com/badlogic/gdx/tests/lwjgl/LocalLwjglTest.java
+++ b/tests/gdx-tests-lwjgl/src/com/badlogic/gdx/tests/lwjgl/LocalLwjglTest.java
@@ -65,7 +65,7 @@ public class LocalLwjglTest extends ApplicationAdapter {
 
 		renderer.setColor(1, 0, 0, 1);
 		renderer.translate(0, -4, 0);
-		renderer.begin(ShapeType.Filled);
+		renderer.begin(ShapeType.Triangle);
 		for (int i = 0; i < triangles.size(); i += 3) {
 			Vector2 v1 = triangles.get(i);
 			Vector2 v2 = triangles.get(i + 1);
diff --git a/tests/gdx-tests-lwjgl/src/com/badlogic/gdx/tests/lwjgl/LwjglDebugStarter.java b/tests/gdx-tests-lwjgl/src/com/badlogic/gdx/tests/lwjgl/LwjglDebugStarter.java
index 3d0debe..ea9f88c 100644
--- a/tests/gdx-tests-lwjgl/src/com/badlogic/gdx/tests/lwjgl/LwjglDebugStarter.java
+++ b/tests/gdx-tests-lwjgl/src/com/badlogic/gdx/tests/lwjgl/LwjglDebugStarter.java
@@ -32,14 +32,12 @@ public class LwjglDebugStarter {
 		new SharedLibraryLoader("../../extensions/gdx-audio/libs/gdx-audio-natives.jar").load("gdx-audio");
 		new SharedLibraryLoader("../../extensions/gdx-image/libs/gdx-image-natives.jar").load("gdx-image");
 		new SharedLibraryLoader("../../extensions/gdx-freetype/libs/gdx-freetype-natives.jar").load("gdx-freetype");
-		new SharedLibraryLoader("../../extensions/gdx-controllers/gdx-controllers-desktop/libs/gdx-controllers-desktop-natives.jar").load("gdx-controllers-desktop");
+//		new SharedLibraryLoader("../../extensions/gdx-controllers/gdx-controllers-desktop/libs/gdx-controllers-desktop-natives.jar").load("gdx-controllers-desktop");
 		new SharedLibraryLoader("../../gdx/libs/gdx-natives.jar").load("gdx");
 
-		GdxTest test = new GamepadTest();
+		GdxTest test = new InverseKinematicsTest();
 		LwjglApplicationConfiguration config = new LwjglApplicationConfiguration();
 		config.useGL20 = test.needsGL20();
 		new LwjglApplication(test, config);
 	}
-	
-	
 }
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontMetricsTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontMetricsTest.java
index e4fe4a1..73cc4a5 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontMetricsTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontMetricsTest.java
@@ -83,9 +83,9 @@ public class BitmapFontMetricsTest extends GdxTest {
 
 		spriteBatch.end();
 
-		renderer.begin(ShapeType.Filled);
+		renderer.begin(ShapeType.FilledRectangle);
 		renderer.setColor(Color.BLACK);
-		renderer.rect(x - 3, y - 3, 6, 6);
+		renderer.filledRect(x - 3, y - 3, 6, 6);
 		renderer.end();
 
 		float baseline = y - font.getCapHeight();
@@ -104,7 +104,7 @@ public class BitmapFontMetricsTest extends GdxTest {
 		renderer.line(0, y - font.getLineHeight(), 9999, y - font.getLineHeight());
 		renderer.end();
 
-		renderer.begin(ShapeType.Line);
+		renderer.begin(ShapeType.Rectangle);
 		renderer.setColor(Color.BLUE);
 		renderer.rect(x, y, bounds.width, -bounds.height);
 		renderer.end();
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontTest.java
index 57e9b7c..7869b90 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontTest.java
@@ -76,7 +76,7 @@ public class BitmapFontTest extends GdxTest {
 
 		spriteBatch.end();
 
-		renderer.begin(ShapeType.Line);
+		renderer.begin(ShapeType.Rectangle);
 		renderer.rect(x, viewHeight - y, x + alignmentWidth, 300);
 		renderer.end();
 	}
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/Box2DTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/Box2DTest.java
index 58becee..7149b7a 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/Box2DTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/Box2DTest.java
@@ -310,7 +310,7 @@ public class Box2DTest extends GdxTest implements InputProcessor {
 		transform.rotate(0, 0, 1, (float)Math.toDegrees(angle));
 
 		// render the box
-		renderer.begin(ShapeType.Line);
+		renderer.begin(ShapeType.Rectangle);
 		renderer.setTransformMatrix(transform);
 		renderer.setColor(1, 1, 1, 1);
 		renderer.rect(-halfWidth, -halfHeight, halfWidth * 2, halfHeight * 2);
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/BulletTestCollection.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/BulletTestCollection.java
index 3cd5701..ae256e1 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/BulletTestCollection.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/BulletTestCollection.java
@@ -32,7 +32,6 @@ import com.badlogic.gdx.scenes.scene2d.ui.Label;
 import com.badlogic.gdx.scenes.scene2d.utils.Align;
 import com.badlogic.gdx.tests.box2d.Box2DTest;
 import com.badlogic.gdx.tests.bullet.BulletTest;
-import com.badlogic.gdx.tests.bullet.CollisionWorldTest;
 import com.badlogic.gdx.tests.bullet.ConstraintsTest;
 import com.badlogic.gdx.tests.bullet.ConvexHullTest;
 import com.badlogic.gdx.tests.bullet.InternalTickTest;
@@ -49,7 +48,7 @@ import com.badlogic.gdx.tests.utils.GdxTest;
 public class BulletTestCollection extends GdxTest implements InputProcessor, GestureListener {
 	protected final BulletTest[] tests = {new ShootTest(), new KinematicTest(), new ConstraintsTest(), 
 		new MeshShapeTest(), new ConvexHullTest(), new RayCastTest(), new RayPickRagdollTest(), new InternalTickTest(), 
-		new CollisionWorldTest(), new SoftBodyTest(), new SoftMeshTest()};
+		new SoftBodyTest(), new SoftMeshTest()};
 	
 	protected int testIndex = 0;
 	
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/InterpolationTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/InterpolationTest.java
index fe1dd2e..19f299e 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/InterpolationTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/InterpolationTest.java
@@ -89,7 +89,7 @@ public class InterpolationTest extends GdxTest {
 
 		renderer.setProjectionMatrix(stage.getCamera().combined);
 
-		renderer.begin(ShapeType.Line);
+		renderer.begin(ShapeType.Box);
 		renderer.box(x, y, 0, size, size, 0);
 		renderer.end();
 
@@ -108,8 +108,8 @@ public class InterpolationTest extends GdxTest {
 
 		timer += Gdx.graphics.getDeltaTime();
 		Vector2 current = getCurrentPosition();
-		renderer.begin(ShapeType.Filled);
-		renderer.rect(current.x, current.y, 20, 20);
+		renderer.begin(ShapeType.FilledRectangle);
+		renderer.filledRect(current.x, current.y, 20, 20);
 		renderer.end();
 
 		stage.act(Gdx.graphics.getDeltaTime());
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/MultitouchTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/MultitouchTest.java
index 99e45d0..93f88bd 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/MultitouchTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/MultitouchTest.java
@@ -39,7 +39,7 @@ public class MultitouchTest extends GdxTest {
 		Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
 		camera.update();
 		renderer.setProjectionMatrix(camera.combined);
-		renderer.begin(ShapeType.Filled);
+		renderer.begin(ShapeType.FilledTriangle);
 		int size = Math.max(Gdx.graphics.getWidth(), Gdx.graphics.getHeight()) / 10;
 		for (int i = 0; i < 10; i++) {
 			if (Gdx.input.isTouched(i) == false) continue;
@@ -48,7 +48,7 @@ public class MultitouchTest extends GdxTest {
 			float y = Gdx.graphics.getHeight() - Gdx.input.getY(i) - 1;
 			Color color = colors[i % colors.length];
 			renderer.setColor(color);
-			renderer.triangle(x, y + size, x + size, y - size, x - size, y - size);
+			renderer.filledTriangle(x, y + size, x + size, y - size, x - size, y - size);
 		}
 		renderer.end();
 	}
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/PolygonRegionTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/PolygonRegionTest.java
index 90828ab..b776de3 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/PolygonRegionTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/PolygonRegionTest.java
@@ -176,9 +176,9 @@ public class PolygonRegionTest extends GdxTest {
 			renderer.end();
 
 			renderer.setColor(Color.BLUE);
-			renderer.begin(ShapeType.Filled);
+			renderer.begin(ShapeType.FilledCircle);
 
-			renderer.circle(worldOriginX, worldOriginY, 4);
+			renderer.filledCircle(worldOriginX, worldOriginY, 4);
 
 			renderer.end();
 
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/PolygonSpriteTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/PolygonSpriteTest.java
index 61d94a6..cdd9eef 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/PolygonSpriteTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/PolygonSpriteTest.java
@@ -97,7 +97,7 @@ public class PolygonSpriteTest extends GdxTest {
 		// Some debug rendering, bounding box & origin of one sprite
 		renderer.setProjectionMatrix(camera.combined);
 		renderer.setColor(Color.GREEN);
-		renderer.begin(ShapeType.Line);
+		renderer.begin(ShapeType.Rectangle);
 
 		PolygonSprite sprite = sprites.get(49);
 
@@ -106,9 +106,9 @@ public class PolygonSpriteTest extends GdxTest {
 
 		renderer.end();
 
-		renderer.begin(ShapeType.Filled);
+		renderer.begin(ShapeType.FilledCircle);
 
-		renderer.circle(sprite.getX() + sprite.getOriginX(), sprite.getY() + sprite.getOriginY(), 4);
+		renderer.filledCircle(sprite.getX() + sprite.getOriginX(), sprite.getY() + sprite.getOriginY(), 4);
 
 		renderer.end();
 	}
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/RunnablePostTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/RunnablePostTest.java
deleted file mode 100644
index 55d9117..0000000
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/RunnablePostTest.java
+++ /dev/null
@@ -1,61 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-			
-package com.badlogic.gdx.tests;
-
-import com.badlogic.gdx.Gdx;
-import com.badlogic.gdx.tests.utils.GdxTest;
-
-/** Test that unchecked exceptions thrown from a runnable get posted and terminate the app. */
-public class RunnablePostTest extends GdxTest {
-	
-	private static final String TAG = "RunnablePostTest";
-	static boolean expectIt = false;
-	
-	static private Thread.UncaughtExceptionHandler exHandler = new Thread.UncaughtExceptionHandler() {
-		@Override
-		public void uncaughtException(Thread t, Throwable e) {
-			if (expectIt) {
-				Gdx.app.log(TAG, "PASSED: " + e.getMessage());
-			} else {
-				Gdx.app.log(TAG, "FAILED!  Unexpected exception received.");				
-				e.printStackTrace(System.err);
-			}
-		}
-	};
-	
-	@Override
-	public boolean needsGL20 () {
-		return false;
-	}
-	
-	public void create () {
-		Thread.setDefaultUncaughtExceptionHandler(exHandler);		
-	}
-
-	@Override
-	public void render () {
-		if (Gdx.input.justTouched()) {
-			expectIt = true;
-			Gdx.app.postRunnable(new Runnable() {
-				@Override
-				public void run () {
-					throw new RuntimeException("This is a test of the uncaught exception handler.");
-				}
-			});
-		}
-	}
-}
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/ShapeRendererAlphaTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/ShapeRendererAlphaTest.java
index a7f8106..7b8c260 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/ShapeRendererAlphaTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/ShapeRendererAlphaTest.java
@@ -38,24 +38,24 @@ public class ShapeRendererAlphaTest extends GdxTest {
 		Gdx.gl.glEnable(GL10.GL_BLEND);
 		Gdx.gl.glBlendFunc(GL10.GL_SRC_ALPHA, GL10.GL_ONE_MINUS_SRC_ALPHA);
 
-		renderer.begin(ShapeType.Line);
+		renderer.begin(ShapeType.Rectangle);
 		renderer.setColor(1, 0, 0, 0.5f);
 		renderer.rect(0, 0, 100, 200);
 		renderer.end();
 
-		renderer.begin(ShapeType.Filled);
+		renderer.begin(ShapeType.FilledRectangle);
 		renderer.setColor(0, 1, 0, 0.5f);
-		renderer.rect(200, 0, 100, 100);
+		renderer.filledRect(200, 0, 100, 100);
 		renderer.end();
 
-		renderer.begin(ShapeType.Line);
+		renderer.begin(ShapeType.Circle);
 		renderer.setColor(0, 1, 0, 0.5f);
 		renderer.circle(400, 50, 50);
 		renderer.end();
 
-		renderer.begin(ShapeType.Filled);
+		renderer.begin(ShapeType.FilledCircle);
 		renderer.setColor(1, 0, 1, 0.5f);
-		renderer.circle(500, 50, 50);
+		renderer.filledCircle(500, 50, 50);
 		renderer.end();
 	}
 
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/ShapeRendererTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/ShapeRendererTest.java
index 8ec3188..af2a020 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/ShapeRendererTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/ShapeRendererTest.java
@@ -17,7 +17,6 @@
 package com.badlogic.gdx.tests;
 
 import com.badlogic.gdx.Gdx;
-import com.badlogic.gdx.Input.Keys;
 import com.badlogic.gdx.graphics.Color;
 import com.badlogic.gdx.graphics.GL10;
 import com.badlogic.gdx.graphics.PerspectiveCamera;
@@ -54,7 +53,7 @@ public class ShapeRendererTest extends GdxTest {
 
 	public void render () {
 		Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT | GL10.GL_DEPTH_BUFFER_BIT);
-
+		Gdx.gl.glEnable(GL10.GL_DEPTH_TEST);
 		cam.update();
 		renderer.setProjectionMatrix(cam.combined);
 		renderer.identity();
@@ -62,59 +61,136 @@ public class ShapeRendererTest extends GdxTest {
 		renderer.translate(-0.5f, -0.5f, 0);
 
 		MathUtils.random.setSeed(0);
-		
+
+		renderer.begin(ShapeType.Line);
+		renderer.setColor(Color.GREEN);
+		for (int i = 0; i < 1000; i++) {
+			renderer.line(MathUtils.random(), MathUtils.random(), MathUtils.random(), MathUtils.random());
+		}
+		renderer.end();
+
 		renderer.begin(ShapeType.Point);
-		
-		renderer.setColor(Color.PINK);
-		for(int i=0; i<100; i++)
-			renderer.point(MathUtils.random(0.0f, 1.0f), MathUtils.random(0.0f, 1.0f), 0);
-		
+		renderer.setColor(Color.BLUE);
+		for (int i = 0; i < 1000; i++) {
+			renderer.point(MathUtils.random(), MathUtils.random(), MathUtils.random());
+		}
 		renderer.end();
 
-		if(Gdx.input.isKeyPressed(Keys.F)){
-			renderer.begin(ShapeType.Filled);
-			
-			renderer.setColor(Color.RED);
-			renderer.rect(0, 0, 1, 1);
-			
-			renderer.setColor(Color.BLUE);
-			renderer.circle(0.2f, 0.2f, 0.5f, 40);
-			
-			renderer.setColor(Color.GREEN);
-			renderer.cone(0.6f, 0.6f, 0, 0.3f, 0.75f, 20);
-			
-			renderer.setColor(Color.MAGENTA);
-			renderer.triangle(-0.1f, 0.1f, -0.6f, -0.1f, -0.3f, 0.5f);
-			
-			renderer.end();
+		renderer.begin(ShapeType.Rectangle);
+		renderer.setColor(Color.RED);
+		for (int i = 0; i < 20; i++) {
+			float x = MathUtils.random();
+			float y = MathUtils.random();
+			float width = MathUtils.random();
+			float height = MathUtils.random();
+			renderer.identity();
+			renderer.translate(-0.5f + x, -0.5f + y, MathUtils.random());
+			renderer.translate(width / 2, height / 2, 0);
+			renderer.rotate(0, 1, 0, MathUtils.random() * 360);
+			renderer.translate(-width / 2, -height / 2, 0);
+			renderer.rect(0, 0, width, height);
 		}
-		else {
-			renderer.begin(ShapeType.Line);
-			
-			renderer.setColor(Color.RED);
-			renderer.rect(0, 0, 1, 1);
-			
-			renderer.setColor(Color.BLUE);
-			renderer.circle(0.2f, 0.2f, 0.5f, 40);
-			
-			renderer.setColor(Color.YELLOW);
-			renderer.line(0, 0, 1, 1);
-			
-			renderer.setColor(Color.WHITE);
-			renderer.box(0.1f, 0.1f, 0.1f, 0.3f, 0.25f, 0.1f);
-			
-			renderer.setColor(Color.GREEN);
-			renderer.cone(0.6f, 0.6f, 0, 0.3f, 0.75f, 20);
-			
-			renderer.setColor(Color.MAGENTA);
-			renderer.triangle(-0.1f, 0.1f, -0.6f, -0.1f, -0.3f, 0.5f);
-
-			renderer.setColor(Color.CYAN);
-			renderer.curve(0.0f, 0.25f, 0.2f, 0.3f, 0.3f, 0.6f, 0.1f, 0.5f, 30);
-			
-			renderer.end();
+		renderer.end();
+
+		renderer.begin(ShapeType.FilledRectangle);
+		renderer.setColor(Color.WHITE);
+		for (int i = 0; i < 20; i++) {
+			float x = MathUtils.random();
+			float y = MathUtils.random();
+			float width = MathUtils.random();
+			float height = MathUtils.random();
+			renderer.identity();
+			renderer.translate(-0.5f + x, -0.5f + y, -MathUtils.random());
+			renderer.translate(width / 2, height / 2, 0);
+			renderer.rotate(0, 1, 0, MathUtils.random() * 360);
+			renderer.translate(-width / 2, -height / 2, 0);
+			renderer.filledRect(0, 0, width, height);
+		}
+		renderer.end();
+
+		renderer.begin(ShapeType.Box);
+		renderer.setColor(1, 1, 0, 1);
+		for (int i = 0; i < 20; i++) {
+			float x = MathUtils.random();
+			float y = MathUtils.random();
+			float width = MathUtils.random();
+			float height = MathUtils.random();
+			float depth = MathUtils.random();
+			renderer.identity();
+			renderer.translate(-1.5f + x, -0.5f + y, MathUtils.random());
+			renderer.translate(width / 2, height / 2, depth / 2);
+			renderer.rotate(0, 1, 0, MathUtils.random() * 360);
+			renderer.translate(-width / 2, -height / 2, depth / 2);
+			renderer.box(0, 0, 0, width, height, depth);
+		}
+		renderer.end();
+
+		renderer.begin(ShapeType.Circle);
+		renderer.setColor(1, 0, 1, 1);
+		renderer.identity();
+		for (int i = 0; i < 20; i++) {
+			float x = MathUtils.random();
+			float y = MathUtils.random();
+			float radius = MathUtils.random();
+			renderer.circle(x, y, radius, 40);
 		}
-		
+		renderer.end();
+
+		renderer.begin(ShapeType.FilledCircle);
+		renderer.setColor(0, 1, 1, 1);
+		renderer.identity();
+		renderer.rotate(0, 1, 0, 45);
+		for (int i = 0; i < 5; i++) {
+			float x = MathUtils.random();
+			float y = MathUtils.random();
+			float width = MathUtils.random();
+			float height = MathUtils.random();
+			renderer.identity();
+			renderer.translate(0.5f + x, -0.5f + y, -MathUtils.random());
+			renderer.translate(width / 2, height / 2, 0);
+			renderer.rotate(0, 1, 0, MathUtils.random() * 360);
+			renderer.translate(-width / 2, -height / 2, 0);
+			renderer.filledCircle(0, 0, width, 40);
+		}
+		renderer.end();
+
+		renderer.begin(ShapeType.Triangle);
+		renderer.setColor(0, 0, 1, 1);
+		renderer.identity();
+		renderer.rotate(0, 1, 0, 45);
+		for (int i = 0; i < 15; i++) {
+			float x = MathUtils.random();
+			float y = MathUtils.random();
+			float width = MathUtils.random();
+			float height = MathUtils.random();
+			renderer.identity();
+			renderer.translate(-0.5f + x, -0.5f + y, -MathUtils.random());
+			renderer.translate(width / 2, height / 2, 0);
+			renderer.rotate(0, 1, 0, MathUtils.random() * 360);
+			renderer.translate(-width / 2, -height / 2, 0);
+			renderer.triangle(0, 0, width, 0, 0, height);
+		}
+		renderer.end();
+
+		renderer.begin(ShapeType.FilledTriangle);
+		renderer.setColor(0, 0, 1, 1);
+		renderer.identity();
+		renderer.rotate(0, 1, 0, 45);
+		for (int i = 0; i < 15; i++) {
+			float x = MathUtils.random();
+			float y = MathUtils.random();
+			float width = MathUtils.random();
+			float height = MathUtils.random();
+			renderer.identity();
+			renderer.translate(0.5f + x, -0.5f + y, -MathUtils.random());
+			renderer.translate(width / 2, height / 2, 0);
+			renderer.rotate(0, 1, 0, MathUtils.random() * 360);
+			renderer.translate(-width / 2, -height / 2, 0);
+			renderer.filledTriangle(0, 0, width, 0, 0, height);
+		}
+		renderer.end();
+
+		Gdx.gl.glDisable(GL10.GL_DEPTH_TEST);
 		batch.begin();
 		font.draw(batch, "fps: " + Gdx.graphics.getFramesPerSecond(), 0, 20);
 		batch.end();
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/TextureAtlasTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/TextureAtlasTest.java
index 49d1b5a..a3e8611 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/TextureAtlasTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/TextureAtlasTest.java
@@ -90,7 +90,7 @@ public class TextureAtlasTest extends GdxTest {
 		// star.draw(batch);
 		// font.draw(batch, "This font was packed!", 26, 65);
 		badlogicSmall.draw(batch);
-		renderer.begin(ShapeType.Line);
+		renderer.begin(ShapeType.Rectangle);
 		renderer.rect(10, 10, 256, 256);
 		renderer.end();
 		// batch.draw(jumpAnimation.getKeyFrame(time, true), 100, 100);
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/TiledMapTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/TiledMapTest.java
index 2379d30..595a6f1 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/TiledMapTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/TiledMapTest.java
@@ -9,20 +9,16 @@ import com.badlogic.gdx.graphics.OrthographicCamera;
 import com.badlogic.gdx.graphics.Texture;
 import com.badlogic.gdx.graphics.g2d.BitmapFont;
 import com.badlogic.gdx.graphics.g2d.SpriteBatch;
-import com.badlogic.gdx.maps.MapLayer;
 import com.badlogic.gdx.maps.loaders.TmxMapLoader;
 import com.badlogic.gdx.maps.tiled.TiledMap;
 import com.badlogic.gdx.maps.tiled.TiledMapRenderer;
-import com.badlogic.gdx.maps.tiled.TiledMapRenderer2;
-import com.badlogic.gdx.maps.tiled.TiledMapRenderer2.IsometricTiledMapRenderer;
-import com.badlogic.gdx.maps.tiled.TiledMapTileLayer;
 import com.badlogic.gdx.math.Vector3;
 import com.badlogic.gdx.tests.utils.GdxTest;
 
 public class TiledMapTest extends GdxTest {
 	
 	private TiledMap map;
-	private TiledMapRenderer2 renderer;
+	private TiledMapRenderer renderer;
 	private OrthographicCamera camera;
 	private OrthoCamController cameraController;
 	
@@ -52,11 +48,11 @@ public class TiledMapTest extends GdxTest {
 		
 		assetManager = new AssetManager();
 		assetManager.setLoader(TiledMap.class, new TmxMapLoader(new InternalFileHandleResolver()));
-		assetManager.load("data/maps/isometric_grass_and_water.tmx", TiledMap.class);
+		assetManager.load("data/maps/tiles.tmx", TiledMap.class);
 		assetManager.finishLoading();
-		map = assetManager.get("data/maps/isometric_grass_and_water.tmx");
-		//renderer = new OrthogonalTiledMapRenderer(map, 1f / 32f);
-		renderer = new IsometricTiledMapRenderer(map, 1f / 64f);
+		map = assetManager.get("data/maps/tiles.tmx");
+		renderer = new TiledMapRenderer(map, 1f / 32f);
+
 	}
 
 	@Override
@@ -68,20 +64,15 @@ public class TiledMapTest extends GdxTest {
 			renderer.setProjectionMatrix(camera.combined);
 			cameraController.dirty = false;
 		}
-		renderer.setViewBounds(camera.position.x - camera.viewportWidth * 0.5f, camera.position.y - camera.viewportHeight * 0.5f, camera.viewportWidth, camera.viewportHeight);
 		renderer.begin();
-		renderer.render();
+		renderer.render(camera);
 		renderer.end();
+		System.out.println("renders: " + renderer.getSpriteBatch().renderCalls);
 		batch.begin();
 		font.draw(batch, "FPS: " + Gdx.graphics.getFramesPerSecond(), 10, 20); 
 		batch.end();
 	}
 	
-	@Override
-	public boolean needsGL20 () {
-		return true;
-	}
-
 	public class OrthoCamController extends InputAdapter {
 		final OrthographicCamera camera;
 		final Vector3 curr = new Vector3();
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/UITest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/UITest.java
index 9fcd3f4..ad163af 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/UITest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/UITest.java
@@ -27,12 +27,12 @@ import com.badlogic.gdx.scenes.scene2d.Stage;
 import com.badlogic.gdx.scenes.scene2d.ui.Button;
 import com.badlogic.gdx.scenes.scene2d.ui.Button.ButtonStyle;
 import com.badlogic.gdx.scenes.scene2d.ui.CheckBox;
-import com.badlogic.gdx.scenes.scene2d.ui.Dialog;
 import com.badlogic.gdx.scenes.scene2d.ui.Image;
 import com.badlogic.gdx.scenes.scene2d.ui.ImageButton;
 import com.badlogic.gdx.scenes.scene2d.ui.ImageButton.ImageButtonStyle;
 import com.badlogic.gdx.scenes.scene2d.ui.Label;
 import com.badlogic.gdx.scenes.scene2d.ui.List;
+import com.badlogic.gdx.scenes.scene2d.ui.Dialog;
 import com.badlogic.gdx.scenes.scene2d.ui.ScrollPane;
 import com.badlogic.gdx.scenes.scene2d.ui.SelectBox;
 import com.badlogic.gdx.scenes.scene2d.ui.Skin;
@@ -59,6 +59,7 @@ public class UITest extends GdxTest {
 	SpriteBatch batch;
 	Texture texture1;
 	Texture texture2;
+	Actor root;
 	Label fpsLabel;
 
 	@Override
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/Vector2dTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/Vector2dTest.java
deleted file mode 100644
index 7ec06fc..0000000
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/Vector2dTest.java
+++ /dev/null
@@ -1,97 +0,0 @@
-package com.badlogic.gdx.tests;
-
-import com.badlogic.gdx.Gdx;
-import com.badlogic.gdx.graphics.Color;
-import com.badlogic.gdx.graphics.GL10;
-import com.badlogic.gdx.graphics.OrthographicCamera;
-import com.badlogic.gdx.graphics.glutils.ShapeRenderer;
-import com.badlogic.gdx.graphics.glutils.ShapeRenderer.ShapeType;
-import com.badlogic.gdx.math.MathUtils;
-import com.badlogic.gdx.math.Vector2;
-import com.badlogic.gdx.scenes.scene2d.Stage;
-import com.badlogic.gdx.scenes.scene2d.ui.Table;
-import com.badlogic.gdx.tests.utils.GdxTest;
-
-public class Vector2dTest extends GdxTest {
-	private ShapeRenderer renderer;
-	private OrthographicCamera camera;
-
-	private Vector2 rotating = new Vector2(Vector2.X);
-	private Vector2 scalingX = new Vector2(Vector2.Y);
-	private Vector2 scalingY = new Vector2(Vector2.X);
-	private Vector2 lerping1 = new Vector2(Vector2.X);
-	private Vector2 lerpTarget = new Vector2(Vector2.Y);
-	private Vector2 sum = new Vector2().add(Vector2.X).add(Vector2.Y).nor();
-	private Vector2 mash = new Vector2(Vector2.Y);
-
-	
-	private final long start = System.currentTimeMillis();
-	
-	@Override
-	public void create () {
-		renderer = new ShapeRenderer();
-	}
-	
-	private void renderVectorAt(float x, float y, Vector2 v) {
-		renderer.line(x, y, x + v.x, y + v.y);
-	}
-
-	@Override
-	public void render () {
-		Gdx.gl.glClearColor(0, 0, 0, 0);
-		Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
-		
-		renderer.setProjectionMatrix(camera.combined);
-		
-		// Render the 'lerp' vector target as a circle
-		renderer.begin(ShapeType.Filled);
-		renderer.setColor(1.0f, 0, 0, 0.3f);
-		renderer.circle(-2 + lerpTarget.x, 2 + lerpTarget.y , 0.08f, 16);
-		renderer.end();
-
-		renderer.begin(ShapeType.Line);
-		
-		// Render the three fixed X, Y and sum vectors:
-		renderer.setColor(Color.RED);
-		renderVectorAt(0, 0, Vector2.X);
-		renderer.setColor(Color.GREEN);
-		renderVectorAt(0, 0, Vector2.Y);
-		renderer.setColor(Color.YELLOW);
-		renderVectorAt(0, 0, sum);
-		
-		final float changeRate = Gdx.graphics.getDeltaTime();
-		renderer.setColor(Color.WHITE);
-		
-		renderVectorAt(2, 2, rotating);
-		rotating.rotate(93 * changeRate);
-		
-		renderVectorAt(2, -2, scalingX);
-		scalingX.set(0, MathUtils.sin((System.currentTimeMillis() - start)/520.0f));
-		renderVectorAt(2, -2, scalingY);
-		scalingY.set(MathUtils.cos((System.currentTimeMillis() - start)/260.0f), 0);
-		
-		renderVectorAt(-2, 2, lerping1);
-		lerping1.lerp(lerpTarget, 0.025f);
-		if (lerping1.epsilonEquals(lerpTarget, 0.05f)) {
-			lerpTarget.set(-1.0f + MathUtils.random(2.0f), -1.0f + MathUtils.random(2.0f)).nor();
-		}
-
-		renderVectorAt(-2, -2, mash);
-		mash.set(0, 0).add(rotating).add(scalingX).add(scalingY).add(lerping1);
-	
-		renderer.end();
-	}
-
-	@Override
-	public void resize (int width, int height) {
-		float ratio = ((float)Gdx.graphics.getWidth() / (float)Gdx.graphics.getHeight());
-		int h = 10;
-		int w = (int)(h * ratio);
-		camera = new OrthographicCamera(w, h);
-	}
-	
-	@Override
-	public boolean needsGL20 () {
-		return false;
-	}
-}
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/bench/TiledMapBench.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/bench/TiledMapBench.java
deleted file mode 100644
index d7127b4..0000000
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/bench/TiledMapBench.java
+++ /dev/null
@@ -1,132 +0,0 @@
-package com.badlogic.gdx.tests.bench;
-
-import com.badlogic.gdx.Gdx;
-import com.badlogic.gdx.InputAdapter;
-import com.badlogic.gdx.assets.AssetManager;
-import com.badlogic.gdx.graphics.GL10;
-import com.badlogic.gdx.graphics.OrthographicCamera;
-import com.badlogic.gdx.graphics.Texture;
-import com.badlogic.gdx.graphics.g2d.BitmapFont;
-import com.badlogic.gdx.graphics.g2d.SpriteBatch;
-import com.badlogic.gdx.graphics.g2d.TextureRegion;
-import com.badlogic.gdx.maps.MapLayers;
-import com.badlogic.gdx.maps.tiled.TiledMap;
-import com.badlogic.gdx.maps.tiled.TiledMapRenderer2;
-import com.badlogic.gdx.maps.tiled.TiledMapRenderer2.OrthogonalTiledMapRenderer;
-import com.badlogic.gdx.maps.tiled.TiledMapRenderer2.OrthogonalTiledMapRenderer2;
-import com.badlogic.gdx.maps.tiled.TiledMapTileLayer;
-import com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile;
-import com.badlogic.gdx.math.Vector3;
-import com.badlogic.gdx.tests.utils.GdxTest;
-
-public class TiledMapBench extends GdxTest {
-	
-	private TiledMap map;
-	private TiledMapRenderer2 renderer;
-	private OrthographicCamera camera;
-	private OrthoCamController cameraController;
-	
-	AssetManager assetManager;
-	
-	Texture tiles;
-	
-	Texture texture;
-	
-	BitmapFont font;
-	SpriteBatch batch;
-	
-	@Override
-	public void create() {		
-		float w = Gdx.graphics.getWidth();
-		float h = Gdx.graphics.getHeight();
-		
-		camera = new OrthographicCamera();
-		camera.setToOrtho(false, (w / h) * 320, 320);
-		camera.update();
-		
-		cameraController = new OrthoCamController(camera);
-		Gdx.input.setInputProcessor(cameraController);
-	
-		font = new BitmapFont();
-		batch = new SpriteBatch();
-		
-		{
-			tiles = new Texture(Gdx.files.internal("data/maps/tiles.png"));
-			TextureRegion[][] splitTiles = TextureRegion.split(tiles, 32, 32);
-			map = new TiledMap();
-			MapLayers layers = map.getLayers();
-			for (int l = 0; l < 20; l++) {
-				TiledMapTileLayer layer = new TiledMapTileLayer(150, 100, 32, 32);
-				for (int x = 0; x < 150; x++) {
-					for (int y = 0; y < 100; y++) {
-						int ty = (int)(Math.random() * splitTiles.length);
-						int tx = (int)(Math.random() * splitTiles[ty].length);
-						layer.setCell(x, y, new StaticTiledMapTile(splitTiles[ty][tx]));
-					}
-				}
-				layers.addLayer(layer);
-			}
-		}
-		
-		renderer = new OrthogonalTiledMapRenderer2(map);
-
-	}
-
-	@Override
-	public void render() {
-		Gdx.gl.glClearColor(100f / 255f, 100f / 255f, 250f / 255f, 1f);
-		Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
-		if (cameraController.dirty) {
-			camera.update();
-			renderer.setProjectionMatrix(camera.combined);
-			cameraController.dirty = false;
-			((OrthogonalTiledMapRenderer2) renderer).recache = true;
-		}
-		renderer.setViewBounds(camera.position.x - camera.viewportWidth * 0.5f, camera.position.y - camera.viewportHeight * 0.5f, camera.viewportWidth, camera.viewportHeight);
-		renderer.begin();
-		renderer.render();
-		renderer.end();
-		batch.begin();
-		font.draw(batch, "FPS: " + Gdx.graphics.getFramesPerSecond(), 10, 20); 
-		batch.end();
-	}
-	
-	public class OrthoCamController extends InputAdapter {
-		final OrthographicCamera camera;
-		final Vector3 curr = new Vector3();
-		final Vector3 last = new Vector3(-1, -1, -1);
-		final Vector3 delta = new Vector3();
-
-		boolean dirty = true;
-		
-		public OrthoCamController (OrthographicCamera camera) {
-			this.camera = camera;
-		}
-
-		@Override
-		public boolean touchDragged (int x, int y, int pointer) {
-			camera.unproject(curr.set(x, y, 0));
-			if (!(last.x == -1 && last.y == -1 && last.z == -1)) {
-				camera.unproject(delta.set(last.x, last.y, 0));
-				delta.sub(curr);
-				camera.position.add(delta.x, delta.y, 0);
-				dirty = true;
-			}
-			last.set(x, y, 0);
-			return false;
-		}
-
-		@Override
-		public boolean touchUp (int x, int y, int pointer, int button) {
-			last.set(-1, -1, -1);
-			return false;
-		}
-	}
-
-	@Override
-	public boolean needsGL20 () {
-		// TODO Auto-generated method stub
-		return false;
-	}
-	
-}
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BaseBulletTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BaseBulletTest.java
index b03ab9f..d800d37 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BaseBulletTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BaseBulletTest.java
@@ -31,7 +31,6 @@ import com.badlogic.gdx.math.collision.Ray;
 import com.badlogic.gdx.physics.bullet.Bullet;
 import com.badlogic.gdx.physics.bullet.btIDebugDraw;
 import com.badlogic.gdx.physics.bullet.btIDebugDraw.DebugDrawModes;
-import com.badlogic.gdx.physics.bullet.btRigidBody;
 import com.badlogic.gdx.physics.bullet.btTransform;
 import com.badlogic.gdx.utils.SharedLibraryLoader;
 
@@ -148,7 +147,7 @@ public class BaseBulletTest extends BulletTest {
 		Ray ray = camera.getPickRay(x, y);
 		BulletEntity entity = world.add(what, ray.origin.x, ray.origin.y, ray.origin.z);
 		entity.color.set(0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 1f);
-		((btRigidBody)entity.body).applyCentralImpulse(ray.direction.mul(impulse));
+		entity.body.applyCentralImpulse(ray.direction.mul(impulse));
 	}
 	
 	public void setDebugMode(final int mode) {
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BulletConstructor.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BulletConstructor.java
index 307d518..0d13afe 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BulletConstructor.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BulletConstructor.java
@@ -21,7 +21,6 @@ import com.badlogic.gdx.math.Matrix4;
 import com.badlogic.gdx.math.Vector3;
 import com.badlogic.gdx.math.collision.BoundingBox;
 import com.badlogic.gdx.physics.bullet.btBoxShape;
-import com.badlogic.gdx.physics.bullet.btCollisionObject;
 import com.badlogic.gdx.physics.bullet.btCollisionShape;
 import com.badlogic.gdx.physics.bullet.btRigidBodyConstructionInfo;
 
@@ -38,13 +37,6 @@ public class BulletConstructor extends BaseWorld.Constructor<BulletEntity> {
 	public BulletConstructor (final Model model, final float mass, final btCollisionShape shape) {
 		create(model, mass, shape);
 	}
-	
-	/**
-	 * Specify null for the shape to use only the renderable part of this entity and not the physics part. 
-	 */
-	public BulletConstructor (final Model model, final btCollisionShape shape) {
-		this(model, -1f, shape);
-	}
 
 	/**
 	 * Creates a btBoxShape with the specified dimensions.
@@ -54,13 +46,6 @@ public class BulletConstructor extends BaseWorld.Constructor<BulletEntity> {
 	}
 	
 	/**
-	 * Creates a btBoxShape with the specified dimensions and NO rigidbody.
-	 */
-	public BulletConstructor (final Model model, final float width, final float height, final float depth) {
-		this(model, -1f, width, height, depth);
-	}
-	
-	/**
 	 * Creates a btBoxShape with the same dimensions as the shape.
 	 */
 	public BulletConstructor (final Model model, final float mass) {
@@ -70,13 +55,6 @@ public class BulletConstructor extends BaseWorld.Constructor<BulletEntity> {
 		create(model, mass, dimensions.x, dimensions.y, dimensions.z);
 	}
 	
-	/**
-	 * Creates a btBoxShape with the same dimensions as the shape and NO rigidbody.
-	 */
-	public BulletConstructor (final Model model) {
-		this(model, -1f);
-	}
-	
 	private void create (final Model model, final float mass, final float width, final float height, final float depth) {			
 		// Create a simple boxshape
 		create(model, mass, new btBoxShape(Vector3.tmp.set(width * 0.5f, height * 0.5f, depth * 0.5f)));
@@ -86,7 +64,7 @@ public class BulletConstructor extends BaseWorld.Constructor<BulletEntity> {
 		this.model = model;
 		this.shape = shape;
 		
-		if (shape != null && mass >= 0) {
+		if (shape != null) {
 			// Calculate the local inertia, bodies with no mass are static
 			Vector3 localInertia;
 			if (mass == 0)
@@ -113,21 +91,11 @@ public class BulletConstructor extends BaseWorld.Constructor<BulletEntity> {
 
 	@Override
 	public BulletEntity construct (float x, float y, float z) {
-		if (bodyInfo == null && shape != null) {
-			btCollisionObject obj = new btCollisionObject();
-			obj.setCollisionShape(shape);
-			return new BulletEntity(model, obj, x, y, z);
-		} else
-			return new BulletEntity(model, bodyInfo, x, y, z);
+		return new BulletEntity(this, x, y, z);
 	}
 	
 	@Override
 	public BulletEntity construct (final Matrix4 transform) {
-		if (bodyInfo == null && shape != null) {
-			btCollisionObject obj = new btCollisionObject();
-			obj.setCollisionShape(shape);
-			return new BulletEntity(model, obj, transform);
-		} else
-		return new BulletEntity(model, bodyInfo, transform);
+		return new BulletEntity(this, transform);
 	}
 }
\ No newline at end of file
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BulletEntity.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BulletEntity.java
index 4919743..fd31f11 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BulletEntity.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BulletEntity.java
@@ -18,8 +18,6 @@ package com.badlogic.gdx.tests.bullet;
 import com.badlogic.gdx.graphics.Mesh;
 import com.badlogic.gdx.graphics.g3d.model.Model;
 import com.badlogic.gdx.math.Matrix4;
-import com.badlogic.gdx.physics.bullet.btCollisionObject;
-import com.badlogic.gdx.physics.bullet.btCollisionShape;
 import com.badlogic.gdx.physics.bullet.btMotionState;
 import com.badlogic.gdx.physics.bullet.btRigidBody;
 import com.badlogic.gdx.physics.bullet.btRigidBodyConstructionInfo;
@@ -31,40 +29,36 @@ import com.badlogic.gdx.utils.Disposable;
 public class BulletEntity extends BaseEntity {
 	private final static Matrix4 tmpM = new Matrix4();
 	public BulletEntity.MotionState motionState;
-	public btCollisionObject body;
+	public btRigidBody body;
 
 	public BulletEntity (final Model model, final btRigidBodyConstructionInfo bodyInfo, final float x, final float y, final float z) {
-		this(model, bodyInfo == null ? null : new btRigidBody(bodyInfo), x, y, z);
+		this(model, bodyInfo, tmpM.setToTranslation(x, y, z));
 	}
 	
 	public BulletEntity (final Model model, final btRigidBodyConstructionInfo bodyInfo, final Matrix4 transform) {
-		this(model, bodyInfo == null ? null : new btRigidBody(bodyInfo), transform);
-	}
-	
-	public BulletEntity (final Model model, final btCollisionObject body, final float x, final float y, final float z) {
-		this(model, body, tmpM.setToTranslation(x, y, z));
-	}
-	
-	public BulletEntity (final Model model, final btCollisionObject body, final Matrix4 transform) {
 		this.model = model;
 		this.transform.set(transform);
-		this.body = body;
 		
-		if (body != null) {
-			body.userData = this;
-			if (body instanceof btRigidBody) {
-				this.motionState = new MotionState(this.transform);
-				((btRigidBody)this.body).setMotionState(motionState);
-			} else
-				body.setWorldTransform(transform);
+		if (bodyInfo != null) {
+			this.motionState = new MotionState(this.transform);
+			this.body = new btRigidBody(bodyInfo);
+			this.body.setMotionState(motionState);
 		}
 	}
 
+	public BulletEntity (final BulletConstructor constructInfo, final float x, final float y, final float z) {
+		this(constructInfo.model, constructInfo.bodyInfo, x, y, z);
+	}
+	
+	public BulletEntity (final BulletConstructor constructInfo, final Matrix4 transform) {
+		this(constructInfo.model, constructInfo.bodyInfo, transform);
+	}
+
 	@Override
 	public void dispose () {
 		// Don't rely on the GC
 		if (motionState != null) motionState.dispose();
-		if (body != null) body.dispose();
+		if (body != null) body.delete();
 		// And remove the reference
 		motionState = null;
 		body = null;
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BulletWorld.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BulletWorld.java
index dce8381..ed15e69 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BulletWorld.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BulletWorld.java
@@ -20,8 +20,6 @@ import com.badlogic.gdx.math.Matrix4;
 import com.badlogic.gdx.math.Vector3;
 import com.badlogic.gdx.math.WindowedMean;
 import com.badlogic.gdx.physics.bullet.btBroadphaseInterface;
-import com.badlogic.gdx.physics.bullet.btCollisionObject;
-import com.badlogic.gdx.physics.bullet.btCollisionWorld;
 import com.badlogic.gdx.physics.bullet.btIDebugDraw;
 import com.badlogic.gdx.physics.bullet.btCollisionConfiguration;
 import com.badlogic.gdx.physics.bullet.btCollisionDispatcher;
@@ -47,28 +45,27 @@ public class BulletWorld extends BaseWorld<BulletEntity> {
 	public final btCollisionDispatcher dispatcher;
 	public final btBroadphaseInterface broadphase;
 	public final btConstraintSolver solver;
-	public final btCollisionWorld collisionWorld;
+	public final btDynamicsWorld dynamicsWorld;
 	public PerformanceCounter performanceCounter;
 	public final Vector3 gravity;	
 	
 	public int maxSubSteps = 5;
 	
 	public BulletWorld(final btCollisionConfiguration collisionConfiguration, final btCollisionDispatcher dispatcher,
-		final btBroadphaseInterface broadphase, final btConstraintSolver solver, final btCollisionWorld world,  
+		final btBroadphaseInterface broadphase, final btConstraintSolver solver, final btDynamicsWorld dynamicsWorld,  
 		final Vector3 gravity) {
 		this.collisionConfiguration = collisionConfiguration;
 		this.dispatcher = dispatcher;
 		this.broadphase = broadphase;
 		this.solver = solver;
-		this.collisionWorld = world;
-		if (world instanceof btDynamicsWorld)
-			((btDynamicsWorld)this.collisionWorld).setGravity(gravity);
+		this.dynamicsWorld = dynamicsWorld;
+		this.dynamicsWorld.setGravity(gravity);
 		this.gravity = gravity;
 	}
 	
 	public BulletWorld(final btCollisionConfiguration collisionConfiguration, final btCollisionDispatcher dispatcher,
-		final btBroadphaseInterface broadphase, final btConstraintSolver solver, final btCollisionWorld world) {
-		this(collisionConfiguration, dispatcher, broadphase, solver, world, new Vector3(0, -10, 0));
+		final btBroadphaseInterface broadphase, final btConstraintSolver solver, final btDynamicsWorld dynamicsWorld) {
+		this(collisionConfiguration, dispatcher, broadphase, solver, dynamicsWorld, new Vector3(0, -10, 0));
 	}
 	
 	public BulletWorld(final Vector3 gravity) {
@@ -76,8 +73,8 @@ public class BulletWorld extends BaseWorld<BulletEntity> {
 		dispatcher = new btCollisionDispatcher(collisionConfiguration);
 		broadphase = new btDbvtBroadphase();
 		solver = new btSequentialImpulseConstraintSolver();
-		collisionWorld = new btDiscreteDynamicsWorld(dispatcher, broadphase, solver, collisionConfiguration);
-		((btDynamicsWorld)collisionWorld).setGravity(gravity);
+		dynamicsWorld = new btDiscreteDynamicsWorld(dispatcher, broadphase, solver, collisionConfiguration);
+		dynamicsWorld.setGravity(gravity);
 		this.gravity = gravity;
 	}
 	
@@ -88,12 +85,8 @@ public class BulletWorld extends BaseWorld<BulletEntity> {
 	@Override
 	public void add(final BulletEntity entity) {
 		super.add(entity);
-		if (entity.body != null) {
-			if (entity.body instanceof btRigidBody)
-				((btDiscreteDynamicsWorld)collisionWorld).addRigidBody((btRigidBody)entity.body);
-			else
-				collisionWorld.addCollisionObject(entity.body);
-		}
+		if (entity.body != null)
+			dynamicsWorld.addRigidBody(entity.body);
 	}
 	
 	@Override
@@ -102,14 +95,13 @@ public class BulletWorld extends BaseWorld<BulletEntity> {
 		performanceCounter.tick();
 		performanceCounter.start();
 		}
-		if (collisionWorld instanceof btDynamicsWorld)
-			((btDynamicsWorld)collisionWorld).stepSimulation(Gdx.graphics.getDeltaTime(), maxSubSteps);
+		dynamicsWorld.stepSimulation(Gdx.graphics.getDeltaTime(), maxSubSteps);
 		if (performanceCounter != null)
 			performanceCounter.stop();
 
 		if (debugDrawer != null && debugDrawer.getDebugMode() > 0) {
 			debugDrawer.begin();
-			collisionWorld.debugDrawWorld();
+			dynamicsWorld.debugDrawWorld();
 			debugDrawer.end();
 		}
 		if (renderMeshes)
@@ -119,33 +111,25 @@ public class BulletWorld extends BaseWorld<BulletEntity> {
 	@Override
 	public void dispose () {
 		for (int i = 0; i < entities.size; i++) {
-			btCollisionObject body = entities.get(i).body;
-			if (body != null) {
-				if (body instanceof btRigidBody)
-					((btDynamicsWorld)collisionWorld).removeRigidBody((btRigidBody)body);
-				else
-					collisionWorld.removeCollisionObject(body);
-			}
+			btRigidBody body = entities.get(i).body;
+			if (body != null)
+				dynamicsWorld.removeRigidBody(body);
 		}
 		
 		super.dispose();
 		
-		collisionWorld.delete();
-		if (solver != null)
-			solver.delete();
-		if (broadphase != null)
-			broadphase.delete();
-		if (dispatcher != null)
-			dispatcher.delete();
-		if (collisionConfiguration != null)
-			collisionConfiguration.delete();
+		dynamicsWorld.delete();
+		solver.delete();
+		broadphase.delete();
+		dispatcher.delete();
+		collisionConfiguration.delete();
 	}
 	
 	public void setDebugMode(final int mode, final Matrix4 projMatrix) {
 		if (mode == btIDebugDraw.DebugDrawModes.DBG_NoDebug && debugDrawer == null)
 			return;
 		if (debugDrawer == null)
-			collisionWorld.setDebugDrawer(debugDrawer = new DebugDrawer());
+			dynamicsWorld.setDebugDrawer(debugDrawer = new DebugDrawer());
 		debugDrawer.lineRenderer.setProjectionMatrix(projMatrix);
 		debugDrawer.setDebugMode(mode);
 	}
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/CollisionWorldTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/CollisionWorldTest.java
deleted file mode 100644
index 9611f94..0000000
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/CollisionWorldTest.java
+++ /dev/null
@@ -1,120 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-
-package com.badlogic.gdx.tests.bullet;
-
-import com.badlogic.gdx.Gdx;
-import com.badlogic.gdx.graphics.Color;
-import com.badlogic.gdx.graphics.g3d.model.Model;
-import com.badlogic.gdx.math.Matrix4;
-import com.badlogic.gdx.math.Vector3;
-import com.badlogic.gdx.physics.bullet.ContactResultCallback;
-import com.badlogic.gdx.physics.bullet.btCollisionDispatcher;
-import com.badlogic.gdx.physics.bullet.btCollisionObject;
-import com.badlogic.gdx.physics.bullet.btCollisionObjectWrapper;
-import com.badlogic.gdx.physics.bullet.btCollisionWorld;
-import com.badlogic.gdx.physics.bullet.btDbvtBroadphase;
-import com.badlogic.gdx.physics.bullet.btDefaultCollisionConfiguration;
-import com.badlogic.gdx.physics.bullet.btManifoldPoint;
-import com.badlogic.gdx.physics.bullet.gdxBulletJNI;
-
-/** @author xoppa */
-public class CollisionWorldTest extends BaseBulletTest {
-	BulletEntity movingBox;
-	boolean hit = false;
-	Color normalColor = new Color();
-	btCollisionObject other;
-		
-	public class TestContactResultCallback extends ContactResultCallback
-	{
-		@Override
-		public float addSingleResult (btManifoldPoint cp, btCollisionObjectWrapper colObj0Wrap, int partId0, int index0,
-			btCollisionObjectWrapper colObj1Wrap, int partId1, int index1) {
-			hit = true;
-			other = colObj0Wrap.getM_collisionObject() == movingBox.body ?
-					colObj1Wrap.getM_collisionObject() : colObj0Wrap.getM_collisionObject();
-			
-			return 0f;
-		}
-	}
-	TestContactResultCallback contactCB;
-	
-	
-	@Override
-	public BulletWorld createWorld () {
-		btDefaultCollisionConfiguration collisionConfig = new btDefaultCollisionConfiguration();
-		btCollisionDispatcher dispatcher = new btCollisionDispatcher(collisionConfig);
-		btDbvtBroadphase broadphase = new btDbvtBroadphase();
-		btCollisionWorld collisionWorld = new btCollisionWorld(dispatcher, broadphase, collisionConfig);
-		return new BulletWorld(collisionConfig, dispatcher, broadphase, null, collisionWorld);
-	}
-	
-	@Override
-	public void create () {
-		super.create();
-		
-		contactCB = new TestContactResultCallback();
-		
-		Model groundModel = world.getConstructor("ground").model;
-		Model boxModel = world.getConstructor("box").model;
-		
-		world.addConstructor("collisionGround", new BulletConstructor(groundModel));
-		world.addConstructor("collisionBox", new BulletConstructor(boxModel));
-		
-		world.add("collisionGround", 0f, 0f, 0f)
-			.color.set(0.25f + 0.5f * (float)Math.random(), 0.25f + 0.5f * (float)Math.random(), 0.25f + 0.5f * (float)Math.random(), 1f);
-		
-		world.add("collisionBox", 0f, 1f, 5f)
-			.color.set(0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 1f);
-		world.add("collisionBox", 0f, 1f, -5f)
-			.color.set(0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 1f);
-		world.add("collisionBox", 5f, 1f, 0f)
-			.color.set(0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 1f);
-		world.add("collisionBox", -5f, 1f, 0f)
-			.color.set(0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 1f);
-		movingBox = world.add("collisionBox", -5f, 1f, 0f);
-		normalColor.set(0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 1f);
-	}
-	
-	Color tmpColor = new Color();
-	@Override
-	public void render () {
-		movingBox.transform.val[Matrix4.M03] = movingBox.transform.val[Matrix4.M13] = movingBox.transform.val[Matrix4.M23] = 0f;
-		movingBox.transform.rotate(Vector3.Y, Gdx.graphics.getDeltaTime() * 45f);
-		movingBox.transform.translate(-5f, 1f, 0f);
-		movingBox.body.setWorldTransform(movingBox.transform);
-		world.collisionWorld.performDiscreteCollisionDetection();
-		hit = false;
-		other = null;
-		world.collisionWorld.contactTest(movingBox.body, contactCB);
-		movingBox.color.set(hit ? Color.RED : normalColor);
-		BulletEntity e = null;
-		if (other != null && other.userData != null && other.userData instanceof BulletEntity) { 
-			e = (BulletEntity)(other.userData);
-			tmpColor.set(e.color);
-			e.color.set(Color.RED);
-		}
-		super.render();
-		if (e != null)
-			e.color.set(tmpColor);
-	}
-	
-	@Override
-	public void dispose () {
-		super.dispose();
-		movingBox = null;
-	}
-}
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/ConstraintsTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/ConstraintsTest.java
index 9445175..f438002 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/ConstraintsTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/ConstraintsTest.java
@@ -25,10 +25,7 @@ import com.badlogic.gdx.graphics.g3d.materials.Material;
 import com.badlogic.gdx.graphics.g3d.model.still.StillModel;
 import com.badlogic.gdx.graphics.g3d.model.still.StillSubMesh;
 import com.badlogic.gdx.math.Vector3;
-import com.badlogic.gdx.physics.bullet.btDiscreteDynamicsWorld;
-import com.badlogic.gdx.physics.bullet.btDynamicsWorld;
 import com.badlogic.gdx.physics.bullet.btPoint2PointConstraint;
-import com.badlogic.gdx.physics.bullet.btRigidBody;
 import com.badlogic.gdx.physics.bullet.btTypedConstraint;
 import com.badlogic.gdx.utils.Array;
 
@@ -63,32 +60,32 @@ public class ConstraintsTest extends BaseBulletTest {
 		
 		BulletEntity box1 = world.add("box", -4.5f, 6f, 0f);
 		box1.color.set(0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 1f);
-		btPoint2PointConstraint constraint = new btPoint2PointConstraint((btRigidBody)bar.body, (btRigidBody)box1.body, Vector3.tmp.set(-5, -0.5f, -0.5f), Vector3.tmp2.set(-0.5f, 0.5f, -0.5f));
-		((btDynamicsWorld)world.collisionWorld).addConstraint(constraint, false);
+		btPoint2PointConstraint constraint = new btPoint2PointConstraint(bar.body, box1.body, Vector3.tmp.set(-5, -0.5f, -0.5f), Vector3.tmp2.set(-0.5f, 0.5f, -0.5f));
+		world.dynamicsWorld.addConstraint(constraint, false);
 		constraints.add(constraint);
 		BulletEntity box2 = null;
 		for (int i = 0; i < 10; i++) {
 			if (i % 2 == 0) {
 				box2 = world.add("box", -3.5f + (float)i, 6f, 0f);
 				box2.color.set(0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 1f);
-				constraint = new btPoint2PointConstraint((btRigidBody)box1.body, (btRigidBody)box2.body, Vector3.tmp.set(0.5f, -0.5f, 0.5f), Vector3.tmp2.set(-0.5f, -0.5f, 0.5f));
+				constraint = new btPoint2PointConstraint(box1.body, box2.body, Vector3.tmp.set(0.5f, -0.5f, 0.5f), Vector3.tmp2.set(-0.5f, -0.5f, 0.5f));
 			} else {
 				box1 = world.add("box", -3.5f + (float)i, 6f, 0f);
 				box1.color.set(0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 1f);
-				constraint = new btPoint2PointConstraint((btRigidBody)box2.body, (btRigidBody)box1.body, Vector3.tmp.set(0.5f, 0.5f, -0.5f), Vector3.tmp2.set(-0.5f, 0.5f, -0.5f));
+				constraint = new btPoint2PointConstraint(box2.body, box1.body, Vector3.tmp.set(0.5f, 0.5f, -0.5f), Vector3.tmp2.set(-0.5f, 0.5f, -0.5f));
 			}
-			((btDynamicsWorld)world.collisionWorld).addConstraint(constraint, false);
+			world.dynamicsWorld.addConstraint(constraint, false);
 			constraints.add(constraint);
 		}
-		constraint = new btPoint2PointConstraint((btRigidBody)bar.body, (btRigidBody)box1.body, Vector3.tmp.set(5f, -0.5f, -0.5f), Vector3.tmp2.set(0.5f, 0.5f, -0.5f));
-		((btDynamicsWorld)world.collisionWorld).addConstraint(constraint, false);
+		constraint = new btPoint2PointConstraint(bar.body, box1.body, Vector3.tmp.set(5f, -0.5f, -0.5f), Vector3.tmp2.set(0.5f, 0.5f, -0.5f));
+		world.dynamicsWorld.addConstraint(constraint, false);
 		constraints.add(constraint);
 	}
 	
 	@Override
 	public void dispose () {
 		for (int i = 0; i < constraints.size; i++) {
-			((btDynamicsWorld)world.collisionWorld).removeConstraint(constraints.get(i));
+			world.dynamicsWorld.removeConstraint(constraints.get(i));
 			constraints.get(i).delete();
 		}
 		constraints.clear();
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/DebugDrawer.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/DebugDrawer.java
index 0a60f2e..05699c7 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/DebugDrawer.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/DebugDrawer.java
@@ -13,7 +13,6 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  ******************************************************************************/
-
 package com.badlogic.gdx.tests.bullet;
 
 import com.badlogic.gdx.Gdx;
@@ -25,7 +24,6 @@ import com.badlogic.gdx.physics.bullet.btIDebugDraw;
 import com.badlogic.gdx.physics.bullet.btVector3;
 import com.badlogic.gdx.physics.bullet.gdxBulletJNI;
 
-/** @author xoppa */
 public class DebugDrawer extends btIDebugDraw {
 	public int debugMode = 0;
 	public ShapeRenderer lineRenderer = new ShapeRenderer();
@@ -65,4 +63,4 @@ public class DebugDrawer extends btIDebugDraw {
 	public void end() {
 		lineRenderer.end();
 	}
-}
+}
\ No newline at end of file
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/InternalTickTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/InternalTickTest.java
index 125fb1f..936a472 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/InternalTickTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/InternalTickTest.java
@@ -60,7 +60,7 @@ public class InternalTickTest extends BaseBulletTest {
 	public void create () {
 		super.create();
 		
-		internalTickCallback = new TestInternalTickCallback((btDynamicsWorld)world.collisionWorld);
+		internalTickCallback = new TestInternalTickCallback(world.dynamicsWorld);
 
 		// Create the entities
 		world.add("ground", 0f, 0f, 0f)
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/RayCastTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/RayCastTest.java
index 9885870..84b66e6 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/RayCastTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/RayCastTest.java
@@ -83,7 +83,7 @@ public class RayCastTest extends BaseBulletTest {
 		rayTestCB.getM_rayFromWorld().setValue(rayFrom.x, rayFrom.y, rayFrom.z);
 		rayTestCB.getM_rayToWorld().setValue(rayTo.x, rayTo.y, rayTo.z);
 		
-		world.collisionWorld.rayTest(rayFrom, rayTo, rayTestCB);
+		world.dynamicsWorld.rayTest(rayFrom, rayTo, rayTestCB);
 		
 		if (rayTestCB.hasHit()) {
 			final btCollisionObject obj = rayTestCB.getM_collisionObject();
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/RayPickRagdollTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/RayPickRagdollTest.java
index a7fe760..c9f55c9 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/RayPickRagdollTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/RayPickRagdollTest.java
@@ -32,7 +32,6 @@ import com.badlogic.gdx.physics.bullet.ClosestRayResultCallback;
 import com.badlogic.gdx.physics.bullet.btCapsuleShape;
 import com.badlogic.gdx.physics.bullet.btConeTwistConstraint;
 import com.badlogic.gdx.physics.bullet.btConstraintSetting;
-import com.badlogic.gdx.physics.bullet.btDynamicsWorld;
 import com.badlogic.gdx.physics.bullet.btHingeConstraint;
 import com.badlogic.gdx.physics.bullet.btPoint2PointConstraint;
 import com.badlogic.gdx.physics.bullet.btRigidBody;
@@ -77,7 +76,7 @@ public class RayPickRagdollTest extends BaseBulletTest {
 	@Override
 	public void dispose () {
 		for (int i = 0; i < constraints.size; i++) {
-			((btDynamicsWorld)world.collisionWorld).removeConstraint(constraints.get(i));
+			world.dynamicsWorld.removeConstraint(constraints.get(i));
 			constraints.get(i).delete();
 		}
 		constraints.clear();
@@ -91,7 +90,7 @@ public class RayPickRagdollTest extends BaseBulletTest {
 			Ray ray = camera.getPickRay(screenX, screenY);
 			Vector3.tmp.set(ray.direction).mul(10f).add(ray.origin);
 			ClosestRayResultCallback cb = new ClosestRayResultCallback(ray.origin, Vector3.tmp);
-			world.collisionWorld.rayTest(ray.origin, Vector3.tmp, cb);
+			world.dynamicsWorld.rayTest(ray.origin, Vector3.tmp, cb);
 			if (cb.hasHit()) {
 				btRigidBody body = btRigidBody.upcast(cb.getM_collisionObject());
 				if (body != null && !body.isStaticObject() && !body.isKinematicObject()) {
@@ -108,7 +107,7 @@ public class RayPickRagdollTest extends BaseBulletTest {
 					setting.setM_tau(0.001f);
 					pickConstraint.setM_setting(setting);
 					
-					((btDynamicsWorld)world.collisionWorld).addConstraint(pickConstraint);
+					world.dynamicsWorld.addConstraint(pickConstraint);
 		
 					pickDistance = Vector3.tmp.sub(camera.position).len();
 					result = true;
@@ -124,7 +123,7 @@ public class RayPickRagdollTest extends BaseBulletTest {
 		boolean result = false;
 		if (button == Buttons.LEFT) {
 			if (pickConstraint != null) {
-				((btDynamicsWorld)world.collisionWorld).removeConstraint(pickConstraint);
+				world.dynamicsWorld.removeConstraint(pickConstraint);
 				pickConstraint.delete();
 				pickConstraint = null;
 				result = true;
@@ -161,17 +160,17 @@ public class RayPickRagdollTest extends BaseBulletTest {
 	final static float PI4 = 0.25f * PI;
 	public void addRagdoll(final float x, final float y, final float z) {
 		final Matrix4 tmpM = new Matrix4();
-		btRigidBody pelvis = (btRigidBody)world.add("pelvis", x, y+1, z).body;
-		btRigidBody spine = (btRigidBody)world.add("spine", x, y+1.2f, z).body;
-		btRigidBody head = (btRigidBody)world.add("head", x, y+1.6f, z).body;
-		btRigidBody leftupperleg = (btRigidBody)world.add("upperleg", x-0.18f, y+0.65f, z).body;
-		btRigidBody leftlowerleg = (btRigidBody)world.add("lowerleg", x-0.18f, y+0.2f, z).body;
-		btRigidBody rightupperleg = (btRigidBody)world.add("upperleg", x+0.18f, y+0.65f, z).body;
-		btRigidBody rightlowerleg = (btRigidBody)world.add("lowerleg", x+0.18f, y+0.2f, z).body;		
-		btRigidBody leftupperarm = (btRigidBody)world.add("upperarm", tmpM.setFromEulerAngles(PI2, 0, 0).trn(x-0.35f, y+1.45f, z)).body;
-		btRigidBody leftlowerarm = (btRigidBody)world.add("lowerarm", tmpM.setFromEulerAngles(PI2, 0, 0).trn(x-0.7f, y+1.45f, z)).body;
-		btRigidBody rightupperarm = (btRigidBody)world.add("upperarm", tmpM.setFromEulerAngles(-PI2, 0, 0).trn(x+0.35f, y+1.45f, z)).body;
-		btRigidBody rightlowerarm = (btRigidBody)world.add("lowerarm", tmpM.setFromEulerAngles(-PI2, 0, 0).trn(x+0.7f, y+1.45f, z)).body;
+		btRigidBody pelvis = world.add("pelvis", x, y+1, z).body;
+		btRigidBody spine = world.add("spine", x, y+1.2f, z).body;
+		btRigidBody head = world.add("head", x, y+1.6f, z).body;
+		btRigidBody leftupperleg = world.add("upperleg", x-0.18f, y+0.65f, z).body;
+		btRigidBody leftlowerleg = world.add("lowerleg", x-0.18f, y+0.2f, z).body;
+		btRigidBody rightupperleg = world.add("upperleg", x+0.18f, y+0.65f, z).body;
+		btRigidBody rightlowerleg = world.add("lowerleg", x+0.18f, y+0.2f, z).body;		
+		btRigidBody leftupperarm = world.add("upperarm", tmpM.setFromEulerAngles(PI2, 0, 0).trn(x-0.35f, y+1.45f, z)).body;
+		btRigidBody leftlowerarm = world.add("lowerarm", tmpM.setFromEulerAngles(PI2, 0, 0).trn(x-0.7f, y+1.45f, z)).body;
+		btRigidBody rightupperarm = world.add("upperarm", tmpM.setFromEulerAngles(-PI2, 0, 0).trn(x+0.35f, y+1.45f, z)).body;
+		btRigidBody rightlowerarm = world.add("lowerarm", tmpM.setFromEulerAngles(-PI2, 0, 0).trn(x+0.7f, y+1.45f, z)).body;
 		
 		final Matrix4 localA = new Matrix4();
 		final Matrix4 localB = new Matrix4();
@@ -183,70 +182,70 @@ public class RayPickRagdollTest extends BaseBulletTest {
 		localB.setFromEulerAngles(0, PI2, 0).trn(0, -0.15f, 0);
 		constraints.add(hingeC = new btHingeConstraint(pelvis, spine, localA, localB));
 		hingeC.setLimit(-PI4, PI2);
-		((btDynamicsWorld)world.collisionWorld).addConstraint(hingeC, true);
+		world.dynamicsWorld.addConstraint(hingeC, true);
 		
 		// SpineHead
 		localA.setFromEulerAngles(PI2, 0, 0).trn(0, 0.3f, 0);
 		localB.setFromEulerAngles(PI2, 0, 0).trn(0, -0.14f, 0);
 		constraints.add(coneC = new btConeTwistConstraint(spine, head, localA, localB));
 		coneC.setLimit(PI4, PI4, PI2);
-		((btDynamicsWorld)world.collisionWorld).addConstraint(coneC, true);
+		world.dynamicsWorld.addConstraint(coneC, true);
 		
 		// LeftHip
 		localA.setFromEulerAngles(-PI4*5f, 0, 0).trn(-0.18f, -0.1f, 0);
 		localB.setFromEulerAngles(-PI4*5f, 0, 0).trn(0, 0.225f, 0);
 		constraints.add(coneC = new btConeTwistConstraint(pelvis, leftupperleg, localA, localB));
 		coneC.setLimit(PI4, PI4, 0);
-		((btDynamicsWorld)world.collisionWorld).addConstraint(coneC, true);
+		world.dynamicsWorld.addConstraint(coneC, true);
 		
 		// LeftKnee
 		localA.setFromEulerAngles(0, PI2, 0).trn(0, -0.225f, 0);
 		localB.setFromEulerAngles(0, PI2, 0).trn(0, 0.185f, 0);
 		constraints.add(hingeC = new btHingeConstraint(leftupperleg, leftlowerleg, localA, localB));
 		hingeC.setLimit(0, PI2);
-		((btDynamicsWorld)world.collisionWorld).addConstraint(hingeC, true);
+		world.dynamicsWorld.addConstraint(hingeC, true);
 		
 		// RightHip
 		localA.setFromEulerAngles(-PI4*5f, 0, 0).trn(0.18f, -0.1f, 0);
 		localB.setFromEulerAngles(-PI4*5f, 0, 0).trn(0, 0.225f, 0);
 		constraints.add(coneC = new btConeTwistConstraint(pelvis, rightupperleg, localA, localB));
 		coneC.setLimit(PI4, PI4, 0);
-		((btDynamicsWorld)world.collisionWorld).addConstraint(coneC, true);
+		world.dynamicsWorld.addConstraint(coneC, true);
 		
 		// RightKnee
 		localA.setFromEulerAngles(0, PI2, 0).trn(0, -0.225f, 0);
 		localB.setFromEulerAngles(0, PI2, 0).trn(0, 0.185f, 0);
 		constraints.add(hingeC = new btHingeConstraint(rightupperleg, rightlowerleg, localA, localB));
 		hingeC.setLimit(0, PI2);
-		((btDynamicsWorld)world.collisionWorld).addConstraint(hingeC, true);
+		world.dynamicsWorld.addConstraint(hingeC, true);
 		
 		// LeftShoulder
 		localA.setFromEulerAngles(PI, 0, 0).trn(-0.2f, 0.15f, 0);
 		localB.setFromEulerAngles(PI2, 0, 0).trn(0, -0.18f, 0);
 		constraints.add(coneC = new btConeTwistConstraint(pelvis, leftupperarm, localA, localB));
 		coneC.setLimit(PI2, PI2, 0);
-		((btDynamicsWorld)world.collisionWorld).addConstraint(coneC, true);
+		world.dynamicsWorld.addConstraint(coneC, true);
 		
 		// LeftElbow
 		localA.setFromEulerAngles(0, PI2, 0).trn(0, 0.18f, 0);
 		localB.setFromEulerAngles(0, PI2, 0).trn(0, -0.14f, 0);
 		constraints.add(hingeC = new btHingeConstraint(leftupperarm, leftlowerarm, localA, localB));
 		hingeC.setLimit(0, PI2);
-		((btDynamicsWorld)world.collisionWorld).addConstraint(hingeC, true);
+		world.dynamicsWorld.addConstraint(hingeC, true);
 		
 		// RightShoulder
 		localA.setFromEulerAngles(PI, 0, 0).trn(0.2f, 0.15f, 0);
 		localB.setFromEulerAngles(PI2, 0, 0).trn(0, -0.18f, 0);
 		constraints.add(coneC = new btConeTwistConstraint(pelvis, rightupperarm, localA, localB));
 		coneC.setLimit(PI2, PI2, 0);
-		((btDynamicsWorld)world.collisionWorld).addConstraint(coneC, true);
+		world.dynamicsWorld.addConstraint(coneC, true);
 		
 		// RightElbow
 		localA.setFromEulerAngles(0, PI2, 0).trn(0, 0.18f, 0);
 		localB.setFromEulerAngles(0, PI2, 0).trn(0, -0.14f, 0);
 		constraints.add(hingeC = new btHingeConstraint(rightupperarm, rightlowerarm, localA, localB));
 		hingeC.setLimit(0, PI2);
-		((btDynamicsWorld)world.collisionWorld).addConstraint(hingeC, true);
+		world.dynamicsWorld.addConstraint(hingeC, true);
 	}
 	
 	protected Model createCapsuleModel(float radius, float height) {
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/SoftBodyTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/SoftBodyTest.java
index ed0daa6..9d37915 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/SoftBodyTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/SoftBodyTest.java
@@ -81,7 +81,7 @@ public class SoftBodyTest extends BaseBulletTest {
 		softBody = btSoftBodyHelpers.CreatePatch(worldInfo, patch00, patch10, patch01, patch11, 15, 15, 15, false);
 		softBody.takeOwnership();
 		softBody.setTotalMass(100f);
-		((btSoftRigidDynamicsWorld)(world.collisionWorld)).addSoftBody(softBody);
+		((btSoftRigidDynamicsWorld)(world.dynamicsWorld)).addSoftBody(softBody);
 		
 		final int vertCount = softBody.getNodeCount();
 		final int faceCount = softBody.getFaceCount(); 
@@ -107,7 +107,7 @@ public class SoftBodyTest extends BaseBulletTest {
 	
 	@Override
 	public void dispose () {
-		((btSoftRigidDynamicsWorld)(world.collisionWorld)).removeSoftBody(softBody);
+		((btSoftRigidDynamicsWorld)(world.dynamicsWorld)).removeSoftBody(softBody);
 		softBody.delete();
 		softBody = null;
 		
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/SoftMeshTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/SoftMeshTest.java
index 1ff8203..33b8984 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/SoftMeshTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/SoftMeshTest.java
@@ -87,12 +87,12 @@ public class SoftMeshTest extends BaseBulletTest {
 		softBody.randomizeConstraints();
 		softBody.setTotalMass(1);
 		softBody.translate(Vector3.tmp.set(1, 5, 1));
-		((btSoftRigidDynamicsWorld)(world.collisionWorld)).addSoftBody(softBody);
+		((btSoftRigidDynamicsWorld)(world.dynamicsWorld)).addSoftBody(softBody);
 	}
 	
 	@Override
 	public void dispose () {
-		((btSoftRigidDynamicsWorld)(world.collisionWorld)).removeSoftBody(softBody);
+		((btSoftRigidDynamicsWorld)(world.dynamicsWorld)).removeSoftBody(softBody);
 		softBody.delete();
 		softBody = null;
 		
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/gwt/GwtInputTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/gwt/GwtInputTest.java
index ee0b788..ab9a5b5 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/gwt/GwtInputTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/gwt/GwtInputTest.java
@@ -35,12 +35,12 @@ public class GwtInputTest extends GdxTest {
 	public void render () {
 		Gdx.gl.glClearColor(0, 0, 0, 1);
 		Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
-		renderer.begin(ShapeType.Filled);
+		renderer.begin(ShapeType.FilledRectangle);
 		if (Gdx.input.isTouched())
 			renderer.setColor(Color.RED);
 		else
 			renderer.setColor(Color.GREEN);
-		renderer.rect(Gdx.input.getX() - 15, Gdx.graphics.getHeight() - Gdx.input.getY() - 15, 30, 30);
+		renderer.filledRect(Gdx.input.getX() - 15, Gdx.graphics.getHeight() - Gdx.input.getY() - 15, 30, 30);
 		renderer.end();
 	}
 
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/utils/GdxTests.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/utils/GdxTests.java
index a3f0f4c..2c58062 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/utils/GdxTests.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/utils/GdxTests.java
@@ -34,7 +34,6 @@ import java.util.Collections;
 import java.util.List;
 
 import com.badlogic.gdx.tests.*;
-import com.badlogic.gdx.tests.bench.TiledMapBench;
 import com.badlogic.gdx.tests.examples.MoveSpriteExample;
 import com.badlogic.gdx.tests.gles2.HelloTriangle;
 import com.badlogic.gdx.tests.gles2.SimpleVertexShader;
@@ -75,8 +74,7 @@ public class GdxTests {
 		// InternationalFontsTest.class, VorbisTest.class
 		TextButtonTest.class, TextButtonTestGL2.class, TextureBindTest.class, SortedSpriteTest.class,
 		ExternalMusicTest.class, SoftKeyboardTest.class, DirtyRenderingTest.class, YDownTest.class,
-		ScreenCaptureTest.class, BitmapFontTest.class, LabelScaleTest.class, GLEEDTest.class, GamepadTest.class, NetAPITest.class, TiledMapTest.class, TiledMapBench.class,
-		RunnablePostTest.class, Vector2dTest.class));
+		ScreenCaptureTest.class, BitmapFontTest.class, LabelScaleTest.class, GLEEDTest.class, GamepadTest.class, NetAPITest.class, TiledMapTest.class));
 	
 	public static List<String> getNames () {
 		List<String> names = new ArrayList<String>(tests.size());
diff --git a/todo.txt b/todo.txt
new file mode 100644
index 0000000..d192a67
--- /dev/null
+++ b/todo.txt
@@ -0,0 +1,54 @@
+
+particles
+	persitence should use json so additions won't break saved files
+	javadoc
+json
+	disable reflection to parse into map/array
+tablelayout
+	add cell to existing row
+		http://www.badlogicgames.com/forum/viewtopic.php?f=11&t=2784
+	simplify DSL by removing widget properties?
+	use {name:xxx} instead of [xxx:{}]
+sound
+	ogg problem
+		http://www.badlogicgames.com/forum/viewtopic.php?f=11&t=869&p=14117
+NinePatch
+	add scale, eg for a button pressed state
+TextureAtlas
+	use json?
+	add support for NinePatchs
+Skin
+	use a TextureAtlas instead of custom atlas
+		this separates the regions and patches from styles and resources
+scene2d
+	refactor to not use public fields
+	new input system, similar to inputprocessor
+		need button parameter, not just pointer
+	refactor action system
+		put action classes in action package
+		use Interpolation
+	Slider
+		add snapping to the knob
+	TextButton
+		add region/patch constructors
+	FlickScrollPane
+		use layout to determine clipping
+	javadoc
+	wiki docs
+3D
+	fbx/collada/etc -> unity -> json -> libgdx model & scene binary
+	skeletal animation
+	model batching/instancing
+	scene graph
+	materials
+	particles
+docs
+	wiki
+	documented examples
+replace TileD
+remove junk
+	current 3D stuff
+	TextureRef, TextureDict
+DecalBatch
+	slow
+	remove?
diff --git a/update.sh b/update.sh
new file mode 100644
index 0000000..0645085
--- /dev/null
+++ b/update.sh
@@ -0,0 +1,55 @@
+#! /usr/bin/env sh
+# Execute this in the root directory of the trunk to update all jars and natives from 
+# the CI server.
+wget http://libgdx.badlogicgames.com/nightlies/libgdx-nightly-latest.zip -O libgdx-nightlies.zip
+unzip libgdx-nightlies.zip -d nightlies
+unzip nightlies/gdx-natives.jar -d nightlies/libs
+
+# copy natives to gdx/libs and extensions libs
+cp nightlies/gdx-natives.jar gdx/libs
+cp -rf nightlies/armeabi nightlies/armeabi-v7a gdx/libs
+
+# gdx-audio natives
+cp -rf nightlies/extensions/gdx-audio-natives.jar extensions/gdx-audio/libs
+cp -rf nightlies/extensions/armeabi/libgdx-audio.so extensions/gdx-audio/libs/armeabi
+cp -rf nightlies/extensions/armeabi-v7a/libgdx-audio.so extensions/gdx-audio/libs/armeabi-v7a
+
+
+# gdx-image natives
+cp -rf nightlies/extensions/gdx-image-natives.jar extensions/gdx-image/libs
+cp -rf nightlies/extensions/armeabi/libgdx-image.so extensions/gdx-image/libs/armeabi
+cp -rf nightlies/extensions/armeabi-v7a/libgdx-image.so extensions/gdx-image/libs/armeabi-v7a
+
+# gdx-freetype natives
+cp -rf nightlies/extensions/gdx-freetype-natives.jar extensions/gdx-freetype/libs
+cp -rf nightlies/extensions/armeabi/libgdx-freetype.so extensions/gdx-freetype/libs/armeabi
+cp -rf nightlies/extensions/armeabi-v7a/libgdx-freetype.so extensions/gdx-freetype/libs/armeabi-v7a
+
+# gdx-bullet natives
+cp -rf nightlies/extensions/gdx-bullet/gdx-bullet-natives.jar extensions/gdx-bullet/libs
+cp -rf nightlies/extensions/gdx-bullet/armeabi/libgdx-bullet.so extensions/gdx-bullet/libs/armeabi
+cp -rf nightlies/extensions/gdx-bullet/armeabi-v7a/libgdx-bullet.so extensions/gdx-bullet/libs/armeabi-v7a
+
+# gdx-controllers natives
+cp -rf nightlies/extensions/gdx-controllers-desktop-natives.jar extensions/gdx-controllers/gdx-controllers-desktop/libs
+
+# copy android natives to tests
+cp -rf nightlies/armeabi nightlies/armeabi-v7a tests/gdx-tests-android/libs
+cp -rf nightlies/extensions/armeabi nightlies/extensions/armeabi-v7a tests/gdx-tests-android/libs
+cp -rf nightlies/extensions/gdx-bullet/armeabi/libgdx-bullet.so tests/gdx-tests-android/libs/armeabi
+cp -rf nightlies/extensions/gdx-bullet/armeabi-v7a/libgdx-bullet.so tests/gdx-tests-android/libs/armeabi-v7a
+
+# copy jars and natives to demos
+cp -rf nightlies/armeabi nightlies/armeabi-v7a demos/invaders/gdx-invaders-android/libs
+cp -rf nightlies/armeabi nightlies/armeabi-v7a demos/vector-pinball/gdx-vectorpinball-android/libs
+cp -rf nightlies/armeabi nightlies/armeabi-v7a demos/superjumper/superjumper-android/libs
+cp -rf nightlies/armeabi nightlies/armeabi-v7a demos/metagun/metagun-android/libs
+cp -rf nightlies/armeabi nightlies/armeabi-v7a demos/cuboc/cuboc-android/libs
+cp -rf nightlies/armeabi nightlies/armeabi-v7a demos/pax-britannica/pax-britannica-android/libs
+cp -rf nightlies/armeabi nightlies/armeabi-v7a demos/very-angry-robots/very-angry-robots-android/libs
+cp -rf nightlies/armeabi nightlies/armeabi-v7a extensions/model-loaders/model-loaders-android/libs
+cp -rf nightlies/armeabi nightlies/armeabi-v7a extensions/gdx-remote/libs
+
+# remove temporary directory
+rm -rf nightlies
+rm libgdx-nightlies.zip
