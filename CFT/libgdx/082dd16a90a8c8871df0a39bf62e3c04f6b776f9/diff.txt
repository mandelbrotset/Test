diff --git a/.gitignore b/.gitignore
index 826c2a9..6302018 100644
--- a/.gitignore
+++ b/.gitignore
@@ -33,9 +33,6 @@ ipch/
 
 libgdx-*.zip
 
-*.iml
-/.idea/
-
 #core & extension libs/ folders that have no 3rd party dependencies in them
 /gdx/libs
 /backends/gdx-backend-jglfw/libs/
diff --git a/CHANGES b/CHANGES
index f08b82a..1369c7d 100644
--- a/CHANGES
+++ b/CHANGES
@@ -1,4 +1,6 @@
 [0.9.9]
+- removed FileHandle#file(), has no business in there.
+- removed box2deditor
 - removed custom typedarrays in gwt backend
 - added classpath files support for gwt backend (limited)
 - moved AndroidWallpaperListener to Android Backend
diff --git a/backends/gdx-backend-iosmonotouch/libs/objectal/libObjectAL.dll b/backends/gdx-backend-iosmonotouch/libs/objectal/libObjectAL.dll
old mode 100755
new mode 100644
diff --git a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwInput.java b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwInput.java
index 71f2a1b..24ccabd 100644
--- a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwInput.java
+++ b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwInput.java
@@ -175,6 +175,10 @@ public class JglfwInput implements Input {
 
 	public boolean isKeyPressed (int key) {
 		if (key == Input.Keys.ANY_KEY) return pressedKeys > 0;
+		if (key == Input.Keys.SYM) {
+			return glfwGetKey(app.graphics.window, getJglfwKeyCode(GLFW_KEY_LEFT_SUPER))
+				|| glfwGetKey(app.graphics.window, getJglfwKeyCode(GLFW_KEY_RIGHT_SUPER));
+		}
 		return glfwGetKey(app.graphics.window, getJglfwKeyCode(key));
 	}
 
diff --git a/backends/gdx-backend-robovm/.classpath b/backends/gdx-backend-robovm/.classpath
new file mode 100644
index 0000000..5c6a439
--- /dev/null
+++ b/backends/gdx-backend-robovm/.classpath
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<classpath>
+	<classpathentry kind="src" path="src"/>
+	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7"/>
+	<classpathentry kind="lib" path="libs/robovm-cocoatouch-sources.jar"/>
+	<classpathentry kind="lib" path="libs/robovm-cocoatouch.jar"/>
+	<classpathentry kind="lib" path="libs/robovm-objc-sources.jar"/>
+	<classpathentry kind="lib" path="libs/robovm-objc.jar"/>
+	<classpathentry kind="lib" path="libs/robovm-rt-sources.jar"/>
+	<classpathentry kind="lib" path="libs/robovm-rt.jar"/>
+	<classpathentry combineaccessrules="false" kind="src" path="/gdx"/>
+	<classpathentry kind="output" path="bin"/>
+</classpath>
diff --git a/backends/gdx-backend-robovm/.project b/backends/gdx-backend-robovm/.project
new file mode 100644
index 0000000..e963855
--- /dev/null
+++ b/backends/gdx-backend-robovm/.project
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<projectDescription>
+	<name>gdx-backend-robovm</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+	</natures>
+</projectDescription>
diff --git a/backends/gdx-backend-robovm/.settings/org.eclipse.jdt.core.prefs b/backends/gdx-backend-robovm/.settings/org.eclipse.jdt.core.prefs
new file mode 100644
index 0000000..7341ab1
--- /dev/null
+++ b/backends/gdx-backend-robovm/.settings/org.eclipse.jdt.core.prefs
@@ -0,0 +1,11 @@
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.7
+org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
+org.eclipse.jdt.core.compiler.compliance=1.7
+org.eclipse.jdt.core.compiler.debug.lineNumber=generate
+org.eclipse.jdt.core.compiler.debug.localVariable=generate
+org.eclipse.jdt.core.compiler.debug.sourceFile=generate
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.source=1.7
diff --git a/backends/gdx-backend-robovm/libs/robovm-cocoatouch-sources.jar b/backends/gdx-backend-robovm/libs/robovm-cocoatouch-sources.jar
new file mode 100644
index 0000000..de7d1f3
Binary files /dev/null and b/backends/gdx-backend-robovm/libs/robovm-cocoatouch-sources.jar differ
diff --git a/backends/gdx-backend-robovm/libs/robovm-cocoatouch.jar b/backends/gdx-backend-robovm/libs/robovm-cocoatouch.jar
new file mode 100644
index 0000000..927ed4b
Binary files /dev/null and b/backends/gdx-backend-robovm/libs/robovm-cocoatouch.jar differ
diff --git a/backends/gdx-backend-robovm/libs/robovm-objc-sources.jar b/backends/gdx-backend-robovm/libs/robovm-objc-sources.jar
new file mode 100644
index 0000000..bf45ea9
Binary files /dev/null and b/backends/gdx-backend-robovm/libs/robovm-objc-sources.jar differ
diff --git a/backends/gdx-backend-robovm/libs/robovm-objc.jar b/backends/gdx-backend-robovm/libs/robovm-objc.jar
new file mode 100644
index 0000000..537a0ef
Binary files /dev/null and b/backends/gdx-backend-robovm/libs/robovm-objc.jar differ
diff --git a/backends/gdx-backend-robovm/libs/robovm-rt-sources.jar b/backends/gdx-backend-robovm/libs/robovm-rt-sources.jar
new file mode 100644
index 0000000..af1862c
Binary files /dev/null and b/backends/gdx-backend-robovm/libs/robovm-rt-sources.jar differ
diff --git a/backends/gdx-backend-robovm/libs/robovm-rt.jar b/backends/gdx-backend-robovm/libs/robovm-rt.jar
new file mode 100644
index 0000000..faf0056
Binary files /dev/null and b/backends/gdx-backend-robovm/libs/robovm-rt.jar differ
diff --git a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java
new file mode 100644
index 0000000..1ca004e
--- /dev/null
+++ b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java
@@ -0,0 +1,395 @@
+package com.badlogic.gdx.backends.iosrobovm;
+
+import java.io.File;
+
+import org.robovm.cocoatouch.coregraphics.CGSize;
+import org.robovm.cocoatouch.foundation.NSDictionary;
+import org.robovm.cocoatouch.foundation.NSMutableDictionary;
+import org.robovm.cocoatouch.uikit.UIApplication;
+import org.robovm.cocoatouch.uikit.UIApplicationDelegate;
+import org.robovm.cocoatouch.uikit.UIDevice;
+import org.robovm.cocoatouch.uikit.UIInterfaceOrientation;
+import org.robovm.cocoatouch.uikit.UIScreen;
+import org.robovm.cocoatouch.uikit.UIUserInterfaceIdiom;
+import org.robovm.cocoatouch.uikit.UIViewController;
+import org.robovm.cocoatouch.uikit.UIWindow;
+
+import com.badlogic.gdx.Application;
+import com.badlogic.gdx.ApplicationListener;
+import com.badlogic.gdx.Audio;
+import com.badlogic.gdx.Files;
+import com.badlogic.gdx.Gdx;
+import com.badlogic.gdx.Graphics;
+import com.badlogic.gdx.Input;
+import com.badlogic.gdx.LifecycleListener;
+import com.badlogic.gdx.Net;
+import com.badlogic.gdx.Preferences;
+import com.badlogic.gdx.graphics.GL20;
+import com.badlogic.gdx.utils.Array;
+import com.badlogic.gdx.utils.Clipboard;
+
+public class IOSApplication implements Application {
+	
+	public static abstract class Delegate extends UIApplicationDelegate.Adapter {
+		private IOSApplication app;
+		
+		protected abstract IOSApplication createApplication();
+
+		@Override
+		public boolean didFinishLaunching (UIApplication application, NSDictionary launchOptions) {
+			application.addStrongRef(this); // Prevent this from being GCed until the ObjC UIApplication is deallocated
+			this.app = createApplication();
+			return app.didFinishLaunching(application, launchOptions);
+		}
+
+		@Override
+		public void didBecomeActive (UIApplication application) {
+			app.didBecomeActive(application);
+		}
+		
+		@Override
+		public void willResignActive (UIApplication application) {
+			app.willResignActive(application);
+		}
+
+		@Override
+		public void willTerminate (UIApplication application) {
+			app.willTerminate(application);
+		}
+	}
+	
+	UIApplication uiApp;
+	UIWindow uiWindow;
+	ApplicationListener listener;
+	IOSApplicationConfiguration config;
+	IOSGraphics graphics;
+	IOSAudio audio;
+	IOSFiles files;
+	IOSInput input;
+	IOSNet net;
+	int logLevel = Application.LOG_DEBUG;
+
+	/** The display scale factor (1.0f for normal; 2.0f to use retina coordinates/dimensions). */
+	float displayScaleFactor;
+
+	Array<Runnable> runnables = new Array<Runnable>();
+	Array<Runnable> executedRunnables = new Array<Runnable>();
+	Array<LifecycleListener> lifecycleListeners = new Array<LifecycleListener>();
+
+	public IOSApplication (ApplicationListener listener, IOSApplicationConfiguration config) {
+		this.listener = listener;
+		this.config = config;
+	}
+	
+	final boolean didFinishLaunching (UIApplication uiApp, NSDictionary options) {
+		Gdx.app = this;
+		this.uiApp = uiApp;
+
+		// enable or disable screen dimming
+		UIApplication.getSharedApplication().setIdleTimerDisabled(config.preventScreenDimming);
+
+		// fix the scale factor if we have a retina device (NOTE: iOS screen sizes are in "points" not pixels by default!)
+		if (UIScreen.getMainScreen().getScale() == 2.0f) {
+			// we have a retina device!
+			if (UIDevice.getCurrentDevice().getUserInterfaceIdiom() == UIUserInterfaceIdiom.Pad) {
+				// it's an iPad!
+				displayScaleFactor = config.displayScaleLargeScreenIfRetina * 2.0f;
+			} else {
+				// it's an iPod or iPhone
+				displayScaleFactor = config.displayScaleSmallScreenIfRetina * 2.0f;
+			}
+		} 
+		else {
+			// no retina screen: no scaling!
+			if (UIDevice.getCurrentDevice().getUserInterfaceIdiom() == UIUserInterfaceIdiom.Pad) {
+				// it's an iPad!
+				displayScaleFactor = config.displayScaleLargeScreenIfNonRetina;
+			} else {
+				// it's an iPod or iPhone
+				displayScaleFactor = config.displayScaleSmallScreenIfNonRetina;
+			}
+		}
+
+		GL20 gl20 = new IOSGLES20();
+		
+		Gdx.gl = gl20;
+		Gdx.gl20 = gl20;
+		
+		// setup libgdx
+		this.input = new IOSInput(this);
+		this.graphics = new IOSGraphics(getBounds(null), this, input, gl20);
+		this.files = new IOSFiles();
+		this.audio = new IOSAudio();
+		this.net = new IOSNet(this);
+
+		Gdx.files = this.files;
+		Gdx.graphics = this.graphics;
+		Gdx.audio = this.audio;
+		Gdx.input = this.input;
+		Gdx.net = this.net;
+
+		this.input.setupPeripherals();
+
+		this.uiWindow = new UIWindow(UIScreen.getMainScreen().getBounds());
+		this.uiWindow.setRootViewController(this.graphics.viewController);
+		this.uiWindow.makeKeyAndVisible();
+		Gdx.app.debug("IOSApplication", "created");
+		return true;
+	}
+	
+	/**
+	 * Return the UI view controller of IOSApplication
+	 * @return the view controller of IOSApplication
+	 */
+	public UIViewController getUIViewController(){
+		return graphics.viewController;
+	}
+
+	/** Returns our real display dimension based on screen orientation.
+	 * 
+	 * @param viewController The view controller.
+	 * @return Or real display dimension. */
+	CGSize getBounds (UIViewController viewController) {
+		// or screen size (always portrait)
+		CGSize bounds = UIScreen.getMainScreen().getBounds().size();
+
+		// determine orientation and resulting width + height
+		UIInterfaceOrientation orientation = viewController != null 
+			? viewController.getInterfaceOrientation() : uiApp.getStatusBarOrientation();
+		int width;
+		int height;
+		switch (orientation) {
+		case LandscapeLeft:
+		case LandscapeRight:
+			height = (int)bounds.width();
+			width = (int)bounds.height();
+			break;
+		default:
+			// assume portrait
+			width = (int)bounds.width();
+			height = (int)bounds.height();
+		}
+
+		// update width/height depending on display scaling selected 
+		width *= displayScaleFactor;
+		height *= displayScaleFactor;
+
+		// log screen dimensions
+		Gdx.app.debug("IOSApplication", "View: " + orientation.toString() + " " + width + "x" + height);
+
+		// return resulting view size (based on orientation)
+		return new CGSize(width, height);
+	}
+
+	final void didBecomeActive (UIApplication uiApp) {
+		Gdx.app.debug("IOSApplication", "resumed");
+		if (config.useObjectAL)
+		{
+			// workaround for ObjectAL crash problem
+			// see: https://groups.google.com/forum/?fromgroups=#!topic/objectal-for-iphone/ubRWltp_i1Q
+//			OALAudioSession.sharedInstance().forceEndInterrupt();
+		}
+		graphics.makeCurrent();
+		graphics.resume();
+	}
+
+	final void willResignActive (UIApplication uiApp) {
+		Gdx.app.debug("IOSApplication", "paused");
+		graphics.makeCurrent();
+		graphics.pause();
+		Gdx.gl.glFlush();
+	}
+
+	final void willTerminate (UIApplication uiApp) {
+		Gdx.app.debug("IOSApplication", "disposed");
+		graphics.makeCurrent();
+		Array<LifecycleListener> listeners = lifecycleListeners;
+		synchronized(listeners) {
+			for(LifecycleListener listener: listeners) {
+				listener.pause();
+			}
+		}
+		listener.dispose();
+		Gdx.gl.glFlush();
+	}
+
+	@Override
+	public ApplicationListener getApplicationListener () {
+		return listener;
+	}
+	
+	@Override
+	public Graphics getGraphics () {
+		return graphics;
+	}
+
+	@Override
+	public Audio getAudio () {
+		return audio;
+	}
+
+	@Override
+	public Input getInput () {
+		return input;
+	}
+
+	@Override
+	public Files getFiles () {
+		return files;
+	}
+
+	@Override
+	public Net getNet () {
+		return net;
+	}
+
+	@Override
+	public void log (String tag, String message) {
+		if (logLevel > LOG_NONE) {
+			System.out.println("[info] " + tag + ": " + message);
+		}
+	}
+
+	@Override
+	public void log (String tag, String message, Exception exception) {
+		if (logLevel > LOG_NONE) {
+			System.out.println("[info] " + tag + ": " + message);
+			exception.printStackTrace();
+		}
+	}
+
+	@Override
+	public void error (String tag, String message) {
+		if (logLevel >= LOG_ERROR) {
+			System.out.println("[error] " + tag + ": " + message);
+		}
+	}
+
+	@Override
+	public void error (String tag, String message, Throwable exception) {
+		if (logLevel >= LOG_ERROR) {
+			System.out.println("[error] " + tag + ": " + message);
+			exception.printStackTrace();
+		}
+	}
+
+	@Override
+	public void debug (String tag, String message) {
+		if (logLevel >= LOG_DEBUG) {
+			System.out.println("[debug] " + tag + ": " + message);
+		}
+	}
+
+	@Override
+	public void debug (String tag, String message, Throwable exception) {
+		if (logLevel >= LOG_DEBUG) {
+			System.out.println("[error] " + tag + ": " + message);
+			exception.printStackTrace();
+		}
+	}
+
+	@Override
+	public void setLogLevel (int logLevel) {
+		this.logLevel = logLevel;
+	}
+
+	@Override
+	public ApplicationType getType () {
+		return ApplicationType.iOS;
+	}
+
+	@Override
+	public int getVersion () {
+		// FIXME return iOS version
+		return 0;
+	}
+
+	@Override
+	public long getJavaHeap () {
+		// FIXME check what mono offers
+		return 0;
+	}
+
+	@Override
+	public long getNativeHeap () {
+		// FIXME check what mono offers
+		return 0;
+	}
+
+	@Override
+	public Preferences getPreferences (String name) {
+		File libraryPath = new File(System.getenv("HOME"), "Library");
+		String finalPath = new File(libraryPath, name + ".plist").getAbsolutePath();
+		
+		Gdx.app.debug("IOSApplication", "Loading NSDictionary from file " + finalPath);
+		NSMutableDictionary nsDictionary = NSMutableDictionary.fromFile(finalPath);
+
+		// if it fails to get an existing dictionary, create a new one.
+		if (nsDictionary == null) {
+			Gdx.app.debug("IOSApplication", "NSDictionary not found, creating a new one");
+			nsDictionary = new NSMutableDictionary();
+			boolean fileWritten = nsDictionary.writeToFile(finalPath, false);
+			if (fileWritten)
+				Gdx.app.debug("IOSApplication", "NSDictionary file written");
+			else 
+				Gdx.app.debug("IOSApplication", "Failed to write NSDictionary to file " + finalPath);
+		}
+		return new IOSPreferences(nsDictionary, finalPath);
+	}
+
+	@Override
+	public void postRunnable (Runnable runnable) {
+		synchronized (runnables) {
+			runnables.add(runnable);
+		}
+	}
+
+	public void processRunnables () {
+		synchronized (runnables) {
+			executedRunnables.clear();
+			executedRunnables.addAll(runnables);
+			runnables.clear();
+		}
+		for (int i = 0; i < executedRunnables.size; i++) {
+			try {
+				executedRunnables.get(i).run();
+			} catch (Throwable t) {
+				t.printStackTrace();
+			}
+		}
+	}
+
+	@Override
+	public void exit () {
+		System.exit(0);
+	}
+
+	@Override
+	public Clipboard getClipboard () {
+		// FIXME implement clipboard
+		return new Clipboard() {
+			@Override
+			public void setContents (String content) {
+			}
+
+			@Override
+			public String getContents () {
+				return null;
+			}
+		};
+	}
+	
+	@Override
+	public void addLifecycleListener (LifecycleListener listener) {
+		synchronized(lifecycleListeners) {
+			lifecycleListeners.add(listener);
+		}
+	}
+
+	@Override
+	public void removeLifecycleListener (LifecycleListener listener) {
+		synchronized(lifecycleListeners) {
+			lifecycleListeners.removeValue(listener, true);
+		}		
+	}
+}
\ No newline at end of file
diff --git a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplicationConfiguration.java b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplicationConfiguration.java
new file mode 100644
index 0000000..27f3db7
--- /dev/null
+++ b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplicationConfiguration.java
@@ -0,0 +1,62 @@
+package com.badlogic.gdx.backends.iosrobovm;
+
+public class IOSApplicationConfiguration {
+	// FIXME add compass, framebuffer bit depth, stencil, just like on Android if possible
+	/** whether to enable screen dimming. */
+	public boolean preventScreenDimming = true;
+	/** whether or not portrait orientation is supported. */
+	public boolean orientationPortrait = true;
+	/** whether or not landscape orientation is supported. */
+	public boolean orientationLandscape = true;
+	
+	/**
+	 * Scale factor to use on large screens  with retina display, i.e. iPad 3+ (has no effect on non-retina screens).
+	 * <ul>
+	 *   <li>1.0 = no scaling (everything is in pixels)
+	 *   <li>0.5 = LibGDX will behave as you would only have half the pixels. I.e. instead of 2048x1536 you 
+	 *       will work in 1024x768. This looks pixel perfect and will save you the trouble to create bigger
+	 *       graphics for the retina display. 
+	 *   <li>any other value: scales the screens according to your scale factor. A scale factor
+	 *       oof 0.75, 0.8, 1.2, 1.5 etc. works very well without any artifacts! 
+	 * </ul>
+    */
+	public float displayScaleLargeScreenIfRetina = 1.0f;
+	/**
+	 * Scale factor to use on small screens with retina display, i.e. iPhone 4+, iPod 4+ (has no effect on non-retina screens).
+	 * <ul>
+	 *   <li>1.0 = no scaling (everything is in pixels)
+	 *   <li>0.5 = LibGDX will behave as you would only have half the pixels. I.e. instead of 960x640 you 
+	 *       will work in 480x320. This looks pixel perfect and will save you the trouble to create bigger
+	 *       graphics for the retina display. 
+	 *   <li>any other value: scales the screens according to your scale factor. A scale factor
+	 *       of 0.75, 0.8, 1.2, 1.5 etc. works very well without any artifacts! 
+	 * </ul>
+    */
+	public float displayScaleSmallScreenIfRetina = 1.0f;
+	/**
+	 * Scale factor to use on large screens  without retina display, i.e. iPad 1+2 (has no effect on retina screens).
+	 * <ul>
+	 *   <li>1.0 = no scaling (everything is in pixels)
+	 *   <li>any other value: scales the screens according to your scale factor. A scale factor
+	 *       of 0.75, 0.8, 1.2, 1.5 etc. works very well without any artifacts! 
+	 * </ul>
+    */
+	public float displayScaleLargeScreenIfNonRetina = 1.0f;
+	/**
+	 * Scale factor to use on small screens without retina display, i.e. iPhone 1-3, iPod 1-3 (has no effect on retina screens).
+	 * <ul>
+	 *   <li>1.0 = no scaling (everything is in pixels)
+	 *   <li>any other value: scales the screens according to your scale factor. A scale factor
+	 *       of 0.75, 0.8, 1.2, 1.5 etc. works very well without any artifacts! 
+	 * </ul>
+    */
+	public float displayScaleSmallScreenIfNonRetina = 1.0f;
+	
+	/** whether to use the accelerometer **/
+	public boolean useAccelerometer = true;
+	/** the update interval to poll the accelerometer with, in seconds **/
+	public float accelerometerUpdate = 0.05f;
+	
+	/** whether to use ObjectAL for sound implementation or not.  */
+	public boolean useObjectAL = true;
+}
\ No newline at end of file
diff --git a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSAudio.java b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSAudio.java
new file mode 100644
index 0000000..5f580be
--- /dev/null
+++ b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSAudio.java
@@ -0,0 +1,38 @@
+package com.badlogic.gdx.backends.iosrobovm;
+
+import com.badlogic.gdx.Audio;
+import com.badlogic.gdx.Gdx;
+import com.badlogic.gdx.audio.AudioDevice;
+import com.badlogic.gdx.audio.AudioRecorder;
+import com.badlogic.gdx.audio.Music;
+import com.badlogic.gdx.audio.Sound;
+import com.badlogic.gdx.files.FileHandle;
+import com.badlogic.gdx.utils.GdxRuntimeException;
+
+public class IOSAudio implements Audio {
+
+	@Override
+	public AudioDevice newAudioDevice (int samplingRate, boolean isMono) {
+		// TODO Auto-generated method stub
+		return null;
+	}
+
+	@Override
+	public AudioRecorder newAudioRecorder (int samplingRate, boolean isMono) {
+		// TODO Auto-generated method stub
+		return null;
+	}
+
+	@Override
+	public Sound newSound (FileHandle fileHandle) {
+		// TODO Auto-generated method stub
+		return new IOSSound();
+	}
+
+	@Override
+	public Music newMusic (FileHandle file) {
+		// TODO Auto-generated method stub
+		return new IOSMusic();
+	}
+
+}
\ No newline at end of file
diff --git a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSFileHandle.java b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSFileHandle.java
new file mode 100644
index 0000000..0cf0072
--- /dev/null
+++ b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSFileHandle.java
@@ -0,0 +1,39 @@
+package com.badlogic.gdx.backends.iosrobovm;
+
+import java.io.File;
+
+import com.badlogic.gdx.Files.FileType;
+import com.badlogic.gdx.files.FileHandle;
+import com.badlogic.gdx.utils.GdxRuntimeException;
+
+public class IOSFileHandle extends FileHandle {
+	protected IOSFileHandle (String fileName, FileType type) {
+		super(fileName, type);
+	}
+
+	protected IOSFileHandle (File file, FileType type) {
+		super(file, type);
+	}
+
+	public FileHandle child (String name) {
+		if (file.getPath().length() == 0) return new IOSFileHandle(new File(name), type);
+		return new IOSFileHandle(new File(file, name), type);
+	}
+
+	public FileHandle parent () {
+		File parent = file.getParentFile();
+		if (parent == null) {
+			if (type == FileType.Absolute)
+				parent = new File("/");
+			else
+				parent = new File("");
+		}
+		return new IOSFileHandle(parent, type);
+	}
+
+	public File file () {
+		if (type == FileType.External) return new File(IOSFiles.externalPath, file.getPath());
+		if (type == FileType.Local) return new File(IOSFiles.localPath, file.getPath());
+		return file;
+	}
+}
\ No newline at end of file
diff --git a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSFiles.java b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSFiles.java
new file mode 100644
index 0000000..79846a2
--- /dev/null
+++ b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSFiles.java
@@ -0,0 +1,73 @@
+package com.badlogic.gdx.backends.iosrobovm;
+
+import java.io.File;
+
+import org.robovm.cocoatouch.foundation.NSBundle;
+
+import com.badlogic.gdx.Files;
+import com.badlogic.gdx.files.FileHandle;
+import com.badlogic.gdx.utils.GdxRuntimeException;
+
+public class IOSFiles implements Files {
+	// TODO: Use NSSearchPathForDirectoriesInDomains instead?
+	// $HOME should point to the app root dir.
+	static final String appDir = System.getenv("HOME");
+	static final String externalPath = appDir + "/Documents";
+	static final String localPath = appDir + "/Library/local";
+	static final String internalPath = NSBundle.getMainBundle().getBundlePath();
+	
+	public IOSFiles() {
+		new FileHandle(externalPath).mkdirs();
+		new FileHandle(localPath).mkdirs();
+	}
+	
+	@Override
+	public FileHandle getFileHandle (String fileName, FileType type) {
+		return new IOSFileHandle(fileName, type);
+	}
+
+	@Override
+	public FileHandle classpath (String path) {
+		return new IOSFileHandle(path, FileType.Classpath);
+	}
+
+	@Override
+	public FileHandle internal (String path) {
+		return new IOSFileHandle(new File(internalPath, path), FileType.Internal);
+	}
+
+	@Override
+	public FileHandle external (String path) {
+		return new IOSFileHandle(path, FileType.External);
+	}
+
+	@Override
+	public FileHandle absolute (String path) {
+		return new IOSFileHandle(path, FileType.Absolute);
+	}
+
+	@Override
+	public FileHandle local (String path) {
+		return new IOSFileHandle(path, FileType.Local);
+	}
+
+	@Override
+	public String getExternalStoragePath() {
+		return externalPath;
+	}
+
+	@Override
+	public boolean isExternalStorageAvailable() {
+		return true;
+	}
+
+	@Override
+	public String getLocalStoragePath() {
+		return localPath;
+	}
+
+	@Override
+	public boolean isLocalStorageAvailable() {
+		return true;
+	}
+}
\ No newline at end of file
diff --git a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSGLES20.java b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSGLES20.java
new file mode 100644
index 0000000..7f283c9
--- /dev/null
+++ b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSGLES20.java
@@ -0,0 +1,307 @@
+package com.badlogic.gdx.backends.iosrobovm;
+
+import java.nio.Buffer;
+import java.nio.FloatBuffer;
+import java.nio.IntBuffer;
+
+import com.badlogic.gdx.Gdx;
+import com.badlogic.gdx.graphics.GL20;
+import com.badlogic.gdx.graphics.GLCommon;
+
+
+public class IOSGLES20 implements GL20, GLCommon
+{	
+	public IOSGLES20() {
+		init();
+	}
+	
+	private static native void init( );	
+	
+	public native void glActiveTexture ( int texture );
+
+	public native void glAttachShader ( int program, int shader );
+
+	public native void glBindAttribLocation ( int program, int index, String name );
+
+	public native void glBindBuffer ( int target, int buffer );
+
+	public native void glBindFramebuffer ( int target, int framebuffer );
+
+	public native void glBindRenderbuffer ( int target, int renderbuffer );
+
+	public native void glBindTexture ( int target, int texture );
+
+	public native void glBlendColor ( float red, float green, float blue, float alpha );
+
+	public native void glBlendEquation (  int mode  );
+
+	public native void glBlendEquationSeparate ( int modeRGB, int modeAlpha );
+
+	public native void glBlendFunc ( int sfactor, int dfactor );
+
+	public native void glBlendFuncSeparate ( int srcRGB, int dstRGB, int srcAlpha, int dstAlpha );
+
+	public native void glBufferData ( int target, int size, Buffer data, int usage );
+
+	public native void glBufferSubData ( int target, int offset, int size, Buffer data );
+
+	public native int glCheckFramebufferStatus ( int target );
+
+	public native void glClear ( int mask );
+
+	public native void glClearColor ( float red, float green, float blue, float alpha );
+
+	public native void glClearDepthf ( float depth );
+
+	public native void glClearStencil ( int s );
+
+	public native void glColorMask ( boolean red, boolean green, boolean blue, boolean alpha );
+
+	public native void glCompileShader ( int shader );
+
+	public native void glCompressedTexImage2D ( int target, int level, int internalformat, int width, int height, int border, int imageSize, Buffer data );
+
+	public native void glCompressedTexSubImage2D ( int target, int level, int xoffset, int yoffset, int width, int height, int format, int imageSize, Buffer data );
+
+	public native void glCopyTexImage2D ( int target, int level, int internalformat, int x, int y, int width, int height, int border );
+
+	public native void glCopyTexSubImage2D ( int target, int level, int xoffset, int yoffset, int x, int y, int width, int height );
+
+	public native int glCreateProgram (  );
+
+	public native int glCreateShader ( int type );
+
+	public native void glCullFace ( int mode );
+
+	public native void glDeleteBuffers ( int n, IntBuffer buffers );
+
+	public native void glDeleteFramebuffers ( int n, IntBuffer framebuffers );
+
+	public native void glDeleteProgram ( int program );
+
+	public native void glDeleteRenderbuffers ( int n, IntBuffer renderbuffers );
+
+	public native void glDeleteShader ( int shader );
+
+	public native void glDeleteTextures ( int n, IntBuffer textures );
+
+	public native void glDepthFunc ( int func );
+
+	public native void glDepthMask ( boolean flag );
+
+	public native void glDepthRangef ( float zNear, float zFar );
+
+	public native void glDetachShader ( int program, int shader );
+
+	public native void glDisable ( int cap );
+
+	public native void glDisableVertexAttribArray ( int index );
+
+	public native void glDrawArrays ( int mode, int first, int count );
+
+	public native void glDrawElements ( int mode, int count, int type, Buffer indices );
+	
+	public native void glDrawElements ( int mode, int count, int type, int indices );
+
+	public native void glEnable ( int cap );
+
+	public native void glEnableVertexAttribArray ( int index );
+
+	public native void glFinish (  );
+
+	public native void glFlush (  );
+
+	public native void glFramebufferRenderbuffer ( int target, int attachment, int renderbuffertarget, int renderbuffer );
+
+	public native void glFramebufferTexture2D ( int target, int attachment, int textarget, int texture, int level );
+
+	public native void glFrontFace ( int mode );
+
+	public native void glGenBuffers ( int n, IntBuffer buffers );
+
+	public native void glGenerateMipmap ( int target );
+
+	public native void glGenFramebuffers ( int n, IntBuffer framebuffers );
+
+	public native void glGenRenderbuffers ( int n, IntBuffer renderbuffers );
+
+	public native void glGenTextures ( int n, IntBuffer textures );
+
+	public native String glGetActiveAttrib ( int program, int index, IntBuffer size, Buffer type );
+
+	public native String glGetActiveUniform ( int program, int index, IntBuffer size, Buffer type );
+
+	public native void glGetAttachedShaders ( int program, int maxcount, Buffer count, IntBuffer shaders );
+
+	public native int glGetAttribLocation ( int program, String name );
+
+	public native void glGetBooleanv ( int pname, Buffer params );
+
+	public native void glGetBufferParameteriv ( int target, int pname, IntBuffer params );
+
+	public native int glGetError (  );
+
+	public native void glGetFloatv ( int pname, FloatBuffer params );
+
+	public native void glGetFramebufferAttachmentParameteriv ( int target, int attachment, int pname, IntBuffer params );
+
+	public native void glGetIntegerv ( int pname, IntBuffer params );
+
+	public native void glGetProgramiv ( int program, int pname, IntBuffer params );
+
+	public native String glGetProgramInfoLog ( int program );
+
+	public native void glGetRenderbufferParameteriv ( int target, int pname, IntBuffer params );
+
+	public native void glGetShaderiv ( int shader, int pname, IntBuffer params );
+
+	public native String glGetShaderInfoLog ( int shader );
+
+	public native void glGetShaderPrecisionFormat ( int shadertype, int precisiontype, IntBuffer range, IntBuffer precision );
+
+	public native void glGetShaderSource ( int shader, int bufsize, Buffer length, String source );
+
+	public native String glGetString ( int name );
+
+	public native void glGetTexParameterfv ( int target, int pname, FloatBuffer params );
+
+	public native void glGetTexParameteriv ( int target, int pname, IntBuffer params );
+
+	public native void glGetUniformfv ( int program, int location, FloatBuffer params );
+
+	public native void glGetUniformiv ( int program, int location, IntBuffer params );
+
+	public native int glGetUniformLocation ( int program, String name );
+
+	public native void glGetVertexAttribfv ( int index, int pname, FloatBuffer params );
+
+	public native void glGetVertexAttribiv ( int index, int pname, IntBuffer params );
+
+	public native void glGetVertexAttribPointerv ( int index, int pname, Buffer pointer );
+
+	public native void glHint ( int target, int mode );
+
+	public native boolean glIsBuffer ( int buffer );
+
+	public native boolean glIsEnabled ( int cap );
+
+	public native boolean glIsFramebuffer ( int framebuffer );
+
+	public native boolean glIsProgram ( int program );
+
+	public native boolean glIsRenderbuffer ( int renderbuffer );
+
+	public native boolean glIsShader ( int shader );
+
+	public native boolean glIsTexture ( int texture );
+
+	public native void glLineWidth ( float width );
+
+	public native void glLinkProgram ( int program );
+
+	public native void glPixelStorei ( int pname, int param );
+
+	public native void glPolygonOffset ( float factor, float units );
+
+	public native void glReadPixels ( int x, int y, int width, int height, int format, int type, Buffer pixels );
+
+	public native void glReleaseShaderCompiler (  );
+
+	public native void glRenderbufferStorage ( int target, int internalformat, int width, int height );
+
+	public native void glSampleCoverage ( float value, boolean invert );
+
+	public native void glScissor ( int x, int y, int width, int height );
+
+	public native void glShaderBinary ( int n, IntBuffer shaders, int binaryformat, Buffer binary, int length );
+
+	public native void glShaderSource ( int shader, String string );
+
+	public native void glStencilFunc ( int func, int ref, int mask );
+
+	public native void glStencilFuncSeparate ( int face, int func, int ref, int mask );
+
+	public native void glStencilMask ( int mask );
+
+	public native void glStencilMaskSeparate ( int face, int mask );
+
+	public native void glStencilOp ( int fail, int zfail, int zpass );
+
+	public native void glStencilOpSeparate ( int face, int fail, int zfail, int zpass );
+
+	public native void glTexImage2D ( int target, int level, int internalformat, int width, int height, int border, int format, int type, Buffer pixels );
+
+	public native void glTexParameterf ( int target, int pname, float param );
+
+	public native void glTexParameterfv ( int target, int pname, FloatBuffer params );
+
+	public native void glTexParameteri ( int target, int pname, int param );
+
+	public native void glTexParameteriv ( int target, int pname, IntBuffer params );
+
+	public native void glTexSubImage2D ( int target, int level, int xoffset, int yoffset, int width, int height, int format, int type, Buffer pixels );
+
+	public native void glUniform1f ( int location, float x );
+
+	public native void glUniform1fv ( int location, int count, FloatBuffer v );
+
+	public native void glUniform1i ( int location, int x );
+
+	public native void glUniform1iv ( int location, int count, IntBuffer v );
+
+	public native void glUniform2f ( int location, float x, float y );
+
+	public native void glUniform2fv ( int location, int count, FloatBuffer v );
+
+	public native void glUniform2i ( int location, int x, int y );
+
+	public native void glUniform2iv ( int location, int count, IntBuffer v );
+
+	public native void glUniform3f ( int location, float x, float y, float z );
+
+	public native void glUniform3fv ( int location, int count, FloatBuffer v );
+
+	public native void glUniform3i ( int location, int x, int y, int z );
+
+	public native void glUniform3iv ( int location, int count, IntBuffer v );
+
+	public native void glUniform4f ( int location, float x, float y, float z, float w );
+
+	public native void glUniform4fv ( int location, int count, FloatBuffer v );
+
+	public native void glUniform4i ( int location, int x, int y, int z, int w );
+
+	public native void glUniform4iv ( int location, int count, IntBuffer v );
+
+	public native void glUniformMatrix2fv ( int location, int count, boolean transpose, FloatBuffer value );
+
+	public native void glUniformMatrix3fv ( int location, int count, boolean transpose, FloatBuffer value );
+
+	public native void glUniformMatrix4fv ( int location, int count, boolean transpose, FloatBuffer value );
+
+	public native void glUseProgram ( int program );
+
+	public native void glValidateProgram ( int program );
+
+	public native void glVertexAttrib1f ( int indx, float x );
+
+	public native void glVertexAttrib1fv ( int indx, FloatBuffer values );
+
+	public native void glVertexAttrib2f ( int indx, float x, float y );
+
+	public native void glVertexAttrib2fv ( int indx, FloatBuffer values );
+
+	public native void glVertexAttrib3f ( int indx, float x, float y, float z );
+
+	public native void glVertexAttrib3fv ( int indx, FloatBuffer values );
+
+	public native void glVertexAttrib4f ( int indx, float x, float y, float z, float w );
+
+	public native void glVertexAttrib4fv ( int indx, FloatBuffer values );
+
+	public native void glVertexAttribPointer ( int indx, int size, int type, boolean normalized, int stride, Buffer ptr );
+	
+	public native void glVertexAttribPointer ( int indx, int size, int type, boolean normalized, int stride, int ptr );
+
+	public native void glViewport ( int x, int y, int width, int height );
+}
\ No newline at end of file
diff --git a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSGraphics.java b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSGraphics.java
new file mode 100644
index 0000000..20bfe43
--- /dev/null
+++ b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSGraphics.java
@@ -0,0 +1,464 @@
+package com.badlogic.gdx.backends.iosrobovm;
+
+import org.robovm.cocoatouch.coregraphics.CGPoint;
+import org.robovm.cocoatouch.coregraphics.CGRect;
+import org.robovm.cocoatouch.coregraphics.CGSize;
+import org.robovm.cocoatouch.foundation.NSObject;
+import org.robovm.cocoatouch.foundation.NSSet;
+import org.robovm.cocoatouch.glkit.GLKView;
+import org.robovm.cocoatouch.glkit.GLKViewController;
+import org.robovm.cocoatouch.glkit.GLKViewControllerDelegate;
+import org.robovm.cocoatouch.glkit.GLKViewDelegate;
+import org.robovm.cocoatouch.glkit.GLKViewDrawableColorFormat;
+import org.robovm.cocoatouch.opengles.EAGLContext;
+import org.robovm.cocoatouch.opengles.EAGLRenderingAPI;
+import org.robovm.cocoatouch.uikit.UIDevice;
+import org.robovm.cocoatouch.uikit.UIEvent;
+import org.robovm.cocoatouch.uikit.UIInterfaceOrientation;
+import org.robovm.cocoatouch.uikit.UIScreen;
+import org.robovm.cocoatouch.uikit.UIUserInterfaceIdiom;
+import org.robovm.objc.Selector;
+import org.robovm.objc.annotation.BindSelector;
+import org.robovm.rt.bro.annotation.Callback;
+
+import com.badlogic.gdx.Gdx;
+import com.badlogic.gdx.Graphics;
+import com.badlogic.gdx.LifecycleListener;
+import com.badlogic.gdx.graphics.GL10;
+import com.badlogic.gdx.graphics.GL11;
+import com.badlogic.gdx.graphics.GL20;
+import com.badlogic.gdx.graphics.GLCommon;
+import com.badlogic.gdx.utils.Array;
+
+// FIXME add GL 1.x support by ripping Android's classes
+public class IOSGraphics extends NSObject implements Graphics, GLKViewDelegate,
+		GLKViewControllerDelegate {
+
+	private static final String tag = "IOSGraphics";
+
+	static class IOSUIViewController extends GLKViewController {
+		final IOSApplication app;
+		final IOSGraphics graphics;
+		boolean created = false;
+
+		IOSUIViewController(IOSApplication app, IOSGraphics graphics) {
+			this.app = app;
+			this.graphics = graphics;
+		}
+
+		@Override
+		public void didRotate(UIInterfaceOrientation orientation) {
+			super.didRotate(orientation);
+			// get the view size and update graphics
+			// FIXME: supporting BOTH (landscape+portrait at same time) is
+			// currently not working correctly (needs fix)
+			// FIXME screen orientation needs to be stored for
+			// Input#getNativeOrientation
+			CGSize bounds = app.getBounds(this);
+			graphics.width = (int) bounds.width();
+			graphics.height = (int) bounds.height();
+			graphics.makeCurrent(); // not sure if that's needed? badlogic: yes
+									// it is, so resize can do OpenGL stuff, not
+									// sure if
+			// it's on the correct thread though
+			app.listener.resize(graphics.width, graphics.height);
+		}
+
+		public boolean shouldAutorotateToInterfaceOrientation(
+				UIInterfaceOrientation orientation) {
+			// we return "true" if we support the orientation
+			switch (orientation) {
+			case LandscapeLeft:
+			case LandscapeRight:
+				return app.config.orientationLandscape;
+			default:
+				// assume portrait
+				return app.config.orientationPortrait;
+			}
+		}
+
+		@Callback
+		@BindSelector("shouldAutorotateToInterfaceOrientation:")
+		private static boolean shouldAutorotateToInterfaceOrientation(
+				IOSUIViewController self, Selector sel,
+				UIInterfaceOrientation orientation) {
+			return self.shouldAutorotateToInterfaceOrientation(orientation);
+		}
+	}
+
+	static class IOSUIView extends GLKView {
+
+		public IOSUIView(CGRect frame, EAGLContext context) {
+			super(frame, context);
+		}
+	}
+
+	IOSApplication app;
+	IOSInput input;
+	GL20 gl20;
+	int width;
+	int height;
+	long lastFrameTime;
+	float deltaTime;
+	long framesStart;
+	int frames;
+	int fps;
+	BufferFormat bufferFormat;
+	String extensions;
+
+	private float ppiX = 0;
+	private float ppiY = 0;
+	private float ppcX = 0;
+	private float ppcY = 0;
+	private float density = 1;
+
+	volatile boolean paused;
+	boolean wasPaused;
+
+	EAGLContext context;
+	GLKView view;
+	IOSUIViewController viewController;
+
+	public IOSGraphics(CGSize bounds, IOSApplication app, IOSInput input,
+			GL20 gl20) {
+		// setup view and OpenGL
+		width = (int) bounds.width();
+		height = (int) bounds.height();
+		app.debug(tag, bounds.width() + "x" + bounds.height() + ", "
+				+ UIScreen.getMainScreen().getScale());
+		this.gl20 = gl20;
+
+		context = new EAGLContext(EAGLRenderingAPI.OpenGLES2);
+
+		view = new GLKView(new CGRect(new CGPoint(0, 0), bounds), context) {
+			@Override
+			public void touchesBegan(NSSet touches, UIEvent event) {
+				super.touchesBegan(touches, event);
+				IOSGraphics.this.input.touchDown(touches, event);
+			}
+
+			@Override
+			public void touchesCancelled(NSSet touches, UIEvent event) {
+				super.touchesCancelled(touches, event);
+				IOSGraphics.this.input.touchUp(touches, event);
+			}
+
+			@Override
+			public void touchesEnded(NSSet touches, UIEvent event) {
+				super.touchesEnded(touches, event);
+				IOSGraphics.this.input.touchUp(touches, event);
+			}
+
+			@Override
+			public void touchesMoved(NSSet touches, UIEvent event) {
+				super.touchesMoved(touches, event);
+				IOSGraphics.this.input.touchMoved(touches, event);
+			}
+
+			@Override
+			public void draw(CGRect rect) {
+				IOSGraphics.this.draw(this, rect);
+			}
+
+		};
+		view.setDelegate(this);
+		view.setDrawableColorFormat(GLKViewDrawableColorFormat.RGB565);
+
+		viewController = new IOSUIViewController(app, this);
+		viewController.setView(view);
+		viewController.setDelegate(this);
+		viewController.setPreferredFramesPerSecond(60);
+
+		this.app = app;
+		this.input = input;
+
+		// FIXME fix this if we add rgba/depth/stencil flags to
+		// IOSApplicationConfiguration
+		bufferFormat = new BufferFormat(5, 6, 5, 0, 16, 0, 0, false);
+		this.gl20 = gl20;
+
+		// determine display density and PPI (PPI values via Wikipedia!)
+		density = 1f;
+
+		// if ((UIScreen.getMainScreen().respondsToSelector(new
+		// Selector("scale")))) {
+		float scale = UIScreen.getMainScreen().getScale();
+		app.debug(tag, "Calculating density, UIScreen.mainScreen.scale: "
+				+ scale);
+		if (scale == 2f)
+			density = 2f;
+		// }
+
+		int ppi;
+		if (UIDevice.getCurrentDevice().getUserInterfaceIdiom() == UIUserInterfaceIdiom.Pad) {
+			// iPad
+			ppi = Math.round(density * 132);
+		} else {
+			// iPhone or iPodTouch
+			ppi = Math.round(density * 163);
+		}
+		ppiX = ppi;
+		ppiY = ppi;
+		ppcX = ppiX / 2.54f;
+		ppcY = ppcY / 2.54f;
+		app.debug(tag, "Display: ppi=" + ppi + ", density=" + density);
+
+		// time + FPS
+		lastFrameTime = System.nanoTime();
+		framesStart = lastFrameTime;
+
+		paused = false;
+		wasPaused = true;
+	}
+
+	public void resume() {
+		paused = false;
+	}
+
+	public void pause() {
+		paused = true;
+	}
+
+	boolean created = false;
+	@Override
+	public void draw(GLKView view, CGRect rect) {
+		if(!created) {
+			app.graphics.makeCurrent();
+			app.listener.create();
+			created = true;
+		}
+		if (paused) {
+			if (!wasPaused) {
+				Array<LifecycleListener> listeners = app.lifecycleListeners;
+				synchronized (listeners) {
+					for (LifecycleListener listener : listeners) {
+						listener.pause();
+					}
+				}
+				app.listener.pause();
+				wasPaused = true;
+			}
+			return;
+		} else {
+			if (wasPaused) {
+				Array<LifecycleListener> listeners = app.lifecycleListeners;
+				synchronized (listeners) {
+					for (LifecycleListener listener : listeners) {
+						listener.resume();
+					}
+				}
+				app.listener.resume();
+				wasPaused = false;
+			}
+		}
+
+		long time = System.nanoTime();
+		deltaTime = (time - lastFrameTime) / 1000000000.0f;
+		lastFrameTime = time;
+
+		frames++;
+		if (time - framesStart >= 1000000000l) {
+			framesStart = time;
+			fps = frames;
+			frames = 0;
+		}
+
+		makeCurrent();
+		((IOSInput) Gdx.input).processEvents();
+		app.listener.render();
+		// SwapBuffers();
+	}
+
+	void makeCurrent() {
+		EAGLContext.setCurrentContext(context);
+	}
+
+	@Override
+	public void update(GLKViewController controller) {
+		makeCurrent();
+		app.processRunnables();
+	}
+
+	@Override
+	public void willPause(GLKViewController controller, boolean pause) {
+		if (pause) {
+			pause();
+		} else {
+			resume();
+		}
+	}
+
+	// @Override
+	// protected void OnResize (EventArgs event) {
+	// super.OnResize(event);
+	//
+	// // not used on iOS
+	// // FIXME resize could happen if app supports both portrait and landscape,
+	// so this should be implemented
+	// Gdx.app.debug("IOSGraphics",
+	// "iOS OnResize(...) is not implement (don't think it is needed?).");
+	// }
+
+	@Override
+	public boolean isGL11Available() {
+		return false;
+	}
+
+	@Override
+	public boolean isGL20Available() {
+		return true;
+	}
+
+	@Override
+	public GLCommon getGLCommon() {
+		return gl20;
+	}
+
+	@Override
+	public GL10 getGL10() {
+		return null;
+	}
+
+	@Override
+	public GL11 getGL11() {
+		return null;
+	}
+
+	@Override
+	public GL20 getGL20() {
+		return gl20;
+	}
+
+	@Override
+	public int getWidth() {
+		return width;
+	}
+
+	@Override
+	public int getHeight() {
+		return height;
+	}
+
+	@Override
+	public float getDeltaTime() {
+		return deltaTime;
+	}
+
+	@Override
+	public float getRawDeltaTime() {
+		return deltaTime;
+	}
+
+	@Override
+	public int getFramesPerSecond() {
+		return fps;
+	}
+
+	@Override
+	public GraphicsType getType() {
+		return GraphicsType.iOSGL;
+	}
+
+	@Override
+	public float getPpiX() {
+		return ppiX;
+	}
+
+	@Override
+	public float getPpiY() {
+		return ppiY;
+	}
+
+	@Override
+	public float getPpcX() {
+		return ppcX;
+	}
+
+	@Override
+	public float getPpcY() {
+		return ppcY;
+	}
+
+	/**
+	 * Returns the display density.
+	 * 
+	 * @return 1.0f for non-retina devices, 2.0f for retina devices.
+	 */
+	@Override
+	public float getDensity() {
+		return density;
+	}
+
+	@Override
+	public boolean supportsDisplayModeChange() {
+		return false;
+	}
+
+	@Override
+	public DisplayMode[] getDisplayModes() {
+		return new DisplayMode[] { getDesktopDisplayMode() };
+	}
+
+	@Override
+	public DisplayMode getDesktopDisplayMode() {
+		return new IOSDisplayMode(getWidth(), getHeight(), 60, 0);
+	}
+
+	private static class IOSDisplayMode extends DisplayMode {
+		protected IOSDisplayMode(int width, int height, int refreshRate,
+				int bitsPerPixel) {
+			super(width, height, refreshRate, bitsPerPixel);
+		}
+	}
+
+	@Override
+	public boolean setDisplayMode(DisplayMode displayMode) {
+		return false;
+	}
+
+	@Override
+	public boolean setDisplayMode(int width, int height, boolean fullscreen) {
+		return false;
+	}
+
+	@Override
+	public void setTitle(String title) {
+	}
+
+	@Override
+	public void setVSync(boolean vsync) {
+	}
+
+	@Override
+	public BufferFormat getBufferFormat() {
+		return bufferFormat;
+	}
+
+	@Override
+	public boolean supportsExtension(String extension) {
+		if (extensions == null)
+			extensions = Gdx.gl.glGetString(GL10.GL_EXTENSIONS);
+		return extensions.contains(extension);
+	}
+
+	@Override
+	public void setContinuousRendering(boolean isContinuous) {
+		// FIXME implement this if possible
+	}
+
+	@Override
+	public boolean isContinuousRendering() {
+		// FIXME implement this if possible
+		return true;
+	}
+
+	@Override
+	public void requestRendering() {
+		// FIXME implement this if possible
+	}
+
+	@Override
+	public boolean isFullscreen() {
+		return true;
+	}
+}
\ No newline at end of file
diff --git a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
new file mode 100644
index 0000000..0789691
--- /dev/null
+++ b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java
@@ -0,0 +1,424 @@
+package com.badlogic.gdx.backends.iosrobovm;
+
+import org.robovm.cocoatouch.coregraphics.CGPoint;
+import org.robovm.cocoatouch.foundation.NSArray;
+import org.robovm.cocoatouch.foundation.NSSet;
+import org.robovm.cocoatouch.uikit.UIAlertView;
+import org.robovm.cocoatouch.uikit.UIAlertViewDelegate;
+import org.robovm.cocoatouch.uikit.UIAlertViewStyle;
+import org.robovm.cocoatouch.uikit.UIEvent;
+import org.robovm.cocoatouch.uikit.UITextField;
+import org.robovm.cocoatouch.uikit.UITouch;
+import org.robovm.cocoatouch.uikit.UITouchPhase;
+import org.robovm.cocoatouch.uikit.UIView;
+import org.robovm.objc.ObjCClass;
+
+import com.badlogic.gdx.Input;
+import com.badlogic.gdx.InputProcessor;
+import com.badlogic.gdx.utils.Array;
+import com.badlogic.gdx.utils.GdxRuntimeException;
+import com.badlogic.gdx.utils.Pool;
+
+public class IOSInput implements Input {
+	static final int MAX_TOUCHES = 20;
+
+	static {
+		// HACK: Make sure UITouch has been registered
+		ObjCClass.getByType(UITouch.class);
+	}
+	
+	IOSApplication app;
+	IOSApplicationConfiguration config;
+	int[] deltaX = new int[MAX_TOUCHES];
+	int[] deltaY = new int[MAX_TOUCHES];
+	int[] touchX = new int[MAX_TOUCHES];
+	int[] touchY = new int[MAX_TOUCHES];
+	// we store the pointer to the UITouch struct here, or 0
+	int[] touchDown = new int[MAX_TOUCHES];
+	int numTouched = 0;
+	boolean justTouched = false;
+	Pool<TouchEvent> touchEventPool = new Pool<TouchEvent>() {
+		@Override
+		protected TouchEvent newObject() {
+			return new TouchEvent();
+		}
+	};
+	Array<TouchEvent> touchEvents = new Array<TouchEvent>();
+	TouchEvent currentEvent = null;
+	float[] acceleration = new float[3];
+	InputProcessor inputProcessor = null;
+	
+	public IOSInput(IOSApplication app) {
+		this.app = app;
+		this.config = app.config;
+	}
+	
+	void setupPeripherals() {
+		setupAccelerometer();
+	}
+
+	private void setupAccelerometer() {
+//		if(config.useAccelerometer) {
+//			UIAccelerometer.get_SharedAccelerometer().set_Delegate(new UIAccelerometerDelegate() {
+//
+//				@Override
+//				public void DidAccelerate(UIAccelerometer accelerometer, UIAcceleration values) {
+//					//super.DidAccelerate(accelerometer, values);
+//					// FIXME take orientation into account, these values here get flipped by iOS...
+//					acceleration[0] = (float)values.get_X() * 10;
+//					acceleration[1] = (float)values.get_Y() * 10;
+//					acceleration[2] = (float)values.get_Z() * 10;
+//				}
+//			});
+//			UIAccelerometer.get_SharedAccelerometer().set_UpdateInterval(config.accelerometerUpdate);
+//		}
+	}
+
+	@Override
+	public float getAccelerometerX() {
+		return acceleration[0];
+	}
+
+	@Override
+	public float getAccelerometerY() {
+		return acceleration[1];
+	}
+
+	@Override
+	public float getAccelerometerZ() {
+		return acceleration[2];
+	}
+
+	@Override
+	public float getAzimuth() {
+		// FIXME implement this
+		return 0;
+	}
+
+	@Override
+	public float getPitch() {
+		// FIXME implement this
+		return 0;
+	}
+
+	@Override
+	public float getRoll() {
+		// FIXME implement this
+		return 0;
+	}
+
+	@Override
+	public void getRotationMatrix(float[] matrix) {
+		// FIXME implement this
+	}
+
+	@Override
+	public int getX() {
+		return touchX[0];
+	}
+
+	@Override
+	public int getX(int pointer) {
+		return touchX[pointer];
+	}
+
+	@Override
+	public int getDeltaX() {
+		return deltaX[0];
+	}
+
+	@Override
+	public int getDeltaX(int pointer) {
+		return deltaX[pointer];
+	}
+
+	@Override
+	public int getY() {
+		return touchY[0];
+	}
+
+	@Override
+	public int getY(int pointer) {
+		return touchY[pointer];
+	}
+
+	@Override
+	public int getDeltaY() {
+		return deltaY[0];
+	}
+
+	@Override
+	public int getDeltaY(int pointer) {
+		return deltaY[pointer];
+	}
+
+	@Override
+	public boolean isTouched() {
+		return touchDown[0] != 0;
+	}
+
+	@Override
+	public boolean justTouched() {
+		return justTouched;
+	}
+
+	@Override
+	public boolean isTouched(int pointer) {
+		return touchDown[pointer] != 0;
+	}
+
+	@Override
+	public boolean isButtonPressed(int button) {
+		return button == Buttons.LEFT && numTouched > 0;
+	}
+
+	@Override
+	public boolean isKeyPressed(int key) {
+		return false;
+	}
+
+	@Override
+	public void getTextInput(TextInputListener listener, String title, String text) {
+		final UIAlertView uiAlertView = buildUIAlertView(listener, title, text);
+		//app.uiViewController.add(uiAlertView);
+		uiAlertView.show();
+	}
+	
+	/** Builds an {@link UIAlertView} with an added {@link UITextField} for inputting text.
+	 * @param listener Text input listener
+	 * @param title Dialog title
+	 * @param text Text for text field
+	 * @return UiAlertView */
+	private UIAlertView buildUIAlertView (final TextInputListener listener, String title, String text) {
+		UIAlertViewDelegate delegate = new UIAlertViewDelegate.Adapter() {
+			@Override
+			public void clicked (UIAlertView view, int clicked) {
+				if (clicked == 0) {
+					// user clicked "Cancel" button
+					listener.canceled();
+				} else if (clicked == 1) {
+					// user clicked "Ok" button
+					NSArray<UIView> views = view.getSubviews();
+					for (UIView uiView : views) {
+						// find text field from sub views
+						if (uiView != null && uiView instanceof UITextField) {
+							UITextField tf = (UITextField)uiView;
+							listener.input(tf.getText());
+						}
+					}
+				}
+			}
+
+			@Override
+			public void cancel (UIAlertView view) {
+				listener.canceled();
+			}
+		};
+
+		// build the view
+		final UIAlertView uiAlertView = new UIAlertView();
+		uiAlertView.setTitle(title);
+		uiAlertView.addButton("Cancel");
+		uiAlertView.addButton("Ok");
+		uiAlertView.setAlertViewStyle(UIAlertViewStyle.PlainTextInput);
+		uiAlertView.setDelegate(delegate);
+
+		for (UIView uiView : (NSArray<UIView>) uiAlertView.getSubviews()) {
+			// find text field from sub views and add default text
+			if (uiView != null && uiView instanceof UITextField) {
+				UITextField tf = (UITextField)uiView;
+				tf.setText(text);
+			}
+		}
+
+		return uiAlertView;
+	}
+
+	@Override
+	public void getPlaceholderTextInput(TextInputListener listener, String title, String placeholder) {
+		// FIXME implement this
+	}
+
+	@Override
+	public void setOnscreenKeyboardVisible(boolean visible) {
+	}
+
+	@Override
+	public void vibrate(int milliseconds) {
+		// FIXME implement this
+	}
+
+	@Override
+	public void vibrate(long[] pattern, int repeat) {
+		// FIXME implement this
+	}
+
+	@Override
+	public void cancelVibrate() {
+		// FIXME implement this
+	}
+
+	@Override
+	public long getCurrentEventTime() {
+		return currentEvent.timestamp;
+	}
+
+	@Override
+	public void setCatchBackKey(boolean catchBack) {
+	}
+
+	@Override
+	public void setCatchMenuKey(boolean catchMenu) {
+	}
+
+	@Override
+	public void setInputProcessor(InputProcessor processor) {
+		this.inputProcessor = processor;
+	}
+
+	@Override
+	public InputProcessor getInputProcessor() {
+		return inputProcessor;
+	}
+
+	@Override
+	public boolean isPeripheralAvailable(Peripheral peripheral) {
+		if(peripheral == Peripheral.Accelerometer && config.useAccelerometer) return true;
+		if(peripheral == Peripheral.MultitouchScreen) return true;
+		// FIXME implement this (not sure if possible)
+//		if(peripheral == Peripheral.OnscreenKeyboard) return true;
+		// FIXME implement this
+//		if(peripheral == Peripheral.Compass) return true;
+		
+		return false;
+	}
+
+	@Override
+	public int getRotation() {
+		// FIXME implement this
+		return 0;
+	}
+
+	@Override
+	public Orientation getNativeOrientation() {
+		// FIXME implement this
+		return null;
+	}
+
+	@Override
+	public void setCursorCatched(boolean catched) {
+	}
+
+	@Override
+	public boolean isCursorCatched() {
+		return false;
+	}
+
+	@Override
+	public void setCursorPosition(int x, int y) {
+	}
+
+	public void touchDown(NSSet touches, UIEvent event) {
+		toTouchEvents(touches, event);
+	}
+
+	public void touchUp(NSSet touches, UIEvent event) {
+		toTouchEvents(touches, event);
+	}
+
+	public void touchMoved(NSSet touches, UIEvent event) {
+		toTouchEvents(touches, event);
+	}
+	
+	void processEvents() {
+		synchronized(touchEvents) {
+			justTouched = false;
+			for(TouchEvent event: touchEvents) {
+				currentEvent = event;
+				switch(event.phase) {
+				case Began:
+					if(inputProcessor != null) inputProcessor.touchDown(event.x, event.y, event.pointer, Buttons.LEFT);
+					if(numTouched == 1)
+						justTouched = true;
+					break;
+				case Cancelled:
+				case Ended:
+					if(inputProcessor != null) inputProcessor.touchUp(event.x, event.y, event.pointer, Buttons.LEFT);
+					break;
+				case Moved:
+				case Stationary:
+					if(inputProcessor != null) inputProcessor.touchDragged(event.x, event.y, event.pointer);
+					break;
+				}
+			}
+			touchEventPool.freeAll(touchEvents);
+			touchEvents.clear();
+		}
+	}
+	
+	private int getFreePointer() {
+		for(int i = 0; i < touchDown.length; i++) {
+			if(touchDown[i] == 0) return i;
+		}
+		throw new GdxRuntimeException("Couldn't find free pointer id!");
+	}
+	
+	private int findPointer(UITouch touch) {
+		int ptr = (int) touch.getHandle();
+		for(int i = 0; i < touchDown.length; i++) {
+			if(touchDown[i] == ptr) return i;
+		}
+		throw new GdxRuntimeException("Couldn't find pointer id for touch event!");
+	}
+
+	private void toTouchEvents(NSSet touches, UIEvent uiEvent) {
+		for (UITouch touch : (NSSet<UITouch>) touches) {
+			CGPoint loc = touch.getLocation(touch.getView());
+			synchronized(touchEvents) {
+				TouchEvent event = touchEventPool.obtain();
+				event.x = (int)(loc.x() * app.displayScaleFactor);
+				event.y = (int)(loc.y() * app.displayScaleFactor);
+				event.phase = touch.getPhase();
+				event.timestamp = (long)(touch.getTimestamp() * 1000000000);
+				touchEvents.add(event);
+				
+				if(touch.getPhase() == UITouchPhase.Began) {
+					event.pointer = getFreePointer();
+					touchDown[event.pointer] = (int) touch.getHandle();
+					touchX[event.pointer] = event.x;
+					touchY[event.pointer] = event.y;
+					deltaX[event.pointer] = 0;
+					deltaY[event.pointer] = 0; 
+					numTouched++;
+				}
+				
+				if(touch.getPhase() == UITouchPhase.Moved ||
+					touch.getPhase() == UITouchPhase.Stationary) {
+					event.pointer = findPointer(touch);
+					deltaX[event.pointer] = event.x - touchX[event.pointer];
+					deltaY[event.pointer] = event.y - touchY[event.pointer]; 
+					touchX[event.pointer] = event.x;
+					touchY[event.pointer] = event.y;
+				}
+				
+				if(touch.getPhase() == UITouchPhase.Cancelled ||
+					touch.getPhase() == UITouchPhase.Ended) {
+					event.pointer = findPointer(touch);
+					touchDown[event.pointer] = 0; 
+					touchX[event.pointer] = event.x;
+					touchY[event.pointer] = event.y;
+					deltaX[event.pointer] = 0;
+					deltaY[event.pointer] = 0;
+					numTouched--;
+				}
+			}
+		}
+	}
+	
+	static class TouchEvent {
+		UITouchPhase phase;
+		long timestamp;
+		int x, y;
+		int pointer;
+	}
+}
\ No newline at end of file
diff --git a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSMusic.java b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSMusic.java
new file mode 100644
index 0000000..6b5567e
--- /dev/null
+++ b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSMusic.java
@@ -0,0 +1,72 @@
+package com.badlogic.gdx.backends.iosrobovm;
+
+import com.badlogic.gdx.audio.Music;
+
+/** A music player, suitable for background music. Supports MP3 and WAV files which are played via hardware on iOS.
+ * <p>
+ * Limitations: does not play OGG.
+ * 
+ * @author noblemaster */
+public class IOSMusic implements Music {
+
+	@Override
+	public void play () {
+		// TODO Auto-generated method stub
+		
+	}
+
+	@Override
+	public void pause () {
+		// TODO Auto-generated method stub
+		
+	}
+
+	@Override
+	public void stop () {
+		// TODO Auto-generated method stub
+		
+	}
+
+	@Override
+	public boolean isPlaying () {
+		// TODO Auto-generated method stub
+		return false;
+	}
+
+	@Override
+	public void setLooping (boolean isLooping) {
+		// TODO Auto-generated method stub
+		
+	}
+
+	@Override
+	public boolean isLooping () {
+		// TODO Auto-generated method stub
+		return false;
+	}
+
+	@Override
+	public void setVolume (float volume) {
+		// TODO Auto-generated method stub
+		
+	}
+
+	@Override
+	public float getPosition () {
+		// TODO Auto-generated method stub
+		return 0;
+	}
+
+	@Override
+	public void dispose () {
+		// TODO Auto-generated method stub
+		
+	}
+
+	@Override
+	public float getVolume() {
+		// TODO Auto-generated method stub
+		return 0;
+	}
+
+}
\ No newline at end of file
diff --git a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSNet.java b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSNet.java
new file mode 100644
index 0000000..b608655
--- /dev/null
+++ b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSNet.java
@@ -0,0 +1,41 @@
+package com.badlogic.gdx.backends.iosrobovm;
+
+import org.robovm.cocoatouch.foundation.NSURL;
+import org.robovm.cocoatouch.uikit.UIApplication;
+
+import com.badlogic.gdx.Net;
+import com.badlogic.gdx.net.NetJavaImpl;
+import com.badlogic.gdx.net.ServerSocket;
+import com.badlogic.gdx.net.ServerSocketHints;
+import com.badlogic.gdx.net.Socket;
+import com.badlogic.gdx.net.SocketHints;
+
+public class IOSNet implements Net {
+
+	NetJavaImpl netJavaImpl = new NetJavaImpl();
+	final UIApplication uiApp;
+
+	public IOSNet (IOSApplication app) {
+		uiApp = app.uiApp;
+	}
+
+	@Override
+	public void sendHttpRequest (HttpRequest httpRequest, HttpResponseListener httpResponseListener) {
+		netJavaImpl.sendHttpRequest(httpRequest, httpResponseListener);
+	}
+
+	@Override
+	public ServerSocket newServerSocket (Protocol protocol, int port, ServerSocketHints hints) {
+		return new IOSServerSocket(protocol, port, hints);
+	}
+
+	@Override
+	public Socket newClientSocket (Protocol protocol, String host, int port, SocketHints hints) {
+		return new IOSSocket(protocol, host, port, hints);
+	}
+
+	@Override
+	public void openURI (String URI) {
+		uiApp.openURL(new NSURL(URI));
+	}
+}
\ No newline at end of file
diff --git a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSPreferences.java b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSPreferences.java
new file mode 100644
index 0000000..263d3cb
--- /dev/null
+++ b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSPreferences.java
@@ -0,0 +1,172 @@
+package com.badlogic.gdx.backends.iosrobovm;
+
+import java.util.HashMap;
+import java.util.Map;
+import java.util.Set;
+
+import org.robovm.cocoatouch.foundation.NSMutableDictionary;
+import org.robovm.cocoatouch.foundation.NSNumber;
+import org.robovm.cocoatouch.foundation.NSObject;
+import org.robovm.cocoatouch.foundation.NSString;
+
+import com.badlogic.gdx.Gdx;
+import com.badlogic.gdx.Preferences;
+
+public class IOSPreferences implements Preferences {
+
+	NSMutableDictionary<NSString, NSObject> nsDictionary;
+	String filePath;
+
+	public IOSPreferences (NSMutableDictionary<NSString, NSObject> nsDictionary, String filePath) {
+		this.nsDictionary = nsDictionary;
+		this.filePath = filePath;
+	}
+
+	@Override
+	public void putBoolean (String key, boolean val) {
+		nsDictionary.put(convertKey(key), NSNumber.valueOf(val));
+	}
+
+	@Override
+	public void putInteger (String key, int val) {
+		nsDictionary.put(convertKey(key), NSNumber.valueOf(val));
+	}
+
+	@Override
+	public void putLong (String key, long val) {
+		nsDictionary.put(convertKey(key), NSNumber.valueOf(val));
+	}
+
+	@Override
+	public void putFloat (String key, float val) {
+		nsDictionary.put(convertKey(key), NSNumber.valueOf(val));
+	}
+
+	@Override
+	public void putString (String key, String val) {
+		nsDictionary.put(convertKey(key), new NSString(val));
+	}
+
+	@Override
+	public void put (Map<String, ?> vals) {
+		Set<String> keySet = vals.keySet();
+		for (String key : keySet) {
+			Object value = vals.get(key);
+			if (value instanceof String) {
+				putString(key, (String)value);
+			} else if (value instanceof Boolean) {
+				putBoolean(key, (Boolean)value);
+			} else if (value instanceof Integer) {
+				putInteger(key, (Integer)value);
+			} else if (value instanceof Long) {
+				putLong(key, (Long)value);
+			} else if (value instanceof Float) {
+				putFloat(key, (Float)value);
+			}
+		}
+	}
+
+	@Override
+	public boolean getBoolean (String key) {
+		NSNumber value = (NSNumber)nsDictionary.get(convertKey(key));
+		if (value == null) return false;
+		return value.booleanValue();
+	}
+
+	@Override
+	public int getInteger (String key) {
+		NSNumber value = (NSNumber)nsDictionary.get(convertKey(key));
+		if (value == null) return 0;
+		return value.intValue();
+	}
+
+	@Override
+	public long getLong (String key) {
+		NSNumber value = (NSNumber)nsDictionary.get(convertKey(key));
+		if (value == null) return 0L;
+		return value.longValue();
+	}
+
+	@Override
+	public float getFloat (String key) {
+		NSNumber value = (NSNumber)nsDictionary.get(convertKey(key));
+		if (value == null) return 0f;
+		return value.floatValue();
+	}
+
+	@Override
+	public String getString (String key) {
+		NSString value = (NSString)nsDictionary.get(convertKey(key));
+		if (value == null) return "";
+		return value.toString();
+	}
+
+	@Override
+	public boolean getBoolean (String key, boolean defValue) {
+		if (!contains(key)) return defValue;
+		return getBoolean(key);
+	}
+
+	@Override
+	public int getInteger (String key, int defValue) {
+		if (!contains(key)) return defValue;
+		return getInteger(key);
+	}
+
+	@Override
+	public long getLong (String key, long defValue) {
+		if (!contains(key)) return defValue;
+		return getLong(key);
+	}
+
+	@Override
+	public float getFloat (String key, float defValue) {
+		if (!contains(key)) return defValue;
+		return getFloat(key);
+	}
+
+	@Override
+	public String getString (String key, String defValue) {
+		if (!contains(key)) return defValue;
+		return getString(key);
+	}
+
+	@Override
+	public Map<String, ?> get () {
+		 Map<String, Object> map = new HashMap<String, Object>();
+		 for (NSString key : nsDictionary.keySet()) {
+			 NSObject value = nsDictionary.get(key);
+			 map.put(key.toString(), value.toString());
+		 }
+		 return map;
+	}
+
+	@Override
+	public boolean contains (String key) {
+		return nsDictionary.containsKey(convertKey(key));
+	}
+
+	@Override
+	public void clear () {
+		nsDictionary.clear();
+	}
+
+	@Override
+	public void remove (String key) {
+		nsDictionary.remove(convertKey(key));
+	}
+
+	private NSString convertKey (String key) {
+		return new NSString(key);
+	}
+
+	@Override
+	public void flush () {
+		boolean fileWritten = nsDictionary.writeToFile(filePath, false);
+		if (fileWritten)
+			Gdx.app.debug("IOSPreferences", "NSDictionary file written");
+		else
+			Gdx.app.debug("IOSPreferences", "Failed to write NSDictionary to file " + filePath);
+	}
+
+}
\ No newline at end of file
diff --git a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSServerSocket.java b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSServerSocket.java
new file mode 100644
index 0000000..67cafce
--- /dev/null
+++ b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSServerSocket.java
@@ -0,0 +1,82 @@
+package com.badlogic.gdx.backends.iosrobovm;
+
+import java.net.InetSocketAddress;
+
+import com.badlogic.gdx.Net.Protocol;
+import com.badlogic.gdx.net.ServerSocket;
+import com.badlogic.gdx.net.ServerSocketHints;
+import com.badlogic.gdx.net.Socket;
+import com.badlogic.gdx.net.SocketHints;
+import com.badlogic.gdx.utils.GdxRuntimeException;
+
+/**
+ * Server socket implementation using java.net.ServerSocket.
+ * 
+ * @author noblemaster
+ */
+public class IOSServerSocket implements ServerSocket {
+
+	private Protocol protocol;
+	
+	/** Our server or null for disposed, aka closed. */
+	private java.net.ServerSocket server;
+	
+	
+	public IOSServerSocket(Protocol protocol, int port, ServerSocketHints hints) {
+		this.protocol = protocol;
+		
+		// create the server socket
+		try {
+			// initialize
+			server = new java.net.ServerSocket();
+			if (hints != null) {
+				server.setPerformancePreferences(hints.performancePrefConnectionTime, 
+															hints.performancePrefLatency, 
+															hints.performancePrefBandwidth);
+				server.setReuseAddress(hints.reuseAddress);
+				server.setSoTimeout(hints.acceptTimeout);
+				server.setReceiveBufferSize(hints.receiveBufferSize);
+			}
+			
+			// and bind the server...
+			InetSocketAddress address = new InetSocketAddress(port);
+			if (hints != null) {
+				server.bind(address, hints.backlog);
+			}
+			else {
+				server.bind(address);
+			}
+		}
+		catch (Exception e) {
+			throw new GdxRuntimeException("Cannot create a server socket at port " + port + ".", e);
+		}
+	}
+
+	@Override
+	public Protocol getProtocol () {
+		return protocol;
+	}
+
+	@Override
+	public Socket accept(SocketHints hints) {
+		try {
+			return new IOSSocket(server.accept(), hints);
+		}
+		catch (Exception e) {
+			throw new GdxRuntimeException("Error accepting socket.", e);
+		}
+	}
+
+	@Override
+	public void dispose() {
+		if (server != null) {
+			try {
+				server.close();
+				server = null;
+			}
+			catch (Exception e) {
+				throw new GdxRuntimeException("Error closing server.", e);
+			}
+		}
+	}
+}
\ No newline at end of file
diff --git a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSSocket.java b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSSocket.java
new file mode 100644
index 0000000..0fe3f05
--- /dev/null
+++ b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSSocket.java
@@ -0,0 +1,109 @@
+package com.badlogic.gdx.backends.iosrobovm;
+
+import java.io.InputStream;
+import java.io.OutputStream;
+import java.net.InetSocketAddress;
+
+import com.badlogic.gdx.Net.Protocol;
+import com.badlogic.gdx.net.Socket;
+import com.badlogic.gdx.net.SocketHints;
+import com.badlogic.gdx.utils.GdxRuntimeException;
+
+/**
+ * Socket implementation using java.net.Socket.
+ * 
+ * @author noblemaster
+ */
+public class IOSSocket implements Socket {
+
+	/** Our socket or null for disposed, aka closed. */
+	private java.net.Socket socket;
+	
+	
+	public IOSSocket(Protocol protocol, String host, int port, SocketHints hints) {
+		try {
+			// create the socket
+			socket = new java.net.Socket();
+			applyHints(hints);  // better to call BEFORE socket is connected!
+			
+			// and connect...
+			InetSocketAddress address = new InetSocketAddress(host, port);
+			if (hints != null) {
+				socket.connect(address, hints.connectTimeout);
+			}
+			else {
+				socket.connect(address);
+			}
+		}
+		catch (Exception e) {
+			throw new GdxRuntimeException("Error making a socket connection to " + host + ":" + port, e);
+		}
+	}
+	
+	public IOSSocket(java.net.Socket socket, SocketHints hints) {
+		this.socket = socket;
+		applyHints(hints);
+	}
+	
+	private void applyHints(SocketHints hints) {
+		if (hints != null) {
+			try {	
+				socket.setPerformancePreferences(hints.performancePrefConnectionTime, 
+					 										hints.performancePrefLatency, 
+					 										hints.performancePrefBandwidth);
+				socket.setTrafficClass(hints.trafficClass);
+				socket.setTcpNoDelay(hints.tcpNoDelay);
+				socket.setKeepAlive(hints.keepAlive);
+				socket.setSendBufferSize(hints.sendBufferSize);
+				socket.setReceiveBufferSize(hints.receiveBufferSize);
+				socket.setSoLinger(hints.linger, hints.lingerDuration);
+			}
+			catch (Exception e) {
+				throw new GdxRuntimeException("Error setting socket hints." , e);
+			}
+		}
+	}
+	
+	@Override
+	public boolean isConnected () {
+		if (socket != null) {
+			return socket.isConnected();
+		}
+		else {
+			return false;
+		}
+	}
+
+	@Override
+	public InputStream getInputStream () {
+		try {
+			return socket.getInputStream();
+		}
+		catch (Exception e) {
+			throw new GdxRuntimeException("Error getting input stream from socket.", e);
+		}
+	}
+
+	@Override
+	public OutputStream getOutputStream () {
+		try {
+			return socket.getOutputStream();
+		}
+		catch (Exception e) {
+			throw new GdxRuntimeException("Error getting output stream from socket.", e);
+		}
+	}
+
+	@Override
+	public void dispose() {
+		if (socket != null) {
+			try {
+				socket.close();
+				socket = null;
+			}
+			catch (Exception e) {
+				throw new GdxRuntimeException("Error closing socket.", e);
+			}
+		}
+	}
+}
\ No newline at end of file
diff --git a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSSound.java b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSSound.java
new file mode 100644
index 0000000..8cf957c
--- /dev/null
+++ b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSSound.java
@@ -0,0 +1,94 @@
+package com.badlogic.gdx.backends.iosrobovm;
+
+import com.badlogic.gdx.audio.Sound;
+
+/**
+ * Stub
+ */
+public class IOSSound implements Sound {
+
+	@Override
+	public long play () {
+		// TODO Auto-generated method stub
+		return 0;
+	}
+
+	@Override
+	public long play (float volume) {
+		// TODO Auto-generated method stub
+		return 0;
+	}
+
+	@Override
+	public long play (float volume, float pitch, float pan) {
+		// TODO Auto-generated method stub
+		return 0;
+	}
+
+	@Override
+	public long loop () {
+		// TODO Auto-generated method stub
+		return 0;
+	}
+
+	@Override
+	public long loop (float volume) {
+		// TODO Auto-generated method stub
+		return 0;
+	}
+
+	@Override
+	public long loop (float volume, float pitch, float pan) {
+		// TODO Auto-generated method stub
+		return 0;
+	}
+
+	@Override
+	public void stop () {
+		// TODO Auto-generated method stub
+		
+	}
+
+	@Override
+	public void dispose () {
+		// TODO Auto-generated method stub
+		
+	}
+
+	@Override
+	public void stop (long soundId) {
+		// TODO Auto-generated method stub
+		
+	}
+
+	@Override
+	public void setLooping (long soundId, boolean looping) {
+		// TODO Auto-generated method stub
+		
+	}
+
+	@Override
+	public void setPitch (long soundId, float pitch) {
+		// TODO Auto-generated method stub
+		
+	}
+
+	@Override
+	public void setVolume (long soundId, float volume) {
+		// TODO Auto-generated method stub
+		
+	}
+
+	@Override
+	public void setPan (long soundId, float pan, float volume) {
+		// TODO Auto-generated method stub
+		
+	}
+
+	@Override
+	public void setPriority (long soundId, int priority) {
+		// TODO Auto-generated method stub
+		
+	}
+
+}
\ No newline at end of file
diff --git a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/files/FileHandle.java b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/files/FileHandle.java
index df0081c..756cdfb 100644
--- a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/files/FileHandle.java
+++ b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/files/FileHandle.java
@@ -53,12 +53,6 @@ public class FileHandle {
 		throw new GdxRuntimeException("Stub");
 	}
 
-	/** Returns a java.io.File that represents this file handle. Note the returned file will only be usable for
-	 * {@link FileType#Absolute} and {@link FileType#External} file handles. */
-	public File file () {
-		throw new GdxRuntimeException("Stub");
-	}
-
 	/** Returns a stream for reading this file as bytes.
 	 * @throw GdxRuntimeException if the file handle represents a directory, doesn't exist, or could not be read. */
 	public InputStream read () {
diff --git a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader.java b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader.java
index fae8c69..d7118f0 100644
--- a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader.java
+++ b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader.java
@@ -533,6 +533,10 @@ public class AtlasTmxMapLoader extends AsynchronousAssetLoader<TiledMap, AtlasTm
 			if (type != null) {
 				object.getProperties().put("type", type);
 			}
+			int gid = element.getIntAttribute("gid", -1);
+			if (gid != -1) {
+				object.getProperties().put("gid", gid);
+			}
 			object.getProperties().put("x", x);
 			object.getProperties().put("y", yUp ? y - height : y);
 			object.setVisible(element.getIntAttribute("visible", 1) == 1);
diff --git a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/maps/tiled/TmxMapLoader.java b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/maps/tiled/TmxMapLoader.java
index 32f5d32..1608e48 100644
--- a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/maps/tiled/TmxMapLoader.java
+++ b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/maps/tiled/TmxMapLoader.java
@@ -505,6 +505,10 @@ public class TmxMapLoader extends AsynchronousAssetLoader<TiledMap, TmxMapLoader
 			if (type != null) {
 				object.getProperties().put("type", type);
 			}
+			int gid = element.getIntAttribute("gid", -1);
+			if (gid != -1) {
+				object.getProperties().put("gid", gid);
+			}
 			object.getProperties().put("x", x);
 			object.getProperties().put("y", yUp ? y - height : y);
 			object.setVisible(element.getIntAttribute("visible", 1) == 1);
@@ -568,4 +572,4 @@ public class TmxMapLoader extends AsynchronousAssetLoader<TiledMap, TmxMapLoader
 		return (int)b & 0xFF;
 	}
 
-}
\ No newline at end of file
+}
diff --git a/demos/invaders/gdx-invaders-ios/gdx-invaders-ios.userprefs b/demos/invaders/gdx-invaders-ios/gdx-invaders-ios.userprefs
index 1de8c83..d3d269c 100644
--- a/demos/invaders/gdx-invaders-ios/gdx-invaders-ios.userprefs
+++ b/demos/invaders/gdx-invaders-ios/gdx-invaders-ios.userprefs
@@ -1,21 +1,29 @@
 ﻿<Properties>
-  <MonoDevelop.Ide.Workspace ActiveConfiguration="Release|iPhone" />
-  <MonoDevelop.Ide.Workbench ActiveDocument="gdx-invaders-ios/Main.cs">
+  <MonoDevelop.Ide.Workspace ActiveConfiguration="Debug|iPhoneSimulator" PreferredExecutionTarget="MonoDevelop.IPhone.IPhoneSimulatorTarget.IPhone.5.0" />
+  <MonoDevelop.Ide.Workbench ActiveDocument="../gdx-invaders/src/com/badlogic/gdxinvaders/Renderer.java">
     <Files>
-      <File FileName="gdx-invaders-ios/Main.cs" Line="9" Column="24" />
+      <File FileName="gdx-invaders-ios/Main.cs" Line="24" Column="1" />
+      <File FileName="../gdx-invaders/src/com/badlogic/gdxinvaders/screens/GameLoop.java" Line="84" Column="1" />
+      <File FileName="../gdx-invaders/src/com/badlogic/gdxinvaders/GdxInvaders.java" Line="40" Column="1" />
+      <File FileName="../gdx-invaders/src/com/badlogic/gdxinvaders/screens/InvadersScreen.java" Line="34" Column="1" />
+      <File FileName="../gdx-invaders/src/com/badlogic/gdxinvaders/Renderer.java" Line="126" Column="23" />
     </Files>
     <Pads>
       <Pad Id="ProjectPad">
         <State expanded="True">
           <Node name="gdx-invaders-ios" expanded="True">
-            <Node name="References" expanded="True" selected="True" />
+            <Node name="References" expanded="True" />
+            <Node name="Main.cs" selected="True" />
           </Node>
         </State>
       </Pad>
     </Pads>
   </MonoDevelop.Ide.Workbench>
   <MonoDevelop.Ide.DebuggingService.Breakpoints>
-    <BreakpointStore />
+    <BreakpointStore>
+      <Breakpoint file="/Users/badlogic/workspace/libgdx-git/backends/gdx-backend-iosmonotouch/Test.java" line="3" column="1" />
+      <Breakpoint file="/Users/badlogic/workspace/libgdx/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/screens/GameLoop.java" line="84" column="1" />
+    </BreakpointStore>
   </MonoDevelop.Ide.DebuggingService.Breakpoints>
   <MonoDevelop.Ide.DebuggingService.PinnedWatches />
 </Properties>
\ No newline at end of file
diff --git a/demos/invaders/gdx-invaders-ios/gdx-invaders-ios/convert.properties b/demos/invaders/gdx-invaders-ios/gdx-invaders-ios/convert.properties
new file mode 100644
index 0000000..303aa66
--- /dev/null
+++ b/demos/invaders/gdx-invaders-ios/gdx-invaders-ios/convert.properties
@@ -0,0 +1,6 @@
+SRC =       ../../gdx-invaders/src/
+CLASSPATH = ../../../../gdx/bin
+EXCLUDE   = **/*Desktop.java
+IN        = -r:../../../../gdx/libs/ios32/gdx.dll -recurse:target/*.class
+OUT       = invaders.dll
+
diff --git a/demos/invaders/gdx-invaders-ios/gdx-invaders-ios/convert.xml b/demos/invaders/gdx-invaders-ios/gdx-invaders-ios/convert.xml
index 339b588..8848391 100644
--- a/demos/invaders/gdx-invaders-ios/gdx-invaders-ios/convert.xml
+++ b/demos/invaders/gdx-invaders-ios/gdx-invaders-ios/convert.xml
@@ -1,23 +1,19 @@
 <project name="gdx" default="convert" basedir=".">
 	<property environment="env"/>
-	<property name="IKVM_HOME" value="${env.IKVM_HOME}"/>
+	<property file="convert.properties" />
+	<property name="IKVM_HOME" value="../../../../backends/gdx-backend-iosmonotouch/libs/ikvm"/>
 	<property name="MONO_HOME" value="/Developer/MonoTouch/usr/lib/mono/2.1"/>
-	<property name="IN" value="-recurse:target/core/*.class"/>
-	<property name="OUT" value="gdx.dll"/>
-	<property name="SRC" value="src/"/>
-	<property name="CLASSPATH" value=""/>
-	<property name="EXCLUDE" value=""/>
 
 	<target name="compile">
 		<delete dir="target"/>
 		<mkdir dir="target"/>
-		<javac srcdir="${SRC}" debug="on" destdir="target" classpath="${CLASSPATH}">
+		<javac srcdir="${SRC}" debug="on" source="1.6" target="1.6" destdir="target" classpath="${CLASSPATH}">
 			<include name="**/*.java"/>
 			<exclude name="${EXCLUDE}"/>
 		</javac>
 	</target>
 
-	<target name="convert">
+	<target name="convert" depends="compile">
 		<exec executable="mono">
 			<arg value="${IKVM_HOME}/bin/ikvmc.exe"/>
 			<arg value="-nostdlib"/>
@@ -35,4 +31,4 @@
 			<arg line="${IN}"/>
 		</exec>
 	</target>
-</project>
\ No newline at end of file
+</project>
diff --git a/demos/invaders/gdx-invaders-ios/gdx-invaders-ios/gdx-invaders-ios.csproj b/demos/invaders/gdx-invaders-ios/gdx-invaders-ios/gdx-invaders-ios.csproj
index 90eedec..a13eb47 100644
--- a/demos/invaders/gdx-invaders-ios/gdx-invaders-ios/gdx-invaders-ios.csproj
+++ b/demos/invaders/gdx-invaders-ios/gdx-invaders-ios/gdx-invaders-ios.csproj
@@ -21,7 +21,6 @@
     <WarningLevel>4</WarningLevel>
     <ConsolePause>False</ConsolePause>
     <MtouchDebug>True</MtouchDebug>
-    <MtouchProfiling>True</MtouchProfiling>
     <MtouchLink>None</MtouchLink>
     <MtouchExtraArgs>-nosymbolstrip -nostrip -cxx -gcc_flags "-L${ProjectDir} -likvm-natives -lgdx -force_load ${ProjectDir}/libgdx.a -force_load ${ProjectDir}/libikvm-natives.a"</MtouchExtraArgs>
     <MtouchI18n>west</MtouchI18n>
@@ -30,6 +29,8 @@
         <Command type="BeforeBuild" command="ant -f convert.xml compile convert -DSRC=&quot;../../gdx-invaders/src/&quot; -DCLASSPATH=&quot;../../../../gdx/bin/;../../../../backends/gdx-backend-lwjgl/bin&quot; -DIN=&quot;-r:../../../../backends/gdx-backend-iosmonotouch/libs/gdx.dll -recurse:target/*.class&quot;  -DOUT=&quot;invaders.dll&quot; -DEXCLUDE=&quot;**/GdxInvadersDesktop.java&quot; -v" workingdir="${ProjectDir}" />
       </CustomCommands>
     </CustomCommands>
+    <MtouchArch>ARMv7</MtouchArch>
+    <OptimizePNGs>false</OptimizePNGs>
   </PropertyGroup>
   <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|iPhoneSimulator' ">
     <DebugType>none</DebugType>
@@ -44,9 +45,11 @@
     <MtouchUseLlvm>True</MtouchUseLlvm>
     <CustomCommands>
       <CustomCommands>
-        <Command type="BeforeBuild" command="ant -f convert.xml compile convert -DSRC=&quot;../../gdx-invaders/src/&quot; -DCLASSPATH=&quot;../../../../gdx/bin/;../../../../backends/gdx-backend-lwjgl/bin&quot; -DIN=&quot;-r:../../../../backends/gdx-backend-iosmonotouch/libs/gdx.dll -recurse:target/*.class&quot;  -DOUT=&quot;invaders.dll&quot; -DEXCLUDE=&quot;**/GdxInvadersDesktop.java&quot; -v" workingdir="${ProjectDir}" />
+        <Command type="BeforeBuild" command="ant -v -f convert.xml" workingdir="${ProjectDir}" />
       </CustomCommands>
     </CustomCommands>
+    <MtouchArch>ARMv7</MtouchArch>
+    <OptimizePNGs>false</OptimizePNGs>
   </PropertyGroup>
   <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|iPhone' ">
     <DebugSymbols>True</DebugSymbols>
@@ -59,7 +62,6 @@
     <ConsolePause>False</ConsolePause>
     <CodesignKey>iPhone Developer</CodesignKey>
     <MtouchDebug>True</MtouchDebug>
-    <MtouchProfiling>True</MtouchProfiling>
     <CustomCommands>
       <CustomCommands>
         <Command type="BeforeBuild" command="ant -f convert.xml compile convert -DSRC=&quot;../../gdx-invaders/src/&quot; -DCLASSPATH=&quot;../../../../gdx/bin/;../../../../backends/gdx-backend-lwjgl/bin&quot; -DIN=&quot;-r:../../../../backends/gdx-backend-iosmonotouch/libs/gdx.dll -recurse:target/*.class&quot;  -DOUT=&quot;invaders.dll&quot; -DEXCLUDE=&quot;**/GdxInvadersDesktop.java&quot; -v" workingdir="${ProjectDir}" />
@@ -68,6 +70,7 @@
     <MtouchExtraArgs>-nosymbolstrip -nostrip -cxx -gcc_flags "-L${ProjectDir} -likvm-natives -lgdx -force_load ${ProjectDir}/libgdx.a -force_load ${ProjectDir}/libikvm-natives.a"</MtouchExtraArgs>
     <MtouchArch>ARMv7</MtouchArch>
     <MtouchI18n>west</MtouchI18n>
+    <OptimizePNGs>false</OptimizePNGs>
   </PropertyGroup>
   <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|iPhone' ">
     <DebugType>none</DebugType>
@@ -87,6 +90,7 @@
     <MtouchExtraArgs>-nosymbolstrip -nostrip -cxx -gcc_flags "-L${ProjectDir} -likvm-natives -lgdx -force_load ${ProjectDir}/libgdx.a -force_load ${ProjectDir}/libikvm-natives.a"</MtouchExtraArgs>
     <MtouchArch>ARMv7</MtouchArch>
     <MtouchUseSGen>True</MtouchUseSGen>
+    <OptimizePNGs>false</OptimizePNGs>
   </PropertyGroup>
   <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Ad-Hoc|iPhone' ">
     <DebugType>none</DebugType>
@@ -115,9 +119,6 @@
     <Reference Include="gdx">
       <HintPath>..\..\..\..\gdx\libs\ios32\gdx.dll</HintPath>
     </Reference>
-    <Reference Include="gdx-backend-ios">
-      <HintPath>..\..\..\..\backends\gdx-backend-iosmonotouch\libs\gdx-backend-ios.dll</HintPath>
-    </Reference>
     <Reference Include="invaders">
       <HintPath>invaders.dll</HintPath>
     </Reference>
@@ -151,6 +152,12 @@
     <Reference Include="IKVM.Runtime">
       <HintPath>..\..\..\..\backends\gdx-backend-iosmonotouch\libs\ikvm\bin\IKVM.Runtime.dll</HintPath>
     </Reference>
+    <Reference Include="gdx-backend-ios">
+      <HintPath>..\..\..\..\backends\gdx-backend-iosmonotouch\libs\ios32\gdx-backend-ios.dll</HintPath>
+    </Reference>
+    <Reference Include="libObjectAL">
+      <HintPath>..\..\..\..\backends\gdx-backend-iosmonotouch\libs\objectal\libObjectAL.dll</HintPath>
+    </Reference>
   </ItemGroup>
   <ItemGroup>
     <None Include="Info.plist" />
diff --git a/demos/invaders/gdx-invaders-iosrobovm/.classpath b/demos/invaders/gdx-invaders-iosrobovm/.classpath
new file mode 100644
index 0000000..ab81307
--- /dev/null
+++ b/demos/invaders/gdx-invaders-iosrobovm/.classpath
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<classpath>
+	<classpathentry kind="src" path="src"/>
+	<classpathentry kind="con" path="org.robovm.eclipse.ROBOVM_CONTAINER"/>
+	<classpathentry kind="con" path="org.robovm.eclipse.ROBOVM_COCOA_TOUCH_CONTAINER"/>
+	<classpathentry combineaccessrules="false" kind="src" path="/gdx"/>
+	<classpathentry combineaccessrules="false" kind="src" path="/gdx-backend-robovm"/>
+	<classpathentry combineaccessrules="false" kind="src" path="/gdx-invaders"/>
+	<classpathentry kind="output" path="bin"/>
+</classpath>
diff --git a/demos/invaders/gdx-invaders-iosrobovm/.project b/demos/invaders/gdx-invaders-iosrobovm/.project
new file mode 100644
index 0000000..5686880
--- /dev/null
+++ b/demos/invaders/gdx-invaders-iosrobovm/.project
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<projectDescription>
+	<name>gdx-invaders-iosrobovm</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.robovm.eclipse.RoboVMClassBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+		<nature>org.robovm.eclipse.RoboVMNature</nature>
+	</natures>
+</projectDescription>
diff --git a/demos/invaders/gdx-invaders-iosrobovm/.settings/org.eclipse.jdt.core.prefs b/demos/invaders/gdx-invaders-iosrobovm/.settings/org.eclipse.jdt.core.prefs
new file mode 100644
index 0000000..8000cd6
--- /dev/null
+++ b/demos/invaders/gdx-invaders-iosrobovm/.settings/org.eclipse.jdt.core.prefs
@@ -0,0 +1,11 @@
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.6
+org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
+org.eclipse.jdt.core.compiler.compliance=1.6
+org.eclipse.jdt.core.compiler.debug.lineNumber=generate
+org.eclipse.jdt.core.compiler.debug.localVariable=generate
+org.eclipse.jdt.core.compiler.debug.sourceFile=generate
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.source=1.6
diff --git a/demos/invaders/gdx-invaders-iosrobovm/.settings/org.robovm.eclipse.prefs b/demos/invaders/gdx-invaders-iosrobovm/.settings/org.robovm.eclipse.prefs
new file mode 100644
index 0000000..1677423
--- /dev/null
+++ b/demos/invaders/gdx-invaders-iosrobovm/.settings/org.robovm.eclipse.prefs
@@ -0,0 +1,3 @@
+eclipse.preferences.version=1
+org.robovm.eclipse.prefs.incrementalBuildArch=x86
+org.robovm.eclipse.prefs.incrementalBuildOs=ios
diff --git a/demos/invaders/gdx-invaders-iosrobovm/Info.plist.xml b/demos/invaders/gdx-invaders-iosrobovm/Info.plist.xml
new file mode 100644
index 0000000..2eb1461
--- /dev/null
+++ b/demos/invaders/gdx-invaders-iosrobovm/Info.plist.xml
@@ -0,0 +1,47 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+    <key>CFBundleDevelopmentRegion</key>
+    <string>en</string>
+    <key>CFBundleDisplayName</key>
+    <string>${app.name}</string>
+    <key>CFBundleExecutable</key>
+    <string>${app.executable}</string>
+    <key>CFBundleIdentifier</key>
+    <string>${app.id}</string>
+    <key>CFBundleInfoDictionaryVersion</key>
+    <string>6.0</string>
+    <key>CFBundleName</key>
+    <string>${app.name}</string>
+    <key>CFBundlePackageType</key>
+    <string>APPL</string>
+    <key>CFBundleShortVersionString</key>
+    <string>${app.version}</string>
+    <key>CFBundleSignature</key>
+    <string>????</string>
+    <key>CFBundleVersion</key>
+    <string>${app.build}</string>
+    <key>LSRequiresIPhoneOS</key>
+    <true/>
+    <key>UIDeviceFamily</key>
+    <array>
+        <integer>1</integer>
+        <integer>2</integer>
+    </array>
+    <key>UIRequiredDeviceCapabilities</key>
+    <array>
+        <string>armv7</string>
+    </array>
+    <key>UISupportedInterfaceOrientations</key>
+    <array>
+        <string>UIInterfaceOrientationLandscapeLeft</string>
+        <string>UIInterfaceOrientationLandscapeRight</string>
+    </array>
+    <key>UISupportedInterfaceOrientations~ipad</key>
+    <array>
+        <string>UIInterfaceOrientationLandscapeLeft</string>
+        <string>UIInterfaceOrientationLandscapeRight</string>
+    </array>
+</dict>
+</plist>
diff --git a/demos/invaders/gdx-invaders-iosrobovm/robovm.properties b/demos/invaders/gdx-invaders-iosrobovm/robovm.properties
new file mode 100644
index 0000000..b59f1ec
--- /dev/null
+++ b/demos/invaders/gdx-invaders-iosrobovm/robovm.properties
@@ -0,0 +1,8 @@
+#
+#Fri May 31 13:01:40 CEST 2013
+app.version=1.0
+app.id=gdx-invaders-iosrobovm
+app.mainclass=com.badlogic.gdxinvaders.GdxInvadersIOS
+app.executable=gdx-invaders-iosrobovm
+app.build=1
+app.name=gdx-invaders-iosrobovm
diff --git a/demos/invaders/gdx-invaders-iosrobovm/robovm.xml b/demos/invaders/gdx-invaders-iosrobovm/robovm.xml
new file mode 100644
index 0000000..217c16d
--- /dev/null
+++ b/demos/invaders/gdx-invaders-iosrobovm/robovm.xml
@@ -0,0 +1,20 @@
+<config>
+  <executableName>${app.executable}</executableName>
+  <mainClass>${app.mainclass}</mainClass>
+  <os>ios</os>
+  <arch>thumbv7</arch>
+  <target>ios</target>
+  <iosInfoPList>Info.plist.xml</iosInfoPList>
+  <resources>
+    <resource>../gdx-invaders-android/assets/data</resource>
+  </resources>
+  <libs>
+    <lib>../../../gdx/libs/ios32/libgdx.a</lib>
+  </libs>
+  <frameworks>
+    <framework>UIKit</framework>
+    <framework>OpenGLES</framework>
+    <framework>QuartzCore</framework>
+    <framework>CoreGraphics</framework>
+  </frameworks>
+</config>
\ No newline at end of file
diff --git a/demos/invaders/gdx-invaders-iosrobovm/src/com/badlogic/gdxinvaders/GdxInvadersIOS.java b/demos/invaders/gdx-invaders-iosrobovm/src/com/badlogic/gdxinvaders/GdxInvadersIOS.java
new file mode 100644
index 0000000..9c93665
--- /dev/null
+++ b/demos/invaders/gdx-invaders-iosrobovm/src/com/badlogic/gdxinvaders/GdxInvadersIOS.java
@@ -0,0 +1,23 @@
+package com.badlogic.gdxinvaders;
+
+import org.robovm.cocoatouch.foundation.NSAutoreleasePool;
+import org.robovm.cocoatouch.uikit.UIApplication;
+
+import com.badlogic.gdx.backends.iosrobovm.IOSApplication;
+import com.badlogic.gdx.backends.iosrobovm.IOSApplicationConfiguration;
+
+public class GdxInvadersIOS extends IOSApplication.Delegate {
+	@Override
+	protected IOSApplication createApplication() {
+		IOSApplicationConfiguration config = new IOSApplicationConfiguration();
+		config.orientationLandscape = true;
+		config.orientationPortrait = false;
+		return new IOSApplication(new GdxInvaders(), config);
+	}
+
+	public static void main(String[] argv) {
+		NSAutoreleasePool pool = new NSAutoreleasePool();
+		UIApplication.main(argv, null, GdxInvadersIOS.class);
+		pool.drain();
+	}
+}
diff --git a/demos/invaders/gdx-invaders/.classpath b/demos/invaders/gdx-invaders/.classpath
index ddde917..d585873 100644
--- a/demos/invaders/gdx-invaders/.classpath
+++ b/demos/invaders/gdx-invaders/.classpath
@@ -1,10 +1,8 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<classpath>
-	<classpathentry excluding="**/.svn/*" kind="src" path="src"/>
-	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6"/>
-	<classpathentry combineaccessrules="false" kind="src" path="/gdx"/>
-	<classpathentry combineaccessrules="false" kind="src" path="/gdx-backend-lwjgl"/>
-	<classpathentry combineaccessrules="false" kind="src" path="/gdx-controllers"/>
-	<classpathentry combineaccessrules="false" kind="src" path="/gdx-controllers-desktop"/>
-	<classpathentry kind="output" path="bin"/>
-</classpath>
+<?xml version="1.0" encoding="UTF-8"?>
+<classpath>
+	<classpathentry excluding="**/.svn/*" kind="src" path="src"/>
+	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6"/>
+	<classpathentry combineaccessrules="false" kind="src" path="/gdx"/>
+	<classpathentry combineaccessrules="false" kind="src" path="/gdx-backend-lwjgl"/>
+	<classpathentry kind="output" path="bin"/>
+</classpath>
diff --git a/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/screens/GameLoop.java b/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/screens/GameLoop.java
index a492bf0..2736563 100644
--- a/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/screens/GameLoop.java
+++ b/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/screens/GameLoop.java
@@ -16,11 +16,6 @@ package com.badlogic.gdxinvaders.screens;
 import com.badlogic.gdx.Gdx;
 import com.badlogic.gdx.Input.Keys;
 import com.badlogic.gdx.audio.Sound;
-import com.badlogic.gdx.controllers.Controller;
-import com.badlogic.gdx.controllers.ControllerAdapter;
-import com.badlogic.gdx.controllers.ControllerListener;
-import com.badlogic.gdx.controllers.Controllers;
-import com.badlogic.gdx.controllers.mappings.Ouya;
 import com.badlogic.gdxinvaders.Renderer;
 import com.badlogic.gdxinvaders.simulation.Simulation;
 import com.badlogic.gdxinvaders.simulation.SimulationListener;
@@ -35,21 +30,21 @@ public class GameLoop extends InvadersScreen implements SimulationListener {
 	/** shot sound **/
 	private final Sound shot;
 	/** controller **/
-	private Controller controller;
-	private int buttonsPressed = 0;
-	private ControllerListener listener = new ControllerAdapter() {
-		@Override
-		public boolean buttonDown (Controller controller, int buttonIndex) {
-			buttonsPressed++;
-			return true;
-		}
-
-		@Override
-		public boolean buttonUp (Controller controller, int buttonIndex) {
-			buttonsPressed--;
-			return true;
-		}
-	};
+//	private Controller controller;
+//	private int buttonsPressed = 0;
+//	private ControllerListener listener = new ControllerAdapter() {
+//		@Override
+//		public boolean buttonDown (Controller controller, int buttonIndex) {
+//			buttonsPressed++;
+//			return true;
+//		}
+//
+//		@Override
+//		public boolean buttonUp (Controller controller, int buttonIndex) {
+//			buttonsPressed--;
+//			return true;
+//		}
+//	};
 
 	public GameLoop () {
 		simulation = new Simulation();
@@ -60,13 +55,13 @@ public class GameLoop extends InvadersScreen implements SimulationListener {
 		
 		// check for attached controllers and if we are on
 		// Ouya, take the first controller. Doesn't handle disconnects :D
-		if(Controllers.getControllers().size > 0) {
-			Controller controller = Controllers.getControllers().get(0);
-			if(Ouya.ID.equals(controller.getName())) {
-				this.controller = controller;
-				controller.addListener(listener);
-			}
-		}
+//		if(Controllers.getControllers().size > 0) {
+//			Controller controller = Controllers.getControllers().get(0);
+//			if(Ouya.ID.equals(controller.getName())) {
+//				this.controller = controller;
+//				controller.addListener(listener);
+//			}
+//		}
 	}
 
 	@Override
@@ -74,8 +69,8 @@ public class GameLoop extends InvadersScreen implements SimulationListener {
 		renderer.dispose();
 		shot.dispose();
 		explosion.dispose();
-		if (controller != null)
-			controller.removeListener(listener);
+//		if (controller != null)
+//			controller.removeListener(listener);
 		simulation.dispose();
 	}
 
@@ -99,20 +94,20 @@ public class GameLoop extends InvadersScreen implements SimulationListener {
 		else
 			simulation.moveShipRight(delta, Math.abs(accelerometerY) / 10);
 		
-		if(controller != null) {
-			// if any button is pressed, we shoot.
-			if(buttonsPressed > 0) simulation.shot();
-			
-			// if the left stick moved, move the ship
-			float axisValue = controller.getAxis(Ouya.AXIS_LEFT_X) * 0.5f;
-			if(Math.abs(axisValue) > 0.25f) {
-				if(axisValue > 0) {
-					simulation.moveShipRight(delta, axisValue);
-				} else {
-					simulation.moveShipLeft(delta, -axisValue);
-				}
-			}
-		}
+//		if(controller != null) {
+//			// if any button is pressed, we shoot.
+//			if(buttonsPressed > 0) simulation.shot();
+//			
+//			// if the left stick moved, move the ship
+//			float axisValue = controller.getAxis(Ouya.AXIS_LEFT_X) * 0.5f;
+//			if(Math.abs(axisValue) > 0.25f) {
+//				if(axisValue > 0) {
+//					simulation.moveShipRight(delta, axisValue);
+//				} else {
+//					simulation.moveShipLeft(delta, -axisValue);
+//				}
+//			}
+//		}
 
 		if (Gdx.input.isKeyPressed(Keys.DPAD_LEFT) || Gdx.input.isKeyPressed(Keys.A)) simulation.moveShipLeft(delta, 0.5f);
 		if (Gdx.input.isKeyPressed(Keys.DPAD_RIGHT) || Gdx.input.isKeyPressed(Keys.D)) simulation.moveShipRight(delta, 0.5f);
diff --git a/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/screens/GameOver.java b/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/screens/GameOver.java
index 627a603..d7c55c8 100644
--- a/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/screens/GameOver.java
+++ b/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/screens/GameOver.java
@@ -14,10 +14,6 @@
 package com.badlogic.gdxinvaders.screens;
 
 import com.badlogic.gdx.Gdx;
-import com.badlogic.gdx.controllers.Controller;
-import com.badlogic.gdx.controllers.ControllerAdapter;
-import com.badlogic.gdx.controllers.Controllers;
-import com.badlogic.gdx.controllers.mappings.Ouya;
 import com.badlogic.gdx.graphics.Color;
 import com.badlogic.gdx.graphics.GL10;
 import com.badlogic.gdx.graphics.Texture;
@@ -57,18 +53,18 @@ public class GameOver extends InvadersScreen {
 
 		font = new BitmapFont(Gdx.files.internal("data/font16.fnt"), Gdx.files.internal("data/font16.png"), false);
 		
-		if(Controllers.getControllers().size > 0) {
-			Controller controller = Controllers.getControllers().get(0);
-			if(Ouya.ID.equals(controller.getName())) {
-				controller.addListener(new ControllerAdapter() {
-					@Override
-					public boolean buttonUp (Controller controller, int buttonIndex) {
-						isDone = true;
-						return false;
-					}
-				});
-			}
-		}
+//		if(Controllers.getControllers().size > 0) {
+//			Controller controller = Controllers.getControllers().get(0);
+//			if(Ouya.ID.equals(controller.getName())) {
+//				controller.addListener(new ControllerAdapter() {
+//					@Override
+//					public boolean buttonUp (Controller controller, int buttonIndex) {
+//						isDone = true;
+//						return false;
+//					}
+//				});
+//			}
+//		}
 	}
 
 	@Override
diff --git a/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/screens/MainMenu.java b/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/screens/MainMenu.java
index d17a2b6..5f4118c 100644
--- a/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/screens/MainMenu.java
+++ b/demos/invaders/gdx-invaders/src/com/badlogic/gdxinvaders/screens/MainMenu.java
@@ -15,12 +15,6 @@ package com.badlogic.gdxinvaders.screens;
 
 import com.badlogic.gdx.Application.ApplicationType;
 import com.badlogic.gdx.Gdx;
-import com.badlogic.gdx.controllers.Controller;
-import com.badlogic.gdx.controllers.ControllerAdapter;
-import com.badlogic.gdx.controllers.ControllerListener;
-import com.badlogic.gdx.controllers.Controllers;
-import com.badlogic.gdx.controllers.PovDirection;
-import com.badlogic.gdx.controllers.mappings.Ouya;
 import com.badlogic.gdx.graphics.Color;
 import com.badlogic.gdx.graphics.GL10;
 import com.badlogic.gdx.graphics.Texture;
@@ -61,18 +55,18 @@ public class MainMenu extends InvadersScreen {
 		
 		// check for attached controllers and if we are on
 		// Ouya.
-		if(Controllers.getControllers().size > 0) {
-			Controller controller = Controllers.getControllers().get(0);
-			if(Ouya.ID.equals(controller.getName())) {
-				controller.addListener(new ControllerAdapter() {
-					@Override
-					public boolean buttonUp (Controller controller, int buttonIndex) {
-						isDone = true;
-						return false;
-					}
-				});
-			}
-		}
+//		if(Controllers.getControllers().size > 0) {
+//			Controller controller = Controllers.getControllers().get(0);
+//			if(Ouya.ID.equals(controller.getName())) {
+//				controller.addListener(new ControllerAdapter() {
+//					@Override
+//					public boolean buttonUp (Controller controller, int buttonIndex) {
+//						isDone = true;
+//						return false;
+//					}
+//				});
+//			}
+//		}
 	}
 
 	@Override
diff --git a/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch.userprefs b/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch.userprefs
index ec32389..74af6fa 100644
--- a/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch.userprefs
+++ b/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch.userprefs
@@ -1,13 +1,13 @@
 ﻿<Properties>
-  <MonoDevelop.Ide.Workspace ActiveConfiguration="Debug|iPhone" />
-  <MonoDevelop.Ide.Workbench ActiveDocument="../pax-britannica/src/de/swagner/paxbritannica/settings/Settings.java">
+  <MonoDevelop.Ide.Workspace ActiveConfiguration="Debug|iPhoneSimulator" PreferredExecutionTarget="MonoDevelop.IPhone.IPhoneSimulatorTarget.IPhone.5.0" />
+  <MonoDevelop.Ide.Workbench ActiveDocument="pax-britannica-iosmonotouch/Main.cs">
     <Files>
-      <File FileName="pax-britannica-iosmonotouch/Main.cs" Line="11" Column="2" />
-      <File FileName="../pax-britannica/src/de/swagner/paxbritannica/GameScreen.java" Line="90" Column="1" />
-      <File FileName="../../../gdx/src/com/badlogic/gdx/files/FileHandle.java" Line="126" Column="1" />
-      <File FileName="../../../gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFont.java" Line="73" Column="1" />
-      <File FileName="../pax-britannica/src/de/swagner/paxbritannica/settings/Settings.java" Line="101" Column="5" />
-      <File FileName="../../../gdx/src/com/badlogic/gdx/Game.java" Line="59" Column="1" />
+      <File FileName="pax-britannica-iosmonotouch/Main.cs" Line="10" Column="1" />
+      <File FileName="../pax-britannica/src/de/swagner/paxbritannica/GameScreen.java" Line="1" Column="1" />
+      <File FileName="../../../gdx/src/com/badlogic/gdx/files/FileHandle.java" Line="1" Column="1" />
+      <File FileName="../../../gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFont.java" Line="1" Column="1" />
+      <File FileName="../pax-britannica/src/de/swagner/paxbritannica/settings/Settings.java" Line="1" Column="1" />
+      <File FileName="../../../gdx/src/com/badlogic/gdx/Game.java" Line="1" Column="1" />
     </Files>
     <Pads>
       <Pad Id="ProjectPad">
@@ -21,7 +21,7 @@
   </MonoDevelop.Ide.Workbench>
   <MonoDevelop.Ide.DebuggingService.Breakpoints>
     <BreakpointStore>
-      <Breakpoint file="/Users/badlogic/workspace/libgdx-git/backends/gdx-backend-iosmonotouch/Test.java" line="3" />
+      <Breakpoint file="/Users/badlogic/workspace/libgdx-git/backends/gdx-backend-iosmonotouch/Test.java" line="3" column="1" />
     </BreakpointStore>
   </MonoDevelop.Ide.DebuggingService.Breakpoints>
   <MonoDevelop.Ide.DebuggingService.PinnedWatches />
diff --git a/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch.csproj b/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch.csproj
index 0ead64d..a5fd929 100644
--- a/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch.csproj
+++ b/demos/pax-britannica/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch/pax-britannica-iosmonotouch.csproj
@@ -22,7 +22,6 @@
     <WarningLevel>4</WarningLevel>
     <ConsolePause>False</ConsolePause>
     <MtouchDebug>True</MtouchDebug>
-    <MtouchProfiling>True</MtouchProfiling>
     <MtouchLink>None</MtouchLink>
     <CustomCommands>
       <CustomCommands>
@@ -31,6 +30,8 @@
     </CustomCommands>
     <MtouchExtraArgs>-nosymbolstrip -nostrip -cxx -gcc_flags "-L${ProjectDir} -likvm-natives -lgdx -force_load ${ProjectDir}/libgdx.a -force_load ${ProjectDir}/libikvm-natives.a"</MtouchExtraArgs>
     <MtouchI18n>west</MtouchI18n>
+    <MtouchArch>ARMv7</MtouchArch>
+    <OptimizePNGs>false</OptimizePNGs>
   </PropertyGroup>
   <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|iPhoneSimulator' ">
     <DebugType>none</DebugType>
@@ -47,6 +48,8 @@
     </CustomCommands>
     <MtouchExtraArgs>-nosymbolstrip -nostrip -cxx -gcc_flags "-L${ProjectDir} -likvm-natives -lgdx -force_load ${ProjectDir}/libgdx.a -force_load ${ProjectDir}/libikvm-natives.a"</MtouchExtraArgs>
     <MtouchI18n>west</MtouchI18n>
+    <MtouchArch>ARMv7</MtouchArch>
+    <OptimizePNGs>false</OptimizePNGs>
   </PropertyGroup>
   <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|iPhone' ">
     <DebugSymbols>True</DebugSymbols>
@@ -69,6 +72,7 @@
     <MtouchI18n>west</MtouchI18n>
     <MtouchArch>ARMv7</MtouchArch>
     <MtouchUseSGen>True</MtouchUseSGen>
+    <OptimizePNGs>false</OptimizePNGs>
   </PropertyGroup>
   <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|iPhone' ">
     <DebugType>none</DebugType>
@@ -87,6 +91,7 @@
     <MtouchUseSGen>True</MtouchUseSGen>
     <MtouchI18n>west</MtouchI18n>
     <MtouchArch>ARMv7</MtouchArch>
+    <OptimizePNGs>false</OptimizePNGs>
   </PropertyGroup>
   <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Ad-Hoc|iPhone' ">
     <DebugType>none</DebugType>
diff --git a/demos/pax-britannica/pax-britannica-iosrobovm/.classpath b/demos/pax-britannica/pax-britannica-iosrobovm/.classpath
new file mode 100644
index 0000000..b23e13d
--- /dev/null
+++ b/demos/pax-britannica/pax-britannica-iosrobovm/.classpath
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<classpath>
+	<classpathentry kind="src" path="src"/>
+	<classpathentry kind="con" path="org.robovm.eclipse.ROBOVM_CONTAINER"/>
+	<classpathentry kind="con" path="org.robovm.eclipse.ROBOVM_COCOA_TOUCH_CONTAINER"/>
+	<classpathentry combineaccessrules="false" kind="src" path="/gdx"/>
+	<classpathentry combineaccessrules="false" kind="src" path="/gdx-backend-robovm"/>
+	<classpathentry combineaccessrules="false" kind="src" path="/pax-britannica"/>
+	<classpathentry kind="output" path="bin"/>
+</classpath>
diff --git a/demos/pax-britannica/pax-britannica-iosrobovm/.project b/demos/pax-britannica/pax-britannica-iosrobovm/.project
new file mode 100644
index 0000000..582b318
--- /dev/null
+++ b/demos/pax-britannica/pax-britannica-iosrobovm/.project
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<projectDescription>
+	<name>pax-britannica-iosrobovm</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.robovm.eclipse.RoboVMClassBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+		<nature>org.robovm.eclipse.RoboVMNature</nature>
+	</natures>
+</projectDescription>
diff --git a/demos/pax-britannica/pax-britannica-iosrobovm/.settings/org.eclipse.jdt.core.prefs b/demos/pax-britannica/pax-britannica-iosrobovm/.settings/org.eclipse.jdt.core.prefs
new file mode 100644
index 0000000..8000cd6
--- /dev/null
+++ b/demos/pax-britannica/pax-britannica-iosrobovm/.settings/org.eclipse.jdt.core.prefs
@@ -0,0 +1,11 @@
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.6
+org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
+org.eclipse.jdt.core.compiler.compliance=1.6
+org.eclipse.jdt.core.compiler.debug.lineNumber=generate
+org.eclipse.jdt.core.compiler.debug.localVariable=generate
+org.eclipse.jdt.core.compiler.debug.sourceFile=generate
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.source=1.6
diff --git a/demos/pax-britannica/pax-britannica-iosrobovm/.settings/org.robovm.eclipse.prefs b/demos/pax-britannica/pax-britannica-iosrobovm/.settings/org.robovm.eclipse.prefs
new file mode 100644
index 0000000..1677423
--- /dev/null
+++ b/demos/pax-britannica/pax-britannica-iosrobovm/.settings/org.robovm.eclipse.prefs
@@ -0,0 +1,3 @@
+eclipse.preferences.version=1
+org.robovm.eclipse.prefs.incrementalBuildArch=x86
+org.robovm.eclipse.prefs.incrementalBuildOs=ios
diff --git a/demos/pax-britannica/pax-britannica-iosrobovm/Info.plist.xml b/demos/pax-britannica/pax-britannica-iosrobovm/Info.plist.xml
new file mode 100644
index 0000000..2eb1461
--- /dev/null
+++ b/demos/pax-britannica/pax-britannica-iosrobovm/Info.plist.xml
@@ -0,0 +1,47 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+    <key>CFBundleDevelopmentRegion</key>
+    <string>en</string>
+    <key>CFBundleDisplayName</key>
+    <string>${app.name}</string>
+    <key>CFBundleExecutable</key>
+    <string>${app.executable}</string>
+    <key>CFBundleIdentifier</key>
+    <string>${app.id}</string>
+    <key>CFBundleInfoDictionaryVersion</key>
+    <string>6.0</string>
+    <key>CFBundleName</key>
+    <string>${app.name}</string>
+    <key>CFBundlePackageType</key>
+    <string>APPL</string>
+    <key>CFBundleShortVersionString</key>
+    <string>${app.version}</string>
+    <key>CFBundleSignature</key>
+    <string>????</string>
+    <key>CFBundleVersion</key>
+    <string>${app.build}</string>
+    <key>LSRequiresIPhoneOS</key>
+    <true/>
+    <key>UIDeviceFamily</key>
+    <array>
+        <integer>1</integer>
+        <integer>2</integer>
+    </array>
+    <key>UIRequiredDeviceCapabilities</key>
+    <array>
+        <string>armv7</string>
+    </array>
+    <key>UISupportedInterfaceOrientations</key>
+    <array>
+        <string>UIInterfaceOrientationLandscapeLeft</string>
+        <string>UIInterfaceOrientationLandscapeRight</string>
+    </array>
+    <key>UISupportedInterfaceOrientations~ipad</key>
+    <array>
+        <string>UIInterfaceOrientationLandscapeLeft</string>
+        <string>UIInterfaceOrientationLandscapeRight</string>
+    </array>
+</dict>
+</plist>
diff --git a/demos/pax-britannica/pax-britannica-iosrobovm/robovm.properties b/demos/pax-britannica/pax-britannica-iosrobovm/robovm.properties
new file mode 100644
index 0000000..65e96b9
--- /dev/null
+++ b/demos/pax-britannica/pax-britannica-iosrobovm/robovm.properties
@@ -0,0 +1,8 @@
+#
+#Fri May 31 13:21:18 CEST 2013
+app.version=1.0
+app.id=pax-britannica-iosrobovm
+app.mainclass=de.swagner.paxbritannica.PaxBritannicaIOS
+app.executable=pax-britannica-iosrobovm
+app.build=1
+app.name=pax-britannica-iosrobovm
diff --git a/demos/pax-britannica/pax-britannica-iosrobovm/robovm.xml b/demos/pax-britannica/pax-britannica-iosrobovm/robovm.xml
new file mode 100644
index 0000000..2599cee
--- /dev/null
+++ b/demos/pax-britannica/pax-britannica-iosrobovm/robovm.xml
@@ -0,0 +1,20 @@
+<config>
+  <executableName>${app.executable}</executableName>
+  <mainClass>${app.mainclass}</mainClass>
+  <os>ios</os>
+  <arch>thumbv7</arch>
+  <target>ios</target>
+  <iosInfoPList>Info.plist.xml</iosInfoPList>
+  <resources>
+    <resource>../pax-britannica-android/assets/data</resource>
+  </resources>
+  <libs>
+    <lib>../../../gdx/libs/ios32/libgdx.a</lib>
+  </libs>
+  <frameworks>
+    <framework>UIKit</framework>
+    <framework>OpenGLES</framework>
+    <framework>QuartzCore</framework>
+    <framework>CoreGraphics</framework>
+  </frameworks>
+</config>
\ No newline at end of file
diff --git a/demos/pax-britannica/pax-britannica-iosrobovm/src/de/swagner/paxbritannica/PaxBritannicaIOS.java b/demos/pax-britannica/pax-britannica-iosrobovm/src/de/swagner/paxbritannica/PaxBritannicaIOS.java
new file mode 100644
index 0000000..818286e
--- /dev/null
+++ b/demos/pax-britannica/pax-britannica-iosrobovm/src/de/swagner/paxbritannica/PaxBritannicaIOS.java
@@ -0,0 +1,23 @@
+package de.swagner.paxbritannica;
+
+import org.robovm.cocoatouch.foundation.NSAutoreleasePool;
+import org.robovm.cocoatouch.uikit.UIApplication;
+
+import com.badlogic.gdx.backends.iosrobovm.IOSApplication;
+import com.badlogic.gdx.backends.iosrobovm.IOSApplicationConfiguration;
+
+public class PaxBritannicaIOS extends IOSApplication.Delegate {
+	@Override
+	protected IOSApplication createApplication() {
+		IOSApplicationConfiguration config = new IOSApplicationConfiguration();
+		config.orientationLandscape = true;
+		config.orientationPortrait = false;
+		return new IOSApplication(new PaxBritannica(), config);
+	}
+
+	public static void main(String[] argv) {
+		NSAutoreleasePool pool = new NSAutoreleasePool();
+		UIApplication.main(argv, null, PaxBritannicaIOS.class);
+		pool.drain();
+	}
+}
diff --git a/demos/superjumper/superjumper-ios/superjumper-ios.userprefs b/demos/superjumper/superjumper-ios/superjumper-ios.userprefs
index 702e9e4..1ee93fe 100644
--- a/demos/superjumper/superjumper-ios/superjumper-ios.userprefs
+++ b/demos/superjumper/superjumper-ios/superjumper-ios.userprefs
@@ -2,21 +2,23 @@
   <MonoDevelop.Ide.Workspace ActiveConfiguration="Debug|iPhoneSimulator" PreferredExecutionTarget="MonoDevelop.IPhone.IPhoneSimulatorTarget.IPhone.6.1" />
   <MonoDevelop.Ide.Workbench ActiveDocument="superjumper-ios/Main.cs">
     <Files>
-      <File FileName="superjumper-ios/Main.cs" Line="8" Column="11" />
+      <File FileName="superjumper-ios/Main.cs" Line="33" Column="1" />
       <File FileName="superjumper-ios/Info.plist" />
     </Files>
     <Pads>
       <Pad Id="ProjectPad">
         <State expanded="True">
-          <Node name="superjumper-ios" expanded="True">
-            <Node name="Main.cs" selected="True" />
+          <Node name="superjumper-ios" expanded="True" selected="True">
+            <Node name="References" expanded="True" />
           </Node>
         </State>
       </Pad>
     </Pads>
   </MonoDevelop.Ide.Workbench>
   <MonoDevelop.Ide.DebuggingService.Breakpoints>
-    <BreakpointStore />
+    <BreakpointStore>
+      <Breakpoint file="/Users/badlogic/workspace/libgdx-git/backends/gdx-backend-iosmonotouch/Test.java" line="3" column="1" />
+    </BreakpointStore>
   </MonoDevelop.Ide.DebuggingService.Breakpoints>
   <MonoDevelop.Ide.DebuggingService.PinnedWatches />
 </Properties>
\ No newline at end of file
diff --git a/demos/superjumper/superjumper-ios/superjumper-ios/superjumper-ios.csproj b/demos/superjumper/superjumper-ios/superjumper-ios/superjumper-ios.csproj
index 285241e..07ac50f 100644
--- a/demos/superjumper/superjumper-ios/superjumper-ios/superjumper-ios.csproj
+++ b/demos/superjumper/superjumper-ios/superjumper-ios/superjumper-ios.csproj
@@ -21,7 +21,6 @@
     <WarningLevel>4</WarningLevel>
     <ConsolePause>False</ConsolePause>
     <MtouchDebug>True</MtouchDebug>
-    <MtouchProfiling>True</MtouchProfiling>
     <MtouchLink>None</MtouchLink>
     <MtouchExtraArgs>-nosymbolstrip -nostrip -cxx -gcc_flags "-L${ProjectDir} -likvm-natives -lgdx -force_load ${ProjectDir}/libgdx.a -force_load ${ProjectDir}/libikvm-natives.a"</MtouchExtraArgs>
     <MtouchI18n>west</MtouchI18n>
@@ -31,6 +30,7 @@
       </CustomCommands>
     </CustomCommands>
     <MtouchArch>ARMv7</MtouchArch>
+    <OptimizePNGs>false</OptimizePNGs>
   </PropertyGroup>
   <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|iPhoneSimulator' ">
     <DebugType>none</DebugType>
@@ -48,6 +48,8 @@
         <Command type="BeforeBuild" command="ant -v -f convert.xml" workingdir="${ProjectDir}" />
       </CustomCommands>
     </CustomCommands>
+    <MtouchArch>ARMv7</MtouchArch>
+    <OptimizePNGs>false</OptimizePNGs>
   </PropertyGroup>
   <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|iPhone' ">
     <DebugSymbols>True</DebugSymbols>
@@ -60,7 +62,6 @@
     <ConsolePause>False</ConsolePause>
     <CodesignKey>iPhone Developer</CodesignKey>
     <MtouchDebug>True</MtouchDebug>
-    <MtouchProfiling>True</MtouchProfiling>
     <MtouchArch>ARMv7</MtouchArch>
     <MtouchI18n>west</MtouchI18n>
     <MtouchExtraArgs>-nosymbolstrip -nostrip -cxx -gcc_flags "-L${ProjectDir} -likvm-natives -lgdx -force_load ${ProjectDir}/libgdx.a -force_load ${ProjectDir}/libikvm-natives.a"</MtouchExtraArgs>
@@ -70,6 +71,7 @@
         <Command type="BeforeBuild" command="ant -v -f convert.xml" workingdir="${ProjectDir}" />
       </CustomCommands>
     </CustomCommands>
+    <OptimizePNGs>false</OptimizePNGs>
   </PropertyGroup>
   <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|iPhone' ">
     <DebugType>none</DebugType>
@@ -89,6 +91,7 @@
     <MtouchArch>ARMv7</MtouchArch>
     <MtouchExtraArgs>-nosymbolstrip -nostrip -cxx -gcc_flags "-L${ProjectDir} -likvm-natives -lgdx -force_load ${ProjectDir}/libgdx.a -force_load ${ProjectDir}/libikvm-natives.a"</MtouchExtraArgs>
     <MtouchUseSGen>True</MtouchUseSGen>
+    <OptimizePNGs>false</OptimizePNGs>
   </PropertyGroup>
   <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Ad-Hoc|iPhone' ">
     <DebugType>none</DebugType>
diff --git a/demos/superjumper/superjumper-iosrobovm/.classpath b/demos/superjumper/superjumper-iosrobovm/.classpath
new file mode 100644
index 0000000..11ee2ec
--- /dev/null
+++ b/demos/superjumper/superjumper-iosrobovm/.classpath
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<classpath>
+	<classpathentry kind="src" path="src"/>
+	<classpathentry kind="con" path="org.robovm.eclipse.ROBOVM_CONTAINER"/>
+	<classpathentry kind="con" path="org.robovm.eclipse.ROBOVM_COCOA_TOUCH_CONTAINER"/>
+	<classpathentry combineaccessrules="false" kind="src" path="/gdx"/>
+	<classpathentry combineaccessrules="false" kind="src" path="/gdx-backend-robovm"/>
+	<classpathentry combineaccessrules="false" kind="src" path="/superjumper"/>
+	<classpathentry kind="output" path="bin"/>
+</classpath>
diff --git a/demos/superjumper/superjumper-iosrobovm/.project b/demos/superjumper/superjumper-iosrobovm/.project
new file mode 100644
index 0000000..74f8d7b
--- /dev/null
+++ b/demos/superjumper/superjumper-iosrobovm/.project
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<projectDescription>
+	<name>superjumper-iosrobovm</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.robovm.eclipse.RoboVMClassBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+		<nature>org.robovm.eclipse.RoboVMNature</nature>
+	</natures>
+</projectDescription>
diff --git a/demos/superjumper/superjumper-iosrobovm/.settings/org.eclipse.jdt.core.prefs b/demos/superjumper/superjumper-iosrobovm/.settings/org.eclipse.jdt.core.prefs
new file mode 100644
index 0000000..8000cd6
--- /dev/null
+++ b/demos/superjumper/superjumper-iosrobovm/.settings/org.eclipse.jdt.core.prefs
@@ -0,0 +1,11 @@
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.6
+org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
+org.eclipse.jdt.core.compiler.compliance=1.6
+org.eclipse.jdt.core.compiler.debug.lineNumber=generate
+org.eclipse.jdt.core.compiler.debug.localVariable=generate
+org.eclipse.jdt.core.compiler.debug.sourceFile=generate
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.source=1.6
diff --git a/demos/superjumper/superjumper-iosrobovm/.settings/org.robovm.eclipse.prefs b/demos/superjumper/superjumper-iosrobovm/.settings/org.robovm.eclipse.prefs
new file mode 100644
index 0000000..1677423
--- /dev/null
+++ b/demos/superjumper/superjumper-iosrobovm/.settings/org.robovm.eclipse.prefs
@@ -0,0 +1,3 @@
+eclipse.preferences.version=1
+org.robovm.eclipse.prefs.incrementalBuildArch=x86
+org.robovm.eclipse.prefs.incrementalBuildOs=ios
diff --git a/demos/superjumper/superjumper-iosrobovm/Info.plist.xml b/demos/superjumper/superjumper-iosrobovm/Info.plist.xml
new file mode 100644
index 0000000..fbe3b88
--- /dev/null
+++ b/demos/superjumper/superjumper-iosrobovm/Info.plist.xml
@@ -0,0 +1,50 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+    <key>CFBundleDevelopmentRegion</key>
+    <string>en</string>
+    <key>CFBundleDisplayName</key>
+    <string>${app.name}</string>
+    <key>CFBundleExecutable</key>
+    <string>${app.executable}</string>
+    <key>CFBundleIdentifier</key>
+    <string>${app.id}</string>
+    <key>CFBundleInfoDictionaryVersion</key>
+    <string>6.0</string>
+    <key>CFBundleName</key>
+    <string>${app.name}</string>
+    <key>CFBundlePackageType</key>
+    <string>APPL</string>
+    <key>CFBundleShortVersionString</key>
+    <string>${app.version}</string>
+    <key>CFBundleSignature</key>
+    <string>????</string>
+    <key>CFBundleVersion</key>
+    <string>${app.build}</string>
+    <key>LSRequiresIPhoneOS</key>
+    <true/>
+    <key>UIDeviceFamily</key>
+    <array>
+        <integer>1</integer>
+        <integer>2</integer>
+    </array>
+    <key>UIRequiredDeviceCapabilities</key>
+    <array>
+        <string>armv7</string>
+    </array>
+    <key>UISupportedInterfaceOrientations</key>
+    <array>
+        <string>UIInterfaceOrientationPortrait</string>
+        <string>UIInterfaceOrientationLandscapeLeft</string>
+        <string>UIInterfaceOrientationLandscapeRight</string>
+    </array>
+    <key>UISupportedInterfaceOrientations~ipad</key>
+    <array>
+        <string>UIInterfaceOrientationPortrait</string>
+        <string>UIInterfaceOrientationPortraitUpsideDown</string>
+        <string>UIInterfaceOrientationLandscapeLeft</string>
+        <string>UIInterfaceOrientationLandscapeRight</string>
+    </array>
+</dict>
+</plist>
diff --git a/demos/superjumper/superjumper-iosrobovm/robovm.properties b/demos/superjumper/superjumper-iosrobovm/robovm.properties
new file mode 100644
index 0000000..0eb5c03
--- /dev/null
+++ b/demos/superjumper/superjumper-iosrobovm/robovm.properties
@@ -0,0 +1,8 @@
+#
+#Fri May 31 12:09:19 CEST 2013
+app.version=1.0
+app.id=superjumper-iosrobovm
+app.mainclass=com.badlogicgames.superjumper.SuperJumperIOS
+app.executable=superjumper-iosrobovm
+app.build=1
+app.name=superjumper-iosrobovm
diff --git a/demos/superjumper/superjumper-iosrobovm/robovm.xml b/demos/superjumper/superjumper-iosrobovm/robovm.xml
new file mode 100644
index 0000000..4a7eca3
--- /dev/null
+++ b/demos/superjumper/superjumper-iosrobovm/robovm.xml
@@ -0,0 +1,20 @@
+<config>
+  <executableName>${app.executable}</executableName>
+  <mainClass>${app.mainclass}</mainClass>
+  <os>ios</os>
+  <arch>thumbv7</arch>
+  <target>ios</target>
+  <iosInfoPList>Info.plist.xml</iosInfoPList>
+  <resources>
+    <resource>../superjumper-android/assets/data</resource>
+  </resources>
+  <libs>
+    <lib>../../../gdx/libs/ios32/libgdx.a</lib>
+  </libs>
+  <frameworks>
+    <framework>UIKit</framework>
+    <framework>OpenGLES</framework>
+    <framework>QuartzCore</framework>
+    <framework>CoreGraphics</framework>
+  </frameworks>
+</config>
\ No newline at end of file
diff --git a/demos/superjumper/superjumper-iosrobovm/src/com/badlogicgames/superjumper/SuperJumperIOS.java b/demos/superjumper/superjumper-iosrobovm/src/com/badlogicgames/superjumper/SuperJumperIOS.java
new file mode 100644
index 0000000..dd07c74
--- /dev/null
+++ b/demos/superjumper/superjumper-iosrobovm/src/com/badlogicgames/superjumper/SuperJumperIOS.java
@@ -0,0 +1,21 @@
+package com.badlogicgames.superjumper;
+
+import org.robovm.cocoatouch.foundation.NSAutoreleasePool;
+import org.robovm.cocoatouch.uikit.UIApplication;
+
+import com.badlogic.gdx.backends.iosrobovm.IOSApplication;
+import com.badlogic.gdx.backends.iosrobovm.IOSApplicationConfiguration;
+
+public class SuperJumperIOS extends IOSApplication.Delegate {
+	@Override
+	protected IOSApplication createApplication() {
+		IOSApplicationConfiguration config = new IOSApplicationConfiguration();
+		return new IOSApplication(new SuperJumper(), config);
+	}
+
+	public static void main(String[] argv) {
+		NSAutoreleasePool pool = new NSAutoreleasePool();
+		UIApplication.main(argv, null, SuperJumperIOS.class);
+		pool.drain();
+	}
+}
diff --git a/demos/superjumper/superjumper/src/com/badlogicgames/superjumper/SuperJumper.java b/demos/superjumper/superjumper/src/com/badlogicgames/superjumper/SuperJumper.java
index a8b7bcd..8b3fd51 100644
--- a/demos/superjumper/superjumper/src/com/badlogicgames/superjumper/SuperJumper.java
+++ b/demos/superjumper/superjumper/src/com/badlogicgames/superjumper/SuperJumper.java
@@ -28,7 +28,7 @@ public class SuperJumper extends Game {
 	public void create () {
 		Settings.load();
 		Assets.load();
-		setScreen(new MainMenuScreen(this));
+		setScreen(new GameScreen(this));
 		fps = new FPSLogger();
 	}
 	
diff --git a/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios.userprefs b/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios.userprefs
index 7a7d3f3..beef695 100644
--- a/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios.userprefs
+++ b/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios.userprefs
@@ -1,22 +1,25 @@
 ﻿<Properties>
-  <MonoDevelop.Ide.Workspace ActiveConfiguration="Debug|iPhoneSimulator" />
+  <MonoDevelop.Ide.Workspace ActiveConfiguration="Debug|iPhoneSimulator" PreferredExecutionTarget="MonoDevelop.IPhone.IPhoneSimulatorTarget.IPhone.5.0" />
   <MonoDevelop.Ide.Workbench ActiveDocument="gdx-vectorpinball-ios/Main.cs">
     <Files>
-      <File FileName="gdx-vectorpinball-ios/Main.cs" Line="11" Column="3" />
+      <File FileName="gdx-vectorpinball-ios/Main.cs" Line="8" Column="11" />
       <File FileName="gdx-vectorpinball-ios/Info.plist" />
     </Files>
     <Pads>
       <Pad Id="ProjectPad">
         <State expanded="True">
-          <Node name="gdx-vectorpinball-ios" expanded="True" selected="True">
+          <Node name="gdx-vectorpinball-ios" expanded="True">
             <Node name="References" expanded="True" />
+            <Node name="Main.cs" selected="True" />
           </Node>
         </State>
       </Pad>
     </Pads>
   </MonoDevelop.Ide.Workbench>
   <MonoDevelop.Ide.DebuggingService.Breakpoints>
-    <BreakpointStore />
+    <BreakpointStore>
+      <Breakpoint file="/Users/badlogic/workspace/libgdx-git/backends/gdx-backend-iosmonotouch/Test.java" line="3" column="1" />
+    </BreakpointStore>
   </MonoDevelop.Ide.DebuggingService.Breakpoints>
   <MonoDevelop.Ide.DebuggingService.PinnedWatches />
 </Properties>
\ No newline at end of file
diff --git a/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/gdx-vectorpinball-ios.csproj b/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/gdx-vectorpinball-ios.csproj
index cb7856b..7616432 100644
--- a/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/gdx-vectorpinball-ios.csproj
+++ b/demos/vector-pinball/gdx-vectorpinball-ios/gdx-vectorpinball-ios/gdx-vectorpinball-ios.csproj
@@ -22,7 +22,6 @@
     <WarningLevel>4</WarningLevel>
     <ConsolePause>False</ConsolePause>
     <MtouchDebug>True</MtouchDebug>
-    <MtouchProfiling>True</MtouchProfiling>
     <MtouchLink>None</MtouchLink>
     <CustomCommands>
       <CustomCommands>
@@ -32,6 +31,7 @@
     <MtouchExtraArgs>-nosymbolstrip -nostrip -cxx -gcc_flags "-L${ProjectDir} -likvm-natives -lgdx -force_load ${ProjectDir}/libgdx.a -force_load ${ProjectDir}/libikvm-natives.a"</MtouchExtraArgs>
     <MtouchI18n>west</MtouchI18n>
     <MtouchArch>ARMv7</MtouchArch>
+    <OptimizePNGs>false</OptimizePNGs>
   </PropertyGroup>
   <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|iPhoneSimulator' ">
     <DebugType>none</DebugType>
@@ -48,6 +48,8 @@
     </CustomCommands>
     <MtouchExtraArgs>-nosymbolstrip -nostrip -cxx -gcc_flags "-L${ProjectDir} -likvm-natives -lgdx -force_load ${ProjectDir}/libgdx.a -force_load ${ProjectDir}/libikvm-natives.a"</MtouchExtraArgs>
     <MtouchI18n>west</MtouchI18n>
+    <MtouchArch>ARMv7</MtouchArch>
+    <OptimizePNGs>false</OptimizePNGs>
   </PropertyGroup>
   <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|iPhone' ">
     <DebugSymbols>True</DebugSymbols>
@@ -70,6 +72,7 @@
     <MtouchI18n>west</MtouchI18n>
     <MtouchArch>ARMv7</MtouchArch>
     <MtouchUseSGen>True</MtouchUseSGen>
+    <OptimizePNGs>false</OptimizePNGs>
   </PropertyGroup>
   <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|iPhone' ">
     <DebugType>none</DebugType>
@@ -88,6 +91,7 @@
     <MtouchI18n>west</MtouchI18n>
     <MtouchArch>ARMv7</MtouchArch>
     <MtouchUseSGen>True</MtouchUseSGen>
+    <OptimizePNGs>false</OptimizePNGs>
   </PropertyGroup>
   <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Ad-Hoc|iPhone' ">
     <DebugType>none</DebugType>
diff --git a/demos/vector-pinball/gdx-vectorpinball-iosrobovm/.classpath b/demos/vector-pinball/gdx-vectorpinball-iosrobovm/.classpath
new file mode 100644
index 0000000..31c2db9
--- /dev/null
+++ b/demos/vector-pinball/gdx-vectorpinball-iosrobovm/.classpath
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<classpath>
+	<classpathentry kind="src" path="src"/>
+	<classpathentry kind="con" path="org.robovm.eclipse.ROBOVM_CONTAINER"/>
+	<classpathentry kind="con" path="org.robovm.eclipse.ROBOVM_COCOA_TOUCH_CONTAINER"/>
+	<classpathentry combineaccessrules="false" kind="src" path="/gdx"/>
+	<classpathentry combineaccessrules="false" kind="src" path="/gdx-backend-robovm"/>
+	<classpathentry combineaccessrules="false" kind="src" path="/gdx-vectorpinball"/>
+	<classpathentry kind="output" path="bin"/>
+</classpath>
diff --git a/demos/vector-pinball/gdx-vectorpinball-iosrobovm/.project b/demos/vector-pinball/gdx-vectorpinball-iosrobovm/.project
new file mode 100644
index 0000000..edcc984
--- /dev/null
+++ b/demos/vector-pinball/gdx-vectorpinball-iosrobovm/.project
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<projectDescription>
+	<name>gdx-vectorpinball-iosrobovm</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.robovm.eclipse.RoboVMClassBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+		<nature>org.robovm.eclipse.RoboVMNature</nature>
+	</natures>
+</projectDescription>
diff --git a/demos/vector-pinball/gdx-vectorpinball-iosrobovm/.settings/org.eclipse.jdt.core.prefs b/demos/vector-pinball/gdx-vectorpinball-iosrobovm/.settings/org.eclipse.jdt.core.prefs
new file mode 100644
index 0000000..8000cd6
--- /dev/null
+++ b/demos/vector-pinball/gdx-vectorpinball-iosrobovm/.settings/org.eclipse.jdt.core.prefs
@@ -0,0 +1,11 @@
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.6
+org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
+org.eclipse.jdt.core.compiler.compliance=1.6
+org.eclipse.jdt.core.compiler.debug.lineNumber=generate
+org.eclipse.jdt.core.compiler.debug.localVariable=generate
+org.eclipse.jdt.core.compiler.debug.sourceFile=generate
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.source=1.6
diff --git a/demos/vector-pinball/gdx-vectorpinball-iosrobovm/.settings/org.robovm.eclipse.prefs b/demos/vector-pinball/gdx-vectorpinball-iosrobovm/.settings/org.robovm.eclipse.prefs
new file mode 100644
index 0000000..1677423
--- /dev/null
+++ b/demos/vector-pinball/gdx-vectorpinball-iosrobovm/.settings/org.robovm.eclipse.prefs
@@ -0,0 +1,3 @@
+eclipse.preferences.version=1
+org.robovm.eclipse.prefs.incrementalBuildArch=x86
+org.robovm.eclipse.prefs.incrementalBuildOs=ios
diff --git a/demos/vector-pinball/gdx-vectorpinball-iosrobovm/Info.plist.xml b/demos/vector-pinball/gdx-vectorpinball-iosrobovm/Info.plist.xml
new file mode 100644
index 0000000..5a35f50
--- /dev/null
+++ b/demos/vector-pinball/gdx-vectorpinball-iosrobovm/Info.plist.xml
@@ -0,0 +1,52 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+    <key>CFBundleDevelopmentRegion</key>
+    <string>en</string>
+    <key>CFBundleDisplayName</key>
+    <string>${app.name}</string>
+    <key>CFBundleExecutable</key>
+    <string>${app.executable}</string>
+    <key>CFBundleIdentifier</key>
+    <string>${app.id}</string>
+    <key>CFBundleInfoDictionaryVersion</key>
+    <string>6.0</string>
+    <key>CFBundleName</key>
+    <string>${app.name}</string>
+    <key>CFBundlePackageType</key>
+    <string>APPL</string>
+    <key>CFBundleShortVersionString</key>
+    <string>${app.version}</string>
+    <key>CFBundleSignature</key>
+    <string>????</string>
+    <key>CFBundleVersion</key>
+    <string>${app.build}</string>
+    <key>LSRequiresIPhoneOS</key>
+    <true/>
+    <key>UIStatusBarHidden</key>
+    <true/>
+    <key>UIDeviceFamily</key>
+    <array>
+        <integer>1</integer>
+        <integer>2</integer>
+    </array>
+    <key>UIRequiredDeviceCapabilities</key>
+    <array>
+        <string>armv7</string>
+    </array>
+    <key>UISupportedInterfaceOrientations</key>
+    <array>
+        <string>UIInterfaceOrientationPortrait</string>
+        <string>UIInterfaceOrientationLandscapeLeft</string>
+        <string>UIInterfaceOrientationLandscapeRight</string>
+    </array>
+    <key>UISupportedInterfaceOrientations~ipad</key>
+    <array>
+        <string>UIInterfaceOrientationPortrait</string>
+        <string>UIInterfaceOrientationPortraitUpsideDown</string>
+        <string>UIInterfaceOrientationLandscapeLeft</string>
+        <string>UIInterfaceOrientationLandscapeRight</string>
+    </array>
+</dict>
+</plist>
diff --git a/demos/vector-pinball/gdx-vectorpinball-iosrobovm/data/field_layout.json b/demos/vector-pinball/gdx-vectorpinball-iosrobovm/data/field_layout.json
new file mode 100644
index 0000000..cb3cafa
--- /dev/null
+++ b/demos/vector-pinball/gdx-vectorpinball-iosrobovm/data/field_layout.json
@@ -0,0 +1,254 @@
+[
+	{
+		"name": "Default",
+		"width": 20,
+		"height": 30,
+		
+		"delegate": "Field1Delegate",
+		"targetTimeRatio": 2.5,
+		"gravity": 4.0,
+		
+		"numballs": 3,
+		"ballradius": 0.5,
+		"ballcolor": [192, 192, 224],
+		"launch": {"position": [19.4, 3.0], "velocity": [0, 15.4], "random_velocity": [0, 0.6]},
+		
+		"elements": [
+			"Strings in this section are treated as comments and ignored.",
+			"All field elements except for flippers are defined in this section.",
+			"Each element is a JSON object with a mandatory class property to indicate type",
+			"and type=specific additional attributes. The element classes are defined",
+			"in the com.dozingcatsoftware.bouncy.element package.", 
+		
+			"launch rail",
+			{"class": "WallElement", "position": [18.7, 0.1, 18.7, 23]},
+			{"class": "WallElement", "position": [19.9, 0.1, 19.9, 23]},
+
+			"main outside arc",
+			{
+				"class": "WallArcElement", 
+				"center": [10,23],
+				"xradius": 9.9,
+				"yradius": 7,
+				"minangle": 0,
+				"maxangle": 180,
+				"segments": 30
+			},
+			
+			"right inside arc",
+			{
+				"class": "WallArcElement", 
+				"center": [10,23],
+				"xradius": 8.6,
+				"yradius": 5.6,
+				"minangle": 0,
+				"maxangle": 54,
+				"segments": 12
+			},
+			
+			"left inside arc, upper",
+			{
+				"class": "WallArcElement", 
+				"center": [10,23],
+				"xradius": 8.1,
+				"yradius": 5.6,
+				"minangle": 110,
+				"maxangle": 180,
+				"segments": 12
+			},
+			
+			"left outside arc, outer",
+			{"class": "WallArcElement", "center": [6.246, 23], "xradius": 6.146, "yradius": 7.778, "minangle": 180, "maxangle": 225},
+			"left outside arc, inner",
+			{"class": "WallArcElement", "center": [6.246, 23], "xradius": 4.346, "yradius": 5.978, "minangle": 180, "maxangle": 225},
+						               	
+		    {"class": "WallElement", "position": [0.1, 0.1, 18.7, 0.1], "color": [0,0,0], "kill": true},
+		    {"class": "WallElement", "position": [18.7, 0.1, 19.9, 0.1]},
+			
+			"left bottom",
+			{"class": "WallElement", "position": [0.1, 4, 6, 1]},
+			"right bottom",
+			{"class": "WallElement", "position": [18.7, 4, 12.7, 1]},
+			
+			"left side",
+			{"class": "WallElement", "position": [0.1, 4, 0.1, 10], "name": "left border"},
+			
+			"above left outlane",
+			{
+				"class": "WallArcElement", 
+				"center": [3.1,10],
+				"xradius": 3.0,
+				"yradius": 3.0,
+				"minangle": 120,
+				"maxangle": 180,
+				"segments": 8
+			},
+			{"class": "WallElement", "position": [1.6, 12.6, 1.9, 17.5]},
+			
+			"left outlane",
+			{"class": "WallElement", "position": [1.45, 8.5, 1.45, 4.8]},
+			
+			"right outlane",
+			{"class": "WallElement", "position": [17.35, 8.5, 17.35, 4.8]},
+			"above right outlane",
+			{
+				"class": "WallArcElement", 
+				"center": [15.7,10],
+				"xradius": 3.0,
+				"yradius": 3.0,
+				"minangle": 0,
+				"maxangle": 60,
+				"segments": 8
+			},
+			
+			"path along right edge",
+			{"class": "WallPathElement", "positions": [[17.2, 12.6], [17, 15], [14.8, 21.4], [15.05, 24.5], [15.05, 27.53]]},
+			
+			"barrier covering launch rail once the ball enters play, initially disabled",
+			{"class": "WallElement", "id": "LaunchBarrier", "position": [15.05, 27.53, 15.75, 28.74], "disabled": true, "color": [128, 128, 128]},
+			"sensor to enable launch barrier",
+			{"class": "SensorElement", "id": "LaunchBarrierSensor", "rect": [14.05, 27.53, 15.05, 29]},
+
+			"flipper lanes",
+			{"class": "WallElement", "position": [1.45, 4.8, 6.25, 2.3]},
+			{"class": "WallElement", "position": [17.35, 4.8, 12.45, 2.3]},
+			
+			"ball savers, disappear when hit and reappear when drop targets are cleared, controlled by Field1Delegate",
+			{"class": "WallElement", "id": "BallSaver-left", "position": [0.15, 5.0, 1.35, 5.0], 
+			 "kick": 6.0, "color": [0, 255, 0], "retractWhenHit": true},
+			 
+			{"class": "WallElement", "id": "BallSaver-right", "position": [17.45, 5.0, 18.65, 5.0], 
+			 "kick": 6.0, "color": [0, 255, 0], "retractWhenHit": true},
+						
+			"separators between top lanes",
+			{"class": "WallElement", "position": [9.0,  26.5, 9.0,  27.8]},
+			{"class": "WallElement", "position": [10.5, 26.5, 10.5, 27.8]},
+			{"class": "WallElement", "position": [12.0, 26.5, 12.0, 27.8]},
+			{"class": "WallElement", "position": [13.5, 26.5, 13.5, 27.8]},
+			
+
+"right drop targets (computed with python script to place parallel to wall, 0.2 perpendicular distance, 1.0 width, 0.2 gap)",
+{"class": "DropTargetGroupElement", "id": "DropTargetRightSave", "color": [0, 255, 0], "score": 500, "reset": 2.0,
+ "positions": [[16.778, 15.026, 16.440, 15.968],
+               [16.372, 16.156, 16.034, 17.097],
+               [15.966, 17.285, 15.628, 18.226],
+               [15.560, 18.414, 15.222, 19.355]]},
+			
+"left drop targets: 0.2 perpendicular distance from wall, 1.0 width, 0.2 gap, start 0.7 from bottom of wall",
+{"class": "DropTargetGroupElement", "id": "DropTargetLeftSave", "color": [0, 255, 0], "score": 500, "reset": 2.0,
+ "positions": [[1.807, 12.708, 1.868, 13.706],
+               [1.88, 13.905, 1.941, 14.903],
+               [1.954, 15.103, 2.015, 16.101],
+               [2.027, 16.301, 2.088, 17.299]]},
+
+		    "left kicker, 60 degree angle",
+		    {
+		    	"class": "WallElement", 
+		       	"position": [3.2, 8.77, 5.7, 4.43],
+		       	"kick": 3.5,
+		       	"score": 100,
+		       	"color": [0, 0, 255]
+		    },
+			"top/bottom of left kicker without kick, x goes .25 (=0.5*cos(pi/3)), y goes .43 (=0.5*sin(pi/3))",
+			{"class": "WallElement", "position": [2.95, 9.2, 3.2, 8.77]},
+			{"class": "WallElement", "position": [5.95, 4, 5.7, 4.43]},
+
+		    "around left kicker", 
+		    {"class": "WallElement", "position": [2.95, 9.2, 2.95, 5.8]},
+			{"class": "WallElement", "position": [2.95, 5.8, 5.95, 4]},
+		        
+		    "right kicker",
+		    {
+		    	"class": "WallElement", 
+		       	"position": [15.6, 8.77, 13.1, 4.43],
+		       	"kick": 3.5,
+		       	"score": 100,
+		       	"color": [0, 0, 255]
+		    },
+			"top/bottom of right kicker without kick",
+			{"class": "WallElement", "position": [15.85, 9.2, 15.6, 8.77]},
+			{"class": "WallElement", "position": [12.85, 4, 13.1, 4.43]},
+		    
+			"around right kicker",
+			{"class": "WallElement", "position": [15.85, 9.2, 15.85, 5.8]},
+			{"class": "WallElement", "position": [15.85, 5.8, 12.85, 4]},
+					
+			"box above bumpers with drop targets",
+			{"class": "WallElement", "position": [9.0, 27.9, 7.230, 28.262]},
+			{"class": "WallElement", "position": [9.0, 26.4, 5.95, 25.6]},
+			{"class": "WallElement", "position": [5.95, 25.6, 5.95, 27.85]},
+			
+			"upper drop targets",
+			{"class": "DropTargetGroupElement", "id": "DropTargetTop", "color": [0, 255, 255], "score": 500, "reset": 2.0,
+ 			 "positions": [[8.615, 26.092, 7.745, 25.864],
+               [7.261, 25.737, 6.391, 25.509],
+               [5.75, 26.1, 5.75, 27.1]]},
+						
+			"bumpers below top lanes",
+			{"class": "BumperElement", "radius": 0.85, "position": [9.5, 18], "kick": 3, "color": [0, 0, 224], "score": 500},
+			{"class": "BumperElement", "radius": 0.85, "position": [12.3, 21.2], "kick": 3, "color": [0, 0, 224], "score": 500},
+			{"class": "BumperElement", "radius": 0.85, "position": [6.5, 20.5], "kick": 3, "color": [0, 0, 224], "score": 500},
+			"purple bumper is extra points",
+			{"class": "BumperElement", "radius": 0.70, "position": [4.5, 23.5], "kick": 2.5, "color": [192, 0, 192], "score": 1000},
+			
+        	"rollovers for ramp shot",
+			{"class": "RolloverGroupElement", "id": "RampRollovers", "radius": 0.5, "score": 500, "reset": 5,
+			 "rollovers": [{"position": [1.7, 19.5], "color": [255, 0, 0], "score": 2000},
+			               {"position": [1.0, 23.0], "color": [0, 255, 0], "score": 3000},
+			               {"position": [3.1, 27.0], "color": [0, 0, 255], "score": 5000},
+			               {"position": [6.3, 28.7], "color": [255, 255, 255], "score": 10000}
+			               ]
+			},
+			
+			"rollovers for flipper lanes",
+			{"class": "RolloverGroupElement", "id": "FlipperRollovers", "color": [0, 224, 224], "radius": 0.4, "score": 500, "cycleOnFlipper": true,
+			 "rollovers": [{"position": [0.775, 7.0]},
+			               {"position": [2.2, 7.0]},
+			               {"position": [16.6, 7.0]},
+			               {"position": [18.025, 7.0]}
+			               ]
+			},
+
+			"rollovers for top lanes",
+			{"class": "RolloverGroupElement", "id": "TopRollovers", "color": [0, 224, 224], "radius": 0.45, "score": 500, "cycleOnFlipper": true,
+			 "rollovers": [{"position": [9.75,  27.2]},
+			               {"position": [11.25, 27.2]},
+			               {"position": [12.75, 27.2]},
+			               {"position": [14.25, 27.2]}
+			               ]
+			},
+			
+			"rollovers in middle for extra ball when all lit",
+			{"class": "RolloverGroupElement", "id": "ExtraBallRollovers", "radius": 0.5, "ignoreBall": true,
+			 "rollovers": [{"position": [9.4, 13], "color": [224, 0, 0]},
+			               {"position": [12.0, 11.5], "color": [224, 224, 0]},
+			               {"position": [12.0, 8.5], "color": [0, 224, 0]},
+			               {"position": [9.4, 7], "color": [0, 224, 224]},
+			               {"position": [6.8, 8.5], "color": [0, 0, 224]},
+			               {"position": [6.8, 11.5], "color": [224, 0, 224]},
+			               {"position": [9.4, 10], "radius": 1.5, "color": [224, 224, 224]}
+			               ]
+			}
+			
+		],
+		          
+        "flippers": [
+        	{
+        		"position": [6.35, 2.2],
+        		"length": 2.5,
+        		"minangle": -20,
+        		"maxangle": 20,
+        		"upspeed": 7,
+        		"downspeed": 3
+        	},
+        	{
+        		"position": [12.35, 2.2],
+        		"length": -2.5,
+        		"minangle": -20,
+        		"maxangle": 20,
+        		"upspeed": 7,
+        		"downspeed": 3
+        	}
+        ]
+	}	
+]
\ No newline at end of file
diff --git a/demos/vector-pinball/gdx-vectorpinball-iosrobovm/robovm.properties b/demos/vector-pinball/gdx-vectorpinball-iosrobovm/robovm.properties
new file mode 100644
index 0000000..f49a611
--- /dev/null
+++ b/demos/vector-pinball/gdx-vectorpinball-iosrobovm/robovm.properties
@@ -0,0 +1,8 @@
+#
+#Fri May 31 04:46:20 CEST 2013
+app.version=1.0
+app.id=com.dozingcatsoftware.bouncy.BouncyIOS
+app.mainclass=com.dozingcatsoftware.bouncy.BouncyIOS
+app.executable=BouncyIOS
+app.build=1
+app.name=Vector Pinball
diff --git a/demos/vector-pinball/gdx-vectorpinball-iosrobovm/robovm.xml b/demos/vector-pinball/gdx-vectorpinball-iosrobovm/robovm.xml
new file mode 100644
index 0000000..ae31487
--- /dev/null
+++ b/demos/vector-pinball/gdx-vectorpinball-iosrobovm/robovm.xml
@@ -0,0 +1,20 @@
+<config>
+  <executableName>${app.executable}</executableName>
+  <mainClass>${app.mainclass}</mainClass>
+  <os>ios</os>
+  <arch>thumbv7</arch>
+  <target>ios</target>
+  <iosInfoPList>Info.plist.xml</iosInfoPList>
+  <resources>
+    <resource>../gdx-vectorpinball/data/</resource>
+  </resources>
+  <libs>
+    <lib>../../../gdx/libs/ios32/libgdx.a</lib>
+  </libs>
+  <frameworks>
+    <framework>UIKit</framework>
+    <framework>OpenGLES</framework>
+    <framework>QuartzCore</framework>
+    <framework>CoreGraphics</framework>
+  </frameworks>
+</config>
\ No newline at end of file
diff --git a/demos/vector-pinball/gdx-vectorpinball-iosrobovm/src/com/dozingcatsoftware/bouncy/BouncyIOS.java b/demos/vector-pinball/gdx-vectorpinball-iosrobovm/src/com/dozingcatsoftware/bouncy/BouncyIOS.java
new file mode 100644
index 0000000..7dfae22
--- /dev/null
+++ b/demos/vector-pinball/gdx-vectorpinball-iosrobovm/src/com/dozingcatsoftware/bouncy/BouncyIOS.java
@@ -0,0 +1,22 @@
+package com.dozingcatsoftware.bouncy;
+
+import org.robovm.cocoatouch.foundation.NSAutoreleasePool;
+import org.robovm.cocoatouch.uikit.UIApplication;
+
+import com.badlogic.gdx.backends.iosrobovm.IOSApplication;
+import com.badlogic.gdx.backends.iosrobovm.IOSApplicationConfiguration;
+
+public class BouncyIOS extends IOSApplication.Delegate {
+	@Override
+	protected IOSApplication createApplication () {
+		IOSApplicationConfiguration config = new IOSApplicationConfiguration();
+		return new IOSApplication(new Bouncy(), config);
+	}
+
+	public static void main (String[] argv) {
+		NSAutoreleasePool pool = new NSAutoreleasePool();
+      UIApplication.main(argv, null, BouncyIOS.class);
+      pool.drain();
+	}
+
+}
diff --git a/extensions/box2d-editor/editor-test/bodies.bin b/extensions/box2d-editor/editor-test/bodies.bin
deleted file mode 100644
index 60cb507..0000000
Binary files a/extensions/box2d-editor/editor-test/bodies.bin and /dev/null differ
diff --git a/extensions/box2d-editor/editor-test/gfx/test01.png b/extensions/box2d-editor/editor-test/gfx/test01.png
deleted file mode 100644
index 39b38f6..0000000
Binary files a/extensions/box2d-editor/editor-test/gfx/test01.png and /dev/null differ
diff --git a/extensions/box2d-editor/editor-test/gfx/test02 (non POT).png b/extensions/box2d-editor/editor-test/gfx/test02 (non POT).png
deleted file mode 100644
index f9277db..0000000
Binary files a/extensions/box2d-editor/editor-test/gfx/test02 (non POT).png and /dev/null differ
diff --git a/extensions/box2d-editor/editor-test/gfx/test03 (multi shapes).png b/extensions/box2d-editor/editor-test/gfx/test03 (multi shapes).png
deleted file mode 100644
index 63b170c..0000000
Binary files a/extensions/box2d-editor/editor-test/gfx/test03 (multi shapes).png and /dev/null differ
diff --git a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/AppContext.java b/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/AppContext.java
deleted file mode 100644
index f6c8e84..0000000
--- a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/AppContext.java
+++ /dev/null
@@ -1,299 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-package com.badlogic.gdx.box2deditor;
-
-import com.badlogic.gdx.box2deditor.utils.FileUtils;
-import com.badlogic.gdx.box2deditor.io.IO;
-import com.badlogic.gdx.box2deditor.models.BodyModel;
-import com.badlogic.gdx.box2deditor.earclipping.Clipper;
-import com.badlogic.gdx.box2deditor.models.ShapeModel;
-import com.badlogic.gdx.box2deditor.renderpanel.App;
-import com.badlogic.gdx.box2deditor.utils.FileUtils.NoCommonPathFoundException;
-import com.badlogic.gdx.box2deditor.utils.ShapeUtils;
-import com.badlogic.gdx.box2deditor.utils.VectorUtils;
-import com.badlogic.gdx.math.Vector2;
-import java.io.File;
-import java.io.IOException;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.Collections;
-import java.util.List;
-import java.util.Map;
-import java.util.TreeMap;
-
-/**
- *
- * @author Aurelien Ribon (aurelien.ribon@gmail.com)
- */
-public class AppContext {
-    private static AppContext instance = new AppContext();
-	public static AppContext instance() { return instance; }
-
-	// -------------------------------------------------------------------------
-	// Parameters
-	// -------------------------------------------------------------------------
-
-	public boolean isAssetDrawn = true;
-	public boolean isAssetDrawnWithOpacity50 = false;
-	public boolean isShapeDrawn = true;
-	public boolean arePolyDrawn = true;
-
-	// -------------------------------------------------------------------------
-	// Output file
-	// -------------------------------------------------------------------------
-
-	public File outputFile;
-
-	public String getPathRelativeToOutputFile(String filepath) {
-		assert outputFile != null;
-		try {
-			String path = FileUtils.getRelativePath(filepath, outputFile.getPath(), File.separator);
-			return path;
-		} catch (NoCommonPathFoundException ex) {
-			return null;
-		}
-	}
-
-	public String getRootDirectory() {
-		assert outputFile != null;
-		return outputFile.getParent();
-	}
-
-	public String getFullPath(String name) {
-		assert outputFile != null;
-		return outputFile.getParent() + File.separator + name;
-	}
-
-	// -------------------------------------------------------------------------
-	// Mouse path + selected points
-	// -------------------------------------------------------------------------
-
-	public final List<Vector2> mousePath = new ArrayList<Vector2>();
-	public final List<Vector2> selectedPoints = new ArrayList<Vector2>();
-
-	// -------------------------------------------------------------------------
-	// Ball throw objects
-	// -------------------------------------------------------------------------
-
-	public Vector2 ballThrowFirstPoint;
-	public Vector2 ballThrowLastPoint;
-
-	// -------------------------------------------------------------------------
-	// Body models
-	// -------------------------------------------------------------------------
-
-	private final Map<String, BodyModel> modelMap = new TreeMap<String, BodyModel>();
-	private String currentName;
-	private BodyModel currentModel;
-	private Vector2 currentSize;
-
-	// -------------------------------------------------------------------------
-
-	public void addModel(String name) {
-		if (!modelMap.containsKey(name))
-			modelMap.put(name, new BodyModel());
-	}
-
-	public void removeModel(String name) {
-		modelMap.remove(name);
-		if (name.equals(currentName)) {
-			currentName = null;
-			currentModel = null;
-		}
-	}
-
-	public void changeModelName(String oldName, String newName) {
-		if (oldName.equals(currentName))
-			currentName = newName;
-		BodyModel bm = modelMap.remove(oldName);
-		modelMap.put(newName, bm);
-	}
-
-	public String[] getModelNames() {
-		return modelMap.keySet().toArray(new String[0]);
-	}
-
-	// -------------------------------------------------------------------------
-
-	public BodyModel getCurrentModel() {
-		if (currentModel == null)
-			currentModel = BodyModel.EMPTY;
-		return currentModel;
-	}
-
-	public boolean isCurrentModelValid() {
-		return getCurrentModel() != BodyModel.EMPTY;
-	}
-
-	public void setCurrentName(String name) {
-		this.currentName = name;
-		currentModel = name == null ? null : modelMap.get(name);
-	}
-
-	public void setCurrentSize(Vector2 currentSize) {
-		this.currentSize = currentSize;
-	}
-
-	// -------------------------------------------------------------------------
-
-	public void exportToFile() throws IOException {
-		IO.exportToFile(outputFile, modelMap);
-	}
-
-	public void importFromFile() throws IOException {
-		modelMap.clear();
-		Map<String, BodyModel> map = IO.importFromFile(outputFile);
-		for (String str : map.keySet())
-			modelMap.put(str, map.get(str));
-	}
-
-	// -------------------------------------------------------------------------
-	// Temp. objects
-	// -------------------------------------------------------------------------
-
-	private final List<ShapeModel> tempShapes = new ArrayList<ShapeModel>();
-	private final List<Vector2[]> tempPolygons = new ArrayList<Vector2[]>();
-
-	public Vector2 nextPoint;
-	public Vector2 nearestPoint;
-
-	// -------------------------------------------------------------------------
-
-	public void clearTempObjects() {
-		tempShapes.clear();
-		clearTempPolygons();
-	}
-
-	// -------------------------------------------------------------------------
-
-	public void createNewTempShape() {
-		tempShapes.add(new ShapeModel());
-	}
-
-	public ShapeModel[] getTempShapes() {
-		return tempShapes.toArray(new ShapeModel[tempShapes.size()]);
-	}
-
-	public ShapeModel getLastTempShape() {
-		if (tempShapes.isEmpty())
-			return null;
-		return tempShapes.get(tempShapes.size()-1);
-	}
-
-	// -------------------------------------------------------------------------
-
-	public void loadCurrentModel() {
-		clearTempObjects();
-
-		Vector2[][] shapes = getCurrentModel().getShapes();
-		Vector2[][] polygons = getCurrentModel().getPolygons();
-
-		if (shapes != null) {
-			shapes = VectorUtils.mul(shapes, currentSize.x / 100f);
-			for (Vector2[] shape : shapes) {
-				ShapeModel shapeModel = new ShapeModel(shape);
-				shapeModel.close();
-				tempShapes.add(shapeModel);
-			}
-		}
-
-		if (polygons != null) {
-			polygons = VectorUtils.mul(polygons, currentSize.x / 100f);
-			tempPolygons.addAll(Arrays.asList(polygons));
-			App.instance().setBody(polygons);
-		}
-	}
-
-	public void saveCurrentModel() {
-		List<ShapeModel> closedShapes = new ArrayList<ShapeModel>();
-		for (ShapeModel shape : tempShapes) {
-			if (shape.isClosed()) {
-				shape.close();
-				closedShapes.add(shape);
-			}
-		}
-
-		Vector2[][] points = new Vector2[closedShapes.size()][];
-		for (int i=0; i<closedShapes.size(); i++)
-			points[i] = closedShapes.get(i).getPoints();
-
-		Vector2[][] normalizedPoints = VectorUtils.mul(points, 100f / currentSize.x);
-		Vector2[][] normalizedPolygons = computePolygons(normalizedPoints);
-
-		BodyModel bm = getCurrentModel();
-		bm.set(normalizedPoints, normalizedPolygons);
-
-		Vector2[][] polygons = VectorUtils.mul(normalizedPolygons, currentSize.x / 100f);
-		tempPolygons.clear();
-		Collections.addAll(tempPolygons, polygons);
-
-		App.instance().setBody(polygons);
-	}
-
-	// -------------------------------------------------------------------------
-
-	public Vector2[][] getTempPolygons() {
-		return tempPolygons.toArray(new Vector2[tempPolygons.size()][]);
-	}
-
-	public void clearTempPolygons() {
-		tempPolygons.clear();
-		App.instance().clearBody();
-	}
-
-	private Vector2[][] computePolygons(Vector2[][] shapes) {
-		List<Vector2[]> ret = new ArrayList<Vector2[]>();
-		for (Vector2[] shape : shapes) {
-			Vector2[][] polygons = Clipper.polygonize(shape);
-			if (polygons != null)
-				for (Vector2[] polygon : polygons)
-					if (ShapeUtils.getPolygonArea(polygon) > 1)
-						ret.add(polygon);
-		}
-		return ret.toArray(new Vector2[ret.size()][]);
-	}
-
-	// -------------------------------------------------------------------------
-
-	public void removeSelectedPoints() {
-		for (ShapeModel shape : tempShapes)
-			for (Vector2 p : selectedPoints)
-				shape.removePoint(p);
-		saveCurrentModel();
-	}
-
-	public void insertPointBetweenSelected() {
-		List<Vector2> toAdd = new ArrayList<Vector2>();
-
-		for (ShapeModel shape : tempShapes) {
-			for (int i=0; i<shape.getPointCount(); i++) {
-				Vector2 p1 = shape.getPoint(i);
-				Vector2 p2 = i != shape.getPointCount()-1
-					? shape.getPoint(i+1)
-					: shape.getPoint(0);
-
-				if (selectedPoints.contains(p1) && selectedPoints.contains(p2)) {
-					Vector2 p = new Vector2((p1.x + p2.x) / 2, (p1.y + p2.y) / 2);
-					shape.addPoint(i+1, p);
-					toAdd.add(p);
-				}
-			}
-		}
-
-		selectedPoints.addAll(toAdd);
-		saveCurrentModel();
-	}
-}
\ No newline at end of file
diff --git a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/Main.java b/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/Main.java
deleted file mode 100644
index 2fdcbfe..0000000
--- a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/Main.java
+++ /dev/null
@@ -1,60 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-package com.badlogic.gdx.box2deditor;
-
-import com.badlogic.gdx.box2deditor.ui.MainWindow;
-import com.badlogic.gdx.box2deditor.renderpanel.App;
-import com.badlogic.gdx.backends.lwjgl.LwjglCanvas;
-import java.awt.Dimension;
-import java.awt.Toolkit;
-import java.io.File;
-import javax.swing.SwingUtilities;
-
-/**
- *
- * @author Aurelien Ribon (aurelien.ribon@gmail.com)
- */
-public class Main {
-    public static void main(final String[] args) {
-		SwingUtilities.invokeLater(new Runnable() {
-			@Override
-			public void run() {
-				parseArgs(args);
-
-				LwjglCanvas glCanvas = new LwjglCanvas(App.instance(), false);
-
-				MainWindow mw = new MainWindow(glCanvas);
-				mw.setTitle("Box2D Editor");
-
-				Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
-				mw.setSize(
-					Math.min(1200, screenSize.width - 100),
-					Math.min(800, screenSize.height - 100)
-				);
-				mw.setLocationRelativeTo(null);
-				mw.setVisible(true);
-			}
-		});
-    }
-
-	private static void parseArgs(String[] args) {
-		for (int i=0; i<args.length; i++) {
-			if (args[i].startsWith("--outputfile=")) {
-				AppContext.instance().outputFile = new File(args[i].substring("--outputfile=".length()));
-			}
-		}
-	}
-}
\ No newline at end of file
diff --git a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/earclipping/Clipper.java b/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/earclipping/Clipper.java
deleted file mode 100644
index a410206..0000000
--- a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/earclipping/Clipper.java
+++ /dev/null
@@ -1,233 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-package com.badlogic.gdx.box2deditor.earclipping;
-
-import com.badlogic.gdx.math.Vector2;
-
-/**
- * Original code from EwJordan (http://www.ewjordan.com/earClip/)
- * @author Aurelien Ribon (aurelien.ribon@gmail.com)
- */
-public class Clipper {
-	public static Vector2[][] polygonize(Vector2[] points) {
-		int vNum = points.length;
-		float[] xv = new float[vNum];
-		float[] yv = new float[vNum];
-
-		for (int i = 0; i < vNum; i++) {
-			xv[i] = points[i].x;
-			yv[i] = points[i].y;
-		}
-
-		Triangle[] tempTriangles = triangulatePolygon(xv, yv, vNum);
-		Polygon[] tempPolygons = polygonizeTriangles(tempTriangles);
-
-		if (tempPolygons == null)
-			return null;
-
-		Vector2[][] polygons = new Vector2[tempPolygons.length][];
-		for (int i = 0; i < tempPolygons.length; i++) {
-			polygons[i] = new Vector2[tempPolygons[i].nVertices];
-			for (int ii = 0; ii < tempPolygons[i].nVertices; ii++)
-				polygons[i][ii] = new Vector2(tempPolygons[i].x[ii], tempPolygons[i].y[ii]);
-		}
-
-		polygons = updateForBox2D(polygons);
-		return polygons;
-	}
-
-	private static Vector2[][] updateForBox2D(Vector2[][] polygons) {
-		for (int i = 0; i < polygons.length; i++) {
-			Vector2[] poly = polygons[i];
-			if (poly.length > 8) {
-				int limit = poly.length < 15 ? poly.length / 2 + 1 : 8;
-				Vector2[] newPoly1 = new Vector2[limit];
-				Vector2[] newPoly2 = new Vector2[poly.length - limit + 2];
-				System.arraycopy(poly, 0, newPoly1, 0, limit);
-				System.arraycopy(poly, limit - 1, newPoly2, 0, poly.length - limit + 1);
-				newPoly2[newPoly2.length - 1] = poly[0].cpy();
-
-				Vector2[][] newPolys = new Vector2[polygons.length + 1][];
-				if (i > 0) {
-					System.arraycopy(polygons, 0, newPolys, 0, i);
-				}
-				if (i < polygons.length - 1) {
-					System.arraycopy(polygons, i + 1, newPolys, i + 2, polygons.length - i - 1);
-				}
-				newPolys[i] = newPoly1;
-				newPolys[i + 1] = newPoly2;
-				polygons = newPolys;
-
-				i -= 1;
-			}
-		}
-		return polygons;
-	}
-
-	// -------------------------------------------------------------------------
-
-	private static Triangle[] triangulatePolygon(float[] xv, float[] yv, int vNum) {
-		if (vNum < 3)
-			return null;
-
-		Triangle[] buffer = new Triangle[vNum];
-		int bufferSize = 0;
-		float[] xrem = new float[vNum];
-		float[] yrem = new float[vNum];
-		for (int i = 0; i < vNum; ++i) {
-			xrem[i] = xv[i];
-			yrem[i] = yv[i];
-		}
-
-		while (vNum > 3) {
-			int earIndex = -1;
-			for (int i = 0; i < vNum; ++i) {
-				if (isEar(i, xrem, yrem)) {
-					earIndex = i;
-					break;
-				}
-			}
-
-			if (earIndex == -1)
-				return null;
-
-			--vNum;
-			float[] newx = new float[vNum];
-			float[] newy = new float[vNum];
-			int currDest = 0;
-			for (int i = 0; i < vNum; ++i) {
-				if (currDest == earIndex) {
-					++currDest;
-				}
-				newx[i] = xrem[currDest];
-				newy[i] = yrem[currDest];
-				++currDest;
-			}
-
-			int under = (earIndex == 0) ? (xrem.length - 1) : (earIndex - 1);
-			int over = (earIndex == xrem.length - 1) ? 0 : (earIndex + 1);
-
-			Triangle toAdd = new Triangle(xrem[earIndex], yrem[earIndex], xrem[over], yrem[over], xrem[under], yrem[under]);
-			buffer[bufferSize] = toAdd;
-			++bufferSize;
-
-			xrem = newx;
-			yrem = newy;
-		}
-		Triangle toAdd = new Triangle(xrem[1], yrem[1], xrem[2], yrem[2], xrem[0], yrem[0]);
-		buffer[bufferSize] = toAdd;
-		++bufferSize;
-
-		Triangle[] res = new Triangle[bufferSize];
-		System.arraycopy(buffer, 0, res, 0, bufferSize);
-		return res;
-	}
-
-	private static Polygon[] polygonizeTriangles(Triangle[] triangulated) {
-		Polygon[] polys;
-		int polyIndex = 0;
-
-		if (triangulated == null)
-			return null;
-
-		polys = new Polygon[triangulated.length];
-		boolean[] covered = new boolean[triangulated.length];
-		for (int i = 0; i < triangulated.length; i++)
-			covered[i] = false;
-
-		boolean notDone = true;
-
-		while (notDone) {
-			int currTri = -1;
-			for (int i = 0; i < triangulated.length; i++) {
-				if (!covered[i]) {
-					currTri = i;
-					break;
-				}
-			}
-
-			if (currTri == -1) {
-				notDone = false;
-			} else {
-				Polygon poly = new Polygon(triangulated[currTri]);
-				covered[currTri] = true;
-				for (int i = 0; i < triangulated.length; i++) {
-					if (covered[i])
-						continue;
-
-					Polygon newP = poly.add(triangulated[i]);
-					if (newP == null)
-						continue;
-
-					if (newP.isConvex()) {
-						poly = newP;
-						covered[i] = true;
-					}
-				}
-				polys[polyIndex] = poly;
-				polyIndex++;
-			}
-		}
-
-		Polygon[] ret = new Polygon[polyIndex];
-		System.arraycopy(polys, 0, ret, 0, polyIndex);
-		return ret;
-	}
-
-	private static boolean isEar(int i, float[] xv, float[] yv) {
-		float dx0, dy0, dx1, dy1;
-		dx0 = dy0 = dx1 = dy1 = 0;
-
-		if (i >= xv.length || i < 0 || xv.length < 3)
-			return false;
-
-		int upper = i + 1;
-		int lower = i - 1;
-
-		if (i == 0) {
-			dx0 = xv[0] - xv[xv.length - 1];
-			dy0 = yv[0] - yv[yv.length - 1];
-			dx1 = xv[1] - xv[0];
-			dy1 = yv[1] - yv[0];
-			lower = xv.length - 1;
-		} else if (i == xv.length - 1) {
-			dx0 = xv[i] - xv[i - 1];
-			dy0 = yv[i] - yv[i - 1];
-			dx1 = xv[0] - xv[i];
-			dy1 = yv[0] - yv[i];
-			upper = 0;
-		} else {
-			dx0 = xv[i] - xv[i - 1];
-			dy0 = yv[i] - yv[i - 1];
-			dx1 = xv[i + 1] - xv[i];
-			dy1 = yv[i + 1] - yv[i];
-		}
-
-		float cross = dx0 * dy1 - dx1 * dy0;
-		if (cross > 0)
-			return false;
-
-		Triangle myTri = new Triangle(xv[i], yv[i], xv[upper], yv[upper], xv[lower], yv[lower]);
-		for (int j = 0; j < xv.length; ++j) {
-			if (j == i || j == lower || j == upper)
-				continue;
-			if (myTri.isInside(xv[j], yv[j]))
-				return false;
-		}
-
-		return true;
-	}
-}
\ No newline at end of file
diff --git a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/earclipping/Polygon.java b/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/earclipping/Polygon.java
deleted file mode 100644
index 967038c..0000000
--- a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/earclipping/Polygon.java
+++ /dev/null
@@ -1,147 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-package com.badlogic.gdx.box2deditor.earclipping;
-
-/**
- *
- * @author EwJordan (http://www.ewjordan.com/earClip/)
- */
-public class Polygon {
-	public float[] x;
-	public float[] y;
-	public int nVertices;
-
-	public Polygon(float[] _x, float[] _y) {
-		nVertices = _x.length;
-		x = new float[nVertices];
-		y = new float[nVertices];
-		for (int i = 0; i < nVertices; ++i) {
-			x[i] = _x[i];
-			y[i] = _y[i];
-		}
-	}
-
-	public Polygon(Triangle t) {
-		this(t.x, t.y);
-	}
-
-	public void set(Polygon p) {
-		nVertices = p.nVertices;
-		x = new float[nVertices];
-		y = new float[nVertices];
-		for (int i = 0; i < nVertices; ++i) {
-			x[i] = p.x[i];
-			y[i] = p.y[i];
-		}
-	}
-
-	public boolean isConvex() {
-		boolean isPositive = false;
-		for (int i = 0; i < nVertices; ++i) {
-			int lower = (i == 0) ? (nVertices - 1) : (i - 1);
-			int middle = i;
-			int upper = (i == nVertices - 1) ? (0) : (i + 1);
-			float dx0 = x[middle] - x[lower];
-			float dy0 = y[middle] - y[lower];
-			float dx1 = x[upper] - x[middle];
-			float dy1 = y[upper] - y[middle];
-			float cross = dx0 * dy1 - dx1 * dy0;
-			//Cross product should have same sign
-			//for each vertex if poly is convex.
-			boolean newIsP = (cross > 0) ? true : false;
-			if (i == 0) {
-				isPositive = newIsP;
-			} else if (isPositive != newIsP) {
-				return false;
-			}
-		}
-		return true;
-	}
-
-	/*
-	 * Tries to add a triangle to the polygon.
-	 * Returns null if it can't connect properly.
-	 * Assumes bitwise equality of join vertices.
-	 */
-	public Polygon add(Triangle t) {
-		//First, find vertices that connect
-		int firstP = -1;
-		int firstT = -1;
-		int secondP = -1;
-		int secondT = -1;
-		for (int i = 0; i < nVertices; i++) {
-			if (t.x[0] == x[i] && t.y[0] == y[i]) {
-				if (firstP == -1) {
-					firstP = i;
-					firstT = 0;
-				} else {
-					secondP = i;
-					secondT = 0;
-				}
-			} else if (t.x[1] == x[i] && t.y[1] == y[i]) {
-				if (firstP == -1) {
-					firstP = i;
-					firstT = 1;
-				} else {
-					secondP = i;
-					secondT = 1;
-				}
-			} else if (t.x[2] == x[i] && t.y[2] == y[i]) {
-				if (firstP == -1) {
-					firstP = i;
-					firstT = 2;
-				} else {
-					secondP = i;
-					secondT = 2;
-				}
-			}
-		}
-		//Fix ordering if first should be last vertex of poly
-		if (firstP == 0 && secondP == nVertices - 1) {
-			firstP = nVertices - 1;
-			secondP = 0;
-		}
-
-		//Didn't find it
-		if (secondP == -1) {
-			return null;
-		}
-
-		//Find tip index on triangle
-		int tipT = 0;
-		if (tipT == firstT || tipT == secondT) {
-			tipT = 1;
-		}
-		if (tipT == firstT || tipT == secondT) {
-			tipT = 2;
-		}
-
-		float[] newx = new float[nVertices + 1];
-		float[] newy = new float[nVertices + 1];
-		int currOut = 0;
-		for (int i = 0; i < nVertices; i++) {
-			newx[currOut] = x[i];
-			newy[currOut] = y[i];
-			if (i == firstP) {
-				++currOut;
-				newx[currOut] = t.x[tipT];
-				newy[currOut] = t.y[tipT];
-			}
-			++currOut;
-		}
-		return new Polygon(newx, newy);
-	}
-}
\ No newline at end of file
diff --git a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/earclipping/Triangle.java b/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/earclipping/Triangle.java
deleted file mode 100644
index ad0c642..0000000
--- a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/earclipping/Triangle.java
+++ /dev/null
@@ -1,71 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-package com.badlogic.gdx.box2deditor.earclipping;
-
-/**
- *
- * @author EwJordan (http://www.ewjordan.com/earClip/)
- */
-public class Triangle {
-	public float[] x;
-	public float[] y;
-
-	public Triangle(float x1, float y1, float x2, float y2, float x3, float y3) {
-		x = new float[3];
-		y = new float[3];
-		float dx1 = x2 - x1;
-		float dx2 = x3 - x1;
-		float dy1 = y2 - y1;
-		float dy2 = y3 - y1;
-		float cross = dx1 * dy2 - dx2 * dy1;
-		boolean ccw = (cross > 0);
-		if (ccw) {
-			x[0] = x1;
-			x[1] = x2;
-			x[2] = x3;
-			y[0] = y1;
-			y[1] = y2;
-			y[2] = y3;
-		} else {
-			x[0] = x1;
-			x[1] = x3;
-			x[2] = x2;
-			y[0] = y1;
-			y[1] = y3;
-			y[2] = y2;
-		}
-	}
-
-	public boolean isInside(float _x, float _y) {
-		float vx2 = _x - x[0];
-		float vy2 = _y - y[0];
-		float vx1 = x[1] - x[0];
-		float vy1 = y[1] - y[0];
-		float vx0 = x[2] - x[0];
-		float vy0 = y[2] - y[0];
-
-		float dot00 = vx0 * vx0 + vy0 * vy0;
-		float dot01 = vx0 * vx1 + vy0 * vy1;
-		float dot02 = vx0 * vx2 + vy0 * vy2;
-		float dot11 = vx1 * vx1 + vy1 * vy1;
-		float dot12 = vx1 * vx2 + vy1 * vy2;
-		float invDenom = 1f / (dot00 * dot11 - dot01 * dot01);
-		float u = (dot11 * dot02 - dot01 * dot12) * invDenom;
-		float v = (dot00 * dot12 - dot01 * dot02) * invDenom;
-
-		return ((u > 0) && (v > 0) && (u + v < 1));
-	}
-}
\ No newline at end of file
diff --git a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/gfx/ball.png b/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/gfx/ball.png
deleted file mode 100644
index 940e742..0000000
Binary files a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/gfx/ball.png and /dev/null differ
diff --git a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/gfx/ic_add.png b/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/gfx/ic_add.png
deleted file mode 100644
index 7428c48..0000000
Binary files a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/gfx/ic_add.png and /dev/null differ
diff --git a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/gfx/ic_ball.png b/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/gfx/ic_ball.png
deleted file mode 100644
index ca39c60..0000000
Binary files a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/gfx/ic_ball.png and /dev/null differ
diff --git a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/gfx/ic_delete.png b/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/gfx/ic_delete.png
deleted file mode 100644
index cf640c1..0000000
Binary files a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/gfx/ic_delete.png and /dev/null differ
diff --git a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/gfx/ic_edit.png b/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/gfx/ic_edit.png
deleted file mode 100644
index b93e776..0000000
Binary files a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/gfx/ic_edit.png and /dev/null differ
diff --git a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/gfx/ic_export.png b/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/gfx/ic_export.png
deleted file mode 100644
index 555887a..0000000
Binary files a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/gfx/ic_export.png and /dev/null differ
diff --git a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/gfx/ic_gear.png b/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/gfx/ic_gear.png
deleted file mode 100644
index 8f4eeb7..0000000
Binary files a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/gfx/ic_gear.png and /dev/null differ
diff --git a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/gfx/ic_help.png b/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/gfx/ic_help.png
deleted file mode 100644
index 1d15c7b..0000000
Binary files a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/gfx/ic_help.png and /dev/null differ
diff --git a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/gfx/ic_import.png b/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/gfx/ic_import.png
deleted file mode 100644
index 922cb07..0000000
Binary files a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/gfx/ic_import.png and /dev/null differ
diff --git a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/gfx/ic_remove.png b/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/gfx/ic_remove.png
deleted file mode 100644
index 03fb9be..0000000
Binary files a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/gfx/ic_remove.png and /dev/null differ
diff --git a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/gfx/ic_shape.png b/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/gfx/ic_shape.png
deleted file mode 100644
index 6d2ff2c..0000000
Binary files a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/gfx/ic_shape.png and /dev/null differ
diff --git a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/gfx/logo.gif b/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/gfx/logo.gif
deleted file mode 100644
index 1b049dd..0000000
Binary files a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/gfx/logo.gif and /dev/null differ
diff --git a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/gfx/transparent.png b/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/gfx/transparent.png
deleted file mode 100644
index e9d8c9b..0000000
Binary files a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/gfx/transparent.png and /dev/null differ
diff --git a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/io/IO.java b/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/io/IO.java
deleted file mode 100644
index 624ac17..0000000
--- a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/io/IO.java
+++ /dev/null
@@ -1,119 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-package com.badlogic.gdx.box2deditor.io;
-
-import com.badlogic.gdx.box2deditor.models.BodyModel;
-import com.badlogic.gdx.math.Vector2;
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
-import java.io.File;
-import java.io.FileInputStream;
-import java.io.FileOutputStream;
-import java.io.IOException;
-import java.util.Map;
-import java.util.TreeMap;
-
-/**
- *
- * @author Aurelien Ribon (aurelien.ribon@gmail.com)
- */
-public class IO {
-	/**
-	 * Exports a list of BodyModels to a file.
-	 * @param outputFile The file to write. Does not need to exist.
-	 * @param map A map of BodyModels associated to names.
-	 * @throws IOException
-	 */
-    public static void exportToFile(File outputFile, Map<String, BodyModel> map) throws IOException {
-		DataOutputStream os = new DataOutputStream(new FileOutputStream(outputFile));
-
-		for (String name : map.keySet()) {
-			BodyModel bm = map.get(name);
-			if (bm.getShapes() == null || bm.getPolygons() == null)
-				continue;
-
-			os.writeUTF(name);
-			writeVecss(os, bm.getShapes());
-			writeVecss(os, bm.getPolygons());
-		}
-
-		os.close();
-	}
-
-	private static void writeVec(DataOutputStream os, Vector2 v) throws IOException {
-		os.writeFloat(v.x);
-		os.writeFloat(v.y);
-	}
-
-	private static void writeVecs(DataOutputStream os, Vector2[] vs) throws IOException {
-		os.writeInt(vs.length);
-		for (Vector2 v : vs)
-			writeVec(os, v);
-	}
-
-	private static void writeVecss(DataOutputStream os, Vector2[][] vss) throws IOException {
-		os.writeInt(vss.length);
-		for (Vector2[] vs : vss)
-			writeVecs(os, vs);
-	}
-
-	/**
-	 * Imports a list of BodyModels from a file.
-	 * @param inputFile The file to read.
-	 * @return A map of BodyModels associated to names.
-	 * @throws IOException
-	 */
-	public static Map<String, BodyModel> importFromFile(File inputFile) throws IOException {
-		DataInputStream is = new DataInputStream(new FileInputStream(inputFile));
-		Map<String, BodyModel> map = new TreeMap<String, BodyModel>();
-
-		while (is.available() > 0) {
-			String name = is.readUTF();
-			Vector2[][] points = readVecss(is);
-			Vector2[][] polygons = readVecss(is);
-
-			BodyModel bm = new BodyModel();
-			bm.set(points, polygons);
-
-			map.put(name, bm);
-		}
-		
-		return map;
-	}
-
-	private static Vector2 readVec(DataInputStream is) throws IOException {
-		Vector2 v = new Vector2();
-		v.x = is.readFloat();
-		v.y = is.readFloat();
-		return v;
-	}
-
-	private static Vector2[] readVecs(DataInputStream is) throws IOException {
-		int len = is.readInt();
-		Vector2[] vs = new Vector2[len];
-		for (int i=0; i<len; i++)
-			vs[i] = readVec(is);
-		return vs;
-	}
-
-	private static Vector2[][] readVecss(DataInputStream is) throws IOException {
-		int len = is.readInt();
-		Vector2[][] vss = new Vector2[len][];
-		for (int i=0; i<len; i++)
-			vss[i] = readVecs(is);
-		return vss;
-	}
-}
\ No newline at end of file
diff --git a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/models/BodyModel.java b/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/models/BodyModel.java
deleted file mode 100644
index c808b67..0000000
--- a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/models/BodyModel.java
+++ /dev/null
@@ -1,53 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-package com.badlogic.gdx.box2deditor.models;
-
-import com.badlogic.gdx.box2deditor.utils.VectorUtils;
-import com.badlogic.gdx.math.Vector2;
-
-/**
- *
- * @author Aurelien Ribon (aurelien.ribon@gmail.com)
- */
-public class BodyModel {
-	public static final BodyModel EMPTY = new BodyModel() {
-		@Override public void set(Vector2[][] shapes, Vector2[][] polygons) {}
-	};
-
-	// -------------------------------------------------------------------------
-
-	private Vector2[][] shapes;
-	private Vector2[][] polygons;
-
-	public void clearAll() {
-		shapes = null;
-		polygons = null;
-	}
-
-	public void set(Vector2[][] shapes, Vector2[][] polygons) {
-		clearAll();
-		this.shapes = VectorUtils.getCopy(shapes);
-		this.polygons = VectorUtils.getCopy(polygons);
-	}
-
-	public Vector2[][] getShapes() {
-		return VectorUtils.getCopy(shapes);
-	}
-
-	public Vector2[][] getPolygons() {
-		return VectorUtils.getCopy(polygons);
-	}
-}
\ No newline at end of file
diff --git a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/models/ShapeModel.java b/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/models/ShapeModel.java
deleted file mode 100644
index 8fff2e9..0000000
--- a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/models/ShapeModel.java
+++ /dev/null
@@ -1,85 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-package com.badlogic.gdx.box2deditor.models;
-
-import com.badlogic.gdx.box2deditor.utils.ShapeUtils;
-import com.badlogic.gdx.math.Vector2;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.Collections;
-import java.util.List;
-
-/**
- *
- * @author Aurelien Ribon (aurelien.ribon@gmail.com)
- */
-public class ShapeModel {
-    private final List<Vector2> points = new ArrayList<Vector2>();
-	private boolean isClosed = false;
-
-	public ShapeModel() {
-	}
-
-	public ShapeModel(Vector2[] points) {
-		this.points.addAll(Arrays.asList(points));
-	}
-
-	public void addPoint(Vector2 p) {
-		points.add(p);
-	}
-
-	public void addPoint(int idx, Vector2 p) {
-		points.add(idx, p);
-	}
-
-	public void removePoint(Vector2 p) {
-		points.remove(p);
-	}
-
-	public void removePoint(int idx) {
-		points.remove(idx);
-	}
-
-	public void setPoints(Vector2[] points) {
-		this.points.addAll(Arrays.asList(points));
-	}
-
-	public Vector2[] getPoints() {
-		return points.toArray(new Vector2[points.size()]);
-	}
-
-	public Vector2 getPoint(int idx) {
-		return points.get(idx);
-	}
-
-	public Vector2 getLastPoint() {
-		return points.get(points.size()-1);
-	}
-
-	public void close() {
-		isClosed = true;
-		if (ShapeUtils.isPolygonCCW(points.toArray(new Vector2[points.size()])))
-			Collections.reverse(points);
-	}
-
-	public boolean isClosed() {
-		return isClosed;
-	}
-
-	public int getPointCount() {
-		return points.size();
-	}
-}
\ No newline at end of file
diff --git a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/renderpanel/App.java b/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/renderpanel/App.java
deleted file mode 100644
index b1d5cef..0000000
--- a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/renderpanel/App.java
+++ /dev/null
@@ -1,319 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-package com.badlogic.gdx.box2deditor.renderpanel;
-
-import com.badlogic.gdx.box2deditor.AppContext;
-import com.badlogic.gdx.box2deditor.renderpanel.inputprocessors.BallThrowInputProcessor;
-import com.badlogic.gdx.box2deditor.renderpanel.inputprocessors.PanZoomInputProcessor;
-import com.badlogic.gdx.box2deditor.renderpanel.inputprocessors.ShapeCreationInputProcessor;
-import com.badlogic.gdx.box2deditor.renderpanel.inputprocessors.ShapeEditionInputProcessor;
-import com.badlogic.gdx.ApplicationListener;
-import com.badlogic.gdx.Gdx;
-import com.badlogic.gdx.InputMultiplexer;
-import com.badlogic.gdx.graphics.Color;
-import com.badlogic.gdx.graphics.GL10;
-import com.badlogic.gdx.graphics.OrthographicCamera;
-import com.badlogic.gdx.graphics.Pixmap;
-import com.badlogic.gdx.graphics.Texture;
-import com.badlogic.gdx.graphics.g2d.BitmapFont;
-import com.badlogic.gdx.graphics.g2d.Sprite;
-import com.badlogic.gdx.graphics.g2d.SpriteBatch;
-import com.badlogic.gdx.math.MathUtils;
-import com.badlogic.gdx.math.Vector2;
-import com.badlogic.gdx.physics.box2d.Body;
-import com.badlogic.gdx.physics.box2d.BodyDef;
-import com.badlogic.gdx.physics.box2d.BodyDef.BodyType;
-import com.badlogic.gdx.physics.box2d.CircleShape;
-import com.badlogic.gdx.physics.box2d.FixtureDef;
-import com.badlogic.gdx.physics.box2d.PolygonShape;
-import com.badlogic.gdx.physics.box2d.World;
-import java.util.ArrayList;
-import java.util.List;
-import java.util.Random;
-
-/**
- *
- * @author Aurelien Ribon (aurelien.ribon@gmail.com)
- */
-public class App implements ApplicationListener {
-	private static App instance = new App();
-	public static App instance() { if (instance == null) instance = new App(); return instance; }
-
-	private static final float PX_PER_METER = 50;
-
-	private AppDrawer drawer;
-	private SpriteBatch sb;
-	private BitmapFont font;
-	private Texture backgroundTexture;
-
-	private OrthographicCamera camera;
-	private int zoom = 100;
-	private final int[] zoomLevels = {16, 25, 33, 50, 66, 100, 150, 200, 300, 400, 600, 800, 1000, 1500, 2000, 2500, 3000, 4000, 5000};
-
-	private Pixmap assetPixmap;
-	private Texture assetTexture;
-	private Sprite assetSprite;
-	int[] potWidths = {1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 5096};
-
-	private Random rand;
-	private World world;
-	private Texture ballTexture;
-	private List<Body> ballModels;
-	private List<Sprite> ballSprites;
-	
-	@Override
-	public void create() {
-		sb = new SpriteBatch();
-		
-		font = new BitmapFont();
-		font.setColor(Color.BLACK);
-
-		camera = new OrthographicCamera(Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
-		camera.update();
-
-		backgroundTexture = new Texture(Gdx.files.classpath("aurelienribon/box2deditor/gfx/transparent.png"));
-		backgroundTexture.setWrap(Texture.TextureWrap.Repeat, Texture.TextureWrap.Repeat);
-
-		rand = new Random();
-		ballTexture = new Texture(Gdx.files.classpath("aurelienribon/box2deditor/gfx/ball.png"));
-		ballModels = new ArrayList<Body>();
-		ballSprites = new ArrayList<Sprite>();
-		
-		drawer = new AppDrawer(camera);
-
-		InputMultiplexer im = new InputMultiplexer();
-		im.addProcessor(new PanZoomInputProcessor());
-		im.addProcessor(new ShapeCreationInputProcessor());
-		im.addProcessor(new ShapeEditionInputProcessor());
-		im.addProcessor(new BallThrowInputProcessor());
-		Gdx.input.setInputProcessor(im);
-		Gdx.graphics.setVSync(true);
-	}
-
-	@Override
-	public void resume() {
-	}
-
-	@Override
-	public void render() {
-		if (assetSprite != null)
-			assetSprite.setColor(1, 1, 1, AppContext.instance().isAssetDrawnWithOpacity50 ? 0.5f : 1f);
-
-		if (world != null)
-			world.step(Gdx.graphics.getDeltaTime(), 10, 10);
-
-		GL10 gl = Gdx.gl10;
-		gl.glClearColor(1, 1, 1, 1);
-		gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
-
-		float w = Gdx.graphics.getWidth();
-		float h = Gdx.graphics.getHeight();
-		float tw = backgroundTexture.getWidth();
-		float th = backgroundTexture.getHeight();
-
-		sb.getProjectionMatrix().setToOrtho2D(0, 0, w, h);
-		sb.begin();
-		sb.disableBlending();
-		sb.draw(backgroundTexture, 0f, 0f, w, h, 0f, 0f, w/tw, h/th);
-		sb.enableBlending();
-		font.draw(sb, "Zoom: " + zoom + "%", 5, 45);
-		font.draw(sb, "Fps: " + Gdx.graphics.getFramesPerSecond(), 5, 25);
-		sb.end();
-
-		sb.setProjectionMatrix(camera.combined);
-		sb.begin();
-		if (assetSprite != null && AppContext.instance().isAssetDrawn)
-			assetSprite.draw(sb);
-		for (int i=0; i<ballSprites.size(); i++) {
-			Sprite sp = ballSprites.get(i);
-			Vector2 pos = ballModels.get(i).getWorldCenter().mul(PX_PER_METER).sub(sp.getWidth()/2, sp.getHeight()/2);
-			float angleDeg = ballModels.get(i).getAngle() * MathUtils.radiansToDegrees;
-			sp.setPosition(pos.x, pos.y);
-			sp.setRotation(angleDeg);
-			sp.draw(sb);
-		}
-		sb.end();
-
-		camera.apply(gl);
-		drawer.draw();
-	}
-
-	@Override
-	public void resize(int width, int height) {
-		GL10 gl = Gdx.gl10;
-		gl.glViewport(0, 0, width, height);
-		camera.viewportWidth = width;
-		camera.viewportHeight = height;
-		camera.update();
-	}
-
-	@Override
-	public void pause() {
-	}
-
-	@Override
-	public void dispose() {
-		clearAsset();
-		backgroundTexture.dispose();
-		sb.dispose();
-		font.dispose();
-	}
-
-	// -------------------------------------------------------------------------
-	// Public API
-	// -------------------------------------------------------------------------
-
-	public Vector2 screenToWorld(int x, int y) {
-		return new Vector2(x, Gdx.graphics.getHeight() - y)
-			.sub(Gdx.graphics.getWidth()/2, Gdx.graphics.getHeight()/2)
-			.mul(camera.zoom)
-			.add(camera.position.x, camera.position.y);
-	}
-
-	public void clearAsset() {
-		if (assetPixmap != null) {
-			assetPixmap.dispose();
-			assetPixmap = null;
-		}
-		if (assetTexture != null) {
-			assetTexture.dispose();
-			assetTexture = null;
-		}
-		if (assetSprite != null) {
-			assetSprite = null;
-		}
-		clearBody();
-	}
-
-	public Vector2 setAssetByFile(String fullpath) {
-		clearAsset();
-
-		Pixmap tempPm = new Pixmap(Gdx.files.absolute(fullpath));
-		int origW = tempPm.getWidth();
-		int origH = tempPm.getHeight();
-		int w = getNearestPOT(origW);
-		int h = getNearestPOT(origH);
-		assetPixmap = new Pixmap(w, h, tempPm.getFormat());
-		assetPixmap.drawPixmap(tempPm, 0, h - origH, 0, 0, origW, origH);
-		tempPm.dispose();
-
-		assetTexture = new Texture(assetPixmap);
-		assetTexture.setFilter(Texture.TextureFilter.Linear, Texture.TextureFilter.Linear);
-		assetSprite = new Sprite(assetTexture);
-		assetSprite.setPosition(0, 0);
-
-		camera.position.set(origW/2, origH/2, 0);
-		camera.update();
-
-		return new Vector2(origW, origH);
-	}
-
-	public void clearBody() {
-		ballModels.clear();
-		ballSprites.clear();
-		if (world != null) {
-			world.dispose();
-			world = null;
-		}
-	}
-
-	public boolean isWorldReady() {
-		return world != null;
-	}
-
-	public void setBody(Vector2[][] polygons) {
-		ballModels.clear();
-		ballSprites.clear();
-		if (world != null) {
-			world.dispose();
-			world = null;
-		}
-
-		if (polygons == null || polygons.length == 0)
-			return;
-
-		world = new World(new Vector2(0, 0), true);
-		Body b = world.createBody(new BodyDef());
-
-		for (Vector2[] polygon : polygons) {
-			Vector2[] resizedPolygon = new Vector2[polygon.length];
-			for (int i=0; i<polygon.length; i++)
-				resizedPolygon[i] = new Vector2(polygon[i]).mul(1f / PX_PER_METER);
-
-			PolygonShape shape = new PolygonShape();
-			shape.set(resizedPolygon);
-
-			FixtureDef fd = new FixtureDef();
-			fd.density = 1f;
-			fd.friction = 0.8f;
-			fd.restitution = 0.2f;
-			fd.shape = shape;
-
-			b.createFixture(fd);
-			shape.dispose();
-		}
-	}
-
-	public void fireBall(Vector2 orig, Vector2 force) {
-		float radius = rand.nextFloat() * 10 + 5;
-
-		BodyDef bd = new BodyDef();
-		bd.angularDamping = 0.5f;
-		bd.linearDamping = 0.5f;
-		bd.type = BodyType.DynamicBody;
-		bd.position.set(orig).mul(1 / PX_PER_METER);
-		bd.angle = rand.nextFloat() * MathUtils.PI;
-		Body b = world.createBody(bd);
-		b.applyLinearImpulse(force.mul(2 / PX_PER_METER), orig);
-		ballModels.add(b);
-
-		CircleShape shape = new CircleShape();
-		shape.setRadius(radius / PX_PER_METER);
-		b.createFixture(shape, 1f);
-
-		Sprite sp = new Sprite(ballTexture);
-		sp.setSize(radius*2, radius*2);
-		sp.setOrigin(sp.getWidth()/2, sp.getHeight()/2);
-		ballSprites.add(sp);
-	}
-
-	public OrthographicCamera getCamera() {
-		return camera;
-	}
-
-	public int getZoom() {
-		return zoom;
-	}
-
-	public void setZoom(int zoom) {
-		this.zoom = zoom;
-	}
-
-	public int[] getZoomLevels() {
-		return zoomLevels;
-	}
-
-	// -------------------------------------------------------------------------
-	// Internals
-	// -------------------------------------------------------------------------
-
-	private int getNearestPOT(int d) {
-		for (int i=0; i<potWidths.length; i++)
-			if (d <= potWidths[i])
-				return potWidths[i];
-		return -1;
-	}
-}
\ No newline at end of file
diff --git a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/renderpanel/AppDrawer.java b/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/renderpanel/AppDrawer.java
deleted file mode 100644
index 4ad514f..0000000
--- a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/renderpanel/AppDrawer.java
+++ /dev/null
@@ -1,159 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-package com.badlogic.gdx.box2deditor.renderpanel;
-
-import com.badlogic.gdx.box2deditor.AppContext;
-import com.badlogic.gdx.box2deditor.models.ShapeModel;
-import com.badlogic.gdx.Gdx;
-import com.badlogic.gdx.graphics.Color;
-import com.badlogic.gdx.graphics.GL10;
-import com.badlogic.gdx.graphics.OrthographicCamera;
-import com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer;
-import com.badlogic.gdx.math.Vector2;
-import java.util.List;
-
-/**
- *
- * @author Aurelien Ribon (aurelien.ribon@gmail.com)
- */
-public class AppDrawer {
-	private static final Color SHAPE_LINE_COLOR = new Color(0.2f, 0.2f, 0.8f, 1);
-	private static final Color SHAPE_LASTLINE_COLOR = new Color(0.5f, 0.5f, 0.5f, 1);
-	private static final Color SHAPE_POLY_COLOR = new Color(0.2f, 0.8f, 0.2f, 1);
-	private static final Color MOUSEPATH_COLOR = new Color(0.2f, 0.2f, 0.2f, 1);
-	private static final Color BALLTHROWPATH_COLOR = new Color(0.2f, 0.2f, 0.2f, 1);
-
-	private final OrthographicCamera camera;
-	private final ImmediateModeRenderer imr;
-	private final Vector2 tp1 = new Vector2();
-	private final Vector2 tp2 = new Vector2();
-
-	public AppDrawer(OrthographicCamera camera) {
-		this.camera = camera;
-		this.imr = new ImmediateModeRenderer();
-	}
-
-	// -------------------------------------------------------------------------
-
-	public void draw() {
-		ShapeModel[] shapes = AppContext.instance().getTempShapes();
-		Vector2[][] polys = AppContext.instance().getTempPolygons();
-
-		if (AppContext.instance().arePolyDrawn) {
-			drawPolys(polys);
-		}
-
-		if (AppContext.instance().isShapeDrawn) {
-			drawShapes(shapes);
-			drawPoints(shapes);
-		}
-
-		drawMousePath();
-		drawBallThrowPath();
-	}
-
-	// -------------------------------------------------------------------------
-
-	private void drawShapes(ShapeModel[] shapes) {
-		for (ShapeModel shape : shapes) {
-			Vector2[] points = shape.getPoints();
-			if (points.length > 0) {
-				for (int i=1; i<points.length; i++)
-					drawLine(points[i], points[i-1], SHAPE_LINE_COLOR, 2);
-
-				if (shape.isClosed()) {
-					drawLine(points[0], points[points.length-1], SHAPE_LINE_COLOR, 2);
-				} else {
-					Vector2 nextPoint = AppContext.instance().nextPoint;
-					if (nextPoint != null)
-						drawLine(points[points.length-1], nextPoint, SHAPE_LASTLINE_COLOR, 2);
-				}
-			}
-		}
-	}
-
-	private void drawPoints(ShapeModel[] shapes) {
-		Vector2 np = AppContext.instance().nearestPoint;
-		List<Vector2> sp = AppContext.instance().selectedPoints;
-		float w = 10 * camera.zoom;
-
-		for (ShapeModel shape : shapes) {
-			for (Vector2 p : shape.getPoints()) {
-				if (p == np || sp.contains(p))
-					fillRect(p, w, w, SHAPE_LINE_COLOR);
-				drawRect(p, w, w, SHAPE_LINE_COLOR, 2);
-			}
-		}
-	}
-
-	private void drawPolys(Vector2[][] polys) {
-		for (Vector2[] poly : polys) {
-			for (int i=1; i<poly.length; i++)
-				drawLine(poly[i], poly[i-1], SHAPE_POLY_COLOR, 2);
-			if (poly.length > 0)
-				drawLine(poly[0], poly[poly.length-1], SHAPE_POLY_COLOR, 2);
-		}
-	}
-
-	private void drawMousePath() {
-		List<Vector2> mp = AppContext.instance().mousePath;
-		for (int i=1; i<mp.size(); i++)
-			drawLine(mp.get(i), mp.get(i-1), MOUSEPATH_COLOR, 1);
-		if (mp.size() > 1)
-			drawLine(mp.get(0), mp.get(mp.size()-1), MOUSEPATH_COLOR, 1);
-	}
-
-	private void drawBallThrowPath() {
-		Vector2 v1 = AppContext.instance().ballThrowFirstPoint;
-		Vector2 v2 = AppContext.instance().ballThrowLastPoint;
-		float w = 10 * camera.zoom;
-
-		if (v1 != null && v2 != null) {
-			drawLine(v1, v2, BALLTHROWPATH_COLOR, 3);
-			drawRect(v2, w, w, BALLTHROWPATH_COLOR, 3);
-		}
-	}
-
-	// -------------------------------------------------------------------------
-
-	public void drawLine(Vector2 p1, Vector2 p2, Color c, float lineWidth) {
-		Gdx.gl10.glLineWidth(lineWidth);
-		imr.begin(GL10.GL_LINES);
-		imr.color(c.r, c.g, c.b, c.a); imr.vertex(p1.x, p1.y, 0);
-		imr.color(c.r, c.g, c.b, c.a); imr.vertex(p2.x, p2.y, 0);
-		imr.end();
-	}
-
-	public void drawRect(Vector2 p, float w, float h, Color c, float lineWidth) {
-		Gdx.gl10.glLineWidth(lineWidth);
-		imr.begin(GL10.GL_LINE_STRIP);
-		imr.color(c.r, c.g, c.b, c.a); imr.vertex(p.x - w/2, p.y - h/2, 0);
-		imr.color(c.r, c.g, c.b, c.a); imr.vertex(p.x - w/2, p.y + h/2, 0);
-		imr.color(c.r, c.g, c.b, c.a); imr.vertex(p.x + w/2, p.y + h/2, 0);
-		imr.color(c.r, c.g, c.b, c.a); imr.vertex(p.x + w/2, p.y - h/2, 0);
-		imr.color(c.r, c.g, c.b, c.a); imr.vertex(p.x - w/2, p.y - h/2, 0);
-		imr.end();
-	}
-
-	public void fillRect(Vector2 p, float w, float h, Color c) {
-		imr.begin(GL10.GL_TRIANGLE_FAN);
-		imr.color(c.r, c.g, c.b, c.a); imr.vertex(p.x - w/2, p.y - h/2, 0);
-		imr.color(c.r, c.g, c.b, c.a); imr.vertex(p.x - w/2, p.y + h/2, 0);
-		imr.color(c.r, c.g, c.b, c.a); imr.vertex(p.x + w/2, p.y + h/2, 0);
-		imr.color(c.r, c.g, c.b, c.a); imr.vertex(p.x + w/2, p.y - h/2, 0);
-		imr.end();
-	}
-}
\ No newline at end of file
diff --git a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/renderpanel/inputprocessors/BallThrowInputProcessor.java b/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/renderpanel/inputprocessors/BallThrowInputProcessor.java
deleted file mode 100644
index 835fbd2..0000000
--- a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/renderpanel/inputprocessors/BallThrowInputProcessor.java
+++ /dev/null
@@ -1,87 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-package com.badlogic.gdx.box2deditor.renderpanel.inputprocessors;
-
-import com.badlogic.gdx.box2deditor.AppContext;
-import com.badlogic.gdx.box2deditor.renderpanel.App;
-import com.badlogic.gdx.Gdx;
-import com.badlogic.gdx.Input.Buttons;
-import com.badlogic.gdx.Input.Keys;
-import com.badlogic.gdx.InputAdapter;
-import com.badlogic.gdx.math.Vector2;
-
-/**
- *
- * @author Aurelien Ribon (aurelien.ribon@gmail.com)
- */
-public class BallThrowInputProcessor extends InputAdapter {
-	boolean isActive = false;
-
-	@Override
-	public boolean touchDown(int x, int y, int pointer, int button) {
-		boolean isValid = button == Buttons.LEFT
-			&& (Gdx.input.isKeyPressed(Keys.SHIFT_LEFT) ||
-			    Gdx.input.isKeyPressed(Keys.SHIFT_RIGHT))
-			&& (!Gdx.input.isKeyPressed(Keys.CONTROL_LEFT) &&
-			    !Gdx.input.isKeyPressed(Keys.CONTROL_RIGHT));
-
-		if (!isValid)
-			return false;
-		isActive = true;
-
-		if (!AppContext.instance().isCurrentModelValid())
-			return true;
-
-		Vector2 p = App.instance().screenToWorld(x, y);
-		AppContext.instance().ballThrowFirstPoint = p;
-		return true;
-	}
-
-	@Override
-	public boolean touchUp(int x, int y, int pointer, int button) {
-		if (!isActive)
-			return false;
-		isActive = false;
-
-		if (!AppContext.instance().isCurrentModelValid())
-			return true;
-
-		Vector2 p = App.instance().screenToWorld(x, y);
-		AppContext.instance().ballThrowLastPoint = p;
-		
-		if (App.instance().isWorldReady()) {
-			Vector2 delta = new Vector2(AppContext.instance().ballThrowLastPoint).sub(AppContext.instance().ballThrowFirstPoint);
-			App.instance().fireBall(AppContext.instance().ballThrowFirstPoint, delta);
-		}
-		
-		AppContext.instance().ballThrowFirstPoint = null;
-		AppContext.instance().ballThrowLastPoint = null;
-		return true;
-	}
-
-	@Override
-	public boolean touchDragged(int x, int y, int pointer) {
-		if (!isActive)
-			return false;
-
-		if (!AppContext.instance().isCurrentModelValid())
-			return true;
-
-		Vector2 p = App.instance().screenToWorld(x, y);
-		AppContext.instance().ballThrowLastPoint = p;
-		return true;
-	}
-}
\ No newline at end of file
diff --git a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/renderpanel/inputprocessors/PanZoomInputProcessor.java b/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/renderpanel/inputprocessors/PanZoomInputProcessor.java
deleted file mode 100644
index c34fb49..0000000
--- a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/renderpanel/inputprocessors/PanZoomInputProcessor.java
+++ /dev/null
@@ -1,76 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-package com.badlogic.gdx.box2deditor.renderpanel.inputprocessors;
-
-import com.badlogic.gdx.box2deditor.renderpanel.App;
-import com.badlogic.gdx.Gdx;
-import com.badlogic.gdx.Input.Buttons;
-import com.badlogic.gdx.InputAdapter;
-import com.badlogic.gdx.graphics.OrthographicCamera;
-import com.badlogic.gdx.math.Vector2;
-
-/**
- *
- * @author Aurelien Ribon (aurelien.ribon@gmail.com)
- */
-public class PanZoomInputProcessor extends InputAdapter {
-	private final Vector2 lastTouch = new Vector2();
-
-	@Override
-	public boolean touchDown(int x, int y, int pointer, int button) {
-		if (button != Buttons.RIGHT)
-			return false;
-
-		lastTouch.set(x, y);
-		return false;
-	}
-
-	@Override
-	public boolean touchDragged(int x, int y, int pointer) {
-		if (!Gdx.input.isButtonPressed(Buttons.RIGHT))
-			return false;
-
-		OrthographicCamera camera = App.instance().getCamera();
-		Vector2 delta = new Vector2(x, y).sub(lastTouch).mul(camera.zoom);
-		camera.translate(-delta.x, delta.y, 0);
-		camera.update();
-		lastTouch.set(x, y);
-		return false;
-	}
-
-	@Override
-	public boolean scrolled(int amount) {
-		App app = App.instance();
-		int[] zl = app.getZoomLevels();
-
-		if (app.getZoom() == zl[0] && amount < 0) {
-			app.setZoom(zl[1]);
-		} else  if (app.getZoom() == zl[zl.length-1] && amount > 0) {
-			app.setZoom(zl[zl.length-2]);
-		} else {
-			for (int i=1; i<zl.length-1; i++) {
-				if (zl[i] == app.getZoom()) {
-					app.setZoom(amount > 0 ? zl[i-1] : zl[i+1]);
-					break;
-				}
-			}
-		}
-
-		app.getCamera().zoom = 100f / app.getZoom();
-		app.getCamera().update();
-		return false;
-	}
-}
\ No newline at end of file
diff --git a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/renderpanel/inputprocessors/ShapeCreationInputProcessor.java b/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/renderpanel/inputprocessors/ShapeCreationInputProcessor.java
deleted file mode 100644
index 4f7d1b2..0000000
--- a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/renderpanel/inputprocessors/ShapeCreationInputProcessor.java
+++ /dev/null
@@ -1,101 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-package com.badlogic.gdx.box2deditor.renderpanel.inputprocessors;
-
-import com.badlogic.gdx.box2deditor.AppContext;
-import com.badlogic.gdx.box2deditor.models.ShapeModel;
-import com.badlogic.gdx.box2deditor.renderpanel.App;
-import com.badlogic.gdx.Gdx;
-import com.badlogic.gdx.Input.Buttons;
-import com.badlogic.gdx.Input.Keys;
-import com.badlogic.gdx.InputAdapter;
-import com.badlogic.gdx.math.Vector2;
-
-/**
- *
- * @author Aurelien Ribon (aurelien.ribon@gmail.com)
- */
-public class ShapeCreationInputProcessor extends InputAdapter {
-	boolean isActive = false;
-
-	@Override
-	public boolean touchDown(int x, int y, int pointer, int button) {
-		boolean isValid = button == Buttons.LEFT 
-			&& (!Gdx.input.isKeyPressed(Keys.SHIFT_LEFT) &&
-			    !Gdx.input.isKeyPressed(Keys.SHIFT_RIGHT))
-			&& (Gdx.input.isKeyPressed(Keys.CONTROL_LEFT) ||
-			    Gdx.input.isKeyPressed(Keys.CONTROL_RIGHT));
-
-		if (!isValid)
-			return false;
-		isActive = true;
-
-		if (!AppContext.instance().isCurrentModelValid())
-			return true;
-
-		ShapeModel lastShape = AppContext.instance().getLastTempShape();
-
-		if (lastShape == null || lastShape.isClosed()) {
-			AppContext.instance().createNewTempShape();
-			lastShape = AppContext.instance().getLastTempShape();
-		}
-
-		if (lastShape.getPointCount() >= 3 && AppContext.instance().nearestPoint == lastShape.getPoint(0)) {
-			lastShape.close();
-			AppContext.instance().saveCurrentModel();
-		} else {
-			Vector2 p = App.instance().screenToWorld(x, y);
-			lastShape.addPoint(p);
-		}
-
-		return true;
-	}
-
-	@Override
-	public boolean touchUp(int x, int y, int pointer, int button) {
-		if (!isActive)
-			return false;
-		isActive = false;
-		return true;
-	}
-
-	@Override
-	public boolean touchDragged(int x, int y, int pointer) {
-		if (!isActive)
-			return false;
-		touchMoved(x, y);
-		return true;
-	}
-
-	@Override
-	public boolean touchMoved(int x, int y) {
-		if (!AppContext.instance().isCurrentModelValid())
-			return false;
-
-		Vector2 p = App.instance().screenToWorld(x, y);
-
-		// Nearest point computation
-		AppContext.instance().nearestPoint = null;
-		ShapeModel shape = AppContext.instance().getLastTempShape();
-		if (shape != null && !shape.isClosed() && shape.getPointCount() >= 3)
-			if (shape.getPoint(0).dst(p) < 10 * App.instance().getCamera().zoom)
-				AppContext.instance().nearestPoint = shape.getPoint(0);
-
-		// Next point assignment
-		AppContext.instance().nextPoint = p;
-		return false;
-	}
-}
\ No newline at end of file
diff --git a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/renderpanel/inputprocessors/ShapeEditionInputProcessor.java b/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/renderpanel/inputprocessors/ShapeEditionInputProcessor.java
deleted file mode 100644
index db3629a..0000000
--- a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/renderpanel/inputprocessors/ShapeEditionInputProcessor.java
+++ /dev/null
@@ -1,160 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-package com.badlogic.gdx.box2deditor.renderpanel.inputprocessors;
-
-import com.badlogic.gdx.box2deditor.AppContext;
-import com.badlogic.gdx.box2deditor.models.ShapeModel;
-import com.badlogic.gdx.box2deditor.renderpanel.App;
-import com.badlogic.gdx.Gdx;
-import com.badlogic.gdx.Input.Buttons;
-import com.badlogic.gdx.Input.Keys;
-import com.badlogic.gdx.InputAdapter;
-import com.badlogic.gdx.math.Vector2;
-import java.awt.Polygon;
-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.List;
-
-/**
- *
- * @author Aurelien Ribon (aurelien.ribon@gmail.com)
- */
-public class ShapeEditionInputProcessor extends InputAdapter {
-	boolean isActive = false;
-	private Vector2 draggedPoint;
-
-	@Override
-	public boolean touchDown(int x, int y, int pointer, int button) {
-		boolean isValid = button == Buttons.LEFT
-			&& (!Gdx.input.isKeyPressed(Keys.SHIFT_LEFT) &&
-			    !Gdx.input.isKeyPressed(Keys.SHIFT_RIGHT))
-			&& (!Gdx.input.isKeyPressed(Keys.CONTROL_LEFT) &&
-			    !Gdx.input.isKeyPressed(Keys.CONTROL_RIGHT));
-
-		if (!isValid)
-			return false;
-		isActive = true;
-
-		if (!AppContext.instance().isCurrentModelValid())
-			return true;
-
-		draggedPoint = AppContext.instance().nearestPoint;
-		List<Vector2> selectedPoints = AppContext.instance().selectedPoints;
-
-		if (draggedPoint == null) {
-			selectedPoints.clear();
-			Vector2 p = App.instance().screenToWorld(x, y);
-			AppContext.instance().mousePath.add(p);
-		} else if (!selectedPoints.contains(draggedPoint)) {
-			selectedPoints.clear();
-		}
-
-		return true;
-	}
-
-	@Override
-	public boolean touchUp(int x, int y, int pointer, int button) {
-		if (!isActive)
-			return false;
-		isActive = false;
-
-		if (!AppContext.instance().isCurrentModelValid())
-			return true;
-
-		if (draggedPoint != null) {
-			draggedPoint = null;
-			AppContext.instance().saveCurrentModel();
-		}
-
-		List<Vector2> mousePath = AppContext.instance().mousePath;
-		if (mousePath.size() > 2) {
-			Vector2[] polygonPoints = mousePath.toArray(new Vector2[mousePath.size()]);
-			Vector2[] testedPoints = getAllShapePoints();
-			Vector2[] result = getPointsInPolygon(polygonPoints, testedPoints);
-			Collections.addAll(AppContext.instance().selectedPoints, result);
-		}
-		mousePath.clear();
-		return true;
-	}
-
-	@Override
-	public boolean touchDragged(int x, int y, int pointer) {
-		if (!isActive)
-			return false;
-
-		if (!AppContext.instance().isCurrentModelValid())
-			return true;
-
-		Vector2 p = App.instance().screenToWorld(x, y);
-
-		if (draggedPoint != null) {
-			AppContext.instance().clearTempPolygons();
-
-			float dx = p.x - draggedPoint.x;
-			float dy = p.y - draggedPoint.y;
-			draggedPoint.add(dx, dy);
-
-			for (int i=0; i<AppContext.instance().selectedPoints.size(); i++) {
-				Vector2 sp = AppContext.instance().selectedPoints.get(i);
-				if (sp != draggedPoint)
-					sp.add(dx, dy);
-			}
-		} else {
-			AppContext.instance().mousePath.add(p);
-		}
-		
-		return true;
-	}
-
-	@Override
-	public boolean touchMoved(int x, int y) {
-		if (!AppContext.instance().isCurrentModelValid())
-			return false;
-
-		Vector2 p = App.instance().screenToWorld(x, y);
-
-		// Nearest point computation
-		AppContext.instance().nearestPoint = null;
-		for (Vector2 v : getAllShapePoints())
-			if (v.dst(p) < 10 * App.instance().getCamera().zoom)
-				AppContext.instance().nearestPoint = v;
-
-		return false;
-	}
-
-	// -------------------------------------------------------------------------
-
-	private Vector2[] getPointsInPolygon(Vector2[] polygonPoints, Vector2[] points) {
-		List<Vector2> circledPoints = new ArrayList<Vector2>();
-		Polygon polygon = new Polygon();
-
-		for (Vector2 p : polygonPoints)
-			polygon.addPoint((int)(p.x * 1000), (int)(p.y * 1000));
-
-		for (Vector2 p : points)
-			if (polygon.contains(p.x * 1000, p.y * 1000))
-				circledPoints.add(p);
-
-		return circledPoints.toArray(new Vector2[0]);
-	}
-
-	private Vector2[] getAllShapePoints() {
-		List<Vector2> points = new ArrayList<Vector2>();
-		for (ShapeModel shape : AppContext.instance().getTempShapes())
-			Collections.addAll(points, shape.getPoints());
-		return points.toArray(new Vector2[points.size()]);
-	}
-}
\ No newline at end of file
diff --git a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/ui/MainWindow.form b/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/ui/MainWindow.form
deleted file mode 100644
index 21f65dd..0000000
--- a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/ui/MainWindow.form
+++ /dev/null
@@ -1,864 +0,0 @@
-<?xml version="1.1" encoding="UTF-8" ?>
-
-<Form version="1.5" maxVersion="1.7" type="org.netbeans.modules.form.forminfo.JFrameFormInfo">
-  <NonVisualComponents>
-    <Component class="javax.swing.ButtonGroup" name="shapeModeBtnGrp">
-    </Component>
-  </NonVisualComponents>
-  <Properties>
-    <Property name="defaultCloseOperation" type="int" value="2"/>
-  </Properties>
-  <SyntheticProperties>
-    <SyntheticProperty name="formSizePolicy" type="int" value="1"/>
-  </SyntheticProperties>
-  <AuxValues>
-    <AuxValue name="FormSettings_autoResourcing" type="java.lang.Integer" value="0"/>
-    <AuxValue name="FormSettings_autoSetComponentName" type="java.lang.Boolean" value="false"/>
-    <AuxValue name="FormSettings_generateFQN" type="java.lang.Boolean" value="true"/>
-    <AuxValue name="FormSettings_generateMnemonicsCode" type="java.lang.Boolean" value="false"/>
-    <AuxValue name="FormSettings_i18nAutoMode" type="java.lang.Boolean" value="false"/>
-    <AuxValue name="FormSettings_layoutCodeTarget" type="java.lang.Integer" value="1"/>
-    <AuxValue name="FormSettings_listenerGenerationStyle" type="java.lang.Integer" value="0"/>
-    <AuxValue name="FormSettings_variablesLocal" type="java.lang.Boolean" value="false"/>
-    <AuxValue name="FormSettings_variablesModifier" type="java.lang.Integer" value="2"/>
-    <AuxValue name="designerSize" type="java.awt.Dimension" value="-84,-19,0,5,115,114,0,18,106,97,118,97,46,97,119,116,46,68,105,109,101,110,115,105,111,110,65,-114,-39,-41,-84,95,68,20,2,0,2,73,0,6,104,101,105,103,104,116,73,0,5,119,105,100,116,104,120,112,0,0,2,-91,0,0,3,114"/>
-  </AuxValues>
-
-  <Layout class="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout"/>
-  <SubComponents>
-    <Container class="javax.swing.JPanel" name="renderPanel">
-      <Constraints>
-        <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout" value="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout$BorderConstraintsDescription">
-          <BorderConstraints direction="Center"/>
-        </Constraint>
-      </Constraints>
-
-      <Layout class="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout"/>
-    </Container>
-    <Container class="javax.swing.JPanel" name="westPanel">
-      <Properties>
-        <Property name="border" type="javax.swing.border.Border" editor="org.netbeans.modules.form.editors2.BorderEditor">
-          <Border info="org.netbeans.modules.form.compat2.border.MatteColorBorderInfo">
-            <MatteColorBorder bottom="0" left="0" right="1" top="0"/>
-          </Border>
-        </Property>
-      </Properties>
-      <Constraints>
-        <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout" value="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout$BorderConstraintsDescription">
-          <BorderConstraints direction="West"/>
-        </Constraint>
-      </Constraints>
-
-      <Layout>
-        <DimensionLayout dim="0">
-          <Group type="103" groupAlignment="0" attributes="0">
-              <Component id="jPanel5" alignment="0" max="32767" attributes="0"/>
-              <Component id="jPanel6" alignment="0" max="32767" attributes="0"/>
-              <Component id="jPanel4" alignment="0" max="32767" attributes="0"/>
-          </Group>
-        </DimensionLayout>
-        <DimensionLayout dim="1">
-          <Group type="103" groupAlignment="0" attributes="0">
-              <Group type="102" alignment="0" attributes="0">
-                  <Component id="jPanel5" min="-2" max="-2" attributes="0"/>
-                  <EmptySpace max="-2" attributes="0"/>
-                  <Component id="jPanel6" min="-2" max="-2" attributes="0"/>
-                  <EmptySpace max="-2" attributes="0"/>
-                  <Component id="jPanel4" max="32767" attributes="0"/>
-              </Group>
-          </Group>
-        </DimensionLayout>
-      </Layout>
-      <SubComponents>
-        <Container class="javax.swing.JPanel" name="jPanel4">
-
-          <Layout>
-            <DimensionLayout dim="0">
-              <Group type="103" groupAlignment="0" attributes="0">
-                  <Group type="102" alignment="1" attributes="0">
-                      <EmptySpace max="-2" attributes="0"/>
-                      <Component id="assets_removeAssetBtn" pref="183" max="32767" attributes="0"/>
-                      <EmptySpace max="-2" attributes="0"/>
-                  </Group>
-                  <Group type="102" alignment="0" attributes="0">
-                      <EmptySpace max="-2" attributes="0"/>
-                      <Component id="assets_assetListScrollPane" pref="183" max="32767" attributes="0"/>
-                      <EmptySpace max="-2" attributes="0"/>
-                  </Group>
-                  <Component id="jPanel11" alignment="0" max="32767" attributes="0"/>
-              </Group>
-            </DimensionLayout>
-            <DimensionLayout dim="1">
-              <Group type="103" groupAlignment="0" attributes="0">
-                  <Group type="102" alignment="0" attributes="0">
-                      <Component id="jPanel11" min="-2" max="-2" attributes="0"/>
-                      <EmptySpace min="-2" pref="10" max="-2" attributes="0"/>
-                      <Component id="assets_assetListScrollPane" pref="365" max="32767" attributes="0"/>
-                      <EmptySpace max="-2" attributes="0"/>
-                      <Component id="assets_removeAssetBtn" min="-2" max="-2" attributes="0"/>
-                      <EmptySpace max="-2" attributes="0"/>
-                  </Group>
-              </Group>
-            </DimensionLayout>
-          </Layout>
-          <SubComponents>
-            <Container class="javax.swing.JScrollPane" name="assets_assetListScrollPane">
-              <AuxValues>
-                <AuxValue name="autoScrollPane" type="java.lang.Boolean" value="true"/>
-              </AuxValues>
-
-              <Layout class="org.netbeans.modules.form.compat2.layouts.support.JScrollPaneSupportLayout"/>
-              <SubComponents>
-                <Component class="javax.swing.JList" name="assets_assetList">
-                  <Properties>
-                    <Property name="model" type="javax.swing.ListModel" editor="org.netbeans.modules.form.editors2.ListModelEditor">
-                      <StringArray count="5">
-                        <StringItem index="0" value="Item 1"/>
-                        <StringItem index="1" value="Item 2"/>
-                        <StringItem index="2" value="Item 3"/>
-                        <StringItem index="3" value="Item 4"/>
-                        <StringItem index="4" value="Item 5"/>
-                      </StringArray>
-                    </Property>
-                  </Properties>
-                  <Events>
-                    <EventHandler event="valueChanged" listener="javax.swing.event.ListSelectionListener" parameters="javax.swing.event.ListSelectionEvent" handler="assets_assetListValueChanged"/>
-                  </Events>
-                </Component>
-              </SubComponents>
-            </Container>
-            <Component class="javax.swing.JButton" name="assets_removeAssetBtn">
-              <Properties>
-                <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
-                  <Image iconType="3" name="/aurelienribon/box2deditor/gfx/ic_delete.png"/>
-                </Property>
-                <Property name="text" type="java.lang.String" value="Remove selected asset(s)"/>
-                <Property name="horizontalAlignment" type="int" value="2"/>
-                <Property name="margin" type="java.awt.Insets" editor="org.netbeans.beaninfo.editors.InsetsEditor">
-                  <Insets value="[2, 3, 2, 2]"/>
-                </Property>
-              </Properties>
-              <Events>
-                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="assets_removeAssetBtnActionPerformed"/>
-              </Events>
-            </Component>
-            <Container class="javax.swing.JPanel" name="jPanel11">
-              <Properties>
-                <Property name="background" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
-                  <Color blue="66" green="66" red="66" type="rgb"/>
-                </Property>
-                <Property name="border" type="javax.swing.border.Border" editor="org.netbeans.modules.form.editors2.BorderEditor">
-                  <Border info="org.netbeans.modules.form.compat2.border.EmptyBorderInfo">
-                    <EmptyBorder bottom="5" left="5" right="5" top="5"/>
-                  </Border>
-                </Property>
-              </Properties>
-
-              <Layout>
-                <DimensionLayout dim="0">
-                  <Group type="103" groupAlignment="0" attributes="0">
-                      <Group type="102" alignment="0" attributes="0">
-                          <Component id="jLabel9" min="-2" max="-2" attributes="0"/>
-                          <EmptySpace pref="145" max="32767" attributes="0"/>
-                          <Component id="help_assetsLbl" min="-2" max="-2" attributes="0"/>
-                      </Group>
-                  </Group>
-                </DimensionLayout>
-                <DimensionLayout dim="1">
-                  <Group type="103" groupAlignment="0" attributes="0">
-                      <Component id="jLabel9" alignment="0" min="-2" max="-2" attributes="0"/>
-                      <Component id="help_assetsLbl" alignment="0" min="-2" max="-2" attributes="0"/>
-                  </Group>
-                </DimensionLayout>
-              </Layout>
-              <SubComponents>
-                <Component class="javax.swing.JLabel" name="jLabel9">
-                  <Properties>
-                    <Property name="foreground" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
-                      <Color blue="ff" green="ff" red="ff" type="rgb"/>
-                    </Property>
-                    <Property name="text" type="java.lang.String" value="Assets"/>
-                  </Properties>
-                </Component>
-                <Component class="javax.swing.JLabel" name="help_assetsLbl">
-                  <Properties>
-                    <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
-                      <Image iconType="3" name="/aurelienribon/box2deditor/gfx/ic_help.png"/>
-                    </Property>
-                  </Properties>
-                  <Events>
-                    <EventHandler event="mouseClicked" listener="java.awt.event.MouseListener" parameters="java.awt.event.MouseEvent" handler="help_assetsLblMouseClicked"/>
-                  </Events>
-                </Component>
-              </SubComponents>
-            </Container>
-          </SubComponents>
-        </Container>
-        <Container class="javax.swing.JPanel" name="jPanel5">
-
-          <Layout>
-            <DimensionLayout dim="0">
-              <Group type="103" groupAlignment="0" attributes="0">
-                  <Component id="jSeparator3" alignment="1" pref="203" max="32767" attributes="0"/>
-                  <Group type="102" alignment="1" attributes="0">
-                      <EmptySpace max="-2" attributes="0"/>
-                      <Group type="103" groupAlignment="1" attributes="0">
-                          <Component id="init_addAssetsByFilesBtn" alignment="1" pref="183" max="32767" attributes="0"/>
-                          <Component id="init_setOutputFileBtn" alignment="1" pref="183" max="32767" attributes="0"/>
-                          <Component id="init_outputFileLbl" alignment="1" pref="183" max="32767" attributes="0"/>
-                      </Group>
-                      <EmptySpace max="-2" attributes="0"/>
-                  </Group>
-                  <Component id="jPanel7" alignment="0" max="32767" attributes="0"/>
-                  <Group type="103" rootIndex="1" groupAlignment="0" attributes="0">
-                      <Component id="jPanel9" alignment="0" pref="203" max="32767" attributes="0"/>
-                  </Group>
-              </Group>
-            </DimensionLayout>
-            <DimensionLayout dim="1">
-              <Group type="103" groupAlignment="0" attributes="0">
-                  <Group type="102" alignment="0" attributes="0">
-                      <Component id="jPanel7" min="-2" max="-2" attributes="0"/>
-                      <EmptySpace min="-2" pref="10" max="-2" attributes="0"/>
-                      <Component id="init_setOutputFileBtn" min="-2" max="-2" attributes="0"/>
-                      <EmptySpace max="-2" attributes="0"/>
-                      <Component id="init_outputFileLbl" min="-2" max="-2" attributes="0"/>
-                      <EmptySpace type="unrelated" max="-2" attributes="0"/>
-                      <Component id="jSeparator3" min="-2" pref="10" max="-2" attributes="0"/>
-                      <EmptySpace max="-2" attributes="0"/>
-                      <Component id="init_addAssetsByFilesBtn" min="-2" max="-2" attributes="0"/>
-                      <EmptySpace max="32767" attributes="0"/>
-                  </Group>
-                  <Group type="103" rootIndex="1" groupAlignment="0" attributes="0">
-                      <Group type="102" alignment="0" attributes="0">
-                          <Component id="jPanel9" min="-2" max="-2" attributes="0"/>
-                          <EmptySpace pref="150" max="32767" attributes="0"/>
-                      </Group>
-                  </Group>
-              </Group>
-            </DimensionLayout>
-          </Layout>
-          <SubComponents>
-            <Component class="javax.swing.JButton" name="init_addAssetsByFilesBtn">
-              <Properties>
-                <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
-                  <Image iconType="3" name="/aurelienribon/box2deditor/gfx/ic_add.png"/>
-                </Property>
-                <Property name="text" type="java.lang.String" value="Add assets by image files or dirs"/>
-                <Property name="horizontalAlignment" type="int" value="2"/>
-                <Property name="margin" type="java.awt.Insets" editor="org.netbeans.beaninfo.editors.InsetsEditor">
-                  <Insets value="[2, 3, 2, 2]"/>
-                </Property>
-              </Properties>
-              <Events>
-                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="init_addAssetsByFilesBtnActionPerformed"/>
-              </Events>
-            </Component>
-            <Component class="javax.swing.JButton" name="init_setOutputFileBtn">
-              <Properties>
-                <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
-                  <Image iconType="3" name="/aurelienribon/box2deditor/gfx/ic_gear.png"/>
-                </Property>
-                <Property name="text" type="java.lang.String" value="Set / load output file"/>
-                <Property name="horizontalAlignment" type="int" value="2"/>
-                <Property name="margin" type="java.awt.Insets" editor="org.netbeans.beaninfo.editors.InsetsEditor">
-                  <Insets value="[2, 3, 2, 2]"/>
-                </Property>
-              </Properties>
-              <Events>
-                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="init_setOutputFileBtnActionPerformed"/>
-              </Events>
-            </Component>
-            <Component class="javax.swing.JTextField" name="init_outputFileLbl">
-              <Properties>
-                <Property name="editable" type="boolean" value="false"/>
-                <Property name="horizontalAlignment" type="int" value="11"/>
-                <Property name="text" type="java.lang.String" value="&lt;no file specified&gt;"/>
-              </Properties>
-            </Component>
-            <Component class="javax.swing.JSeparator" name="jSeparator3">
-              <Properties>
-                <Property name="foreground" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
-                  <Color blue="66" green="66" red="66" type="rgb"/>
-                </Property>
-              </Properties>
-            </Component>
-            <Container class="javax.swing.JPanel" name="jPanel9">
-              <Properties>
-                <Property name="background" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
-                  <Color blue="66" green="66" red="66" type="rgb"/>
-                </Property>
-              </Properties>
-
-              <Layout class="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout"/>
-            </Container>
-            <Container class="javax.swing.JPanel" name="jPanel7">
-              <Properties>
-                <Property name="background" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
-                  <Color blue="66" green="66" red="66" type="rgb"/>
-                </Property>
-                <Property name="border" type="javax.swing.border.Border" editor="org.netbeans.modules.form.editors2.BorderEditor">
-                  <Border info="org.netbeans.modules.form.compat2.border.EmptyBorderInfo">
-                    <EmptyBorder bottom="5" left="5" right="5" top="5"/>
-                  </Border>
-                </Property>
-              </Properties>
-
-              <Layout>
-                <DimensionLayout dim="0">
-                  <Group type="103" groupAlignment="0" attributes="0">
-                      <Group type="102" alignment="0" attributes="0">
-                          <Component id="jLabel5" min="-2" max="-2" attributes="0"/>
-                          <EmptySpace pref="112" max="32767" attributes="0"/>
-                          <Component id="help_configurationLbl" min="-2" max="-2" attributes="0"/>
-                      </Group>
-                  </Group>
-                </DimensionLayout>
-                <DimensionLayout dim="1">
-                  <Group type="103" groupAlignment="0" attributes="0">
-                      <Component id="jLabel5" alignment="0" min="-2" max="-2" attributes="0"/>
-                      <Component id="help_configurationLbl" alignment="0" min="-2" max="-2" attributes="0"/>
-                  </Group>
-                </DimensionLayout>
-              </Layout>
-              <SubComponents>
-                <Component class="javax.swing.JLabel" name="jLabel5">
-                  <Properties>
-                    <Property name="foreground" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
-                      <Color blue="ff" green="ff" red="ff" type="rgb"/>
-                    </Property>
-                    <Property name="text" type="java.lang.String" value="Configuration"/>
-                  </Properties>
-                </Component>
-                <Component class="javax.swing.JLabel" name="help_configurationLbl">
-                  <Properties>
-                    <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
-                      <Image iconType="3" name="/aurelienribon/box2deditor/gfx/ic_help.png"/>
-                    </Property>
-                  </Properties>
-                  <Events>
-                    <EventHandler event="mouseClicked" listener="java.awt.event.MouseListener" parameters="java.awt.event.MouseEvent" handler="help_configurationLblMouseClicked"/>
-                  </Events>
-                </Component>
-              </SubComponents>
-            </Container>
-          </SubComponents>
-        </Container>
-        <Container class="javax.swing.JPanel" name="jPanel6">
-
-          <Layout>
-            <DimensionLayout dim="0">
-              <Group type="103" groupAlignment="0" attributes="0">
-                  <Group type="102" alignment="0" attributes="0">
-                      <EmptySpace max="-2" attributes="0"/>
-                      <Component id="export_saveBtn" pref="183" max="32767" attributes="0"/>
-                      <EmptySpace max="-2" attributes="0"/>
-                  </Group>
-                  <Component id="jPanel10" alignment="0" max="32767" attributes="0"/>
-              </Group>
-            </DimensionLayout>
-            <DimensionLayout dim="1">
-              <Group type="103" groupAlignment="0" attributes="0">
-                  <Group type="102" alignment="0" attributes="0">
-                      <Component id="jPanel10" min="-2" max="-2" attributes="0"/>
-                      <EmptySpace min="-2" pref="10" max="-2" attributes="0"/>
-                      <Component id="export_saveBtn" min="-2" max="-2" attributes="0"/>
-                      <EmptySpace max="32767" attributes="0"/>
-                  </Group>
-              </Group>
-            </DimensionLayout>
-          </Layout>
-          <SubComponents>
-            <Component class="javax.swing.JButton" name="export_saveBtn">
-              <Properties>
-                <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
-                  <Image iconType="3" name="/aurelienribon/box2deditor/gfx/ic_export.png"/>
-                </Property>
-                <Property name="text" type="java.lang.String" value="Save"/>
-                <Property name="horizontalAlignment" type="int" value="2"/>
-                <Property name="margin" type="java.awt.Insets" editor="org.netbeans.beaninfo.editors.InsetsEditor">
-                  <Insets value="[2, 3, 2, 2]"/>
-                </Property>
-              </Properties>
-              <Events>
-                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="export_saveBtnActionPerformed"/>
-              </Events>
-            </Component>
-            <Container class="javax.swing.JPanel" name="jPanel10">
-              <Properties>
-                <Property name="background" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
-                  <Color blue="66" green="66" red="66" type="rgb"/>
-                </Property>
-                <Property name="border" type="javax.swing.border.Border" editor="org.netbeans.modules.form.editors2.BorderEditor">
-                  <Border info="org.netbeans.modules.form.compat2.border.EmptyBorderInfo">
-                    <EmptyBorder bottom="5" left="5" right="5" top="5"/>
-                  </Border>
-                </Property>
-              </Properties>
-
-              <Layout>
-                <DimensionLayout dim="0">
-                  <Group type="103" groupAlignment="0" attributes="0">
-                      <Group type="102" alignment="0" attributes="0">
-                          <Component id="jLabel7" min="-2" max="-2" attributes="0"/>
-                          <EmptySpace pref="145" max="32767" attributes="0"/>
-                          <Component id="help_exportLbl" min="-2" max="-2" attributes="0"/>
-                      </Group>
-                  </Group>
-                </DimensionLayout>
-                <DimensionLayout dim="1">
-                  <Group type="103" groupAlignment="0" attributes="0">
-                      <Component id="jLabel7" alignment="0" min="-2" max="-2" attributes="0"/>
-                      <Component id="help_exportLbl" alignment="0" min="-2" max="-2" attributes="0"/>
-                  </Group>
-                </DimensionLayout>
-              </Layout>
-              <SubComponents>
-                <Component class="javax.swing.JLabel" name="jLabel7">
-                  <Properties>
-                    <Property name="foreground" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
-                      <Color blue="ff" green="ff" red="ff" type="rgb"/>
-                    </Property>
-                    <Property name="text" type="java.lang.String" value="Export"/>
-                  </Properties>
-                </Component>
-                <Component class="javax.swing.JLabel" name="help_exportLbl">
-                  <Properties>
-                    <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
-                      <Image iconType="3" name="/aurelienribon/box2deditor/gfx/ic_help.png"/>
-                    </Property>
-                  </Properties>
-                  <Events>
-                    <EventHandler event="mouseClicked" listener="java.awt.event.MouseListener" parameters="java.awt.event.MouseEvent" handler="help_exportLblMouseClicked"/>
-                  </Events>
-                </Component>
-              </SubComponents>
-            </Container>
-          </SubComponents>
-        </Container>
-      </SubComponents>
-    </Container>
-    <Container class="javax.swing.JPanel" name="eastPanel">
-      <Properties>
-        <Property name="border" type="javax.swing.border.Border" editor="org.netbeans.modules.form.editors2.BorderEditor">
-          <Border info="org.netbeans.modules.form.compat2.border.MatteColorBorderInfo">
-            <MatteColorBorder bottom="0" left="1" right="0" top="0"/>
-          </Border>
-        </Property>
-      </Properties>
-      <Constraints>
-        <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout" value="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout$BorderConstraintsDescription">
-          <BorderConstraints direction="East"/>
-        </Constraint>
-      </Constraints>
-
-      <Layout>
-        <DimensionLayout dim="0">
-          <Group type="103" groupAlignment="0" attributes="0">
-              <Component id="jPanel3" alignment="0" max="32767" attributes="0"/>
-              <Component id="jPanel8" alignment="0" max="32767" attributes="0"/>
-              <Component id="jPanel1" alignment="0" max="32767" attributes="0"/>
-              <Component id="jPanel17" alignment="0" max="32767" attributes="0"/>
-          </Group>
-        </DimensionLayout>
-        <DimensionLayout dim="1">
-          <Group type="103" groupAlignment="0" attributes="0">
-              <Group type="102" attributes="0">
-                  <Component id="jPanel3" min="-2" max="-2" attributes="0"/>
-                  <EmptySpace max="-2" attributes="0"/>
-                  <Component id="jPanel8" min="-2" max="-2" attributes="0"/>
-                  <EmptySpace max="-2" attributes="0"/>
-                  <Component id="jPanel1" min="-2" max="-2" attributes="0"/>
-                  <EmptySpace max="-2" attributes="0"/>
-                  <Component id="jPanel17" min="-2" max="-2" attributes="0"/>
-                  <EmptySpace max="32767" attributes="0"/>
-              </Group>
-          </Group>
-        </DimensionLayout>
-      </Layout>
-      <SubComponents>
-        <Container class="javax.swing.JPanel" name="jPanel3">
-
-          <Layout>
-            <DimensionLayout dim="0">
-              <Group type="103" groupAlignment="0" attributes="0">
-                  <Group type="102" alignment="0" attributes="0">
-                      <EmptySpace max="-2" attributes="0"/>
-                      <Component id="jLabel10" pref="187" max="32767" attributes="0"/>
-                      <EmptySpace max="-2" attributes="0"/>
-                  </Group>
-              </Group>
-            </DimensionLayout>
-            <DimensionLayout dim="1">
-              <Group type="103" groupAlignment="0" attributes="0">
-                  <Group type="102" alignment="0" attributes="0">
-                      <EmptySpace max="-2" attributes="0"/>
-                      <Component id="jLabel10" min="-2" max="-2" attributes="0"/>
-                      <EmptySpace pref="13" max="32767" attributes="0"/>
-                  </Group>
-              </Group>
-            </DimensionLayout>
-          </Layout>
-          <SubComponents>
-            <Component class="javax.swing.JLabel" name="jLabel10">
-              <Properties>
-                <Property name="horizontalAlignment" type="int" value="0"/>
-                <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
-                  <Image iconType="3" name="/aurelienribon/box2deditor/gfx/logo.gif"/>
-                </Property>
-              </Properties>
-            </Component>
-          </SubComponents>
-        </Container>
-        <Container class="javax.swing.JPanel" name="jPanel8">
-
-          <Layout>
-            <DimensionLayout dim="0">
-              <Group type="103" groupAlignment="0" attributes="0">
-                  <Component id="jPanel2" alignment="1" max="32767" attributes="0"/>
-                  <Group type="102" alignment="0" attributes="0">
-                      <EmptySpace max="-2" attributes="0"/>
-                      <Group type="103" groupAlignment="0" attributes="0">
-                          <Group type="102" alignment="0" attributes="0">
-                              <EmptySpace min="21" pref="21" max="21" attributes="0"/>
-                              <Component id="shape_drawAssetOpacity50Chk" min="-2" max="-2" attributes="0"/>
-                          </Group>
-                          <Component id="shape_drawAssetChk" alignment="0" min="-2" max="-2" attributes="0"/>
-                          <Component id="shape_drawShapeChk" alignment="0" min="-2" max="-2" attributes="0"/>
-                          <Component id="shape_drawPolysChk" alignment="0" min="-2" max="-2" attributes="0"/>
-                      </Group>
-                      <EmptySpace pref="45" max="32767" attributes="0"/>
-                  </Group>
-              </Group>
-            </DimensionLayout>
-            <DimensionLayout dim="1">
-              <Group type="103" groupAlignment="0" attributes="0">
-                  <Group type="102" alignment="0" attributes="0">
-                      <Component id="jPanel2" min="-2" max="-2" attributes="0"/>
-                      <EmptySpace type="unrelated" max="-2" attributes="0"/>
-                      <Component id="shape_drawAssetChk" min="-2" max="-2" attributes="0"/>
-                      <EmptySpace max="-2" attributes="0"/>
-                      <Component id="shape_drawAssetOpacity50Chk" min="-2" max="-2" attributes="0"/>
-                      <EmptySpace max="-2" attributes="0"/>
-                      <Component id="shape_drawShapeChk" min="-2" max="-2" attributes="0"/>
-                      <EmptySpace max="-2" attributes="0"/>
-                      <Component id="shape_drawPolysChk" min="-2" max="-2" attributes="0"/>
-                      <EmptySpace max="32767" attributes="0"/>
-                  </Group>
-              </Group>
-            </DimensionLayout>
-          </Layout>
-          <SubComponents>
-            <Component class="javax.swing.JCheckBox" name="shape_drawAssetChk">
-              <Properties>
-                <Property name="selected" type="boolean" value="true"/>
-                <Property name="text" type="java.lang.String" value="Draw asset"/>
-              </Properties>
-              <Events>
-                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="shape_drawAssetChkActionPerformed"/>
-              </Events>
-            </Component>
-            <Component class="javax.swing.JCheckBox" name="shape_drawAssetOpacity50Chk">
-              <Properties>
-                <Property name="text" type="java.lang.String" value="...with opacity at 50%"/>
-              </Properties>
-              <Events>
-                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="shape_drawAssetOpacity50ChkActionPerformed"/>
-              </Events>
-            </Component>
-            <Component class="javax.swing.JCheckBox" name="shape_drawShapeChk">
-              <Properties>
-                <Property name="selected" type="boolean" value="true"/>
-                <Property name="text" type="java.lang.String" value="Draw shape"/>
-              </Properties>
-              <Events>
-                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="shape_drawShapeChkActionPerformed"/>
-              </Events>
-            </Component>
-            <Component class="javax.swing.JCheckBox" name="shape_drawPolysChk">
-              <Properties>
-                <Property name="selected" type="boolean" value="true"/>
-                <Property name="text" type="java.lang.String" value="Draw convex polygons"/>
-              </Properties>
-              <Events>
-                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="shape_drawPolysChkActionPerformed"/>
-              </Events>
-            </Component>
-            <Container class="javax.swing.JPanel" name="jPanel2">
-              <Properties>
-                <Property name="background" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
-                  <Color blue="66" green="66" red="66" type="rgb"/>
-                </Property>
-                <Property name="border" type="javax.swing.border.Border" editor="org.netbeans.modules.form.editors2.BorderEditor">
-                  <Border info="org.netbeans.modules.form.compat2.border.EmptyBorderInfo">
-                    <EmptyBorder bottom="5" left="5" right="5" top="5"/>
-                  </Border>
-                </Property>
-              </Properties>
-
-              <Layout>
-                <DimensionLayout dim="0">
-                  <Group type="103" groupAlignment="0" attributes="0">
-                      <Group type="102" alignment="0" attributes="0">
-                          <Component id="jLabel3" min="-2" max="-2" attributes="0"/>
-                          <EmptySpace pref="144" max="32767" attributes="0"/>
-                          <Component id="help_optionsLbl" min="-2" max="-2" attributes="0"/>
-                      </Group>
-                  </Group>
-                </DimensionLayout>
-                <DimensionLayout dim="1">
-                  <Group type="103" groupAlignment="0" attributes="0">
-                      <Component id="jLabel3" alignment="0" min="-2" max="-2" attributes="0"/>
-                      <Component id="help_optionsLbl" alignment="0" min="-2" max="-2" attributes="0"/>
-                  </Group>
-                </DimensionLayout>
-              </Layout>
-              <SubComponents>
-                <Component class="javax.swing.JLabel" name="jLabel3">
-                  <Properties>
-                    <Property name="foreground" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
-                      <Color blue="ff" green="ff" red="ff" type="rgb"/>
-                    </Property>
-                    <Property name="text" type="java.lang.String" value="Options"/>
-                  </Properties>
-                </Component>
-                <Component class="javax.swing.JLabel" name="help_optionsLbl">
-                  <Properties>
-                    <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
-                      <Image iconType="3" name="/aurelienribon/box2deditor/gfx/ic_help.png"/>
-                    </Property>
-                  </Properties>
-                  <Events>
-                    <EventHandler event="mouseClicked" listener="java.awt.event.MouseListener" parameters="java.awt.event.MouseEvent" handler="help_optionsLblMouseClicked"/>
-                  </Events>
-                </Component>
-              </SubComponents>
-            </Container>
-          </SubComponents>
-        </Container>
-        <Container class="javax.swing.JPanel" name="jPanel1">
-
-          <Layout>
-            <DimensionLayout dim="0">
-              <Group type="103" groupAlignment="0" attributes="0">
-                  <Component id="jPanel16" alignment="0" max="32767" attributes="0"/>
-                  <Group type="102" alignment="0" attributes="0">
-                      <EmptySpace max="-2" attributes="0"/>
-                      <Component id="tools_insertPointsBtn" pref="187" max="32767" attributes="0"/>
-                      <EmptySpace max="-2" attributes="0"/>
-                  </Group>
-                  <Group type="102" alignment="0" attributes="0">
-                      <EmptySpace max="-2" attributes="0"/>
-                      <Component id="tools_removePointsBtn" pref="187" max="32767" attributes="0"/>
-                      <EmptySpace max="-2" attributes="0"/>
-                  </Group>
-                  <Group type="102" alignment="0" attributes="0">
-                      <EmptySpace max="-2" attributes="0"/>
-                      <Component id="tools_clearPointsBtn" pref="187" max="32767" attributes="0"/>
-                      <EmptySpace max="-2" attributes="0"/>
-                  </Group>
-              </Group>
-            </DimensionLayout>
-            <DimensionLayout dim="1">
-              <Group type="103" groupAlignment="0" attributes="0">
-                  <Group type="102" alignment="0" attributes="0">
-                      <Component id="jPanel16" min="-2" max="-2" attributes="0"/>
-                      <EmptySpace type="unrelated" max="-2" attributes="0"/>
-                      <Component id="tools_insertPointsBtn" min="-2" max="-2" attributes="0"/>
-                      <EmptySpace max="-2" attributes="0"/>
-                      <Component id="tools_removePointsBtn" min="-2" max="-2" attributes="0"/>
-                      <EmptySpace max="-2" attributes="0"/>
-                      <Component id="tools_clearPointsBtn" min="-2" max="-2" attributes="0"/>
-                      <EmptySpace max="32767" attributes="0"/>
-                  </Group>
-              </Group>
-            </DimensionLayout>
-          </Layout>
-          <SubComponents>
-            <Container class="javax.swing.JPanel" name="jPanel16">
-              <Properties>
-                <Property name="background" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
-                  <Color blue="66" green="66" red="66" type="rgb"/>
-                </Property>
-                <Property name="border" type="javax.swing.border.Border" editor="org.netbeans.modules.form.editors2.BorderEditor">
-                  <Border info="org.netbeans.modules.form.compat2.border.EmptyBorderInfo">
-                    <EmptyBorder bottom="5" left="5" right="5" top="5"/>
-                  </Border>
-                </Property>
-              </Properties>
-
-              <Layout>
-                <DimensionLayout dim="0">
-                  <Group type="103" groupAlignment="0" attributes="0">
-                      <Group type="102" alignment="0" attributes="0">
-                          <Component id="jLabel20" min="-2" max="-2" attributes="0"/>
-                          <EmptySpace pref="123" max="32767" attributes="0"/>
-                          <Component id="help_toolsLbl" min="-2" max="-2" attributes="0"/>
-                      </Group>
-                  </Group>
-                </DimensionLayout>
-                <DimensionLayout dim="1">
-                  <Group type="103" groupAlignment="0" attributes="0">
-                      <Component id="jLabel20" alignment="0" min="-2" max="-2" attributes="0"/>
-                      <Component id="help_toolsLbl" alignment="0" min="-2" max="-2" attributes="0"/>
-                  </Group>
-                </DimensionLayout>
-              </Layout>
-              <SubComponents>
-                <Component class="javax.swing.JLabel" name="jLabel20">
-                  <Properties>
-                    <Property name="foreground" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
-                      <Color blue="ff" green="ff" red="ff" type="rgb"/>
-                    </Property>
-                    <Property name="text" type="java.lang.String" value="Edition tools"/>
-                  </Properties>
-                </Component>
-                <Component class="javax.swing.JLabel" name="help_toolsLbl">
-                  <Properties>
-                    <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
-                      <Image iconType="3" name="/aurelienribon/box2deditor/gfx/ic_help.png"/>
-                    </Property>
-                  </Properties>
-                  <Events>
-                    <EventHandler event="mouseClicked" listener="java.awt.event.MouseListener" parameters="java.awt.event.MouseEvent" handler="help_toolsLblMouseClicked"/>
-                  </Events>
-                </Component>
-              </SubComponents>
-            </Container>
-            <Component class="javax.swing.JButton" name="tools_insertPointsBtn">
-              <Properties>
-                <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
-                  <Image iconType="3" name="/aurelienribon/box2deditor/gfx/ic_add.png"/>
-                </Property>
-                <Property name="text" type="java.lang.String" value="Insert point(s)"/>
-                <Property name="horizontalAlignment" type="int" value="2"/>
-                <Property name="margin" type="java.awt.Insets" editor="org.netbeans.beaninfo.editors.InsetsEditor">
-                  <Insets value="[2, 3, 2, 2]"/>
-                </Property>
-              </Properties>
-              <Events>
-                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="tools_insertPointsBtnActionPerformed"/>
-              </Events>
-            </Component>
-            <Component class="javax.swing.JButton" name="tools_removePointsBtn">
-              <Properties>
-                <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
-                  <Image iconType="3" name="/aurelienribon/box2deditor/gfx/ic_remove.png"/>
-                </Property>
-                <Property name="text" type="java.lang.String" value="Remove point(s)"/>
-                <Property name="horizontalAlignment" type="int" value="2"/>
-                <Property name="margin" type="java.awt.Insets" editor="org.netbeans.beaninfo.editors.InsetsEditor">
-                  <Insets value="[2, 3, 2, 2]"/>
-                </Property>
-              </Properties>
-              <Events>
-                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="tools_removePointsBtnActionPerformed"/>
-              </Events>
-            </Component>
-            <Component class="javax.swing.JButton" name="tools_clearPointsBtn">
-              <Properties>
-                <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
-                  <Image iconType="3" name="/aurelienribon/box2deditor/gfx/ic_delete.png"/>
-                </Property>
-                <Property name="text" type="java.lang.String" value="Clear all points"/>
-                <Property name="horizontalAlignment" type="int" value="2"/>
-                <Property name="margin" type="java.awt.Insets" editor="org.netbeans.beaninfo.editors.InsetsEditor">
-                  <Insets value="[2, 3, 2, 2]"/>
-                </Property>
-              </Properties>
-              <Events>
-                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="tools_clearPointsBtnActionPerformed"/>
-              </Events>
-            </Component>
-          </SubComponents>
-        </Container>
-        <Container class="javax.swing.JPanel" name="jPanel17">
-
-          <Layout>
-            <DimensionLayout dim="0">
-              <Group type="103" groupAlignment="0" attributes="0">
-                  <Component id="jPanel18" alignment="0" max="32767" attributes="0"/>
-                  <Group type="102" attributes="0">
-                      <EmptySpace min="10" pref="10" max="10" attributes="0"/>
-                      <Component id="jLabel1" pref="187" max="32767" attributes="0"/>
-                      <EmptySpace min="10" pref="10" max="10" attributes="0"/>
-                  </Group>
-              </Group>
-            </DimensionLayout>
-            <DimensionLayout dim="1">
-              <Group type="103" groupAlignment="0" attributes="0">
-                  <Group type="102" alignment="0" attributes="0">
-                      <Component id="jPanel18" min="-2" max="-2" attributes="0"/>
-                      <EmptySpace type="unrelated" max="-2" attributes="0"/>
-                      <Component id="jLabel1" pref="265" max="32767" attributes="0"/>
-                      <EmptySpace max="-2" attributes="0"/>
-                  </Group>
-              </Group>
-            </DimensionLayout>
-          </Layout>
-          <SubComponents>
-            <Container class="javax.swing.JPanel" name="jPanel18">
-              <Properties>
-                <Property name="background" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
-                  <Color blue="66" green="66" red="66" type="rgb"/>
-                </Property>
-                <Property name="border" type="javax.swing.border.Border" editor="org.netbeans.modules.form.editors2.BorderEditor">
-                  <Border info="org.netbeans.modules.form.compat2.border.EmptyBorderInfo">
-                    <EmptyBorder bottom="5" left="5" right="5" top="5"/>
-                  </Border>
-                </Property>
-              </Properties>
-
-              <Layout>
-                <DimensionLayout dim="0">
-                  <Group type="103" groupAlignment="0" attributes="0">
-                      <Group type="102" alignment="0" attributes="0">
-                          <Component id="jLabel22" min="-2" max="-2" attributes="0"/>
-                          <EmptySpace pref="157" max="32767" attributes="0"/>
-                          <Component id="help_hintsLbl" min="-2" max="-2" attributes="0"/>
-                      </Group>
-                  </Group>
-                </DimensionLayout>
-                <DimensionLayout dim="1">
-                  <Group type="103" groupAlignment="0" attributes="0">
-                      <Component id="jLabel22" alignment="0" min="-2" max="-2" attributes="0"/>
-                      <Component id="help_hintsLbl" alignment="0" min="-2" max="-2" attributes="0"/>
-                  </Group>
-                </DimensionLayout>
-              </Layout>
-              <SubComponents>
-                <Component class="javax.swing.JLabel" name="jLabel22">
-                  <Properties>
-                    <Property name="foreground" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
-                      <Color blue="ff" green="ff" red="ff" type="rgb"/>
-                    </Property>
-                    <Property name="text" type="java.lang.String" value="Hints"/>
-                  </Properties>
-                </Component>
-                <Component class="javax.swing.JLabel" name="help_hintsLbl">
-                  <Properties>
-                    <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
-                      <Image iconType="3" name="/aurelienribon/box2deditor/gfx/ic_help.png"/>
-                    </Property>
-                  </Properties>
-                  <Events>
-                    <EventHandler event="mouseClicked" listener="java.awt.event.MouseListener" parameters="java.awt.event.MouseEvent" handler="help_hintsLblMouseClicked"/>
-                  </Events>
-                </Component>
-              </SubComponents>
-            </Container>
-            <Component class="javax.swing.JLabel" name="jLabel1">
-              <Properties>
-                <Property name="foreground" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
-                  <Color blue="66" green="66" red="66" type="rgb"/>
-                </Property>
-                <Property name="text" type="java.lang.String" value="&lt;html&gt;&#xa;&#xa;1 &amp;bull; Set the output file,&lt;br/&gt;&#xa;2 &amp;bull; Add some assets,&lt;br/&gt;&#xa;3 &amp;bull; Select an asset and define its collision shapes (you can define multiple shapes).&lt;br/&gt;&lt;br/&gt;&#xa;&#xa;&amp;bull; &lt;font color=&quot;#00AA00&quot;&gt;Create a shape&lt;/font&gt; with &lt;font color=&quot;#0000FF&quot;&gt;ctrl + left clics&lt;/font&gt;&lt;br/&gt;&#xa;&amp;bull; &lt;font color=&quot;#00AA00&quot;&gt;Edit a shape&lt;/font&gt; by &lt;font color=&quot;#0000FF&quot;&gt;dragging the left mouse button&lt;/font&gt;&lt;br/&gt;&#xa;&amp;bull; &lt;font color=&quot;#00AA00&quot;&gt;Test collisions&lt;/font&gt; with &lt;font color=&quot;#0000FF&quot;&gt;shift + dragging the left mouse button&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;&#xa;&#xa;&amp;bull; &lt;font color=&quot;#00AA00&quot;&gt;Zoom&lt;/font&gt; by&lt;font color=&quot;#0000FF&quot;&gt; scrolling&lt;/font&gt;&lt;br/&gt;&#xa;&amp;bull; &lt;font color=&quot;#00AA00&quot;&gt;Pan&lt;/font&gt; by &lt;font color=&quot;#0000FF&quot;&gt;dragging the right mouse button&lt;/font&gt;&lt;br/&gt;&#xa;&#xa;"/>
-                <Property name="verticalAlignment" type="int" value="1"/>
-              </Properties>
-            </Component>
-          </SubComponents>
-        </Container>
-      </SubComponents>
-    </Container>
-  </SubComponents>
-</Form>
diff --git a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/ui/MainWindow.java b/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/ui/MainWindow.java
deleted file mode 100644
index cc71560..0000000
--- a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/ui/MainWindow.java
+++ /dev/null
@@ -1,1071 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-package com.badlogic.gdx.box2deditor.ui;
-
-import com.badlogic.gdx.box2deditor.AppContext;
-import com.badlogic.gdx.box2deditor.renderpanel.App;
-import com.badlogic.gdx.backends.lwjgl.LwjglCanvas;
-import com.badlogic.gdx.math.Vector2;
-import java.awt.BorderLayout;
-import java.awt.event.ComponentAdapter;
-import java.awt.event.ComponentEvent;
-import java.awt.event.ComponentListener;
-import java.io.File;
-import java.io.IOException;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.Collections;
-import java.util.List;
-import javax.swing.DefaultListModel;
-import javax.swing.JFileChooser;
-import javax.swing.JOptionPane;
-import javax.swing.filechooser.FileFilter;
-
-/**
- *
- * @author Aurelien Ribon (aurelien.ribon@gmail.com)
- */
-public class MainWindow extends javax.swing.JFrame {
-	private final DefaultListModel assetsListModel;
-
-	// -------------------------------------------------------------------------
-
-    public MainWindow(final LwjglCanvas glCanvas) {
-        initComponents();
-		renderPanel.add(glCanvas.getCanvas(), BorderLayout.CENTER);
-
-		assetsListModel = new DefaultListModel();
-		assets_assetList.setModel(assetsListModel);
-
-		addComponentListener(componentListener);
-    }
-
-	// -------------------------------------------------------------------------
-
-	private final ComponentListener componentListener = new ComponentAdapter() {
-		@Override
-		public void componentShown(ComponentEvent e) {
-			File outputFile = AppContext.instance().outputFile;
-			if (outputFile != null)
-				setOutputFile(outputFile, true);
-		}
-	};
-
-	// -------------------------------------------------------------------------
-
-    @SuppressWarnings("unchecked")
-    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
-    private void initComponents() {
-
-        shapeModeBtnGrp = new javax.swing.ButtonGroup();
-        renderPanel = new javax.swing.JPanel();
-        westPanel = new javax.swing.JPanel();
-        jPanel4 = new javax.swing.JPanel();
-        assets_assetListScrollPane = new javax.swing.JScrollPane();
-        assets_assetList = new javax.swing.JList();
-        assets_removeAssetBtn = new javax.swing.JButton();
-        jPanel11 = new javax.swing.JPanel();
-        jLabel9 = new javax.swing.JLabel();
-        help_assetsLbl = new javax.swing.JLabel();
-        jPanel5 = new javax.swing.JPanel();
-        init_addAssetsByFilesBtn = new javax.swing.JButton();
-        init_setOutputFileBtn = new javax.swing.JButton();
-        init_outputFileLbl = new javax.swing.JTextField();
-        jSeparator3 = new javax.swing.JSeparator();
-        jPanel9 = new javax.swing.JPanel();
-        jPanel7 = new javax.swing.JPanel();
-        jLabel5 = new javax.swing.JLabel();
-        help_configurationLbl = new javax.swing.JLabel();
-        jPanel6 = new javax.swing.JPanel();
-        export_saveBtn = new javax.swing.JButton();
-        jPanel10 = new javax.swing.JPanel();
-        jLabel7 = new javax.swing.JLabel();
-        help_exportLbl = new javax.swing.JLabel();
-        eastPanel = new javax.swing.JPanel();
-        jPanel3 = new javax.swing.JPanel();
-        jLabel10 = new javax.swing.JLabel();
-        jPanel8 = new javax.swing.JPanel();
-        shape_drawAssetChk = new javax.swing.JCheckBox();
-        shape_drawAssetOpacity50Chk = new javax.swing.JCheckBox();
-        shape_drawShapeChk = new javax.swing.JCheckBox();
-        shape_drawPolysChk = new javax.swing.JCheckBox();
-        jPanel2 = new javax.swing.JPanel();
-        jLabel3 = new javax.swing.JLabel();
-        help_optionsLbl = new javax.swing.JLabel();
-        jPanel1 = new javax.swing.JPanel();
-        jPanel16 = new javax.swing.JPanel();
-        jLabel20 = new javax.swing.JLabel();
-        help_toolsLbl = new javax.swing.JLabel();
-        tools_insertPointsBtn = new javax.swing.JButton();
-        tools_removePointsBtn = new javax.swing.JButton();
-        tools_clearPointsBtn = new javax.swing.JButton();
-        jPanel17 = new javax.swing.JPanel();
-        jPanel18 = new javax.swing.JPanel();
-        jLabel22 = new javax.swing.JLabel();
-        help_hintsLbl = new javax.swing.JLabel();
-        jLabel1 = new javax.swing.JLabel();
-
-        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
-
-        renderPanel.setLayout(new java.awt.BorderLayout());
-        getContentPane().add(renderPanel, java.awt.BorderLayout.CENTER);
-
-        westPanel.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 0, 1, new java.awt.Color(0, 0, 0)));
-
-        assets_assetList.setModel(new javax.swing.AbstractListModel() {
-            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
-            public int getSize() { return strings.length; }
-            public Object getElementAt(int i) { return strings[i]; }
-        });
-        assets_assetList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
-            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
-                assets_assetListValueChanged(evt);
-            }
-        });
-        assets_assetListScrollPane.setViewportView(assets_assetList);
-
-        assets_removeAssetBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aurelienribon/box2deditor/gfx/ic_delete.png"))); // NOI18N
-        assets_removeAssetBtn.setText("Remove selected asset(s)");
-        assets_removeAssetBtn.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
-        assets_removeAssetBtn.setMargin(new java.awt.Insets(2, 3, 2, 2));
-        assets_removeAssetBtn.addActionListener(new java.awt.event.ActionListener() {
-            public void actionPerformed(java.awt.event.ActionEvent evt) {
-                assets_removeAssetBtnActionPerformed(evt);
-            }
-        });
-
-        jPanel11.setBackground(new java.awt.Color(102, 102, 102));
-        jPanel11.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
-
-        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
-        jLabel9.setText("Assets");
-
-        help_assetsLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aurelienribon/box2deditor/gfx/ic_help.png"))); // NOI18N
-        help_assetsLbl.addMouseListener(new java.awt.event.MouseAdapter() {
-            public void mouseClicked(java.awt.event.MouseEvent evt) {
-                help_assetsLblMouseClicked(evt);
-            }
-        });
-
-        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
-        jPanel11.setLayout(jPanel11Layout);
-        jPanel11Layout.setHorizontalGroup(
-            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
-            .addGroup(jPanel11Layout.createSequentialGroup()
-                .addComponent(jLabel9)
-                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 145, Short.MAX_VALUE)
-                .addComponent(help_assetsLbl))
-        );
-        jPanel11Layout.setVerticalGroup(
-            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
-            .addComponent(jLabel9)
-            .addComponent(help_assetsLbl)
-        );
-
-        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
-        jPanel4.setLayout(jPanel4Layout);
-        jPanel4Layout.setHorizontalGroup(
-            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
-            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
-                .addContainerGap()
-                .addComponent(assets_removeAssetBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
-                .addContainerGap())
-            .addGroup(jPanel4Layout.createSequentialGroup()
-                .addContainerGap()
-                .addComponent(assets_assetListScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
-                .addContainerGap())
-            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
-        );
-        jPanel4Layout.setVerticalGroup(
-            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
-            .addGroup(jPanel4Layout.createSequentialGroup()
-                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
-                .addGap(10, 10, 10)
-                .addComponent(assets_assetListScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 365, Short.MAX_VALUE)
-                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
-                .addComponent(assets_removeAssetBtn)
-                .addContainerGap())
-        );
-
-        init_addAssetsByFilesBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aurelienribon/box2deditor/gfx/ic_add.png"))); // NOI18N
-        init_addAssetsByFilesBtn.setText("Add assets by image files or dirs");
-        init_addAssetsByFilesBtn.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
-        init_addAssetsByFilesBtn.setMargin(new java.awt.Insets(2, 3, 2, 2));
-        init_addAssetsByFilesBtn.addActionListener(new java.awt.event.ActionListener() {
-            public void actionPerformed(java.awt.event.ActionEvent evt) {
-                init_addAssetsByFilesBtnActionPerformed(evt);
-            }
-        });
-
-        init_setOutputFileBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aurelienribon/box2deditor/gfx/ic_gear.png"))); // NOI18N
-        init_setOutputFileBtn.setText("Set / load output file");
-        init_setOutputFileBtn.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
-        init_setOutputFileBtn.setMargin(new java.awt.Insets(2, 3, 2, 2));
-        init_setOutputFileBtn.addActionListener(new java.awt.event.ActionListener() {
-            public void actionPerformed(java.awt.event.ActionEvent evt) {
-                init_setOutputFileBtnActionPerformed(evt);
-            }
-        });
-
-        init_outputFileLbl.setEditable(false);
-        init_outputFileLbl.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
-        init_outputFileLbl.setText("<no file specified>");
-
-        jSeparator3.setForeground(new java.awt.Color(102, 102, 102));
-
-        jPanel9.setBackground(new java.awt.Color(102, 102, 102));
-        jPanel9.setLayout(new java.awt.BorderLayout());
-
-        jPanel7.setBackground(new java.awt.Color(102, 102, 102));
-        jPanel7.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
-
-        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
-        jLabel5.setText("Configuration");
-
-        help_configurationLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aurelienribon/box2deditor/gfx/ic_help.png"))); // NOI18N
-        help_configurationLbl.addMouseListener(new java.awt.event.MouseAdapter() {
-            public void mouseClicked(java.awt.event.MouseEvent evt) {
-                help_configurationLblMouseClicked(evt);
-            }
-        });
-
-        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
-        jPanel7.setLayout(jPanel7Layout);
-        jPanel7Layout.setHorizontalGroup(
-            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
-            .addGroup(jPanel7Layout.createSequentialGroup()
-                .addComponent(jLabel5)
-                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 112, Short.MAX_VALUE)
-                .addComponent(help_configurationLbl))
-        );
-        jPanel7Layout.setVerticalGroup(
-            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
-            .addComponent(jLabel5)
-            .addComponent(help_configurationLbl)
-        );
-
-        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
-        jPanel5.setLayout(jPanel5Layout);
-        jPanel5Layout.setHorizontalGroup(
-            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
-            .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
-            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
-                .addContainerGap()
-                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
-                    .addComponent(init_addAssetsByFilesBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
-                    .addComponent(init_setOutputFileBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
-                    .addComponent(init_outputFileLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE))
-                .addContainerGap())
-            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
-            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
-                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE))
-        );
-        jPanel5Layout.setVerticalGroup(
-            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
-            .addGroup(jPanel5Layout.createSequentialGroup()
-                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
-                .addGap(10, 10, 10)
-                .addComponent(init_setOutputFileBtn)
-                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
-                .addComponent(init_outputFileLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
-                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
-                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
-                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
-                .addComponent(init_addAssetsByFilesBtn)
-                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
-            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
-                .addGroup(jPanel5Layout.createSequentialGroup()
-                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
-                    .addContainerGap(150, Short.MAX_VALUE)))
-        );
-
-        export_saveBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aurelienribon/box2deditor/gfx/ic_export.png"))); // NOI18N
-        export_saveBtn.setText("Save");
-        export_saveBtn.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
-        export_saveBtn.setMargin(new java.awt.Insets(2, 3, 2, 2));
-        export_saveBtn.addActionListener(new java.awt.event.ActionListener() {
-            public void actionPerformed(java.awt.event.ActionEvent evt) {
-                export_saveBtnActionPerformed(evt);
-            }
-        });
-
-        jPanel10.setBackground(new java.awt.Color(102, 102, 102));
-        jPanel10.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
-
-        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
-        jLabel7.setText("Export");
-
-        help_exportLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aurelienribon/box2deditor/gfx/ic_help.png"))); // NOI18N
-        help_exportLbl.addMouseListener(new java.awt.event.MouseAdapter() {
-            public void mouseClicked(java.awt.event.MouseEvent evt) {
-                help_exportLblMouseClicked(evt);
-            }
-        });
-
-        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
-        jPanel10.setLayout(jPanel10Layout);
-        jPanel10Layout.setHorizontalGroup(
-            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
-            .addGroup(jPanel10Layout.createSequentialGroup()
-                .addComponent(jLabel7)
-                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 145, Short.MAX_VALUE)
-                .addComponent(help_exportLbl))
-        );
-        jPanel10Layout.setVerticalGroup(
-            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
-            .addComponent(jLabel7)
-            .addComponent(help_exportLbl)
-        );
-
-        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
-        jPanel6.setLayout(jPanel6Layout);
-        jPanel6Layout.setHorizontalGroup(
-            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
-            .addGroup(jPanel6Layout.createSequentialGroup()
-                .addContainerGap()
-                .addComponent(export_saveBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
-                .addContainerGap())
-            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
-        );
-        jPanel6Layout.setVerticalGroup(
-            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
-            .addGroup(jPanel6Layout.createSequentialGroup()
-                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
-                .addGap(10, 10, 10)
-                .addComponent(export_saveBtn)
-                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
-        );
-
-        javax.swing.GroupLayout westPanelLayout = new javax.swing.GroupLayout(westPanel);
-        westPanel.setLayout(westPanelLayout);
-        westPanelLayout.setHorizontalGroup(
-            westPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
-            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
-            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
-            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
-        );
-        westPanelLayout.setVerticalGroup(
-            westPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
-            .addGroup(westPanelLayout.createSequentialGroup()
-                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
-                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
-                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
-                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
-                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
-        );
-
-        getContentPane().add(westPanel, java.awt.BorderLayout.WEST);
-
-        eastPanel.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 0, new java.awt.Color(0, 0, 0)));
-
-        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
-        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aurelienribon/box2deditor/gfx/logo.gif"))); // NOI18N
-
-        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
-        jPanel3.setLayout(jPanel3Layout);
-        jPanel3Layout.setHorizontalGroup(
-            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
-            .addGroup(jPanel3Layout.createSequentialGroup()
-                .addContainerGap()
-                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
-                .addContainerGap())
-        );
-        jPanel3Layout.setVerticalGroup(
-            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
-            .addGroup(jPanel3Layout.createSequentialGroup()
-                .addContainerGap()
-                .addComponent(jLabel10)
-                .addContainerGap(13, Short.MAX_VALUE))
-        );
-
-        shape_drawAssetChk.setSelected(true);
-        shape_drawAssetChk.setText("Draw asset");
-        shape_drawAssetChk.addActionListener(new java.awt.event.ActionListener() {
-            public void actionPerformed(java.awt.event.ActionEvent evt) {
-                shape_drawAssetChkActionPerformed(evt);
-            }
-        });
-
-        shape_drawAssetOpacity50Chk.setText("...with opacity at 50%");
-        shape_drawAssetOpacity50Chk.addActionListener(new java.awt.event.ActionListener() {
-            public void actionPerformed(java.awt.event.ActionEvent evt) {
-                shape_drawAssetOpacity50ChkActionPerformed(evt);
-            }
-        });
-
-        shape_drawShapeChk.setSelected(true);
-        shape_drawShapeChk.setText("Draw shape");
-        shape_drawShapeChk.addActionListener(new java.awt.event.ActionListener() {
-            public void actionPerformed(java.awt.event.ActionEvent evt) {
-                shape_drawShapeChkActionPerformed(evt);
-            }
-        });
-
-        shape_drawPolysChk.setSelected(true);
-        shape_drawPolysChk.setText("Draw convex polygons");
-        shape_drawPolysChk.addActionListener(new java.awt.event.ActionListener() {
-            public void actionPerformed(java.awt.event.ActionEvent evt) {
-                shape_drawPolysChkActionPerformed(evt);
-            }
-        });
-
-        jPanel2.setBackground(new java.awt.Color(102, 102, 102));
-        jPanel2.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
-
-        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
-        jLabel3.setText("Options");
-
-        help_optionsLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aurelienribon/box2deditor/gfx/ic_help.png"))); // NOI18N
-        help_optionsLbl.addMouseListener(new java.awt.event.MouseAdapter() {
-            public void mouseClicked(java.awt.event.MouseEvent evt) {
-                help_optionsLblMouseClicked(evt);
-            }
-        });
-
-        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
-        jPanel2.setLayout(jPanel2Layout);
-        jPanel2Layout.setHorizontalGroup(
-            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
-            .addGroup(jPanel2Layout.createSequentialGroup()
-                .addComponent(jLabel3)
-                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 144, Short.MAX_VALUE)
-                .addComponent(help_optionsLbl))
-        );
-        jPanel2Layout.setVerticalGroup(
-            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
-            .addComponent(jLabel3)
-            .addComponent(help_optionsLbl)
-        );
-
-        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
-        jPanel8.setLayout(jPanel8Layout);
-        jPanel8Layout.setHorizontalGroup(
-            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
-            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
-            .addGroup(jPanel8Layout.createSequentialGroup()
-                .addContainerGap()
-                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
-                    .addGroup(jPanel8Layout.createSequentialGroup()
-                        .addGap(21, 21, 21)
-                        .addComponent(shape_drawAssetOpacity50Chk))
-                    .addComponent(shape_drawAssetChk)
-                    .addComponent(shape_drawShapeChk)
-                    .addComponent(shape_drawPolysChk))
-                .addContainerGap(45, Short.MAX_VALUE))
-        );
-        jPanel8Layout.setVerticalGroup(
-            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
-            .addGroup(jPanel8Layout.createSequentialGroup()
-                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
-                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
-                .addComponent(shape_drawAssetChk)
-                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
-                .addComponent(shape_drawAssetOpacity50Chk)
-                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
-                .addComponent(shape_drawShapeChk)
-                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
-                .addComponent(shape_drawPolysChk)
-                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
-        );
-
-        jPanel16.setBackground(new java.awt.Color(102, 102, 102));
-        jPanel16.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
-
-        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
-        jLabel20.setText("Edition tools");
-
-        help_toolsLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aurelienribon/box2deditor/gfx/ic_help.png"))); // NOI18N
-        help_toolsLbl.addMouseListener(new java.awt.event.MouseAdapter() {
-            public void mouseClicked(java.awt.event.MouseEvent evt) {
-                help_toolsLblMouseClicked(evt);
-            }
-        });
-
-        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
-        jPanel16.setLayout(jPanel16Layout);
-        jPanel16Layout.setHorizontalGroup(
-            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
-            .addGroup(jPanel16Layout.createSequentialGroup()
-                .addComponent(jLabel20)
-                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 123, Short.MAX_VALUE)
-                .addComponent(help_toolsLbl))
-        );
-        jPanel16Layout.setVerticalGroup(
-            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
-            .addComponent(jLabel20)
-            .addComponent(help_toolsLbl)
-        );
-
-        tools_insertPointsBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aurelienribon/box2deditor/gfx/ic_add.png"))); // NOI18N
-        tools_insertPointsBtn.setText("Insert point(s)");
-        tools_insertPointsBtn.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
-        tools_insertPointsBtn.setMargin(new java.awt.Insets(2, 3, 2, 2));
-        tools_insertPointsBtn.addActionListener(new java.awt.event.ActionListener() {
-            public void actionPerformed(java.awt.event.ActionEvent evt) {
-                tools_insertPointsBtnActionPerformed(evt);
-            }
-        });
-
-        tools_removePointsBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aurelienribon/box2deditor/gfx/ic_remove.png"))); // NOI18N
-        tools_removePointsBtn.setText("Remove point(s)");
-        tools_removePointsBtn.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
-        tools_removePointsBtn.setMargin(new java.awt.Insets(2, 3, 2, 2));
-        tools_removePointsBtn.addActionListener(new java.awt.event.ActionListener() {
-            public void actionPerformed(java.awt.event.ActionEvent evt) {
-                tools_removePointsBtnActionPerformed(evt);
-            }
-        });
-
-        tools_clearPointsBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aurelienribon/box2deditor/gfx/ic_delete.png"))); // NOI18N
-        tools_clearPointsBtn.setText("Clear all points");
-        tools_clearPointsBtn.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
-        tools_clearPointsBtn.setMargin(new java.awt.Insets(2, 3, 2, 2));
-        tools_clearPointsBtn.addActionListener(new java.awt.event.ActionListener() {
-            public void actionPerformed(java.awt.event.ActionEvent evt) {
-                tools_clearPointsBtnActionPerformed(evt);
-            }
-        });
-
-        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
-        jPanel1.setLayout(jPanel1Layout);
-        jPanel1Layout.setHorizontalGroup(
-            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
-            .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
-            .addGroup(jPanel1Layout.createSequentialGroup()
-                .addContainerGap()
-                .addComponent(tools_insertPointsBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
-                .addContainerGap())
-            .addGroup(jPanel1Layout.createSequentialGroup()
-                .addContainerGap()
-                .addComponent(tools_removePointsBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
-                .addContainerGap())
-            .addGroup(jPanel1Layout.createSequentialGroup()
-                .addContainerGap()
-                .addComponent(tools_clearPointsBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
-                .addContainerGap())
-        );
-        jPanel1Layout.setVerticalGroup(
-            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
-            .addGroup(jPanel1Layout.createSequentialGroup()
-                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
-                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
-                .addComponent(tools_insertPointsBtn)
-                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
-                .addComponent(tools_removePointsBtn)
-                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
-                .addComponent(tools_clearPointsBtn)
-                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
-        );
-
-        jPanel18.setBackground(new java.awt.Color(102, 102, 102));
-        jPanel18.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
-
-        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
-        jLabel22.setText("Hints");
-
-        help_hintsLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aurelienribon/box2deditor/gfx/ic_help.png"))); // NOI18N
-        help_hintsLbl.addMouseListener(new java.awt.event.MouseAdapter() {
-            public void mouseClicked(java.awt.event.MouseEvent evt) {
-                help_hintsLblMouseClicked(evt);
-            }
-        });
-
-        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
-        jPanel18.setLayout(jPanel18Layout);
-        jPanel18Layout.setHorizontalGroup(
-            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
-            .addGroup(jPanel18Layout.createSequentialGroup()
-                .addComponent(jLabel22)
-                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 157, Short.MAX_VALUE)
-                .addComponent(help_hintsLbl))
-        );
-        jPanel18Layout.setVerticalGroup(
-            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
-            .addComponent(jLabel22)
-            .addComponent(help_hintsLbl)
-        );
-
-        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
-        jLabel1.setText("<html>\n\n1 &bull; Set the output file,<br/>\n2 &bull; Add some assets,<br/>\n3 &bull; Select an asset and define its collision shapes (you can define multiple shapes).<br/><br/>\n\n&bull; <font color=\"#00AA00\">Create a shape</font> with <font color=\"#0000FF\">ctrl + left clics</font><br/>\n&bull; <font color=\"#00AA00\">Edit a shape</font> by <font color=\"#0000FF\">dragging the left mouse button</font><br/>\n&bull; <font color=\"#00AA00\">Test collisions</font> with <font color=\"#0000FF\">shift + dragging the left mouse button</font><br/><br/>\n\n&bull; <font color=\"#00AA00\">Zoom</font> by<font color=\"#0000FF\"> scrolling</font><br/>\n&bull; <font color=\"#00AA00\">Pan</font> by <font color=\"#0000FF\">dragging the right mouse button</font><br/>\n\n");
-        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
-
-        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
-        jPanel17.setLayout(jPanel17Layout);
-        jPanel17Layout.setHorizontalGroup(
-            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
-            .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
-            .addGroup(jPanel17Layout.createSequentialGroup()
-                .addGap(10, 10, 10)
-                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
-                .addGap(10, 10, 10))
-        );
-        jPanel17Layout.setVerticalGroup(
-            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
-            .addGroup(jPanel17Layout.createSequentialGroup()
-                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
-                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
-                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
-                .addContainerGap())
-        );
-
-        javax.swing.GroupLayout eastPanelLayout = new javax.swing.GroupLayout(eastPanel);
-        eastPanel.setLayout(eastPanelLayout);
-        eastPanelLayout.setHorizontalGroup(
-            eastPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
-            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
-            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
-            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
-            .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
-        );
-        eastPanelLayout.setVerticalGroup(
-            eastPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
-            .addGroup(eastPanelLayout.createSequentialGroup()
-                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
-                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
-                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
-                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
-                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
-                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
-                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
-                .addContainerGap(104, Short.MAX_VALUE))
-        );
-
-        getContentPane().add(eastPanel, java.awt.BorderLayout.EAST);
-
-        pack();
-    }// </editor-fold>//GEN-END:initComponents
-
-	private void init_addAssetsByFilesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_init_addAssetsByFilesBtnActionPerformed
-		if (AppContext.instance().outputFile == null) {
-			JOptionPane.showMessageDialog(this, "Output file has not been set yet.");
-			return;
-		}
-		
-		String[] assets = promptAssetsByFiles();
-		if (assets != null)
-			for (String asset : assets)
-				addAsset(asset, true);
-	}//GEN-LAST:event_init_addAssetsByFilesBtnActionPerformed
-
-	private void init_setOutputFileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_init_setOutputFileBtnActionPerformed
-		File file = promptOutputFile();
-		if (file != null)
-			setOutputFile(file, false);
-	}//GEN-LAST:event_init_setOutputFileBtnActionPerformed
-
-	private void export_saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_export_saveBtnActionPerformed
-		File outputFile = AppContext.instance().outputFile;
-		if (outputFile == null) {
-			JOptionPane.showMessageDialog(this, "Output file has not been set yet.");
-			return;
-		}
-
-		try {			
-			AppContext.instance().exportToFile();
-			JOptionPane.showMessageDialog(this, "Save successfully done !");
-
-			int idx = assets_assetList.getSelectedIndex();
-			loadAssets();
-			assets_assetList.setSelectedIndex(idx);
-
-		} catch (IOException ex) {
-			JOptionPane.showMessageDialog(this, "Something went wrong while writing the file, sorry :/"
-				+ "\n(nah, don't expect more details)");
-		}
-	}//GEN-LAST:event_export_saveBtnActionPerformed
-
-	private void assets_assetListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_assets_assetListValueChanged
-		AppContext.instance().clearTempObjects();
-		AppContext.instance().setCurrentName(null);
-		App.instance().clearAsset();
-
-		if (assets_assetList.isSelectionEmpty())
-			return;
-
-		int idx = assets_assetList.getSelectedIndex();
-		if (isAssetValid(idx)) {
-			String name = (String) assetsListModel.get(idx);
-			String path = AppContext.instance().getFullPath(name);
-
-			Vector2 size = App.instance().setAssetByFile(path);
-			AppContext.instance().setCurrentSize(size);
-			AppContext.instance().setCurrentName(name);
-			AppContext.instance().loadCurrentModel();
-		}
-	}//GEN-LAST:event_assets_assetListValueChanged
-
-	private void assets_removeAssetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assets_removeAssetBtnActionPerformed
-		if (!assets_assetList.isSelectionEmpty()) {
-			int[] idxs = assets_assetList.getSelectedIndices();
-			Arrays.sort(idxs);
-			for (int i=idxs.length-1; i>=0; i--)
-				removeAsset(idxs[i]);
-		}
-	}//GEN-LAST:event_assets_removeAssetBtnActionPerformed
-
-	private void shape_drawShapeChkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shape_drawShapeChkActionPerformed
-		AppContext.instance().isShapeDrawn = shape_drawShapeChk.isSelected();
-	}//GEN-LAST:event_shape_drawShapeChkActionPerformed
-
-	private void shape_drawPolysChkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shape_drawPolysChkActionPerformed
-		AppContext.instance().arePolyDrawn = shape_drawPolysChk.isSelected();
-	}//GEN-LAST:event_shape_drawPolysChkActionPerformed
-
-	private void shape_drawAssetChkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shape_drawAssetChkActionPerformed
-		AppContext.instance().isAssetDrawn = shape_drawAssetChk.isSelected();
-	}//GEN-LAST:event_shape_drawAssetChkActionPerformed
-
-	private void shape_drawAssetOpacity50ChkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shape_drawAssetOpacity50ChkActionPerformed
-		AppContext.instance().isAssetDrawnWithOpacity50 = shape_drawAssetOpacity50Chk.isSelected();
-	}//GEN-LAST:event_shape_drawAssetOpacity50ChkActionPerformed
-
-	private void tools_insertPointsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tools_insertPointsBtnActionPerformed
-		AppContext.instance().insertPointBetweenSelected();
-	}//GEN-LAST:event_tools_insertPointsBtnActionPerformed
-
-	private void tools_removePointsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tools_removePointsBtnActionPerformed
-		AppContext.instance().removeSelectedPoints();
-	}//GEN-LAST:event_tools_removePointsBtnActionPerformed
-
-	private void tools_clearPointsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tools_clearPointsBtnActionPerformed
-		AppContext.instance().clearTempObjects();
-	}//GEN-LAST:event_tools_clearPointsBtnActionPerformed
-
-	private void help_configurationLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_help_configurationLblMouseClicked
-		JOptionPane.showMessageDialog(this, 
-			"<html>"
-			+ "First, set the output file to either an existing file or a new file. If you choose an existing file,<br/>"
-			+ "you will be prompted to load its content over the current one (if any).<br/><br/>"
-			+ ""
-			+ "Then, add some image assets (png, jpg...) and start drawing your shapes !<br/><br/>"
-			+ ""
-			+ "<i><u>Note</u>: Your assets will be referenced relatively to the location of the output file. If you move them<br/>"
-			+ "away, the editor won't be able to load them correctly thereafter.</i>"
-		);
-	}//GEN-LAST:event_help_configurationLblMouseClicked
-
-	private void help_exportLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_help_exportLblMouseClicked
-		JOptionPane.showMessageDialog(this,
-			"<html>"
-			+ "Saving your work to the output file will erase its content and replace it with every shape you drew.<br/>"
-			+ "Note that assets without any shape defined won't be saved.<br/><br/>"
-			+ ""
-			+ "Also, once you saved, the asset list is cleared and the output file is loaded back, to assure you that<br/>"
-			+ "everything went well."
-		);
-	}//GEN-LAST:event_help_exportLblMouseClicked
-
-	private void help_assetsLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_help_assetsLblMouseClicked
-		JOptionPane.showMessageDialog(this,
-			"<html>"
-			+ "Each asset from the list let you define a collision mask by creating one or more contour shape.<br/><br/>"
-			+ ""
-			+ "<i><u>Note</u>: The names of the asset that appear in the list are the keys you will have to use in the<br/>"
-			+ "FixtureAtlas.</i>"
-		);
-	}//GEN-LAST:event_help_assetsLblMouseClicked
-
-	private void help_optionsLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_help_optionsLblMouseClicked
-		JOptionPane.showMessageDialog(this,
-			"<html>"
-			+ "Options speak for themselves, don't they ? :)"
-		);
-	}//GEN-LAST:event_help_optionsLblMouseClicked
-
-	private void help_toolsLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_help_toolsLblMouseClicked
-		JOptionPane.showMessageDialog(this,
-			"<html>"
-			+ "Edition tools can only be used when you defined at least one shape for the current asset.<br/><br/>"
-			+ ""
-			+ "&bull; <u>Insert points</u>: select two or more adjacent points to insert new point(s) between them.<br/>"
-			+ "&bull; <u>Remove points</u>: removes the selected points. Be careful because you can end up with shapes<br/>"
-			+ "with less than 3 vertices.<br/>"
-			+ "&bull; <u>Clear all points</u>: removes every shape from the current asset."
-		);
-	}//GEN-LAST:event_help_toolsLblMouseClicked
-
-	private void help_hintsLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_help_hintsLblMouseClicked
-		JOptionPane.showMessageDialog(this,
-			"<html>"
-			+ "Main help section that I want everyone to see."
-		);
-	}//GEN-LAST:event_help_hintsLblMouseClicked
-
-	// -------------------------------------------------------------------------
-
-	private static final String UNKNOWN_PREFIX = "[NOT FOUND] ";
-
-	private void setOutputFile(File file, boolean force) {
-		File oldFile = AppContext.instance().outputFile;
-		AppContext.instance().outputFile = file;
-		init_outputFileLbl.setText(file.getPath());
-
-		if (oldFile != null)
-			updateAssets(oldFile.getParent(), file.getParent());
-
-		if (file.exists()) {
-			if (!force) {
-				int answer = JOptionPane.showConfirmDialog(this,
-				"Selected file already exists. Do you want to load its content ?"
-				+ "\nLoaded content will replace the current one.",
-				"", JOptionPane.YES_NO_OPTION);
-
-				if (answer == JOptionPane.YES_OPTION)
-					loadAssets();
-
-			} else {
-				loadAssets();
-			}
-		}
-	}
-
-	private void addAsset(String name, boolean absolutePath) {
-		String newName = absolutePath
-			? AppContext.instance().getPathRelativeToOutputFile(name)
-			: name;
-
-		if (newName == null)
-			return;
-
-		String path = absolutePath
-			? name
-			: AppContext.instance().getFullPath(name);
-
-		File file = new File(path);
-
-		if (file.exists()) {
-			if (!assetsListModel.contains(newName))
-				assetsListModel.addElement(newName);
-			AppContext.instance().addModel(newName);
-		} else {
-			if (!assetsListModel.contains(UNKNOWN_PREFIX + newName))
-				assetsListModel.addElement(UNKNOWN_PREFIX + newName);
-			AppContext.instance().addModel(newName);
-		}
-	}
-
-	private void removeAsset(int idx) {
-		String oldName = (String) assetsListModel.get(idx);
-		AppContext.instance().removeModel(oldName);
-
-		assetsListModel.remove(idx);
-		if (assetsListModel.size() > idx)
-			assets_assetList.setSelectedIndex(idx);
-		else if (assetsListModel.size() > 0)
-			assets_assetList.setSelectedIndex(idx-1);
-	}
-
-	private boolean isAssetValid(int idx) {
-		String name = (String) assetsListModel.get(idx);
-		if (name.startsWith(UNKNOWN_PREFIX))
-			return false;
-
-		String path = AppContext.instance().getFullPath(name);
-		File file = new File(path);
-
-		if (!file.exists()) {
-			assetsListModel.set(idx, UNKNOWN_PREFIX + name);
-			return false;
-		}
-
-		return true;
-	}
-
-	private void updateAssets(String oldRoot, String newRoot) {
-		for (int i=assetsListModel.getSize()-1; i>=0; i--) {
-			String oldName = (String) assetsListModel.get(i);
-
-			if (oldName.startsWith(UNKNOWN_PREFIX)) {
-				oldName = oldName.substring(UNKNOWN_PREFIX.length());
-				File f = new File(newRoot, oldName);
-				if (f.exists())
-					assetsListModel.set(i, oldName);
-			} else {
-				String newName = new File(oldRoot, oldName).getPath();
-				newName = AppContext.instance().getPathRelativeToOutputFile(newName);
-
-				if (newName != null) {
-					assetsListModel.set(i, newName);
-					AppContext.instance().changeModelName(oldName, newName);
-				} else {
-					assetsListModel.set(i, UNKNOWN_PREFIX + oldName);
-				}
-			}
-		}
-
-		int idx = assets_assetList.getSelectedIndex();
-		if (idx > -1) {
-			assets_assetList.clearSelection();
-			assets_assetList.setSelectedIndex(idx);
-		}
-	}
-
-	private void loadAssets() {
-		File outputFile = AppContext.instance().outputFile;
-		if (outputFile == null || !outputFile.exists())
-			return;
-
-		try {
-			AppContext.instance().importFromFile();
-			assetsListModel.clear();
-			for (String name : AppContext.instance().getModelNames())
-				addAsset(name, false);
-
-		} catch (IOException ex) {
-			JOptionPane.showMessageDialog(this,
-				"Something went wrong while reading the output "
-				+ "file, sorry :/"
-				+ "\n(nah, don't expect more details)");
-		}
-	}
-
-	// -------------------------------------------------------------------------
-
-    // Variables declaration - do not modify//GEN-BEGIN:variables
-    private javax.swing.JList assets_assetList;
-    private javax.swing.JScrollPane assets_assetListScrollPane;
-    private javax.swing.JButton assets_removeAssetBtn;
-    private javax.swing.JPanel eastPanel;
-    private javax.swing.JButton export_saveBtn;
-    private javax.swing.JLabel help_assetsLbl;
-    private javax.swing.JLabel help_configurationLbl;
-    private javax.swing.JLabel help_exportLbl;
-    private javax.swing.JLabel help_hintsLbl;
-    private javax.swing.JLabel help_optionsLbl;
-    private javax.swing.JLabel help_toolsLbl;
-    private javax.swing.JButton init_addAssetsByFilesBtn;
-    private javax.swing.JTextField init_outputFileLbl;
-    private javax.swing.JButton init_setOutputFileBtn;
-    private javax.swing.JLabel jLabel1;
-    private javax.swing.JLabel jLabel10;
-    private javax.swing.JLabel jLabel20;
-    private javax.swing.JLabel jLabel22;
-    private javax.swing.JLabel jLabel3;
-    private javax.swing.JLabel jLabel5;
-    private javax.swing.JLabel jLabel7;
-    private javax.swing.JLabel jLabel9;
-    private javax.swing.JPanel jPanel1;
-    private javax.swing.JPanel jPanel10;
-    private javax.swing.JPanel jPanel11;
-    private javax.swing.JPanel jPanel16;
-    private javax.swing.JPanel jPanel17;
-    private javax.swing.JPanel jPanel18;
-    private javax.swing.JPanel jPanel2;
-    private javax.swing.JPanel jPanel3;
-    private javax.swing.JPanel jPanel4;
-    private javax.swing.JPanel jPanel5;
-    private javax.swing.JPanel jPanel6;
-    private javax.swing.JPanel jPanel7;
-    private javax.swing.JPanel jPanel8;
-    private javax.swing.JPanel jPanel9;
-    private javax.swing.JSeparator jSeparator3;
-    private javax.swing.JPanel renderPanel;
-    private javax.swing.ButtonGroup shapeModeBtnGrp;
-    private javax.swing.JCheckBox shape_drawAssetChk;
-    private javax.swing.JCheckBox shape_drawAssetOpacity50Chk;
-    private javax.swing.JCheckBox shape_drawPolysChk;
-    private javax.swing.JCheckBox shape_drawShapeChk;
-    private javax.swing.JButton tools_clearPointsBtn;
-    private javax.swing.JButton tools_insertPointsBtn;
-    private javax.swing.JButton tools_removePointsBtn;
-    private javax.swing.JPanel westPanel;
-    // End of variables declaration//GEN-END:variables
-
-
-	private final FileFilter imageUiFilter = new FileFilter() {
-		@Override public boolean accept(File f) {
-			if (f.isDirectory())
-				return true;
-			return isSameString(getExtension(f), "png", "jpg", "jpeg");
-		}
-
-		@Override public String getDescription() {
-			return "Image files or directories";
-		}
-	};
-
-	private final java.io.FileFilter imageFilter = new java.io.FileFilter() {
-		@Override
-		public boolean accept(File f) {
-			if (f.isDirectory())
-				return true;
-			return isSameString(getExtension(f), "png", "jpg", "jpeg");
-		}
-	};
-	
-    private String[] promptAssetsByFiles() {
-		String startupPath = AppContext.instance().getRootDirectory();
-		JFileChooser chooser = new JFileChooser(startupPath);
-		chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
-		chooser.setMultiSelectionEnabled(true);
-		chooser.setFileFilter(imageUiFilter);
-
-		if (chooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
-			List<String> assetPaths = new ArrayList<String>();
-			List<File> remainingFiles = new ArrayList<File>();
-
-			Collections.addAll(remainingFiles, chooser.getSelectedFiles());
-			int deepness = 0;
-			int maxDeepness = 8;
-
-			while (!remainingFiles.isEmpty()) {
-				File currentFile = remainingFiles.remove(0);
-				if (currentFile.isFile()) {
-					assetPaths.add(currentFile.getPath());
-				} else if (deepness < maxDeepness) {
-					deepness += 1;
-					Collections.addAll(remainingFiles, currentFile.listFiles(imageFilter));
-				}
-			}
-
-			return assetPaths.toArray(new String[assetPaths.size()]);
-		}
-
-		return null;
-	}
-
-	private File promptOutputFile() {
-		File outputFile = AppContext.instance().outputFile;
-		File startupDir = outputFile != null ? outputFile.getParentFile() : new File(".");
-		if (!startupDir.isDirectory())
-			startupDir = new File(".");
-
-		JFileChooser chooser = new JFileChooser(startupDir);
-		chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
-		chooser.setMultiSelectionEnabled(false);
-
-		if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
-			File selectedFile = chooser.getSelectedFile();
-			return selectedFile;
-		}
-
-		return null;
-	}
-
-	private boolean isSameString(String str1, String... strs) {
-		for (String str : strs)
-			if (str1.equalsIgnoreCase(str))
-				return true;
-		return false;
-	}
-
-	private String getExtension(File f) {
-		int idx = f.getName().lastIndexOf(".");
-		if (idx < 0 || idx == f.getName().length()-1)
-			return "";
-		return f.getName().substring(idx+1);
-	}
-}
\ No newline at end of file
diff --git a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/utils/FileUtils.java b/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/utils/FileUtils.java
deleted file mode 100644
index 4170dec..0000000
--- a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/utils/FileUtils.java
+++ /dev/null
@@ -1,117 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-package com.badlogic.gdx.box2deditor.utils;
-
-import java.io.File;
-import java.util.regex.Pattern;
-import org.apache.commons.io.FilenameUtils;
-
-/**
- *
- * @author Unknown ?
- */
-public class FileUtils {
-
-	/**
-	 * Get the relative path from one file to another, specifying the directory separator.
-	 * If one of the provided resources does not exist, it is assumed to be a file unless it ends with '/' or
-	 * '\'.
-	 *
-	 * @param target targetPath is calculated to this file
-	 * @param base basePath is calculated from this file
-	 * @param separator directory separator. The platform default is not assumed so that we can test Unix behaviour when running on Windows (for example)
-	 * @return
-	 */
-	public static String getRelativePath(String targetPath, String basePath, String pathSeparator) {
-		// Normalize the paths
-		String normalizedTargetPath = FilenameUtils.normalizeNoEndSeparator(targetPath);
-		String normalizedBasePath = FilenameUtils.normalizeNoEndSeparator(basePath);
-
-		// Undo the changes to the separators made by normalization
-		if (pathSeparator.equals("/")) {
-			normalizedTargetPath = FilenameUtils.separatorsToUnix(normalizedTargetPath);
-			normalizedBasePath = FilenameUtils.separatorsToUnix(normalizedBasePath);
-
-		} else if (pathSeparator.equals("\\")) {
-			normalizedTargetPath = FilenameUtils.separatorsToWindows(normalizedTargetPath);
-			normalizedBasePath = FilenameUtils.separatorsToWindows(normalizedBasePath);
-
-		} else {
-			throw new IllegalArgumentException("Unrecognised dir separator '" + pathSeparator + "'");
-		}
-
-		String[] base = normalizedBasePath.split(Pattern.quote(pathSeparator));
-		String[] target = normalizedTargetPath.split(Pattern.quote(pathSeparator));
-
-		// First get all the common elements. Store them as a string,
-		// and also count how many of them there are.
-		StringBuilder common = new StringBuilder();
-
-		int commonIndex = 0;
-		while (commonIndex < target.length && commonIndex < base.length
-			&& target[commonIndex].equals(base[commonIndex])) {
-			common.append(target[commonIndex]).append(pathSeparator);
-			commonIndex++;
-		}
-
-		if (commonIndex == 0) {
-			// No single common path element. This most
-			// likely indicates differing drive letters, like C: and D:.
-			// These paths cannot be relativized.
-			throw new NoCommonPathFoundException("No common path element found for '"
-				+ normalizedTargetPath + "' and '" + normalizedBasePath + "'");
-		}
-
-		// The number of directories we have to backtrack depends on whether the base is a file or a dir
-		// For example, the relative path from
-		//
-		// /foo/bar/baz/gg/ff to /foo/bar/baz
-		//
-		// ".." if ff is a file
-		// "../.." if ff is a directory
-		//
-		// The following is a heuristic to figure out if the base refers to a file or dir. It's not perfect, because
-		// the resource referred to by this path may not actually exist, but it's the best I can do
-		boolean baseIsFile = true;
-
-		File baseResource = new File(normalizedBasePath);
-
-		if (baseResource.exists()) {
-			baseIsFile = baseResource.isFile();
-
-		} else if (basePath.endsWith(pathSeparator)) {
-			baseIsFile = false;
-		}
-
-		StringBuilder relative = new StringBuilder();
-
-		if (base.length != commonIndex) {
-			int numDirsUp = baseIsFile ? base.length - commonIndex - 1 : base.length - commonIndex;
-
-			for (int i = 0; i < numDirsUp; i++) {
-				relative.append("..").append(pathSeparator);
-			}
-		}
-		relative.append(normalizedTargetPath.substring(common.length()));
-		return relative.toString();
-	}
-
-	public static class NoCommonPathFoundException extends RuntimeException {
-		public NoCommonPathFoundException(String msg) {
-			super(msg);
-		}
-	}
-}
\ No newline at end of file
diff --git a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/utils/ShapeUtils.java b/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/utils/ShapeUtils.java
deleted file mode 100644
index 0463bde..0000000
--- a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/utils/ShapeUtils.java
+++ /dev/null
@@ -1,45 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-package com.badlogic.gdx.box2deditor.utils;
-
-import com.badlogic.gdx.math.Vector2;
-
-/**
- *
- * @author Aurelien Ribon (aurelien.ribon@gmail.com)
- */
-public class ShapeUtils {
-	public static float getPolygonSignedArea(Vector2[] points) {
-		if (points.length < 3)
-			return 0;
-
-		float sum = 0;
-		for (int i = 0; i < points.length; i++) {
-			Vector2 p1 = points[i];
-			Vector2 p2 = i != points.length-1 ? points[i+1] : points[0];
-			sum += (p1.x * p2.y) - (p1.y * p2.x);
-		}
-		return 0.5f * sum;
-	}
-
-	public static float getPolygonArea(Vector2[] points) {
-		return Math.abs(getPolygonSignedArea(points));
-	}
-
-	public static boolean isPolygonCCW(Vector2[] points) {
-		return getPolygonSignedArea(points) > 0;
-	}
-}
\ No newline at end of file
diff --git a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/utils/VectorUtils.java b/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/utils/VectorUtils.java
deleted file mode 100644
index add5502..0000000
--- a/extensions/box2d-editor/editor/src/com/badlogic/gdx/box2deditor/utils/VectorUtils.java
+++ /dev/null
@@ -1,70 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-package com.badlogic.gdx.box2deditor.utils;
-
-import com.badlogic.gdx.math.Vector2;
-
-/**
- *
- * @author Aurelien Ribon (aurelien.ribon@gmail.com)
- */
-public class VectorUtils {
-	public static Vector2 mul(Vector2 v, float coeff) {
-		return new Vector2(v).mul(coeff);
-	}
-
-	public static Vector2[] mul(Vector2[] vs, float coeff) {
-		Vector2[] ret = new Vector2[vs.length];
-		for (int i=0; i<ret.length; i++)
-			ret[i] = mul(vs[i], coeff);
-		return ret;
-	}
-
-	public static Vector2[][] mul(Vector2[][] vss, float coeff) {
-		Vector2[][] ret = new Vector2[vss.length][];
-		for (int i=0; i<ret.length; i++)
-			ret[i] = mul(vss[i], coeff);
-		return ret;
-	}
-
-	// -------------------------------------------------------------------------
-
-	public static Vector2 getCopy(Vector2 v) {
-		if (v == null)
-			return null;
-		return v.cpy();
-	}
-
-	public static Vector2[] getCopy(Vector2[] vs) {
-		if (vs == null)
-			return null;
-
-		Vector2[] ret = new Vector2[vs.length];
-		for (int i=0; i<ret.length; i++)
-			ret[i] = getCopy(vs[i]);
-		return ret;
-	}
-
-	public static Vector2[][] getCopy(Vector2[][] vss) {
-		if (vss == null)
-			return null;
-
-		Vector2[][] ret = new Vector2[vss.length][];
-		for (int i=0; i<ret.length; i++)
-			ret[i] = getCopy(vss[i]);
-		return ret;
-	}
-}
\ No newline at end of file
diff --git a/extensions/box2d-editor/editor/src/org/apache/commons/io/FilenameUtils.java b/extensions/box2d-editor/editor/src/org/apache/commons/io/FilenameUtils.java
deleted file mode 100644
index 971e6cc..0000000
--- a/extensions/box2d-editor/editor/src/org/apache/commons/io/FilenameUtils.java
+++ /dev/null
@@ -1,1368 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.commons.io;
-
-import java.io.File;
-import java.util.ArrayList;
-import java.util.Collection;
-import java.util.Stack;
-
-/**
- * General filename and filepath manipulation utilities.
- * <p>
- * When dealing with filenames you can hit problems when moving from a Windows
- * based development machine to a Unix based production machine.
- * This class aims to help avoid those problems.
- * <p>
- * <b>NOTE</b>: You may be able to avoid using this class entirely simply by
- * using JDK {@link java.io.File File} objects and the two argument constructor
- * {@link java.io.File#File(java.io.File, java.lang.String) File(File,String)}.
- * <p>
- * Most methods on this class are designed to work the same on both Unix and Windows.
- * Those that don't include 'System', 'Unix' or 'Windows' in their name.
- * <p>
- * Most methods recognise both separators (forward and back), and both
- * sets of prefixes. See the javadoc of each method for details.
- * <p>
- * This class defines six components within a filename
- * (example C:\dev\project\file.txt):
- * <ul>
- * <li>the prefix - C:\</li>
- * <li>the path - dev\project\</li>
- * <li>the full path - C:\dev\project\</li>
- * <li>the name - file.txt</li>
- * <li>the base name - file</li>
- * <li>the extension - txt</li>
- * </ul>
- * Note that this class works best if directory filenames end with a separator.
- * If you omit the last separator, it is impossible to determine if the filename
- * corresponds to a file or a directory. As a result, we have chosen to say
- * it corresponds to a file.
- * <p>
- * This class only supports Unix and Windows style names.
- * Prefixes are matched as follows:
- * <pre>
- * Windows:
- * a\b\c.txt           --> ""          --> relative
- * \a\b\c.txt          --> "\"         --> current drive absolute
- * C:a\b\c.txt         --> "C:"        --> drive relative
- * C:\a\b\c.txt        --> "C:\"       --> absolute
- * \\server\a\b\c.txt  --> "\\server\" --> UNC
- *
- * Unix:
- * a/b/c.txt           --> ""          --> relative
- * /a/b/c.txt          --> "/"         --> absolute
- * ~/a/b/c.txt         --> "~/"        --> current user
- * ~                   --> "~/"        --> current user (slash added)
- * ~user/a/b/c.txt     --> "~user/"    --> named user
- * ~user               --> "~user/"    --> named user (slash added)
- * </pre>
- * Both prefix styles are matched always, irrespective of the machine that you are
- * currently running on.
- * <p>
- * Origin of code: Excalibur, Alexandria, Tomcat, Commons-Utils.
- *
- * @author <a href="mailto:burton@relativity.yi.org">Kevin A. Burton</A>
- * @author <a href="mailto:sanders@apache.org">Scott Sanders</a>
- * @author <a href="mailto:dlr@finemaltcoding.com">Daniel Rall</a>
- * @author <a href="mailto:Christoph.Reck@dlr.de">Christoph.Reck</a>
- * @author <a href="mailto:peter@apache.org">Peter Donald</a>
- * @author <a href="mailto:jefft@apache.org">Jeff Turner</a>
- * @author Matthew Hawthorne
- * @author Martin Cooper
- * @author <a href="mailto:jeremias@apache.org">Jeremias Maerki</a>
- * @author Stephen Colebourne
- * @version $Id: FilenameUtils.java 1004077 2010-10-04 00:58:42Z niallp $
- * @since Commons IO 1.1
- */
-public class FilenameUtils {
-
-    /**
-     * The extension separator character.
-     * @since Commons IO 1.4
-     */
-    public static final char EXTENSION_SEPARATOR = '.';
-
-    /**
-     * The extension separator String.
-     * @since Commons IO 1.4
-     */
-    public static final String EXTENSION_SEPARATOR_STR = Character.toString(EXTENSION_SEPARATOR);
-
-    /**
-     * The Unix separator character.
-     */
-    private static final char UNIX_SEPARATOR = '/';
-
-    /**
-     * The Windows separator character.
-     */
-    private static final char WINDOWS_SEPARATOR = '\\';
-
-    /**
-     * The system separator character.
-     */
-    private static final char SYSTEM_SEPARATOR = File.separatorChar;
-
-    /**
-     * The separator character that is the opposite of the system separator.
-     */
-    private static final char OTHER_SEPARATOR;
-    static {
-        if (isSystemWindows()) {
-            OTHER_SEPARATOR = UNIX_SEPARATOR;
-        } else {
-            OTHER_SEPARATOR = WINDOWS_SEPARATOR;
-        }
-    }
-
-    /**
-     * Instances should NOT be constructed in standard programming.
-     */
-    public FilenameUtils() {
-        super();
-    }
-
-    //-----------------------------------------------------------------------
-    /**
-     * Determines if Windows file system is in use.
-     *
-     * @return true if the system is Windows
-     */
-    static boolean isSystemWindows() {
-        return SYSTEM_SEPARATOR == WINDOWS_SEPARATOR;
-    }
-
-    //-----------------------------------------------------------------------
-    /**
-     * Checks if the character is a separator.
-     *
-     * @param ch  the character to check
-     * @return true if it is a separator character
-     */
-    private static boolean isSeparator(char ch) {
-        return (ch == UNIX_SEPARATOR) || (ch == WINDOWS_SEPARATOR);
-    }
-
-    //-----------------------------------------------------------------------
-    /**
-     * Normalizes a path, removing double and single dot path steps.
-     * <p>
-     * This method normalizes a path to a standard format.
-     * The input may contain separators in either Unix or Windows format.
-     * The output will contain separators in the format of the system.
-     * <p>
-     * A trailing slash will be retained.
-     * A double slash will be merged to a single slash (but UNC names are handled).
-     * A single dot path segment will be removed.
-     * A double dot will cause that path segment and the one before to be removed.
-     * If the double dot has no parent path segment to work with, <code>null</code>
-     * is returned.
-     * <p>
-     * The output will be the same on both Unix and Windows except
-     * for the separator character.
-     * <pre>
-     * /foo//               -->   /foo/
-     * /foo/./              -->   /foo/
-     * /foo/../bar          -->   /bar
-     * /foo/../bar/         -->   /bar/
-     * /foo/../bar/../baz   -->   /baz
-     * //foo//./bar         -->   /foo/bar
-     * /../                 -->   null
-     * ../foo               -->   null
-     * foo/bar/..           -->   foo/
-     * foo/../../bar        -->   null
-     * foo/../bar           -->   bar
-     * //server/foo/../bar  -->   //server/bar
-     * //server/../bar      -->   null
-     * C:\foo\..\bar        -->   C:\bar
-     * C:\..\bar            -->   null
-     * ~/foo/../bar/        -->   ~/bar/
-     * ~/../bar             -->   null
-     * </pre>
-     * (Note the file separator returned will be correct for Windows/Unix)
-     *
-     * @param filename  the filename to normalize, null returns null
-     * @return the normalized filename, or null if invalid
-     */
-    public static String normalize(String filename) {
-        return doNormalize(filename, SYSTEM_SEPARATOR, true);
-    }
-    /**
-     * Normalizes a path, removing double and single dot path steps.
-     * <p>
-     * This method normalizes a path to a standard format.
-     * The input may contain separators in either Unix or Windows format.
-     * The output will contain separators in the format specified.
-     * <p>
-     * A trailing slash will be retained.
-     * A double slash will be merged to a single slash (but UNC names are handled).
-     * A single dot path segment will be removed.
-     * A double dot will cause that path segment and the one before to be removed.
-     * If the double dot has no parent path segment to work with, <code>null</code>
-     * is returned.
-     * <p>
-     * The output will be the same on both Unix and Windows except
-     * for the separator character.
-     * <pre>
-     * /foo//               -->   /foo/
-     * /foo/./              -->   /foo/
-     * /foo/../bar          -->   /bar
-     * /foo/../bar/         -->   /bar/
-     * /foo/../bar/../baz   -->   /baz
-     * //foo//./bar         -->   /foo/bar
-     * /../                 -->   null
-     * ../foo               -->   null
-     * foo/bar/..           -->   foo/
-     * foo/../../bar        -->   null
-     * foo/../bar           -->   bar
-     * //server/foo/../bar  -->   //server/bar
-     * //server/../bar      -->   null
-     * C:\foo\..\bar        -->   C:\bar
-     * C:\..\bar            -->   null
-     * ~/foo/../bar/        -->   ~/bar/
-     * ~/../bar             -->   null
-     * </pre>
-     * The output will be the same on both Unix and Windows including
-     * the separator character.
-     *
-     * @param filename  the filename to normalize, null returns null
-     * @param unixSeparator <code>true</code> if a unix separator should
-     * be used or <code>false</code> if a windows separator should be used.
-     * @return the normalized filename, or null if invalid
-     * @since Commons IO 2.0
-     */
-    public static String normalize(String filename, boolean unixSeparator) {
-        char separator = (unixSeparator ? UNIX_SEPARATOR : WINDOWS_SEPARATOR);
-        return doNormalize(filename, separator, true);
-    }
-
-    //-----------------------------------------------------------------------
-    /**
-     * Normalizes a path, removing double and single dot path steps,
-     * and removing any final directory separator.
-     * <p>
-     * This method normalizes a path to a standard format.
-     * The input may contain separators in either Unix or Windows format.
-     * The output will contain separators in the format of the system.
-     * <p>
-     * A trailing slash will be removed.
-     * A double slash will be merged to a single slash (but UNC names are handled).
-     * A single dot path segment will be removed.
-     * A double dot will cause that path segment and the one before to be removed.
-     * If the double dot has no parent path segment to work with, <code>null</code>
-     * is returned.
-     * <p>
-     * The output will be the same on both Unix and Windows except
-     * for the separator character.
-     * <pre>
-     * /foo//               -->   /foo
-     * /foo/./              -->   /foo
-     * /foo/../bar          -->   /bar
-     * /foo/../bar/         -->   /bar
-     * /foo/../bar/../baz   -->   /baz
-     * //foo//./bar         -->   /foo/bar
-     * /../                 -->   null
-     * ../foo               -->   null
-     * foo/bar/..           -->   foo
-     * foo/../../bar        -->   null
-     * foo/../bar           -->   bar
-     * //server/foo/../bar  -->   //server/bar
-     * //server/../bar      -->   null
-     * C:\foo\..\bar        -->   C:\bar
-     * C:\..\bar            -->   null
-     * ~/foo/../bar/        -->   ~/bar
-     * ~/../bar             -->   null
-     * </pre>
-     * (Note the file separator returned will be correct for Windows/Unix)
-     *
-     * @param filename  the filename to normalize, null returns null
-     * @return the normalized filename, or null if invalid
-     */
-    public static String normalizeNoEndSeparator(String filename) {
-        return doNormalize(filename, SYSTEM_SEPARATOR, false);
-    }
-
-    /**
-     * Normalizes a path, removing double and single dot path steps,
-     * and removing any final directory separator.
-     * <p>
-     * This method normalizes a path to a standard format.
-     * The input may contain separators in either Unix or Windows format.
-     * The output will contain separators in the format specified.
-     * <p>
-     * A trailing slash will be removed.
-     * A double slash will be merged to a single slash (but UNC names are handled).
-     * A single dot path segment will be removed.
-     * A double dot will cause that path segment and the one before to be removed.
-     * If the double dot has no parent path segment to work with, <code>null</code>
-     * is returned.
-     * <p>
-     * The output will be the same on both Unix and Windows including
-     * the separator character.
-     * <pre>
-     * /foo//               -->   /foo
-     * /foo/./              -->   /foo
-     * /foo/../bar          -->   /bar
-     * /foo/../bar/         -->   /bar
-     * /foo/../bar/../baz   -->   /baz
-     * //foo//./bar         -->   /foo/bar
-     * /../                 -->   null
-     * ../foo               -->   null
-     * foo/bar/..           -->   foo
-     * foo/../../bar        -->   null
-     * foo/../bar           -->   bar
-     * //server/foo/../bar  -->   //server/bar
-     * //server/../bar      -->   null
-     * C:\foo\..\bar        -->   C:\bar
-     * C:\..\bar            -->   null
-     * ~/foo/../bar/        -->   ~/bar
-     * ~/../bar             -->   null
-     * </pre>
-     *
-     * @param filename  the filename to normalize, null returns null
-     * @param unixSeparator <code>true</code> if a unix separator should
-     * be used or <code>false</code> if a windows separtor should be used.
-     * @return the normalized filename, or null if invalid
-     * @since Commons IO 2.0
-     */
-    public static String normalizeNoEndSeparator(String filename, boolean unixSeparator) {
-         char separator = (unixSeparator ? UNIX_SEPARATOR : WINDOWS_SEPARATOR);
-        return doNormalize(filename, separator, false);
-    }
-
-    /**
-     * Internal method to perform the normalization.
-     *
-     * @param filename  the filename
-     * @param separator The separator character to use
-     * @param keepSeparator  true to keep the final separator
-     * @return the normalized filename
-     */
-    private static String doNormalize(String filename, char separator, boolean keepSeparator) {
-        if (filename == null) {
-            return null;
-        }
-        int size = filename.length();
-        if (size == 0) {
-            return filename;
-        }
-        int prefix = getPrefixLength(filename);
-        if (prefix < 0) {
-            return null;
-        }
-
-        char[] array = new char[size + 2];  // +1 for possible extra slash, +2 for arraycopy
-        filename.getChars(0, filename.length(), array, 0);
-
-        // fix separators throughout
-        char otherSeparator = (separator == SYSTEM_SEPARATOR ? OTHER_SEPARATOR : SYSTEM_SEPARATOR);
-        for (int i = 0; i < array.length; i++) {
-            if (array[i] == otherSeparator) {
-                array[i] = separator;
-            }
-        }
-
-        // add extra separator on the end to simplify code below
-        boolean lastIsDirectory = true;
-        if (array[size - 1] != separator) {
-            array[size++] = separator;
-            lastIsDirectory = false;
-        }
-
-        // adjoining slashes
-        for (int i = prefix + 1; i < size; i++) {
-            if (array[i] == separator && array[i - 1] == separator) {
-                System.arraycopy(array, i, array, i - 1, size - i);
-                size--;
-                i--;
-            }
-        }
-
-        // dot slash
-        for (int i = prefix + 1; i < size; i++) {
-            if (array[i] == separator && array[i - 1] == '.' &&
-                    (i == prefix + 1 || array[i - 2] == separator)) {
-                if (i == size - 1) {
-                    lastIsDirectory = true;
-                }
-                System.arraycopy(array, i + 1, array, i - 1, size - i);
-                size -=2;
-                i--;
-            }
-        }
-
-        // double dot slash
-        outer:
-        for (int i = prefix + 2; i < size; i++) {
-            if (array[i] == separator && array[i - 1] == '.' && array[i - 2] == '.' &&
-                    (i == prefix + 2 || array[i - 3] == separator)) {
-                if (i == prefix + 2) {
-                    return null;
-                }
-                if (i == size - 1) {
-                    lastIsDirectory = true;
-                }
-                int j;
-                for (j = i - 4 ; j >= prefix; j--) {
-                    if (array[j] == separator) {
-                        // remove b/../ from a/b/../c
-                        System.arraycopy(array, i + 1, array, j + 1, size - i);
-                        size -= (i - j);
-                        i = j + 1;
-                        continue outer;
-                    }
-                }
-                // remove a/../ from a/../c
-                System.arraycopy(array, i + 1, array, prefix, size - i);
-                size -= (i + 1 - prefix);
-                i = prefix + 1;
-            }
-        }
-
-        if (size <= 0) {  // should never be less than 0
-            return "";
-        }
-        if (size <= prefix) {  // should never be less than prefix
-            return new String(array, 0, size);
-        }
-        if (lastIsDirectory && keepSeparator) {
-            return new String(array, 0, size);  // keep trailing separator
-        }
-        return new String(array, 0, size - 1);  // lose trailing separator
-    }
-
-    //-----------------------------------------------------------------------
-    /**
-     * Concatenates a filename to a base path using normal command line style rules.
-     * <p>
-     * The effect is equivalent to resultant directory after changing
-     * directory to the first argument, followed by changing directory to
-     * the second argument.
-     * <p>
-     * The first argument is the base path, the second is the path to concatenate.
-     * The returned path is always normalized via {@link #normalize(String)},
-     * thus <code>..</code> is handled.
-     * <p>
-     * If <code>pathToAdd</code> is absolute (has an absolute prefix), then
-     * it will be normalized and returned.
-     * Otherwise, the paths will be joined, normalized and returned.
-     * <p>
-     * The output will be the same on both Unix and Windows except
-     * for the separator character.
-     * <pre>
-     * /foo/ + bar          -->   /foo/bar
-     * /foo + bar           -->   /foo/bar
-     * /foo + /bar          -->   /bar
-     * /foo + C:/bar        -->   C:/bar
-     * /foo + C:bar         -->   C:bar (*)
-     * /foo/a/ + ../bar     -->   foo/bar
-     * /foo/ + ../../bar    -->   null
-     * /foo/ + /bar         -->   /bar
-     * /foo/.. + /bar       -->   /bar
-     * /foo + bar/c.txt     -->   /foo/bar/c.txt
-     * /foo/c.txt + bar     -->   /foo/c.txt/bar (!)
-     * </pre>
-     * (*) Note that the Windows relative drive prefix is unreliable when
-     * used with this method.
-     * (!) Note that the first parameter must be a path. If it ends with a name, then
-     * the name will be built into the concatenated path. If this might be a problem,
-     * use {@link #getFullPath(String)} on the base path argument.
-     *
-     * @param basePath  the base path to attach to, always treated as a path
-     * @param fullFilenameToAdd  the filename (or path) to attach to the base
-     * @return the concatenated path, or null if invalid
-     */
-    public static String concat(String basePath, String fullFilenameToAdd) {
-        int prefix = getPrefixLength(fullFilenameToAdd);
-        if (prefix < 0) {
-            return null;
-        }
-        if (prefix > 0) {
-            return normalize(fullFilenameToAdd);
-        }
-        if (basePath == null) {
-            return null;
-        }
-        int len = basePath.length();
-        if (len == 0) {
-            return normalize(fullFilenameToAdd);
-        }
-        char ch = basePath.charAt(len - 1);
-        if (isSeparator(ch)) {
-            return normalize(basePath + fullFilenameToAdd);
-        } else {
-            return normalize(basePath + '/' + fullFilenameToAdd);
-        }
-    }
-
-    //-----------------------------------------------------------------------
-    /**
-     * Converts all separators to the Unix separator of forward slash.
-     *
-     * @param path  the path to be changed, null ignored
-     * @return the updated path
-     */
-    public static String separatorsToUnix(String path) {
-        if (path == null || path.indexOf(WINDOWS_SEPARATOR) == -1) {
-            return path;
-        }
-        return path.replace(WINDOWS_SEPARATOR, UNIX_SEPARATOR);
-    }
-
-    /**
-     * Converts all separators to the Windows separator of backslash.
-     *
-     * @param path  the path to be changed, null ignored
-     * @return the updated path
-     */
-    public static String separatorsToWindows(String path) {
-        if (path == null || path.indexOf(UNIX_SEPARATOR) == -1) {
-            return path;
-        }
-        return path.replace(UNIX_SEPARATOR, WINDOWS_SEPARATOR);
-    }
-
-    /**
-     * Converts all separators to the system separator.
-     *
-     * @param path  the path to be changed, null ignored
-     * @return the updated path
-     */
-    public static String separatorsToSystem(String path) {
-        if (path == null) {
-            return null;
-        }
-        if (isSystemWindows()) {
-            return separatorsToWindows(path);
-        } else {
-            return separatorsToUnix(path);
-        }
-    }
-
-    //-----------------------------------------------------------------------
-    /**
-     * Returns the length of the filename prefix, such as <code>C:/</code> or <code>~/</code>.
-     * <p>
-     * This method will handle a file in either Unix or Windows format.
-     * <p>
-     * The prefix length includes the first slash in the full filename
-     * if applicable. Thus, it is possible that the length returned is greater
-     * than the length of the input string.
-     * <pre>
-     * Windows:
-     * a\b\c.txt           --> ""          --> relative
-     * \a\b\c.txt          --> "\"         --> current drive absolute
-     * C:a\b\c.txt         --> "C:"        --> drive relative
-     * C:\a\b\c.txt        --> "C:\"       --> absolute
-     * \\server\a\b\c.txt  --> "\\server\" --> UNC
-     *
-     * Unix:
-     * a/b/c.txt           --> ""          --> relative
-     * /a/b/c.txt          --> "/"         --> absolute
-     * ~/a/b/c.txt         --> "~/"        --> current user
-     * ~                   --> "~/"        --> current user (slash added)
-     * ~user/a/b/c.txt     --> "~user/"    --> named user
-     * ~user               --> "~user/"    --> named user (slash added)
-     * </pre>
-     * <p>
-     * The output will be the same irrespective of the machine that the code is running on.
-     * ie. both Unix and Windows prefixes are matched regardless.
-     *
-     * @param filename  the filename to find the prefix in, null returns -1
-     * @return the length of the prefix, -1 if invalid or null
-     */
-    public static int getPrefixLength(String filename) {
-        if (filename == null) {
-            return -1;
-        }
-        int len = filename.length();
-        if (len == 0) {
-            return 0;
-        }
-        char ch0 = filename.charAt(0);
-        if (ch0 == ':') {
-            return -1;
-        }
-        if (len == 1) {
-            if (ch0 == '~') {
-                return 2;  // return a length greater than the input
-            }
-            return (isSeparator(ch0) ? 1 : 0);
-        } else {
-            if (ch0 == '~') {
-                int posUnix = filename.indexOf(UNIX_SEPARATOR, 1);
-                int posWin = filename.indexOf(WINDOWS_SEPARATOR, 1);
-                if (posUnix == -1 && posWin == -1) {
-                    return len + 1;  // return a length greater than the input
-                }
-                posUnix = (posUnix == -1 ? posWin : posUnix);
-                posWin = (posWin == -1 ? posUnix : posWin);
-                return Math.min(posUnix, posWin) + 1;
-            }
-            char ch1 = filename.charAt(1);
-            if (ch1 == ':') {
-                ch0 = Character.toUpperCase(ch0);
-                if (ch0 >= 'A' && ch0 <= 'Z') {
-                    if (len == 2 || isSeparator(filename.charAt(2)) == false) {
-                        return 2;
-                    }
-                    return 3;
-                }
-                return -1;
-
-            } else if (isSeparator(ch0) && isSeparator(ch1)) {
-                int posUnix = filename.indexOf(UNIX_SEPARATOR, 2);
-                int posWin = filename.indexOf(WINDOWS_SEPARATOR, 2);
-                if ((posUnix == -1 && posWin == -1) || posUnix == 2 || posWin == 2) {
-                    return -1;
-                }
-                posUnix = (posUnix == -1 ? posWin : posUnix);
-                posWin = (posWin == -1 ? posUnix : posWin);
-                return Math.min(posUnix, posWin) + 1;
-            } else {
-                return (isSeparator(ch0) ? 1 : 0);
-            }
-        }
-    }
-
-    /**
-     * Returns the index of the last directory separator character.
-     * <p>
-     * This method will handle a file in either Unix or Windows format.
-     * The position of the last forward or backslash is returned.
-     * <p>
-     * The output will be the same irrespective of the machine that the code is running on.
-     *
-     * @param filename  the filename to find the last path separator in, null returns -1
-     * @return the index of the last separator character, or -1 if there
-     * is no such character
-     */
-    public static int indexOfLastSeparator(String filename) {
-        if (filename == null) {
-            return -1;
-        }
-        int lastUnixPos = filename.lastIndexOf(UNIX_SEPARATOR);
-        int lastWindowsPos = filename.lastIndexOf(WINDOWS_SEPARATOR);
-        return Math.max(lastUnixPos, lastWindowsPos);
-    }
-
-    /**
-     * Returns the index of the last extension separator character, which is a dot.
-     * <p>
-     * This method also checks that there is no directory separator after the last dot.
-     * To do this it uses {@link #indexOfLastSeparator(String)} which will
-     * handle a file in either Unix or Windows format.
-     * <p>
-     * The output will be the same irrespective of the machine that the code is running on.
-     *
-     * @param filename  the filename to find the last path separator in, null returns -1
-     * @return the index of the last separator character, or -1 if there
-     * is no such character
-     */
-    public static int indexOfExtension(String filename) {
-        if (filename == null) {
-            return -1;
-        }
-        int extensionPos = filename.lastIndexOf(EXTENSION_SEPARATOR);
-        int lastSeparator = indexOfLastSeparator(filename);
-        return (lastSeparator > extensionPos ? -1 : extensionPos);
-    }
-
-    //-----------------------------------------------------------------------
-    /**
-     * Gets the prefix from a full filename, such as <code>C:/</code>
-     * or <code>~/</code>.
-     * <p>
-     * This method will handle a file in either Unix or Windows format.
-     * The prefix includes the first slash in the full filename where applicable.
-     * <pre>
-     * Windows:
-     * a\b\c.txt           --> ""          --> relative
-     * \a\b\c.txt          --> "\"         --> current drive absolute
-     * C:a\b\c.txt         --> "C:"        --> drive relative
-     * C:\a\b\c.txt        --> "C:\"       --> absolute
-     * \\server\a\b\c.txt  --> "\\server\" --> UNC
-     *
-     * Unix:
-     * a/b/c.txt           --> ""          --> relative
-     * /a/b/c.txt          --> "/"         --> absolute
-     * ~/a/b/c.txt         --> "~/"        --> current user
-     * ~                   --> "~/"        --> current user (slash added)
-     * ~user/a/b/c.txt     --> "~user/"    --> named user
-     * ~user               --> "~user/"    --> named user (slash added)
-     * </pre>
-     * <p>
-     * The output will be the same irrespective of the machine that the code is running on.
-     * ie. both Unix and Windows prefixes are matched regardless.
-     *
-     * @param filename  the filename to query, null returns null
-     * @return the prefix of the file, null if invalid
-     */
-    public static String getPrefix(String filename) {
-        if (filename == null) {
-            return null;
-        }
-        int len = getPrefixLength(filename);
-        if (len < 0) {
-            return null;
-        }
-        if (len > filename.length()) {
-            return filename + UNIX_SEPARATOR;  // we know this only happens for unix
-        }
-        return filename.substring(0, len);
-    }
-
-    /**
-     * Gets the path from a full filename, which excludes the prefix.
-     * <p>
-     * This method will handle a file in either Unix or Windows format.
-     * The method is entirely text based, and returns the text before and
-     * including the last forward or backslash.
-     * <pre>
-     * C:\a\b\c.txt --> a\b\
-     * ~/a/b/c.txt  --> a/b/
-     * a.txt        --> ""
-     * a/b/c        --> a/b/
-     * a/b/c/       --> a/b/c/
-     * </pre>
-     * <p>
-     * The output will be the same irrespective of the machine that the code is running on.
-     * <p>
-     * This method drops the prefix from the result.
-     * See {@link #getFullPath(String)} for the method that retains the prefix.
-     *
-     * @param filename  the filename to query, null returns null
-     * @return the path of the file, an empty string if none exists, null if invalid
-     */
-    public static String getPath(String filename) {
-        return doGetPath(filename, 1);
-    }
-
-    /**
-     * Gets the path from a full filename, which excludes the prefix, and
-     * also excluding the final directory separator.
-     * <p>
-     * This method will handle a file in either Unix or Windows format.
-     * The method is entirely text based, and returns the text before the
-     * last forward or backslash.
-     * <pre>
-     * C:\a\b\c.txt --> a\b
-     * ~/a/b/c.txt  --> a/b
-     * a.txt        --> ""
-     * a/b/c        --> a/b
-     * a/b/c/       --> a/b/c
-     * </pre>
-     * <p>
-     * The output will be the same irrespective of the machine that the code is running on.
-     * <p>
-     * This method drops the prefix from the result.
-     * See {@link #getFullPathNoEndSeparator(String)} for the method that retains the prefix.
-     *
-     * @param filename  the filename to query, null returns null
-     * @return the path of the file, an empty string if none exists, null if invalid
-     */
-    public static String getPathNoEndSeparator(String filename) {
-        return doGetPath(filename, 0);
-    }
-
-    /**
-     * Does the work of getting the path.
-     *
-     * @param filename  the filename
-     * @param separatorAdd  0 to omit the end separator, 1 to return it
-     * @return the path
-     */
-    private static String doGetPath(String filename, int separatorAdd) {
-        if (filename == null) {
-            return null;
-        }
-        int prefix = getPrefixLength(filename);
-        if (prefix < 0) {
-            return null;
-        }
-        int index = indexOfLastSeparator(filename);
-        int endIndex = index+separatorAdd;
-        if (prefix >= filename.length() || index < 0 || prefix >= endIndex) {
-            return "";
-        }
-        return filename.substring(prefix, endIndex);
-    }
-
-    /**
-     * Gets the full path from a full filename, which is the prefix + path.
-     * <p>
-     * This method will handle a file in either Unix or Windows format.
-     * The method is entirely text based, and returns the text before and
-     * including the last forward or backslash.
-     * <pre>
-     * C:\a\b\c.txt --> C:\a\b\
-     * ~/a/b/c.txt  --> ~/a/b/
-     * a.txt        --> ""
-     * a/b/c        --> a/b/
-     * a/b/c/       --> a/b/c/
-     * C:           --> C:
-     * C:\          --> C:\
-     * ~            --> ~/
-     * ~/           --> ~/
-     * ~user        --> ~user/
-     * ~user/       --> ~user/
-     * </pre>
-     * <p>
-     * The output will be the same irrespective of the machine that the code is running on.
-     *
-     * @param filename  the filename to query, null returns null
-     * @return the path of the file, an empty string if none exists, null if invalid
-     */
-    public static String getFullPath(String filename) {
-        return doGetFullPath(filename, true);
-    }
-
-    /**
-     * Gets the full path from a full filename, which is the prefix + path,
-     * and also excluding the final directory separator.
-     * <p>
-     * This method will handle a file in either Unix or Windows format.
-     * The method is entirely text based, and returns the text before the
-     * last forward or backslash.
-     * <pre>
-     * C:\a\b\c.txt --> C:\a\b
-     * ~/a/b/c.txt  --> ~/a/b
-     * a.txt        --> ""
-     * a/b/c        --> a/b
-     * a/b/c/       --> a/b/c
-     * C:           --> C:
-     * C:\          --> C:\
-     * ~            --> ~
-     * ~/           --> ~
-     * ~user        --> ~user
-     * ~user/       --> ~user
-     * </pre>
-     * <p>
-     * The output will be the same irrespective of the machine that the code is running on.
-     *
-     * @param filename  the filename to query, null returns null
-     * @return the path of the file, an empty string if none exists, null if invalid
-     */
-    public static String getFullPathNoEndSeparator(String filename) {
-        return doGetFullPath(filename, false);
-    }
-
-    /**
-     * Does the work of getting the path.
-     *
-     * @param filename  the filename
-     * @param includeSeparator  true to include the end separator
-     * @return the path
-     */
-    private static String doGetFullPath(String filename, boolean includeSeparator) {
-        if (filename == null) {
-            return null;
-        }
-        int prefix = getPrefixLength(filename);
-        if (prefix < 0) {
-            return null;
-        }
-        if (prefix >= filename.length()) {
-            if (includeSeparator) {
-                return getPrefix(filename);  // add end slash if necessary
-            } else {
-                return filename;
-            }
-        }
-        int index = indexOfLastSeparator(filename);
-        if (index < 0) {
-            return filename.substring(0, prefix);
-        }
-        int end = index + (includeSeparator ?  1 : 0);
-        if (end == 0) {
-            end++;
-        }
-        return filename.substring(0, end);
-    }
-
-    /**
-     * Gets the name minus the path from a full filename.
-     * <p>
-     * This method will handle a file in either Unix or Windows format.
-     * The text after the last forward or backslash is returned.
-     * <pre>
-     * a/b/c.txt --> c.txt
-     * a.txt     --> a.txt
-     * a/b/c     --> c
-     * a/b/c/    --> ""
-     * </pre>
-     * <p>
-     * The output will be the same irrespective of the machine that the code is running on.
-     *
-     * @param filename  the filename to query, null returns null
-     * @return the name of the file without the path, or an empty string if none exists
-     */
-    public static String getName(String filename) {
-        if (filename == null) {
-            return null;
-        }
-        int index = indexOfLastSeparator(filename);
-        return filename.substring(index + 1);
-    }
-
-    /**
-     * Gets the base name, minus the full path and extension, from a full filename.
-     * <p>
-     * This method will handle a file in either Unix or Windows format.
-     * The text after the last forward or backslash and before the last dot is returned.
-     * <pre>
-     * a/b/c.txt --> c
-     * a.txt     --> a
-     * a/b/c     --> c
-     * a/b/c/    --> ""
-     * </pre>
-     * <p>
-     * The output will be the same irrespective of the machine that the code is running on.
-     *
-     * @param filename  the filename to query, null returns null
-     * @return the name of the file without the path, or an empty string if none exists
-     */
-    public static String getBaseName(String filename) {
-        return removeExtension(getName(filename));
-    }
-
-    /**
-     * Gets the extension of a filename.
-     * <p>
-     * This method returns the textual part of the filename after the last dot.
-     * There must be no directory separator after the dot.
-     * <pre>
-     * foo.txt      --> "txt"
-     * a/b/c.jpg    --> "jpg"
-     * a/b.txt/c    --> ""
-     * a/b/c        --> ""
-     * </pre>
-     * <p>
-     * The output will be the same irrespective of the machine that the code is running on.
-     *
-     * @param filename the filename to retrieve the extension of.
-     * @return the extension of the file or an empty string if none exists or <code>null</code>
-     * if the filename is <code>null</code>.
-     */
-    public static String getExtension(String filename) {
-        if (filename == null) {
-            return null;
-        }
-        int index = indexOfExtension(filename);
-        if (index == -1) {
-            return "";
-        } else {
-            return filename.substring(index + 1);
-        }
-    }
-
-    //-----------------------------------------------------------------------
-    /**
-     * Removes the extension from a filename.
-     * <p>
-     * This method returns the textual part of the filename before the last dot.
-     * There must be no directory separator after the dot.
-     * <pre>
-     * foo.txt    --> foo
-     * a\b\c.jpg  --> a\b\c
-     * a\b\c      --> a\b\c
-     * a.b\c      --> a.b\c
-     * </pre>
-     * <p>
-     * The output will be the same irrespective of the machine that the code is running on.
-     *
-     * @param filename  the filename to query, null returns null
-     * @return the filename minus the extension
-     */
-    public static String removeExtension(String filename) {
-        if (filename == null) {
-            return null;
-        }
-        int index = indexOfExtension(filename);
-        if (index == -1) {
-            return filename;
-        } else {
-            return filename.substring(0, index);
-        }
-    }
-
-    //-----------------------------------------------------------------------
-    /**
-     * Checks whether two filenames are equal exactly.
-     * <p>
-     * No processing is performed on the filenames other than comparison,
-     * thus this is merely a null-safe case-sensitive equals.
-     *
-     * @param filename1  the first filename to query, may be null
-     * @param filename2  the second filename to query, may be null
-     * @return true if the filenames are equal, null equals null
-     * @see IOCase#SENSITIVE
-     */
-    public static boolean equals(String filename1, String filename2) {
-        return equals(filename1, filename2, false, IOCase.SENSITIVE);
-    }
-
-    /**
-     * Checks whether two filenames are equal using the case rules of the system.
-     * <p>
-     * No processing is performed on the filenames other than comparison.
-     * The check is case-sensitive on Unix and case-insensitive on Windows.
-     *
-     * @param filename1  the first filename to query, may be null
-     * @param filename2  the second filename to query, may be null
-     * @return true if the filenames are equal, null equals null
-     * @see IOCase#SYSTEM
-     */
-    public static boolean equalsOnSystem(String filename1, String filename2) {
-        return equals(filename1, filename2, false, IOCase.SYSTEM);
-    }
-
-    //-----------------------------------------------------------------------
-    /**
-     * Checks whether two filenames are equal after both have been normalized.
-     * <p>
-     * Both filenames are first passed to {@link #normalize(String)}.
-     * The check is then performed in a case-sensitive manner.
-     *
-     * @param filename1  the first filename to query, may be null
-     * @param filename2  the second filename to query, may be null
-     * @return true if the filenames are equal, null equals null
-     * @see IOCase#SENSITIVE
-     */
-    public static boolean equalsNormalized(String filename1, String filename2) {
-        return equals(filename1, filename2, true, IOCase.SENSITIVE);
-    }
-
-    /**
-     * Checks whether two filenames are equal after both have been normalized
-     * and using the case rules of the system.
-     * <p>
-     * Both filenames are first passed to {@link #normalize(String)}.
-     * The check is then performed case-sensitive on Unix and
-     * case-insensitive on Windows.
-     *
-     * @param filename1  the first filename to query, may be null
-     * @param filename2  the second filename to query, may be null
-     * @return true if the filenames are equal, null equals null
-     * @see IOCase#SYSTEM
-     */
-    public static boolean equalsNormalizedOnSystem(String filename1, String filename2) {
-        return equals(filename1, filename2, true, IOCase.SYSTEM);
-    }
-
-    /**
-     * Checks whether two filenames are equal, optionally normalizing and providing
-     * control over the case-sensitivity.
-     *
-     * @param filename1  the first filename to query, may be null
-     * @param filename2  the second filename to query, may be null
-     * @param normalized  whether to normalize the filenames
-     * @param caseSensitivity  what case sensitivity rule to use, null means case-sensitive
-     * @return true if the filenames are equal, null equals null
-     * @since Commons IO 1.3
-     */
-    public static boolean equals(
-            String filename1, String filename2,
-            boolean normalized, IOCase caseSensitivity) {
-
-        if (filename1 == null || filename2 == null) {
-            return (filename1 == null && filename2 == null);
-        }
-        if (normalized) {
-            filename1 = normalize(filename1);
-            filename2 = normalize(filename2);
-            if (filename1 == null || filename2 == null) {
-                throw new NullPointerException(
-                    "Error normalizing one or both of the file names");
-            }
-        }
-        if (caseSensitivity == null) {
-            caseSensitivity = IOCase.SENSITIVE;
-        }
-        return caseSensitivity.checkEquals(filename1, filename2);
-    }
-
-    //-----------------------------------------------------------------------
-    /**
-     * Checks whether the extension of the filename is that specified.
-     * <p>
-     * This method obtains the extension as the textual part of the filename
-     * after the last dot. There must be no directory separator after the dot.
-     * The extension check is case-sensitive on all platforms.
-     *
-     * @param filename  the filename to query, null returns false
-     * @param extension  the extension to check for, null or empty checks for no extension
-     * @return true if the filename has the specified extension
-     */
-    public static boolean isExtension(String filename, String extension) {
-        if (filename == null) {
-            return false;
-        }
-        if (extension == null || extension.length() == 0) {
-            return (indexOfExtension(filename) == -1);
-        }
-        String fileExt = getExtension(filename);
-        return fileExt.equals(extension);
-    }
-
-    /**
-     * Checks whether the extension of the filename is one of those specified.
-     * <p>
-     * This method obtains the extension as the textual part of the filename
-     * after the last dot. There must be no directory separator after the dot.
-     * The extension check is case-sensitive on all platforms.
-     *
-     * @param filename  the filename to query, null returns false
-     * @param extensions  the extensions to check for, null checks for no extension
-     * @return true if the filename is one of the extensions
-     */
-    public static boolean isExtension(String filename, String[] extensions) {
-        if (filename == null) {
-            return false;
-        }
-        if (extensions == null || extensions.length == 0) {
-            return (indexOfExtension(filename) == -1);
-        }
-        String fileExt = getExtension(filename);
-        for (String extension : extensions) {
-            if (fileExt.equals(extension)) {
-                return true;
-            }
-        }
-        return false;
-    }
-
-    /**
-     * Checks whether the extension of the filename is one of those specified.
-     * <p>
-     * This method obtains the extension as the textual part of the filename
-     * after the last dot. There must be no directory separator after the dot.
-     * The extension check is case-sensitive on all platforms.
-     *
-     * @param filename  the filename to query, null returns false
-     * @param extensions  the extensions to check for, null checks for no extension
-     * @return true if the filename is one of the extensions
-     */
-    public static boolean isExtension(String filename, Collection<String> extensions) {
-        if (filename == null) {
-            return false;
-        }
-        if (extensions == null || extensions.isEmpty()) {
-            return (indexOfExtension(filename) == -1);
-        }
-        String fileExt = getExtension(filename);
-        for (String extension : extensions) {
-            if (fileExt.equals(extension)) {
-                return true;
-            }
-        }
-        return false;
-    }
-
-    //-----------------------------------------------------------------------
-    /**
-     * Checks a filename to see if it matches the specified wildcard matcher,
-     * always testing case-sensitive.
-     * <p>
-     * The wildcard matcher uses the characters '?' and '*' to represent a
-     * single or multiple (zero or more) wildcard characters.
-     * This is the same as often found on Dos/Unix command lines.
-     * The check is case-sensitive always.
-     * <pre>
-     * wildcardMatch("c.txt", "*.txt")      --> true
-     * wildcardMatch("c.txt", "*.jpg")      --> false
-     * wildcardMatch("a/b/c.txt", "a/b/*")  --> true
-     * wildcardMatch("c.txt", "*.???")      --> true
-     * wildcardMatch("c.txt", "*.????")     --> false
-     * </pre>
-     * N.B. the sequence "*?" does not work properly at present in match strings.
-     *
-     * @param filename  the filename to match on
-     * @param wildcardMatcher  the wildcard string to match against
-     * @return true if the filename matches the wilcard string
-     * @see IOCase#SENSITIVE
-     */
-    public static boolean wildcardMatch(String filename, String wildcardMatcher) {
-        return wildcardMatch(filename, wildcardMatcher, IOCase.SENSITIVE);
-    }
-
-    /**
-     * Checks a filename to see if it matches the specified wildcard matcher
-     * using the case rules of the system.
-     * <p>
-     * The wildcard matcher uses the characters '?' and '*' to represent a
-     * single or multiple (zero or more) wildcard characters.
-     * This is the same as often found on Dos/Unix command lines.
-     * The check is case-sensitive on Unix and case-insensitive on Windows.
-     * <pre>
-     * wildcardMatch("c.txt", "*.txt")      --> true
-     * wildcardMatch("c.txt", "*.jpg")      --> false
-     * wildcardMatch("a/b/c.txt", "a/b/*")  --> true
-     * wildcardMatch("c.txt", "*.???")      --> true
-     * wildcardMatch("c.txt", "*.????")     --> false
-     * </pre>
-     * N.B. the sequence "*?" does not work properly at present in match strings.
-     *
-     * @param filename  the filename to match on
-     * @param wildcardMatcher  the wildcard string to match against
-     * @return true if the filename matches the wilcard string
-     * @see IOCase#SYSTEM
-     */
-    public static boolean wildcardMatchOnSystem(String filename, String wildcardMatcher) {
-        return wildcardMatch(filename, wildcardMatcher, IOCase.SYSTEM);
-    }
-
-    /**
-     * Checks a filename to see if it matches the specified wildcard matcher
-     * allowing control over case-sensitivity.
-     * <p>
-     * The wildcard matcher uses the characters '?' and '*' to represent a
-     * single or multiple (zero or more) wildcard characters.
-     * N.B. the sequence "*?" does not work properly at present in match strings.
-     *
-     * @param filename  the filename to match on
-     * @param wildcardMatcher  the wildcard string to match against
-     * @param caseSensitivity  what case sensitivity rule to use, null means case-sensitive
-     * @return true if the filename matches the wilcard string
-     * @since Commons IO 1.3
-     */
-    public static boolean wildcardMatch(String filename, String wildcardMatcher, IOCase caseSensitivity) {
-        if (filename == null && wildcardMatcher == null) {
-            return true;
-        }
-        if (filename == null || wildcardMatcher == null) {
-            return false;
-        }
-        if (caseSensitivity == null) {
-            caseSensitivity = IOCase.SENSITIVE;
-        }
-        String[] wcs = splitOnTokens(wildcardMatcher);
-        boolean anyChars = false;
-        int textIdx = 0;
-        int wcsIdx = 0;
-        Stack<int[]> backtrack = new Stack<int[]>();
-
-        // loop around a backtrack stack, to handle complex * matching
-        do {
-            if (backtrack.size() > 0) {
-                int[] array = backtrack.pop();
-                wcsIdx = array[0];
-                textIdx = array[1];
-                anyChars = true;
-            }
-
-            // loop whilst tokens and text left to process
-            while (wcsIdx < wcs.length) {
-
-                if (wcs[wcsIdx].equals("?")) {
-                    // ? so move to next text char
-                    textIdx++;
-                    if (textIdx > filename.length()) {
-                        break;
-                    }
-                    anyChars = false;
-
-                } else if (wcs[wcsIdx].equals("*")) {
-                    // set any chars status
-                    anyChars = true;
-                    if (wcsIdx == wcs.length - 1) {
-                        textIdx = filename.length();
-                    }
-
-                } else {
-                    // matching text token
-                    if (anyChars) {
-                        // any chars then try to locate text token
-                        textIdx = caseSensitivity.checkIndexOf(filename, textIdx, wcs[wcsIdx]);
-                        if (textIdx == -1) {
-                            // token not found
-                            break;
-                        }
-                        int repeat = caseSensitivity.checkIndexOf(filename, textIdx + 1, wcs[wcsIdx]);
-                        if (repeat >= 0) {
-                            backtrack.push(new int[] {wcsIdx, repeat});
-                        }
-                    } else {
-                        // matching from current position
-                        if (!caseSensitivity.checkRegionMatches(filename, textIdx, wcs[wcsIdx])) {
-                            // couldnt match token
-                            break;
-                        }
-                    }
-
-                    // matched text token, move text index to end of matched token
-                    textIdx += wcs[wcsIdx].length();
-                    anyChars = false;
-                }
-
-                wcsIdx++;
-            }
-
-            // full match
-            if (wcsIdx == wcs.length && textIdx == filename.length()) {
-                return true;
-            }
-
-        } while (backtrack.size() > 0);
-
-        return false;
-    }
-
-    /**
-     * Splits a string into a number of tokens.
-     * The text is split by '?' and '*'.
-     * Where multiple '*' occur consecutively they are collapsed into a single '*'.
-     *
-     * @param text  the text to split
-     * @return the array of tokens, never null
-     */
-    static String[] splitOnTokens(String text) {
-        // used by wildcardMatch
-        // package level so a unit test may run on this
-
-        if (text.indexOf('?') == -1 && text.indexOf('*') == -1) {
-            return new String[] { text };
-        }
-
-        char[] array = text.toCharArray();
-        ArrayList<String> list = new ArrayList<String>();
-        StringBuilder buffer = new StringBuilder();
-        for (int i = 0; i < array.length; i++) {
-            if (array[i] == '?' || array[i] == '*') {
-                if (buffer.length() != 0) {
-                    list.add(buffer.toString());
-                    buffer.setLength(0);
-                }
-                if (array[i] == '?') {
-                    list.add("?");
-                } else if (list.size() == 0 ||
-                        (i > 0 && list.get(list.size() - 1).equals("*") == false)) {
-                    list.add("*");
-                }
-            } else {
-                buffer.append(array[i]);
-            }
-        }
-        if (buffer.length() != 0) {
-            list.add(buffer.toString());
-        }
-
-        return list.toArray( new String[ list.size() ] );
-    }
-
-}
diff --git a/extensions/box2d-editor/editor/src/org/apache/commons/io/IOCase.java b/extensions/box2d-editor/editor/src/org/apache/commons/io/IOCase.java
deleted file mode 100644
index a759b78..0000000
--- a/extensions/box2d-editor/editor/src/org/apache/commons/io/IOCase.java
+++ /dev/null
@@ -1,257 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.commons.io;
-
-import java.io.Serializable;
-
-/**
- * Enumeration of IO case sensitivity.
- * <p>
- * Different filing systems have different rules for case-sensitivity.
- * Windows is case-insensitive, Unix is case-sensitive.
- * <p>
- * This class captures that difference, providing an enumeration to
- * control how filename comparisons should be performed. It also provides
- * methods that use the enumeration to perform comparisons.
- * <p>
- * Wherever possible, you should use the <code>check</code> methods in this
- * class to compare filenames.
- *
- * @author Stephen Colebourne
- * @version $Id: IOCase.java 1003647 2010-10-01 20:53:59Z niallp $
- * @since Commons IO 1.3
- */
-public final class IOCase implements Serializable {
-
-    /**
-     * The constant for case sensitive regardless of operating system.
-     */
-    public static final IOCase SENSITIVE = new IOCase("Sensitive", true);
-
-    /**
-     * The constant for case insensitive regardless of operating system.
-     */
-    public static final IOCase INSENSITIVE = new IOCase("Insensitive", false);
-
-    /**
-     * The constant for case sensitivity determined by the current operating system.
-     * Windows is case-insensitive when comparing filenames, Unix is case-sensitive.
-     * <p>
-     * <strong>Note:</strong> This only caters for Windows and Unix. Other operating
-     * systems (e.g. OSX and OpenVMS) are treated as case sensitive if they use the
-     * Unix file separator and case-insensitive if they use the Windows file separator
-     * (see {@link java.io.File#separatorChar}).
-     * <p>
-     * If you derialize this constant of Windows, and deserialize on Unix, or vice
-     * versa, then the value of the case-sensitivity flag will change.
-     */
-    public static final IOCase SYSTEM = new IOCase("System", !FilenameUtils.isSystemWindows());
-
-    /** Serialization version. */
-    private static final long serialVersionUID = -6343169151696340687L;
-
-    /** The enumeration name. */
-    private final String name;
-
-    /** The sensitivity flag. */
-    private final transient boolean sensitive;
-
-    //-----------------------------------------------------------------------
-    /**
-     * Factory method to create an IOCase from a name.
-     *
-     * @param name  the name to find
-     * @return the IOCase object
-     * @throws IllegalArgumentException if the name is invalid
-     */
-    public static IOCase forName(String name) {
-        if (IOCase.SENSITIVE.name.equals(name)){
-            return IOCase.SENSITIVE;
-        }
-        if (IOCase.INSENSITIVE.name.equals(name)){
-            return IOCase.INSENSITIVE;
-        }
-        if (IOCase.SYSTEM.name.equals(name)){
-            return IOCase.SYSTEM;
-        }
-        throw new IllegalArgumentException("Invalid IOCase name: " + name);
-    }
-
-    //-----------------------------------------------------------------------
-    /**
-     * Private constructor.
-     *
-     * @param name  the name
-     * @param sensitive  the sensitivity
-     */
-    private IOCase(String name, boolean sensitive) {
-        this.name = name;
-        this.sensitive = sensitive;
-    }
-
-    /**
-     * Replaces the enumeration from the stream with a real one.
-     * This ensures that the correct flag is set for SYSTEM.
-     *
-     * @return the resolved object
-     */
-    private Object readResolve() {
-        return forName(name);
-    }
-
-    //-----------------------------------------------------------------------
-    /**
-     * Gets the name of the constant.
-     *
-     * @return the name of the constant
-     */
-    public String getName() {
-        return name;
-    }
-
-    /**
-     * Does the object represent case sensitive comparison.
-     *
-     * @return true if case sensitive
-     */
-    public boolean isCaseSensitive() {
-        return sensitive;
-    }
-
-    //-----------------------------------------------------------------------
-    /**
-     * Compares two strings using the case-sensitivity rule.
-     * <p>
-     * This method mimics {@link String#compareTo} but takes case-sensitivity
-     * into account.
-     *
-     * @param str1  the first string to compare, not null
-     * @param str2  the second string to compare, not null
-     * @return true if equal using the case rules
-     * @throws NullPointerException if either string is null
-     */
-    public int checkCompareTo(String str1, String str2) {
-        if (str1 == null || str2 == null) {
-            throw new NullPointerException("The strings must not be null");
-        }
-        return sensitive ? str1.compareTo(str2) : str1.compareToIgnoreCase(str2);
-    }
-
-    /**
-     * Compares two strings using the case-sensitivity rule.
-     * <p>
-     * This method mimics {@link String#equals} but takes case-sensitivity
-     * into account.
-     *
-     * @param str1  the first string to compare, not null
-     * @param str2  the second string to compare, not null
-     * @return true if equal using the case rules
-     * @throws NullPointerException if either string is null
-     */
-    public boolean checkEquals(String str1, String str2) {
-        if (str1 == null || str2 == null) {
-            throw new NullPointerException("The strings must not be null");
-        }
-        return sensitive ? str1.equals(str2) : str1.equalsIgnoreCase(str2);
-    }
-
-    /**
-     * Checks if one string starts with another using the case-sensitivity rule.
-     * <p>
-     * This method mimics {@link String#startsWith(String)} but takes case-sensitivity
-     * into account.
-     *
-     * @param str  the string to check, not null
-     * @param start  the start to compare against, not null
-     * @return true if equal using the case rules
-     * @throws NullPointerException if either string is null
-     */
-    public boolean checkStartsWith(String str, String start) {
-        return str.regionMatches(!sensitive, 0, start, 0, start.length());
-    }
-
-    /**
-     * Checks if one string ends with another using the case-sensitivity rule.
-     * <p>
-     * This method mimics {@link String#endsWith} but takes case-sensitivity
-     * into account.
-     *
-     * @param str  the string to check, not null
-     * @param end  the end to compare against, not null
-     * @return true if equal using the case rules
-     * @throws NullPointerException if either string is null
-     */
-    public boolean checkEndsWith(String str, String end) {
-        int endLen = end.length();
-        return str.regionMatches(!sensitive, str.length() - endLen, end, 0, endLen);
-    }
-
-    /**
-     * Checks if one string contains another starting at a specific index using the
-     * case-sensitivity rule.
-     * <p>
-     * This method mimics parts of {@link String#indexOf(String, int)}
-     * but takes case-sensitivity into account.
-     *
-     * @param str  the string to check, not null
-     * @param strStartIndex  the index to start at in str
-     * @param search  the start to search for, not null
-     * @return the first index of the search String,
-     *  -1 if no match or <code>null</code> string input
-     * @throws NullPointerException if either string is null
-     * @since Commons IO 2.0
-     */
-    public int checkIndexOf(String str, int strStartIndex, String search) {
-        int endIndex = str.length() - search.length();
-        if (endIndex >= strStartIndex) {
-            for (int i = strStartIndex; i <= endIndex; i++) {
-                if (checkRegionMatches(str, i, search)) {
-                    return i;
-                }
-            }
-        }
-        return -1;
-    }
-
-    /**
-     * Checks if one string contains another at a specific index using the case-sensitivity rule.
-     * <p>
-     * This method mimics parts of {@link String#regionMatches(boolean, int, String, int, int)}
-     * but takes case-sensitivity into account.
-     *
-     * @param str  the string to check, not null
-     * @param strStartIndex  the index to start at in str
-     * @param search  the start to search for, not null
-     * @return true if equal using the case rules
-     * @throws NullPointerException if either string is null
-     */
-    public boolean checkRegionMatches(String str, int strStartIndex, String search) {
-        return str.regionMatches(!sensitive, strStartIndex, search, 0, search.length());
-    }
-
-    //-----------------------------------------------------------------------
-    /**
-     * Gets a string describing the sensitivity.
-     *
-     * @return a string describing the sensitivity
-     */
-    @Override
-    public String toString() {
-        return name;
-    }
-
-}
diff --git a/extensions/box2d-editor/fixtureatlas-test/data/bodies.bin b/extensions/box2d-editor/fixtureatlas-test/data/bodies.bin
deleted file mode 100644
index 60cb507..0000000
Binary files a/extensions/box2d-editor/fixtureatlas-test/data/bodies.bin and /dev/null differ
diff --git a/extensions/box2d-editor/fixtureatlas-test/data/gfx/ball.png b/extensions/box2d-editor/fixtureatlas-test/data/gfx/ball.png
deleted file mode 100644
index 940e742..0000000
Binary files a/extensions/box2d-editor/fixtureatlas-test/data/gfx/ball.png and /dev/null differ
diff --git a/extensions/box2d-editor/fixtureatlas-test/data/gfx/vial.png b/extensions/box2d-editor/fixtureatlas-test/data/gfx/vial.png
deleted file mode 100644
index 39b38f6..0000000
Binary files a/extensions/box2d-editor/fixtureatlas-test/data/gfx/vial.png and /dev/null differ
diff --git a/extensions/box2d-editor/fixtureatlas-test/src/com/badlogic/gdx/box2deditor/App.java b/extensions/box2d-editor/fixtureatlas-test/src/com/badlogic/gdx/box2deditor/App.java
deleted file mode 100644
index 076e64a..0000000
--- a/extensions/box2d-editor/fixtureatlas-test/src/com/badlogic/gdx/box2deditor/App.java
+++ /dev/null
@@ -1,248 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-package com.badlogic.gdx.box2deditor;
-
-import com.badlogic.gdx.box2deditor.FixtureAtlas;
-import com.badlogic.gdx.ApplicationListener;
-import com.badlogic.gdx.Gdx;
-import com.badlogic.gdx.InputAdapter;
-import com.badlogic.gdx.InputProcessor;
-import com.badlogic.gdx.backends.lwjgl.LwjglApplication;
-import com.badlogic.gdx.graphics.Color;
-import com.badlogic.gdx.graphics.GL10;
-import com.badlogic.gdx.graphics.OrthographicCamera;
-import com.badlogic.gdx.graphics.Texture;
-import com.badlogic.gdx.graphics.Texture.TextureFilter;
-import com.badlogic.gdx.graphics.g2d.BitmapFont;
-import com.badlogic.gdx.graphics.g2d.Sprite;
-import com.badlogic.gdx.graphics.g2d.SpriteBatch;
-import com.badlogic.gdx.math.MathUtils;
-import com.badlogic.gdx.math.Vector2;
-import com.badlogic.gdx.physics.box2d.Body;
-import com.badlogic.gdx.physics.box2d.BodyDef;
-import com.badlogic.gdx.physics.box2d.BodyDef.BodyType;
-import com.badlogic.gdx.physics.box2d.CircleShape;
-import com.badlogic.gdx.physics.box2d.World;
-import java.util.Random;
-
-public class App implements ApplicationListener {
-
-	// -------------------------------------------------------------------------
-	// Launcher
-	// -------------------------------------------------------------------------
-
-	public static void main(final String[] args) {
-		new LwjglApplication(new App(), "", 500, 750, false);
-	}
-
-	// -------------------------------------------------------------------------
-	// Static fields
-	// -------------------------------------------------------------------------
-	
-	private static final Vector2 WORLD_SIZE = new Vector2(10, 15);
-	private static final Vector2 VIAL_SIZE = new Vector2(8, 8);
-	private static final Vector2 BALL_SIZE = new Vector2(0.3f, 0.3f);
-	private static final Vector2 VIAL_POS = new Vector2(-4, -7);
-
-	private static final int MAX_BALL_COUNT = 150;
-
-	// -------------------------------------------------------------------------
-	// Public API
-	// -------------------------------------------------------------------------
-	
-	private SpriteBatch spriteBatch;
-	private BitmapFont font;
-	private OrthographicCamera camera;
-
-	private World world;
-
-	private Body vialModel;
-	private Texture vialTexture;
-	private Sprite vialSprite;
-	
-	private Body[] ballModels;
-	private Texture ballTexture;
-	private Sprite[] ballSprites;
-
-	@Override
-	public void create() {
-		Gdx.graphics.setVSync(true);
-		Gdx.input.setInputProcessor(inputProcessor);
-
-		spriteBatch = new SpriteBatch();
-		font = new BitmapFont();
-		font.setColor(Color.BLACK);
-		camera = new OrthographicCamera(WORLD_SIZE.x, WORLD_SIZE.y);
-		camera.position.set(0, 0, 0);
-		camera.update();
-
-		world = new World(new Vector2(0, -5), true);
-
-		createVialModel();
-		createBallModels();
-		createSprites();
-	}
-
-	private void createVialModel() {
-		// Create a FixtureAtlas which will automatically load the fixture
-		// list for every body defined with the editor.
-		FixtureAtlas atlas = new FixtureAtlas(Gdx.files.internal("data/bodies.bin"));
-
-		// Creation of the vial model:
-		// 1. Create a BodyDef, as usual.
-		BodyDef vialBodyDef = new BodyDef();
-		vialBodyDef.position.set(VIAL_POS);
-		vialBodyDef.type = BodyType.StaticBody;
-
-		// 2. Create a Body from the BodyDef, as usual.
-		vialModel = world.createBody(vialBodyDef);
-
-		// 3. Create its fixtures automatically by using the FixtureAtlas. Note
-		//    that the fixture name must exactly match the one used in the
-		//    editor. It has no real relationship with the asset used itself.
-		atlas.createFixtures(vialModel, "gfx\\test01.png", VIAL_SIZE.x, VIAL_SIZE.y);
-	}
-
-	private void createBallModels() {
-		BodyDef ballBodyDef = new BodyDef();
-		ballBodyDef.type = BodyType.DynamicBody;
-
-		CircleShape ballShape = new CircleShape();
-		ballShape.setRadius(BALL_SIZE.x/2);
-
-		Random rand = new Random();
-
-		ballModels = new Body[MAX_BALL_COUNT];
-		for (int i=0; i<MAX_BALL_COUNT; i++) {
-			float tx = rand.nextFloat() * 1.0f - 0.5f;
-			float ty = rand.nextFloat() * WORLD_SIZE.y*4 + WORLD_SIZE.y/2 + BALL_SIZE.y;
-			float angle = rand.nextFloat() * MathUtils.PI * 2;
-			ballBodyDef.position.set(tx, ty);
-			ballBodyDef.angle = angle;
-			ballModels[i] = world.createBody(ballBodyDef);
-			ballModels[i].createFixture(ballShape, 1);
-		}
-	}
-
-	private void createSprites() {
-		// Define the Sprite, as usual.
-		vialTexture = new Texture(Gdx.files.internal("data/gfx/vial.png"));
-		vialTexture.setFilter(TextureFilter.Linear, TextureFilter.Linear);
-		vialSprite = new Sprite(vialTexture);
-		vialSprite.setSize(VIAL_SIZE.x, VIAL_SIZE.y);
-
-		// "vialModel.getPosition()" returns the reference point, which is the
-		// bottom left corner of the asset used for each body defined with the
-		// FixtureAtlas.
-		Vector2 vialPos = vialModel.getPosition();
-		vialSprite.setPosition(vialPos.x, vialPos.y);
-
-		ballTexture = new Texture(Gdx.files.internal("data/gfx/ball.png"));
-		ballTexture.setFilter(TextureFilter.Linear, TextureFilter.Linear);
-
-		ballSprites = new Sprite[MAX_BALL_COUNT];
-		for (int i=0; i<MAX_BALL_COUNT; i++) {
-			ballSprites[i] = new Sprite(ballTexture);
-			ballSprites[i].setSize(BALL_SIZE.x, BALL_SIZE.y);
-			ballSprites[i].setOrigin(BALL_SIZE.x/2, BALL_SIZE.y/2);
-		}
-	}
-
-	@Override
-	public void dispose() {
-		vialTexture.dispose();
-		ballTexture.dispose();
-		spriteBatch.dispose();
-		font.dispose();
-		world.dispose();
-	}
-
-	@Override
-	public void render() {
-		// Update
-		world.step(1 / 60f, 10, 10);
-		for (int i=0; i<MAX_BALL_COUNT; i++) {
-			Vector2 pos = ballModels[i].getPosition().sub(
-				ballSprites[i].getWidth()/2,
-				ballSprites[i].getHeight()/2);
-			float angleDeg = ballModels[i].getAngle() * MathUtils.radiansToDegrees;
-
-			ballSprites[i].setPosition(pos.x, pos.y);
-			ballSprites[i].setRotation(angleDeg);
-		}
-
-		// Render
-		GL10 gl = Gdx.gl10;
-		gl.glClearColor(1, 1, 1, 1);
-		gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
-
-		spriteBatch.setProjectionMatrix(camera.combined);
-		spriteBatch.begin();
-		vialSprite.draw(spriteBatch);
-		for (int i=0; i<MAX_BALL_COUNT; i++)
-			ballSprites[i].draw(spriteBatch);
-		spriteBatch.end();
-
-		spriteBatch.getProjectionMatrix().setToOrtho2D(0, 0,
-			Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
-		spriteBatch.begin();
-		font.draw(spriteBatch, "Touch the screen to restart", 5, 25);
-		spriteBatch.end();
-	}
-
-	@Override
-	public void resize(int i, int i1) {
-	}
-
-	@Override
-	public void pause() {
-	}
-
-	@Override
-	public void resume() {
-
-	}
-	
-	// -------------------------------------------------------------------------
-	// Internals
-	// -------------------------------------------------------------------------
-
-	private void restart() {
-		Random rand = new Random();
-		for (int i=0; i<MAX_BALL_COUNT; i++) {
-			float tx = rand.nextFloat() * 1.0f - 0.5f;
-			float ty = rand.nextFloat() * WORLD_SIZE.y*4 + WORLD_SIZE.y/2 + BALL_SIZE.y;
-			float angle = rand.nextFloat() * MathUtils.PI * 2;
-
-			ballModels[i].setLinearVelocity(0, 0);
-			ballModels[i].setAngularVelocity(0);
-			ballModels[i].setTransform(tx, ty, angle);
-			ballModels[i].setAwake(true);
-		}
-	}
-
-	// -------------------------------------------------------------------------
-	// Inputs
-	// -------------------------------------------------------------------------
-
-	private final InputProcessor inputProcessor = new InputAdapter() {
-		@Override
-		public boolean touchDown(int x, int y, int pointer, int button) {
-			restart();
-			return false;
-		}
-	};
-}
\ No newline at end of file
diff --git a/extensions/box2d-editor/fixtureatlas/src/com/badlogic/gdx/box2deditor/FixtureAtlas.java b/extensions/box2d-editor/fixtureatlas/src/com/badlogic/gdx/box2deditor/FixtureAtlas.java
deleted file mode 100644
index 8e29bda..0000000
--- a/extensions/box2d-editor/fixtureatlas/src/com/badlogic/gdx/box2deditor/FixtureAtlas.java
+++ /dev/null
@@ -1,212 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-package com.badlogic.gdx.box2deditor;
-
-import com.badlogic.gdx.files.FileHandle;
-import com.badlogic.gdx.math.Vector2;
-import com.badlogic.gdx.physics.box2d.Body;
-import com.badlogic.gdx.physics.box2d.FixtureDef;
-import com.badlogic.gdx.physics.box2d.PolygonShape;
-import java.io.DataInputStream;
-import java.io.IOException;
-import java.io.InputStream;
-import java.util.HashMap;
-import java.util.Map;
-
-/**
- * Loads shapes (fixture sets) defined with the Box2D Editor and applies them
- * to bodies. Has to be disposed to free some resources.
- *
- * @author Aurelien Ribon (aurelien.ribon@gmail.com)
- */
-public class FixtureAtlas {
-	private static final FixtureDef DEFAULT_FIXTURE = new FixtureDef();
-
-	private final Map<String, BodyModel> bodyMap = new HashMap<String, BodyModel>();
-	private final PolygonShape shape = new PolygonShape();
-
-	/**
-	 * Creates a new fixture atlas from the selected file. This file has to
-	 * exist and to be valid.
-	 * @param shapeFile A file created with the editor.
-	 */
-	public FixtureAtlas(FileHandle shapeFile) {
-		if (shapeFile == null)
-			throw new NullPointerException("shapeFile is null");
-
-		importFromFile(shapeFile.read());
-	}
-
-	public void dispose() {
-		bodyMap.clear();
-		shape.dispose();
-	}
-
-	// -------------------------------------------------------------------------
-	// Public API
-	// -------------------------------------------------------------------------
-
-	/**
-	 * Creates and applies the fixtures defined in the editor. The name
-	 * parameter is used to retrieve the shape from the loaded binary file.
-	 * Therefore, it _HAS_ to be the exact same name as the one that appeared.
-	 * in the editor.
-	 * <br/><br/>
-	 *
-	 * WARNING: The body reference point is supposed to be the bottom left
-	 * corner. As a result, calling "getPosition()" on the body will return
-	 * its bottom left corner. This is useful to draw a Sprite directly by
-	 * setting its position to the body position.
-	 * <br/><br/>
-	 *
-	 * Also, saved shapes are normalized. Thus, you need to provide the desired
-	 * width and height of your body for them to scale according to your needs.
-	 *
-	 * @param body A box2d Body, previously created.
-	 * @param name The name of the shape you want to load.
-	 * @param width The desired width of the body.
-	 * @param height The desired height of the body.
-	 */
-	public void createFixtures(Body body, String name, float width, float height) {
-		createFixtures(body, name, width, height, null);
-	}
-
-	/**
-	 * Creates and applies the fixtures defined in the editor. The name
-	 * parameter is used to retrieve the shape from the loaded binary file.
-	 * Therefore, it _HAS_ to be the exact same name as the one that appeared.
-	 * in the editor.
-	 * <br/><br/>
-	 *
-	 * WARNING: The body reference point is supposed to be the bottom left
-	 * corner. As a result, calling "getPosition()" on the body will return
-	 * its bottom left corner. This is useful to draw a Sprite directly by
-	 * setting its position to the body position.
-	 * <br/><br/>
-	 *
-	 * Also, saved shapes are normalized. Thus, you need to provide the desired
-	 * width and height of your body for them to scale according to your needs.
-	 * <br/><br/>
-	 *
-	 * Moreover, you can submit a custom FixtureDef object. Its parameters will
-	 * be applied to every fixture applied to the body by this method.
-	 *
-	 * @param body A box2d Body, previously created.
-	 * @param name The name of the shape you want to load.
-	 * @param width The desired width of the body.
-	 * @param height The desired height of the body.
-	 * @param params Custom fixture parameters to apply.
-	 */
-	public void createFixtures(Body body, String name, float width, float height, FixtureDef params) {
-		BodyModel bm = bodyMap.get(name);
-		if (bm == null)
-			throw new RuntimeException(name + " does not exist in the fixture list.");
-
-		Vector2[][] polygons = bm.getPolygons(width, height);
-		if (polygons == null)
-			throw new RuntimeException(name + " does not declare any polygon. "
-				+ "Should not happen. Is your shape file corrupted ?");
-
-		for (Vector2[] polygon : polygons) {
-			shape.set(polygon);
-			FixtureDef fd = params == null ? DEFAULT_FIXTURE : params;
-			fd.shape = shape;
-			body.createFixture(fd);
-		}
-	}
-
-	// -------------------------------------------------------------------------
-	// Import
-	// -------------------------------------------------------------------------
-
-	private void importFromFile(InputStream stream) {
-		DataInputStream is = null;
-
-		try {
-			is = new DataInputStream(stream);
-			while (is.available() > 0) {
-				String name = is.readUTF();
-				Vector2[][] points = readVecss(is);
-				Vector2[][] polygons = readVecss(is);
-
-				BodyModel bm = new BodyModel(polygons);
-				bodyMap.put(name, bm);
-			}
-
-		} catch (IOException ex) {
-			throw new RuntimeException(ex.getMessage());
-
-		} finally {
-			if (is != null)
-				try { is.close(); } catch (IOException ex) {}
-		}
-	}
-	// -------------------------------------------------------------------------
-
-	private Vector2 readVec(DataInputStream is) throws IOException {
-		Vector2 v = new Vector2();
-		v.x = is.readFloat();
-		v.y = is.readFloat();
-		return v;
-	}
-
-	private Vector2[] readVecs(DataInputStream is) throws IOException {
-		int len = is.readInt();
-		Vector2[] vs = new Vector2[len];
-		for (int i=0; i<len; i++)
-			vs[i] = readVec(is);
-		return vs;
-	}
-
-	private Vector2[][] readVecss(DataInputStream is) throws IOException {
-		int len = is.readInt();
-		Vector2[][] vss = new Vector2[len][];
-		for (int i=0; i<len; i++)
-			vss[i] = readVecs(is);
-		return vss;
-	}
-
-	// -------------------------------------------------------------------------
-	// BodyModel class
-	// -------------------------------------------------------------------------
-
-	private class BodyModel {
-		private final Vector2[][] normalizedPolygons;
-		private final Vector2[][] polygons;
-
-		public BodyModel(Vector2[][] polygons) {
-			this.normalizedPolygons = polygons;
-			this.polygons = new Vector2[polygons.length][];
-
-			for (int i=0; i<polygons.length; i++) {
-				this.polygons[i] = new Vector2[polygons[i].length];
-				for (int ii=0; ii<polygons[i].length; ii++)
-					this.polygons[i][ii] = new Vector2(polygons[i][ii]);
-			}
-		}
-
-		public Vector2[][] getPolygons(float width, float height) {
-			for (int i=0; i<normalizedPolygons.length; i++) {
-				for (int ii=0; ii<normalizedPolygons[i].length; ii++) {
-					this.polygons[i][ii] = new Vector2(normalizedPolygons[i][ii]);
-					this.polygons[i][ii].x *= width / 100f;
-					this.polygons[i][ii].y *= height / 100f;
-				}
-			}
-			return polygons;
-		}
-	}
-}
\ No newline at end of file
diff --git a/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/BuildTarget.java b/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/BuildTarget.java
index 2e844f4..c88d7e8 100644
--- a/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/BuildTarget.java
+++ b/extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/BuildTarget.java
@@ -138,8 +138,8 @@ public class BuildTarget {
 			// iOS, 386 simulator and armv7a, compiled to fat static lib
 			BuildTarget ios = new BuildTarget(TargetOs.IOS, false, new String[] {"**/*.c"}, new String[0],
 				new String[] {"**/*.cpp"}, new String[0], new String[0], "",
-				"-c -Wall -O2",
-				"-c -Wall -O2",
+				"-c -Wall -O2 -miphoneos-version-min=5.1",
+				"-c -Wall -O2 -miphoneos-version-min=5.1",
 				"rcs");
 			return ios;
 		}
diff --git a/fetch.xml b/fetch.xml
index dfa1bdb..db52bbb 100755
--- a/fetch.xml
+++ b/fetch.xml
@@ -19,6 +19,7 @@
 		<get src="${domain}/armeabi-v7a/libgdx.so" dest="tmp/armeabi-v7a"/>
 		<get src="${domain}/ios/gdx.dll" dest="gdx/libs/ios32"/>
 		<get src="${domain}/ios/gdx.dll.mdb" dest="gdx/libs/ios32"/>
+        <get src="${domain}/ios/libgdx.a" dest="gdx/libs/ios32"/>
 		<get src="${domain}/ios/libgdx.a" dest="tmp/ios"/>
 		<get src="${domain}/ios/ikvm/bin/libikvm-natives.a" dest="tmp/ios"/>
 		
diff --git a/gdx/jni/Android.mk b/gdx/jni/Android.mk
index 82f235d..d5d5706 100644
--- a/gdx/jni/Android.mk
+++ b/gdx/jni/Android.mk
@@ -85,6 +85,7 @@ LOCAL_SRC_FILES := Box2D/Collision/b2BroadPhase.cpp\
 	etc1/etc1_utils.cpp\
 	gdx2d/gdx2d.c\
 	gdx2d/stb_image.c\
+	iosgl/iosgl20.cpp\
 	memcpy_wrap.c
  
 include $(BUILD_SHARED_LIBRARY)
diff --git a/gdx/jni/build-ios32.xml b/gdx/jni/build-ios32.xml
index 35fa678..c4fd0e8 100755
--- a/gdx/jni/build-ios32.xml
+++ b/gdx/jni/build-ios32.xml
@@ -18,7 +18,7 @@
 	
 	<!-- define gcc compiler, options and files to compile -->
 	<property name="gcc" value="${compilerPrefix}gcc"/>	
-	<property name="gcc-opts" value="-c -Wall -O2"/>
+	<property name="gcc-opts" value="-c -Wall -O2 -miphoneos-version-min=5.1"/>
 	<fileset id="gcc-files" dir="./">
 		<exclude name="target/"/>		
 				<include name="memcpy_wrap.c"/>
@@ -29,7 +29,7 @@
 	
 	<!-- define g++ compiler, options and files to compile -->
 	<property name="g++" value="${compilerPrefix}g++"/>
-	<property name="g++-opts" value="-c -Wall -O2"/>
+	<property name="g++-opts" value="-c -Wall -O2 -miphoneos-version-min=5.1"/>
 	<fileset id="g++-files" dir="./">
 		<exclude name="target/"/>
 				<include name="**/*.cpp"/>
diff --git a/gdx/jni/com.badlogic.gdx.graphics.g2d.Gdx2DPixmap.cpp b/gdx/jni/com.badlogic.gdx.graphics.g2d.Gdx2DPixmap.cpp
index 1585060..167c345 100644
--- a/gdx/jni/com.badlogic.gdx.graphics.g2d.Gdx2DPixmap.cpp
+++ b/gdx/jni/com.badlogic.gdx.graphics.g2d.Gdx2DPixmap.cpp
@@ -1,12 +1,12 @@
 #include <com.badlogic.gdx.graphics.g2d.Gdx2DPixmap.h>
 
-//@line:237
+//@line:241
 
 	#include <gdx2d/gdx2d.h>
 	#include <stdlib.h>
 	 JNIEXPORT jobject JNICALL Java_com_badlogic_gdx_graphics_g2d_Gdx2DPixmap_load(JNIEnv* env, jclass clazz, jlongArray nativeData, jbyteArray buffer, jint offset, jint len, jint requestedFormat) {
 
-//@line:242
+//@line:246
 	
 		const unsigned char* p_buffer = (const unsigned char*)env->GetPrimitiveArrayCritical(buffer, 0);
 		gdx2d_pixmap* pixmap = gdx2d_load(p_buffer + offset, len, requestedFormat);
@@ -29,7 +29,7 @@
 
 JNIEXPORT jobject JNICALL Java_com_badlogic_gdx_graphics_g2d_Gdx2DPixmap_newPixmap(JNIEnv* env, jclass clazz, jlongArray nativeData, jint width, jint height, jint format) {
 
-//@line:261
+//@line:265
 
 		gdx2d_pixmap* pixmap = gdx2d_new(width, height, format);
 		if(pixmap==0)
@@ -50,7 +50,7 @@ JNIEXPORT jobject JNICALL Java_com_badlogic_gdx_graphics_g2d_Gdx2DPixmap_newPixm
 JNIEXPORT void JNICALL Java_com_badlogic_gdx_graphics_g2d_Gdx2DPixmap_free(JNIEnv* env, jclass clazz, jlong pixmap) {
 
 
-//@line:277
+//@line:281
 
 		gdx2d_free((gdx2d_pixmap*)pixmap);
 	
@@ -60,7 +60,7 @@ JNIEXPORT void JNICALL Java_com_badlogic_gdx_graphics_g2d_Gdx2DPixmap_free(JNIEn
 JNIEXPORT void JNICALL Java_com_badlogic_gdx_graphics_g2d_Gdx2DPixmap_clear(JNIEnv* env, jclass clazz, jlong pixmap, jint color) {
 
 
-//@line:281
+//@line:285
 
 		gdx2d_clear((gdx2d_pixmap*)pixmap, color);
 	
@@ -70,7 +70,7 @@ JNIEXPORT void JNICALL Java_com_badlogic_gdx_graphics_g2d_Gdx2DPixmap_clear(JNIE
 JNIEXPORT void JNICALL Java_com_badlogic_gdx_graphics_g2d_Gdx2DPixmap_setPixel(JNIEnv* env, jclass clazz, jlong pixmap, jint x, jint y, jint color) {
 
 
-//@line:285
+//@line:289
 
 		gdx2d_set_pixel((gdx2d_pixmap*)pixmap, x, y, color);
 	
@@ -80,7 +80,7 @@ JNIEXPORT void JNICALL Java_com_badlogic_gdx_graphics_g2d_Gdx2DPixmap_setPixel(J
 JNIEXPORT jint JNICALL Java_com_badlogic_gdx_graphics_g2d_Gdx2DPixmap_getPixel(JNIEnv* env, jclass clazz, jlong pixmap, jint x, jint y) {
 
 
-//@line:289
+//@line:293
 
 		return gdx2d_get_pixel((gdx2d_pixmap*)pixmap, x, y);
 	
@@ -90,7 +90,7 @@ JNIEXPORT jint JNICALL Java_com_badlogic_gdx_graphics_g2d_Gdx2DPixmap_getPixel(J
 JNIEXPORT void JNICALL Java_com_badlogic_gdx_graphics_g2d_Gdx2DPixmap_drawLine(JNIEnv* env, jclass clazz, jlong pixmap, jint x, jint y, jint x2, jint y2, jint color) {
 
 
-//@line:293
+//@line:297
 
 		gdx2d_draw_line((gdx2d_pixmap*)pixmap, x, y, x2, y2, color);
 	
@@ -100,7 +100,7 @@ JNIEXPORT void JNICALL Java_com_badlogic_gdx_graphics_g2d_Gdx2DPixmap_drawLine(J
 JNIEXPORT void JNICALL Java_com_badlogic_gdx_graphics_g2d_Gdx2DPixmap_drawRect(JNIEnv* env, jclass clazz, jlong pixmap, jint x, jint y, jint width, jint height, jint color) {
 
 
-//@line:297
+//@line:301
 
 		gdx2d_draw_rect((gdx2d_pixmap*)pixmap, x, y, width, height, color);
 	
@@ -110,7 +110,7 @@ JNIEXPORT void JNICALL Java_com_badlogic_gdx_graphics_g2d_Gdx2DPixmap_drawRect(J
 JNIEXPORT void JNICALL Java_com_badlogic_gdx_graphics_g2d_Gdx2DPixmap_drawCircle(JNIEnv* env, jclass clazz, jlong pixmap, jint x, jint y, jint radius, jint color) {
 
 
-//@line:301
+//@line:305
 
 		gdx2d_draw_circle((gdx2d_pixmap*)pixmap, x, y, radius, color);	
 	
@@ -120,7 +120,7 @@ JNIEXPORT void JNICALL Java_com_badlogic_gdx_graphics_g2d_Gdx2DPixmap_drawCircle
 JNIEXPORT void JNICALL Java_com_badlogic_gdx_graphics_g2d_Gdx2DPixmap_fillRect(JNIEnv* env, jclass clazz, jlong pixmap, jint x, jint y, jint width, jint height, jint color) {
 
 
-//@line:305
+//@line:309
 
 		gdx2d_fill_rect((gdx2d_pixmap*)pixmap, x, y, width, height, color);
 	
@@ -130,7 +130,7 @@ JNIEXPORT void JNICALL Java_com_badlogic_gdx_graphics_g2d_Gdx2DPixmap_fillRect(J
 JNIEXPORT void JNICALL Java_com_badlogic_gdx_graphics_g2d_Gdx2DPixmap_fillCircle(JNIEnv* env, jclass clazz, jlong pixmap, jint x, jint y, jint radius, jint color) {
 
 
-//@line:309
+//@line:313
 
 		gdx2d_fill_circle((gdx2d_pixmap*)pixmap, x, y, radius, color);
 	
@@ -140,6 +140,8 @@ JNIEXPORT void JNICALL Java_com_badlogic_gdx_graphics_g2d_Gdx2DPixmap_fillCircle
 JNIEXPORT void JNICALL Java_com_badlogic_gdx_graphics_g2d_Gdx2DPixmap_fillTriangle(JNIEnv* env, jclass clazz, jlong pixmap, jint x1, jint y1, jint x2, jint y2, jint x3, jint y3, jint color) {
 
 
+//@line:317
+
 		gdx2d_fill_triangle((gdx2d_pixmap*)pixmap, x1, y1, x2, y2, x3, y3, color);
 	
 
@@ -148,7 +150,7 @@ JNIEXPORT void JNICALL Java_com_badlogic_gdx_graphics_g2d_Gdx2DPixmap_fillTriang
 JNIEXPORT void JNICALL Java_com_badlogic_gdx_graphics_g2d_Gdx2DPixmap_drawPixmap(JNIEnv* env, jclass clazz, jlong src, jlong dst, jint srcX, jint srcY, jint srcWidth, jint srcHeight, jint dstX, jint dstY, jint dstWidth, jint dstHeight) {
 
 
-//@line:314
+//@line:322
 
 		gdx2d_draw_pixmap((gdx2d_pixmap*)src, (gdx2d_pixmap*)dst, srcX, srcY, srcWidth, srcHeight, dstX, dstY, dstWidth, dstHeight);
 	
@@ -158,7 +160,7 @@ JNIEXPORT void JNICALL Java_com_badlogic_gdx_graphics_g2d_Gdx2DPixmap_drawPixmap
 JNIEXPORT void JNICALL Java_com_badlogic_gdx_graphics_g2d_Gdx2DPixmap_setBlend(JNIEnv* env, jclass clazz, jint blend) {
 
 
-//@line:318
+//@line:326
 
 		gdx2d_set_blend(blend);
 	
@@ -168,7 +170,7 @@ JNIEXPORT void JNICALL Java_com_badlogic_gdx_graphics_g2d_Gdx2DPixmap_setBlend(J
 JNIEXPORT void JNICALL Java_com_badlogic_gdx_graphics_g2d_Gdx2DPixmap_setScale(JNIEnv* env, jclass clazz, jint scale) {
 
 
-//@line:322
+//@line:330
 
 		gdx2d_set_scale(scale);
 	
@@ -178,7 +180,7 @@ JNIEXPORT void JNICALL Java_com_badlogic_gdx_graphics_g2d_Gdx2DPixmap_setScale(J
 JNIEXPORT jstring JNICALL Java_com_badlogic_gdx_graphics_g2d_Gdx2DPixmap_getFailureReason(JNIEnv* env, jclass clazz) {
 
 
-//@line:326
+//@line:334
 
      return env->NewStringUTF(gdx2d_get_failure_reason());
    
diff --git a/gdx/jni/com.badlogic.gdx.physics.box2d.Contact.h b/gdx/jni/com.badlogic.gdx.physics.box2d.Contact.h
index 0dbeaf8..c066f77 100644
--- a/gdx/jni/com.badlogic.gdx.physics.box2d.Contact.h
+++ b/gdx/jni/com.badlogic.gdx.physics.box2d.Contact.h
@@ -1,141 +1,141 @@
-/* DO NOT EDIT THIS FILE - it is machine generated */
-#include <jni.h>
-/* Header for class com_badlogic_gdx_physics_box2d_Contact */
-
-#ifndef _Included_com_badlogic_gdx_physics_box2d_Contact
-#define _Included_com_badlogic_gdx_physics_box2d_Contact
-#ifdef __cplusplus
-extern "C" {
-#endif
-/*
- * Class:     com_badlogic_gdx_physics_box2d_Contact
- * Method:    jniGetWorldManifold
- * Signature: (J[F)I
- */
-JNIEXPORT jint JNICALL Java_com_badlogic_gdx_physics_box2d_Contact_jniGetWorldManifold
-  (JNIEnv *, jobject, jlong, jfloatArray);
-
-/*
- * Class:     com_badlogic_gdx_physics_box2d_Contact
- * Method:    jniIsTouching
- * Signature: (J)Z
- */
-JNIEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_box2d_Contact_jniIsTouching
-  (JNIEnv *, jobject, jlong);
-
-/*
- * Class:     com_badlogic_gdx_physics_box2d_Contact
- * Method:    jniSetEnabled
- * Signature: (JZ)V
- */
-JNIEXPORT void JNICALL Java_com_badlogic_gdx_physics_box2d_Contact_jniSetEnabled
-  (JNIEnv *, jobject, jlong, jboolean);
-
-/*
- * Class:     com_badlogic_gdx_physics_box2d_Contact
- * Method:    jniIsEnabled
- * Signature: (J)Z
- */
-JNIEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_box2d_Contact_jniIsEnabled
-  (JNIEnv *, jobject, jlong);
-
-/*
- * Class:     com_badlogic_gdx_physics_box2d_Contact
- * Method:    jniGetFixtureA
- * Signature: (J)J
- */
-JNIEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_box2d_Contact_jniGetFixtureA
-  (JNIEnv *, jobject, jlong);
-
-/*
- * Class:     com_badlogic_gdx_physics_box2d_Contact
- * Method:    jniGetFixtureB
- * Signature: (J)J
- */
-JNIEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_box2d_Contact_jniGetFixtureB
-  (JNIEnv *, jobject, jlong);
-
-/*
- * Class:     com_badlogic_gdx_physics_box2d_Contact
- * Method:    jniGetChildIndexA
- * Signature: (J)I
- */
-JNIEXPORT jint JNICALL Java_com_badlogic_gdx_physics_box2d_Contact_jniGetChildIndexA
-  (JNIEnv *, jobject, jlong);
-
-/*
- * Class:     com_badlogic_gdx_physics_box2d_Contact
- * Method:    jniGetChildIndexB
- * Signature: (J)I
- */
-JNIEXPORT jint JNICALL Java_com_badlogic_gdx_physics_box2d_Contact_jniGetChildIndexB
-  (JNIEnv *, jobject, jlong);
-
-/*
- * Class:     com_badlogic_gdx_physics_box2d_Contact
- * Method:    jniSetFriction
- * Signature: (JF)V
- */
-JNIEXPORT void JNICALL Java_com_badlogic_gdx_physics_box2d_Contact_jniSetFriction
-  (JNIEnv *, jobject, jlong, jfloat);
-
-/*
- * Class:     com_badlogic_gdx_physics_box2d_Contact
- * Method:    jniGetFriction
- * Signature: (J)F
- */
-JNIEXPORT jfloat JNICALL Java_com_badlogic_gdx_physics_box2d_Contact_jniGetFriction
-  (JNIEnv *, jobject, jlong);
-
-/*
- * Class:     com_badlogic_gdx_physics_box2d_Contact
- * Method:    jniResetFriction
- * Signature: (J)V
- */
-JNIEXPORT void JNICALL Java_com_badlogic_gdx_physics_box2d_Contact_jniResetFriction
-  (JNIEnv *, jobject, jlong);
-
-/*
- * Class:     com_badlogic_gdx_physics_box2d_Contact
- * Method:    jniSetRestitution
- * Signature: (JF)V
- */
-JNIEXPORT void JNICALL Java_com_badlogic_gdx_physics_box2d_Contact_jniSetRestitution
-  (JNIEnv *, jobject, jlong, jfloat);
-
-/*
- * Class:     com_badlogic_gdx_physics_box2d_Contact
- * Method:    jniGetRestitution
- * Signature: (J)F
- */
-JNIEXPORT jfloat JNICALL Java_com_badlogic_gdx_physics_box2d_Contact_jniGetRestitution
-  (JNIEnv *, jobject, jlong);
-
-/*
- * Class:     com_badlogic_gdx_physics_box2d_Contact
- * Method:    jniResetRestitution
- * Signature: (J)V
- */
-JNIEXPORT void JNICALL Java_com_badlogic_gdx_physics_box2d_Contact_jniResetRestitution
-  (JNIEnv *, jobject, jlong);
-
-/*
- * Class:     com_badlogic_gdx_physics_box2d_Contact
- * Method:    jniGetTangentSpeed
- * Signature: (J)F
- */
-JNIEXPORT jfloat JNICALL Java_com_badlogic_gdx_physics_box2d_Contact_jniGetTangentSpeed
-  (JNIEnv *, jobject, jlong);
-
-/*
- * Class:     com_badlogic_gdx_physics_box2d_Contact
- * Method:    jniSetTangentSpeed
- * Signature: (JF)V
- */
-JNIEXPORT void JNICALL Java_com_badlogic_gdx_physics_box2d_Contact_jniSetTangentSpeed
-  (JNIEnv *, jobject, jlong, jfloat);
-
-#ifdef __cplusplus
-}
-#endif
-#endif
+/* DO NOT EDIT THIS FILE - it is machine generated */
+#include <jni.h>
+/* Header for class com_badlogic_gdx_physics_box2d_Contact */
+
+#ifndef _Included_com_badlogic_gdx_physics_box2d_Contact
+#define _Included_com_badlogic_gdx_physics_box2d_Contact
+#ifdef __cplusplus
+extern "C" {
+#endif
+/*
+ * Class:     com_badlogic_gdx_physics_box2d_Contact
+ * Method:    jniGetWorldManifold
+ * Signature: (J[F)I
+ */
+JNIEXPORT jint JNICALL Java_com_badlogic_gdx_physics_box2d_Contact_jniGetWorldManifold
+  (JNIEnv *, jobject, jlong, jfloatArray);
+
+/*
+ * Class:     com_badlogic_gdx_physics_box2d_Contact
+ * Method:    jniIsTouching
+ * Signature: (J)Z
+ */
+JNIEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_box2d_Contact_jniIsTouching
+  (JNIEnv *, jobject, jlong);
+
+/*
+ * Class:     com_badlogic_gdx_physics_box2d_Contact
+ * Method:    jniSetEnabled
+ * Signature: (JZ)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_physics_box2d_Contact_jniSetEnabled
+  (JNIEnv *, jobject, jlong, jboolean);
+
+/*
+ * Class:     com_badlogic_gdx_physics_box2d_Contact
+ * Method:    jniIsEnabled
+ * Signature: (J)Z
+ */
+JNIEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_box2d_Contact_jniIsEnabled
+  (JNIEnv *, jobject, jlong);
+
+/*
+ * Class:     com_badlogic_gdx_physics_box2d_Contact
+ * Method:    jniGetFixtureA
+ * Signature: (J)J
+ */
+JNIEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_box2d_Contact_jniGetFixtureA
+  (JNIEnv *, jobject, jlong);
+
+/*
+ * Class:     com_badlogic_gdx_physics_box2d_Contact
+ * Method:    jniGetFixtureB
+ * Signature: (J)J
+ */
+JNIEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_box2d_Contact_jniGetFixtureB
+  (JNIEnv *, jobject, jlong);
+
+/*
+ * Class:     com_badlogic_gdx_physics_box2d_Contact
+ * Method:    jniGetChildIndexA
+ * Signature: (J)I
+ */
+JNIEXPORT jint JNICALL Java_com_badlogic_gdx_physics_box2d_Contact_jniGetChildIndexA
+  (JNIEnv *, jobject, jlong);
+
+/*
+ * Class:     com_badlogic_gdx_physics_box2d_Contact
+ * Method:    jniGetChildIndexB
+ * Signature: (J)I
+ */
+JNIEXPORT jint JNICALL Java_com_badlogic_gdx_physics_box2d_Contact_jniGetChildIndexB
+  (JNIEnv *, jobject, jlong);
+
+/*
+ * Class:     com_badlogic_gdx_physics_box2d_Contact
+ * Method:    jniSetFriction
+ * Signature: (JF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_physics_box2d_Contact_jniSetFriction
+  (JNIEnv *, jobject, jlong, jfloat);
+
+/*
+ * Class:     com_badlogic_gdx_physics_box2d_Contact
+ * Method:    jniGetFriction
+ * Signature: (J)F
+ */
+JNIEXPORT jfloat JNICALL Java_com_badlogic_gdx_physics_box2d_Contact_jniGetFriction
+  (JNIEnv *, jobject, jlong);
+
+/*
+ * Class:     com_badlogic_gdx_physics_box2d_Contact
+ * Method:    jniResetFriction
+ * Signature: (J)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_physics_box2d_Contact_jniResetFriction
+  (JNIEnv *, jobject, jlong);
+
+/*
+ * Class:     com_badlogic_gdx_physics_box2d_Contact
+ * Method:    jniSetRestitution
+ * Signature: (JF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_physics_box2d_Contact_jniSetRestitution
+  (JNIEnv *, jobject, jlong, jfloat);
+
+/*
+ * Class:     com_badlogic_gdx_physics_box2d_Contact
+ * Method:    jniGetRestitution
+ * Signature: (J)F
+ */
+JNIEXPORT jfloat JNICALL Java_com_badlogic_gdx_physics_box2d_Contact_jniGetRestitution
+  (JNIEnv *, jobject, jlong);
+
+/*
+ * Class:     com_badlogic_gdx_physics_box2d_Contact
+ * Method:    jniResetRestitution
+ * Signature: (J)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_physics_box2d_Contact_jniResetRestitution
+  (JNIEnv *, jobject, jlong);
+
+/*
+ * Class:     com_badlogic_gdx_physics_box2d_Contact
+ * Method:    jniGetTangentSpeed
+ * Signature: (J)F
+ */
+JNIEXPORT jfloat JNICALL Java_com_badlogic_gdx_physics_box2d_Contact_jniGetTangentSpeed
+  (JNIEnv *, jobject, jlong);
+
+/*
+ * Class:     com_badlogic_gdx_physics_box2d_Contact
+ * Method:    jniSetTangentSpeed
+ * Signature: (JF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_physics_box2d_Contact_jniSetTangentSpeed
+  (JNIEnv *, jobject, jlong, jfloat);
+
+#ifdef __cplusplus
+}
+#endif
+#endif
diff --git a/gdx/jni/iosgl/iosgl20.cpp b/gdx/jni/iosgl/iosgl20.cpp
new file mode 100644
index 0000000..4a288e7
--- /dev/null
+++ b/gdx/jni/iosgl/iosgl20.cpp
@@ -0,0 +1,1771 @@
+#ifdef __APPLE__
+#include <TargetConditionals.h>
+
+#if TARGET_OS_IPHONE
+#include <iosgl/iosgl20.h>
+#include <OpenGLES/ES2/gl.h>
+#include <OpenGLES/ES2/glext.h>
+#include <stdio.h>
+
+static jclass bufferClass;
+static jclass byteBufferClass;
+static jclass charBufferClass;
+static jclass shortBufferClass;
+static jclass intBufferClass;
+static jclass longBufferClass;
+static jclass floatBufferClass;
+static jclass doubleBufferClass;
+static jclass OOMEClass;
+static jclass UOEClass;
+static jclass IAEClass;
+
+static jmethodID positionID;
+
+
+static void
+nativeClassInitBuffer(JNIEnv *_env)
+{
+    jclass bufferClassLocal = _env->FindClass("java/nio/Buffer");
+    bufferClass = (jclass) _env->NewGlobalRef(bufferClassLocal);
+
+    byteBufferClass = (jclass) _env->NewGlobalRef(_env->FindClass("java/nio/ByteBuffer"));
+    charBufferClass = (jclass) _env->NewGlobalRef(_env->FindClass("java/nio/CharBuffer"));
+    shortBufferClass = (jclass) _env->NewGlobalRef(_env->FindClass("java/nio/ShortBuffer"));
+    intBufferClass = (jclass) _env->NewGlobalRef(_env->FindClass("java/nio/IntBuffer"));
+    longBufferClass = (jclass) _env->NewGlobalRef(_env->FindClass("java/nio/LongBuffer"));
+    floatBufferClass = (jclass) _env->NewGlobalRef(_env->FindClass("java/nio/FloatBuffer"));
+    doubleBufferClass = (jclass) _env->NewGlobalRef(_env->FindClass("java/nio/DoubleBuffer"));
+
+    positionID = _env->GetMethodID(bufferClass, "position","()I");
+    if(positionID == 0) _env->ThrowNew(IAEClass, "Couldn't fetch position() method");
+}
+
+static void
+nativeClassInit(JNIEnv *_env)
+{
+    nativeClassInitBuffer(_env);
+
+    jclass IAEClassLocal =
+        _env->FindClass("java/lang/IllegalArgumentException");
+    jclass OOMEClassLocal =
+         _env->FindClass("java/lang/OutOfMemoryError");
+    jclass UOEClassLocal =
+         _env->FindClass("java/lang/UnsupportedOperationException");
+
+    IAEClass = (jclass) _env->NewGlobalRef(IAEClassLocal);
+    OOMEClass = (jclass) _env->NewGlobalRef(OOMEClassLocal);
+    UOEClass = (jclass) _env->NewGlobalRef(UOEClassLocal);
+}
+
+static jint getElementSizeShift(JNIEnv *_env, jobject buffer) {
+	if(_env->IsInstanceOf(buffer, byteBufferClass)) return 0;
+	if(_env->IsInstanceOf(buffer, floatBufferClass)) return 2;
+	if(_env->IsInstanceOf(buffer, shortBufferClass)) return 1;
+
+	if(_env->IsInstanceOf(buffer, charBufferClass)) return 1;
+	if(_env->IsInstanceOf(buffer, intBufferClass)) return 2;
+	if(_env->IsInstanceOf(buffer, longBufferClass)) return 3;
+	if(_env->IsInstanceOf(buffer, doubleBufferClass)) return 3;
+
+	_env->ThrowNew(IAEClass, "buffer type unkown! (Not a ByteBuffer, ShortBuffer, etc.)");
+	return 0;
+}
+
+inline jint getBufferPosition(JNIEnv *env, jobject buffer)
+{
+	jint ret = env->CallIntMethodA(buffer, positionID, 0);
+	return  ret;
+}
+
+static void *
+getDirectBufferPointer(JNIEnv *_env, jobject buffer) {
+    if (!buffer) {
+        return NULL;
+    }
+    void* buf = _env->GetDirectBufferAddress(buffer);
+    if (buf) {
+        jint position = getBufferPosition(_env, buffer);
+        jint elementSizeShift = getElementSizeShift(_env, buffer);
+        buf = ((char*) buf) + (position << elementSizeShift);
+    } else {
+        _env->ThrowNew(IAEClass, "Must use a native order direct Buffer");
+    }
+    return buf;
+}
+
+static const char* getString( JNIEnv *env, jstring string )
+{
+	return (const char*)env->GetStringUTFChars(string, NULL);
+}
+
+static void releaseString( JNIEnv *env, jstring string, const char* cString )
+{
+	env->ReleaseStringUTFChars(string, cString);
+}
+
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_init
+  (JNIEnv *env, jclass)
+{
+	nativeClassInit( env );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glActiveTexture
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glActiveTexture
+  (JNIEnv *, jobject, jint texture)
+{
+	glActiveTexture( texture );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glAttachShader
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glAttachShader
+  (JNIEnv *, jobject, jint program, jint shader)
+{
+	glAttachShader( program, shader );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glBindAttribLocation
+ * Signature: (IILjava/lang/String;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glBindAttribLocation
+  (JNIEnv *env, jobject, jint program, jint index, jstring name)
+{
+	const char* namePtr = getString( env, name );
+	glBindAttribLocation( program, index, namePtr );
+	releaseString( env, name, namePtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glBindBuffer
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glBindBuffer
+  (JNIEnv *env, jobject, jint target, jint buffer)
+{
+	glBindBuffer( target, buffer );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glBindFramebuffer
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glBindFramebuffer
+  (JNIEnv *env, jobject, jint target, jint framebuffer)
+{
+	glBindFramebuffer( target, framebuffer );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glBindRenderbuffer
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glBindRenderbuffer
+  (JNIEnv *env, jobject, jint target, jint renderbuffer)
+{
+	glBindRenderbuffer( target, renderbuffer );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glBindTexture
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glBindTexture
+  (JNIEnv *env, jobject, jint target, jint texture)
+{
+	glBindTexture( target, texture );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glBlendColor
+ * Signature: (FFFF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glBlendColor
+  (JNIEnv *env, jobject, jfloat red, jfloat green, jfloat blue, jfloat alpha)
+{
+	glBlendColor( red, green, blue, alpha );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glBlendEquation
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glBlendEquation
+  (JNIEnv *env, jobject, jint mode)
+{
+	glBlendEquation( mode );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glBlendEquationSeparate
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glBlendEquationSeparate
+  (JNIEnv *env, jobject, jint modeRGB, jint modeAlpha)
+{
+	glBlendEquationSeparate( modeRGB, modeAlpha );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glBlendFunc
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glBlendFunc
+  (JNIEnv *env, jobject, jint sfactor, jint dfactor)
+{
+	glBlendFunc( sfactor, dfactor );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glBlendFuncSeparate
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glBlendFuncSeparate
+  (JNIEnv *env, jobject, jint srcRGB, jint dstRGB, jint srcAlpha, jint dstAlpha)
+{
+	glBlendFuncSeparate( srcRGB, dstRGB, srcAlpha, dstAlpha);
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glBufferData
+ * Signature: (IILjava/nio/Buffer;I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glBufferData
+  (JNIEnv * env, jobject, jint target, jint size, jobject data, jint usage)
+{
+	void* dataPtr = getDirectBufferPointer( env, data );
+	glBufferData( target, size, dataPtr, usage );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glBufferSubData
+ * Signature: (IIILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glBufferSubData
+  (JNIEnv *env, jobject, jint target, jint offset, jint size, jobject data)
+{
+	void* dataPtr = getDirectBufferPointer( env, data );
+	glBufferSubData( target, offset, size, dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glCheckFramebufferStatus
+ * Signature: (I)I
+ */
+JNIEXPORT jint JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glCheckFramebufferStatus
+  (JNIEnv *env, jobject, jint target)
+{
+	return glCheckFramebufferStatus( target );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glClear
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glClear
+  (JNIEnv *env, jobject, jint mask)
+{
+	glClear( mask );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glClearColor
+ * Signature: (FFFF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glClearColor
+  (JNIEnv *env, jobject, jfloat red, jfloat green, jfloat blue, jfloat alpha)
+{
+	glClearColor( red, green, blue, alpha );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glClearDepthf
+ * Signature: (F)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glClearDepthf
+  (JNIEnv *env, jobject, jfloat depth)
+{
+	glClearDepthf( depth );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glClearStencil
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glClearStencil
+  (JNIEnv *env, jobject, jint s)
+{
+	glClearStencil( s );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glColorMask
+ * Signature: (ZZZZ)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glColorMask
+  (JNIEnv *env, jobject, jboolean red, jboolean green, jboolean blue, jboolean alpha)
+{
+	glColorMask( red, green, blue, alpha );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glCompileShader
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glCompileShader
+  (JNIEnv *env, jobject, jint shader)
+{
+	glCompileShader( shader );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glCompressedTexImage2D
+ * Signature: (IIIIIIILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glCompressedTexImage2D
+  (JNIEnv *env, jobject, jint target, jint level, jint internalFormat, jint width, jint height, jint border, jint imageSize, jobject data)
+{
+	void* dataPtr = getDirectBufferPointer( env, data );
+	glCompressedTexImage2D( target, level, internalFormat, width, height, border, imageSize, dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glCompressedTexSubImage2D
+ * Signature: (IIIIIIIILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glCompressedTexSubImage2D
+  (JNIEnv *env, jobject, jint target, jint level, jint xoffset, jint yoffset, jint width, jint height, jint format, jint imageSize, jobject data)
+{
+	void* dataPtr = getDirectBufferPointer( env, data );
+	glCompressedTexSubImage2D( target, level, xoffset, yoffset, width, height, format, imageSize, dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glCopyTexImage2D
+ * Signature: (IIIIIIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glCopyTexImage2D
+  (JNIEnv *env, jobject, jint target, jint level, jint  internalFormat, jint x, jint y, jint width, jint height, jint border)
+{
+	glCopyTexImage2D( target, level, internalFormat, x, y, width, height, border );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glCopyTexSubImage2D
+ * Signature: (IIIIIIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glCopyTexSubImage2D
+  (JNIEnv *env, jobject, jint target, jint level, jint xoffset, jint yoffset, jint x, jint y, jint width, jint height)
+{
+	glCopyTexSubImage2D( target, level, xoffset, yoffset, x, y, width, height );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glCreateProgram
+ * Signature: ()I
+ */
+JNIEXPORT jint JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glCreateProgram
+  (JNIEnv *env, jobject)
+{
+	return glCreateProgram( );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glCreateShader
+ * Signature: (I)I
+ */
+JNIEXPORT jint JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glCreateShader
+  (JNIEnv *env, jobject, jint type)
+{
+	return glCreateShader( type );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glCullFace
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glCullFace
+  (JNIEnv *env, jobject, jint mode)
+{
+	glCullFace( mode );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glDeleteBuffers
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glDeleteBuffers
+  (JNIEnv *env, jobject, jint n, jobject buffers)
+{
+	void* dataPtr = getDirectBufferPointer( env, buffers );
+	glDeleteBuffers( n, (GLuint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glDeleteFramebuffers
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glDeleteFramebuffers
+  (JNIEnv *env, jobject, jint n, jobject framebuffers)
+{
+	void* dataPtr = getDirectBufferPointer( env, framebuffers );
+	glDeleteFramebuffers( n, (GLuint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glDeleteProgram
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glDeleteProgram
+  (JNIEnv *env, jobject, jint program)
+{
+	glDeleteProgram( program );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glDeleteRenderbuffers
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glDeleteRenderbuffers
+  (JNIEnv *env, jobject, jint n, jobject renderbuffers)
+{
+	void* dataPtr = getDirectBufferPointer( env, renderbuffers );
+	glDeleteRenderbuffers( n, (GLuint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glDeleteShader
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glDeleteShader
+  (JNIEnv *env, jobject, jint shader)
+{
+	glDeleteShader( shader );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glDeleteTextures
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glDeleteTextures
+  (JNIEnv *env, jobject, jint n, jobject textures)
+{
+	void* dataPtr = getDirectBufferPointer( env, textures );
+	glDeleteTextures( n, (GLuint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glDepthFunc
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glDepthFunc
+  (JNIEnv *env, jobject, jint func)
+{
+	glDepthFunc( func );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glDepthMask
+ * Signature: (Z)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glDepthMask
+  (JNIEnv *env, jobject, jboolean flag)
+{
+	glDepthMask( flag );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glDepthRangef
+ * Signature: (FF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glDepthRangef
+  (JNIEnv *env, jobject, jfloat zNear, jfloat zFar)
+{
+	glDepthRangef( zNear, zFar );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glDetachShader
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glDetachShader
+  (JNIEnv *env, jobject, jint program, jint shader)
+{
+	glDetachShader( program, shader );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glDisable
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glDisable
+  (JNIEnv *env, jobject, jint cap)
+{
+	glDisable( cap );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glDisableVertexAttribArray
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glDisableVertexAttribArray
+  (JNIEnv *env, jobject, jint index)
+{
+	glDisableVertexAttribArray( index );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glDrawArrays
+ * Signature: (III)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glDrawArrays
+  (JNIEnv *env, jobject, jint mode, jint first, jint count)
+{
+	glDrawArrays( mode, first, count );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glDrawElements
+ * Signature: (IIILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glDrawElements__IIILjava_nio_Buffer_2
+(JNIEnv *env, jobject, jint mode, jint count, jint type, jobject indices)
+{
+	void* dataPtr = getDirectBufferPointer( env, indices );
+	//__android_log_print(ANDROID_LOG_INFO, "GL2", "drawelements");
+	glDrawElements( mode, count, type, dataPtr );
+}
+
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glDrawElements__IIII
+  (JNIEnv *, jobject, jint mode, jint count, jint type, jint indices)
+{
+	glDrawElements( mode, count, type, (const void*)indices );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glEnable
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glEnable
+  (JNIEnv *env, jobject, jint cap)
+{
+	glEnable( cap );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glEnableVertexAttribArray
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glEnableVertexAttribArray
+  (JNIEnv *env, jobject, jint index)
+{
+	glEnableVertexAttribArray( index );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glFinish
+ * Signature: ()V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glFinish
+  (JNIEnv *env, jobject)
+{
+	glFinish();
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glFlush
+ * Signature: ()V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glFlush
+  (JNIEnv *env, jobject)
+{
+	glFlush();
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glFramebufferRenderbuffer
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glFramebufferRenderbuffer
+  (JNIEnv *env, jobject, jint target, jint attachment, jint renderbuffertarget, jint renderbuffer)
+{
+	glFramebufferRenderbuffer( target, attachment, renderbuffertarget, renderbuffer );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glFramebufferTexture2D
+ * Signature: (IIIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glFramebufferTexture2D
+  (JNIEnv *env, jobject, jint target, jint attachment, jint textarget, jint texture, jint level)
+{
+	glFramebufferTexture2D( target, attachment, textarget, texture, level );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glFrontFace
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glFrontFace
+  (JNIEnv *env, jobject, jint mode)
+{ //XXXX
+	glFrontFace( mode );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGenBuffers
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGenBuffers
+  (JNIEnv *env, jobject, jint n, jobject buffers)
+{
+	void* dataPtr = getDirectBufferPointer( env, buffers );
+	glGenBuffers( n, (GLuint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGenerateMipmap
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGenerateMipmap
+  (JNIEnv *env, jobject, jint target)
+{
+	glGenerateMipmap( target );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGenFramebuffers
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGenFramebuffers
+  (JNIEnv *env, jobject, jint n, jobject framebuffers)
+{
+	void* dataPtr = getDirectBufferPointer( env, framebuffers );
+	glGenFramebuffers( n, (GLuint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGenRenderbuffers
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGenRenderbuffers
+  (JNIEnv *env, jobject, jint n, jobject renderbuffers)
+{
+	void* dataPtr = getDirectBufferPointer( env, renderbuffers );
+	glGenRenderbuffers( n, (GLuint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGenTextures
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGenTextures
+  (JNIEnv *env, jobject, jint n, jobject textures)
+{
+	void* dataPtr = getDirectBufferPointer( env, textures );
+	glGenTextures( n, (GLuint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetActiveAttrib
+ * Signature: (IIILjava/nio/Buffer;Ljava/nio/IntBuffer;Ljava/nio/Buffer;Ljava/lang/String;)V
+ */
+JNIEXPORT jstring JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetActiveAttrib
+  (JNIEnv *env, jobject, jint program, jint index, jobject size, jobject type )
+{
+	// FIXME is this wrong?
+	char cname[2048];
+	void* sizePtr = getDirectBufferPointer( env, size );
+	void* typePtr = getDirectBufferPointer( env, type );
+	glGetActiveAttrib( program, index, 2048, NULL, (GLint*)sizePtr, (GLenum*)typePtr, cname );
+
+	return env->NewStringUTF( cname );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetActiveUniform
+ * Signature: (IIILjava/nio/Buffer;Ljava/nio/IntBuffer;Ljava/nio/Buffer;Ljava/lang/String;)V
+ */
+JNIEXPORT jstring JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetActiveUniform
+  (JNIEnv *env, jobject, jint program, jint index, jobject size, jobject type)
+{
+	// FIXME is this wrong?
+	char cname[2048];
+	void* sizePtr = getDirectBufferPointer( env, size );
+	void* typePtr = getDirectBufferPointer( env, type );
+	glGetActiveUniform( program, index, 2048, NULL, (GLint*)sizePtr, (GLenum*)typePtr, cname );
+
+	return env->NewStringUTF( cname );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetAttachedShaders
+ * Signature: (IILjava/nio/Buffer;Ljava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetAttachedShaders
+  (JNIEnv *env, jobject, jint program, jint maxcount, jobject count, jobject shaders)
+{
+	void* countPtr = getDirectBufferPointer( env, count );
+	void* shaderPtr = getDirectBufferPointer( env, shaders );
+	glGetAttachedShaders( program, maxcount, (GLsizei*)countPtr, (GLuint*)shaderPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetAttribLocation
+ * Signature: (ILjava/lang/String;)I
+ */
+JNIEXPORT jint JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetAttribLocation
+  (JNIEnv *env, jobject, jint program, jstring name)
+{
+	const char* cname = getString( env, name );
+	int loc = glGetAttribLocation( program, cname );
+	releaseString( env, name, cname );
+	return loc;
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetBooleanv
+ * Signature: (ILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetBooleanv
+  (JNIEnv *env, jobject, jint program, jobject params)
+{
+	void* dataPtr = getDirectBufferPointer( env, params );
+	glGetBooleanv( program, (GLboolean*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetBufferParameteriv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetBufferParameteriv
+  (JNIEnv *env, jobject, jint target, jint pname, jobject params)
+{
+	void* dataPtr = getDirectBufferPointer( env, params );
+	glGetBufferParameteriv( target, pname, (GLint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetError
+ * Signature: ()I
+ */
+JNIEXPORT jint JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetError
+  (JNIEnv *env, jobject)
+{
+	return glGetError();
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetFloatv
+ * Signature: (ILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetFloatv
+  (JNIEnv *env, jobject, jint pname, jobject params)
+{
+	void* dataPtr = getDirectBufferPointer( env, params );
+	glGetFloatv( pname, (GLfloat*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetFramebufferAttachmentParameteriv
+ * Signature: (IIILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetFramebufferAttachmentParameteriv
+  (JNIEnv *env, jobject, jint target, jint attachment, jint pname, jobject params)
+{
+	void* dataPtr = getDirectBufferPointer( env, params );
+	glGetFramebufferAttachmentParameteriv( target, attachment, pname, (GLint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetIntegerv
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetIntegerv
+  (JNIEnv *env, jobject, jint pname, jobject params)
+{
+	void* dataPtr = getDirectBufferPointer( env, params );
+	glGetIntegerv( pname, (GLint*)dataPtr);
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetProgramiv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetProgramiv
+  (JNIEnv *env, jobject, jint program, jint pname, jobject params)
+{
+	void *dataPtr = getDirectBufferPointer( env, params );
+	glGetProgramiv( program, pname, (GLint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetProgramInfoLog
+ * Signature: (IILjava/nio/Buffer;Ljava/lang/String;)V
+ */
+JNIEXPORT jstring JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetProgramInfoLog
+  (JNIEnv *env, jobject, jint program )
+{
+	char info[1024*10]; // FIXME 10k limit should suffice
+	int length = 0;
+	glGetProgramInfoLog( program, 1024*10, &length, info );
+	return env->NewStringUTF( info );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetRenderbufferParameteriv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetRenderbufferParameteriv
+  (JNIEnv *env, jobject, jint target, jint pname, jobject params)
+{
+	void* dataPtr = getDirectBufferPointer( env, params );
+	glGetRenderbufferParameteriv( target, pname, (GLint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetShaderiv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetShaderiv
+  (JNIEnv *env, jobject, jint shader, jint pname, jobject params)
+{
+	void* dataPtr = getDirectBufferPointer( env, params );
+	glGetShaderiv( shader, pname, (GLint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetShaderInfoLog
+ * Signature: (IILjava/nio/Buffer;Ljava/lang/String;)V
+ */
+JNIEXPORT jstring JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetShaderInfoLog
+  (JNIEnv *env, jobject, jint shader )
+{
+	char info[1024*10]; // FIXME 10k limit should suffice
+	int length = 0;
+	glGetShaderInfoLog( shader, 1024*10, &length, info );
+	return env->NewStringUTF( info );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetShaderPrecisionFormat
+ * Signature: (IILjava/nio/IntBuffer;Ljava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetShaderPrecisionFormat
+  (JNIEnv *env, jobject, jint shadertype, jint precisiontype, jobject range, jobject precision)
+{
+	void* rangePtr = getDirectBufferPointer( env, range );
+	void* precisionPtr = getDirectBufferPointer( env, precision );
+	glGetShaderPrecisionFormat( shadertype, precisiontype, (GLint*)rangePtr, (GLint*)precisionPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetShaderSource
+ * Signature: (IILjava/nio/Buffer;Ljava/lang/String;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetShaderSource
+  (JNIEnv *env, jobject, jint shader, jint bufsize, jobject length, jstring source)
+{
+	env->ThrowNew(UOEClass, "This method is not supported"); // FIXME won't implement this shit.
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetString
+ * Signature: (I)Ljava/lang/String;
+ */
+JNIEXPORT jstring JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetString
+  (JNIEnv *env, jobject, jint name)
+{
+	const char * chars = (const char *)glGetString((GLenum)name);
+	jstring output = env->NewStringUTF(chars);
+	return output;
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetTexParameterfv
+ * Signature: (IILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetTexParameterfv
+  (JNIEnv *env, jobject, jint target, jint pname, jobject params)
+{
+	void* dataPtr = getDirectBufferPointer( env, params );
+	glGetTexParameterfv( target, pname, (GLfloat*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetTexParameteriv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetTexParameteriv
+  (JNIEnv *env, jobject, jint target, jint pname, jobject params)
+{
+	void* dataPtr = getDirectBufferPointer( env, params );
+	glGetTexParameteriv( target, pname, (GLint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetUniformfv
+ * Signature: (IILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetUniformfv
+  (JNIEnv *env, jobject, jint program, jint location, jobject params)
+{
+	void* dataPtr = getDirectBufferPointer( env, params );
+	glGetUniformfv( program, location, (GLfloat*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetUniformiv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetUniformiv
+  (JNIEnv *env, jobject, jint program, jint location, jobject params)
+{
+	void* dataPtr = getDirectBufferPointer( env, params );
+	glGetUniformiv( program, location, (GLint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetUniformLocation
+ * Signature: (ILjava/lang/String;)I
+ */
+JNIEXPORT jint JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetUniformLocation
+  (JNIEnv *env, jobject, jint program, jstring name)
+{
+	const char* cname = getString( env, name );
+	int location = glGetUniformLocation( program, cname );
+	releaseString( env, name, cname );
+	return location;
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetVertexAttribfv
+ * Signature: (IILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetVertexAttribfv
+  (JNIEnv *env, jobject, jint index, jint pname, jobject params)
+{
+	void* dataPtr = getDirectBufferPointer( env, params );
+	glGetVertexAttribfv( index, pname, (GLfloat*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetVertexAttribiv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetVertexAttribiv
+  (JNIEnv *env, jobject, jint index, jint pname, jobject params)
+{
+	void* dataPtr = getDirectBufferPointer( env, params );
+	glGetVertexAttribiv( index, pname, (GLint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetVertexAttribPointerv
+ * Signature: (IILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetVertexAttribPointerv
+  (JNIEnv *env, jobject, jint index, jint pname, jobject pointer)
+{
+	env->ThrowNew(UOEClass, "This method is not supported"); // FIXME won't implement this shit
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glHint
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glHint
+  (JNIEnv *env, jobject, jint target, jint mode)
+{
+	glHint( target, mode );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glIsBuffer
+ * Signature: (I)C
+ */
+JNIEXPORT jboolean JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glIsBuffer
+  (JNIEnv *env, jobject, jint buffer)
+{
+	return glIsBuffer( buffer );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glIsEnabled
+ * Signature: (I)C
+ */
+JNIEXPORT jboolean JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glIsEnabled
+  (JNIEnv *env, jobject, jint cap)
+{
+	return glIsEnabled( cap );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glIsFramebuffer
+ * Signature: (I)C
+ */
+JNIEXPORT jboolean JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glIsFramebuffer
+  (JNIEnv *env, jobject, jint framebuffer)
+{
+	return glIsFramebuffer( framebuffer );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glIsProgram
+ * Signature: (I)C
+ */
+JNIEXPORT jboolean JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glIsProgram
+  (JNIEnv *env, jobject, jint program)
+{
+	return glIsProgram( program );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glIsRenderbuffer
+ * Signature: (I)C
+ */
+JNIEXPORT jboolean JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glIsRenderbuffer
+  (JNIEnv *env, jobject, jint renderbuffer)
+{
+	return glIsRenderbuffer( renderbuffer );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glIsShader
+ * Signature: (I)C
+ */
+JNIEXPORT jboolean JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glIsShader
+  (JNIEnv *env, jobject, jint shader)
+{
+	return glIsShader( shader );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glIsTexture
+ * Signature: (I)C
+ */
+JNIEXPORT jboolean JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glIsTexture
+  (JNIEnv *env, jobject, jint texture)
+{
+	return glIsTexture( texture );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glLineWidth
+ * Signature: (F)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glLineWidth
+  (JNIEnv *env, jobject, jfloat width)
+{
+	glLineWidth( width );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glLinkProgram
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glLinkProgram
+  (JNIEnv *env, jobject, jint program)
+{
+	glLinkProgram( program );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glPixelStorei
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glPixelStorei
+  (JNIEnv *env, jobject, jint pname, jint param)
+{
+	glPixelStorei( pname, param );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glPolygonOffset
+ * Signature: (FF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glPolygonOffset
+  (JNIEnv *env, jobject, jfloat factor, jfloat units)
+{
+	glPolygonOffset( factor, units );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glReadPixels
+ * Signature: (IIIIIILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glReadPixels
+  (JNIEnv *env, jobject, jint x, jint y, jint width, jint height, jint format, jint type, jobject pixels)
+{
+	void* dataPtr = getDirectBufferPointer( env, pixels );
+	glReadPixels( x, y, width, height, format, type, dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glReleaseShaderCompiler
+ * Signature: ()V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glReleaseShaderCompiler
+  (JNIEnv *env, jobject)
+{
+	glReleaseShaderCompiler();
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glRenderbufferStorage
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glRenderbufferStorage
+  (JNIEnv *env, jobject, jint target, jint internalFormat, jint width, jint height)
+{
+	glRenderbufferStorage( target, internalFormat, width, height );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glSampleCoverage
+ * Signature: (FZ)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glSampleCoverage
+  (JNIEnv *env, jobject, jfloat value, jboolean inver)
+{
+	glSampleCoverage( value, inver );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glScissor
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glScissor
+  (JNIEnv *env, jobject, jint x, jint y, jint width, jint height)
+{
+	glScissor( x, y, width, height );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glShaderBinary
+ * Signature: (ILjava/nio/IntBuffer;ILjava/nio/Buffer;I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glShaderBinary
+  (JNIEnv *env, jobject, jint n, jobject shaders, jint binaryformat, jobject binary, jint length)
+{
+	void* shaderPtr = getDirectBufferPointer( env, shaders );
+	void* binaryPtr = getDirectBufferPointer( env, binary );
+	glShaderBinary( n, (GLuint*)shaderPtr, binaryformat, binaryPtr, length );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glShaderSource
+ * Signature: (IILjava/lang/String;Ljava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glShaderSource
+  (JNIEnv *env, jobject, jint shader, jstring string )
+{
+	const char* cstring = getString( env, string );
+	glShaderSource( shader, 1, &cstring, NULL );
+	releaseString( env, string, cstring );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glStencilFunc
+ * Signature: (III)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glStencilFunc
+  (JNIEnv *env, jobject, jint func, jint ref, jint mask)
+{
+	glStencilFunc( func, ref, mask );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glStencilFuncSeparate
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glStencilFuncSeparate
+  (JNIEnv *env, jobject, jint face, jint func, jint ref, jint mask)
+{
+	glStencilFuncSeparate( face, func, ref, mask );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glStencilMask
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glStencilMask
+  (JNIEnv *env, jobject, jint mask)
+{
+	glStencilMask( mask );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glStencilMaskSeparate
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glStencilMaskSeparate
+  (JNIEnv *env, jobject, jint face, jint mask)
+{
+	glStencilMaskSeparate( face, mask );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glStencilOp
+ * Signature: (III)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glStencilOp
+  (JNIEnv *env, jobject, jint fail, jint zFail, jint zpass)
+{
+	glStencilOp( fail, zFail, zpass );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glStencilOpSeparate
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glStencilOpSeparate
+  (JNIEnv *env, jobject, jint face, jint fail, jint zFail, jint zPass)
+{
+	glStencilOpSeparate( face, fail, zFail, zPass );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glTexImage2D
+ * Signature: (IIIIIIIILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glTexImage2D
+  (JNIEnv *env, jobject, jint target, jint level, jint internalformat, jint width, jint height, jint border, jint format, jint type, jobject pixels)
+{
+	void* dataPtr = getDirectBufferPointer( env, pixels );
+	glTexImage2D( target, level, internalformat, width, height, border, format, type, dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glTexParameterf
+ * Signature: (IIF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glTexParameterf
+  (JNIEnv *env, jobject, jint target, jint pname, jfloat param)
+{
+	glTexParameterf( target, pname, param );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glTexParameterfv
+ * Signature: (IILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glTexParameterfv
+  (JNIEnv *env, jobject, jint target, jint pname, jobject params)
+{
+	void* dataPtr = getDirectBufferPointer( env, params );
+	glTexParameterfv( target, pname, (GLfloat*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glTexParameteri
+ * Signature: (III)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glTexParameteri
+  (JNIEnv *env, jobject, jint target, jint pname, jint param)
+{
+	glTexParameteri( target, pname, param );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glTexParameteriv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glTexParameteriv
+  (JNIEnv *env, jobject, jint target, jint pname, jobject params)
+{
+	void* dataPtr = getDirectBufferPointer( env, params );
+	glTexParameteriv( target, pname, (GLint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glTexSubImage2D
+ * Signature: (IIIIIIIILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glTexSubImage2D
+  (JNIEnv *env, jobject, jint target, jint level, jint xoffset, jint yoffset, jint width, jint height, jint format, jint type, jobject pixels)
+{
+	void* dataPtr = getDirectBufferPointer( env, pixels );
+	glTexSubImage2D( target, level, xoffset, yoffset, width, height, format, type, dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glUniform1f
+ * Signature: (IF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glUniform1f
+  (JNIEnv *env, jobject, jint location, jfloat x)
+{
+	glUniform1f( location, x );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glUniform1fv
+ * Signature: (IILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glUniform1fv
+  (JNIEnv *env, jobject, jint location, jint count, jobject v)
+{
+	void* dataPtr = getDirectBufferPointer( env, v );
+	glUniform1fv( location, count, (GLfloat*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glUniform1i
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glUniform1i
+  (JNIEnv *env, jobject, jint location, jint x)
+{
+	glUniform1i( location, x );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glUniform1iv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glUniform1iv
+  (JNIEnv *env, jobject, jint location, jint count, jobject v)
+{
+	void* dataPtr = getDirectBufferPointer( env, v );
+	glUniform1iv( location, count, (GLint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glUniform2f
+ * Signature: (IFF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glUniform2f
+  (JNIEnv *env, jobject, jint location, jfloat x, jfloat y)
+{
+	glUniform2f( location, x, y );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glUniform2fv
+ * Signature: (IILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glUniform2fv
+  (JNIEnv *env, jobject, jint location, jint count, jobject v)
+{
+	void* dataPtr = getDirectBufferPointer( env, v );
+	glUniform2fv( location, count, (GLfloat*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glUniform2i
+ * Signature: (III)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glUniform2i
+  (JNIEnv *env, jobject, jint location, jint x, jint y)
+{
+	glUniform2i( location, x, y );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glUniform2iv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glUniform2iv
+  (JNIEnv *env, jobject, jint location, jint count, jobject v)
+{
+	void* dataPtr = getDirectBufferPointer( env, v );
+	glUniform2iv( location, count, (GLint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glUniform3f
+ * Signature: (IFFF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glUniform3f
+  (JNIEnv *env, jobject, jint location, jfloat x, jfloat y, jfloat z)
+{
+	glUniform3f( location, x, y, z );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glUniform3fv
+ * Signature: (IILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glUniform3fv
+  (JNIEnv *env, jobject, jint location, jint count, jobject v)
+{
+	void* dataPtr = getDirectBufferPointer( env, v );
+	glUniform3fv( location, count, (GLfloat*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glUniform3i
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glUniform3i
+  (JNIEnv *env, jobject, jint location, jint x, jint y, jint z)
+{
+	glUniform3i( location, x, y, z );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glUniform3iv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glUniform3iv
+  (JNIEnv *env, jobject, jint location, jint count, jobject v)
+{
+	void* dataPtr = getDirectBufferPointer( env, v );
+	glUniform3iv( location, count, (GLint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glUniform4f
+ * Signature: (IFFFF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glUniform4f
+  (JNIEnv *env, jobject, jint location, jfloat x, jfloat y, jfloat z, jfloat w)
+{
+	glUniform4f( location, x, y, z, w );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glUniform4fv
+ * Signature: (IILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glUniform4fv
+  (JNIEnv *env, jobject, jint location, jint count, jobject v)
+{
+	void* dataPtr = getDirectBufferPointer( env, v );
+	glUniform4fv( location, count, (GLfloat*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glUniform4i
+ * Signature: (IIIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glUniform4i
+  (JNIEnv *env, jobject, jint location, jint x, jint y, jint z, jint w)
+{
+	glUniform4i( location, x, y, z, w );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glUniform4iv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glUniform4iv
+  (JNIEnv *env, jobject, jint location, jint count, jobject v)
+{
+	void* dataPtr = getDirectBufferPointer( env, v );
+	glUniform4iv( location, count, (GLint*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glUniformMatrix2fv
+ * Signature: (IIZLjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glUniformMatrix2fv
+  (JNIEnv *env, jobject, jint location, jint count, jboolean transpose, jobject value)
+{
+	void* dataPtr = getDirectBufferPointer( env, value );
+	glUniformMatrix2fv( location, count, transpose, (GLfloat*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glUniformMatrix3fv
+ * Signature: (IIZLjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glUniformMatrix3fv
+  (JNIEnv *env, jobject, jint location, jint count, jboolean transpose, jobject value)
+{
+	void* dataPtr = getDirectBufferPointer( env, value );
+	glUniformMatrix3fv( location, count, transpose, (GLfloat*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glUniformMatrix4fv
+ * Signature: (IIZLjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glUniformMatrix4fv
+  (JNIEnv *env, jobject, jint location, jint count, jboolean transpose, jobject value)
+{
+	void* dataPtr = getDirectBufferPointer( env, value );
+	glUniformMatrix4fv( location, count, transpose, (GLfloat*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glUseProgram
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glUseProgram
+  (JNIEnv *env, jobject, jint program)
+{
+	glUseProgram( program );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glValidateProgram
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glValidateProgram
+  (JNIEnv *env, jobject, jint program)
+{
+	glValidateProgram( program );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glVertexAttrib1f
+ * Signature: (IF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glVertexAttrib1f
+  (JNIEnv *env, jobject, jint indx, jfloat x)
+{
+	glVertexAttrib1f( indx, x );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glVertexAttrib1fv
+ * Signature: (ILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glVertexAttrib1fv
+  (JNIEnv *env, jobject, jint indx, jobject values)
+{
+	void* dataPtr = getDirectBufferPointer( env, values );
+	glVertexAttrib1fv( indx, (GLfloat*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glVertexAttrib2f
+ * Signature: (IFF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glVertexAttrib2f
+  (JNIEnv *env, jobject, jint indx, jfloat x, jfloat y)
+{
+	glVertexAttrib2f( indx, x, y );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glVertexAttrib2fv
+ * Signature: (ILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glVertexAttrib2fv
+  (JNIEnv *env, jobject, jint indx, jobject values)
+{
+	void* dataPtr = getDirectBufferPointer( env, values );
+	glVertexAttrib2fv( indx, (GLfloat*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glVertexAttrib3f
+ * Signature: (IFFF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glVertexAttrib3f
+  (JNIEnv *env, jobject, jint indx, jfloat x, jfloat y, jfloat z)
+{
+	glVertexAttrib3f( indx, x, y, z );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glVertexAttrib3fv
+ * Signature: (ILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glVertexAttrib3fv
+  (JNIEnv *env, jobject, jint indx, jobject values)
+{
+	void* dataPtr = getDirectBufferPointer( env, values );
+	glVertexAttrib3fv( indx, (GLfloat*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glVertexAttrib4f
+ * Signature: (IFFFF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glVertexAttrib4f
+  (JNIEnv *env, jobject, jint indx, jfloat x, jfloat y, jfloat z, jfloat w)
+{
+	glVertexAttrib4f( indx, x, y, z, w );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glVertexAttrib4fv
+ * Signature: (ILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glVertexAttrib4fv
+  (JNIEnv *env, jobject, jint indx, jobject values)
+{
+	void* dataPtr = getDirectBufferPointer( env, values );
+	glVertexAttrib4fv( indx, (GLfloat*)dataPtr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glVertexAttribPointer
+ * Signature: (IIIZILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glVertexAttribPointer__IIIZILjava_nio_Buffer_2
+  (JNIEnv *env, jobject, jint indx, jint size, jint type, jboolean normalized, jint stride, jobject ptr)
+{
+	void* dataPtr = getDirectBufferPointer( env, ptr );
+	glVertexAttribPointer( indx, size, type, normalized, stride, dataPtr );
+}
+
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glVertexAttribPointer__IIIZII
+  (JNIEnv *, jobject, jint indx, jint size, jint type, jboolean normalized, jint stride, jint ptr)
+{
+	glVertexAttribPointer( indx, size, type, normalized, stride, (const void*)ptr );
+}
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glViewport
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glViewport
+  (JNIEnv *env, jobject, jint x, jint y, jint width, jint height)
+{
+	glViewport( x, y, width, height );
+}
+#endif
+#endif
diff --git a/gdx/jni/iosgl/iosgl20.h b/gdx/jni/iosgl/iosgl20.h
new file mode 100644
index 0000000..634889f
--- /dev/null
+++ b/gdx/jni/iosgl/iosgl20.h
@@ -0,0 +1,1173 @@
+/* DO NOT EDIT THIS FILE - it is machine generated */
+#include <jni.h>
+/* Header for class com_badlogic_gdx_backends_iosrobovm_IOSGLES20 */
+
+#ifndef _Included_com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+#define _Included_com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+#ifdef __cplusplus
+extern "C" {
+#endif
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    init
+ * Signature: ()V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_init
+  (JNIEnv *, jclass);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glActiveTexture
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glActiveTexture
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glAttachShader
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glAttachShader
+  (JNIEnv *, jobject, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glBindAttribLocation
+ * Signature: (IILjava/lang/String;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glBindAttribLocation
+  (JNIEnv *, jobject, jint, jint, jstring);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glBindBuffer
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glBindBuffer
+  (JNIEnv *, jobject, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glBindFramebuffer
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glBindFramebuffer
+  (JNIEnv *, jobject, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glBindRenderbuffer
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glBindRenderbuffer
+  (JNIEnv *, jobject, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glBindTexture
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glBindTexture
+  (JNIEnv *, jobject, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glBlendColor
+ * Signature: (FFFF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glBlendColor
+  (JNIEnv *, jobject, jfloat, jfloat, jfloat, jfloat);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glBlendEquation
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glBlendEquation
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glBlendEquationSeparate
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glBlendEquationSeparate
+  (JNIEnv *, jobject, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glBlendFunc
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glBlendFunc
+  (JNIEnv *, jobject, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glBlendFuncSeparate
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glBlendFuncSeparate
+  (JNIEnv *, jobject, jint, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glBufferData
+ * Signature: (IILjava/nio/Buffer;I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glBufferData
+  (JNIEnv *, jobject, jint, jint, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glBufferSubData
+ * Signature: (IIILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glBufferSubData
+  (JNIEnv *, jobject, jint, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glCheckFramebufferStatus
+ * Signature: (I)I
+ */
+JNIEXPORT jint JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glCheckFramebufferStatus
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glClear
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glClear
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glClearColor
+ * Signature: (FFFF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glClearColor
+  (JNIEnv *, jobject, jfloat, jfloat, jfloat, jfloat);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glClearDepthf
+ * Signature: (F)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glClearDepthf
+  (JNIEnv *, jobject, jfloat);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glClearStencil
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glClearStencil
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glColorMask
+ * Signature: (ZZZZ)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glColorMask
+  (JNIEnv *, jobject, jboolean, jboolean, jboolean, jboolean);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glCompileShader
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glCompileShader
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glCompressedTexImage2D
+ * Signature: (IIIIIIILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glCompressedTexImage2D
+  (JNIEnv *, jobject, jint, jint, jint, jint, jint, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glCompressedTexSubImage2D
+ * Signature: (IIIIIIIILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glCompressedTexSubImage2D
+  (JNIEnv *, jobject, jint, jint, jint, jint, jint, jint, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glCopyTexImage2D
+ * Signature: (IIIIIIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glCopyTexImage2D
+  (JNIEnv *, jobject, jint, jint, jint, jint, jint, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glCopyTexSubImage2D
+ * Signature: (IIIIIIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glCopyTexSubImage2D
+  (JNIEnv *, jobject, jint, jint, jint, jint, jint, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glCreateProgram
+ * Signature: ()I
+ */
+JNIEXPORT jint JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glCreateProgram
+  (JNIEnv *, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glCreateShader
+ * Signature: (I)I
+ */
+JNIEXPORT jint JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glCreateShader
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glCullFace
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glCullFace
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glDeleteBuffers
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glDeleteBuffers
+  (JNIEnv *, jobject, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glDeleteFramebuffers
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glDeleteFramebuffers
+  (JNIEnv *, jobject, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glDeleteProgram
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glDeleteProgram
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glDeleteRenderbuffers
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glDeleteRenderbuffers
+  (JNIEnv *, jobject, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glDeleteShader
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glDeleteShader
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glDeleteTextures
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glDeleteTextures
+  (JNIEnv *, jobject, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glDepthFunc
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glDepthFunc
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glDepthMask
+ * Signature: (Z)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glDepthMask
+  (JNIEnv *, jobject, jboolean);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glDepthRangef
+ * Signature: (FF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glDepthRangef
+  (JNIEnv *, jobject, jfloat, jfloat);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glDetachShader
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glDetachShader
+  (JNIEnv *, jobject, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glDisable
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glDisable
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glDisableVertexAttribArray
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glDisableVertexAttribArray
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glDrawArrays
+ * Signature: (III)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glDrawArrays
+  (JNIEnv *, jobject, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glDrawElements
+ * Signature: (IIILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glDrawElements__IIILjava_nio_Buffer_2
+  (JNIEnv *, jobject, jint, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glDrawElements
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glDrawElements__IIII
+  (JNIEnv *, jobject, jint, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glEnable
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glEnable
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glEnableVertexAttribArray
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glEnableVertexAttribArray
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glFinish
+ * Signature: ()V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glFinish
+  (JNIEnv *, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glFlush
+ * Signature: ()V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glFlush
+  (JNIEnv *, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glFramebufferRenderbuffer
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glFramebufferRenderbuffer
+  (JNIEnv *, jobject, jint, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glFramebufferTexture2D
+ * Signature: (IIIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glFramebufferTexture2D
+  (JNIEnv *, jobject, jint, jint, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glFrontFace
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glFrontFace
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGenBuffers
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGenBuffers
+  (JNIEnv *, jobject, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGenerateMipmap
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGenerateMipmap
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGenFramebuffers
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGenFramebuffers
+  (JNIEnv *, jobject, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGenRenderbuffers
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGenRenderbuffers
+  (JNIEnv *, jobject, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGenTextures
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGenTextures
+  (JNIEnv *, jobject, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetActiveAttrib
+ * Signature: (IILjava/nio/IntBuffer;Ljava/nio/Buffer;)Ljava/lang/String;
+ */
+JNIEXPORT jstring JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetActiveAttrib
+  (JNIEnv *, jobject, jint, jint, jobject, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetActiveUniform
+ * Signature: (IILjava/nio/IntBuffer;Ljava/nio/Buffer;)Ljava/lang/String;
+ */
+JNIEXPORT jstring JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetActiveUniform
+  (JNIEnv *, jobject, jint, jint, jobject, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetAttachedShaders
+ * Signature: (IILjava/nio/Buffer;Ljava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetAttachedShaders
+  (JNIEnv *, jobject, jint, jint, jobject, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetAttribLocation
+ * Signature: (ILjava/lang/String;)I
+ */
+JNIEXPORT jint JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetAttribLocation
+  (JNIEnv *, jobject, jint, jstring);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetBooleanv
+ * Signature: (ILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetBooleanv
+  (JNIEnv *, jobject, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetBufferParameteriv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetBufferParameteriv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetError
+ * Signature: ()I
+ */
+JNIEXPORT jint JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetError
+  (JNIEnv *, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetFloatv
+ * Signature: (ILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetFloatv
+  (JNIEnv *, jobject, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetFramebufferAttachmentParameteriv
+ * Signature: (IIILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetFramebufferAttachmentParameteriv
+  (JNIEnv *, jobject, jint, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetIntegerv
+ * Signature: (ILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetIntegerv
+  (JNIEnv *, jobject, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetProgramiv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetProgramiv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetProgramInfoLog
+ * Signature: (I)Ljava/lang/String;
+ */
+JNIEXPORT jstring JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetProgramInfoLog
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetRenderbufferParameteriv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetRenderbufferParameteriv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetShaderiv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetShaderiv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetShaderInfoLog
+ * Signature: (I)Ljava/lang/String;
+ */
+JNIEXPORT jstring JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetShaderInfoLog
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetShaderPrecisionFormat
+ * Signature: (IILjava/nio/IntBuffer;Ljava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetShaderPrecisionFormat
+  (JNIEnv *, jobject, jint, jint, jobject, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetShaderSource
+ * Signature: (IILjava/nio/Buffer;Ljava/lang/String;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetShaderSource
+  (JNIEnv *, jobject, jint, jint, jobject, jstring);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetString
+ * Signature: (I)Ljava/lang/String;
+ */
+JNIEXPORT jstring JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetString
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetTexParameterfv
+ * Signature: (IILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetTexParameterfv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetTexParameteriv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetTexParameteriv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetUniformfv
+ * Signature: (IILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetUniformfv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetUniformiv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetUniformiv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetUniformLocation
+ * Signature: (ILjava/lang/String;)I
+ */
+JNIEXPORT jint JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetUniformLocation
+  (JNIEnv *, jobject, jint, jstring);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetVertexAttribfv
+ * Signature: (IILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetVertexAttribfv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetVertexAttribiv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetVertexAttribiv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glGetVertexAttribPointerv
+ * Signature: (IILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glGetVertexAttribPointerv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glHint
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glHint
+  (JNIEnv *, jobject, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glIsBuffer
+ * Signature: (I)Z
+ */
+JNIEXPORT jboolean JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glIsBuffer
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glIsEnabled
+ * Signature: (I)Z
+ */
+JNIEXPORT jboolean JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glIsEnabled
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glIsFramebuffer
+ * Signature: (I)Z
+ */
+JNIEXPORT jboolean JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glIsFramebuffer
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glIsProgram
+ * Signature: (I)Z
+ */
+JNIEXPORT jboolean JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glIsProgram
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glIsRenderbuffer
+ * Signature: (I)Z
+ */
+JNIEXPORT jboolean JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glIsRenderbuffer
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glIsShader
+ * Signature: (I)Z
+ */
+JNIEXPORT jboolean JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glIsShader
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glIsTexture
+ * Signature: (I)Z
+ */
+JNIEXPORT jboolean JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glIsTexture
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glLineWidth
+ * Signature: (F)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glLineWidth
+  (JNIEnv *, jobject, jfloat);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glLinkProgram
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glLinkProgram
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glPixelStorei
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glPixelStorei
+  (JNIEnv *, jobject, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glPolygonOffset
+ * Signature: (FF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glPolygonOffset
+  (JNIEnv *, jobject, jfloat, jfloat);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glReadPixels
+ * Signature: (IIIIIILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glReadPixels
+  (JNIEnv *, jobject, jint, jint, jint, jint, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glReleaseShaderCompiler
+ * Signature: ()V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glReleaseShaderCompiler
+  (JNIEnv *, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glRenderbufferStorage
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glRenderbufferStorage
+  (JNIEnv *, jobject, jint, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glSampleCoverage
+ * Signature: (FZ)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glSampleCoverage
+  (JNIEnv *, jobject, jfloat, jboolean);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glScissor
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glScissor
+  (JNIEnv *, jobject, jint, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glShaderBinary
+ * Signature: (ILjava/nio/IntBuffer;ILjava/nio/Buffer;I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glShaderBinary
+  (JNIEnv *, jobject, jint, jobject, jint, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glShaderSource
+ * Signature: (ILjava/lang/String;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glShaderSource
+  (JNIEnv *, jobject, jint, jstring);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glStencilFunc
+ * Signature: (III)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glStencilFunc
+  (JNIEnv *, jobject, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glStencilFuncSeparate
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glStencilFuncSeparate
+  (JNIEnv *, jobject, jint, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glStencilMask
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glStencilMask
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glStencilMaskSeparate
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glStencilMaskSeparate
+  (JNIEnv *, jobject, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glStencilOp
+ * Signature: (III)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glStencilOp
+  (JNIEnv *, jobject, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glStencilOpSeparate
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glStencilOpSeparate
+  (JNIEnv *, jobject, jint, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glTexImage2D
+ * Signature: (IIIIIIIILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glTexImage2D
+  (JNIEnv *, jobject, jint, jint, jint, jint, jint, jint, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glTexParameterf
+ * Signature: (IIF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glTexParameterf
+  (JNIEnv *, jobject, jint, jint, jfloat);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glTexParameterfv
+ * Signature: (IILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glTexParameterfv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glTexParameteri
+ * Signature: (III)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glTexParameteri
+  (JNIEnv *, jobject, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glTexParameteriv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glTexParameteriv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glTexSubImage2D
+ * Signature: (IIIIIIIILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glTexSubImage2D
+  (JNIEnv *, jobject, jint, jint, jint, jint, jint, jint, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glUniform1f
+ * Signature: (IF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glUniform1f
+  (JNIEnv *, jobject, jint, jfloat);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glUniform1fv
+ * Signature: (IILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glUniform1fv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glUniform1i
+ * Signature: (II)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glUniform1i
+  (JNIEnv *, jobject, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glUniform1iv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glUniform1iv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glUniform2f
+ * Signature: (IFF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glUniform2f
+  (JNIEnv *, jobject, jint, jfloat, jfloat);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glUniform2fv
+ * Signature: (IILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glUniform2fv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glUniform2i
+ * Signature: (III)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glUniform2i
+  (JNIEnv *, jobject, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glUniform2iv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glUniform2iv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glUniform3f
+ * Signature: (IFFF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glUniform3f
+  (JNIEnv *, jobject, jint, jfloat, jfloat, jfloat);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glUniform3fv
+ * Signature: (IILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glUniform3fv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glUniform3i
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glUniform3i
+  (JNIEnv *, jobject, jint, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glUniform3iv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glUniform3iv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glUniform4f
+ * Signature: (IFFFF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glUniform4f
+  (JNIEnv *, jobject, jint, jfloat, jfloat, jfloat, jfloat);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glUniform4fv
+ * Signature: (IILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glUniform4fv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glUniform4i
+ * Signature: (IIIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glUniform4i
+  (JNIEnv *, jobject, jint, jint, jint, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glUniform4iv
+ * Signature: (IILjava/nio/IntBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glUniform4iv
+  (JNIEnv *, jobject, jint, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glUniformMatrix2fv
+ * Signature: (IIZLjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glUniformMatrix2fv
+  (JNIEnv *, jobject, jint, jint, jboolean, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glUniformMatrix3fv
+ * Signature: (IIZLjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glUniformMatrix3fv
+  (JNIEnv *, jobject, jint, jint, jboolean, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glUniformMatrix4fv
+ * Signature: (IIZLjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glUniformMatrix4fv
+  (JNIEnv *, jobject, jint, jint, jboolean, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glUseProgram
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glUseProgram
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glValidateProgram
+ * Signature: (I)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glValidateProgram
+  (JNIEnv *, jobject, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glVertexAttrib1f
+ * Signature: (IF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glVertexAttrib1f
+  (JNIEnv *, jobject, jint, jfloat);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glVertexAttrib1fv
+ * Signature: (ILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glVertexAttrib1fv
+  (JNIEnv *, jobject, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glVertexAttrib2f
+ * Signature: (IFF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glVertexAttrib2f
+  (JNIEnv *, jobject, jint, jfloat, jfloat);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glVertexAttrib2fv
+ * Signature: (ILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glVertexAttrib2fv
+  (JNIEnv *, jobject, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glVertexAttrib3f
+ * Signature: (IFFF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glVertexAttrib3f
+  (JNIEnv *, jobject, jint, jfloat, jfloat, jfloat);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glVertexAttrib3fv
+ * Signature: (ILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glVertexAttrib3fv
+  (JNIEnv *, jobject, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glVertexAttrib4f
+ * Signature: (IFFFF)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glVertexAttrib4f
+  (JNIEnv *, jobject, jint, jfloat, jfloat, jfloat, jfloat);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glVertexAttrib4fv
+ * Signature: (ILjava/nio/FloatBuffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glVertexAttrib4fv
+  (JNIEnv *, jobject, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glVertexAttribPointer
+ * Signature: (IIIZILjava/nio/Buffer;)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glVertexAttribPointer__IIIZILjava_nio_Buffer_2
+  (JNIEnv *, jobject, jint, jint, jint, jboolean, jint, jobject);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glVertexAttribPointer
+ * Signature: (IIIZII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glVertexAttribPointer__IIIZII
+  (JNIEnv *, jobject, jint, jint, jint, jboolean, jint, jint);
+
+/*
+ * Class:     com_badlogic_gdx_backends_iosrobovm_IOSGLES20
+ * Method:    glViewport
+ * Signature: (IIII)V
+ */
+JNIEXPORT void JNICALL Java_com_badlogic_gdx_backends_iosrobovm_IOSGLES20_glViewport
+  (JNIEnv *, jobject, jint, jint, jint, jint);
+
+#ifdef __cplusplus
+}
+#endif
+#endif
diff --git a/gdx/src/com/badlogic/gdx.gwt.xml b/gdx/src/com/badlogic/gdx.gwt.xml
index 98b9ef9..e6da496 100644
--- a/gdx/src/com/badlogic/gdx.gwt.xml
+++ b/gdx/src/com/badlogic/gdx.gwt.xml
@@ -160,13 +160,20 @@
 				
 	<!-- graphics/g3d/shaders -->
 		<include name="graphics/g3d/shaders/BaseShader.java"/>
+		<include name="graphics/g3d/shaders/CompositeShader.java"/>
 		<include name="graphics/g3d/shaders/DefaultShader.java"/>
 		<include name="graphics/g3d/shaders/GLES10Shader.java"/>
 		
+	<!-- graphics/g3d/shaders/subshaders -->
+		<include name="graphics/g3d/shaders/subshaders/BaseSubShader.java"/>
+		<include name="graphics/g3d/shaders/subshaders/DiffuseColorTextureShader.java"/>
+		<include name="graphics/g3d/shaders/subshaders/SubShader.java"/>
+		<include name="graphics/g3d/shaders/subshaders/TransformShader.java"/>
 		
 	<!-- graphics/g3d/utils -->
 		<include name="graphics/g3d/utils/BaseShaderProvider.java"/>
 		<include name="graphics/g3d/utils/CameraInputController.java"/>
+		<include name="graphics/g3d/utils/CompositeShaderProvider.java"/>
 		<include name="graphics/g3d/utils/DefaultRenderableSorter.java"/>
 		<include name="graphics/g3d/utils/DefaultShaderProvider.java"/>
 		<include name="graphics/g3d/utils/DefaultTextureBinder.java"/>
@@ -420,6 +427,7 @@
 		<include name="utils/LongArray.java"/>
 		<include name="utils/LongMap.java"/>
 		<include name="utils/NumberUtils.java"/> <!-- Emulated -->
+		<include name="utils/ObjectFloatMap.java"/>
 		<include name="utils/ObjectIntMap.java"/>
 		<include name="utils/ObjectMap.java"/>
 		<include name="utils/OrderedMap.java"/>
@@ -476,4 +484,4 @@
 	<extend-configuration-property name="gdx.files.classpath" value="com/badlogic/gdx/graphics/g3d/shaders/default.vertex.glsl" />
 	<extend-configuration-property name="gdx.files.classpath" value="com/badlogic/gdx/utils/arial-15.fnt" />
 	<extend-configuration-property name="gdx.files.classpath" value="com/badlogic/gdx/utils/arial-15.png" />
-</module>
\ No newline at end of file
+</module>
diff --git a/gdx/src/com/badlogic/gdx/assets/AssetLoadingTask.java b/gdx/src/com/badlogic/gdx/assets/AssetLoadingTask.java
index ebdf9ab..8fb6c23 100644
--- a/gdx/src/com/badlogic/gdx/assets/AssetLoadingTask.java
+++ b/gdx/src/com/badlogic/gdx/assets/AssetLoadingTask.java
@@ -41,15 +41,15 @@ class AssetLoadingTask implements Callable<Void> {
 	final long startTime;
 
 	volatile boolean asyncDone = false;
-	boolean dependenciesLoaded = false;
-	Array<AssetDescriptor> dependencies;
-	Future<Void> depsFuture = null;
+	volatile boolean dependenciesLoaded = false;
+	volatile Array<AssetDescriptor> dependencies;
+	volatile Future<Void> depsFuture = null;
 
-	Future<Void> loadFuture = null;
-	Object asset = null;
+	volatile Future<Void> loadFuture = null;
+	volatile Object asset = null;
 
 	int ticks = 0;
-	boolean cancel = false;
+	volatile boolean cancel = false;
 
 	public AssetLoadingTask (AssetManager manager, AssetDescriptor assetDesc, AssetLoader loader, ExecutorService threadPool) {
 		this.manager = manager;
@@ -66,9 +66,7 @@ class AssetLoadingTask implements Callable<Void> {
 		if (dependenciesLoaded == false) {
 			dependencies = asyncLoader.getDependencies(assetDesc.fileName, assetDesc.params);
 			if (dependencies != null) {
-				for (AssetDescriptor desc : dependencies) {
-					manager.injectDependency(assetDesc.fileName, desc);
-				}
+				manager.injectDependencies(assetDesc.fileName, dependencies);
 			} else {
 				// if we have no dependencies, we load the async part of the task immediately.
 				asyncLoader.loadAsync(manager, assetDesc.fileName, assetDesc.params);
@@ -105,9 +103,7 @@ class AssetLoadingTask implements Callable<Void> {
 				asset = syncLoader.load(manager, assetDesc.fileName, assetDesc.params);
 				return;
 			}
-			for (AssetDescriptor desc : dependencies) {
-				manager.injectDependency(assetDesc.fileName, desc);
-			}
+			manager.injectDependencies(assetDesc.fileName, dependencies);
 		} else {
 			asset = syncLoader.load(manager, assetDesc.fileName, assetDesc.params);
 		}
diff --git a/gdx/src/com/badlogic/gdx/assets/AssetManager.java b/gdx/src/com/badlogic/gdx/assets/AssetManager.java
index 4ae0a4e..d697e29 100644
--- a/gdx/src/com/badlogic/gdx/assets/AssetManager.java
+++ b/gdx/src/com/badlogic/gdx/assets/AssetManager.java
@@ -369,7 +369,13 @@ public class AssetManager implements Disposable {
 		log.debug("Loading complete.");
 	}
 
-	synchronized void injectDependency (String parentAssetFilename, AssetDescriptor dependendAssetDesc) {
+	synchronized void injectDependencies(String parentAssetFilename, Array<AssetDescriptor> dependendAssetDescs) {
+		for(AssetDescriptor desc: dependendAssetDescs) {
+			injectDependency(parentAssetFilename, desc);
+		}
+	}
+	
+	private synchronized void injectDependency (String parentAssetFilename, AssetDescriptor dependendAssetDesc) {
 		// add the asset as a dependency of the parent asset
 		Array<String> dependencies = assetDependencies.get(parentAssetFilename);
 		if (dependencies == null) {
diff --git a/gdx/src/com/badlogic/gdx/assets/loaders/ModelLoader.java b/gdx/src/com/badlogic/gdx/assets/loaders/ModelLoader.java
index 53a3469..eba7b52 100644
--- a/gdx/src/com/badlogic/gdx/assets/loaders/ModelLoader.java
+++ b/gdx/src/com/badlogic/gdx/assets/loaders/ModelLoader.java
@@ -1,6 +1,7 @@
 package com.badlogic.gdx.assets.loaders;
 
-import com.badlogic.gdx.Gdx;
+import java.util.Iterator;
+
 import com.badlogic.gdx.assets.AssetDescriptor;
 import com.badlogic.gdx.assets.AssetLoaderParameters;
 import com.badlogic.gdx.assets.AssetManager;
@@ -12,6 +13,7 @@ import com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial;
 import com.badlogic.gdx.graphics.g3d.model.data.ModelTexture;
 import com.badlogic.gdx.graphics.g3d.utils.TextureProvider;
 import com.badlogic.gdx.utils.Array;
+import com.badlogic.gdx.utils.Disposable;
 import com.badlogic.gdx.utils.ObjectMap;
 
 public abstract class ModelLoader<P extends AssetLoaderParameters<Model>> extends AsynchronousAssetLoader<Model, P> {
@@ -91,6 +93,15 @@ public abstract class ModelLoader<P extends AssetLoaderParameters<Model>> extend
 		if (data == null)
 			return null;
 		final Model result = new Model(data, new TextureProvider.AssetTextureProvider(manager));
+		// need to remove the textures from the managed disposables, or else ref counting
+		// doesn't work!
+		Iterator<Disposable> disposables = result.getManagedDisposables().iterator();
+		while(disposables.hasNext()) {
+			Disposable disposable = disposables.next();
+			if(disposable instanceof Texture) {
+				disposables.remove();
+			}
+		}
 		data = null;
 		return result;
 	}
diff --git a/gdx/src/com/badlogic/gdx/assets/loaders/TextureLoader.java b/gdx/src/com/badlogic/gdx/assets/loaders/TextureLoader.java
index 416215d..77781a5 100644
--- a/gdx/src/com/badlogic/gdx/assets/loaders/TextureLoader.java
+++ b/gdx/src/com/badlogic/gdx/assets/loaders/TextureLoader.java
@@ -44,9 +44,7 @@ public class TextureLoader extends AsynchronousAssetLoader<Texture, TextureLoade
 		TextureData data;
 		Texture texture;
 	};
-// can't use objectmap, because filename is not guaranteed to be unique at this stage (however, that's pure theoretical, so might change)
-	TextureLoaderInfo info = new TextureLoaderInfo(); // REMOVE THIS, replace by:
-	// FIXME private final Array<TextureLoaderInfo> items = new Array<TextureLoaderInfo>();
+	TextureLoaderInfo info = new TextureLoaderInfo();
 
 	public TextureLoader (FileHandleResolver resolver) {
 		super(resolver);
@@ -54,7 +52,6 @@ public class TextureLoader extends AsynchronousAssetLoader<Texture, TextureLoade
 
 	@Override
 	public void loadAsync (AssetManager manager, String fileName, TextureParameter parameter) {
-		// FIXME TextureLoaderInfo info = new TextureLoaderInfo();
 		info.filename = fileName;
 		if (parameter == null || (parameter != null && parameter.textureData == null)) {
 			Pixmap pixmap = null;
@@ -83,23 +80,10 @@ public class TextureLoader extends AsynchronousAssetLoader<Texture, TextureLoade
 			if (!info.data.isPrepared()) info.data.prepare();
 			info.texture = parameter.texture;
 		}
-		//FIXME synchronized(items) {
-			//items.add(info);			
-		//}
 	}
 
 	@Override
 	public Texture loadSync (AssetManager manager, String fileName, TextureParameter parameter) {
-// FIXME		TextureLoaderInfo info = null;
-//		synchronized(items) {
-//			for (int i = 0; i < items.size; i++) {
-//				if (items.get(i).filename.equals(fileName)) {
-//					info = items.get(i);
-//					items.removeIndex(i);
-//					break;
-//				}
-//			}
-//		}
 		if (info == null)
 			return null;
 		Texture texture = info.texture;
diff --git a/gdx/src/com/badlogic/gdx/graphics/Color.java b/gdx/src/com/badlogic/gdx/graphics/Color.java
index 134852e..40f36cf 100644
--- a/gdx/src/com/badlogic/gdx/graphics/Color.java
+++ b/gdx/src/com/badlogic/gdx/graphics/Color.java
@@ -38,8 +38,7 @@ public class Color {
 	public static final Color MAGENTA = new Color(1, 0, 1, 1);
 	public static final Color CYAN = new Color(0, 1, 1, 1);
 
-	@Deprecated
-	public static Color tmp = new Color();
+	@Deprecated public static Color tmp = new Color();
 
 	/** the red, green, blue and alpha components **/
 	public float r, g, b, a;
@@ -48,6 +47,11 @@ public class Color {
 	public Color () {
 	}
 
+	/** @see #rgba8888ToColor(Color, int) */
+	public Color (int rgba8888) {
+		rgba8888ToColor(this, rgba8888);
+	}
+
 	/** Constructor, sets the components of the color
 	 * 
 	 * @param r the red component
@@ -157,6 +161,13 @@ public class Color {
 		return clamp();
 	}
 
+	/** @return this Color for chaining
+	 * @see #rgba8888ToColor(Color, int) */
+	public Color set (int rgba) {
+		rgba8888ToColor(this, rgba);
+		return this;
+	}
+
 	/** @return this Color for chaining */
 	public Color add (float r, float g, float b, float a) {
 		this.r += r;
@@ -183,29 +194,29 @@ public class Color {
 		this.a *= a;
 		return clamp();
 	}
-	
-	/** Linearly interpolates between this color and the target color by t which is in the range [0,1]. 
-	 * The result is stored in this color.
+
+	/** Linearly interpolates between this color and the target color by t which is in the range [0,1]. The result is stored in this
+	 * color.
 	 * @param target The target color
 	 * @param t The interpolation coefficient
 	 * @return This color for chaining. */
-	public Color lerp(final Color target, final float t) {
+	public Color lerp (final Color target, final float t) {
 		this.r += t * (target.r - this.r);
 		this.g += t * (target.g - this.g);
 		this.b += t * (target.b - this.b);
 		this.a += t * (target.a - this.a);
 		return clamp();
 	}
-	
-	/** Linearly interpolates between this color and the target color by t which is in the range [0,1]. 
-	 * The result is stored in this color.
+
+	/** Linearly interpolates between this color and the target color by t which is in the range [0,1]. The result is stored in this
+	 * color.
 	 * @param r The red component of the target color
 	 * @param g The green component of the target color
 	 * @param b The blue component of the target color
 	 * @param a The alpha component of the target color
 	 * @param t The interpolation coefficient
 	 * @return This color for chaining. */
-	public Color lerp(final float r, final float g, final float b, final float a, final float t) {
+	public Color lerp (final float r, final float g, final float b, final float a, final float t) {
 		this.r += t * (r - this.r);
 		this.g += t * (g - this.g);
 		this.b += t * (b - this.b);
@@ -371,7 +382,7 @@ public class Color {
 		color.b = ((value & 0x000000ff)) / 255f;
 	}
 
-	/** Sets the Color components using the specified integer value in the format RGBA8888. This is inverse to the rgb8888(r, g, b,
+	/** Sets the Color components using the specified integer value in the format RGBA8888. This is inverse to the rgba8888(r, g, b,
 	 * a) method.
 	 * 
 	 * @param color The Color to be modified.
diff --git a/gdx/src/com/badlogic/gdx/graphics/Mesh.java b/gdx/src/com/badlogic/gdx/graphics/Mesh.java
index 0930672..63aa44f 100644
--- a/gdx/src/com/badlogic/gdx/graphics/Mesh.java
+++ b/gdx/src/com/badlogic/gdx/graphics/Mesh.java
@@ -680,12 +680,31 @@ public class Mesh implements Disposable {
 		return extendBoundingBox(out.inf(), offset, count);
 	}
 	
+	/** Calculate the {@link BoundingBox} of the specified part.
+	 * @param out the bounding box to store the result in. 
+	 * @param offset the start index of the part.
+	 * @param count the amount of indices the part contains. 
+	 * @return the value specified by out. */
+	public BoundingBox calculateBoundingBox(final BoundingBox out, int offset, int count, final Matrix4 transform) {
+		return extendBoundingBox(out.inf(), offset, count, transform);
+	}
+
 	/** Extends the specified {@link BoundingBox} with the specified part.
 	 * @param out the bounding box to store the result in. 
 	 * @param offset the start index of the part.
 	 * @param count the amount of indices the part contains. 
 	 * @return the value specified by out. */
 	public BoundingBox extendBoundingBox(final BoundingBox out, int offset, int count) {
+		return extendBoundingBox(out, offset, count, null);
+	}
+	
+	private final Vector3 tmpV = new Vector3();
+	/** Extends the specified {@link BoundingBox} with the specified part.
+	 * @param out the bounding box to store the result in. 
+	 * @param offset the start index of the part.
+	 * @param count the amount of indices the part contains. 
+	 * @return the value specified by out. */
+	public BoundingBox extendBoundingBox(final BoundingBox out, int offset, int count, final Matrix4 transform) {
 		int numIndices = getNumIndices();
 		if (offset < 0 || count < 1 || offset + count > numIndices)
 			throw new GdxRuntimeException("Not enough indices");
@@ -701,19 +720,28 @@ public class Mesh implements Disposable {
 		case 1:
 			for (int i = offset; i < end; i++) {
 				final int idx = index.get(i) * vertexSize + posoff;
-				out.ext(verts.get(idx), 0, 0);
+				tmpV.set(verts.get(idx), 0, 0);
+				if (transform != null)
+					tmpV.mul(transform);
+				out.ext(tmpV);
 			}
 			break;
 		case 2:
 			for (int i = offset; i < end; i++) {
 				final int idx = index.get(i) * vertexSize + posoff;
-				out.ext(verts.get(idx), verts.get(idx + 1), 0);
+				tmpV.set(verts.get(idx), verts.get(idx + 1), 0);
+				if (transform != null)
+					tmpV.mul(transform);
+				out.ext(tmpV);
 			}
 			break;
 		case 3:
 			for (int i = offset; i < end; i++) {
 				final int idx = index.get(i) * vertexSize + posoff;
-				out.ext(verts.get(idx), verts.get(idx + 1), verts.get(idx + 2));
+				tmpV.set(verts.get(idx), verts.get(idx + 1), verts.get(idx + 2));
+				if (transform != null)
+					tmpV.mul(transform);
+				out.ext(tmpV);
 			}
 			break;
 		}
diff --git a/gdx/src/com/badlogic/gdx/graphics/VertexAttributes.java b/gdx/src/com/badlogic/gdx/graphics/VertexAttributes.java
index 9ad82c0..7abfff9 100644
--- a/gdx/src/com/badlogic/gdx/graphics/VertexAttributes.java
+++ b/gdx/src/com/badlogic/gdx/graphics/VertexAttributes.java
@@ -41,6 +41,9 @@ public final class VertexAttributes {
 
 	/** the size of a single vertex in bytes **/
 	public final int vertexSize;
+	
+	/** cache of the value calculated by {@link #getMask()} **/
+	private long mask = -1;
 
 	/** Constructor, sets the vertex attributes in a specific order */
 	public VertexAttributes (VertexAttribute... attributes) {
@@ -154,4 +157,20 @@ public final class VertexAttributes {
 		}
 		return true;
 	}
+
+	/**
+	 * Calculates a mask based on the contained {@link VertexAttribute} instances. The mask
+	 * is a bit-wise or of each attributes {@link VertexAttribute#usage}.
+	 * @return the mask
+	 */
+	public long getMask () {
+		if(mask == -1) {
+			long result = 0;
+			for(int i = 0; i < attributes.length; i++) {
+				result |= attributes[i].usage;
+			}
+			mask = result;
+		}
+		return mask;
+	}
 }
diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/SpriteBatch.java b/gdx/src/com/badlogic/gdx/graphics/g2d/SpriteBatch.java
index 5bda556..528f726 100644
--- a/gdx/src/com/badlogic/gdx/graphics/g2d/SpriteBatch.java
+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/SpriteBatch.java
@@ -34,42 +34,27 @@ import com.badlogic.gdx.utils.Disposable;
 import com.badlogic.gdx.utils.GdxRuntimeException;
 import com.badlogic.gdx.utils.NumberUtils;
 
-/** <p>
- * A SpriteBatch is used to draw 2D rectangles that reference a texture (region). The class will batch the drawing commands and
+/** A SpriteBatch is used to draw 2D rectangles that reference a texture (region). The class will batch the drawing commands and
  * optimize them for processing by the GPU.
- * </p>
- * 
  * <p>
  * To draw something with a SpriteBatch one has to first call the {@link SpriteBatch#begin()} method which will setup appropriate
  * render states. When you are done with drawing you have to call {@link SpriteBatch#end()} which will actually draw the things
  * you specified.
- * </p>
- * 
  * <p>
  * All drawing commands of the SpriteBatch operate in screen coordinates. The screen coordinate system has an x-axis pointing to
  * the right, an y-axis pointing upwards and the origin is in the lower left corner of the screen. You can also provide your own
  * transformation and projection matrices if you so wish.
- * </p>
- * 
  * <p>
  * A SpriteBatch is managed. In case the OpenGL context is lost all OpenGL resources a SpriteBatch uses internally get
  * invalidated. A context is lost when a user switches to another application or receives an incoming call on Android. A
  * SpriteBatch will be automatically reloaded after the OpenGL context is restored.
- * </p>
- * 
  * <p>
  * A SpriteBatch is a pretty heavy object so you should only ever have one in your program.
- * </p>
- * 
  * <p>
  * A SpriteBatch works with OpenGL ES 1.x and 2.0. In the case of a 2.0 context it will use its own custom shader to draw all
  * provided sprites. You can set your own custom shader via {@link #setShader(ShaderProgram)}.
- * </p>
- * 
  * <p>
  * A SpriteBatch has to be disposed if it is no longer used.
- * </p>
- * 
  * @author mzechner */
 public class SpriteBatch implements Disposable {
 	private Mesh mesh;
@@ -122,21 +107,14 @@ public class SpriteBatch implements Disposable {
 		this(size, null);
 	}
 
-	/** <p>
-	 * Constructs a new SpriteBatch. Sets the projection matrix to an orthographic projection with y-axis point upwards, x-axis
+	/** Constructs a new SpriteBatch. Sets the projection matrix to an orthographic projection with y-axis point upwards, x-axis
 	 * point to the right and the origin being in the bottom left corner of the screen. The projection will be pixel perfect with
 	 * respect to the screen resolution.
-	 * </p>
-	 * 
 	 * <p>
 	 * The size parameter specifies the maximum size of a single batch in number of sprites
-	 * </p>
-	 * 
 	 * <p>
 	 * The defaultShader specifies the shader to use. Note that the names for uniforms for this default shader are different than
 	 * the ones expect for shaders set with {@link #setShader(ShaderProgram)}. See the {@link #createDefaultShader()} method.
-	 * </p>
-	 * 
 	 * @param size the batch size in number of sprites
 	 * @param defaultShader the default shader to use. This is not owned by the SpriteBatch and must be disposed separately. */
 	public SpriteBatch (int size, ShaderProgram defaultShader) {
@@ -149,26 +127,19 @@ public class SpriteBatch implements Disposable {
 		this(size, buffers, null);
 	}
 
-	/** <p>
-	 * Constructs a new SpriteBatch. Sets the projection matrix to an orthographic projection with y-axis point upwards, x-axis
+	/** Constructs a new SpriteBatch. Sets the projection matrix to an orthographic projection with y-axis point upwards, x-axis
 	 * point to the right and the origin being in the bottom left corner of the screen. The projection will be pixel perfect with
 	 * respect to the screen resolution.
-	 * </p>
-	 * 
 	 * <p>
 	 * The size parameter specifies the maximum size of a single batch in number of sprites
-	 * </p>
-	 * 
 	 * <p>
 	 * The defaultShader specifies the shader to use. Note that the names for uniforms for this default shader are different than
 	 * the ones expect for shaders set with {@link #setShader(ShaderProgram)}. See the {@link #createDefaultShader()} method.
-	 * </p>
-	 * 
 	 * @param size the batch size in number of sprites
 	 * @param buffers the number of buffers to use. only makes sense with VBOs. This is an expert function.
 	 * @param defaultShader the default shader to use. This is not owned by the SpriteBatch and must be disposed separately. */
 	public SpriteBatch (int size, int buffers, ShaderProgram defaultShader) {
-		if(size > 5460) {
+		if (size > 5460) {
 			throw new GdxRuntimeException("Can't have more than 5460 sprites per batch");
 		}
 		this.buffers = new Mesh[buffers];
@@ -1101,15 +1072,13 @@ public class SpriteBatch implements Disposable {
 		if (ownsShader && shader != null) shader.dispose();
 	}
 
-	/** Returns the current projection matrix. Changing this will result in undefined behaviour.
-	 * 
+	/** Returns the current projection matrix. Changing this within {@link #begin()}/{@link #end()} resultsin undefined behaviour.
 	 * @return the currently set projection matrix */
 	public Matrix4 getProjectionMatrix () {
 		return projectionMatrix;
 	}
 
-	/** Returns the current transform matrix. Changing this will result in undefined behaviour.
-	 * 
+	/** Returns the current transform matrix. Changing this within {@link #begin()}/{@link #end()} results in undefined behaviour.
 	 * @return the currently set transform matrix */
 	public Matrix4 getTransformMatrix () {
 		return transformMatrix;
@@ -1117,7 +1086,6 @@ public class SpriteBatch implements Disposable {
 
 	/** Sets the projection matrix to be used by this SpriteBatch. If this is called inside a {@link #begin()}/{@link #end()} block.
 	 * the current batch is flushed to the gpu.
-	 * 
 	 * @param projection the projection matrix */
 	public void setProjectionMatrix (Matrix4 projection) {
 		if (drawing) flush();
diff --git a/gdx/src/com/badlogic/gdx/graphics/g3d/ModelInstance.java b/gdx/src/com/badlogic/gdx/graphics/g3d/ModelInstance.java
index 1b18a5c..5b29a3a 100644
--- a/gdx/src/com/badlogic/gdx/graphics/g3d/ModelInstance.java
+++ b/gdx/src/com/badlogic/gdx/graphics/g3d/ModelInstance.java
@@ -257,6 +257,12 @@ public class ModelInstance implements RenderableProvider {
 	 * This is a potential slow operation, it is advised to cache the result. */
 	public BoundingBox calculateBoundingBox(final BoundingBox out) {
 		out.inf();
+		return extendBoundingBox(out);
+	}
+	
+	/** Extends the bounding box with the bounds of this model instance.
+	 * This is a potential slow operation, it is advised to cache the result. */
+	public BoundingBox extendBoundingBox(final BoundingBox out) {
 		for (final Node node : nodes)
 			calculateBoundingBox(out, node);
 		return out;
@@ -264,7 +270,7 @@ public class ModelInstance implements RenderableProvider {
 	
 	protected void calculateBoundingBox(final BoundingBox out, final Node node) {
 		for (final NodePart mpm : node.parts)
-			mpm.meshPart.mesh.calculateBoundingBox(out, mpm.meshPart.indexOffset, mpm.meshPart.numVertices);
+			mpm.meshPart.mesh.calculateBoundingBox(out, mpm.meshPart.indexOffset, mpm.meshPart.numVertices, node.globalTransform);
 		for (final Node child : node.children)
 			calculateBoundingBox(out, child);
 	}
@@ -276,17 +282,26 @@ public class ModelInstance implements RenderableProvider {
 		return null;
 	}
 	
+	/** @param recursive false to fetch a root node only, true to search the entire node tree for the specified node.
+	 * @return The node with the specified id, or null if not found. */
+	public Node getNode(final String id, boolean recursive) {
+		return getNode(id, nodes, recursive);
+	}
+	
+	/** @return The node with the specified id, or null if not found. */
 	public Node getNode(final String id) {
-		return getNode(id, nodes);
+		return getNode(id, true);
 	}
 	
-	protected Node getNode(final String id, final Iterable<Node> nodes) {
+	protected Node getNode(final String id, final Iterable<Node> nodes, boolean recursive) {
 		for (final Node node : nodes) {
 			if (node.id.equals(id))
 				return node;
-			final Node n = getNode(id, node.children);
-			if (n != null)
-				return n;
+			if (recursive) {
+				final Node n = getNode(id, node.children, recursive);
+				if (n != null)
+					return n;
+			}
 		}
 		return null;
 	}
@@ -316,7 +331,7 @@ public class ModelInstance implements RenderableProvider {
 				renderable.primitiveType = nodePart.meshPart.primitiveType;
 				renderable.bones = nodePart.bones;
 				if (nodePart.bones == null && transform != null)
-				renderable.worldTransform.set(node.globalTransform).mul(transform);
+				renderable.worldTransform.set(transform).mul(node.globalTransform);
 				else if (transform != null)
 					renderable.worldTransform.set(transform);
 				else
diff --git a/gdx/src/com/badlogic/gdx/graphics/g3d/decals/Decal.java b/gdx/src/com/badlogic/gdx/graphics/g3d/decals/Decal.java
index bfb7270..11b8328 100644
--- a/gdx/src/com/badlogic/gdx/graphics/g3d/decals/Decal.java
+++ b/gdx/src/com/badlogic/gdx/graphics/g3d/decals/Decal.java
@@ -267,7 +267,7 @@ public class Decal {
 	 * 
 	 * @param scale New scale along y axis */
 	public void setScaleY (float scale) {
-		this.scale.y += scale;
+		this.scale.y = scale;
 		updated = false;
 	}
 
diff --git a/gdx/src/com/badlogic/gdx/graphics/g3d/lights/Lights.java b/gdx/src/com/badlogic/gdx/graphics/g3d/lights/Lights.java
index 4985145..15c5baf 100644
--- a/gdx/src/com/badlogic/gdx/graphics/g3d/lights/Lights.java
+++ b/gdx/src/com/badlogic/gdx/graphics/g3d/lights/Lights.java
@@ -1,12 +1,12 @@
 package com.badlogic.gdx.graphics.g3d.lights;
 
 import com.badlogic.gdx.graphics.Color;
+import com.badlogic.gdx.math.Vector3;
 import com.badlogic.gdx.utils.Array;
 import com.badlogic.gdx.utils.GdxRuntimeException;
 
 public class Lights {
 	public final Color ambientLight = new Color(0,0,0,1);
-    public Color fog;
 	public final Array<DirectionalLight> directionalLights = new Array<DirectionalLight>();
 	public final Array<PointLight> pointLights = new Array<PointLight>();
 	
diff --git a/gdx/src/com/badlogic/gdx/graphics/g3d/loader/G3dModelLoader.java b/gdx/src/com/badlogic/gdx/graphics/g3d/loader/G3dModelLoader.java
index 354bdb9..7bd4dbf 100644
--- a/gdx/src/com/badlogic/gdx/graphics/g3d/loader/G3dModelLoader.java
+++ b/gdx/src/com/badlogic/gdx/graphics/g3d/loader/G3dModelLoader.java
@@ -112,7 +112,7 @@ public class G3dModelLoader extends ModelLoader<AssetLoaderParameters<Model>> {
 				short[] partIndices = new short[indices.size()];
 				int k = 0;
 				for (JsonValue value = indices.child(); value != null; value = value.next(), k++) {
-					partIndices[k] = (short)indices.getInt(k);
+					partIndices[k] = (short)value.asInt();
 				}
 				jsonPart.indices = partIndices;
 				parts.add(jsonPart);
diff --git a/gdx/src/com/badlogic/gdx/graphics/g3d/materials/ColorAttribute.java b/gdx/src/com/badlogic/gdx/graphics/g3d/materials/ColorAttribute.java
index e77a12d..ea7c323 100644
--- a/gdx/src/com/badlogic/gdx/graphics/g3d/materials/ColorAttribute.java
+++ b/gdx/src/com/badlogic/gdx/graphics/g3d/materials/ColorAttribute.java
@@ -68,4 +68,4 @@ public class ColorAttribute extends Material.Attribute {
 	protected boolean equals (Attribute other) {
 		return ((ColorAttribute)other).color.equals(color);
 	}
-}
+}
\ No newline at end of file
diff --git a/gdx/src/com/badlogic/gdx/graphics/g3d/materials/FloatAttribute.java b/gdx/src/com/badlogic/gdx/graphics/g3d/materials/FloatAttribute.java
index 4995de7..e609e85 100644
--- a/gdx/src/com/badlogic/gdx/graphics/g3d/materials/FloatAttribute.java
+++ b/gdx/src/com/badlogic/gdx/graphics/g3d/materials/FloatAttribute.java
@@ -1,23 +1,24 @@
 package com.badlogic.gdx.graphics.g3d.materials;
 
 import com.badlogic.gdx.graphics.g3d.materials.Material.Attribute;
+import com.badlogic.gdx.utils.GdxRuntimeException;
 
 public class FloatAttribute extends Material.Attribute {
 	public static final String ShininessAlias = "shininess";
 	public static final long Shininess = register(ShininessAlias);
-
-    public static FloatAttribute createShininess(float value) {
+	
+	public static FloatAttribute createShininess(float value) {
 		return new FloatAttribute(Shininess, value);
 	}
-
-    public static final String AlphaTestAlias = "alphaTest";
+	
+	public static final String AlphaTestAlias = "alphaTest";
 	public static final long AlphaTest = register(AlphaTestAlias);
 	
 	public static FloatAttribute createAlphaTest(float value) {
 		return new FloatAttribute(AlphaTest, value);
 	}
-
-    public float value;
+	
+	public float value;
 	
 	public FloatAttribute(long type) {
 		super(type);
diff --git a/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/BaseShader.java b/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/BaseShader.java
index 465bf87..e66bea2 100644
--- a/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/BaseShader.java
+++ b/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/BaseShader.java
@@ -1,7 +1,13 @@
 package com.badlogic.gdx.graphics.g3d.shaders;
 
+import com.badlogic.gdx.Gdx;
+import com.badlogic.gdx.graphics.Camera;
 import com.badlogic.gdx.graphics.Color;
+import com.badlogic.gdx.graphics.VertexAttributes;
+import com.badlogic.gdx.graphics.g3d.Renderable;
 import com.badlogic.gdx.graphics.g3d.Shader;
+import com.badlogic.gdx.graphics.g3d.materials.Material;
+import com.badlogic.gdx.graphics.g3d.utils.RenderContext;
 import com.badlogic.gdx.graphics.glutils.ShaderProgram;
 import com.badlogic.gdx.math.Matrix3;
 import com.badlogic.gdx.math.Matrix4;
@@ -115,13 +121,6 @@ public abstract class BaseShader implements Shader {
 		program.setUniformf(uniformLocations[what], value);
 		return true;
 	}
-
-    protected boolean set(int what, final float v1, final float v2, final float v3, final float v4) {
-        if (uniformLocations[what] < 0)
-            return false;
-        program.setUniformf(uniformLocations[what], v1, v2, v3, v4);
-        return true;
-    }
 	
 	protected boolean set(int what, final Color value) {
 		if (uniformLocations[what] < 0)
diff --git a/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/CompositeShader.java b/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/CompositeShader.java
new file mode 100644
index 0000000..0bc622c
--- /dev/null
+++ b/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/CompositeShader.java
@@ -0,0 +1,185 @@
+package com.badlogic.gdx.graphics.g3d.shaders;
+
+import com.badlogic.gdx.Gdx;
+import com.badlogic.gdx.graphics.Camera;
+import com.badlogic.gdx.graphics.GL20;
+import com.badlogic.gdx.graphics.g3d.Renderable;
+import com.badlogic.gdx.graphics.g3d.Shader;
+import com.badlogic.gdx.graphics.g3d.shaders.subshaders.DiffuseColorTextureShader;
+import com.badlogic.gdx.graphics.g3d.shaders.subshaders.SubShader;
+import com.badlogic.gdx.graphics.g3d.shaders.subshaders.TransformShader;
+import com.badlogic.gdx.graphics.g3d.utils.RenderContext;
+import com.badlogic.gdx.graphics.glutils.ShaderProgram;
+import com.badlogic.gdx.math.Matrix3;
+import com.badlogic.gdx.utils.Array;
+import com.badlogic.gdx.utils.GdxRuntimeException;
+
+/**
+ * {@link Shader} that consists of one or more SubShader instances. Each SubShader provides a GLSL snippet
+ * for the full shader sources. A SubShader may implement functionality like lighting, transformation & skinning
+ * and so on.
+ * @author badlogic
+ *
+ */
+public class CompositeShader implements Shader {
+	private Camera camera;
+	private RenderContext context;
+	private ShaderProgram program;
+	private final Array<SubShader> subShaders = new Array<SubShader>();
+	private long attributesMask;
+	private long materialMask;
+	private boolean lightingEnabled;
+	private final Matrix3 normalMatrix = new Matrix3();
+	
+	public CompositeShader(Renderable renderable) {
+		subShaders.add(new TransformShader());
+		subShaders.add(new DiffuseColorTextureShader());
+		init(renderable);
+	}
+	
+	public CompositeShader(Renderable renderable, Array<SubShader> shaders) {
+		subShaders.addAll(shaders);
+		init(renderable);
+	}
+	
+	private void init(Renderable renderable) {
+		// get masks
+		materialMask = renderable.material.getMask();
+		attributesMask = renderable.mesh.getVertexAttributes().getMask();
+		lightingEnabled = renderable.lights != null;
+		
+		// initialize subshaders
+		for(SubShader subShader: subShaders) {
+			subShader.init(renderable);
+		}
+		
+		// compose shader source code
+		StringBuffer vertexShader = new StringBuffer();
+		StringBuffer fragmentShader = new StringBuffer();
+		
+		// precision modifiers
+		fragmentShader.append("#ifdef GL_ES\n" +  
+									 "  #define LOWP lowp\n" +
+									 "  #define MED mediump\n" +
+									 "  #define HIGH highp\n" +
+									 "  precision mediump float;\n" +
+									 "#else\n" +
+									 "  #define MED\n" +
+									 "  #define LOWP\n" +
+									 "  #define HIGH\n" +
+									 "#endif\n\n");
+		
+		// global uniforms in vertex shader
+		vertexShader.append("uniform mat4 u_projTrans;\n");
+		vertexShader.append("uniform vec3 u_cameraPosition;\n");
+		vertexShader.append("uniform vec3 u_cameraDirection;\n");
+		vertexShader.append("uniform vec3 u_cameraUp;\n");
+		vertexShader.append("uniform mat3 u_normalMatrix;\n");
+		
+		// generate attributes, uniforms, varyings etc.
+		for(SubShader subShader: subShaders) {
+			for(String line: subShader.getVertexShaderVars()) {
+				vertexShader.append(line);
+				vertexShader.append("\n");
+			}
+			vertexShader.append("\n");
+			
+			for(String line: subShader.getFragmentShaderVars()) {
+				fragmentShader.append(line);
+				fragmentShader.append("\n");
+			}
+			fragmentShader.append("\n");
+		}
+		
+		// generate main methods and code
+		vertexShader.append("void main() {\n");
+		for(SubShader subShader: subShaders) {
+			for(String line: subShader.getVertexShaderCode()) {
+				vertexShader.append("  ");
+				vertexShader.append(line);
+				vertexShader.append("\n");
+			}
+		}
+		vertexShader.append("  gl_Position = position;\n"); // we asume at least one sub shader outputs a position
+		vertexShader.append("}");
+		
+		fragmentShader.append("void main() {\n");
+		for(SubShader subShader: subShaders) {
+			for(String line: subShader.getFragmentShaderCode()) {
+				fragmentShader.append("  ");
+				fragmentShader.append(line);
+				fragmentShader.append("\n");
+			}
+		}
+		fragmentShader.append("  gl_FragColor = color;\n"); // we assume at least one sub shader outputs a color
+		fragmentShader.append("}");
+		
+		program = new ShaderProgram(vertexShader.toString(), fragmentShader.toString());
+		if(!program.isCompiled()) {
+			throw new GdxRuntimeException("Couldn't compile composite shader\n" +
+												   "------ vertex shader ------\n"+
+												   vertexShader + "\n" +
+												   "------ fragment shader ------\n"+
+												   fragmentShader + "\n" +
+												   "------ error log ------\n" +
+												   program.getLog());
+		} else {
+			Gdx.app.log("CompositeShader", "\n" +
+			   "------ vertex shader ------\n"+
+			   vertexShader + "\n" +
+			   "------ fragment shader ------\n"+
+			   fragmentShader + "\n" +
+			   "------ error log ------\n" +
+			   program.getLog());
+		}
+	}
+	
+	@Override
+	public int compareTo (Shader other) {
+		return 0;
+	}
+
+	@Override
+	public boolean canRender (Renderable renderable) {
+		return materialMask == renderable.material.getMask() && 
+				 attributesMask == renderable.mesh.getVertexAttributes().getMask() && 
+			    (renderable.lights != null) == lightingEnabled;
+	}
+
+	@Override
+	public void begin (Camera camera, RenderContext context) {
+		program.begin();
+		this.camera = camera;
+		this.context = context;
+		context.setDepthTest(true, GL20.GL_LEQUAL);
+	}
+
+	@Override
+	public void render (Renderable renderable) {
+		ShaderProgram.pedantic = false;
+		// set global uniforms
+		program.setUniformMatrix("u_projTrans", camera.combined);
+		program.setUniformf("u_cameraPosition", camera.position);
+		program.setUniformf("u_cameraDirection", camera.direction);
+		program.setUniformf("u_cameraUp", camera.up);
+		program.setUniformMatrix("u_normalMatrix", normalMatrix.set(camera.combined));
+		
+		// apply sub shaders
+		for(SubShader shader: subShaders) {
+			shader.apply(program, context, camera, renderable);
+		}
+		
+		// render the mesh
+		renderable.mesh.render(program, renderable.primitiveType, renderable.meshPartOffset, renderable.meshPartSize);
+	}
+
+	@Override
+	public void end () {
+		program.end();
+	}
+
+	@Override
+	public void dispose () {
+		program.dispose();
+	}
+}
diff --git a/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java b/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java
index 7fb2541..487ee89 100644
--- a/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java
+++ b/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java
@@ -2,6 +2,7 @@ package com.badlogic.gdx.graphics.g3d.shaders;
 
 import com.badlogic.gdx.Gdx;
 import com.badlogic.gdx.graphics.Camera;
+import com.badlogic.gdx.graphics.Color;
 import com.badlogic.gdx.graphics.GL10;
 import com.badlogic.gdx.graphics.Mesh;
 import com.badlogic.gdx.graphics.VertexAttributes;
@@ -12,9 +13,15 @@ import com.badlogic.gdx.graphics.g3d.lights.AmbientCubemap;
 import com.badlogic.gdx.graphics.g3d.lights.DirectionalLight;
 import com.badlogic.gdx.graphics.g3d.lights.Lights;
 import com.badlogic.gdx.graphics.g3d.lights.PointLight;
-import com.badlogic.gdx.graphics.g3d.materials.*;
+import com.badlogic.gdx.graphics.g3d.materials.BlendingAttribute;
+import com.badlogic.gdx.graphics.g3d.materials.ColorAttribute;
+import com.badlogic.gdx.graphics.g3d.materials.FloatAttribute;
+import com.badlogic.gdx.graphics.g3d.materials.IntAttribute;
+import com.badlogic.gdx.graphics.g3d.materials.Material;
+import com.badlogic.gdx.graphics.g3d.materials.TextureAttribute;
 import com.badlogic.gdx.graphics.g3d.utils.RenderContext;
 import com.badlogic.gdx.graphics.glutils.ShaderProgram;
+import com.badlogic.gdx.math.MathUtils;
 import com.badlogic.gdx.math.Matrix3;
 import com.badlogic.gdx.math.Matrix4;
 import com.badlogic.gdx.math.Vector3;
@@ -67,7 +74,7 @@ public class DefaultShader extends BaseShader {
 	protected final int u_bones						= registerUniform("u_bones");
 	// Material uniforms
 	protected final int u_shininess					= registerUniform("u_shininess", FloatAttribute.Shininess);
-	protected final int u_opacity					= registerUniform("u_opacity", BlendingAttribute.Type);
+	protected final int u_opacity						= registerUniform("u_opacity", BlendingAttribute.Type);
 	protected final int u_diffuseColor				= registerUniform("u_diffuseColor", ColorAttribute.Diffuse);
 	protected final int u_diffuseTexture			= registerUniform("u_diffuseTexture", TextureAttribute.Diffuse);
 	protected final int u_specularColor				= registerUniform("u_specularColor", ColorAttribute.Specular);
@@ -80,11 +87,10 @@ public class DefaultShader extends BaseShader {
 	protected final int u_dirLights0color			= registerUniform("u_dirLights[0].color");
 	protected final int u_dirLights0direction		= registerUniform("u_dirLights[0].direction");
 	protected final int u_dirLights1color			= registerUniform("u_dirLights[1].color");
-	protected final int u_pointLights0color		    = registerUniform("u_pointLights[0].color");
-	protected final int u_pointLights0position	    = registerUniform("u_pointLights[0].position");
-	protected final int u_pointLights0intensity	    = registerUniform("u_pointLights[0].intensity");
-	protected final int u_pointLights1color		    = registerUniform("u_pointLights[1].color");
-    protected final int u_fogColor				    = registerUniform("u_fogColor");
+	protected final int u_pointLights0color		= registerUniform("u_pointLights[0].color");
+	protected final int u_pointLights0position	= registerUniform("u_pointLights[0].position");
+	protected final int u_pointLights0intensity	= registerUniform("u_pointLights[0].intensity");
+	protected final int u_pointLights1color		= registerUniform("u_pointLights[1].color");
 	// FIXME Cache vertex attribute locations...
 	
 	protected int dirLightsLoc;
@@ -98,7 +104,6 @@ public class DefaultShader extends BaseShader {
 	protected int pointLightsSize;
 
 	protected boolean lighting;
-    protected boolean fog;
 	protected final AmbientCubemap ambientCubemap = new AmbientCubemap();
 	protected final DirectionalLight directionalLights[];
 	protected final PointLight pointLights[];
@@ -111,27 +116,26 @@ public class DefaultShader extends BaseShader {
 	
 	protected final ShaderProgram program;
 	
-	public DefaultShader(final Material material, final VertexAttributes attributes, boolean lighting, boolean fog, int numDirectional, int numPoint, int numSpot, int numBones) {
-		this(getDefaultVertexShader(), getDefaultFragmentShader(), material, attributes, lighting, fog, numDirectional, numPoint, numSpot, numBones);
+	public DefaultShader(final Material material, final VertexAttributes attributes, boolean lighting, int numDirectional, int numPoint, int numSpot, int numBones) {
+		this(getDefaultVertexShader(), getDefaultFragmentShader(), material, attributes, lighting, numDirectional, numPoint, numSpot, numBones);
 	}
 	
-	public DefaultShader(final long mask, final long attributes, boolean lighting, boolean fog, int numDirectional, int numPoint, int numSpot, int numBones) {
-		this(getDefaultVertexShader(), getDefaultFragmentShader(), mask, attributes, lighting, fog, numDirectional, numPoint, numSpot, numBones);
+	public DefaultShader(final long mask, final long attributes, boolean lighting, int numDirectional, int numPoint, int numSpot, int numBones) {
+		this(getDefaultVertexShader(), getDefaultFragmentShader(), mask, attributes, lighting, numDirectional, numPoint, numSpot, numBones);
 	}
 
-	public DefaultShader(final String vertexShader, final String fragmentShader, final Material material, final VertexAttributes attributes, boolean lighting, boolean fog, int numDirectional, int numPoint, int numSpot, int numBones) {
-		this(vertexShader, fragmentShader, material.getMask(), getAttributesMask(attributes), lighting, fog, numDirectional, numPoint, numSpot, numBones);
+	public DefaultShader(final String vertexShader, final String fragmentShader, final Material material, final VertexAttributes attributes, boolean lighting, int numDirectional, int numPoint, int numSpot, int numBones) {
+		this(vertexShader, fragmentShader, material.getMask(), getAttributesMask(attributes), lighting, numDirectional, numPoint, numSpot, numBones);
 	}
 
-	public DefaultShader(final String vertexShader, final String fragmentShader, final long mask, final long attributes, boolean lighting, boolean fog, int numDirectional, int numPoint, int numSpot, int numBones) {
-		final String prefix = createPrefix(mask, attributes, lighting, fog, numDirectional, numPoint, numSpot, numBones);
+	public DefaultShader(final String vertexShader, final String fragmentShader, final long mask, final long attributes, boolean lighting, int numDirectional, int numPoint, int numSpot, int numBones) {
+		final String prefix = createPrefix(mask, attributes, lighting, numDirectional, numPoint, numSpot, numBones);
 		program = new ShaderProgram(prefix + vertexShader, prefix + fragmentShader);
 		if(!program.isCompiled()) {
 			throw new GdxRuntimeException("Couldn't compile shader " + program.getLog());
 		}
 		init(program, mask, attributes, 0);
 		this.lighting = lighting;
-        this.fog = fog;
 		this.directionalLights = new DirectionalLight[lighting && numDirectional > 0 ? numDirectional : 0];
 		for (int i = 0; i < directionalLights.length; i++)
 			directionalLights[i] = new DirectionalLight();
@@ -146,16 +150,16 @@ public class DefaultShader extends BaseShader {
 		if (!ignoreUnimplemented && (implementedFlags & mask) != mask)
 			throw new GdxRuntimeException("Some attributes not implemented yet ("+mask+")");
 		
-		dirLightsLoc 				= loc(u_dirLights0color);
-		dirLightsColorOffset		= loc(u_dirLights0color) - dirLightsLoc;
+		dirLightsLoc 					= loc(u_dirLights0color);
+		dirLightsColorOffset			= loc(u_dirLights0color) - dirLightsLoc;
 		dirLightsDirectionOffset 	= loc(u_dirLights0direction) - dirLightsLoc;
-		dirLightsSize 				= loc(u_dirLights1color) - dirLightsLoc;
+		dirLightsSize 					= loc(u_dirLights1color) - dirLightsLoc;
 		
 		pointLightsLoc 				= loc(u_pointLights0color);
 		pointLightsColorOffset 		= loc(u_pointLights0color) - pointLightsLoc;
 		pointLightsPositionOffset 	= loc(u_pointLights0position) - pointLightsLoc;
-		pointLightsIntensityOffset  = loc(u_pointLights0intensity) - pointLightsLoc;
-		pointLightsSize 			= loc(u_pointLights1color)- pointLightsLoc;
+		pointLightsIntensityOffset = loc(u_pointLights0intensity) - pointLightsLoc;
+		pointLightsSize 				= loc(u_pointLights1color)- pointLightsLoc;
 	}
 	
 	protected final static long tangentAttribute = Usage.Generic << 1;
@@ -178,7 +182,7 @@ public class DefaultShader extends BaseShader {
 		return result;
 	}
 	
-	private String createPrefix(final long mask, final long attributes, boolean lighting, boolean fog, int numDirectional, int numPoint, int numSpot, int numBones) {
+	private String createPrefix(final long mask, final long attributes, boolean lighting, int numDirectional, int numPoint, int numSpot, int numBones) {
 		String prefix = "";
 		if (((attributes & Usage.Color) == Usage.Color) || ((attributes & Usage.ColorPacked) == Usage.ColorPacked))
 			prefix += "#define colorFlag\n";
@@ -189,10 +193,6 @@ public class DefaultShader extends BaseShader {
 				prefix += "#define ambientCubemapFlag\n";
 				prefix += "#define numDirectionalLights "+numDirectional+"\n";
 				prefix += "#define numPointLights "+numPoint+"\n";
-
-                if (fog) {
-                    prefix += "#define fogFlag\n";
-                }
 			}
 		}
 		for (int i = 0; i < blendAttributes.length; i++) {
@@ -227,8 +227,7 @@ public class DefaultShader extends BaseShader {
 	public boolean canRender(final Renderable renderable) {
 		return mask == renderable.material.getMask() && 
 			attributes == getAttributesMask(renderable.mesh.getVertexAttributes()) && 
-			(renderable.lights != null) == lighting &&
-            ((renderable.lights != null && renderable.lights.fog != null) == fog);
+			(renderable.lights != null) == lighting;
 	}
 	
 	private final boolean can(final long flag) {
@@ -268,7 +267,7 @@ public class DefaultShader extends BaseShader {
 			context.setDepthTest(true, defaultDepthFunc);
 		
 		set(u_projTrans, camera.combined);
-		set(u_cameraPosition, camera.position.x, camera.position.y, camera.position.z, 1.09f / camera.far);
+		set(u_cameraPosition, camera.position);
 		set(u_cameraDirection, camera.direction);
 		set(u_cameraUp, camera.up);
 		
@@ -353,7 +352,7 @@ public class DefaultShader extends BaseShader {
 				cullFace = ((IntAttribute)attr).value;
 			else if ((t & FloatAttribute.AlphaTest) == FloatAttribute.AlphaTest)
 				set(u_alphaTest, ((FloatAttribute)attr).value);
-            else if(!ignoreUnimplemented)
+			else if(!ignoreUnimplemented)
 					throw new GdxRuntimeException("Unknown material attribute: "+attr.toString());
 		}
 		context.setCullFace(cullFace);
@@ -422,10 +421,6 @@ public class DefaultShader extends BaseShader {
 					program.setUniformf(idx+pointLightsIntensityOffset, pointLights[i].intensity);
 			}
 		}
-
-        if (lights.fog != null) {
-            program.setUniformf(loc(u_fogColor), lights.fog);
-        }
 	}
 
 	@Override
diff --git a/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/default.fragment.glsl b/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/default.fragment.glsl
index b7ce6a3..0e110e0 100644
--- a/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/default.fragment.glsl
+++ b/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/default.fragment.glsl
@@ -60,11 +60,6 @@ varying vec3 v_lightSpecular;
 #endif //specularFlag
 #endif //lightingFlag
 
-#ifdef fogFlag
-uniform vec4 u_fogColor;
-varying float v_fog;
-#endif // fogFlag
-
 void main() {
 	#if defined(normalFlag) 
 		vec3 normal = v_normal;
@@ -106,10 +101,6 @@ void main() {
 		gl_FragColor.rgb = (diffuse.rgb * v_lightDiffuse) + specular;
 	#endif //lightingFlag
 
-	#ifdef fogFlag
-    	gl_FragColor.rgb = mix(gl_FragColor.rgb, u_fogColor.rgb, v_fog);
-    #endif // end fogFlag
-
 	#ifdef blendedFlag
 		gl_FragColor.a = diffuse.a * v_opacity;
 		#ifdef alphaTestFlag
@@ -117,5 +108,4 @@ void main() {
 				discard;
 		#endif
 	#endif
-
-}
+}
\ No newline at end of file
diff --git a/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/default.vertex.glsl b/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/default.vertex.glsl
index 2289ac1..1b15045 100644
--- a/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/default.vertex.glsl
+++ b/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/default.vertex.glsl
@@ -6,10 +6,6 @@
 #define specularFlag
 #endif
 
-#if defined(specularFlag) || defined(fogFlag)
-#define cameraPositionFlag
-#endif
-
 attribute vec3 a_position;
 uniform mat4 u_projTrans;
 
@@ -130,17 +126,9 @@ uniform vec3 u_sphericalHarmonics[9];
 
 #ifdef specularFlag
 varying vec3 v_lightSpecular;
+uniform vec3 u_cameraPosition;
 #endif // specularFlag
 
-#ifdef cameraPositionFlag
-uniform vec4 u_cameraPosition;
-#endif // cameraPositionFlag
-
-#ifdef fogFlag
-varying float v_fog;
-#endif // fogFlag
-
-
 #if defined(numDirectionalLights) && (numDirectionalLights > 0)
 struct DirectionalLight
 {
@@ -221,12 +209,6 @@ void main() {
 		v_normal = normal;
 	#endif // normalFlag
 
-    #ifdef fogFlag
-        float fog  = length(u_cameraPosition.xyz - pos.xyz) * u_cameraPosition.w;
-              fog *= fog;
-        v_fog = min(fog, 1.0);
-    #endif
-
 	#ifdef lightingFlag
 		#ifdef ambientLightFlag
 			v_lightDiffuse = u_ambientLight;
@@ -256,7 +238,7 @@ void main() {
 			
 		#ifdef specularFlag
 			v_lightSpecular = vec3(0.0);
-			vec3 viewVec = normalize(u_cameraPosition.xyz - pos.xyz);
+			vec3 viewVec = normalize(u_cameraPosition - pos.xyz);
 		#endif // specularFlag
 			
 		#if defined(numDirectionalLights) && (numDirectionalLights > 0) && defined(normalFlag)
@@ -286,4 +268,4 @@ void main() {
 			}
 		#endif // numPointLights
 	#endif // lightingFlag
-}
+}
\ No newline at end of file
diff --git a/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/subshaders/BaseSubShader.java b/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/subshaders/BaseSubShader.java
new file mode 100644
index 0000000..285c7a2
--- /dev/null
+++ b/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/subshaders/BaseSubShader.java
@@ -0,0 +1,34 @@
+package com.badlogic.gdx.graphics.g3d.shaders.subshaders;
+
+import com.badlogic.gdx.graphics.Camera;
+import com.badlogic.gdx.graphics.g3d.Renderable;
+import com.badlogic.gdx.graphics.g3d.utils.RenderContext;
+import com.badlogic.gdx.graphics.glutils.ShaderProgram;
+import com.badlogic.gdx.utils.Array;
+
+public abstract class BaseSubShader implements SubShader {
+	protected Array<String> vertexVars = new Array<String>(new String[0]);
+	protected Array<String> vertexCode = new Array<String>(new String[0]);
+	protected Array<String> fragmentVars = new Array<String>(new String[0]);
+	protected Array<String> fragmentCode = new Array<String>(new String[0]);
+	
+	@Override
+	public String[] getVertexShaderVars () {
+		return vertexVars.toArray();
+	}
+
+	@Override
+	public String[] getVertexShaderCode () {
+		return vertexCode.toArray();
+	}
+
+	@Override
+	public String[] getFragmentShaderVars () {
+		return fragmentVars.toArray();
+	}
+
+	@Override
+	public String[] getFragmentShaderCode () {
+		return fragmentCode.toArray();
+	}
+}
diff --git a/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/subshaders/DiffuseColorTextureShader.java b/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/subshaders/DiffuseColorTextureShader.java
new file mode 100644
index 0000000..c434d65
--- /dev/null
+++ b/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/subshaders/DiffuseColorTextureShader.java
@@ -0,0 +1,77 @@
+package com.badlogic.gdx.graphics.g3d.shaders.subshaders;
+
+import com.badlogic.gdx.graphics.Camera;
+import com.badlogic.gdx.graphics.VertexAttributes.Usage;
+import com.badlogic.gdx.graphics.g3d.Renderable;
+import com.badlogic.gdx.graphics.g3d.materials.Material.Attribute;
+import com.badlogic.gdx.graphics.g3d.materials.ColorAttribute;
+import com.badlogic.gdx.graphics.g3d.materials.TextureAttribute;
+import com.badlogic.gdx.graphics.g3d.utils.RenderContext;
+import com.badlogic.gdx.graphics.glutils.ShaderProgram;
+
+public class DiffuseColorTextureShader extends BaseSubShader {
+	private boolean useVertexColor;
+	private boolean useDiffuseColor;
+	private boolean useDiffuseTexture;
+	
+	@Override
+	public void init (Renderable renderable) {
+		String value = "";
+		
+		// check if we have vertex color
+		if(renderable.mesh.getVertexAttribute(Usage.Color) != null||
+			renderable.mesh.getVertexAttribute(Usage.ColorPacked) != null) {
+			vertexVars.addAll(new String[] {
+				"attribute vec4 " + ShaderProgram.COLOR_ATTRIBUTE + ";",
+				"varying vec4 v_diffuseColor;"
+			});
+			vertexCode.add("v_diffuseColor = " + ShaderProgram.COLOR_ATTRIBUTE + ";");
+			fragmentVars.add("varying LOWP vec4 v_diffuseColor;");
+			useVertexColor = true;
+			value = "v_diffuseColor";
+		}
+		
+		// check if we have a diffuse color
+		if(renderable.material.has(ColorAttribute.Diffuse)) {
+			fragmentVars.addAll(new String[] {
+				"uniform LOWP vec4 u_diffuseColor;"
+			});
+			useDiffuseColor = true;
+			value += useVertexColor? " * ": "";
+			value += "u_diffuseColor";
+		}
+		
+		// check if we have a diffuse texture
+		if(renderable.material.has(TextureAttribute.Diffuse)) {
+			vertexVars.addAll(new String[] {
+				"attribute vec2 a_texCoord0;",
+				"varying vec2 v_texCoords0;"
+			});
+			vertexCode.addAll(new String[] {
+				"v_texCoords0 = a_texCoord0;"
+			});
+			fragmentVars.addAll(new String[] {
+				"uniform sampler2D u_diffuseTexture;",
+				"varying MED vec2 v_texCoords0;"
+			});
+			useDiffuseTexture= true;
+			value += (useVertexColor || useDiffuseColor)? " * ": "";
+			value += "texture2D(u_diffuseTexture, v_texCoords0)";
+		}
+		
+		fragmentCode.add("color = color * " + value + ";");
+	}
+
+	@Override
+	public void apply (ShaderProgram program, RenderContext context, Camera camera, Renderable renderable) {
+		if(useDiffuseColor) {
+			ColorAttribute attribute = (ColorAttribute)renderable.material.get(ColorAttribute.Diffuse);
+			program.setUniformf("u_diffuseColor", attribute.color);
+		}
+		if(useDiffuseTexture) {
+			TextureAttribute attribute = (TextureAttribute)renderable.material.get(TextureAttribute.Diffuse);
+			int unit = context.textureBinder.bind(attribute.textureDescription);
+			program.setUniformi("u_diffuseTexture", unit);
+		}
+	}
+}
diff --git a/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/subshaders/SubShader.java b/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/subshaders/SubShader.java
new file mode 100644
index 0000000..ad1ccdd
--- /dev/null
+++ b/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/subshaders/SubShader.java
@@ -0,0 +1,15 @@
+package com.badlogic.gdx.graphics.g3d.shaders.subshaders;
+
+import com.badlogic.gdx.graphics.Camera;
+import com.badlogic.gdx.graphics.g3d.Renderable;
+import com.badlogic.gdx.graphics.g3d.utils.RenderContext;
+import com.badlogic.gdx.graphics.glutils.ShaderProgram;
+
+public interface SubShader {
+	public void init(Renderable renderable);
+	public String[] getVertexShaderVars();
+	public String[] getVertexShaderCode();
+	public String[] getFragmentShaderVars();
+	public String[] getFragmentShaderCode();
+	public void apply(ShaderProgram program, RenderContext context, Camera camera, Renderable renderable);
+}
diff --git a/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/subshaders/TransformShader.java b/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/subshaders/TransformShader.java
new file mode 100644
index 0000000..de21f5c
--- /dev/null
+++ b/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/subshaders/TransformShader.java
@@ -0,0 +1,110 @@
+package com.badlogic.gdx.graphics.g3d.shaders.subshaders;
+
+import com.badlogic.gdx.graphics.Camera;
+import com.badlogic.gdx.graphics.VertexAttribute;
+import com.badlogic.gdx.graphics.VertexAttributes;
+import com.badlogic.gdx.graphics.g3d.Renderable;
+import com.badlogic.gdx.graphics.g3d.utils.RenderContext;
+import com.badlogic.gdx.graphics.glutils.ShaderProgram;
+import com.badlogic.gdx.math.Matrix4;
+import com.badlogic.gdx.utils.Array;
+
+/**
+ * Responsible for calculating the world space vertex position
+ * @author badlogic
+ *
+ */
+public class TransformShader extends BaseSubShader {
+	private int NUM_BONES = 12; // FIXME kinda arbitrary eh...
+	private boolean skinned;
+	private float[] bones = new float[NUM_BONES * 16];
+	private Matrix4 idtMatrix = new Matrix4();
+	
+	public TransformShader() {
+		vertexVars.addAll(new String[] {
+			"uniform mat4 u_worldTrans;"
+		});
+		
+		vertexCode.addAll(new String[] {
+			"#ifdef skinnedFlag",
+			"  mat4 skinning = mat4(0.0);",
+			"  #ifdef boneWeight0Flag",
+			"    skinning += (a_boneWeight0.y) * u_bones[int(a_boneWeight0.x)];",
+			"  #endif",
+			"  #ifdef boneWeight1Flag",
+			"    skinning += (a_boneWeight1.y) * u_bones[int(a_boneWeight1.x)];",
+			"  #endif",
+			"  #ifdef boneWeight2Flag",
+			"    skinning += (a_boneWeight2.y) * u_bones[int(a_boneWeight2.x)];",
+			"  #endif",
+			"  #ifdef boneWeight3Flag",
+			"    skinning += (a_boneWeight3.y) * u_bones[int(a_boneWeight3.x)];",
+			"  #endif",
+			"  #ifdef boneWeight4Flag",
+			"    skinning += (a_boneWeight4.y) * u_bones[int(a_boneWeight4.x)];",
+			"  #endif",
+			"  #ifdef boneWeight5Flag",
+			"    skinning += (a_boneWeight5.y) * u_bones[int(a_boneWeight5.x)];",
+			"  #endif",
+			"  #ifdef boneWeight6Flag",
+			"    skinning += (a_boneWeight6.y) * u_bones[int(a_boneWeight6.x)];",
+			"  #endif",
+			"  #ifdef boneWeight7Flag",
+			"    skinning += (a_boneWeight7.y) * u_bones[int(a_boneWeight7.x)];",
+			"  #endif",
+			"  vec4 position = u_worldTrans * skinning * vec4(a_position, 1.0);",
+			"#else",
+			"  vec4 position = u_worldTrans * vec4(" + ShaderProgram.POSITION_ATTRIBUTE + ", 1);",
+			"#endif",
+			"position = u_projTrans * position;"
+		});
+		
+		fragmentCode.addAll(new String[] {
+			"vec4 color = vec4(1.0);"
+		});
+	}
+	
+	@Override
+	public void init (Renderable renderable) {
+		// emit vertex attributes that are influenced by the transformation
+		VertexAttributes attributes = renderable.mesh.getVertexAttributes();
+		int boneWeightsPerVertex = 0;
+		for(int i = 0; i < attributes.size(); i++) {
+			VertexAttribute attr = attributes.get(i);
+			if(attr.usage == VertexAttributes.Usage.Position) vertexVars.add("attribute vec3 " + attr.alias + ";");
+			if(attr.usage == VertexAttributes.Usage.Normal) vertexVars.add("attribute vec3 " + attr.alias + ";");
+			if(attr.usage == VertexAttributes.Usage.BiNormal) vertexVars.add("attribute vec3 " + attr.alias + ";");
+			if(attr.usage == VertexAttributes.Usage.Tangent) vertexVars.add("attribute vec3 " + attr.alias + ";");
+			if(attr.usage == VertexAttributes.Usage.BoneWeight) {
+				vertexVars.add("#define boneWeight" + boneWeightsPerVertex + "Flag");
+				vertexVars.add("attribute vec2 " + attr.alias + ";");
+				boneWeightsPerVertex++;
+			}
+		}
+		
+		// check if we need skinning, emit code for #bones and bone matrix stack
+		if(boneWeightsPerVertex > 0) {
+			skinned = true;
+			vertexVars.add("#define skinnedFlag");
+			vertexVars.add("#define numBones " + NUM_BONES);
+			vertexVars.add("uniform mat4 u_bones[numBones];");
+		}
+	}
+	
+	@Override
+	public void apply (ShaderProgram program, RenderContext context, Camera camera, Renderable renderable) {
+		program.setUniformMatrix("u_worldTrans", renderable.worldTransform);
+		if(skinned) {
+			for (int i = 0, offset = 0; i < NUM_BONES; i++, offset += 16) {
+				Matrix4 mat = null;
+				if(renderable.bones != null && i < renderable.bones.length && renderable.bones[i] != null) {
+					mat = renderable.bones[i];
+				} else {
+					mat = idtMatrix;
+				}
+				System.arraycopy(mat.val, 0, bones, offset, 16);
+			}
+			program.setUniformMatrix4fv("u_bones", bones, 0, bones.length);
+		}
+	}
+}
\ No newline at end of file
diff --git a/gdx/src/com/badlogic/gdx/graphics/g3d/utils/CompositeShaderProvider.java b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/CompositeShaderProvider.java
new file mode 100644
index 0000000..c42e90b
--- /dev/null
+++ b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/CompositeShaderProvider.java
@@ -0,0 +1,16 @@
+package com.badlogic.gdx.graphics.g3d.utils;
+
+import com.badlogic.gdx.Gdx;
+import com.badlogic.gdx.graphics.g3d.Renderable;
+import com.badlogic.gdx.graphics.g3d.Shader;
+import com.badlogic.gdx.graphics.g3d.shaders.CompositeShader;
+import com.badlogic.gdx.graphics.g3d.shaders.DefaultShader;
+import com.badlogic.gdx.graphics.g3d.shaders.GLES10Shader;
+
+public class CompositeShaderProvider extends BaseShaderProvider {
+	@Override
+	protected Shader createShader (Renderable renderable) {
+		Gdx.app.log("CompositeShaderProvider", "Creating new shader");
+		return new CompositeShader(renderable);
+	}
+}
diff --git a/gdx/src/com/badlogic/gdx/graphics/g3d/utils/DefaultShaderProvider.java b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/DefaultShaderProvider.java
index 5d40d64..9df308f 100644
--- a/gdx/src/com/badlogic/gdx/graphics/g3d/utils/DefaultShaderProvider.java
+++ b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/DefaultShaderProvider.java
@@ -4,8 +4,10 @@ import com.badlogic.gdx.Gdx;
 import com.badlogic.gdx.files.FileHandle;
 import com.badlogic.gdx.graphics.g3d.Renderable;
 import com.badlogic.gdx.graphics.g3d.Shader;
-import com.badlogic.gdx.graphics.g3d.shaders.DefaultShader;
+import com.badlogic.gdx.graphics.g3d.materials.Material;
 import com.badlogic.gdx.graphics.g3d.shaders.GLES10Shader;
+import com.badlogic.gdx.graphics.g3d.shaders.DefaultShader;
+import com.badlogic.gdx.utils.Array;
 
 public class DefaultShaderProvider extends BaseShaderProvider {
 	public String vertexShader;
@@ -27,9 +29,8 @@ public class DefaultShaderProvider extends BaseShaderProvider {
 	@Override
 	protected Shader createShader(final Renderable renderable) {
 		Gdx.app.log("DefaultShaderProvider", "Creating new shader");
-		if (Gdx.graphics.isGL20Available()) {
-            return new DefaultShader(vertexShader, fragmentShader, renderable.material, renderable.mesh.getVertexAttributes(), renderable.lights != null, renderable.lights != null && renderable.lights.fog != null, 2, 5, 3, renderable.bones == null ? 0 : 12);
-        }
+		if (Gdx.graphics.isGL20Available())
+			return new DefaultShader(vertexShader, fragmentShader, renderable.material, renderable.mesh.getVertexAttributes(), renderable.lights != null, 2, 5, 3, renderable.bones == null ? 0 : 12);
 		return new GLES10Shader();
 	}
 }
diff --git a/gdx/src/com/badlogic/gdx/graphics/glutils/ShaderProgram.java b/gdx/src/com/badlogic/gdx/graphics/glutils/ShaderProgram.java
index 32a73cc..1cf2dca 100644
--- a/gdx/src/com/badlogic/gdx/graphics/glutils/ShaderProgram.java
+++ b/gdx/src/com/badlogic/gdx/graphics/glutils/ShaderProgram.java
@@ -639,6 +639,16 @@ public class ShaderProgram implements Disposable {
 		BufferUtils.copy(values, floatBuffer, length, offset);
 		gl.glUniformMatrix4fv(location, length / 16, false, floatBuffer);
 	}
+	
+	public void setUniformMatrix4fv (String name, float[] values, int offset, int length) {
+		GL20 gl = Gdx.graphics.getGL20();
+		checkManaged();
+		ensureBufferCapacity(length << 2);
+		floatBuffer.clear();
+		BufferUtils.copy(values, floatBuffer, length, offset);
+		int location = fetchUniformLocation(name);
+		gl.glUniformMatrix4fv(location, length / 16, false, floatBuffer);
+	}
 
 	/** Sets the uniform with the given name. Throws an IllegalArgumentException in case it is not called in between a
 	 * {@link #begin()}/{@link #end()} block.
diff --git a/gdx/src/com/badlogic/gdx/input/GestureDetector.java b/gdx/src/com/badlogic/gdx/input/GestureDetector.java
index 230bdd1..4e49597 100644
--- a/gdx/src/com/badlogic/gdx/input/GestureDetector.java
+++ b/gdx/src/com/badlogic/gdx/input/GestureDetector.java
@@ -128,7 +128,7 @@ public class GestureDetector extends InputAdapter {
 
 	public boolean touchDragged (float x, float y, int pointer) {
 		if (pointer > 1) return false;
-		if (longPressFired) return true;
+		if (longPressFired) return false;
 
 		if (pointer == 0)
 			pointer1.set(x, y);
@@ -175,7 +175,7 @@ public class GestureDetector extends InputAdapter {
 
 		longPressTask.cancel();
 		panning = false;
-		if (longPressFired) return true;
+		if (longPressFired) return false;
 		if (inTapSquare) {
 			// handle taps
 			if (lastTapButton != button || lastTapPointer != pointer || TimeUtils.nanoTime() - lastTapTime > tapCountInterval
diff --git a/gdx/src/com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader.java b/gdx/src/com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader.java
index a1ae384..433b5b2 100644
--- a/gdx/src/com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader.java
+++ b/gdx/src/com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader.java
@@ -598,6 +598,10 @@ public class AtlasTmxMapLoader extends AsynchronousAssetLoader<TiledMap, AtlasTm
 			if (type != null) {
 				object.getProperties().put("type", type);
 			}
+			int gid = element.getIntAttribute("gid", -1);
+			if (gid != -1) {
+				object.getProperties().put("gid", gid);
+			}
 			object.getProperties().put("x", x);
 			object.getProperties().put("y", yUp ? y - height : y);
 			object.setVisible(element.getIntAttribute("visible", 1) == 1);
diff --git a/gdx/src/com/badlogic/gdx/maps/tiled/TmxMapLoader.java b/gdx/src/com/badlogic/gdx/maps/tiled/TmxMapLoader.java
index 15c86d0..7babdb0 100644
--- a/gdx/src/com/badlogic/gdx/maps/tiled/TmxMapLoader.java
+++ b/gdx/src/com/badlogic/gdx/maps/tiled/TmxMapLoader.java
@@ -572,6 +572,10 @@ public class TmxMapLoader extends AsynchronousAssetLoader<TiledMap, TmxMapLoader
 			if (type != null) {
 				object.getProperties().put("type", type);
 			}
+			int gid = element.getIntAttribute("gid", -1);
+			if (gid != -1) {
+				object.getProperties().put("gid", gid);
+			}
 			object.getProperties().put("x", x);
 			object.getProperties().put("y", yUp ? y - height : y);
 			object.setVisible(element.getIntAttribute("visible", 1) == 1);
diff --git a/gdx/src/com/badlogic/gdx/maps/tiled/tiles/AnimatedTiledMapTile.java b/gdx/src/com/badlogic/gdx/maps/tiled/tiles/AnimatedTiledMapTile.java
index 66e92a3..6bedfdb 100644
--- a/gdx/src/com/badlogic/gdx/maps/tiled/tiles/AnimatedTiledMapTile.java
+++ b/gdx/src/com/badlogic/gdx/maps/tiled/tiles/AnimatedTiledMapTile.java
@@ -21,6 +21,7 @@ public class AnimatedTiledMapTile implements TiledMapTile {
 
 	private float animationInterval;
 	private long frameCount = 0;
+	private static final long initialTimeOffset = TimeUtils.millis();
 
 	@Override
 	public int getId () {
@@ -44,7 +45,7 @@ public class AnimatedTiledMapTile implements TiledMapTile {
 
 	@Override
 	public TextureRegion getTextureRegion () {
-		long currentFrame = (lastTiledMapRenderTime / (long)animationInterval) % frameCount;
+		long currentFrame = (lastTiledMapRenderTime / (long)(animationInterval * 1000f)) % frameCount;
 		return frameTiles.get((int)currentFrame).getTextureRegion();
 	}
 
@@ -59,7 +60,7 @@ public class AnimatedTiledMapTile implements TiledMapTile {
 	/** Function is called by BatchTiledMapRenderer render(), lastTiledMapRenderTime is used to keep all of the tiles in lock-step
 	 * animation and avoids having to call TimeUtils.millis() in getTextureRegion() */
 	public static void updateAnimationBaseTime () {
-		lastTiledMapRenderTime = TimeUtils.millis();
+		lastTiledMapRenderTime = TimeUtils.millis() - initialTimeOffset;
 	}
 
 	public AnimatedTiledMapTile (float interval, Array<StaticTiledMapTile> frameTiles) {
diff --git a/gdx/src/com/badlogic/gdx/math/Intersector.java b/gdx/src/com/badlogic/gdx/math/Intersector.java
index b6267f8..47129a4 100644
--- a/gdx/src/com/badlogic/gdx/math/Intersector.java
+++ b/gdx/src/com/badlogic/gdx/math/Intersector.java
@@ -369,7 +369,7 @@ public final class Intersector {
 		Vector3.tmp.set(ray.origin);
 		Vector3.tmp2.set(ray.origin);
 		Vector3.tmp.sub(box.min);
-		Vector3.tmp.sub(box.max);
+		Vector3.tmp2.sub(box.max);
 		if (Vector3.tmp.x > 0 && Vector3.tmp.y > 0 && Vector3.tmp.z > 0 && Vector3.tmp2.x < 0 && Vector3.tmp2.y < 0
 			&& Vector3.tmp2.z < 0) {
 			return true;
diff --git a/gdx/src/com/badlogic/gdx/physics/box2d/Shape.java b/gdx/src/com/badlogic/gdx/physics/box2d/Shape.java
index 4e806a6..9728b76 100644
--- a/gdx/src/com/badlogic/gdx/physics/box2d/Shape.java
+++ b/gdx/src/com/badlogic/gdx/physics/box2d/Shape.java
@@ -30,7 +30,7 @@ public abstract class Shape {
 	/** Enum describing the type of a shape
 	 * @author mzechner */
 	public enum Type {
-		Circle, Polygon, Edge, Chain,
+		Circle, Edge, Polygon, Chain,
 	};
 
 	/** the address of the shape **/
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/Actor.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/Actor.java
index 7243870..12354f9 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/Actor.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/Actor.java
@@ -82,13 +82,12 @@ public class Actor {
 	 * The default implementation calls {@link Action#act(float)} on each action and removes actions that are complete.
 	 * @param delta Time in seconds since the last frame. */
 	public void act (float delta) {
-		for (int i = 0, n = actions.size; i < n; i++) {
+		for (int i = 0; i < actions.size; i++) {
 			Action action = actions.get(i);
-			if (action.act(delta)) {
+			if (action.act(delta) && i < actions.size) {
 				actions.removeIndex(i);
 				action.setActor(null);
 				i--;
-				n--;
 			}
 		}
 	}
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Button.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Button.java
index 8ddfc2b..9676f1e 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Button.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Button.java
@@ -72,8 +72,6 @@ public class Button extends Table {
 	public Button (ButtonStyle style) {
 		initialize();
 		setStyle(style);
-		setWidth(getPrefWidth());
-		setHeight(getPrefHeight());
 	}
 
 	private void initialize () {
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/List.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/List.java
index 0b507c4..d7f7e7f 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/List.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/List.java
@@ -43,6 +43,7 @@ public class List extends Widget implements Cullable {
 	private float prefWidth, prefHeight;
 	private float itemHeight;
 	private float textOffsetX, textOffsetY;
+	private boolean selectable = true;
 
 	public List (Object[] items, Skin skin) {
 		this(items, skin.get(ListStyle.class));
@@ -61,12 +62,23 @@ public class List extends Widget implements Cullable {
 		addListener(new InputListener() {
 			public boolean touchDown (InputEvent event, float x, float y, int pointer, int button) {
 				if (pointer == 0 && button != 0) return false;
+				if (!isSelectable()) return false; // don't eat touch event when NOT selectable
 				List.this.touchDown(y);
 				return true;
 			}
 		});
 	}
 
+	/** Sets whether this List's items are selectable. If not selectable, touch events will not be consumed. */
+	public void setSelectable (boolean selectable) {
+		this.selectable = selectable;
+	}
+
+	/** @return True if items are selectable. */
+	public boolean isSelectable () {
+		return selectable;
+	}
+
 	void touchDown (float y) {
 		int oldIndex = selectedIndex;
 		selectedIndex = (int)((getHeight() - y) / itemHeight);
@@ -126,24 +138,26 @@ public class List extends Widget implements Cullable {
 		}
 	}
 
-	/** @return The index of the currently selected item. The top item has an index of 0. */
+	/** @return The index of the currently selected item. The top item has an index of 0. Nothing selected has an index of -1. */
 	public int getSelectedIndex () {
 		return selectedIndex;
 	}
 
+	/** @param index Set to -1 for nothing selected. */
 	public void setSelectedIndex (int index) {
-		if (index < 0 || index >= items.length)
-			throw new GdxRuntimeException("index must be >= 0 and < " + items.length + ": " + index);
+		if (index < -1 || index >= items.length)
+			throw new GdxRuntimeException("index must be >= -1 and < " + items.length + ": " + index);
 		selectedIndex = index;
 	}
 
-	/** @return The text of the currently selected item or null if the list is empty. */
+	/** @return The text of the currently selected item, or null if the list is empty or nothing is selected. */
 	public String getSelection () {
-		if (items.length == 0) return null;
+		if (items.length == 0 || selectedIndex == -1) return null;
 		return items[selectedIndex];
 	}
 
-	/** @return The index of the item that was selected, or -1. */
+	/** Sets the selection to the item if found, else sets the selection to nothing.
+	 * @return The new selected index. */
 	public int setSelection (String item) {
 		selectedIndex = -1;
 		for (int i = 0, n = items.length; i < n; i++) {
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/SelectBox.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/SelectBox.java
index 7ab3a31..fa30d6c 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/SelectBox.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/SelectBox.java
@@ -54,6 +54,7 @@ public class SelectBox extends Widget {
 	SelectList list;
 	private float prefWidth, prefHeight;
 	private ClickListener clickListener;
+	int maxListCount;
 
 	public SelectBox (Object[] items, Skin skin) {
 		this(items, skin.get(SelectBoxStyle.class));
@@ -80,6 +81,17 @@ public class SelectBox extends Widget {
 		});
 	}
 
+	/** Set the max number of items to display when the select box is opened. Set to 0 (the default) to display as many as fit in
+	 * the stage height. */
+	public void setMaxListCount (int maxListCount) {
+		this.maxListCount = maxListCount;
+	}
+
+	/** @return Max number of dropdown List items to display when the box is opened, or <= 0 to display them all. */
+	public int getMaxListCount () {
+		return maxListCount;
+	}
+
 	public void setStyle (SelectBoxStyle style) {
 		if (style == null) throw new IllegalArgumentException("style cannot be null.");
 		this.style = style;
@@ -118,8 +130,8 @@ public class SelectBox extends Widget {
 		for (int i = 0; i < items.length; i++)
 			max = Math.max(font.getBounds(items[i]).width, max);
 		prefWidth = bg.getLeftWidth() + bg.getRightWidth() + max;
-		prefWidth = Math.max(prefWidth, max + style.listBackground.getLeftWidth() + style.listBackground.getRightWidth() + 2
-			* style.itemSpacing);
+		prefWidth = Math.max(prefWidth, max + style.listBackground.getLeftWidth() + style.listBackground.getRightWidth()
+			+ style.listSelection.getLeftWidth() + style.listSelection.getRightWidth());
 
 		if (items.length > 0) {
 			ChangeEvent changeEvent = Pools.obtain(ChangeEvent.class);
@@ -254,8 +266,11 @@ public class SelectBox extends Widget {
 			list.setItems(items);
 			list.setSelectedIndex(selectedIndex);
 
-			// Show the list above or below the select box, limited to the available height.
-			float height = getPrefHeight();
+			// Show the list above or below the select box, limited to a number of items and the available height in the stage.
+			float height = list.getItemHeight() * (maxListCount <= 0 ? items.length : Math.min(maxListCount, items.length));
+			Drawable background = getStyle().background;
+			if (background != null) height += background.getTopHeight() + background.getBottomHeight();
+
 			float heightBelow = tmpCoords.y;
 			float heightAbove = stage.getCamera().viewportHeight - tmpCoords.y - SelectBox.this.getHeight();
 			boolean below = true;
@@ -313,7 +328,6 @@ public class SelectBox extends Widget {
 		public Drawable listSelection;
 		public BitmapFont font;
 		public Color fontColor = new Color(1, 1, 1, 1);
-		public float itemSpacing = 10;
 
 		public SelectBoxStyle () {
 		}
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Slider.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Slider.java
index 78ea308..34c98e0 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Slider.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Slider.java
@@ -192,16 +192,16 @@ public class Slider extends Widget {
 			float height = getHeight() - bg.getTopHeight() - bg.getBottomHeight();
 			float knobHeight = knob == null ? 0 : knob.getMinHeight();
 			sliderPos = y - bg.getBottomHeight() - knobHeight * 0.5f;
+			value = min + (max - min) * (sliderPos / (height - knobHeight));
 			sliderPos = Math.max(0, sliderPos);
 			sliderPos = Math.min(height - knobHeight, sliderPos);
-			value = min + (max - min) * (sliderPos / (height - knobHeight));
 		} else {
 			float width = getWidth() - bg.getLeftWidth() - bg.getRightWidth();
 			float knobWidth = knob == null ? 0 : knob.getMinWidth();
 			sliderPos = x - bg.getLeftWidth() - knobWidth * 0.5f;
+			value = min + (max - min) * (sliderPos / (width - knobWidth));
 			sliderPos = Math.max(0, sliderPos);
 			sliderPos = Math.min(width - knobWidth, sliderPos);
-			value = min + (max - min) * (sliderPos / (width - knobWidth));
 		}
 
 		float oldValue = value;
@@ -226,9 +226,10 @@ public class Slider extends Widget {
 	}
 
 	/** Sets the slider position, rounded to the nearest step size and clamped to the minumum and maximim values.
+	 * {@link #clamp(float)} can be overidden to allow values outside of the sliders min/max range.
 	 * @return false if the value was not changed because the slider already had the value or it was canceled by a listener. */
 	public boolean setValue (float value) {
-		value = snap(MathUtils.clamp(Math.round(value / stepSize) * stepSize, min, max));
+		value = snap(clamp(Math.round(value / stepSize) * stepSize));
 		float oldValue = this.value;
 		if (value == oldValue) return false;
 		float oldVisualValue = getVisualValue();
@@ -245,6 +246,12 @@ public class Slider extends Widget {
 		return !cancelled;
 	}
 
+	/** Clamps the value to the sliders min/max range. This can be overidden to allow a range different from the slider knob's
+	 * range. */
+	protected float clamp (float value) {
+		return MathUtils.clamp(value, min, max);
+	}
+
 	/** Sets the range of this slider. The slider's current value is reset to min. */
 	public void setRange (float min, float max) {
 		if (min > max) throw new IllegalArgumentException("min must be <= max");
@@ -297,18 +304,18 @@ public class Slider extends Widget {
 		if (animateInterpolation == null) throw new IllegalArgumentException("animateInterpolation cannot be null.");
 		this.animateInterpolation = animateInterpolation;
 	}
-	
+
 	/** Will make this slider snap to the specified values, if the knob is within the threshold */
-	public void setSnapToValues(float[] values, float threshold) {
+	public void setSnapToValues (float[] values, float threshold) {
 		this.snapValues = values;
 		this.threshold = threshold;
 	}
-	
+
 	/** Returns a snapped value, or the original value */
-	private float snap(float value) {
-		if(snapValues == null) return value;
+	private float snap (float value) {
+		if (snapValues == null) return value;
 		for (int i = 0; i < snapValues.length; i++) {
-			if(Math.abs(value - snapValues[i]) <= threshold) return snapValues[i];
+			if (Math.abs(value - snapValues[i]) <= threshold) return snapValues[i];
 		}
 		return value;
 	}
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java
index d501e45..e1cb265 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java
@@ -54,7 +54,7 @@ import java.util.List;
  * @author Nathan Sweet */
 public class Table extends WidgetGroup {
 	static {
-		Toolkit.instance = new TableToolkit();
+		if (Toolkit.instance == null) Toolkit.instance = new TableToolkit();
 	}
 
 	private final TableLayout layout;
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TableToolkit.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TableToolkit.java
index 5602fef..1313c7e 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TableToolkit.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TableToolkit.java
@@ -30,7 +30,7 @@ import com.badlogic.gdx.utils.ReflectionPool;
 
 /** The libgdx implementation of the table layout functionality.
  * @author Nathan Sweet */
-class TableToolkit extends Toolkit<Actor, Table, TableLayout> {
+public class TableToolkit extends Toolkit<Actor, Table, TableLayout> {
 	static boolean drawDebug;
 	static Pool<Cell> cellPool = new Pool() {
 		protected Cell newObject () {
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java
index 1ed79fb..55dbc17 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java
@@ -330,7 +330,6 @@ public class TextField extends Widget {
 								delete();
 							}
 						}
-						return true;
 					}
 					if (character != ENTER_DESKTOP && character != ENTER_ANDROID) {
 						if (filter != null && !filter.acceptChar(TextField.this, character)) return true;
diff --git a/gdx/src/com/badlogic/gdx/utils/JsonReader.java b/gdx/src/com/badlogic/gdx/utils/JsonReader.java
index 2cc54e2..4072214 100644
--- a/gdx/src/com/badlogic/gdx/utils/JsonReader.java
+++ b/gdx/src/com/badlogic/gdx/utils/JsonReader.java
@@ -426,6 +426,11 @@ public class JsonReader implements BaseJsonReader {
 			parseRuntimeEx = ex;
 		}
 
+		JsonValue root = this.root;
+		this.root = null;
+		current = null;
+		lastChild.clear();
+
 		if (p < pe) {
 			int lineNumber = 1;
 			for (int i = 0; i < p; i++)
@@ -442,8 +447,6 @@ public class JsonReader implements BaseJsonReader {
 		} else if (parseRuntimeEx != null) {
 			throw new SerializationException("Error parsing JSON: " + new String(data), parseRuntimeEx);
 		}
-		JsonValue root = this.root;
-		this.root = null;
 		return root;
 	}
 
@@ -581,6 +584,7 @@ public class JsonReader implements BaseJsonReader {
 	// line 236 "JsonReader.rl"
 
 	private final Array<JsonValue> elements = new Array(8);
+	private final Array<JsonValue> lastChild = new Array(8);
 	private JsonValue root, current;
 
 	private void addChild (String name, JsonValue child) {
@@ -588,9 +592,14 @@ public class JsonReader implements BaseJsonReader {
 		if (current == null) {
 			current = child;
 			root = child;
-		} else if (current.isArray() || current.isObject())
-			current.addChild(child);
-		else
+		} else if (current.isArray() || current.isObject()) {
+			if (current.size == 0)
+				current.child = child;
+			else
+				lastChild.pop().next = child;
+			lastChild.add(child);
+			current.size++;
+		} else
 			root = current;
 	}
 
@@ -610,6 +619,7 @@ public class JsonReader implements BaseJsonReader {
 
 	protected void pop () {
 		root = elements.pop();
+		if (current.size > 0) lastChild.pop();
 		current = elements.size > 0 ? elements.peek() : null;
 	}
 
diff --git a/gdx/src/com/badlogic/gdx/utils/JsonValue.java b/gdx/src/com/badlogic/gdx/utils/JsonValue.java
index ca60ccc..c775042 100644
--- a/gdx/src/com/badlogic/gdx/utils/JsonValue.java
+++ b/gdx/src/com/badlogic/gdx/utils/JsonValue.java
@@ -6,7 +6,7 @@ import com.badlogic.gdx.utils.JsonWriter.OutputType;
 /** Container for a JSON object, array, string, double, long, boolean, or null.
  * <p>
  * JsonValue children are a linked list. Iteration of arrays or objects is easily done using a for loop, like the example below.
- * This is more efficient than accessing children by index when there are many children.<br>
+ * This is much more efficient than accessing children by index when there are many children.<br>
  * 
  * <pre>
  * JsonValue map = ...;
@@ -15,16 +15,16 @@ import com.badlogic.gdx.utils.JsonWriter.OutputType;
  * </pre>
  * @author Nathan Sweet */
 public class JsonValue {
-	private String name;
 	private ValueType type;
 
 	private String stringValue;
-	private Boolean booleanValue;
-	private Double doubleValue;
+	private double doubleValue;
 	private long longValue;
 
-	private JsonValue child, next, prev;
-	private int size;
+	public String name;
+	/** May be null */
+	public JsonValue child, next, prev;
+	public int size;
 
 	public JsonValue (ValueType type) {
 		this.type = type;
@@ -121,7 +121,7 @@ public class JsonValue {
 		return child;
 	}
 
-	/** Returns this number of children in the array or object. */
+	/** @deprecated Use the size property instead. Returns this number of children in the array or object. */
 	public int size () {
 		return size;
 	}
@@ -130,78 +130,98 @@ public class JsonValue {
 	 * @return May be null if this value is null.
 	 * @throws IllegalStateException if this an array or object. */
 	public String asString () {
-		if (stringValue != null) return stringValue;
-		if (doubleValue != null) {
-			if (doubleValue % 1 == 0) return Long.toString(longValue);
+		switch (type) {
+		case stringValue:
+			return stringValue;
+		case doubleValue:
 			return Double.toString(doubleValue);
+		case longValue:
+			return Long.toString(longValue);
+		case booleanValue:
+			return longValue != 0 ? "true" : "false";
+		case nullValue:
+			return null;
 		}
-		if (booleanValue != null) return Boolean.toString(booleanValue);
-		if (type == ValueType.nullValue) return null;
 		throw new IllegalStateException("Value cannot be converted to string: " + type);
 	}
 
 	/** Returns this value as a float.
 	 * @throws IllegalStateException if this an array or object. */
 	public float asFloat () {
-		if (doubleValue != null) return doubleValue.floatValue();
-		if (stringValue != null) {
-			try {
-				return Float.parseFloat(stringValue);
-			} catch (NumberFormatException ignored) {
-			}
+		switch (type) {
+		case stringValue:
+			return Float.parseFloat(stringValue);
+		case doubleValue:
+			return (float)doubleValue;
+		case longValue:
+			return (float)longValue;
+		case booleanValue:
+			return longValue != 0 ? 1 : 0;
 		}
-		if (booleanValue != null) return booleanValue ? 1 : 0;
 		throw new IllegalStateException("Value cannot be converted to float: " + type);
 	}
 
 	/** Returns this value as a double.
 	 * @throws IllegalStateException if this an array or object. */
 	public double asDouble () {
-		if (doubleValue != null) return doubleValue;
-		if (stringValue != null) {
-			try {
-				return Double.parseDouble(stringValue);
-			} catch (NumberFormatException ignored) {
-			}
+		switch (type) {
+		case stringValue:
+			return Double.parseDouble(stringValue);
+		case doubleValue:
+			return doubleValue;
+		case longValue:
+			return (double)longValue;
+		case booleanValue:
+			return longValue != 0 ? 1 : 0;
 		}
-		if (booleanValue != null) return booleanValue ? 1 : 0;
 		throw new IllegalStateException("Value cannot be converted to double: " + type);
 	}
 
 	/** Returns this value as a long.
 	 * @throws IllegalStateException if this an array or object. */
 	public long asLong () {
-		if (doubleValue != null) return longValue;
-		if (stringValue != null) {
-			try {
-				return Long.parseLong(stringValue);
-			} catch (NumberFormatException ignored) {
-			}
+		switch (type) {
+		case stringValue:
+			return Long.parseLong(stringValue);
+		case doubleValue:
+			return (long)doubleValue;
+		case longValue:
+			return longValue;
+		case booleanValue:
+			return longValue != 0 ? 1 : 0;
 		}
-		if (booleanValue != null) return booleanValue ? 1 : 0;
 		throw new IllegalStateException("Value cannot be converted to long: " + type);
 	}
 
 	/** Returns this value as an int.
 	 * @throws IllegalStateException if this an array or object. */
 	public int asInt () {
-		if (doubleValue != null) return (int)longValue;
-		if (stringValue != null) {
-			try {
-				return Integer.parseInt(stringValue);
-			} catch (NumberFormatException ignored) {
-			}
+		switch (type) {
+		case stringValue:
+			return Integer.parseInt(stringValue);
+		case doubleValue:
+			return (int)doubleValue;
+		case longValue:
+			return (int)longValue;
+		case booleanValue:
+			return longValue != 0 ? 1 : 0;
 		}
-		if (booleanValue != null) return booleanValue ? 1 : 0;
 		throw new IllegalStateException("Value cannot be converted to int: " + type);
 	}
 
 	/** Returns this value as a boolean.
 	 * @throws IllegalStateException if this an array or object. */
 	public boolean asBoolean () {
-		if (booleanValue != null) return booleanValue;
-		if (doubleValue != null) return longValue == 0;
-		if (stringValue != null) return stringValue.equalsIgnoreCase("true");
+		switch (type) {
+		case stringValue:
+			return stringValue.equalsIgnoreCase("true");
+		case doubleValue:
+			return doubleValue == 0;
+		case longValue:
+			return longValue == 0;
+		case booleanValue:
+			return longValue != 0;
+		}
 		throw new IllegalStateException("Value cannot be converted to boolean: " + type);
 	}
 
@@ -416,23 +436,6 @@ public class JsonValue {
 		return child;
 	}
 
-	public void addChild (JsonValue newChild) {
-		size++;
-		JsonValue current = child;
-		if (current == null) {
-			child = newChild;
-			return;
-		}
-		while (true) {
-			if (current.next == null) {
-				current.next = newChild;
-				newChild.prev = current;
-				return;
-			}
-			current = current.next;
-		}
-	}
-
 	/** Returns the next sibling of this value.
 	 * @return May be null. */
 	public JsonValue next () {
@@ -472,12 +475,15 @@ public class JsonValue {
 	}
 
 	public void set (boolean value) {
-		booleanValue = value;
+		longValue = value ? 1 : 0;
 		type = ValueType.booleanValue;
 	}
 
 	public String toString () {
-		return prettyPrint(OutputType.minimal, 0);
+		if (isValue())
+			return name == null ? asString() : name + ": " + asString();
+		else
+			return prettyPrint(OutputType.minimal, 0);
 	}
 
 	public String prettyPrint (OutputType outputType, int singleLineColumns) {
diff --git a/gdx/src/com/badlogic/gdx/utils/UBJsonReader.java b/gdx/src/com/badlogic/gdx/utils/UBJsonReader.java
index dc316a7..aae63e9 100644
--- a/gdx/src/com/badlogic/gdx/utils/UBJsonReader.java
+++ b/gdx/src/com/badlogic/gdx/utils/UBJsonReader.java
@@ -83,8 +83,17 @@ public class UBJsonReader implements BaseJsonReader {
 	protected JsonValue parseArray(final DataInputStream din) throws IOException {
 		JsonValue result = new JsonValue(JsonValue.ValueType.array);
 		byte type = din.readByte();
+		JsonValue prev = null;
 		while (din.available() > 0 && type != ']') {
-			result.addChild(parse(din, type));
+			final JsonValue val = parse(din, type);
+			if (prev != null) {
+				prev.next = val;
+				result.size++;
+			} else {
+				result.child = val;
+				result.size = 1;
+			}
+			prev = val;
 			type = din.readByte();
 		}
 		return result;
@@ -93,13 +102,21 @@ public class UBJsonReader implements BaseJsonReader {
 	protected JsonValue parseObject(final DataInputStream din) throws IOException {
 		JsonValue result = new JsonValue(JsonValue.ValueType.object);
 		byte type = din.readByte();
+		JsonValue prev = null;
 		while (din.available() > 0 && type != '}') {
 			if (type != 's' && type != 'S')
 				throw new GdxRuntimeException("Only string key are currently supported");
 			final String key = parseString(din, type);
 			final JsonValue child = parse(din);
 			child.setName(key);
-			result.addChild(child);
+			if (prev != null) {
+				prev.next = child;
+				result.size++;
+			} else {
+				result.child = child;
+				result.size = 1;
+			}
+			prev = child;
 			type = din.readByte();
 		}
 		return result;
diff --git a/gdx/src/com/esotericsoftware/tablelayout/BaseTableLayout.java b/gdx/src/com/esotericsoftware/tablelayout/BaseTableLayout.java
index 5298f00..b29a21e 100644
--- a/gdx/src/com/esotericsoftware/tablelayout/BaseTableLayout.java
+++ b/gdx/src/com/esotericsoftware/tablelayout/BaseTableLayout.java
@@ -131,7 +131,10 @@ abstract public class BaseTableLayout<C, T extends C, L extends BaseTableLayout,
 	/** Indicates that subsequent cells should be added to a new row and returns the cell values that will be used as the defaults
 	 * for all cells in the new row. */
 	public Cell row () {
-		if (cells.size() > 0) endRow();
+		if (cells.size() > 0) {
+			endRow();
+			invalidate();
+		}
 		if (rowDefaults != null) toolkit.freeCell(rowDefaults);
 		rowDefaults = toolkit.obtainCell((L)this);
 		rowDefaults.clear();
@@ -148,7 +151,6 @@ abstract public class BaseTableLayout<C, T extends C, L extends BaseTableLayout,
 		columns = Math.max(columns, rowColumns);
 		rows++;
 		cells.get(cells.size() - 1).endRow = true;
-		invalidate();
 	}
 
 	/** Gets the cell values that will be used as the defaults for all cells in the specified column. Columns are indexed starting
@@ -442,7 +444,7 @@ abstract public class BaseTableLayout<C, T extends C, L extends BaseTableLayout,
 	}
 
 	public float getPadTop () {
-		return padTop == null ? 0 : padTop.height(this);
+		return padTop == null ? 0 : padTop.height(table);
 	}
 
 	public Value getPadLeftValue () {
@@ -450,7 +452,7 @@ abstract public class BaseTableLayout<C, T extends C, L extends BaseTableLayout,
 	}
 
 	public float getPadLeft () {
-		return padLeft == null ? 0 : padLeft.width(this);
+		return padLeft == null ? 0 : padLeft.width(table);
 	}
 
 	public Value getPadBottomValue () {
@@ -458,7 +460,7 @@ abstract public class BaseTableLayout<C, T extends C, L extends BaseTableLayout,
 	}
 
 	public float getPadBottom () {
-		return padBottom == null ? 0 : padBottom.height(this);
+		return padBottom == null ? 0 : padBottom.height(table);
 	}
 
 	public Value getPadRightValue () {
@@ -466,7 +468,7 @@ abstract public class BaseTableLayout<C, T extends C, L extends BaseTableLayout,
 	}
 
 	public float getPadRight () {
-		return padRight == null ? 0 : padRight.width(this);
+		return padRight == null ? 0 : padRight.width(table);
 	}
 
 	public int getAlign () {
@@ -563,12 +565,12 @@ abstract public class BaseTableLayout<C, T extends C, L extends BaseTableLayout,
 			spaceRightLast = spaceRight;
 
 			// Determine minimum and preferred cell sizes.
-			float prefWidth = w(c.prefWidth, c);
-			float prefHeight = h(c.prefHeight, c);
-			float minWidth = w(c.minWidth, c);
-			float minHeight = h(c.minHeight, c);
-			float maxWidth = w(c.maxWidth, c);
-			float maxHeight = h(c.maxHeight, c);
+			float prefWidth = c.prefWidth.get(c);
+			float prefHeight = c.prefHeight.get(c);
+			float minWidth = c.minWidth.get(c);
+			float minHeight = c.minHeight.get(c);
+			float maxWidth = c.maxWidth.get(c);
+			float maxHeight = c.maxHeight.get(c);
 			if (prefWidth < minWidth) prefWidth = minWidth;
 			if (prefHeight < minHeight) prefHeight = minHeight;
 			if (maxWidth > 0 && prefWidth > maxWidth) prefWidth = maxWidth;
@@ -600,9 +602,9 @@ abstract public class BaseTableLayout<C, T extends C, L extends BaseTableLayout,
 			Cell c = cells.get(i);
 			if (c.ignore || c.colspan == 1) continue;
 
-			float minWidth = w(c.minWidth, c);
-			float prefWidth = w(c.prefWidth, c);
-			float maxWidth = w(c.maxWidth, c);
+			float minWidth = c.minWidth.get(c);
+			float prefWidth = c.prefWidth.get(c);
+			float maxWidth = c.maxWidth.get(c);
 			if (prefWidth < minWidth) prefWidth = minWidth;
 			if (maxWidth > 0 && prefWidth > maxWidth) prefWidth = maxWidth;
 
@@ -693,8 +695,10 @@ abstract public class BaseTableLayout<C, T extends C, L extends BaseTableLayout,
 
 		if (sizeInvalid) computeSize();
 
-		float hpadding = w(padLeft) + w(padRight);
-		float vpadding = h(padTop) + h(padBottom);
+		float padLeft = w(this.padLeft);
+		float hpadding = padLeft + w(padRight);
+		float padTop = h(this.padTop);
+		float vpadding = padTop + h(padBottom);
 
 		float totalExpandWidth = 0, totalExpandHeight = 0;
 		for (int i = 0; i < columns; i++)
@@ -741,12 +745,12 @@ abstract public class BaseTableLayout<C, T extends C, L extends BaseTableLayout,
 				spannedWeightedWidth += columnWeightedWidth[column];
 			float weightedHeight = rowWeightedHeight[c.row];
 
-			float prefWidth = w(c.prefWidth, c);
-			float prefHeight = h(c.prefHeight, c);
-			float minWidth = w(c.minWidth, c);
-			float minHeight = h(c.minHeight, c);
-			float maxWidth = w(c.maxWidth, c);
-			float maxHeight = h(c.maxHeight, c);
+			float prefWidth = c.prefWidth.get(c);
+			float prefHeight = c.prefHeight.get(c);
+			float minWidth = c.minWidth.get(c);
+			float minHeight = c.minHeight.get(c);
+			float maxWidth = c.maxWidth.get(c);
+			float maxHeight = c.maxHeight.get(c);
 			if (prefWidth < minWidth) prefWidth = minWidth;
 			if (prefHeight < minHeight) prefHeight = minHeight;
 			if (maxWidth > 0 && prefWidth > maxWidth) prefWidth = maxWidth;
@@ -817,13 +821,13 @@ abstract public class BaseTableLayout<C, T extends C, L extends BaseTableLayout,
 			tableHeight += rowHeight[i];
 
 		// Position table within the container.
-		float x = layoutX + w(padLeft);
+		float x = layoutX + padLeft;
 		if ((align & RIGHT) != 0)
 			x += layoutWidth - tableWidth;
 		else if ((align & LEFT) == 0) // Center
 			x += (layoutWidth - tableWidth) / 2;
 
-		float y = layoutY + w(padTop);
+		float y = layoutY + padTop;
 		if ((align & BOTTOM) != 0)
 			y += layoutHeight - tableHeight;
 		else if ((align & TOP) == 0) // Center
@@ -844,12 +848,12 @@ abstract public class BaseTableLayout<C, T extends C, L extends BaseTableLayout,
 
 			if (c.fillX > 0) {
 				c.widgetWidth = spannedCellWidth * c.fillX;
-				float maxWidth = w(c.maxWidth, c);
+				float maxWidth = c.maxWidth.get(c);
 				if (maxWidth > 0) c.widgetWidth = Math.min(c.widgetWidth, maxWidth);
 			}
 			if (c.fillY > 0) {
 				c.widgetHeight = rowHeight[c.row] * c.fillY - c.computedPadTop - c.computedPadBottom;
-				float maxHeight = h(c.maxHeight, c);
+				float maxHeight = c.maxHeight.get(c);
 				if (maxHeight > 0) c.widgetHeight = Math.min(c.widgetHeight, maxHeight);
 			}
 
diff --git a/tests/gdx-tests-android/assets/data/g3d/cube.g3dj b/tests/gdx-tests-android/assets/data/g3d/cube.g3dj
new file mode 100644
index 0000000..dd44fdb
--- /dev/null
+++ b/tests/gdx-tests-android/assets/data/g3d/cube.g3dj
@@ -0,0 +1,71 @@
+{
+	"version": [  0,   1], 
+	"id": "", 
+	"meshes": [
+		{
+			"attributes": ["POSITION", "NORMAL", "TEXCOORD0"], 
+			"vertices": [
+				-1.000000, -1.000000, 0.000000, 0, 0, 1, 0, 0,
+				 1.000000,  1.000000, 0.000000, 0, 0, 1, 1, 1,
+				 1.000000, -1.000000, 0.000000, 0, 0, 1, 1, 0,
+				-1.000000,  1.000000, 0.000000, 0, 0, 1, 0, 1
+			], 
+			"parts": [
+				{
+					"id": "mpart1", 
+					"type": "TRIANGLES", 
+					"indices": [
+						  0,   1,   2,   2,   3,   0
+					]
+				}
+			]
+		}
+	], 
+	"materials": [
+		{
+			"id": "Material", 
+			"diffuse": [ 1, 0, 0], 
+			"textures": [
+				{
+					"id": "Knight_png", 
+					"filename": "checkboard.png", 
+					"type": "DIFFUSE"
+				},
+				{
+					"id": "checkerboard", 
+					"filename": "Knight.png", 
+					"type": "NONE"
+				},
+				{
+					"id": "t1", 
+					"filename": "ship.png", 
+					"type": "NONE"
+				},
+				{
+					"id": "t2", 
+					"filename": "space.jpg", 
+					"type": "NONE"
+				},
+				{
+					"id": "t3", 
+					"filename": "invader.png", 
+					"type": "NONE"
+				}
+			]}
+	], 
+	"nodes": [
+		{"id": "Cube", 
+			"parts": [
+				{"meshpartid": "mpart1", 
+					"materialid": "Material",
+					"uvMapping": [[  0]]}
+			]
+		}
+	], 
+	"animations": [
+		{
+			"id": "Default Take", 
+			"bones": []
+		}
+	]
+}
\ No newline at end of file
diff --git a/tests/gdx-tests-android/assets/data/g3d/invader.png b/tests/gdx-tests-android/assets/data/g3d/invader.png
new file mode 100644
index 0000000..19e2cf1
Binary files /dev/null and b/tests/gdx-tests-android/assets/data/g3d/invader.png differ
diff --git a/tests/gdx-tests-android/assets/data/g3d/invaders.g3dj b/tests/gdx-tests-android/assets/data/g3d/invaders.g3dj
new file mode 100644
index 0000000..934d9da
--- /dev/null
+++ b/tests/gdx-tests-android/assets/data/g3d/invaders.g3dj
@@ -0,0 +1,1528 @@
+{
+	"version": [  0,   1], 
+	"id": "", 
+	"meshes": [
+		{
+			"attributes": ["POSITION", "NORMAL", "TEXCOORD0"], 
+			"vertices": [
+				 25.000017, -95.105652, -18.163574, -0.269870,  0.942723,  0.196072,  0.050000,  0.900000, 
+				 14.877812, -98.768837, -4.834094, -0.190555,  0.979722,  0.061915,  0.000000,  0.950000, 
+				 29.389284, -95.105652, -9.549156, -0.317252,  0.942722,  0.103081,  0.000000,  0.900000, 
+				 12.655824, -98.768837, -9.194993, -0.162096,  0.979722,  0.117769,  0.050000,  0.950000, 
+				 18.163574, -95.105652, -25.000017, -0.196072,  0.942722,  0.269870,  0.100000,  0.900000, 
+				 9.194993, -98.768837, -12.655823, -0.117769,  0.979722,  0.162096,  0.100000,  0.950000, 
+				 9.549155, -95.105652, -29.389280, -0.103081,  0.942722,  0.317252,  0.150000,  0.900000, 
+				 4.834094, -98.768837, -14.877810, -0.061915,  0.979722,  0.190555,  0.150000,  0.950000, 
+				 0.000000, -95.105652, -30.901716,  0.000000,  0.942722,  0.333578,  0.200000,  0.900000, 
+				 0.000000, -98.768837, -15.643456,  0.000000,  0.979722,  0.200361,  0.200000,  0.950000, 
+				-9.549155, -95.105652, -29.389278,  0.103081,  0.942722,  0.317252,  0.250000,  0.900000, 
+				-4.834094, -98.768837, -14.877810,  0.061915,  0.979722,  0.190555,  0.250000,  0.950000, 
+				-18.163570, -95.105652, -25.000011,  0.196072,  0.942722,  0.269870,  0.300000,  0.900000, 
+				-9.194991, -98.768837, -12.655820,  0.117769,  0.979722,  0.162096,  0.300000,  0.950000, 
+				-25.000010, -95.105652, -18.163568,  0.269870,  0.942723,  0.196072,  0.350000,  0.900000, 
+				-12.655819, -98.768837, -9.194990,  0.162096,  0.979722,  0.117769,  0.350000,  0.950000, 
+				-14.877808, -98.768837, -4.834092,  0.190555,  0.979722,  0.061915,  0.400000,  0.950000, 
+				-29.389273, -95.105652, -9.549153,  0.317252,  0.942722,  0.103081,  0.400000,  0.900000, 
+				-30.901709, -95.105652,  0.000000,  0.333578,  0.942722,  0.000000,  0.450000,  0.900000, 
+				-15.643452, -98.768837,  0.000000,  0.200361,  0.979722,  0.000000,  0.450000,  0.950000, 
+				-14.877808, -98.768837,  4.834092,  0.190555,  0.979722, -0.061915,  0.500000,  0.950000, 
+				-29.389273, -95.105652,  9.549153,  0.317252,  0.942723, -0.103081,  0.500000,  0.900000, 
+				-25.000008, -95.105652,  18.163567,  0.269870,  0.942722, -0.196072,  0.550000,  0.900000, 
+				-12.655818, -98.768837,  9.194990,  0.162096,  0.979722, -0.117769,  0.550000,  0.950000, 
+				-18.163567, -95.105652,  25.000006,  0.196072,  0.942722, -0.269870,  0.600000,  0.900000, 
+				-9.194990, -98.768837,  12.655817,  0.117769,  0.979722, -0.162095,  0.600000,  0.950000, 
+				-4.834092, -98.768837,  14.877806,  0.061915,  0.979722, -0.190555,  0.650000,  0.950000, 
+				-9.549153, -95.105652,  29.389269,  0.103081,  0.942723, -0.317251,  0.650000,  0.900000, 
+				-0.000001, -95.105652,  30.901705, -0.000000,  0.942723, -0.333578,  0.700000,  0.900000, 
+				-0.000000, -98.768837,  15.643450, -0.000000,  0.979722, -0.200361,  0.700000,  0.950000, 
+				 9.549150, -95.105652,  29.389267, -0.103081,  0.942722, -0.317251,  0.750000,  0.900000, 
+				 4.834091, -98.768837,  14.877805, -0.061915,  0.979722, -0.190555,  0.750000,  0.950000, 
+				 18.163565, -95.105652,  25.000004, -0.196072,  0.942722, -0.269870,  0.800000,  0.900000, 
+				 9.194988, -98.768837,  12.655816, -0.117769,  0.979722, -0.162096,  0.800000,  0.950000, 
+				 25.000002, -95.105652,  18.163567, -0.269870,  0.942722, -0.196072,  0.850000,  0.900000, 
+				 12.655815, -98.768837,  9.194989, -0.162096,  0.979722, -0.117770,  0.850000,  0.950000, 
+				 29.389265, -95.105652,  9.549151, -0.317252,  0.942722, -0.103081,  0.900000,  0.900000, 
+				 14.877804, -98.768837,  4.834091, -0.190555,  0.979722, -0.061915,  0.900000,  0.950000, 
+				 30.901701, -95.105652,  0.000000, -0.333578,  0.942722,  0.000000,  0.950000,  0.900000, 
+				 15.643448, -98.768837,  0.000000, -0.200361,  0.979722, -0.000000,  0.950000,  0.950000, 
+				 14.877812, -98.768837, -4.834094, -0.190555,  0.979722,  0.061915,  1.000000,  0.950000, 
+				 29.389284, -95.105652, -9.549156, -0.317252,  0.942722,  0.103081,  1.000000,  0.900000, 
+				 36.728630, -89.100655, -26.684910, -0.380846,  0.882266,  0.276701,  0.050000,  0.850000, 
+				 43.177094, -89.100655, -14.029087, -0.447711,  0.882266,  0.145470,  0.000000,  0.850000, 
+				 26.684910, -89.100655, -36.728626, -0.276701,  0.882266,  0.380846,  0.100000,  0.850000, 
+				 14.029085, -89.100655, -43.177086, -0.145470,  0.882266,  0.447711,  0.150000,  0.850000, 
+				 0.000000, -89.100655, -45.399075,  0.000000,  0.882266,  0.470752,  0.200000,  0.850000, 
+				-14.029085, -89.100655, -43.177082,  0.145470,  0.882266,  0.447711,  0.250000,  0.850000, 
+				-26.684904, -89.100655, -36.728619,  0.276701,  0.882266,  0.380846,  0.300000,  0.850000, 
+				-36.728615, -89.100655, -26.684900,  0.380846,  0.882266,  0.276701,  0.350000,  0.850000, 
+				-43.177074, -89.100655, -14.029081,  0.447712,  0.882266,  0.145470,  0.400000,  0.850000, 
+				-45.399063, -89.100655,  0.000000,  0.470752,  0.882266,  0.000000,  0.450000,  0.850000, 
+				-43.177074, -89.100655,  14.029081,  0.447711,  0.882266, -0.145470,  0.500000,  0.850000, 
+				-36.728611, -89.100655,  26.684898,  0.380846,  0.882266, -0.276701,  0.550000,  0.850000, 
+				-26.684898, -89.100655,  36.728611,  0.276701,  0.882266, -0.380846,  0.600000,  0.850000, 
+				-14.029081, -89.100655,  43.177071,  0.145470,  0.882266, -0.447712,  0.650000,  0.850000, 
+				-0.000001, -89.100655,  45.399055, -0.000000,  0.882266, -0.470752,  0.700000,  0.850000, 
+				 14.029078, -89.100655,  43.177067, -0.145470,  0.882266, -0.447712,  0.750000,  0.850000, 
+				 26.684893, -89.100655,  36.728607, -0.276701,  0.882266, -0.380846,  0.800000,  0.850000, 
+				 36.728603, -89.100655,  26.684895, -0.380846,  0.882266, -0.276701,  0.850000,  0.850000, 
+				 43.177067, -89.100655,  14.029078, -0.447712,  0.882266, -0.145470,  0.900000,  0.850000, 
+				 45.399052, -89.100655,  0.000000, -0.470752,  0.882266, -0.000000,  0.950000,  0.850000, 
+				 43.177094, -89.100655, -14.029087, -0.447711,  0.882266,  0.145470,  1.000000,  0.850000, 
+				 47.552860, -80.901703, -34.549171, -0.485138,  0.800252,  0.352474,  0.050000,  0.800000, 
+				 55.901737, -80.901703, -18.163574, -0.570315,  0.800252,  0.185306,  0.000000,  0.800000, 
+				 34.549171, -80.901703, -47.552856, -0.352473,  0.800252,  0.485138,  0.100000,  0.800000, 
+				 18.163572, -80.901703, -55.901730, -0.185306,  0.800252,  0.570314,  0.150000,  0.800000, 
+				 0.000000, -80.901703, -58.778553,  0.000000,  0.800252,  0.599664,  0.200000,  0.800000, 
+				-18.163572, -80.901703, -55.901726,  0.185306,  0.800252,  0.570314,  0.250000,  0.800000, 
+				-34.549164, -80.901703, -47.552845,  0.352474,  0.800252,  0.485138,  0.300000,  0.800000, 
+				-47.552841, -80.901703, -34.549160,  0.485139,  0.800252,  0.352474,  0.350000,  0.800000, 
+				-55.901714, -80.901703, -18.163567,  0.570314,  0.800252,  0.185306,  0.400000,  0.800000, 
+				-58.778542, -80.901703,  0.000000,  0.599664,  0.800252,  0.000000,  0.450000,  0.800000, 
+				-55.901714, -80.901703,  18.163567,  0.570314,  0.800252, -0.185306,  0.500000,  0.800000, 
+				-47.552837, -80.901703,  34.549156,  0.485138,  0.800252, -0.352474,  0.550000,  0.800000, 
+				-34.549156, -80.901703,  47.552834,  0.352474,  0.800252, -0.485138,  0.600000,  0.800000, 
+				-18.163567, -80.901703,  55.901711,  0.185306,  0.800252, -0.570315,  0.650000,  0.800000, 
+				-0.000002, -80.901703,  58.778534, -0.000000,  0.800252, -0.599664,  0.700000,  0.800000, 
+				 18.163563, -80.901703,  55.901707, -0.185306,  0.800252, -0.570315,  0.750000,  0.800000, 
+				 34.549149, -80.901703,  47.552830, -0.352474,  0.800252, -0.485138,  0.800000,  0.800000, 
+				 47.552826, -80.901703,  34.549152, -0.485138,  0.800252, -0.352474,  0.850000,  0.800000, 
+				 55.901703, -80.901703,  18.163565, -0.570315,  0.800252, -0.185307,  0.900000,  0.800000, 
+				 58.778526, -80.901703,  0.000000, -0.599664,  0.800252, -0.000001,  0.950000,  0.800000, 
+				 55.901737, -80.901703, -18.163574, -0.570315,  0.800252,  0.185306,  1.000000,  0.800000, 
+				 67.249893, -70.710678, -21.850815, -0.680318,  0.698789,  0.221048,  0.000000,  0.750000, 
+				 57.206181, -70.710678, -41.562717, -0.578713,  0.698789,  0.420459,  0.050000,  0.750000, 
+				 41.562717, -70.710678, -57.206173, -0.420459,  0.698789,  0.578713,  0.100000,  0.750000, 
+				 21.850813, -70.710678, -67.249886, -0.221049,  0.698789,  0.680318,  0.150000,  0.750000, 
+				 0.000000, -70.710678, -70.710709,  0.000000,  0.698789,  0.715328,  0.200000,  0.750000, 
+				-21.850813, -70.710678, -67.249886,  0.221049,  0.698789,  0.680318,  0.250000,  0.750000, 
+				-41.562710, -70.710678, -57.206161,  0.420460,  0.698789,  0.578713,  0.300000,  0.750000, 
+				-57.206158, -70.710678, -41.562706,  0.578713,  0.698789,  0.420459,  0.350000,  0.750000, 
+				-67.249870, -70.710678, -21.850805,  0.680318,  0.698789,  0.221049,  0.400000,  0.750000, 
+				-70.710693, -70.710678,  0.000000,  0.715328,  0.698789, -0.000000,  0.450000,  0.750000, 
+				-67.249870, -70.710678,  21.850805,  0.680318,  0.698788, -0.221049,  0.500000,  0.750000, 
+				-57.206154, -70.710678,  41.562702,  0.578713,  0.698788, -0.420460,  0.550000,  0.750000, 
+				-41.562702, -70.710678,  57.206150,  0.420459,  0.698788, -0.578713,  0.600000,  0.750000, 
+				-21.850805, -70.710678,  67.249863,  0.221049,  0.698788, -0.680318,  0.650000,  0.750000, 
+				-0.000002, -70.710678,  70.710686, -0.000000,  0.698789, -0.715328,  0.700000,  0.750000, 
+				 21.850800, -70.710678,  67.249855, -0.221049,  0.698788, -0.680318,  0.750000,  0.750000, 
+				 41.562695, -70.710678,  57.206146, -0.420459,  0.698788, -0.578713,  0.800000,  0.750000, 
+				 57.206142, -70.710678,  41.562698, -0.578713,  0.698788, -0.420459,  0.850000,  0.750000, 
+				 67.249855, -70.710678,  21.850801, -0.680318,  0.698788, -0.221049,  0.900000,  0.750000, 
+				 70.710678, -70.710678,  0.000000, -0.715328,  0.698788, -0.000001,  0.950000,  0.750000, 
+				 67.249893, -70.710678, -21.850815, -0.680318,  0.698789,  0.221048,  1.000000,  0.750000, 
+				 76.942139, -58.778526, -25.000015, -0.774475,  0.580401,  0.251641,  0.000000,  0.700000, 
+				 65.450897, -58.778526, -47.552856, -0.658808,  0.580401,  0.478652,  0.050000,  0.700000, 
+				 47.552856, -58.778526, -65.450890, -0.478652,  0.580401,  0.658808,  0.100000,  0.700000, 
+				 25.000013, -58.778526, -76.942131, -0.251642,  0.580401,  0.774475,  0.150000,  0.700000, 
+				 0.000000, -58.778526, -80.901741,  0.000000,  0.580401,  0.814331,  0.200000,  0.700000, 
+				-25.000013, -58.778526, -76.942131,  0.251642,  0.580401,  0.774475,  0.250000,  0.700000, 
+				-47.552845, -58.778526, -65.450874,  0.478652,  0.580401,  0.658808,  0.300000,  0.700000, 
+				-65.450874, -58.778526, -47.552841,  0.658808,  0.580401,  0.478652,  0.350000,  0.700000, 
+				-76.942116, -58.778526, -25.000006,  0.774475,  0.580401,  0.251642,  0.400000,  0.700000, 
+				-80.901726, -58.778526,  0.000000,  0.814331,  0.580400, -0.000000,  0.450000,  0.700000, 
+				-76.942116, -58.778526,  25.000006,  0.774475,  0.580401, -0.251642,  0.500000,  0.700000, 
+				-65.450867, -58.778526,  47.552837,  0.658808,  0.580401, -0.478652,  0.550000,  0.700000, 
+				-47.552837, -58.778526,  65.450859,  0.478652,  0.580401, -0.658808,  0.600000,  0.700000, 
+				-25.000006, -58.778526,  76.942101,  0.251642,  0.580401, -0.774475,  0.650000,  0.700000, 
+				-0.000002, -58.778526,  80.901711, -0.000000,  0.580401, -0.814331,  0.700000,  0.700000, 
+				 25.000000, -58.778526,  76.942101, -0.251642,  0.580401, -0.774475,  0.750000,  0.700000, 
+				 47.552826, -58.778526,  65.450859, -0.478652,  0.580401, -0.658808,  0.800000,  0.700000, 
+				 65.450851, -58.778526,  47.552834, -0.658808,  0.580400, -0.478652,  0.850000,  0.700000, 
+				 76.942093, -58.778526,  25.000002, -0.774475,  0.580401, -0.251642,  0.900000,  0.700000, 
+				 80.901703, -58.778526,  0.000000, -0.814331,  0.580401, -0.000001,  0.950000,  0.700000, 
+				 76.942139, -58.778526, -25.000015, -0.774475,  0.580401,  0.251641,  1.000000,  0.700000, 
+				 84.739815, -45.399052, -27.533632, -0.850280,  0.447994,  0.276272,  0.000000,  0.650000, 
+				 72.083992, -45.399052, -52.372082, -0.723291,  0.447994,  0.525502,  0.050000,  0.650000, 
+				 52.372082, -45.399052, -72.083984, -0.525501,  0.447994,  0.723291,  0.100000,  0.650000, 
+				 27.533630, -45.399052, -84.739799, -0.276272,  0.447994,  0.850280,  0.150000,  0.650000, 
+				 0.000000, -45.399052, -89.100700,  0.000000,  0.447993,  0.894037,  0.200000,  0.650000, 
+				-27.533630, -45.399052, -84.739799,  0.276273,  0.447993,  0.850280,  0.250000,  0.650000, 
+				-52.372070, -45.399052, -72.083969,  0.525502,  0.447994,  0.723291,  0.300000,  0.650000, 
+				-72.083969, -45.399052, -52.372066,  0.723291,  0.447993,  0.525502,  0.350000,  0.650000, 
+				-84.739784, -45.399052, -27.533623,  0.850280,  0.447993,  0.276273,  0.400000,  0.650000, 
+				-89.100677, -45.399052,  0.000000,  0.894037,  0.447993, -0.000000,  0.450000,  0.650000, 
+				-84.739784, -45.399052,  27.533623,  0.850280,  0.447993, -0.276273,  0.500000,  0.650000, 
+				-72.083961, -45.399052,  52.372059,  0.723291,  0.447993, -0.525502,  0.550000,  0.650000, 
+				-52.372059, -45.399052,  72.083954,  0.525502,  0.447994, -0.723291,  0.600000,  0.650000, 
+				-27.533623, -45.399052,  84.739769,  0.276272,  0.447994, -0.850280,  0.650000,  0.650000, 
+				-0.000003, -45.399052,  89.100662, -0.000000,  0.447993, -0.894037,  0.700000,  0.650000, 
+				 27.533615, -45.399052,  84.739769, -0.276273,  0.447993, -0.850280,  0.750000,  0.650000, 
+				 52.372051, -45.399052,  72.083946, -0.525502,  0.447993, -0.723291,  0.800000,  0.650000, 
+				 72.083946, -45.399052,  52.372055, -0.723291,  0.447994, -0.525502,  0.850000,  0.650000, 
+				 84.739761, -45.399052,  27.533617, -0.850280,  0.447993, -0.276273,  0.900000,  0.650000, 
+				 89.100655, -45.399052,  0.000000, -0.894037,  0.447994, -0.000001,  0.950000,  0.650000, 
+				 84.739815, -45.399052, -27.533632, -0.850280,  0.447994,  0.276272,  1.000000,  0.650000, 
+				 90.450912, -30.901697, -29.389280, -0.905806,  0.304789,  0.294313,  0.000000,  0.600000, 
+				 76.942139, -30.901697, -55.901733, -0.770524,  0.304789,  0.559819,  0.050000,  0.600000, 
+				 55.901733, -30.901697, -76.942131, -0.559818,  0.304789,  0.770524,  0.100000,  0.600000, 
+				 29.389278, -30.901697, -90.450897, -0.294314,  0.304789,  0.905805,  0.150000,  0.600000, 
+				 0.000000, -30.901697, -95.105698,  0.000000,  0.304789,  0.952420,  0.200000,  0.600000, 
+				-29.389278, -30.901697, -90.450890,  0.294314,  0.304789,  0.905805,  0.250000,  0.600000, 
+				-55.901722, -30.901697, -76.942116,  0.559819,  0.304789,  0.770524,  0.300000,  0.600000, 
+				-76.942116, -30.901697, -55.901714,  0.770524,  0.304788,  0.559818,  0.350000,  0.600000, 
+				-90.450874, -30.901697, -29.389269,  0.905805,  0.304788,  0.294314,  0.400000,  0.600000, 
+				-95.105675, -30.901697,  0.000000,  0.952420,  0.304789,  0.000000,  0.450000,  0.600000, 
+				-90.450874, -30.901697,  29.389269,  0.905805,  0.304789, -0.294314,  0.500000,  0.600000, 
+				-76.942108, -30.901697,  55.901711,  0.770524,  0.304789, -0.559819,  0.550000,  0.600000, 
+				-55.901711, -30.901697,  76.942101,  0.559818,  0.304789, -0.770524,  0.600000,  0.600000, 
+				-29.389269, -30.901697,  90.450867,  0.294314,  0.304789, -0.905805,  0.650000,  0.600000, 
+				-0.000003, -30.901697,  95.105659, -0.000000,  0.304789, -0.952420,  0.700000,  0.600000, 
+				 29.389261, -30.901697,  90.450859, -0.294314,  0.304789, -0.905805,  0.750000,  0.600000, 
+				 55.901699, -30.901697,  76.942093, -0.559818,  0.304789, -0.770524,  0.800000,  0.600000, 
+				 76.942093, -30.901697,  55.901703, -0.770524,  0.304789, -0.559818,  0.850000,  0.600000, 
+				 90.450851, -30.901697,  29.389263, -0.905805,  0.304789, -0.294314,  0.900000,  0.600000, 
+				 95.105652, -30.901697,  0.000000, -0.952420,  0.304789, -0.000001,  0.950000,  0.600000, 
+				 90.450912, -30.901697, -29.389280, -0.905806,  0.304789,  0.294313,  1.000000,  0.600000, 
+				 93.934807, -15.643437, -30.521267, -0.939675,  0.154249,  0.305318,  0.000000,  0.550000, 
+				 79.905724, -15.643437, -58.054901, -0.799335,  0.154249,  0.580751,  0.050000,  0.550000, 
+				 58.054901, -15.643437, -79.905716, -0.580750,  0.154249,  0.799335,  0.100000,  0.550000, 
+				 30.521265, -15.643437, -93.934799, -0.305318,  0.154249,  0.939674,  0.150000,  0.550000, 
+				 0.000000, -15.643437, -98.768883,  0.000000,  0.154249,  0.988032,  0.200000,  0.550000, 
+				-30.521265, -15.643437, -93.934792,  0.305319,  0.154249,  0.939674,  0.250000,  0.550000, 
+				-58.054890, -15.643437, -79.905701,  0.580751,  0.154249,  0.799335,  0.300000,  0.550000, 
+				-79.905693, -15.643437, -58.054882,  0.799335,  0.154249,  0.580750,  0.350000,  0.550000, 
+				-93.934769, -15.643437, -30.521255,  0.939674,  0.154249,  0.305319,  0.400000,  0.550000, 
+				-98.768860, -15.643437,  0.000000,  0.988032,  0.154249, -0.000000,  0.450000,  0.550000, 
+				-93.934769, -15.643437,  30.521255,  0.939674,  0.154249, -0.305319,  0.500000,  0.550000, 
+				-79.905685, -15.643437,  58.054878,  0.799335,  0.154249, -0.580751,  0.550000,  0.550000, 
+				-58.054878, -15.643437,  79.905678,  0.580751,  0.154249, -0.799335,  0.600000,  0.550000, 
+				-30.521255, -15.643437,  93.934761,  0.305319,  0.154249, -0.939674,  0.650000,  0.550000, 
+				-0.000003, -15.643437,  98.768852, -0.000000,  0.154249, -0.988032,  0.700000,  0.550000, 
+				 30.521248, -15.643437,  93.934753, -0.305319,  0.154249, -0.939674,  0.750000,  0.550000, 
+				 58.054867, -15.643437,  79.905678, -0.580751,  0.154249, -0.799335,  0.800000,  0.550000, 
+				 79.905670, -15.643437,  58.054871, -0.799335,  0.154249, -0.580751,  0.850000,  0.550000, 
+				 93.934746, -15.643437,  30.521250, -0.939674,  0.154249, -0.305319,  0.900000,  0.550000, 
+				 98.768837, -15.643437,  0.000000, -0.988032,  0.154249, -0.000001,  0.950000,  0.550000, 
+				 93.934807, -15.643437, -30.521267, -0.939675,  0.154249,  0.305318,  1.000000,  0.550000, 
+				 95.105713,  0.000000, -30.901718, -0.951057, -0.000000,  0.309016,  0.000000,  0.500000, 
+				 80.901756,  0.000000, -58.778561, -0.809017,  0.000000,  0.587785,  0.050000,  0.500000, 
+				 58.778561,  0.000000, -80.901749, -0.587785,  0.000000,  0.809017,  0.100000,  0.500000, 
+				 30.901714,  0.000000, -95.105705, -0.309017,  0.000000,  0.951057,  0.150000,  0.500000, 
+				 0.000000,  0.000000, -100.000046,  0.000000,  0.000000,  1.000000,  0.200000,  0.500000, 
+				-30.901714,  0.000000, -95.105698,  0.309017,  0.000000,  0.951057,  0.250000,  0.500000, 
+				-58.778549,  0.000000, -80.901733,  0.587786,  0.000000,  0.809017,  0.300000,  0.500000, 
+				-80.901726,  0.000000, -58.778542,  0.809017,  0.000000,  0.587785,  0.350000,  0.500000, 
+				-95.105675,  0.000000, -30.901707,  0.951056,  0.000000,  0.309017,  0.400000,  0.500000, 
+				-100.000023,  0.000000,  0.000000,  1.000000,  0.000000, -0.000000,  0.450000,  0.500000, 
+				-95.105675,  0.000000,  30.901707,  0.951057,  0.000000, -0.309017,  0.500000,  0.500000, 
+				-80.901718,  0.000000,  58.778538,  0.809017,  0.000000, -0.587785,  0.550000,  0.500000, 
+				-58.778538,  0.000000,  80.901711,  0.587785,  0.000000, -0.809017,  0.600000,  0.500000, 
+				-30.901707,  0.000000,  95.105667,  0.309017,  0.000000, -0.951057,  0.650000,  0.500000, 
+				-0.000003,  0.000000,  100.000015, -0.000000,  0.000000, -1.000000,  0.700000,  0.500000, 
+				 30.901697,  0.000000,  95.105659, -0.309017,  0.000000, -0.951056,  0.750000,  0.500000, 
+				 58.778526,  0.000000,  80.901703, -0.587785,  0.000000, -0.809017,  0.800000,  0.500000, 
+				 80.901703,  0.000000,  58.778530, -0.809017,  0.000000, -0.587785,  0.850000,  0.500000, 
+				 95.105652,  0.000000,  30.901701, -0.951057,  0.000000, -0.309017,  0.900000,  0.500000, 
+				 100.000000,  0.000000,  0.000000, -1.000000,  0.000000, -0.000001,  0.950000,  0.500000, 
+				 95.105713,  0.000000, -30.901718, -0.951057, -0.000000,  0.309016,  1.000000,  0.500000, 
+				 93.934807,  15.643437, -30.521267, -0.939675, -0.154249,  0.305318,  0.000000,  0.450000, 
+				 79.905724,  15.643437, -58.054901, -0.799335, -0.154249,  0.580751,  0.050000,  0.450000, 
+				 58.054901,  15.643437, -79.905716, -0.580751, -0.154249,  0.799335,  0.100000,  0.450000, 
+				 30.521265,  15.643437, -93.934799, -0.305318, -0.154249,  0.939674,  0.150000,  0.450000, 
+				 0.000000,  15.643437, -98.768883,  0.000000, -0.154249,  0.988032,  0.200000,  0.450000, 
+				-30.521265,  15.643437, -93.934792,  0.305319, -0.154249,  0.939674,  0.250000,  0.450000, 
+				-58.054890,  15.643437, -79.905701,  0.580751, -0.154249,  0.799334,  0.300000,  0.450000, 
+				-79.905693,  15.643437, -58.054882,  0.799335, -0.154249,  0.580750,  0.350000,  0.450000, 
+				-93.934769,  15.643437, -30.521255,  0.939674, -0.154249,  0.305319,  0.400000,  0.450000, 
+				-98.768860,  15.643437,  0.000000,  0.988032, -0.154249, -0.000000,  0.450000,  0.450000, 
+				-93.934769,  15.643437,  30.521255,  0.939674, -0.154249, -0.305319,  0.500000,  0.450000, 
+				-79.905685,  15.643437,  58.054878,  0.799335, -0.154249, -0.580751,  0.550000,  0.450000, 
+				-58.054878,  15.643437,  79.905678,  0.580751, -0.154249, -0.799335,  0.600000,  0.450000, 
+				-30.521255,  15.643437,  93.934761,  0.305319, -0.154249, -0.939674,  0.650000,  0.450000, 
+				-0.000003,  15.643437,  98.768852, -0.000000, -0.154249, -0.988032,  0.700000,  0.450000, 
+				 30.521248,  15.643437,  93.934753, -0.305319, -0.154249, -0.939674,  0.750000,  0.450000, 
+				 58.054867,  15.643437,  79.905678, -0.580751, -0.154249, -0.799335,  0.800000,  0.450000, 
+				 79.905670,  15.643437,  58.054871, -0.799335, -0.154249, -0.580751,  0.850000,  0.450000, 
+				 93.934746,  15.643437,  30.521250, -0.939674, -0.154249, -0.305319,  0.900000,  0.450000, 
+				 98.768837,  15.643437,  0.000000, -0.988032, -0.154249, -0.000001,  0.950000,  0.450000, 
+				 93.934807,  15.643437, -30.521267, -0.939675, -0.154249,  0.305318,  1.000000,  0.450000, 
+				 90.450912,  30.901697, -29.389280, -0.905806, -0.304789,  0.294313,  0.000000,  0.400000, 
+				 76.942139,  30.901697, -55.901733, -0.770524, -0.304789,  0.559819,  0.050000,  0.400000, 
+				 55.901733,  30.901697, -76.942131, -0.559818, -0.304789,  0.770524,  0.100000,  0.400000, 
+				 29.389278,  30.901697, -90.450897, -0.294314, -0.304789,  0.905805,  0.150000,  0.400000, 
+				 0.000000,  30.901697, -95.105698,  0.000000, -0.304789,  0.952420,  0.200000,  0.400000, 
+				-29.389278,  30.901697, -90.450890,  0.294314, -0.304789,  0.905805,  0.250000,  0.400000, 
+				-55.901722,  30.901697, -76.942116,  0.559819, -0.304789,  0.770524,  0.300000,  0.400000, 
+				-76.942116,  30.901697, -55.901714,  0.770524, -0.304789,  0.559818,  0.350000,  0.400000, 
+				-90.450874,  30.901697, -29.389269,  0.905805, -0.304788,  0.294314,  0.400000,  0.400000, 
+				-95.105675,  30.901697,  0.000000,  0.952420, -0.304789,  0.000000,  0.450000,  0.400000, 
+				-90.450874,  30.901697,  29.389269,  0.905805, -0.304789, -0.294314,  0.500000,  0.400000, 
+				-76.942108,  30.901697,  55.901711,  0.770524, -0.304789, -0.559819,  0.550000,  0.400000, 
+				-55.901711,  30.901697,  76.942101,  0.559818, -0.304789, -0.770524,  0.600000,  0.400000, 
+				-29.389269,  30.901697,  90.450867,  0.294314, -0.304789, -0.905805,  0.650000,  0.400000, 
+				-0.000003,  30.901697,  95.105659, -0.000000, -0.304789, -0.952420,  0.700000,  0.400000, 
+				 29.389261,  30.901697,  90.450859, -0.294314, -0.304789, -0.905805,  0.750000,  0.400000, 
+				 55.901699,  30.901697,  76.942093, -0.559818, -0.304789, -0.770524,  0.800000,  0.400000, 
+				 76.942093,  30.901697,  55.901703, -0.770524, -0.304789, -0.559818,  0.850000,  0.400000, 
+				 90.450851,  30.901697,  29.389263, -0.905805, -0.304789, -0.294314,  0.900000,  0.400000, 
+				 95.105652,  30.901697,  0.000000, -0.952420, -0.304789, -0.000001,  0.950000,  0.400000, 
+				 90.450912,  30.901697, -29.389280, -0.905806, -0.304789,  0.294313,  1.000000,  0.400000, 
+				 84.739815,  45.399052, -27.533632, -0.850280, -0.447994,  0.276272,  0.000000,  0.350000, 
+				 72.083992,  45.399052, -52.372082, -0.723291, -0.447994,  0.525502,  0.050000,  0.350000, 
+				 52.372082,  45.399052, -72.083984, -0.525501, -0.447994,  0.723291,  0.100000,  0.350000, 
+				 27.533630,  45.399052, -84.739799, -0.276272, -0.447994,  0.850280,  0.150000,  0.350000, 
+				 0.000000,  45.399052, -89.100700,  0.000000, -0.447994,  0.894037,  0.200000,  0.350000, 
+				-27.533630,  45.399052, -84.739799,  0.276273, -0.447994,  0.850280,  0.250000,  0.350000, 
+				-52.372070,  45.399052, -72.083969,  0.525502, -0.447994,  0.723291,  0.300000,  0.350000, 
+				-72.083969,  45.399052, -52.372066,  0.723291, -0.447993,  0.525502,  0.350000,  0.350000, 
+				-84.739784,  45.399052, -27.533623,  0.850280, -0.447993,  0.276273,  0.400000,  0.350000, 
+				-89.100677,  45.399052,  0.000000,  0.894037, -0.447993,  0.000000,  0.450000,  0.350000, 
+				-84.739784,  45.399052,  27.533623,  0.850280, -0.447993, -0.276273,  0.500000,  0.350000, 
+				-72.083961,  45.399052,  52.372059,  0.723291, -0.447993, -0.525502,  0.550000,  0.350000, 
+				-52.372059,  45.399052,  72.083954,  0.525502, -0.447993, -0.723291,  0.600000,  0.350000, 
+				-27.533623,  45.399052,  84.739769,  0.276272, -0.447994, -0.850280,  0.650000,  0.350000, 
+				-0.000003,  45.399052,  89.100662, -0.000000, -0.447993, -0.894037,  0.700000,  0.350000, 
+				 27.533615,  45.399052,  84.739769, -0.276273, -0.447993, -0.850280,  0.750000,  0.350000, 
+				 52.372051,  45.399052,  72.083946, -0.525502, -0.447993, -0.723291,  0.800000,  0.350000, 
+				 72.083946,  45.399052,  52.372055, -0.723291, -0.447993, -0.525502,  0.850000,  0.350000, 
+				 84.739761,  45.399052,  27.533617, -0.850280, -0.447993, -0.276272,  0.900000,  0.350000, 
+				 89.100655,  45.399052,  0.000000, -0.894037, -0.447994, -0.000001,  0.950000,  0.350000, 
+				 84.739815,  45.399052, -27.533632, -0.850280, -0.447994,  0.276272,  1.000000,  0.350000, 
+				 76.942139,  58.778526, -25.000015, -0.774475, -0.580401,  0.251641,  0.000000,  0.300000, 
+				 65.450897,  58.778526, -47.552856, -0.658808, -0.580401,  0.478652,  0.050000,  0.300000, 
+				 47.552856,  58.778526, -65.450890, -0.478652, -0.580401,  0.658808,  0.100000,  0.300000, 
+				 25.000013,  58.778526, -76.942131, -0.251642, -0.580401,  0.774475,  0.150000,  0.300000, 
+				 0.000000,  58.778526, -80.901741,  0.000000, -0.580401,  0.814331,  0.200000,  0.300000, 
+				-25.000013,  58.778526, -76.942131,  0.251642, -0.580401,  0.774475,  0.250000,  0.300000, 
+				-47.552845,  58.778526, -65.450874,  0.478652, -0.580401,  0.658808,  0.300000,  0.300000, 
+				-65.450874,  58.778526, -47.552841,  0.658808, -0.580401,  0.478652,  0.350000,  0.300000, 
+				-76.942116,  58.778526, -25.000006,  0.774475, -0.580401,  0.251642,  0.400000,  0.300000, 
+				-80.901726,  58.778526,  0.000000,  0.814331, -0.580401, -0.000000,  0.450000,  0.300000, 
+				-76.942116,  58.778526,  25.000006,  0.774475, -0.580401, -0.251642,  0.500000,  0.300000, 
+				-65.450867,  58.778526,  47.552837,  0.658808, -0.580401, -0.478652,  0.550000,  0.300000, 
+				-47.552837,  58.778526,  65.450859,  0.478652, -0.580401, -0.658808,  0.600000,  0.300000, 
+				-25.000006,  58.778526,  76.942101,  0.251642, -0.580401, -0.774475,  0.650000,  0.300000, 
+				-0.000002,  58.778526,  80.901711, -0.000000, -0.580401, -0.814331,  0.700000,  0.300000, 
+				 25.000000,  58.778526,  76.942101, -0.251642, -0.580401, -0.774475,  0.750000,  0.300000, 
+				 47.552826,  58.778526,  65.450859, -0.478652, -0.580400, -0.658808,  0.800000,  0.300000, 
+				 65.450851,  58.778526,  47.552834, -0.658808, -0.580401, -0.478652,  0.850000,  0.300000, 
+				 76.942093,  58.778526,  25.000002, -0.774475, -0.580401, -0.251642,  0.900000,  0.300000, 
+				 80.901703,  58.778526,  0.000000, -0.814331, -0.580401, -0.000001,  0.950000,  0.300000, 
+				 76.942139,  58.778526, -25.000015, -0.774475, -0.580401,  0.251641,  1.000000,  0.300000, 
+				 67.249893,  70.710678, -21.850815, -0.680318, -0.698789,  0.221048,  0.000000,  0.250000, 
+				 57.206181,  70.710678, -41.562717, -0.578713, -0.698789,  0.420459,  0.050000,  0.250000, 
+				 41.562717,  70.710678, -57.206173, -0.420459, -0.698789,  0.578713,  0.100000,  0.250000, 
+				 21.850813,  70.710678, -67.249886, -0.221048, -0.698789,  0.680318,  0.150000,  0.250000, 
+				 0.000000,  70.710678, -70.710709,  0.000000, -0.698789,  0.715328,  0.200000,  0.250000, 
+				-21.850813,  70.710678, -67.249886,  0.221049, -0.698789,  0.680318,  0.250000,  0.250000, 
+				-41.562710,  70.710678, -57.206161,  0.420460, -0.698789,  0.578713,  0.300000,  0.250000, 
+				-57.206158,  70.710678, -41.562706,  0.578713, -0.698788,  0.420460,  0.350000,  0.250000, 
+				-67.249870,  70.710678, -21.850805,  0.680318, -0.698789,  0.221049,  0.400000,  0.250000, 
+				-70.710693,  70.710678,  0.000000,  0.715328, -0.698789,  0.000000,  0.450000,  0.250000, 
+				-67.249870,  70.710678,  21.850805,  0.680318, -0.698788, -0.221049,  0.500000,  0.250000, 
+				-57.206154,  70.710678,  41.562702,  0.578713, -0.698788, -0.420460,  0.550000,  0.250000, 
+				-41.562702,  70.710678,  57.206150,  0.420459, -0.698788, -0.578713,  0.600000,  0.250000, 
+				-21.850805,  70.710678,  67.249863,  0.221049, -0.698789, -0.680318,  0.650000,  0.250000, 
+				-0.000002,  70.710678,  70.710686, -0.000000, -0.698789, -0.715328,  0.700000,  0.250000, 
+				 21.850800,  70.710678,  67.249855, -0.221049, -0.698789, -0.680318,  0.750000,  0.250000, 
+				 41.562695,  70.710678,  57.206146, -0.420459, -0.698788, -0.578713,  0.800000,  0.250000, 
+				 57.206142,  70.710678,  41.562698, -0.578713, -0.698788, -0.420460,  0.850000,  0.250000, 
+				 67.249855,  70.710678,  21.850801, -0.680318, -0.698788, -0.221049,  0.900000,  0.250000, 
+				 70.710678,  70.710678,  0.000000, -0.715328, -0.698788, -0.000001,  0.950000,  0.250000, 
+				 67.249893,  70.710678, -21.850815, -0.680318, -0.698789,  0.221048,  1.000000,  0.250000, 
+				 55.901737,  80.901703, -18.163574, -0.570315, -0.800252,  0.185306,  0.000000,  0.200000, 
+				 47.552860,  80.901703, -34.549171, -0.485138, -0.800252,  0.352474,  0.050000,  0.200000, 
+				 34.549171,  80.901703, -47.552856, -0.352473, -0.800252,  0.485139,  0.100000,  0.200000, 
+				 18.163572,  80.901703, -55.901730, -0.185306, -0.800252,  0.570314,  0.150000,  0.200000, 
+				 0.000000,  80.901703, -58.778553,  0.000000, -0.800252,  0.599664,  0.200000,  0.200000, 
+				-18.163572,  80.901703, -55.901726,  0.185306, -0.800252,  0.570314,  0.250000,  0.200000, 
+				-34.549164,  80.901703, -47.552845,  0.352474, -0.800252,  0.485138,  0.300000,  0.200000, 
+				-47.552841,  80.901703, -34.549160,  0.485138, -0.800252,  0.352474,  0.350000,  0.200000, 
+				-55.901714,  80.901703, -18.163567,  0.570314, -0.800252,  0.185306,  0.400000,  0.200000, 
+				-58.778542,  80.901703,  0.000000,  0.599664, -0.800252,  0.000000,  0.450000,  0.200000, 
+				-55.901714,  80.901703,  18.163567,  0.570314, -0.800252, -0.185306,  0.500000,  0.200000, 
+				-47.552837,  80.901703,  34.549156,  0.485138, -0.800252, -0.352474,  0.550000,  0.200000, 
+				-34.549156,  80.901703,  47.552834,  0.352474, -0.800252, -0.485139,  0.600000,  0.200000, 
+				-18.163567,  80.901703,  55.901711,  0.185306, -0.800252, -0.570315,  0.650000,  0.200000, 
+				-0.000002,  80.901703,  58.778534, -0.000000, -0.800252, -0.599664,  0.700000,  0.200000, 
+				 18.163563,  80.901703,  55.901707, -0.185306, -0.800252, -0.570314,  0.750000,  0.200000, 
+				 34.549149,  80.901703,  47.552830, -0.352474, -0.800252, -0.485138,  0.800000,  0.200000, 
+				 47.552826,  80.901703,  34.549152, -0.485138, -0.800252, -0.352474,  0.850000,  0.200000, 
+				 55.901703,  80.901703,  18.163565, -0.570314, -0.800252, -0.185306,  0.900000,  0.200000, 
+				 58.778526,  80.901703,  0.000000, -0.599664, -0.800252, -0.000001,  0.950000,  0.200000, 
+				 55.901737,  80.901703, -18.163574, -0.570315, -0.800252,  0.185306,  1.000000,  0.200000, 
+				 43.177094,  89.100655, -14.029087, -0.447711, -0.882266,  0.145470,  0.000000,  0.150000, 
+				 36.728630,  89.100655, -26.684910, -0.380846, -0.882266,  0.276701,  0.050000,  0.150000, 
+				 26.684910,  89.100655, -36.728626, -0.276701, -0.882266,  0.380846,  0.100000,  0.150000, 
+				 14.029085,  89.100655, -43.177086, -0.145470, -0.882266,  0.447711,  0.150000,  0.150000, 
+				 0.000000,  89.100655, -45.399075,  0.000000, -0.882266,  0.470751,  0.200000,  0.150000, 
+				-14.029085,  89.100655, -43.177082,  0.145470, -0.882266,  0.447711,  0.250000,  0.150000, 
+				-26.684904,  89.100655, -36.728619,  0.276701, -0.882266,  0.380846,  0.300000,  0.150000, 
+				-36.728615,  89.100655, -26.684900,  0.380846, -0.882266,  0.276701,  0.350000,  0.150000, 
+				-43.177074,  89.100655, -14.029081,  0.447711, -0.882266,  0.145470,  0.400000,  0.150000, 
+				-45.399063,  89.100655,  0.000000,  0.470752, -0.882266,  0.000000,  0.450000,  0.150000, 
+				-43.177074,  89.100655,  14.029081,  0.447711, -0.882266, -0.145470,  0.500000,  0.150000, 
+				-36.728611,  89.100655,  26.684898,  0.380846, -0.882266, -0.276701,  0.550000,  0.150000, 
+				-26.684898,  89.100655,  36.728611,  0.276701, -0.882266, -0.380846,  0.600000,  0.150000, 
+				-14.029081,  89.100655,  43.177071,  0.145470, -0.882266, -0.447712,  0.650000,  0.150000, 
+				-0.000001,  89.100655,  45.399055, -0.000000, -0.882266, -0.470752,  0.700000,  0.150000, 
+				 14.029078,  89.100655,  43.177067, -0.145470, -0.882266, -0.447711,  0.750000,  0.150000, 
+				 26.684893,  89.100655,  36.728607, -0.276701, -0.882266, -0.380846,  0.800000,  0.150000, 
+				 36.728603,  89.100655,  26.684895, -0.380846, -0.882266, -0.276701,  0.850000,  0.150000, 
+				 43.177067,  89.100655,  14.029078, -0.447712, -0.882266, -0.145470,  0.900000,  0.150000, 
+				 45.399052,  89.100655,  0.000000, -0.470752, -0.882266, -0.000000,  0.950000,  0.150000, 
+				 43.177094,  89.100655, -14.029087, -0.447711, -0.882266,  0.145470,  1.000000,  0.150000, 
+				 29.389284,  95.105652, -9.549156, -0.317252, -0.942722,  0.103081,  0.000000,  0.100000, 
+				 25.000017,  95.105652, -18.163574, -0.269870, -0.942722,  0.196072,  0.050000,  0.100000, 
+				 18.163574,  95.105652, -25.000017, -0.196072, -0.942723,  0.269870,  0.100000,  0.100000, 
+				 9.549155,  95.105652, -29.389280, -0.103081, -0.942722,  0.317252,  0.150000,  0.100000, 
+				 0.000000,  95.105652, -30.901716,  0.000000, -0.942723,  0.333578,  0.200000,  0.100000, 
+				-9.549155,  95.105652, -29.389278,  0.103081, -0.942722,  0.317252,  0.250000,  0.100000, 
+				-18.163570,  95.105652, -25.000011,  0.196072, -0.942722,  0.269870,  0.300000,  0.100000, 
+				-25.000010,  95.105652, -18.163568,  0.269870, -0.942722,  0.196072,  0.350000,  0.100000, 
+				-29.389273,  95.105652, -9.549153,  0.317252, -0.942722,  0.103081,  0.400000,  0.100000, 
+				-30.901709,  95.105652,  0.000000,  0.333578, -0.942722, -0.000000,  0.450000,  0.100000, 
+				-29.389273,  95.105652,  9.549153,  0.317252, -0.942722, -0.103081,  0.500000,  0.100000, 
+				-25.000008,  95.105652,  18.163567,  0.269870, -0.942722, -0.196073,  0.550000,  0.100000, 
+				-18.163567,  95.105652,  25.000006,  0.196072, -0.942723, -0.269870,  0.600000,  0.100000, 
+				-9.549153,  95.105652,  29.389269,  0.103081, -0.942723, -0.317251,  0.650000,  0.100000, 
+				-0.000001,  95.105652,  30.901705, -0.000000, -0.942722, -0.333578,  0.700000,  0.100000, 
+				 9.549150,  95.105652,  29.389267, -0.103081, -0.942723, -0.317252,  0.750000,  0.100000, 
+				 18.163565,  95.105652,  25.000004, -0.196072, -0.942722, -0.269870,  0.800000,  0.100000, 
+				 25.000002,  95.105652,  18.163567, -0.269870, -0.942722, -0.196072,  0.850000,  0.100000, 
+				 29.389265,  95.105652,  9.549151, -0.317252, -0.942722, -0.103081,  0.900000,  0.100000, 
+				 30.901701,  95.105652,  0.000000, -0.333578, -0.942722, -0.000000,  0.950000,  0.100000, 
+				 29.389284,  95.105652, -9.549156, -0.317252, -0.942722,  0.103081,  1.000000,  0.100000, 
+				 14.877812,  98.768837, -4.834094, -0.190555, -0.979722,  0.061915,  0.000000,  0.050000, 
+				 12.655824,  98.768837, -9.194993, -0.162096, -0.979722,  0.117769,  0.050000,  0.050000, 
+				 9.194993,  98.768837, -12.655823, -0.117769, -0.979722,  0.162096,  0.100000,  0.050000, 
+				 4.834094,  98.768837, -14.877810, -0.061915, -0.979722,  0.190555,  0.150000,  0.050000, 
+				 0.000000,  98.768837, -15.643456,  0.000000, -0.979722,  0.200361,  0.200000,  0.050000, 
+				-4.834094,  98.768837, -14.877810,  0.061915, -0.979722,  0.190555,  0.250000,  0.050000, 
+				-9.194991,  98.768837, -12.655820,  0.117769, -0.979722,  0.162096,  0.300000,  0.050000, 
+				-12.655819,  98.768837, -9.194990,  0.162096, -0.979722,  0.117769,  0.350000,  0.050000, 
+				-14.877808,  98.768837, -4.834092,  0.190555, -0.979722,  0.061915,  0.400000,  0.050000, 
+				-15.643452,  98.768837,  0.000000,  0.200361, -0.979722,  0.000000,  0.450000,  0.050000, 
+				-14.877808,  98.768837,  4.834092,  0.190555, -0.979722, -0.061915,  0.500000,  0.050000, 
+				-12.655818,  98.768837,  9.194990,  0.162096, -0.979722, -0.117769,  0.550000,  0.050000, 
+				-9.194990,  98.768837,  12.655817,  0.117769, -0.979722, -0.162095,  0.600000,  0.050000, 
+				-4.834092,  98.768837,  14.877806,  0.061915, -0.979722, -0.190555,  0.650000,  0.050000, 
+				-0.000000,  98.768837,  15.643450, -0.000000, -0.979722, -0.200361,  0.700000,  0.050000, 
+				 4.834091,  98.768837,  14.877805, -0.061915, -0.979722, -0.190555,  0.750000,  0.050000, 
+				 9.194988,  98.768837,  12.655816, -0.117769, -0.979722, -0.162096,  0.800000,  0.050000, 
+				 12.655815,  98.768837,  9.194989, -0.162096, -0.979722, -0.117770,  0.850000,  0.050000, 
+				 14.877804,  98.768837,  4.834091, -0.190555, -0.979722, -0.061915,  0.900000,  0.050000, 
+				 15.643448,  98.768837,  0.000000, -0.200361, -0.979722, -0.000000,  0.950000,  0.050000, 
+				 14.877812,  98.768837, -4.834094, -0.190555, -0.979722,  0.061915,  1.000000,  0.050000, 
+				 0.000000, -100.000000,  0.000000, -0.000000,  1.000000, -0.000000,  0.025000,  1.000000, 
+				 0.000000, -100.000000,  0.000000, -0.000000,  1.000000, -0.000000,  0.075000,  1.000000, 
+				 0.000000, -100.000000,  0.000000, -0.000000,  1.000000, -0.000000,  0.125000,  1.000000, 
+				 0.000000, -100.000000,  0.000000, -0.000000,  1.000000, -0.000000,  0.175000,  1.000000, 
+				 0.000000, -100.000000,  0.000000, -0.000000,  1.000000, -0.000000,  0.225000,  1.000000, 
+				 0.000000, -100.000000,  0.000000, -0.000000,  1.000000, -0.000000,  0.275000,  1.000000, 
+				 0.000000, -100.000000,  0.000000, -0.000000,  1.000000, -0.000000,  0.325000,  1.000000, 
+				 0.000000, -100.000000,  0.000000, -0.000000,  1.000000, -0.000000,  0.375000,  1.000000, 
+				 0.000000, -100.000000,  0.000000, -0.000000,  1.000000, -0.000000,  0.425000,  1.000000, 
+				 0.000000, -100.000000,  0.000000, -0.000000,  1.000000, -0.000000,  0.475000,  1.000000, 
+				 0.000000, -100.000000,  0.000000, -0.000000,  1.000000, -0.000000,  0.525000,  1.000000, 
+				 0.000000, -100.000000,  0.000000, -0.000000,  1.000000, -0.000000,  0.575000,  1.000000, 
+				 0.000000, -100.000000,  0.000000, -0.000000,  1.000000, -0.000000,  0.625000,  1.000000, 
+				 0.000000, -100.000000,  0.000000, -0.000000,  1.000000, -0.000000,  0.675000,  1.000000, 
+				 0.000000, -100.000000,  0.000000, -0.000000,  1.000000, -0.000000,  0.725000,  1.000000, 
+				 0.000000, -100.000000,  0.000000, -0.000000,  1.000000, -0.000000,  0.775000,  1.000000, 
+				 0.000000, -100.000000,  0.000000, -0.000000,  1.000000, -0.000000,  0.825000,  1.000000, 
+				 0.000000, -100.000000,  0.000000, -0.000000,  1.000000, -0.000000,  0.875000,  1.000000, 
+				 0.000000, -100.000000,  0.000000, -0.000000,  1.000000, -0.000000,  0.925000,  1.000000, 
+				 0.000000, -100.000000,  0.000000, -0.000000,  1.000000, -0.000000,  0.975000,  1.000000, 
+				 0.000000,  100.000000,  0.000000, -0.000000, -1.000000, -0.000000,  0.025000,  0.000000, 
+				 0.000000,  100.000000,  0.000000, -0.000000, -1.000000, -0.000000,  0.075000,  0.000000, 
+				 0.000000,  100.000000,  0.000000, -0.000000, -1.000000, -0.000000,  0.125000,  0.000000, 
+				 0.000000,  100.000000,  0.000000, -0.000000, -1.000000, -0.000000,  0.175000,  0.000000, 
+				 0.000000,  100.000000,  0.000000, -0.000000, -1.000000, -0.000000,  0.225000,  0.000000, 
+				 0.000000,  100.000000,  0.000000, -0.000000, -1.000000, -0.000000,  0.275000,  0.000000, 
+				 0.000000,  100.000000,  0.000000, -0.000000, -1.000000, -0.000000,  0.325000,  0.000000, 
+				 0.000000,  100.000000,  0.000000, -0.000000, -1.000000, -0.000000,  0.375000,  0.000000, 
+				 0.000000,  100.000000,  0.000000, -0.000000, -1.000000, -0.000000,  0.425000,  0.000000, 
+				 0.000000,  100.000000,  0.000000, -0.000000, -1.000000, -0.000000,  0.475000,  0.000000, 
+				 0.000000,  100.000000,  0.000000, -0.000000, -1.000000, -0.000000,  0.525000,  0.000000, 
+				 0.000000,  100.000000,  0.000000, -0.000000, -1.000000, -0.000000,  0.575000,  0.000000, 
+				 0.000000,  100.000000,  0.000000, -0.000000, -1.000000, -0.000000,  0.625000,  0.000000, 
+				 0.000000,  100.000000,  0.000000, -0.000000, -1.000000, -0.000000,  0.675000,  0.000000, 
+				 0.000000,  100.000000,  0.000000, -0.000000, -1.000000, -0.000000,  0.725000,  0.000000, 
+				 0.000000,  100.000000,  0.000000, -0.000000, -1.000000, -0.000000,  0.775000,  0.000000, 
+				 0.000000,  100.000000,  0.000000, -0.000000, -1.000000, -0.000000,  0.825000,  0.000000, 
+				 0.000000,  100.000000,  0.000000, -0.000000, -1.000000, -0.000000,  0.875000,  0.000000, 
+				 0.000000,  100.000000,  0.000000, -0.000000, -1.000000, -0.000000,  0.925000,  0.000000, 
+				 0.000000,  100.000000,  0.000000, -0.000000, -1.000000, -0.000000,  0.975000,  0.000000, 
+				-0.466043, -0.046099,  0.061004, -0.250247, -0.968182,  0.000644,  0.751626,  1.296951, 
+				-0.496632, -0.038728, -0.744142, -0.250247, -0.968182,  0.000644,  0.778739,  1.652091, 
+				-0.284772, -0.093266, -0.411636, -0.250247, -0.968182,  0.000644,  0.669914,  1.504915, 
+				-0.466043, -0.046099,  0.061004, -0.323507, -0.946226,  0.000000,  0.751626,  1.296951, 
+				-0.169612, -0.147446, -0.381196, -0.323507, -0.946226,  0.000000,  0.602403,  1.488930, 
+				-0.169612, -0.147446,  0.061004, -0.323507, -0.946226,  0.000000,  0.606140,  1.295531, 
+				-0.466043, -0.046099,  0.061004, -0.314844, -0.934853,  0.164083,  0.751626,  1.296951, 
+				-0.091309, -0.100092,  0.472421, -0.314844, -0.934853,  0.164083,  0.584522,  1.111953, 
+				-0.182617, -0.069341,  0.472421, -0.314844, -0.934853,  0.164083,  0.624732,  1.111943, 
+				-0.466043, -0.046099,  0.061004, -0.823503,  0.000000,  0.567312,  0.163314,  1.338079, 
+				-0.182617, -0.001722,  0.472421, -0.823503,  0.000000,  0.567312,  0.303063,  1.163959, 
+				-0.466043,  0.045632,  0.061004, -0.823503,  0.000000,  0.567312,  0.230289,  1.373100, 
+				-0.466043,  0.045632,  0.061004, -0.854840,  0.000000,  0.518891,  0.230289,  1.373100, 
+				-0.647568,  0.071442, -0.238048, -0.854840,  0.000000,  0.518891,  0.160760,  1.512548, 
+				-0.466043, -0.046099,  0.061004, -0.854840,  0.000000,  0.518891,  0.163314,  1.338079, 
+				-0.466043,  0.045632,  0.061004, -0.348743,  0.873084,  0.340740,  0.230289,  1.373100, 
+				-0.182617, -0.001722,  0.472421, -0.348743,  0.873084,  0.340740,  0.303063,  1.163959, 
+				-0.169612,  0.164038,  0.061004, -0.348743,  0.873084,  0.340740,  0.367869,  1.343157, 
+				-0.284772, -0.093266, -0.411636,  0.843356,  0.000000, -0.537355,  0.383048,  1.665775, 
+				-0.496632, -0.038728, -0.744142,  0.843356,  0.000000, -0.537355,  0.187154,  1.646178, 
+				-0.284772,  0.045632, -0.411636,  0.843356,  0.000000, -0.537355,  0.359661,  1.565146, 
+				-0.284772, -0.093266, -0.411636, -0.410300, -0.909516, -0.066596,  0.669914,  1.504915, 
+				-0.169612, -0.147446, -0.381196, -0.410300, -0.909516, -0.066596,  0.602403,  1.488930, 
+				-0.466043, -0.046099,  0.061004, -0.410300, -0.909516, -0.066596,  0.751626,  1.296951, 
+				-0.284772,  0.045632, -0.411636,  0.086754,  0.995674,  0.033273,  1.000000,  1.207288, 
+				-0.647568,  0.071442, -0.238048,  0.086754,  0.995674,  0.033273,  0.840250,  1.131483, 
+				-0.466043,  0.045632,  0.061004,  0.086754,  0.995674,  0.033273,  0.920248,  1.000000, 
+				-0.284772,  0.045632, -0.411636,  0.255555,  0.000000, -0.966795,  0.359661,  1.565146, 
+				-0.169612, -0.147446, -0.381196,  0.255555,  0.000000, -0.966795,  0.448977,  1.700722, 
+				-0.284772, -0.093266, -0.411636,  0.255555,  0.000000, -0.966795,  0.383048,  1.665775, 
+				-0.284772,  0.045632, -0.411636, -0.504274,  0.858604, -0.092230,  0.359661,  1.565146, 
+				-0.169612,  0.164038,  0.061004, -0.504274,  0.858604, -0.092230,  0.367869,  1.343157, 
+				-0.169612,  0.116537, -0.381196, -0.504274,  0.858604, -0.092230,  0.409443,  1.529814, 
+				-0.053437, -0.049075,  0.720448, -0.886914,  0.000000,  0.461934,  0.322562,  1.058152, 
+				-0.182617, -0.001722,  0.472421, -0.886914,  0.000000,  0.461934,  0.303063,  1.163959, 
+				-0.053437, -0.102143,  0.720448, -0.886914,  0.000000,  0.461934,  0.279339,  1.033288, 
+				-0.053437, -0.102143,  0.720448, -0.745938,  0.000000,  0.666016,  0.279339,  1.033288, 
+				-0.040834, -0.049075,  0.734564, -0.745938,  0.000000,  0.666016,  0.335031,  1.051982, 
+				-0.053437, -0.049075,  0.720448, -0.745938,  0.000000,  0.666016,  0.322562,  1.058152, 
+				-0.053437, -0.102143,  0.720448,  0.011167, -0.999888, -0.009970,  0.583930,  1.000631, 
+				-0.091309, -0.100092,  0.472421,  0.011167, -0.999888, -0.009970,  0.584522,  1.111953, 
+				-0.040834, -0.102143,  0.734564,  0.011167, -0.999888, -0.009970,  0.566158,  1.000000, 
+				-0.182617, -0.069341,  0.472421, -0.886914,  0.000000,  0.461934,  0.215127,  1.124209, 
+				 0.000000, -0.049075,  0.744142, -0.228369,  0.000000,  0.973575,  0.348668,  1.043915, 
+				-0.040834, -0.049075,  0.734564, -0.228369,  0.000000,  0.973575,  0.335031,  1.051982, 
+				 0.000000, -0.118734,  0.744142, -0.228369,  0.000000,  0.973575,  0.297807,  1.000000, 
+				 0.000000, -0.049075,  0.744142,  0.077079,  0.941318,  0.328601,  0.348668,  1.043915, 
+				 0.040834, -0.049075,  0.734564,  0.077079,  0.941318,  0.328601,  0.335031,  1.051982, 
+				 0.000000,  0.045779,  0.472421,  0.077079,  0.941318,  0.328601,  0.383622,  1.147086, 
+				-0.040834, -0.102143,  0.734564, -0.228369,  0.000000,  0.973575,  0.291116,  1.018231, 
+				 0.000000, -0.118734,  0.744142, -0.178777, -0.983862, -0.007424,  0.546965,  1.000895, 
+				-0.091309, -0.100092,  0.472421, -0.178777, -0.983862, -0.007424,  0.584522,  1.111953, 
+				 0.000000, -0.116684,  0.472421, -0.178777, -0.983862, -0.007424,  0.543590,  1.110901, 
+				 0.000000, -0.118734,  0.744142,  0.228369,  0.000000,  0.973575,  0.297807,  1.000000, 
+				 0.040834, -0.049075,  0.734564,  0.228369,  0.000000,  0.973575,  0.335031,  1.051982, 
+				 0.000000, -0.049075,  0.744142,  0.228369,  0.000000,  0.973575,  0.348668,  1.043915, 
+				 0.000000, -0.118734,  0.744142,  0.389169, -0.918672,  0.067749,  0.546965,  1.000895, 
+				 0.091309, -0.100092,  0.472421,  0.389169, -0.918672,  0.067749,  0.584522,  1.111953, 
+				 0.040834, -0.102143,  0.734564,  0.389169, -0.918672,  0.067749,  0.566158,  1.000000, 
+				 0.000000,  0.116537, -0.350755,  0.176648,  0.000000, -0.984274,  0.481194,  1.505860, 
+				-0.169612, -0.147446, -0.381196,  0.176648,  0.000000, -0.984274,  0.448977,  1.700722, 
+				-0.169612,  0.116537, -0.381196,  0.176648,  0.000000, -0.984274,  0.409443,  1.529814, 
+				 0.000000,  0.116537, -0.350755,  0.000000,  0.993412, -0.114599,  0.481194,  1.505860, 
+				-0.169612,  0.164038,  0.061004,  0.000000,  0.993412, -0.114599,  0.367869,  1.343157, 
+				 0.000000,  0.164038,  0.061004,  0.000000,  0.993412, -0.114599,  0.439129,  1.324331, 
+				 0.000000,  0.116537, -0.350755, -0.176648,  0.000000, -0.984274,  0.481194,  1.505860, 
+				 0.169612, -0.147446, -0.381196, -0.176648,  0.000000, -0.984274,  0.448977,  1.700722, 
+				 0.000000, -0.164038, -0.350755, -0.176648,  0.000000, -0.984274,  0.527716,  1.688551, 
+				 0.000000,  0.116537, -0.350755, -0.019165,  0.994097, -0.106784,  0.481194,  1.505860, 
+				 0.169612,  0.164038,  0.061004, -0.019165,  0.994097, -0.106784,  0.367869,  1.343157, 
+				 0.169612,  0.116537, -0.381196, -0.019165,  0.994097, -0.106784,  0.409443,  1.529814, 
+				 0.000000, -0.164038, -0.350755,  0.176648,  0.000000, -0.984274,  0.527716,  1.688551, 
+				 0.000000, -0.164038, -0.350755,  0.097356, -0.995250,  0.000000,  0.527716,  1.473881, 
+				 0.169612, -0.147446, -0.381196,  0.097356, -0.995250,  0.000000,  0.602403,  1.488930, 
+				 0.000000, -0.164038,  0.061004,  0.097356, -0.995250,  0.000000,  0.531715,  1.292713, 
+				 0.169612,  0.164038,  0.061004,  0.000000,  0.993412, -0.114599,  0.367869,  1.343157, 
+				 0.000000, -0.164038,  0.061004, -0.097356, -0.995250,  0.000000,  0.531715,  1.292713, 
+				-0.169612, -0.147446, -0.381196, -0.097356, -0.995250,  0.000000,  0.602403,  1.488930, 
+				 0.000000, -0.164038, -0.350755, -0.097356, -0.995250,  0.000000,  0.527716,  1.473881, 
+				 0.000000, -0.164038,  0.061004, -0.096506, -0.986552,  0.131918,  0.531715,  1.292713, 
+				-0.091309, -0.100092,  0.472421, -0.096506, -0.986552,  0.131918,  0.584522,  1.111953, 
+				-0.169612, -0.147446,  0.061004, -0.096506, -0.986552,  0.131918,  0.606140,  1.295531, 
+				 0.169612, -0.147446,  0.061004,  0.097356, -0.995250,  0.000000,  0.606140,  1.295531, 
+				 0.000000, -0.164038,  0.061004,  0.177647, -0.977640,  0.112525,  0.531715,  1.292713, 
+				 0.091309, -0.100092,  0.472421,  0.177647, -0.977640,  0.112525,  0.584522,  1.111953, 
+				 0.000000, -0.116684,  0.472421,  0.177647, -0.977640,  0.112525,  0.543590,  1.110901, 
+				-0.647568, -0.038728, -0.238048, -0.854840,  0.000000,  0.518891,  0.118475,  1.487834, 
+				-0.647568, -0.038728, -0.238048, -0.027218, -0.999597, -0.008117,  0.840250,  1.428282, 
+				-0.496632, -0.038728, -0.744142, -0.027218, -0.999597, -0.008117,  0.778739,  1.652091, 
+				-0.466043, -0.046099,  0.061004, -0.027218, -0.999597, -0.008117,  0.751626,  1.296951, 
+				-0.647568,  0.071442, -0.238048,  0.082674,  0.996272,  0.024656,  0.840250,  1.131483, 
+				-0.284772,  0.045632, -0.411636,  0.082674,  0.996272,  0.024656,  1.000000,  1.207288, 
+				-0.496632,  0.071442, -0.744142,  0.082674,  0.996272,  0.024656,  0.906776,  1.353443, 
+				-0.647568,  0.071442, -0.238048, -0.958290,  0.000000, -0.285797,  0.160760,  1.512548, 
+				-0.496632, -0.038728, -0.744142, -0.958290,  0.000000, -0.285797,  0.000000,  1.690540, 
+				-0.647568, -0.038728, -0.238048, -0.958290,  0.000000, -0.285797,  0.118475,  1.487834, 
+				-0.496632,  0.071442, -0.744142,  0.843356,  0.000000, -0.537355,  0.175365,  1.595452, 
+				-0.496632,  0.071442, -0.744142, -0.958290,  0.000000, -0.285797,  0.042286,  1.715254, 
+				-0.040834, -0.102143,  0.734564, -0.745938,  0.000000,  0.666016,  0.291116,  1.018231, 
+				-0.040834, -0.102143,  0.734564, -0.389169, -0.918672,  0.067749,  0.566158,  1.000000, 
+				-0.091309, -0.100092,  0.472421, -0.389169, -0.918672,  0.067749,  0.584522,  1.111953, 
+				 0.000000, -0.118734,  0.744142, -0.389169, -0.918672,  0.067749,  0.546965,  1.000895, 
+				-0.040834, -0.049075,  0.734564,  0.000000,  0.940334,  0.340252,  0.335031,  1.051982, 
+				 0.000000,  0.045779,  0.472421,  0.000000,  0.940334,  0.340252,  0.383622,  1.147086, 
+				-0.091309,  0.045779,  0.472421,  0.000000,  0.940334,  0.340252,  0.346598,  1.158554, 
+				-0.040834, -0.049075,  0.734564, -0.422798,  0.823855,  0.377498,  0.335031,  1.051982, 
+				-0.182617, -0.001722,  0.472421, -0.422798,  0.823855,  0.377498,  0.303063,  1.163959, 
+				-0.053437, -0.049075,  0.720448, -0.422798,  0.823855,  0.377498,  0.322562,  1.058152, 
+				-0.169612,  0.116537, -0.381196,  0.255555,  0.000000, -0.966795,  0.409443,  1.529814, 
+				-0.169612,  0.116537, -0.381196,  0.019165,  0.994097, -0.106784,  0.409443,  1.529814, 
+				-0.169612,  0.164038,  0.061004,  0.019165,  0.994097, -0.106784,  0.367869,  1.343157, 
+				 0.000000,  0.116537, -0.350755,  0.019165,  0.994097, -0.106784,  0.481194,  1.505860, 
+				-0.169612,  0.164038,  0.061004, -0.367243,  0.919399, -0.140848,  0.367869,  1.343157, 
+				-0.284772,  0.045632, -0.411636, -0.367243,  0.919399, -0.140848,  0.359661,  1.565146, 
+				-0.466043,  0.045632,  0.061004, -0.367243,  0.919399, -0.140848,  0.230289,  1.373100, 
+				-0.169612,  0.164038,  0.061004,  0.000000,  0.961084,  0.276256,  0.367869,  1.343157, 
+				 0.000000,  0.045779,  0.472421,  0.000000,  0.961084,  0.276256,  0.383622,  1.147086, 
+				 0.000000,  0.164038,  0.061004,  0.000000,  0.961084,  0.276256,  0.439129,  1.324331, 
+				-0.169612,  0.164038,  0.061004, -0.436561,  0.839189,  0.324308,  0.367869,  1.343157, 
+				-0.182617, -0.001722,  0.472421, -0.436561,  0.839189,  0.324308,  0.303063,  1.163959, 
+				-0.091309,  0.045779,  0.472421, -0.436561,  0.839189,  0.324308,  0.346598,  1.158554, 
+				-0.169612, -0.147446,  0.061004, -0.097356, -0.995250,  0.000000,  0.606140,  1.295531, 
+				-0.169612, -0.147446,  0.061004, -0.318906, -0.932768,  0.168056,  0.606140,  1.295531, 
+				-0.091309, -0.100092,  0.472421, -0.318906, -0.932768,  0.168056,  0.584522,  1.111953, 
+				-0.466043, -0.046099,  0.061004, -0.318906, -0.932768,  0.168056,  0.751626,  1.296951, 
+				-0.091309,  0.045779,  0.472421,  0.000000,  0.961084,  0.276256,  0.346598,  1.158554, 
+				-0.091309,  0.045779,  0.472421, -0.427028,  0.820865,  0.379246,  0.346598,  1.158554, 
+				-0.182617, -0.001722,  0.472421, -0.427028,  0.820865,  0.379246,  0.303063,  1.163959, 
+				-0.040834, -0.049075,  0.734564, -0.427028,  0.820865,  0.379246,  0.335031,  1.051982, 
+				 0.000000,  0.045779,  0.472421, -0.077079,  0.941318,  0.328601,  0.383622,  1.147086, 
+				-0.040834, -0.049075,  0.734564, -0.077079,  0.941318,  0.328601,  0.335031,  1.051982, 
+				 0.000000, -0.049075,  0.744142, -0.077079,  0.941318,  0.328601,  0.348668,  1.043915, 
+				 0.169612,  0.164038,  0.061004,  0.000000,  0.961084,  0.276256,  0.367869,  1.343157, 
+				 0.000000, -0.116684,  0.472421, -0.177647, -0.977640,  0.112525,  0.543590,  1.110901, 
+				-0.091309, -0.100092,  0.472421, -0.177647, -0.977640,  0.112525,  0.584522,  1.111953, 
+				 0.000000, -0.164038,  0.061004, -0.177647, -0.977640,  0.112525,  0.531715,  1.292713, 
+				 0.000000, -0.116684,  0.472421,  0.178777, -0.983862, -0.007424,  0.543590,  1.110901, 
+				 0.091309, -0.100092,  0.472421,  0.178777, -0.983862, -0.007424,  0.584522,  1.111953, 
+				 0.000000, -0.118734,  0.744142,  0.178777, -0.983862, -0.007424,  0.546965,  1.000895, 
+				-0.182617, -0.069341,  0.472421, -0.318903, -0.946906,  0.040867,  0.624732,  1.111943, 
+				-0.091309, -0.100092,  0.472421, -0.318903, -0.946906,  0.040867,  0.584522,  1.111953, 
+				-0.053437, -0.102143,  0.720448, -0.318903, -0.946906,  0.040867,  0.583930,  1.000631, 
+				-0.182617, -0.069341,  0.472421, -0.823503,  0.000000,  0.567312,  0.215127,  1.124209, 
+				 0.466043, -0.046099,  0.061004,  0.854840,  0.000000,  0.518891,  0.163314,  1.338079, 
+				 0.647568,  0.071442, -0.238048,  0.854840,  0.000000,  0.518891,  0.160760,  1.512548, 
+				 0.466043,  0.045632,  0.061004,  0.854840,  0.000000,  0.518891,  0.230289,  1.373100, 
+				 0.466043, -0.046099,  0.061004,  0.027218, -0.999597, -0.008117,  0.751626,  1.296951, 
+				 0.496632, -0.038728, -0.744142,  0.027218, -0.999597, -0.008117,  0.778739,  1.652091, 
+				 0.647568, -0.038728, -0.238048,  0.027218, -0.999597, -0.008117,  0.840250,  1.428282, 
+				 0.466043, -0.046099,  0.061004,  0.410300, -0.909516, -0.066596,  0.751626,  1.296951, 
+				 0.169612, -0.147446, -0.381196,  0.410300, -0.909516, -0.066596,  0.602403,  1.488930, 
+				 0.284772, -0.093266, -0.411636,  0.410300, -0.909516, -0.066596,  0.669914,  1.504915, 
+				 0.466043, -0.046099,  0.061004,  0.318906, -0.932768,  0.168056,  0.751626,  1.296951, 
+				 0.091309, -0.100092,  0.472421,  0.318906, -0.932768,  0.168056,  0.584522,  1.111953, 
+				 0.169612, -0.147446,  0.061004,  0.318906, -0.932768,  0.168056,  0.606140,  1.295531, 
+				 0.466043, -0.046099,  0.061004,  0.823503,  0.000000,  0.567312,  0.163314,  1.338079, 
+				 0.182617, -0.001722,  0.472421,  0.823503,  0.000000,  0.567312,  0.303063,  1.163959, 
+				 0.182617, -0.069341,  0.472421,  0.823503,  0.000000,  0.567312,  0.215127,  1.124209, 
+				 0.466043,  0.045632,  0.061004,  0.367243,  0.919399, -0.140848,  0.230289,  1.373100, 
+				 0.284772,  0.045632, -0.411636,  0.367243,  0.919399, -0.140848,  0.359661,  1.565146, 
+				 0.169612,  0.164038,  0.061004,  0.367243,  0.919399, -0.140848,  0.367869,  1.343157, 
+				 0.466043,  0.045632,  0.061004, -0.086754,  0.995674,  0.033273,  0.920248,  1.000000, 
+				 0.647568,  0.071442, -0.238048, -0.086754,  0.995674,  0.033273,  0.840250,  1.131483, 
+				 0.284772,  0.045632, -0.411636, -0.086754,  0.995674,  0.033273,  1.000000,  1.207288, 
+				 0.466043,  0.045632,  0.061004,  0.823503,  0.000000,  0.567312,  0.230289,  1.373100, 
+				 0.284772, -0.093266, -0.411636,  0.250247, -0.968182,  0.000644,  0.669914,  1.504915, 
+				 0.496632, -0.038728, -0.744142,  0.250247, -0.968182,  0.000644,  0.778739,  1.652091, 
+				 0.466043, -0.046099,  0.061004,  0.250247, -0.968182,  0.000644,  0.751626,  1.296951, 
+				 0.284772, -0.093266, -0.411636, -0.255555,  0.000000, -0.966795,  0.383048,  1.665775, 
+				 0.169612, -0.147446, -0.381196, -0.255555,  0.000000, -0.966795,  0.448977,  1.700722, 
+				 0.284772,  0.045632, -0.411636, -0.255555,  0.000000, -0.966795,  0.359661,  1.565146, 
+				 0.284772,  0.045632, -0.411636, -0.843356,  0.000000, -0.537355,  0.359661,  1.565146, 
+				 0.496632, -0.038728, -0.744142, -0.843356,  0.000000, -0.537355,  0.187154,  1.646178, 
+				 0.284772, -0.093266, -0.411636, -0.843356,  0.000000, -0.537355,  0.383048,  1.665775, 
+				 0.169612,  0.116537, -0.381196, -0.255555,  0.000000, -0.966795,  0.409443,  1.529814, 
+				 0.053437, -0.049075,  0.720448,  0.745938,  0.000000,  0.666016,  0.322562,  1.058152, 
+				 0.040834, -0.049075,  0.734564,  0.745938,  0.000000,  0.666016,  0.335031,  1.051982, 
+				 0.053437, -0.102143,  0.720448,  0.745938,  0.000000,  0.666016,  0.279339,  1.033288, 
+				 0.053437, -0.049075,  0.720448,  0.422798,  0.823855,  0.377498,  0.322562,  1.058152, 
+				 0.182617, -0.001722,  0.472421,  0.422798,  0.823855,  0.377498,  0.303063,  1.163959, 
+				 0.040834, -0.049075,  0.734564,  0.422798,  0.823855,  0.377498,  0.335031,  1.051982, 
+				 0.040834, -0.102143,  0.734564,  0.745938,  0.000000,  0.666016,  0.291116,  1.018231, 
+				 0.053437, -0.102143,  0.720448,  0.318903, -0.946906,  0.040867,  0.583930,  1.000631, 
+				 0.091309, -0.100092,  0.472421,  0.318903, -0.946906,  0.040867,  0.584522,  1.111953, 
+				 0.182617, -0.069341,  0.472421,  0.318903, -0.946906,  0.040867,  0.624732,  1.111943, 
+				 0.053437, -0.102143,  0.720448,  0.886914,  0.000000,  0.461934,  0.279339,  1.033288, 
+				 0.182617, -0.001722,  0.472421,  0.886914,  0.000000,  0.461934,  0.303063,  1.163959, 
+				 0.053437, -0.049075,  0.720448,  0.886914,  0.000000,  0.461934,  0.322562,  1.058152, 
+				 0.647568, -0.038728, -0.238048,  0.958290,  0.000000, -0.285797,  0.118475,  1.487834, 
+				 0.496632, -0.038728, -0.744142,  0.958290,  0.000000, -0.285797,  0.000000,  1.690540, 
+				 0.647568,  0.071442, -0.238048,  0.958290,  0.000000, -0.285797,  0.160760,  1.512548, 
+				 0.647568, -0.038728, -0.238048,  0.854840,  0.000000,  0.518891,  0.118475,  1.487834, 
+				 0.496632,  0.071442, -0.744142,  0.958290,  0.000000, -0.285797,  0.042286,  1.715254, 
+				 0.496632,  0.071442, -0.744142, -0.082674,  0.996272,  0.024656,  0.906776,  1.353443, 
+				 0.284772,  0.045632, -0.411636, -0.082674,  0.996272,  0.024656,  1.000000,  1.207288, 
+				 0.647568,  0.071442, -0.238048, -0.082674,  0.996272,  0.024656,  0.840250,  1.131483, 
+				 0.496632,  0.071442, -0.744142, -0.843356,  0.000000, -0.537355,  0.175365,  1.595452, 
+				 0.040834, -0.102143,  0.734564,  0.228369,  0.000000,  0.973575,  0.291116,  1.018231, 
+				 0.040834, -0.102143,  0.734564, -0.011167, -0.999888, -0.009970,  0.566158,  1.000000, 
+				 0.091309, -0.100092,  0.472421, -0.011167, -0.999888, -0.009970,  0.584522,  1.111953, 
+				 0.053437, -0.102143,  0.720448, -0.011167, -0.999888, -0.009970,  0.583930,  1.000631, 
+				 0.040834, -0.049075,  0.734564,  0.427028,  0.820865,  0.379246,  0.335031,  1.051982, 
+				 0.182617, -0.001722,  0.472421,  0.427028,  0.820865,  0.379246,  0.303063,  1.163959, 
+				 0.091309,  0.045779,  0.472421,  0.427028,  0.820865,  0.379246,  0.346598,  1.158554, 
+				 0.169612,  0.116537, -0.381196, -0.176648,  0.000000, -0.984274,  0.409443,  1.529814, 
+				 0.169612,  0.116537, -0.381196,  0.504274,  0.858604, -0.092230,  0.409443,  1.529814, 
+				 0.169612,  0.164038,  0.061004,  0.504274,  0.858604, -0.092230,  0.367869,  1.343157, 
+				 0.284772,  0.045632, -0.411636,  0.504274,  0.858604, -0.092230,  0.359661,  1.565146, 
+				 0.091309,  0.045779,  0.472421,  0.000000,  0.961084,  0.276256,  0.346598,  1.158554, 
+				 0.169612,  0.164038,  0.061004,  0.348743,  0.873084,  0.340740,  0.367869,  1.343157, 
+				 0.182617, -0.001722,  0.472421,  0.348743,  0.873084,  0.340740,  0.303063,  1.163959, 
+				 0.466043,  0.045632,  0.061004,  0.348743,  0.873084,  0.340740,  0.230289,  1.373100, 
+				 0.169612, -0.147446,  0.061004,  0.323507, -0.946226,  0.000000,  0.606140,  1.295531, 
+				 0.169612, -0.147446, -0.381196,  0.323507, -0.946226,  0.000000,  0.602403,  1.488930, 
+				 0.466043, -0.046099,  0.061004,  0.323507, -0.946226,  0.000000,  0.751626,  1.296951, 
+				 0.169612, -0.147446,  0.061004,  0.096506, -0.986552,  0.131918,  0.606140,  1.295531, 
+				 0.091309, -0.100092,  0.472421,  0.096506, -0.986552,  0.131918,  0.584522,  1.111953, 
+				 0.000000, -0.164038,  0.061004,  0.096506, -0.986552,  0.131918,  0.531715,  1.292713, 
+				 0.091309,  0.045779,  0.472421,  0.000000,  0.940334,  0.340252,  0.346598,  1.158554, 
+				 0.040834, -0.049075,  0.734564,  0.000000,  0.940334,  0.340252,  0.335031,  1.051982, 
+				 0.091309,  0.045779,  0.472421,  0.436561,  0.839189,  0.324308,  0.346598,  1.158554, 
+				 0.182617, -0.001722,  0.472421,  0.436561,  0.839189,  0.324308,  0.303063,  1.163959, 
+				 0.169612,  0.164038,  0.061004,  0.436561,  0.839189,  0.324308,  0.367869,  1.343157, 
+				 0.182617, -0.069341,  0.472421,  0.314844, -0.934853,  0.164083,  0.624732,  1.111943, 
+				 0.091309, -0.100092,  0.472421,  0.314844, -0.934853,  0.164083,  0.584522,  1.111953, 
+				 0.466043, -0.046099,  0.061004,  0.314844, -0.934853,  0.164083,  0.751626,  1.296951, 
+				 0.182617, -0.069341,  0.472421,  0.886914,  0.000000,  0.461934,  0.215127,  1.124209, 
+				 0.484346, -0.198910, -0.000000,  0.499579, -0.841189, -0.206933,  0.412919,  1.753191, 
+				 0.484346, -0.079761, -0.484346,  0.499579, -0.841189, -0.206933,  0.422709,  1.578452, 
+				 0.684969, -0.079761, -0.000000,  0.499579, -0.841189, -0.206933,  0.494746,  1.753337, 
+				 0.484346, -0.198910, -0.000000,  0.499579, -0.841189,  0.206933,  0.412919,  1.753191, 
+				 0.484346, -0.079761,  0.484346,  0.499579, -0.841189,  0.206933,  0.422159,  1.928578, 
+				 0.342485, -0.198910,  0.342485,  0.499579, -0.841189,  0.206933,  0.364234,  1.870267, 
+				 0.484346, -0.198910, -0.000000,  0.101282, -0.993973, -0.041953,  0.412919,  1.753191, 
+				 0.000000, -0.248263, -0.000000,  0.101282, -0.993973, -0.041953,  0.247373,  1.752628, 
+				 0.342485, -0.198910, -0.342485,  0.101282, -0.993973, -0.041953,  0.364727,  1.636051, 
+				 0.342485, -0.198910, -0.342485,  0.499579, -0.841189, -0.206933,  0.364727,  1.636051, 
+				 0.342485, -0.198910, -0.342485,  0.041953, -0.993973, -0.101282,  0.364727,  1.636051, 
+				 0.000000, -0.248263, -0.000000,  0.041953, -0.993973, -0.101282,  0.247373,  1.752628, 
+				 0.000000, -0.198910, -0.484346,  0.041953, -0.993973, -0.101282,  0.247909,  1.587082, 
+				 0.000000, -0.198910, -0.484346,  0.206933, -0.841189, -0.499579,  0.247909,  1.587082, 
+				 0.484346, -0.079761, -0.484346,  0.206933, -0.841189, -0.499579,  0.422709,  1.578452, 
+				 0.342485, -0.198910, -0.342485,  0.206933, -0.841189, -0.499579,  0.364727,  1.636051, 
+				 0.000000, -0.198910, -0.484346, -0.206933, -0.841189, -0.499579,  0.247909,  1.587082, 
+				-0.484346, -0.079761, -0.484346, -0.206933, -0.841189, -0.499579,  0.072587,  1.576677, 
+				 0.000000, -0.079761, -0.684969, -0.206933, -0.841189, -0.499579,  0.248306,  1.505255, 
+				 0.000000, -0.198910, -0.484346, -0.041953, -0.993973, -0.101282,  0.247909,  1.587082, 
+				 0.000000, -0.248263, -0.000000, -0.041953, -0.993973, -0.101282,  0.247373,  1.752628, 
+				-0.342485, -0.198910, -0.342485, -0.041953, -0.993973, -0.101282,  0.130512,  1.634988, 
+				-0.342485, -0.198910, -0.342485, -0.206933, -0.841189, -0.499579,  0.130512,  1.634988, 
+				-0.342485, -0.198910, -0.342485, -0.101282, -0.993973, -0.041953,  0.130512,  1.634988, 
+				 0.000000, -0.248263, -0.000000, -0.101282, -0.993973, -0.041953,  0.247373,  1.752628, 
+				-0.484346, -0.198910, -0.000000, -0.101282, -0.993973, -0.041953,  0.081827,  1.752064, 
+				-0.484346, -0.198910, -0.000000, -0.499579, -0.841189, -0.206933,  0.081827,  1.752064, 
+				-0.484346, -0.079761, -0.484346, -0.499579, -0.841189, -0.206933,  0.072587,  1.576677, 
+				-0.342485, -0.198910, -0.342485, -0.499579, -0.841189, -0.206933,  0.130512,  1.634988, 
+				-0.484346, -0.198910, -0.000000, -0.499579, -0.841189,  0.206933,  0.081827,  1.752064, 
+				-0.484346, -0.079761,  0.484346, -0.499579, -0.841189,  0.206933,  0.072037,  1.926803, 
+				-0.684969, -0.079761, -0.000000, -0.499579, -0.841189,  0.206933,  0.000000,  1.751918, 
+				-0.484346, -0.198910, -0.000000, -0.101282, -0.993973,  0.041953,  0.081827,  1.752064, 
+				 0.000000, -0.248263, -0.000000, -0.101282, -0.993973,  0.041953,  0.247373,  1.752628, 
+				-0.342485, -0.198910,  0.342485, -0.101282, -0.993973,  0.041953,  0.130019,  1.869205, 
+				-0.342485, -0.198910,  0.342485, -0.499579, -0.841189,  0.206933,  0.130019,  1.869205, 
+				-0.342485, -0.198910,  0.342485, -0.041953, -0.993973,  0.101282,  0.130019,  1.869205, 
+				 0.000000, -0.248263, -0.000000, -0.041953, -0.993973,  0.101282,  0.247373,  1.752628, 
+				-0.000000, -0.198910,  0.484346, -0.041953, -0.993973,  0.101282,  0.246837,  1.918173, 
+				-0.000000, -0.198910,  0.484346, -0.206933, -0.841189,  0.499579,  0.246837,  1.918173, 
+				-0.484346, -0.079761,  0.484346, -0.206933, -0.841189,  0.499579,  0.072037,  1.926803, 
+				-0.342485, -0.198910,  0.342485, -0.206933, -0.841189,  0.499579,  0.130019,  1.869205, 
+				-0.000000, -0.198910,  0.484346,  0.206933, -0.841189,  0.499579,  0.246837,  1.918173, 
+				 0.484346, -0.079761,  0.484346,  0.206933, -0.841189,  0.499579,  0.422159,  1.928578, 
+				-0.000000, -0.079761,  0.684969,  0.206933, -0.841189,  0.499579,  0.246440,  2.000000, 
+				-0.000000, -0.198910,  0.484346,  0.041953, -0.993973,  0.101282,  0.246837,  1.918173, 
+				 0.000000, -0.248263, -0.000000,  0.041953, -0.993973,  0.101282,  0.247373,  1.752628, 
+				 0.342485, -0.198910,  0.342485,  0.041953, -0.993973,  0.101282,  0.364234,  1.870267, 
+				 0.342485, -0.198910,  0.342485,  0.206933, -0.841189,  0.499579,  0.364234,  1.870267, 
+				 0.342485, -0.198910,  0.342485,  0.101282, -0.993973,  0.041953,  0.364234,  1.870267, 
+				 0.000000, -0.248263, -0.000000,  0.101282, -0.993973,  0.041953,  0.247373,  1.752628, 
+				 0.484346, -0.198910, -0.000000,  0.101282, -0.993973,  0.041953,  0.412919,  1.753191, 
+				 0.684969, -0.079761, -0.000000,  0.499579, -0.841189,  0.206933,  0.494746,  1.753337, 
+				 0.684969, -0.079761, -0.000000,  0.499579,  0.841189,  0.206933,  0.000000,  1.254534, 
+				 0.484346,  0.039388,  0.000000,  0.499579,  0.841189,  0.206933,  0.083702,  1.254145, 
+				 0.484346, -0.079761,  0.484346,  0.499579,  0.841189,  0.206933,  0.074350,  1.434031, 
+				 0.484346, -0.079761, -0.484346,  0.499579,  0.841189, -0.206933,  0.072885,  1.075972, 
+				 0.484346,  0.039388,  0.000000,  0.499579,  0.841189, -0.206933,  0.083702,  1.254145, 
+				 0.684969, -0.079761, -0.000000,  0.499579,  0.841189, -0.206933,  0.000000,  1.254534, 
+				 0.484346, -0.079761, -0.484346,  0.206933,  0.841189, -0.499579,  0.072885,  1.075972, 
+				 0.000000,  0.039388, -0.484346,  0.206933,  0.841189, -0.499579,  0.251218,  1.083696, 
+				 0.342485,  0.039388, -0.342485,  0.206933,  0.841189, -0.499579,  0.132394,  1.134458, 
+				 0.000000, -0.079761, -0.684969,  0.206933, -0.841189, -0.499579,  0.248306,  1.505255, 
+				 0.000000, -0.079761, -0.684969,  0.206933,  0.841189, -0.499579,  0.250155,  1.000000, 
+				-0.484346, -0.079761, -0.484346, -0.206933,  0.841189, -0.499579,  0.430915,  1.071224, 
+				 0.000000,  0.039388, -0.484346, -0.206933,  0.841189, -0.499579,  0.251218,  1.083696, 
+				 0.000000, -0.079761, -0.684969, -0.206933,  0.841189, -0.499579,  0.250155,  1.000000, 
+				-0.484346, -0.079761, -0.484346, -0.499579,  0.841189, -0.206933,  0.430915,  1.071224, 
+				-0.484346,  0.039388, -0.000000, -0.499579,  0.841189, -0.206933,  0.421564,  1.251111, 
+				-0.342485,  0.039388, -0.342485, -0.499579,  0.841189, -0.206933,  0.371550,  1.131629, 
+				-0.684969, -0.079761, -0.000000, -0.499579, -0.841189, -0.206933,  0.000000,  1.751918, 
+				-0.684969, -0.079761, -0.000000, -0.499579,  0.841189, -0.206933,  0.505265,  1.250722, 
+				-0.484346, -0.079761,  0.484346, -0.499579,  0.841189,  0.206933,  0.432381,  1.429283, 
+				-0.484346,  0.039388, -0.000000, -0.499579,  0.841189,  0.206933,  0.421564,  1.251111, 
+				-0.684969, -0.079761, -0.000000, -0.499579,  0.841189,  0.206933,  0.505265,  1.250722, 
+				-0.484346, -0.079761,  0.484346, -0.206933,  0.841189,  0.499579,  0.432381,  1.429283, 
+				-0.000000,  0.039388,  0.484346, -0.206933,  0.841189,  0.499579,  0.254047,  1.421560, 
+				-0.342485,  0.039388,  0.342485, -0.206933,  0.841189,  0.499579,  0.372871,  1.370797, 
+				-0.000000, -0.079761,  0.684969, -0.206933, -0.841189,  0.499579,  0.246440,  2.000000, 
+				-0.000000, -0.079761,  0.684969, -0.206933,  0.841189,  0.499579,  0.255111,  1.505255, 
+				 0.342485,  0.039388,  0.342485,  0.499579,  0.841189,  0.206933,  0.133715,  1.373627, 
+				 0.484346, -0.079761,  0.484346,  0.206933,  0.841189,  0.499579,  0.074350,  1.434031, 
+				-0.000000,  0.039388,  0.484346,  0.206933,  0.841189,  0.499579,  0.254047,  1.421560, 
+				-0.000000, -0.079761,  0.684969,  0.206933,  0.841189,  0.499579,  0.255111,  1.505255, 
+				 0.484346,  0.039388,  0.000000,  0.390775,  0.906143,  0.161864,  0.083702,  1.254145, 
+				 0.000000,  0.248263,  0.000000,  0.390775,  0.906143,  0.161864,  0.252633,  1.252628, 
+				 0.342485,  0.039388,  0.342485,  0.390775,  0.906143,  0.161864,  0.133715,  1.373627, 
+				 0.342485,  0.039388, -0.342485,  0.499579,  0.841189, -0.206933,  0.132394,  1.134458, 
+				 0.342485,  0.039388, -0.342485,  0.390775,  0.906143, -0.161864,  0.132394,  1.134458, 
+				 0.000000,  0.248263,  0.000000,  0.390775,  0.906143, -0.161864,  0.252633,  1.252628, 
+				 0.484346,  0.039388,  0.000000,  0.390775,  0.906143, -0.161864,  0.083702,  1.254145, 
+				 0.000000,  0.039388, -0.484346,  0.161864,  0.906143, -0.390775,  0.251218,  1.083696, 
+				 0.000000,  0.248263,  0.000000,  0.161864,  0.906143, -0.390775,  0.252633,  1.252628, 
+				 0.342485,  0.039388, -0.342485,  0.161864,  0.906143, -0.390775,  0.132394,  1.134458, 
+				-0.342485,  0.039388, -0.342485, -0.206933,  0.841189, -0.499579,  0.371550,  1.131629, 
+				-0.342485,  0.039388, -0.342485, -0.161864,  0.906143, -0.390775,  0.371550,  1.131629, 
+				 0.000000,  0.248263,  0.000000, -0.161864,  0.906143, -0.390775,  0.252633,  1.252628, 
+				 0.000000,  0.039388, -0.484346, -0.161864,  0.906143, -0.390775,  0.251218,  1.083696, 
+				-0.484346,  0.039388, -0.000000, -0.390775,  0.906143, -0.161864,  0.421564,  1.251111, 
+				 0.000000,  0.248263,  0.000000, -0.390775,  0.906143, -0.161864,  0.252633,  1.252628, 
+				-0.342485,  0.039388, -0.342485, -0.390775,  0.906143, -0.161864,  0.371550,  1.131629, 
+				-0.342485,  0.039388,  0.342485, -0.499579,  0.841189,  0.206933,  0.372871,  1.370797, 
+				-0.342485,  0.039388,  0.342485, -0.390775,  0.906143,  0.161864,  0.372871,  1.370797, 
+				 0.000000,  0.248263,  0.000000, -0.390775,  0.906143,  0.161864,  0.252633,  1.252628, 
+				-0.484346,  0.039388, -0.000000, -0.390775,  0.906143,  0.161864,  0.421564,  1.251111, 
+				-0.000000,  0.039388,  0.484346, -0.161864,  0.906143,  0.390775,  0.254047,  1.421560, 
+				 0.000000,  0.248263,  0.000000, -0.161864,  0.906143,  0.390775,  0.252633,  1.252628, 
+				-0.342485,  0.039388,  0.342485, -0.161864,  0.906143,  0.390775,  0.372871,  1.370797, 
+				 0.342485,  0.039388,  0.342485,  0.206933,  0.841189,  0.499579,  0.133715,  1.373627, 
+				 0.342485,  0.039388,  0.342485,  0.161864,  0.906143,  0.390775,  0.133715,  1.373627, 
+				 0.000000,  0.248263,  0.000000,  0.161864,  0.906143,  0.390775,  0.252633,  1.252628, 
+				-0.000000,  0.039388,  0.484346,  0.161864,  0.906143,  0.390775,  0.254047,  1.421560
+			], 
+			"parts": [
+				{
+					"id": "mpart1", 
+					"type": "TRIANGLES", 
+					"indices": [
+						  0,   1,   2,   1,   0,   3,   3,   4,   5,   4,   3,   0, 
+						  6,   7,   5,   6,   5,   4,   8,   9,   7,   7,   6,   8, 
+						  9,   8,  10,   9,  10,  11,  11,  10,  12,  11,  12,  13, 
+						 14,  13,  12,  13,  14,  15,  14,  16,  15,  16,  14,  17, 
+						 18,  19,  16,  18,  16,  17,  20,  18,  21,  18,  20,  19, 
+						 22,  23,  20,  20,  21,  22,  23,  22,  24,  23,  24,  25, 
+						 24,  26,  25,  26,  24,  27,  28,  26,  27,  26,  28,  29, 
+						 30,  29,  28,  29,  30,  31,  32,  33,  31,  32,  31,  30, 
+						 34,  35,  33,  33,  32,  34,  36,  37,  35,  35,  34,  36, 
+						 37,  36,  38,  37,  38,  39,  38,  40,  39,  40,  38,  41, 
+						 42,   2,  43,   2,  42,   0,  44,   0,  42,   0,  44,   4, 
+						 45,   6,   4,  45,   4,  44,  46,   8,   6,   6,  45,  46, 
+						  8,  46,  47,   8,  47,  10,  47,  48,  10,  10,  48,  12, 
+						 49,  12,  48,  12,  49,  14,  50,  14,  49,  14,  50,  17, 
+						 51,  18,  17,  51,  17,  50,  21,  51,  52,  51,  21,  18, 
+						 22,  21,  53,  21,  52,  53,  22,  53,  54,  22,  54,  24, 
+						 54,  55,  24,  24,  55,  27,  56,  27,  55,  27,  56,  28, 
+						 57,  28,  56,  28,  57,  30,  58,  32,  30,  58,  30,  57, 
+						 59,  34,  32,  32,  58,  59,  59,  36,  34,  36,  59,  60, 
+						 60,  61,  36,  36,  61,  38,  61,  41,  38,  41,  61,  62, 
+						 63,  43,  64,  43,  63,  42,  65,  42,  63,  42,  65,  44, 
+						 66,  45,  44,  66,  44,  65,  46,  45,  67,  45,  66,  67, 
+						 67,  68,  46,  46,  68,  47,  68,  69,  47,  47,  69,  48, 
+						 70,  48,  69,  48,  70,  49,  71,  49,  70,  49,  71,  50, 
+						 51,  71,  72,  71,  51,  50,  52,  51,  73,  51,  72,  73, 
+						 53,  52,  74,  52,  73,  74,  74,  75,  53,  53,  75,  54, 
+						 75,  55,  54,  55,  75,  76,  77,  55,  76,  55,  77,  56, 
+						 78,  56,  77,  56,  78,  57,  79,  58,  57,  79,  57,  78, 
+						 59,  58,  80,  58,  79,  80,  80,  60,  59,  60,  80,  81, 
+						 81,  82,  60,  60,  82,  61,  82,  62,  61,  62,  82,  83, 
+						 84,  63,  64,  63,  84,  85,  86,  63,  85,  63,  86,  65, 
+						 66,  65,  87,  87,  65,  86,  67,  66,  88,  66,  87,  88, 
+						 88,  68,  67,  68,  88,  89,  89,  90,  68,  68,  90,  69, 
+						 91,  69,  90,  69,  91,  70,  92,  70,  91,  70,  92,  71, 
+						 71,  93,  72,  93,  71,  92,  73,  93,  94,  93,  73,  72, 
+						 74,  73,  95,  73,  94,  95,  95,  96,  74,  74,  96,  75, 
+						 96,  97,  75,  75,  97,  76,  98,  76,  97,  76,  98,  77, 
+						 99,  77,  98,  77,  99,  78,  79,  99,  100,  99,  79,  78, 
+						 80,  79,  101,  79,  100,  101,  101,  81,  80,  81,  101,  102, 
+						 102,  103,  81,  81,  103,  82,  103,  83,  82,  83,  103,  104, 
+						 105,  85,  84,  85,  105,  106,  107,  85,  106,  85,  107,  86, 
+						 107,  108,  86,  86,  108,  87,  109,  87,  108,  87,  109,  88, 
+						 109,  89,  88,  89,  109,  110,  90,  110,  111,  110,  90,  89, 
+						 112,  90,  111,  90,  112,  91,  113,  91,  112,  113,  92,  91, 
+						 114,  93,  92,  114,  92,  113,  94,  114,  115,  114,  94,  93, 
+						 95,  115,  116,  115,  95,  94,  116,  117,  95,  95,  117,  96, 
+						 97,  96,  118,  96,  117,  118,  118,  119,  97,  98,  97,  119, 
+						 119,  99,  98,  99,  119,  120,  120,  100,  99,  100,  120,  121, 
+						 101,  100,  122,  100,  121,  122,  122,  123,  101,  101,  123,  102, 
+						 123,  124,  102,  102,  124,  103,  124,  104,  103,  104,  124,  125, 
+						 126,  106,  105,  106,  126,  127,  127,  128,  106,  106,  128,  107, 
+						 129,  107,  128,  107,  129,  108,  130,  108,  129,  108,  130,  109, 
+						 130,  110,  109,  110,  130,  131,  131,  111,  110,  111,  131,  132, 
+						 133,  111,  132,  133,  112,  111,  134,  113,  112,  134,  112,  133, 
+						 114,  113,  135,  135,  113,  134,  115,  135,  136,  135,  115,  114, 
+						 116,  136,  137,  136,  116,  115,  117,  116,  138,  116,  137,  138, 
+						 118,  117,  139,  117,  138,  139,  139,  140,  118,  119,  118,  140, 
+						 140,  120,  119,  120,  140,  141,  141,  121,  120,  121,  141,  142, 
+						 142,  122,  121,  122,  142,  143,  143,  144,  122,  122,  144,  123, 
+						 144,  145,  123,  123,  145,  124,  145,  125,  124,  125,  145,  146, 
+						 147,  127,  126,  127,  147,  148,  149,  127,  148,  127,  149,  128, 
+						 150,  128,  149,  128,  150,  129,  151,  129,  150,  129,  151,  130, 
+						 151,  131,  130,  131,  151,  152,  152,  132,  131,  132,  152,  153, 
+						 154,  133,  132,  154,  132,  153,  155,  134,  133,  155,  133,  154, 
+						 135,  134,  156,  156,  134,  155,  136,  156,  157,  156,  136,  135, 
+						 137,  157,  158,  157,  137,  136,  138,  137,  159,  137,  158,  159, 
+						 139,  138,  160,  138,  159,  160,  160,  161,  139,  140,  139,  161, 
+						 161,  141,  140,  141,  161,  162,  162,  142,  141,  142,  162,  163, 
+						 163,  143,  142,  143,  163,  164,  164,  165,  143,  143,  165,  144, 
+						 165,  166,  144,  144,  166,  145,  166,  146,  145,  146,  166,  167, 
+						 168,  148,  147,  148,  168,  169,  170,  148,  169,  148,  170,  149, 
+						 171,  149,  170,  149,  171,  150,  172,  150,  171,  150,  172,  151, 
+						 172,  152,  151,  152,  172,  173,  173,  153,  152,  153,  173,  174, 
+						 175,  154,  153,  175,  153,  174,  176,  155,  154,  176,  154,  175, 
+						 156,  155,  177,  177,  155,  176,  157,  177,  178,  177,  157,  156, 
+						 158,  178,  179,  178,  158,  157,  159,  158,  180,  158,  179,  180, 
+						 160,  159,  181,  159,  180,  181,  181,  182,  160,  161,  160,  182, 
+						 182,  162,  161,  162,  182,  183,  183,  163,  162,  163,  183,  184, 
+						 184,  164,  163,  164,  184,  185,  185,  186,  164,  164,  186,  165, 
+						 186,  187,  165,  165,  187,  166,  187,  167,  166,  167,  187,  188, 
+						 189,  169,  168,  169,  189,  190,  191,  169,  190,  169,  191,  170, 
+						 192,  170,  191,  170,  192,  171,  193,  171,  192,  171,  193,  172, 
+						 193,  173,  172,  173,  193,  194,  194,  174,  173,  174,  194,  195, 
+						 196,  175,  174,  196,  174,  195,  197,  176,  175,  197,  175,  196, 
+						 177,  176,  198,  198,  176,  197,  178,  198,  199,  198,  178,  177, 
+						 179,  199,  200,  199,  179,  178,  180,  179,  201,  179,  200,  201, 
+						 201,  202,  180,  181,  180,  202,  202,  203,  181,  182,  181,  203, 
+						 203,  183,  182,  183,  203,  204,  204,  184,  183,  184,  204,  205, 
+						 185,  205,  206,  205,  185,  184,  206,  207,  185,  185,  207,  186, 
+						 207,  208,  186,  186,  208,  187,  208,  188,  187,  188,  208,  209, 
+						 210,  211,  189,  189,  211,  190,  211,  191,  190,  191,  211,  212, 
+						 212,  192,  191,  192,  212,  213,  213,  193,  192,  193,  213,  214, 
+						 215,  193,  214,  193,  215,  194,  216,  194,  215,  194,  216,  195, 
+						 196,  216,  217,  216,  196,  195,  197,  217,  218,  217,  197,  196, 
+						 198,  218,  219,  218,  198,  197,  199,  198,  220,  220,  198,  219, 
+						 200,  199,  221,  221,  199,  220,  201,  221,  222,  221,  201,  200, 
+						 222,  202,  201,  202,  222,  223,  223,  203,  202,  203,  223,  224, 
+						 224,  225,  203,  204,  203,  225,  205,  204,  226,  204,  225,  226, 
+						 206,  205,  227,  205,  226,  227,  227,  207,  206,  207,  227,  228, 
+						 228,  208,  207,  208,  228,  229,  229,  230,  208,  208,  230,  209, 
+						 231,  232,  210,  210,  232,  211,  212,  232,  233,  232,  212,  211, 
+						 233,  213,  212,  213,  233,  234,  234,  214,  213,  214,  234,  235, 
+						 236,  214,  235,  214,  236,  215,  237,  215,  236,  215,  237,  216, 
+						 217,  237,  238,  237,  217,  216,  218,  238,  239,  238,  218,  217, 
+						 219,  239,  240,  239,  219,  218,  220,  219,  241,  241,  219,  240, 
+						 242,  221,  220,  242,  220,  241,  222,  242,  243,  242,  222,  221, 
+						 243,  223,  222,  223,  243,  244,  244,  224,  223,  224,  244,  245, 
+						 245,  246,  224,  225,  224,  246,  226,  225,  247,  225,  246,  247, 
+						 227,  226,  248,  226,  247,  248,  248,  228,  227,  228,  248,  249, 
+						 249,  229,  228,  229,  249,  250,  250,  251,  229,  229,  251,  230, 
+						 252,  253,  231,  231,  253,  232,  233,  253,  254,  253,  233,  232, 
+						 234,  254,  255,  254,  234,  233,  255,  235,  234,  235,  255,  256, 
+						 257,  235,  256,  235,  257,  236,  258,  236,  257,  236,  258,  237, 
+						 238,  258,  259,  258,  238,  237,  239,  259,  260,  259,  239,  238, 
+						 240,  260,  261,  260,  240,  239,  241,  240,  262,  262,  240,  261, 
+						 263,  242,  241,  263,  241,  262,  263,  243,  242,  243,  263,  264, 
+						 264,  244,  243,  244,  264,  265,  265,  245,  244,  245,  265,  266, 
+						 266,  267,  245,  246,  245,  267,  247,  246,  268,  246,  267,  268, 
+						 248,  247,  269,  247,  268,  269,  269,  249,  248,  249,  269,  270, 
+						 270,  250,  249,  250,  270,  271,  271,  272,  250,  250,  272,  251, 
+						 273,  274,  252,  252,  274,  253,  254,  274,  275,  274,  254,  253, 
+						 255,  275,  276,  275,  255,  254,  276,  256,  255,  256,  276,  277, 
+						 278,  256,  277,  256,  278,  257,  279,  257,  278,  257,  279,  258, 
+						 259,  279,  280,  279,  259,  258,  260,  280,  281,  280,  260,  259, 
+						 261,  281,  282,  281,  261,  260,  262,  261,  283,  283,  261,  282, 
+						 284,  263,  262,  284,  262,  283,  284,  264,  263,  264,  284,  285, 
+						 285,  265,  264,  265,  285,  286,  286,  266,  265,  266,  286,  287, 
+						 287,  288,  266,  267,  266,  288,  268,  267,  289,  267,  288,  289, 
+						 269,  268,  290,  268,  289,  290,  290,  270,  269,  270,  290,  291, 
+						 291,  271,  270,  271,  291,  292,  293,  271,  292,  271,  293,  272, 
+						 294,  295,  273,  274,  273,  295,  275,  295,  296,  295,  275,  274, 
+						 276,  296,  297,  296,  276,  275,  277,  297,  298,  297,  277,  276, 
+						 299,  277,  298,  277,  299,  278,  300,  278,  299,  278,  300,  279, 
+						 300,  280,  279,  280,  300,  301,  281,  301,  302,  301,  281,  280, 
+						 282,  302,  303,  302,  282,  281,  283,  282,  304,  304,  282,  303, 
+						 305,  284,  283,  305,  283,  304,  305,  285,  284,  285,  305,  306, 
+						 306,  286,  285,  286,  306,  307,  307,  287,  286,  287,  307,  308, 
+						 308,  309,  287,  288,  287,  309,  289,  288,  310,  288,  309,  310, 
+						 290,  310,  311,  310,  290,  289,  311,  291,  290,  291,  311,  312, 
+						 312,  292,  291,  292,  312,  313,  313,  314,  292,  292,  314,  293, 
+						 315,  316,  294,  295,  294,  316,  296,  316,  317,  316,  296,  295, 
+						 297,  317,  318,  317,  297,  296,  298,  318,  319,  318,  298,  297, 
+						 320,  298,  319,  298,  320,  299,  320,  300,  299,  300,  320,  321, 
+						 321,  301,  300,  301,  321,  322,  302,  322,  323,  322,  302,  301, 
+						 303,  323,  324,  323,  303,  302,  303,  325,  304,  325,  303,  324, 
+						 305,  325,  326,  325,  305,  304,  326,  306,  305,  306,  326,  327, 
+						 327,  307,  306,  307,  327,  328,  328,  308,  307,  308,  328,  329, 
+						 309,  329,  330,  329,  309,  308,  310,  309,  331,  331,  309,  330, 
+						 311,  331,  332,  331,  311,  310,  333,  311,  332,  311,  333,  312, 
+						 333,  313,  312,  313,  333,  334,  335,  313,  334,  313,  335,  314, 
+						 316,  336,  337,  336,  316,  315,  317,  337,  338,  337,  317,  316, 
+						 318,  338,  339,  338,  318,  317,  319,  339,  340,  339,  319,  318, 
+						 340,  320,  319,  320,  340,  341,  341,  321,  320,  321,  341,  342, 
+						 342,  322,  321,  322,  342,  343,  323,  343,  344,  343,  323,  322, 
+						 345,  324,  323,  323,  344,  345,  325,  345,  346,  345,  325,  324, 
+						 326,  346,  347,  346,  326,  325,  347,  327,  326,  327,  347,  348, 
+						 349,  327,  348,  327,  349,  328,  329,  349,  350,  349,  329,  328, 
+						 330,  350,  351,  350,  330,  329,  331,  351,  352,  351,  331,  330, 
+						 332,  352,  353,  352,  332,  331,  354,  332,  353,  332,  354,  333, 
+						 354,  334,  333,  334,  354,  355,  356,  334,  355,  334,  356,  335, 
+						 337,  357,  358,  357,  337,  336,  338,  358,  359,  358,  338,  337, 
+						 339,  359,  360,  359,  339,  338,  340,  360,  361,  360,  340,  339, 
+						 361,  341,  340,  341,  361,  362,  362,  342,  341,  342,  362,  363, 
+						 343,  363,  364,  363,  343,  342,  344,  364,  365,  364,  344,  343, 
+						 345,  365,  366,  365,  345,  344,  367,  346,  345,  367,  345,  366, 
+						 347,  367,  368,  367,  347,  346,  368,  348,  347,  348,  368,  369, 
+						 369,  349,  348,  349,  369,  370,  350,  370,  371,  370,  350,  349, 
+						 351,  371,  372,  371,  351,  350,  352,  372,  373,  372,  352,  351, 
+						 353,  373,  374,  373,  353,  352,  375,  353,  374,  353,  375,  354, 
+						 375,  355,  354,  355,  375,  376,  377,  355,  376,  355,  377,  356, 
+						 358,  378,  379,  378,  358,  357,  359,  379,  380,  379,  359,  358, 
+						 360,  380,  381,  380,  360,  359,  361,  381,  382,  381,  361,  360, 
+						 382,  362,  361,  362,  382,  383,  383,  363,  362,  363,  383,  384, 
+						 384,  364,  363,  364,  384,  385,  386,  365,  364,  364,  385,  386, 
+						 366,  386,  387,  386,  366,  365,  388,  367,  366,  388,  366,  387, 
+						 368,  388,  389,  388,  368,  367,  389,  369,  368,  369,  389,  390, 
+						 391,  369,  390,  369,  391,  370,  371,  391,  392,  391,  371,  370, 
+						 372,  392,  393,  392,  372,  371,  373,  393,  394,  393,  373,  372, 
+						 374,  394,  395,  394,  374,  373,  375,  395,  396,  395,  375,  374, 
+						 396,  376,  375,  376,  396,  397,  398,  376,  397,  376,  398,  377, 
+						  3,  399,   1,   5,  400,   3,   7,  401,   5,   9,  402,   7, 
+						 11,  403,   9,  13,  404,  11,  15,  405,  13,  16,  406,  15, 
+						 19,  407,  16,  20,  408,  19,  23,  409,  20,  25,  410,  23, 
+						 26,  411,  25,  29,  412,  26,  31,  413,  29,  33,  414,  31, 
+						 35,  415,  33,  37,  416,  35,  39,  417,  37,  40,  418,  39, 
+						 378,  419,  379,  379,  420,  380,  380,  421,  381,  381,  422,  382, 
+						 382,  423,  383,  383,  424,  384,  384,  425,  385,  385,  426,  386, 
+						 386,  427,  387,  387,  428,  388,  388,  429,  389,  389,  430,  390, 
+						 390,  431,  391,  391,  432,  392,  392,  433,  393,  393,  434,  394, 
+						 394,  435,  395,  395,  436,  396,  396,  437,  397,  397,  438,  398
+					]
+				}, 
+				{
+					"id": "mpart2", 
+					"type": "TRIANGLES", 
+					"indices": [
+						 439,  440,  441,  442,  443,  444,  445,  446,  447,  448,  449,  450, 
+						 451,  452,  453,  454,  455,  456,  457,  458,  459,  460,  461,  462, 
+						 463,  464,  465,  466,  467,  468,  469,  470,  471,  472,  473,  474, 
+						 475,  476,  477,  478,  479,  480,  474,  473,  481,  482,  483,  484, 
+						 485,  486,  487,  484,  483,  488,  489,  490,  491,  492,  493,  494, 
+						 495,  496,  497,  498,  499,  500,  501,  502,  503,  504,  505,  506, 
+						 507,  508,  509,  510,  499,  498,  511,  512,  513,  503,  514,  501, 
+						 515,  516,  517,  518,  519,  520,  513,  512,  521,  522,  523,  524, 
+						 525,  453,  452,  526,  527,  528,  529,  530,  531,  532,  533,  534, 
+						 535,  459,  458,  536,  533,  532,  537,  476,  475,  538,  539,  540, 
+						 541,  542,  543,  544,  545,  546,  547,  467,  466,  548,  549,  550, 
+						 551,  552,  553,  554,  555,  556,  557,  558,  559,  560,  516,  515, 
+						 561,  562,  563,  564,  555,  554,  565,  566,  567,  568,  569,  570, 
+						 555,  571,  556,  572,  573,  574,  575,  576,  577,  578,  579,  580, 
+						 581,  449,  448,  582,  583,  584,  585,  586,  587,  588,  589,  590, 
+						 591,  592,  593,  594,  595,  596,  597,  598,  599,  600,  601,  602, 
+						 603,  595,  594,  604,  605,  606,  607,  608,  609,  610,  611,  612, 
+						 609,  608,  613,  614,  615,  616,  617,  618,  619,  616,  615,  620, 
+						 621,  622,  623,  624,  625,  626,  627,  628,  629,  583,  582,  630, 
+						 629,  628,  631,  632,  633,  634,  611,  610,  635,  636,  493,  492, 
+						 637,  638,  639,  640,  641,  642,  643,  505,  504,  644,  645,  646, 
+						 571,  555,  647,  648,  649,  650,  651,  652,  653,  654,  655,  656, 
+						 657,  542,  658,  659,  660,  661,  662,  663,  664,  665,  625,  624
+					]
+				}, 
+				{
+					"id": "mpart4", 
+					"type": "TRIANGLES", 
+					"indices": [
+						 666,  667,  668,  669,  670,  671,  672,  673,  674,  675,  667,  666, 
+						 676,  677,  678,  679,  680,  681,  682,  683,  684,  685,  686,  687, 
+						 688,  683,  682,  689,  690,  691,  692,  693,  694,  695,  696,  697, 
+						 698,  699,  700,  701,  696,  695,  702,  703,  704,  705,  706,  707, 
+						 708,  709,  710,  711,  712,  713,  714,  709,  708,  715,  716,  717, 
+						 718,  670,  669,  719,  720,  721,  722,  723,  724,  725,  726,  727, 
+						 728,  680,  679,  729,  726,  725,  730,  731,  732,  733,  734,  735, 
+						 736,  693,  692,  737,  734,  733,  738,  739,  740,  741,  742,  743, 
+						 744,  706,  705,  745,  742,  741,  721,  720,  746,  747,  748,  749, 
+						 750,  751,  752,  753,  723,  722,  754,  755,  756,  757,  758,  759, 
+						 760,  731,  730,  761,  762,  763,  764,  765,  766,  767,  739,  738, 
+						 768,  769,  770,  771,  772,  773,  774,  748,  747,  775,  776,  777
+					]
+				}
+			]
+		}, 
+		{
+			"attributes": ["POSITION", "NORMAL"], 
+			"vertices": [
+				-0.577350, -0.147802,  0.577350,  0.000000,  0.000000,  1.000000, 
+				 0.577350, -0.147802,  0.577350,  0.000000,  0.000000,  1.000000, 
+				-0.577350,  0.147802,  0.577350,  0.000000,  0.000000,  1.000000, 
+				-0.577350, -0.147802,  0.577350,  0.000000, -1.000000,  0.000000, 
+				-0.577350, -0.147802, -0.577350,  0.000000, -1.000000,  0.000000, 
+				 0.577350, -0.147802,  0.577350,  0.000000, -1.000000,  0.000000, 
+				 0.577350,  0.147802,  0.577350,  0.000000,  0.000000,  1.000000, 
+				-0.577350,  0.147802,  0.577350, -1.000000,  0.000000,  0.000000, 
+				-0.577350, -0.147802, -0.577350, -1.000000,  0.000000,  0.000000, 
+				-0.577350, -0.147802,  0.577350, -1.000000,  0.000000,  0.000000, 
+				-0.577350,  0.147802,  0.577350,  0.000000,  1.000000,  0.000000, 
+				 0.577350,  0.147802, -0.577350,  0.000000,  1.000000,  0.000000, 
+				-0.577350,  0.147802, -0.577350,  0.000000,  1.000000,  0.000000, 
+				 0.577350,  0.147802,  0.577350,  0.000000,  1.000000,  0.000000, 
+				 0.577350, -0.147802, -0.577350,  0.000000, -1.000000,  0.000000, 
+				 0.577350, -0.147802,  0.577350,  1.000000,  0.000000,  0.000000, 
+				 0.577350,  0.147802, -0.577350,  1.000000,  0.000000,  0.000000, 
+				 0.577350,  0.147802,  0.577350,  1.000000,  0.000000,  0.000000, 
+				-0.577350, -0.147802, -0.577350,  0.000000,  0.000000, -1.000000, 
+				 0.577350,  0.147802, -0.577350,  0.000000,  0.000000, -1.000000, 
+				 0.577350, -0.147802, -0.577350,  0.000000,  0.000000, -1.000000, 
+				-0.577350,  0.147802, -0.577350, -1.000000,  0.000000,  0.000000, 
+				-0.577350,  0.147802, -0.577350,  0.000000,  0.000000, -1.000000, 
+				 0.577350, -0.147802, -0.577350,  1.000000,  0.000000,  0.000000
+			], 
+			"parts": [
+				{
+					"id": "mpart3", 
+					"type": "TRIANGLES", 
+					"indices": [
+						  0,   1,   2,   3,   4,   5,   2,   1,   6,   7,   8,   9, 
+						 10,  11,  12,  13,  11,  10,   5,   4,  14,  15,  16,  17, 
+						 18,  19,  20,  21,   8,   7,  22,  19,  18,  23,  16,  15
+					]
+				}
+			]
+		}
+	], 
+	"materials": [
+		{
+			"id": "cube1_auv1", 
+			"diffuse": [ 1.000000,  1.000000,  1.000000], 
+			"textures": [
+				{
+					"id": "file2", 
+					"filename": "ship.png", 
+					"type": "DIFFUSE"
+				}
+			]
+		}, 
+		{
+			"id": "block_default1", 
+			"diffuse": [ 0.000000,  0.000000,  1.000000]
+		}, 
+		{
+			"id": "sphere2_auv1", 
+			"diffuse": [ 1.000000,  1.000000,  1.000000], 
+			"textures": [
+				{
+					"id": "file3", 
+					"filename": "invader.png", 
+					"type": "DIFFUSE"
+				}
+			]
+		}, 
+		{
+			"id": "lambert2", 
+			"diffuse": [ 1.000000,  1.000000,  1.000000], 
+			"textures": [
+				{
+					"id": "file1", 
+					"filename": "space.jpg", 
+					"type": "DIFFUSE"
+				}
+			]
+		}
+	], 
+	"nodes": [
+		{
+			"id": "space", 
+			"parts": [
+				{
+					"meshpartid": "mpart1", 
+					"materialid": "lambert2", 
+					"uvMapping": [[  0]]
+				}
+			]
+		}, 
+		{
+			"id": "ship", 
+			"rotation": [ 0.000000,  1.000000,  0.000000,  0.000000], 
+			"translation": [ 0.000000,  0.000000,  6.000000], 
+			"parts": [
+				{
+					"meshpartid": "mpart2", 
+					"materialid": "cube1_auv1", 
+					"uvMapping": [[  0]]
+				}
+			]
+		}, 
+		{
+			"id": "block1", 
+			"translation": [-5.000000,  0.000000,  3.000000], 
+			"parts": [
+				{
+					"meshpartid": "mpart3", 
+					"materialid": "block_default1"
+				}
+			]
+		}, 
+		{
+			"id": "block2", 
+			"translation": [-3.000000,  0.000000,  3.000000], 
+			"parts": [
+				{
+					"meshpartid": "mpart3", 
+					"materialid": "block_default1"
+				}
+			]
+		}, 
+		{
+			"id": "block3", 
+			"translation": [-1.000000,  0.000000,  3.000000], 
+			"parts": [
+				{
+					"meshpartid": "mpart3", 
+					"materialid": "block_default1"
+				}
+			]
+		}, 
+		{
+			"id": "block4", 
+			"translation": [ 1.000000,  0.000000,  3.000000], 
+			"parts": [
+				{
+					"meshpartid": "mpart3", 
+					"materialid": "block_default1"
+				}
+			]
+		}, 
+		{
+			"id": "block5", 
+			"translation": [ 3.000000,  0.000000,  3.000000], 
+			"parts": [
+				{
+					"meshpartid": "mpart3", 
+					"materialid": "block_default1"
+				}
+			]
+		}, 
+		{
+			"id": "block6", 
+			"translation": [ 5.000000,  0.000000,  3.000000], 
+			"parts": [
+				{
+					"meshpartid": "mpart3", 
+					"materialid": "block_default1"
+				}
+			]
+		}, 
+		{
+			"id": "invader1", 
+			"translation": [-5.000000,  0.000000,  0.000000], 
+			"parts": [
+				{
+					"meshpartid": "mpart4", 
+					"materialid": "sphere2_auv1", 
+					"uvMapping": [[  0]]
+				}
+			]
+		}, 
+		{
+			"id": "invader2", 
+			"translation": [-3.000000,  0.000000,  0.000000], 
+			"parts": [
+				{
+					"meshpartid": "mpart4", 
+					"materialid": "sphere2_auv1", 
+					"uvMapping": [[  0]]
+				}
+			]
+		}, 
+		{
+			"id": "invader3", 
+			"translation": [-1.000000,  0.000000,  0.000000], 
+			"parts": [
+				{
+					"meshpartid": "mpart4", 
+					"materialid": "sphere2_auv1", 
+					"uvMapping": [[  0]]
+				}
+			]
+		}, 
+		{
+			"id": "invader4", 
+			"translation": [ 1.000000,  0.000000,  0.000000], 
+			"parts": [
+				{
+					"meshpartid": "mpart4", 
+					"materialid": "sphere2_auv1", 
+					"uvMapping": [[  0]]
+				}
+			]
+		}, 
+		{
+			"id": "invader5", 
+			"translation": [ 3.000000,  0.000000,  0.000000], 
+			"parts": [
+				{
+					"meshpartid": "mpart4", 
+					"materialid": "sphere2_auv1", 
+					"uvMapping": [[  0]]
+				}
+			]
+		}, 
+		{
+			"id": "invader6", 
+			"translation": [ 5.000000,  0.000000,  0.000000], 
+			"parts": [
+				{
+					"meshpartid": "mpart4", 
+					"materialid": "sphere2_auv1", 
+					"uvMapping": [[  0]]
+				}
+			]
+		}, 
+		{
+			"id": "invader7", 
+			"translation": [-5.000000,  0.000000, -2.000000], 
+			"parts": [
+				{
+					"meshpartid": "mpart4", 
+					"materialid": "sphere2_auv1", 
+					"uvMapping": [[  0]]
+				}
+			]
+		}, 
+		{
+			"id": "invader8", 
+			"translation": [-3.000000,  0.000000, -2.000000], 
+			"parts": [
+				{
+					"meshpartid": "mpart4", 
+					"materialid": "sphere2_auv1", 
+					"uvMapping": [[  0]]
+				}
+			]
+		}, 
+		{
+			"id": "invader9", 
+			"translation": [-1.000000,  0.000000, -2.000000], 
+			"parts": [
+				{
+					"meshpartid": "mpart4", 
+					"materialid": "sphere2_auv1", 
+					"uvMapping": [[  0]]
+				}
+			]
+		}, 
+		{
+			"id": "invader10", 
+			"translation": [ 1.000000,  0.000000, -2.000000], 
+			"parts": [
+				{
+					"meshpartid": "mpart4", 
+					"materialid": "sphere2_auv1", 
+					"uvMapping": [[  0]]
+				}
+			]
+		}, 
+		{
+			"id": "invader11", 
+			"translation": [ 3.000000,  0.000000, -2.000000], 
+			"parts": [
+				{
+					"meshpartid": "mpart4", 
+					"materialid": "sphere2_auv1", 
+					"uvMapping": [[  0]]
+				}
+			]
+		}, 
+		{
+			"id": "invader12", 
+			"translation": [ 5.000000,  0.000000, -2.000000], 
+			"parts": [
+				{
+					"meshpartid": "mpart4", 
+					"materialid": "sphere2_auv1", 
+					"uvMapping": [[  0]]
+				}
+			]
+		}, 
+		{
+			"id": "invader13", 
+			"translation": [-5.000000,  0.000000, -4.000000], 
+			"parts": [
+				{
+					"meshpartid": "mpart4", 
+					"materialid": "sphere2_auv1", 
+					"uvMapping": [[  0]]
+				}
+			]
+		}, 
+		{
+			"id": "invader14", 
+			"translation": [-3.000000,  0.000000, -4.000000], 
+			"parts": [
+				{
+					"meshpartid": "mpart4", 
+					"materialid": "sphere2_auv1", 
+					"uvMapping": [[  0]]
+				}
+			]
+		}, 
+		{
+			"id": "invader15", 
+			"translation": [-1.000000,  0.000000, -4.000000], 
+			"parts": [
+				{
+					"meshpartid": "mpart4", 
+					"materialid": "sphere2_auv1", 
+					"uvMapping": [[  0]]
+				}
+			]
+		}, 
+		{
+			"id": "invader16", 
+			"translation": [ 1.000000,  0.000000, -4.000000], 
+			"parts": [
+				{
+					"meshpartid": "mpart4", 
+					"materialid": "sphere2_auv1", 
+					"uvMapping": [[  0]]
+				}
+			]
+		}, 
+		{
+			"id": "invader17", 
+			"translation": [ 3.000000,  0.000000, -4.000000], 
+			"parts": [
+				{
+					"meshpartid": "mpart4", 
+					"materialid": "sphere2_auv1", 
+					"uvMapping": [[  0]]
+				}
+			]
+		}, 
+		{
+			"id": "invader18", 
+			"translation": [ 5.000000,  0.000000, -4.000000], 
+			"parts": [
+				{
+					"meshpartid": "mpart4", 
+					"materialid": "sphere2_auv1", 
+					"uvMapping": [[  0]]
+				}
+			]
+		}, 
+		{
+			"id": "invader19", 
+			"translation": [-5.000000,  0.000000, -6.000000], 
+			"parts": [
+				{
+					"meshpartid": "mpart4", 
+					"materialid": "sphere2_auv1", 
+					"uvMapping": [[  0]]
+				}
+			]
+		}, 
+		{
+			"id": "invader20", 
+			"translation": [-3.000000,  0.000000, -6.000000], 
+			"parts": [
+				{
+					"meshpartid": "mpart4", 
+					"materialid": "sphere2_auv1", 
+					"uvMapping": [[  0]]
+				}
+			]
+		}, 
+		{
+			"id": "invader21", 
+			"translation": [-1.000000,  0.000000, -6.000000], 
+			"parts": [
+				{
+					"meshpartid": "mpart4", 
+					"materialid": "sphere2_auv1", 
+					"uvMapping": [[  0]]
+				}
+			]
+		}, 
+		{
+			"id": "invader22", 
+			"translation": [ 1.000000,  0.000000, -6.000000], 
+			"parts": [
+				{
+					"meshpartid": "mpart4", 
+					"materialid": "sphere2_auv1", 
+					"uvMapping": [[  0]]
+				}
+			]
+		}, 
+		{
+			"id": "invader23", 
+			"translation": [ 3.000000,  0.000000, -6.000000], 
+			"parts": [
+				{
+					"meshpartid": "mpart4", 
+					"materialid": "sphere2_auv1", 
+					"uvMapping": [[  0]]
+				}
+			]
+		}, 
+		{
+			"id": "invader24", 
+			"translation": [ 5.000000,  0.000000, -6.000000], 
+			"parts": [
+				{
+					"meshpartid": "mpart4", 
+					"materialid": "sphere2_auv1", 
+					"uvMapping": [[  0]]
+				}
+			]
+		}, 
+		{
+			"id": "invader25", 
+			"translation": [-5.000000,  0.000000, -8.000000], 
+			"parts": [
+				{
+					"meshpartid": "mpart4", 
+					"materialid": "sphere2_auv1", 
+					"uvMapping": [[  0]]
+				}
+			]
+		}, 
+		{
+			"id": "invader26", 
+			"translation": [-3.000000,  0.000000, -8.000000], 
+			"parts": [
+				{
+					"meshpartid": "mpart4", 
+					"materialid": "sphere2_auv1", 
+					"uvMapping": [[  0]]
+				}
+			]
+		}, 
+		{
+			"id": "invader27", 
+			"translation": [-1.000000,  0.000000, -8.000000], 
+			"parts": [
+				{
+					"meshpartid": "mpart4", 
+					"materialid": "sphere2_auv1", 
+					"uvMapping": [[  0]]
+				}
+			]
+		}, 
+		{
+			"id": "invader28", 
+			"translation": [ 1.000000,  0.000000, -8.000000], 
+			"parts": [
+				{
+					"meshpartid": "mpart4", 
+					"materialid": "sphere2_auv1", 
+					"uvMapping": [[  0]]
+				}
+			]
+		}, 
+		{
+			"id": "invader29", 
+			"translation": [ 3.000000,  0.000000, -8.000000], 
+			"parts": [
+				{
+					"meshpartid": "mpart4", 
+					"materialid": "sphere2_auv1", 
+					"uvMapping": [[  0]]
+				}
+			]
+		}, 
+		{
+			"id": "invader30", 
+			"translation": [ 5.000000,  0.000000, -8.000000], 
+			"parts": [
+				{
+					"meshpartid": "mpart4", 
+					"materialid": "sphere2_auv1", 
+					"uvMapping": [[  0]]
+				}
+			]
+		}
+	], 
+	"animations": []
+}
\ No newline at end of file
diff --git a/tests/gdx-tests-android/assets/data/g3d/space.jpg b/tests/gdx-tests-android/assets/data/g3d/space.jpg
new file mode 100644
index 0000000..009f20d
Binary files /dev/null and b/tests/gdx-tests-android/assets/data/g3d/space.jpg differ
diff --git a/tests/gdx-tests-iosrobovm/.classpath b/tests/gdx-tests-iosrobovm/.classpath
new file mode 100644
index 0000000..679804b
--- /dev/null
+++ b/tests/gdx-tests-iosrobovm/.classpath
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<classpath>
+	<classpathentry kind="src" path="src"/>
+	<classpathentry kind="con" path="org.robovm.eclipse.ROBOVM_CONTAINER"/>
+	<classpathentry kind="con" path="org.robovm.eclipse.ROBOVM_COCOA_TOUCH_CONTAINER"/>
+	<classpathentry combineaccessrules="false" kind="src" path="/gdx"/>
+	<classpathentry combineaccessrules="false" kind="src" path="/gdx-backend-robovm"/>
+	<classpathentry kind="output" path="bin"/>
+</classpath>
diff --git a/tests/gdx-tests-iosrobovm/.project b/tests/gdx-tests-iosrobovm/.project
new file mode 100644
index 0000000..322d4b9
--- /dev/null
+++ b/tests/gdx-tests-iosrobovm/.project
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<projectDescription>
+	<name>gdx-tests-iosrobovm</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.robovm.eclipse.RoboVMClassBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+		<nature>org.robovm.eclipse.RoboVMNature</nature>
+	</natures>
+</projectDescription>
diff --git a/tests/gdx-tests-iosrobovm/.settings/org.eclipse.jdt.core.prefs b/tests/gdx-tests-iosrobovm/.settings/org.eclipse.jdt.core.prefs
new file mode 100644
index 0000000..8000cd6
--- /dev/null
+++ b/tests/gdx-tests-iosrobovm/.settings/org.eclipse.jdt.core.prefs
@@ -0,0 +1,11 @@
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.6
+org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
+org.eclipse.jdt.core.compiler.compliance=1.6
+org.eclipse.jdt.core.compiler.debug.lineNumber=generate
+org.eclipse.jdt.core.compiler.debug.localVariable=generate
+org.eclipse.jdt.core.compiler.debug.sourceFile=generate
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.source=1.6
diff --git a/tests/gdx-tests-iosrobovm/.settings/org.robovm.eclipse.prefs b/tests/gdx-tests-iosrobovm/.settings/org.robovm.eclipse.prefs
new file mode 100644
index 0000000..1677423
--- /dev/null
+++ b/tests/gdx-tests-iosrobovm/.settings/org.robovm.eclipse.prefs
@@ -0,0 +1,3 @@
+eclipse.preferences.version=1
+org.robovm.eclipse.prefs.incrementalBuildArch=x86
+org.robovm.eclipse.prefs.incrementalBuildOs=ios
diff --git a/tests/gdx-tests-iosrobovm/Info.plist.xml b/tests/gdx-tests-iosrobovm/Info.plist.xml
new file mode 100644
index 0000000..fbe3b88
--- /dev/null
+++ b/tests/gdx-tests-iosrobovm/Info.plist.xml
@@ -0,0 +1,50 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+    <key>CFBundleDevelopmentRegion</key>
+    <string>en</string>
+    <key>CFBundleDisplayName</key>
+    <string>${app.name}</string>
+    <key>CFBundleExecutable</key>
+    <string>${app.executable}</string>
+    <key>CFBundleIdentifier</key>
+    <string>${app.id}</string>
+    <key>CFBundleInfoDictionaryVersion</key>
+    <string>6.0</string>
+    <key>CFBundleName</key>
+    <string>${app.name}</string>
+    <key>CFBundlePackageType</key>
+    <string>APPL</string>
+    <key>CFBundleShortVersionString</key>
+    <string>${app.version}</string>
+    <key>CFBundleSignature</key>
+    <string>????</string>
+    <key>CFBundleVersion</key>
+    <string>${app.build}</string>
+    <key>LSRequiresIPhoneOS</key>
+    <true/>
+    <key>UIDeviceFamily</key>
+    <array>
+        <integer>1</integer>
+        <integer>2</integer>
+    </array>
+    <key>UIRequiredDeviceCapabilities</key>
+    <array>
+        <string>armv7</string>
+    </array>
+    <key>UISupportedInterfaceOrientations</key>
+    <array>
+        <string>UIInterfaceOrientationPortrait</string>
+        <string>UIInterfaceOrientationLandscapeLeft</string>
+        <string>UIInterfaceOrientationLandscapeRight</string>
+    </array>
+    <key>UISupportedInterfaceOrientations~ipad</key>
+    <array>
+        <string>UIInterfaceOrientationPortrait</string>
+        <string>UIInterfaceOrientationPortraitUpsideDown</string>
+        <string>UIInterfaceOrientationLandscapeLeft</string>
+        <string>UIInterfaceOrientationLandscapeRight</string>
+    </array>
+</dict>
+</plist>
diff --git a/tests/gdx-tests-iosrobovm/robovm.properties b/tests/gdx-tests-iosrobovm/robovm.properties
new file mode 100644
index 0000000..91d7353
--- /dev/null
+++ b/tests/gdx-tests-iosrobovm/robovm.properties
@@ -0,0 +1,8 @@
+#
+#Fri May 31 12:35:40 CEST 2013
+app.version=1.0
+app.id=com.badlogic.gdx.tests.IOSRobovmTests
+app.mainclass=com.badlogic.gdx.tests.IOSRobovmTests
+app.executable=IOSRobovmTests
+app.build=1
+app.name=IOSRobovmTests
diff --git a/tests/gdx-tests-iosrobovm/robovm.xml b/tests/gdx-tests-iosrobovm/robovm.xml
new file mode 100644
index 0000000..d67e3bb
--- /dev/null
+++ b/tests/gdx-tests-iosrobovm/robovm.xml
@@ -0,0 +1,20 @@
+<config>
+  <executableName>${app.executable}</executableName>
+  <mainClass>${app.mainclass}</mainClass>
+  <os>ios</os>
+  <arch>thumbv7</arch>
+  <target>ios</target>
+  <iosInfoPList>Info.plist.xml</iosInfoPList>
+   <resources>
+    <resource>../gdx-tests-android/assets/data</resource>
+  </resources>
+  <libs>
+    <lib>../../gdx/libs/ios32/libgdx.a</lib>
+  </libs>
+  <frameworks>
+    <framework>UIKit</framework>
+    <framework>OpenGLES</framework>
+    <framework>QuartzCore</framework>
+    <framework>CoreGraphics</framework>
+  </frameworks>
+</config>
\ No newline at end of file
diff --git a/tests/gdx-tests-iosrobovm/src/com/badlogic/gdx/tests/IOSRobovmTests.java b/tests/gdx-tests-iosrobovm/src/com/badlogic/gdx/tests/IOSRobovmTests.java
new file mode 100644
index 0000000..ca9fe0b
--- /dev/null
+++ b/tests/gdx-tests-iosrobovm/src/com/badlogic/gdx/tests/IOSRobovmTests.java
@@ -0,0 +1,49 @@
+package com.badlogic.gdx.tests;
+
+import org.robovm.cocoatouch.foundation.NSAutoreleasePool;
+import org.robovm.cocoatouch.uikit.UIApplication;
+
+import com.badlogic.gdx.ApplicationAdapter;
+import com.badlogic.gdx.Gdx;
+import com.badlogic.gdx.backends.iosrobovm.IOSApplication;
+import com.badlogic.gdx.backends.iosrobovm.IOSApplicationConfiguration;
+import com.badlogic.gdx.graphics.GL10;
+import com.badlogic.gdx.graphics.Texture;
+import com.badlogic.gdx.graphics.g2d.SpriteBatch;
+
+public class IOSRobovmTests extends IOSApplication.Delegate {
+	@Override
+	protected IOSApplication createApplication() {
+		IOSApplicationConfiguration config = new IOSApplicationConfiguration();
+		return new IOSApplication(new ApplicationAdapter() {
+			SpriteBatch batch;
+			Texture texture;
+			
+			@Override
+			public void create() {
+				batch = new SpriteBatch();
+				System.out.println("create: " + batch);
+				texture = new Texture(Gdx.files.internal("data/badlogic.jpg"));
+			}
+
+			@Override
+			public void render() {
+				Gdx.gl.glClearColor(1, 1, 1, 1);
+				Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
+//				System.out.println("render: " + Thread.currentThread().getName());
+				if(batch != null) {
+					batch.begin();
+					batch.draw(texture, 0, 0);
+					batch.end();
+				}
+			}
+			
+		}, config);
+	}
+
+	public static void main(String[] argv) {
+		NSAutoreleasePool pool = new NSAutoreleasePool();
+		UIApplication.main(argv, null, IOSRobovmTests.class);
+		pool.drain();
+	}
+}
diff --git a/tests/gdx-tests-lwjgl/src/com/badlogic/gdx/tests/lwjgl/LwjglDebugStarter.java b/tests/gdx-tests-lwjgl/src/com/badlogic/gdx/tests/lwjgl/LwjglDebugStarter.java
index 0a8efe6..40b2483 100644
--- a/tests/gdx-tests-lwjgl/src/com/badlogic/gdx/tests/lwjgl/LwjglDebugStarter.java
+++ b/tests/gdx-tests-lwjgl/src/com/badlogic/gdx/tests/lwjgl/LwjglDebugStarter.java
@@ -18,6 +18,12 @@ package com.badlogic.gdx.tests.lwjgl;
 
 import com.badlogic.gdx.backends.lwjgl.LwjglApplication;
 import com.badlogic.gdx.backends.lwjgl.LwjglApplicationConfiguration;
+import com.badlogic.gdx.graphics.OrthographicCamera;
+import com.badlogic.gdx.math.Vector2;
+import com.badlogic.gdx.scenes.scene2d.Stage;
+import com.badlogic.gdx.tests.g3d.Basic3DSceneTest;
+import com.badlogic.gdx.tests.g3d.Basic3DTest;
+import com.badlogic.gdx.tests.g3d.ModelLoaderTest;
 import com.badlogic.gdx.tests.g3d.ModelTest;
 import com.badlogic.gdx.tests.utils.GdxTest;
 
@@ -30,9 +36,11 @@ public class LwjglDebugStarter {
 //		new SharedLibraryLoader("../../extensions/gdx-controllers/gdx-controllers-desktop/libs/gdx-controllers-desktop-natives.jar").load("gdx-controllers-desktop");
 //		new SharedLibraryLoader("../../gdx/libs/gdx-natives.jar").load("gdx");
 
-		GdxTest test = new ModelTest();
+		GdxTest test = new Basic3DTest();
 		LwjglApplicationConfiguration config = new LwjglApplicationConfiguration();
 		config.useGL20 = test.needsGL20();
+		config.width = 480;
+		config.height = 320;
 		new LwjglApplication(test, config);
 	}
 }
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/g3d/BaseG3dHudTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/g3d/BaseG3dHudTest.java
index 403bd7c..73d6f1a 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/g3d/BaseG3dHudTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/g3d/BaseG3dHudTest.java
@@ -24,7 +24,7 @@ public abstract class BaseG3dHudTest extends BaseG3dTest {
 
 	protected  String models[] = new String[] {
 		"car.obj", "cube.obj", "scene.obj", "scene2.obj", "sphere.obj", "wheel.obj", 
-		"g3d/head.g3db", "g3d/knight.g3dj", "g3d/knight.g3db", "g3d/ship.obj", "g3d/teapot.g3db"
+		"g3d/invaders.g3dj", "g3d/head.g3db", "g3d/knight.g3dj", "g3d/knight.g3db", "g3d/ship.obj", "g3d/teapot.g3db"
 	};
 
 	@Override
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/g3d/Basic3DSceneTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/g3d/Basic3DSceneTest.java
new file mode 100644
index 0000000..29a5bd8
--- /dev/null
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/g3d/Basic3DSceneTest.java
@@ -0,0 +1,114 @@
+package com.badlogic.gdx.tests.g3d;
+
+import com.badlogic.gdx.ApplicationListener;
+import com.badlogic.gdx.Gdx;
+import com.badlogic.gdx.assets.AssetManager;
+import com.badlogic.gdx.graphics.GL10;
+import com.badlogic.gdx.graphics.PerspectiveCamera;
+import com.badlogic.gdx.graphics.g3d.Model;
+import com.badlogic.gdx.graphics.g3d.ModelBatch;
+import com.badlogic.gdx.graphics.g3d.ModelInstance;
+import com.badlogic.gdx.graphics.g3d.lights.DirectionalLight;
+import com.badlogic.gdx.graphics.g3d.lights.Lights;
+import com.badlogic.gdx.graphics.g3d.materials.IntAttribute;
+import com.badlogic.gdx.graphics.g3d.model.Node;
+import com.badlogic.gdx.graphics.g3d.utils.CameraInputController;
+import com.badlogic.gdx.math.Vector3;
+import com.badlogic.gdx.tests.utils.GdxTest;
+import com.badlogic.gdx.utils.Array;
+
+public class Basic3DSceneTest extends GdxTest implements ApplicationListener {
+	public PerspectiveCamera cam;
+	public CameraInputController camController;
+	public ModelBatch modelBatch;
+	public AssetManager assets;
+	public Array<ModelInstance> instances = new Array<ModelInstance>();
+	public Lights lights;
+	public boolean loading;
+	
+	public Array<ModelInstance> blocks = new Array<ModelInstance>();
+	public Array<ModelInstance> invaders = new Array<ModelInstance>();
+	public ModelInstance ship;
+	public ModelInstance space;
+	
+	@Override
+	public void create () {
+		modelBatch = new ModelBatch();
+		lights = new Lights();
+		lights.ambientLight.set(0.4f, 0.4f, 0.4f, 1f);
+		lights.add(new DirectionalLight().set(0.8f, 0.8f, 0.8f, -1f, -0.8f, -0.2f));
+		
+		cam = new PerspectiveCamera(67, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
+		cam.position.set(0f, 7f, 10f);
+		cam.lookAt(0,0,0);
+		cam.near = 0.1f;
+		cam.far = 300f;
+		cam.update();
+
+		camController = new CameraInputController(cam);
+		Gdx.input.setInputProcessor(camController);
+		
+		assets = new AssetManager();
+		assets.load("data/g3d/invaders.g3dj", Model.class);
+		loading = true;
+	}
+
+	private void doneLoading() {
+		Model model = assets.get("data/g3d/invaders.g3dj", Model.class);
+		for (int i = 0; i < model.nodes.size; i++) {
+			String id = model.nodes.get(i).id;
+			ModelInstance instance = new ModelInstance(model, id);
+			Node node = instance.getNode(id);
+			
+			instance.transform.set(node.globalTransform);
+			node.translation.set(0,0,0);
+			node.scale.set(1,1,1);
+			node.rotation.idt();
+			instance.calculateTransforms();
+			
+			if (id.equals("space")) {
+				space = instance;
+				continue;
+			}
+			
+			instances.add(instance);
+			
+			if (id.equals("ship"))
+				ship = instance;
+			else if (id.startsWith("block"))
+				blocks.add(instance);
+			else if (id.startsWith("invader"))
+				invaders.add(instance);
+		}
+
+		loading = false;
+	}
+	
+	@Override
+	public void render () {
+		if (loading && assets.update())
+			doneLoading();
+		camController.update();
+		
+		Gdx.gl.glViewport(0, 0, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
+		Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT | GL10.GL_DEPTH_BUFFER_BIT);
+
+		modelBatch.begin(cam);
+		for (ModelInstance instance : instances)
+			modelBatch.render(instance, lights);
+		if (space != null)
+			modelBatch.render(space);
+		modelBatch.end();
+	}
+	
+	@Override
+	public void dispose () {
+		modelBatch.dispose();
+		instances.clear();
+		assets.dispose();
+	}
+	
+	public boolean needsGL20 () {
+		return true;
+	}
+}
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/g3d/Basic3DTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/g3d/Basic3DTest.java
index 474de74..ffbb7a9 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/g3d/Basic3DTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/g3d/Basic3DTest.java
@@ -12,12 +12,16 @@ import com.badlogic.gdx.graphics.g3d.ModelBatch;
 import com.badlogic.gdx.graphics.g3d.ModelInstance;
 import com.badlogic.gdx.graphics.g3d.lights.DirectionalLight;
 import com.badlogic.gdx.graphics.g3d.lights.Lights;
+import com.badlogic.gdx.graphics.g3d.loader.G3dModelLoader;
 import com.badlogic.gdx.graphics.g3d.materials.ColorAttribute;
 import com.badlogic.gdx.graphics.g3d.materials.Material;
+import com.badlogic.gdx.graphics.g3d.shaders.CompositeShader;
 import com.badlogic.gdx.graphics.g3d.utils.CameraInputController;
+import com.badlogic.gdx.graphics.g3d.utils.CompositeShaderProvider;
 import com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder;
 import com.badlogic.gdx.graphics.g3d.utils.ModelBuilder;
 import com.badlogic.gdx.tests.utils.GdxTest;
+import com.badlogic.gdx.utils.UBJsonReader;
 
 public class Basic3DTest extends GdxTest implements ApplicationListener {
 	public PerspectiveCamera cam;
@@ -26,10 +30,12 @@ public class Basic3DTest extends GdxTest implements ApplicationListener {
 	public Model model;
 	public ModelInstance instance;
 	public Lights lights;
+	public CompositeShader shader;
 	
 	@Override
 	public void create () {
-		modelBatch = new ModelBatch();
+		modelBatch = new ModelBatch(new CompositeShaderProvider());
+//		modelBatch = new ModelBatch();
 		lights = new Lights();
 		lights.ambientLight.set(0.4f, 0.4f, 0.4f, 1f);
 		lights.add(new DirectionalLight().set(0.8f, 0.8f, 0.8f, -1f, -0.8f, -0.2f));
@@ -41,8 +47,11 @@ public class Basic3DTest extends GdxTest implements ApplicationListener {
 		cam.far = 300f;
 		cam.update();
 
-		ModelBuilder modelBuilder = new ModelBuilder();
-		model = modelBuilder.createBox(5f, 5f, 5f, new Material(ColorAttribute.createDiffuse(Color.GREEN)), Usage.Position | Usage.Normal);
+//		ModelBuilder modelBuilder = new ModelBuilder();
+//		model = modelBuilder.createBox(5f, 5f, 5f, new Material(ColorAttribute.createDiffuse(Color.GREEN)), Usage.Position | Usage.Normal);
+//		instance = new ModelInstance(model);
+		
+		model = new G3dModelLoader(new UBJsonReader()).loadModel(Gdx.files.internal("data/g3d/knight.g3db"));
 		instance = new ModelInstance(model);
 
 		Gdx.input.setInputProcessor(new InputMultiplexer(this, inputController = new CameraInputController(cam)));
@@ -56,7 +65,7 @@ public class Basic3DTest extends GdxTest implements ApplicationListener {
 		Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT | GL10.GL_DEPTH_BUFFER_BIT);
 
 		modelBatch.begin(cam);
-		modelBatch.render(instance, lights);
+		modelBatch.render(instance, lights, shader);
 		modelBatch.end();
 	}
 	
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/g3d/FogTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/g3d/FogTest.java
deleted file mode 100644
index 13bdee4..0000000
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/g3d/FogTest.java
+++ /dev/null
@@ -1,98 +0,0 @@
-package com.badlogic.gdx.tests.g3d;
-
-import com.badlogic.gdx.ApplicationListener;
-import com.badlogic.gdx.Gdx;
-import com.badlogic.gdx.InputMultiplexer;
-import com.badlogic.gdx.graphics.Color;
-import com.badlogic.gdx.graphics.GL10;
-import com.badlogic.gdx.graphics.PerspectiveCamera;
-import com.badlogic.gdx.graphics.VertexAttributes.Usage;
-import com.badlogic.gdx.graphics.g3d.Model;
-import com.badlogic.gdx.graphics.g3d.ModelBatch;
-import com.badlogic.gdx.graphics.g3d.ModelInstance;
-import com.badlogic.gdx.graphics.g3d.lights.DirectionalLight;
-import com.badlogic.gdx.graphics.g3d.lights.Lights;
-import com.badlogic.gdx.graphics.g3d.materials.ColorAttribute;
-import com.badlogic.gdx.graphics.g3d.materials.Material;
-import com.badlogic.gdx.graphics.g3d.utils.CameraInputController;
-import com.badlogic.gdx.graphics.g3d.utils.ModelBuilder;
-import com.badlogic.gdx.tests.utils.GdxTest;
-
-public class FogTest extends GdxTest implements ApplicationListener {
-	public PerspectiveCamera cam;
-	public CameraInputController inputController;
-	public ModelBatch modelBatch;
-	public Model model;
-	public ModelInstance instance;
-	public Lights lights;
-	
-	@Override
-	public void create () {
-		modelBatch = new ModelBatch();
-		lights = new Lights();
-		lights.ambientLight.set(0.4f, 0.4f, 0.4f, 1f);
-        lights.fog = new Color(0.13f, 0.13f, 0.13f, 1f);
-		lights.add(new DirectionalLight().set(0.8f, 0.8f, 0.8f, -1f, -0.8f, -0.2f));
-		
-		cam = new PerspectiveCamera(67, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
-		cam.position.set(30f, 10f, 30f);
-		cam.lookAt(0,0,0);
-		cam.near = 0.1f;
-		cam.far = 45f;
-		cam.update();
-
-		ModelBuilder modelBuilder = new ModelBuilder();
-		model = modelBuilder.createBox(5f, 5f, 5f, new Material(ColorAttribute.createDiffuse(Color.GREEN)), Usage.Position | Usage.Normal);
-		instance = new ModelInstance(model);
-
-		Gdx.input.setInputProcessor(new InputMultiplexer(this, inputController = new CameraInputController(cam)));
-	}
-
-	@Override
-	public void render () {
-
-        animate();
-
-		inputController.update();
-		
-		Gdx.gl.glViewport(0, 0, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
-		Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT | GL10.GL_DEPTH_BUFFER_BIT);
-
-        Gdx.gl.glClearColor(0.13f, 0.13f, 0.13f, 1);
-
-		modelBatch.begin(cam);
-		modelBatch.render(instance, lights);
-		modelBatch.end();
-	}
-
-    float delta = 0f, dir = 1;
-    private void animate() {
-
-        delta = Gdx.graphics.getDeltaTime();
-
-        instance.transform.val[14] += delta*4*dir;
-
-        if(Math.abs(instance.transform.val[14]) > 5) {
-            dir *= -1;
-        }
-    }
-	
-	@Override
-	public void dispose () {
-		modelBatch.dispose();
-		model.dispose();
-	}
-	
-	public boolean needsGL20 () {
-		return true;
-	}
-
-	public void resume () {
-	}
-
-	public void resize (int width, int height) {
-	}
-
-	public void pause () {
-	}
-}
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/g3d/ModelLoaderTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/g3d/ModelLoaderTest.java
new file mode 100644
index 0000000..4e75091
--- /dev/null
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/g3d/ModelLoaderTest.java
@@ -0,0 +1,82 @@
+package com.badlogic.gdx.tests.g3d;
+
+import com.badlogic.gdx.Application;
+import com.badlogic.gdx.Gdx;
+import com.badlogic.gdx.assets.AssetManager;
+import com.badlogic.gdx.graphics.GL20;
+import com.badlogic.gdx.graphics.PerspectiveCamera;
+import com.badlogic.gdx.graphics.Texture;
+import com.badlogic.gdx.graphics.g2d.SpriteBatch;
+import com.badlogic.gdx.graphics.g3d.Model;
+import com.badlogic.gdx.graphics.g3d.ModelBatch;
+import com.badlogic.gdx.graphics.g3d.ModelInstance;
+import com.badlogic.gdx.tests.utils.GdxTest;
+import com.badlogic.gdx.utils.Logger;
+
+public class ModelLoaderTest extends GdxTest {
+	AssetManager assets;
+	PerspectiveCamera camera;
+	ModelInstance instance;
+	ModelBatch modelBatch;
+	SpriteBatch spriteBatch;
+
+	@Override
+	public void create () {
+		camera = new PerspectiveCamera(67, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
+		camera.position.set(0, 0, 5);
+		camera.near = 1;
+		camera.far = 100;
+		camera.update();
+		assets = new AssetManager();
+		assets.load("data/g3d/cube.g3dj", Model.class);
+		spriteBatch = new SpriteBatch();
+		modelBatch = new ModelBatch();
+//		assets.getLogger().setLevel(Logger.DEBUG);
+	}
+
+	@Override
+	public boolean needsGL20 () {
+		return true;
+	}
+
+	private void doneLoading() {
+		instance = new ModelInstance(assets.get("data/g3d/cube.g3dj", Model.class));
+	}
+	
+	float counter;
+	@Override
+	public void render () {
+		if ((instance != null) && ((counter += Gdx.graphics.getDeltaTime()) >= 1f)) {
+			counter = 0f;
+			instance = null;
+			assets.unload("data/g3d/cube.g3dj");
+			assets.load("data/g3d/cube.g3dj", Model.class);
+			assets.finishLoading();
+		}
+		
+		Gdx.gl.glClearColor(0.2f, 0.2f, 0.2f, 1);
+		Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT | GL20.GL_DEPTH_BUFFER_BIT);
+		Gdx.gl.glEnable(GL20.GL_DEPTH_TEST);
+		
+		if(assets.update()) {
+			doneLoading();
+		}
+		
+		if(instance != null) {
+			modelBatch.begin(camera);
+			modelBatch.render(instance);
+			modelBatch.end();
+			spriteBatch.begin();
+			spriteBatch.draw(assets.get("data/g3d/checkboard.png", Texture.class), 0, 0, 100, 100);
+			spriteBatch.draw(assets.get("data/g3d/Knight.png", Texture.class), 100, 0, 100, 100);
+			spriteBatch.end();
+		}
+	}
+
+	@Override
+	public void dispose () {
+		assets.dispose();
+		modelBatch.dispose();
+		spriteBatch.dispose();
+	}
+}
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/utils/GdxTests.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/utils/GdxTests.java
index 8cde588..6e125ab 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/utils/GdxTests.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/utils/GdxTests.java
@@ -28,20 +28,25 @@
 
 package com.badlogic.gdx.tests.utils;
 
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Collections;
+import java.util.List;
+
 import com.badlogic.gdx.tests.*;
 import com.badlogic.gdx.tests.bench.TiledMapBench;
 import com.badlogic.gdx.tests.examples.MoveSpriteExample;
-import com.badlogic.gdx.tests.g3d.*;
+import com.badlogic.gdx.tests.g3d.Basic3DTest;
+import com.badlogic.gdx.tests.g3d.MaterialTest;
+import com.badlogic.gdx.tests.g3d.ModelTest;
+import com.badlogic.gdx.tests.g3d.Basic3DSceneTest;
+import com.badlogic.gdx.tests.g3d.ShaderTest;
+import com.badlogic.gdx.tests.g3d.SkeletonTest;
 import com.badlogic.gdx.tests.gles2.HelloTriangle;
 import com.badlogic.gdx.tests.gles2.SimpleVertexShader;
 import com.badlogic.gdx.tests.net.NetAPITest;
 import com.badlogic.gdx.tests.superkoalio.SuperKoalio;
 
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.Collections;
-import java.util.List;
-
 /** List of GdxTest classes. To be used by the test launchers. If you write your own test, add it in here!
  * 
  * @author badlogicgames@gmail.com */
@@ -78,8 +83,8 @@ public class GdxTests {
 		TextButtonTest.class, TextButtonTestGL2.class, TextureBindTest.class, SortedSpriteTest.class,
 		ExternalMusicTest.class, SoftKeyboardTest.class, DirtyRenderingTest.class, YDownTest.class,
 		ScreenCaptureTest.class, BitmapFontTest.class, LabelScaleTest.class, GamepadTest.class, NetAPITest.class, TideMapAssetManagerTest.class, TideMapDirectLoaderTest.class, TiledMapAssetManagerTest.class, TiledMapBench.class,
-		RunnablePostTest.class, Vector2dTest.class, SuperKoalio.class, NinePatchTest.class,
-		ModelTest.class, Basic3DTest.class, ShaderTest.class, SkeletonTest.class, HexagonalTiledMapTest.class, FogTest.class));
+		RunnablePostTest.class, Vector2dTest.class, SuperKoalio.class, NinePatchTest.class, Basic3DSceneTest.class,
+		ModelTest.class, Basic3DTest.class, ShaderTest.class, SkeletonTest.class, HexagonalTiledMapTest.class));
 	
 	public static List<String> getNames () {
 		List<String> names = new ArrayList<String>(tests.size());
