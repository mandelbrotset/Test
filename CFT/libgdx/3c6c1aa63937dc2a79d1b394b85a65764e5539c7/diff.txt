diff --git a/CHANGES b/CHANGES
index 96bb025..f514501 100644
--- a/CHANGES
+++ b/CHANGES
@@ -1,7 +1,17 @@
 [1.2.1]
+- Files#getLocalStoragePath now returns the actual path instead of the empty string synonym on desktop (LWJGL and JGLFW).
+- Fixed and improved xorshift128+ PRNG implementation.
+- Added support for Tiled's animated tiles, and varying frame duration tile animations.
+- Fixed an issue with time granularity in MessageDispatcher.
+- Updated to Android API level 19 and build tools 19.1.0 which will require the latest Eclipse ADT 23.02, see http://stackoverflow.com/questions/24437564/update-eclipse-with-android-development-tools-23 for how things are broken this time...
+- Updated to RoboVM 0.0.14 and RoboVM Gradle plugin version 0.0.10
+- API Addition: added FreeTypeFontLoader so you can transparently load BitmapFonts generated through gdx-freetype via AssetManager, see https://github.com/libgdx/libgdx/blob/master/tests/gdx-tests/src/com/badlogic/gdx/tests/FreeTypeFontLoaderTest.java
+- Preferences put methods now return "this" for chaining
+- Fixed issue 2048 where MessageDispatcher was dispatching delayed messages immediately.
 - API Addition: 3d particle system and accompanying editor, contributed by lordjone, see https://github.com/libgdx/libgdx/pull/2005
 - API Addition: extended shape classes like Circle, Ellipse etc. with hashcode/equals and other helper methods, see https://github.com/libgdx/libgdx/pull/2018
 - minor API change (will not increase minor revision number): fixed a bug in handling of atlasPrefixes, https://github.com/libgdx/libgdx/pull/2023
+- Bullet: btManifoldPoint member getters/setters changed from btVector3 to Vector3, also it is no longer pooled, instead static instances are used for callback methods
 
 
 [1.2.0]
diff --git a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidApplication.java b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidApplication.java
index 8283c14..729ed1e 100644
--- a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidApplication.java
+++ b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidApplication.java
@@ -211,7 +211,8 @@ public class AndroidApplication extends Activity implements AndroidApplicationBa
 
 		try {
 			Method m = View.class.getMethod("setSystemUiVisibility", int.class);
-			m.invoke(rootView, 0x0);
+			if (getVersion() <= 13)
+				m.invoke(rootView, 0x0);
 			m.invoke(rootView, 0x1);
 		} catch (Exception e) {
 			log("AndroidApplication", "Can't hide status bar", e);
diff --git a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidGL30.java b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidGL30.java
index 2726243..4d27105 100644
--- a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidGL30.java
+++ b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidGL30.java
@@ -1,3 +1,18 @@
+/*******************************************************************************
+* Copyright 2014 See AUTHORS file.
+*
+* Licensed under the Apache License, Version 2.0 (the "License");
+* you may not use this file except in compliance with the License.
+* You may obtain a copy of the License at
+*
+* http://www.apache.org/licenses/LICENSE-2.0
+*
+* Unless required by applicable law or agreed to in writing, software
+* distributed under the License is distributed on an "AS IS" BASIS,
+* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+* See the License for the specific language governing permissions and
+* limitations under the License.
+******************************************************************************/
 
 package com.badlogic.gdx.backends.android;
 
diff --git a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidPreferences.java b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidPreferences.java
index 3dc9065..2c9cd7a 100644
--- a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidPreferences.java
+++ b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidPreferences.java
@@ -33,37 +33,42 @@ public class AndroidPreferences implements Preferences {
 	}
 
 	@Override
-	public void putBoolean (String key, boolean val) {
+	public Preferences putBoolean (String key, boolean val) {
 		edit();
 		editor.putBoolean(key, val);
+		return this;
 	}
 
 	@Override
-	public void putInteger (String key, int val) {
+	public Preferences putInteger (String key, int val) {
 		edit();
 		editor.putInt(key, val);
+		return this;
 	}
 
 	@Override
-	public void putLong (String key, long val) {
+	public Preferences putLong (String key, long val) {
 		edit();
 		editor.putLong(key, val);
+		return this;
 	}
 
 	@Override
-	public void putFloat (String key, float val) {
+	public Preferences putFloat (String key, float val) {
 		edit();
 		editor.putFloat(key, val);
+		return this;
 	}
 
 	@Override
-	public void putString (String key, String val) {
+	public Preferences putString (String key, String val) {
 		edit();
 		editor.putString(key, val);
+		return this;
 	}
 
 	@Override
-	public void put (Map<String, ?> vals) {
+	public Preferences put (Map<String, ?> vals) {
 		edit();
 		for (Entry<String, ?> val : vals.entrySet()) {
 			if (val.getValue() instanceof Boolean) putBoolean(val.getKey(), (Boolean)val.getValue());
@@ -72,6 +77,7 @@ public class AndroidPreferences implements Preferences {
 			if (val.getValue() instanceof String) putString(val.getKey(), (String)val.getValue());
 			if (val.getValue() instanceof Float) putFloat(val.getKey(), (Float)val.getValue());
 		}
+		return this;
 	}
 
 	@Override
diff --git a/backends/gdx-backend-headless/src/com/badlogic/gdx/backends/headless/HeadlessPreferences.java b/backends/gdx-backend-headless/src/com/badlogic/gdx/backends/headless/HeadlessPreferences.java
index 81112e6..552478f 100644
--- a/backends/gdx-backend-headless/src/com/badlogic/gdx/backends/headless/HeadlessPreferences.java
+++ b/backends/gdx-backend-headless/src/com/badlogic/gdx/backends/headless/HeadlessPreferences.java
@@ -57,32 +57,37 @@ public class HeadlessPreferences implements Preferences {
 	}
 
 	@Override
-	public void putBoolean (String key, boolean val) {
+	public Preferences putBoolean (String key, boolean val) {
 		properties.put(key, Boolean.toString(val));
+		return this;
 	}
 
 	@Override
-	public void putInteger (String key, int val) {
+	public Preferences putInteger (String key, int val) {
 		properties.put(key, Integer.toString(val));
+		return this;
 	}
 
 	@Override
-	public void putLong (String key, long val) {
+	public Preferences putLong (String key, long val) {
 		properties.put(key, Long.toString(val));
+		return this;
 	}
 
 	@Override
-	public void putFloat (String key, float val) {
+	public Preferences putFloat (String key, float val) {
 		properties.put(key, Float.toString(val));
+		return this;
 	}
 
 	@Override
-	public void putString (String key, String val) {
+	public Preferences putString (String key, String val) {
 		properties.put(key, val);
+		return this;
 	}
 
 	@Override
-	public void put (Map<String, ?> vals) {
+	public Preferences put (Map<String, ?> vals) {
 		for (Entry<String, ?> val : vals.entrySet()) {
 			if (val.getValue() instanceof Boolean) putBoolean(val.getKey(), (Boolean)val.getValue());
 			if (val.getValue() instanceof Integer) putInteger(val.getKey(), (Integer)val.getValue());
@@ -90,6 +95,7 @@ public class HeadlessPreferences implements Preferences {
 			if (val.getValue() instanceof String) putString(val.getKey(), (String)val.getValue());
 			if (val.getValue() instanceof Float) putFloat(val.getKey(), (Float)val.getValue());
 		}
+		return this;
 	}
 
 	@Override
diff --git a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwFileHandle.java b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwFileHandle.java
index 0ae4c53..da84477 100644
--- a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwFileHandle.java
+++ b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwFileHandle.java
@@ -56,6 +56,7 @@ public final class JglfwFileHandle extends FileHandle {
 
 	public File file () {
 		if (type == FileType.External) return new File(JglfwFiles.externalPath, file.getPath());
+		if (type == FileType.Local) return new File(JglfwFiles.localPath, file.getPath());
 		return file;
 	}
 }
diff --git a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwFiles.java b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwFiles.java
index 4fd59cc..d1fc4e3 100644
--- a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwFiles.java
+++ b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwFiles.java
@@ -16,14 +16,17 @@
 
 package com.badlogic.gdx.backends.jglfw;
 
+import java.io.File;
+
 import com.badlogic.gdx.Files;
 import com.badlogic.gdx.files.FileHandle;
 
 /** @author mzechner
  * @author Nathan Sweet */
 public final class JglfwFiles implements Files {
-	static public final String externalPath = System.getProperty("user.home") + "/";
-
+	static public final String externalPath = System.getProperty("user.home") + File.separator;
+	static public final String localPath = new File("").getAbsolutePath() + File.separator;
+	
 	public FileHandle getFileHandle (String fileName, FileType type) {
 		return new JglfwFileHandle(fileName, type);
 	}
@@ -57,7 +60,7 @@ public final class JglfwFiles implements Files {
 	}
 
 	public String getLocalStoragePath () {
-		return "";
+		return localPath;
 	}
 
 	public boolean isLocalStorageAvailable () {
diff --git a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwPreferences.java b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwPreferences.java
index 87468f9..25373be 100644
--- a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwPreferences.java
+++ b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwPreferences.java
@@ -56,27 +56,32 @@ public class JglfwPreferences implements Preferences {
 		}
 	}
 
-	public void putBoolean (String key, boolean val) {
+	public Preferences putBoolean (String key, boolean val) {
 		properties.put(key, Boolean.toString(val));
+		return this;
 	}
 
-	public void putInteger (String key, int val) {
+	public Preferences putInteger (String key, int val) {
 		properties.put(key, Integer.toString(val));
+		return this;
 	}
 
-	public void putLong (String key, long val) {
+	public Preferences putLong (String key, long val) {
 		properties.put(key, Long.toString(val));
+		return this;
 	}
 
-	public void putFloat (String key, float val) {
+	public Preferences putFloat (String key, float val) {
 		properties.put(key, Float.toString(val));
+		return this;
 	}
 
-	public void putString (String key, String val) {
+	public Preferences putString (String key, String val) {
 		properties.put(key, val);
+		return this;
 	}
 
-	public void put (Map<String, ?> vals) {
+	public Preferences put (Map<String, ?> vals) {
 		for (Entry<String, ?> val : vals.entrySet()) {
 			if (val.getValue() instanceof Boolean) putBoolean(val.getKey(), (Boolean)val.getValue());
 			if (val.getValue() instanceof Integer) putInteger(val.getKey(), (Integer)val.getValue());
@@ -84,6 +89,7 @@ public class JglfwPreferences implements Preferences {
 			if (val.getValue() instanceof String) putString(val.getKey(), (String)val.getValue());
 			if (val.getValue() instanceof Float) putFloat(val.getKey(), (Float)val.getValue());
 		}
+		return this;
 	}
 
 	public boolean getBoolean (String key) {
diff --git a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglFileHandle.java b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglFileHandle.java
index 6807f94..874171f 100644
--- a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglFileHandle.java
+++ b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglFileHandle.java
@@ -56,6 +56,7 @@ public final class LwjglFileHandle extends FileHandle {
 
 	public File file () {
 		if (type == FileType.External) return new File(LwjglFiles.externalPath, file.getPath());
+		if (type == FileType.Local) return new File(LwjglFiles.localPath, file.getPath());
 		return file;
 	}
 }
diff --git a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglFiles.java b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglFiles.java
index bc29a1f..b2ad204 100644
--- a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglFiles.java
+++ b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglFiles.java
@@ -16,14 +16,17 @@
 
 package com.badlogic.gdx.backends.lwjgl;
 
+import java.io.File;
+
 import com.badlogic.gdx.Files;
 import com.badlogic.gdx.files.FileHandle;
 
 /** @author mzechner
  * @author Nathan Sweet */
 public final class LwjglFiles implements Files {
-	static public final String externalPath = System.getProperty("user.home") + "/";
-
+	static public final String externalPath = System.getProperty("user.home") + File.separator;
+	static public final String localPath = new File("").getAbsolutePath() + File.separator;
+	
 	@Override
 	public FileHandle getFileHandle (String fileName, FileType type) {
 		return new LwjglFileHandle(fileName, type);
@@ -66,7 +69,7 @@ public final class LwjglFiles implements Files {
 
 	@Override
 	public String getLocalStoragePath () {
-		return "";
+		return localPath;
 	}
 
 	@Override
diff --git a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglPreferences.java b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglPreferences.java
index 52724e4..09a39be 100644
--- a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglPreferences.java
+++ b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglPreferences.java
@@ -57,32 +57,37 @@ public class LwjglPreferences implements Preferences {
 	}
 
 	@Override
-	public void putBoolean (String key, boolean val) {
+	public Preferences putBoolean (String key, boolean val) {
 		properties.put(key, Boolean.toString(val));
+		return this;
 	}
 
 	@Override
-	public void putInteger (String key, int val) {
+	public Preferences putInteger (String key, int val) {
 		properties.put(key, Integer.toString(val));
+		return this;
 	}
 
 	@Override
-	public void putLong (String key, long val) {
+	public Preferences putLong (String key, long val) {
 		properties.put(key, Long.toString(val));
+		return this;
 	}
 
 	@Override
-	public void putFloat (String key, float val) {
+	public Preferences putFloat (String key, float val) {
 		properties.put(key, Float.toString(val));
+		return this;
 	}
 
 	@Override
-	public void putString (String key, String val) {
+	public Preferences putString (String key, String val) {
 		properties.put(key, val);
+		return this;
 	}
 
 	@Override
-	public void put (Map<String, ?> vals) {
+	public Preferences put (Map<String, ?> vals) {
 		for (Entry<String, ?> val : vals.entrySet()) {
 			if (val.getValue() instanceof Boolean) putBoolean(val.getKey(), (Boolean)val.getValue());
 			if (val.getValue() instanceof Integer) putInteger(val.getKey(), (Integer)val.getValue());
@@ -90,6 +95,7 @@ public class LwjglPreferences implements Preferences {
 			if (val.getValue() instanceof String) putString(val.getKey(), (String)val.getValue());
 			if (val.getValue() instanceof Float) putFloat(val.getKey(), (Float)val.getValue());
 		}
+		return this;
 	}
 
 	@Override
diff --git a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/audio/OpenALAudioDevice.java b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/audio/OpenALAudioDevice.java
index 04bbf32..bd50da3 100644
--- a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/audio/OpenALAudioDevice.java
+++ b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/audio/OpenALAudioDevice.java
@@ -58,7 +58,8 @@ public class OpenALAudioDevice implements AudioDevice {
 
 	public void writeSamples (short[] samples, int offset, int numSamples) {
 		if (bytes == null || bytes.length < numSamples * 2) bytes = new byte[numSamples * 2];
-		for (int i = offset, ii = 0; i < numSamples; i++) {
+		int end = Math.min(offset + numSamples, samples.length);
+		for (int i = offset, ii = 0; i < end; i++) {
 			short sample = samples[i];
 			bytes[ii++] = (byte)(sample & 0xFF);
 			bytes[ii++] = (byte)((sample >> 8) & 0xFF);
@@ -68,7 +69,8 @@ public class OpenALAudioDevice implements AudioDevice {
 
 	public void writeSamples (float[] samples, int offset, int numSamples) {
 		if (bytes == null || bytes.length < numSamples * 2) bytes = new byte[numSamples * 2];
-		for (int i = offset, ii = 0; i < numSamples; i++) {
+		int end = Math.min(offset + numSamples, samples.length);
+		for (int i = offset, ii = 0; i < end; i++) {
 			float floatSample = samples[i];
 			floatSample = MathUtils.clamp(floatSample, -1f, 1f);
 			int intSample = (int)(floatSample * 32767);
diff --git a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSMusic.java b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSMusic.java
index 37093ce..d6c20e3 100644
--- a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSMusic.java
+++ b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSMusic.java
@@ -93,7 +93,7 @@ public class IOSMusic implements Music {
 
 	@Override
 	public float getPosition () {
-		return (float)(track.getCurrentTime() * 1000.0);
+		return (float)(track.getCurrentTime());
 	}
 
 	@Override
diff --git a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSPreferences.java b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSPreferences.java
index 1306195..6b8f974 100644
--- a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSPreferences.java
+++ b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSPreferences.java
@@ -40,32 +40,37 @@ public class IOSPreferences implements Preferences {
 	}
 
 	@Override
-	public void putBoolean (String key, boolean val) {
+	public Preferences putBoolean (String key, boolean val) {
 		nsDictionary.put(convertKey(key), NSNumber.valueOf(val));
+		return this;
 	}
 
 	@Override
-	public void putInteger (String key, int val) {
+	public Preferences putInteger (String key, int val) {
 		nsDictionary.put(convertKey(key), NSNumber.valueOf(val));
+		return this;
 	}
 
 	@Override
-	public void putLong (String key, long val) {
+	public Preferences putLong (String key, long val) {
 		nsDictionary.put(convertKey(key), NSNumber.valueOf(val));
+		return this;
 	}
 
 	@Override
-	public void putFloat (String key, float val) {
+	public Preferences putFloat (String key, float val) {
 		nsDictionary.put(convertKey(key), NSNumber.valueOf(val));
+		return this;
 	}
 
 	@Override
-	public void putString (String key, String val) {
+	public Preferences putString (String key, String val) {
 		nsDictionary.put(convertKey(key), new NSString(val));
+		return this;
 	}
 
 	@Override
-	public void put (Map<String, ?> vals) {
+	public Preferences put (Map<String, ?> vals) {
 		Set<String> keySet = vals.keySet();
 		for (String key : keySet) {
 			Object value = vals.get(key);
@@ -81,6 +86,7 @@ public class IOSPreferences implements Preferences {
 				putFloat(key, (Float)value);
 			}
 		}
+		return this;
 	}
 
 	@Override
diff --git a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtPreferences.java b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtPreferences.java
index d1146d2..77c8a80 100644
--- a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtPreferences.java
+++ b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtPreferences.java
@@ -81,35 +81,41 @@ public class GwtPreferences implements Preferences {
 	}
 
 	@Override
-	public void putBoolean (String key, boolean val) {
+	public Preferences putBoolean (String key, boolean val) {
 		values.put(key, val);
+		return this;
 	}
 
 	@Override
-	public void putInteger (String key, int val) {
+	public Preferences putInteger (String key, int val) {
 		values.put(key, val);
+		return this;
 	}
 
 	@Override
-	public void putLong (String key, long val) {
+	public Preferences putLong (String key, long val) {
 		values.put(key, val);
+		return this;
 	}
 
 	@Override
-	public void putFloat (String key, float val) {
+	public Preferences putFloat (String key, float val) {
 		values.put(key, val);
+		return this;
 	}
 
 	@Override
-	public void putString (String key, String val) {
+	public Preferences putString (String key, String val) {
 		values.put(key, val);
+		return this;
 	}
 
 	@Override
-	public void put (Map<String, ?> vals) {
+	public Preferences put (Map<String, ?> vals) {
 		for (String key : vals.keySet()) {
 			values.put(key, vals.get(key));
 		}
+		return this;
 	}
 
 	@Override
diff --git a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/preloader/FileWrapper.java b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/preloader/FileWrapper.java
index 50f24f2..6b2332a 100644
--- a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/preloader/FileWrapper.java
+++ b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/preloader/FileWrapper.java
@@ -459,10 +459,10 @@ public class FileWrapper {
 	}
 
 	/** @throw GdxRuntimeException if this file handle is a {@link FileType#Classpath} or {@link FileType#Internal} file. */
-	public void mkdirs () {
+	public boolean mkdirs () {
 		if (type == FileType.Classpath) throw new GdxRuntimeException("Cannot mkdirs with a classpath file: " + file);
 		if (type == FileType.Internal) throw new GdxRuntimeException("Cannot mkdirs with an internal file: " + file);
-		file().mkdirs();
+		return file().mkdirs();
 	}
 
 	/** Returns true if the file exists. On Android, a {@link FileType#Classpath} or {@link FileType#Internal} handle to a directory
diff --git a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/preloader/PreloaderBundleGenerator.java b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/preloader/PreloaderBundleGenerator.java
index 63d0d38..ddf304f 100644
--- a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/preloader/PreloaderBundleGenerator.java
+++ b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/preloader/PreloaderBundleGenerator.java
@@ -229,7 +229,7 @@ public class PreloaderBundleGenerator extends Generator {
 			String[] tokens = paths.split(",");
 			String path = null;
 			for(String token: tokens) {
-				if(new FileWrapper(token).exists()) {
+				if (new FileWrapper(token).exists() || new FileWrapper(token).mkdirs()) {
 					path = token;
 				}
 			}
diff --git a/build.xml b/build.xml
index 7153870..ed5be7f 100644
--- a/build.xml
+++ b/build.xml
@@ -3,7 +3,7 @@
 	<property environment="env" />
 
 	<!-- library version -->
-	<property name="version" value="1.0-SNAPSHOT"/>
+	<property name="version" value="1.2.1-SNAPSHOT"/>
 
 	<!-- define distribution/output directory -->
 	<property name="distDir" value="${basedir}/dist"/>
diff --git a/extensions/gdx-ai/src/com/badlogic/gdx/ai/msg/MessageDispatcher.java b/extensions/gdx-ai/src/com/badlogic/gdx/ai/msg/MessageDispatcher.java
index 4dca0ab..3583a64 100644
--- a/extensions/gdx-ai/src/com/badlogic/gdx/ai/msg/MessageDispatcher.java
+++ b/extensions/gdx-ai/src/com/badlogic/gdx/ai/msg/MessageDispatcher.java
@@ -76,8 +76,8 @@ public class MessageDispatcher {
 	 * queue. This prevents many similar telegrams from bunching up in the queue and being delivered en masse, thus flooding an
 	 * agent with identical messages. To eliminate time granularity just set it to 0. */
 	public void setTimeGranularity (float timeGranularity) {
-		boolean uniqueness = timeGranularity <= 0;
-		this.timeGranularity = uniqueness ? 0 : (long)(timeGranularity * NANOS_PER_SEC);
+		boolean uniqueness = timeGranularity > 0;
+		this.timeGranularity = uniqueness ? (long)(timeGranularity * NANOS_PER_SEC) : 0;
 		this.queue.setUniqueness(uniqueness);
 
 	}
@@ -132,8 +132,8 @@ public class MessageDispatcher {
 			long currentTime = getCurrentTime();
 			telegram.setTimestamp(currentTime + (long)(delay * NANOS_PER_SEC), timeGranularity);
 
-			// Put it in the queue
-			queue.add(telegram);
+			// Put it in the queue or put it back into the pool if it's rejected
+			if (!queue.add(telegram)) pool.free(telegram);
 
 			if (debugEnabled) {
 				Gdx.app.log(LOG_TAG, "Delayed telegram from " + sender + " recorded at time " + getCurrentTime() + " for " + receiver
@@ -157,7 +157,7 @@ public class MessageDispatcher {
 		do {
 			// Read the telegram from the front of the queue
 			final Telegram telegram = queue.peek();
-			if (telegram.getTimestamp() < currentTime) break;
+			if (telegram.getTimestamp() > currentTime) break;
 
 			if (debugEnabled) {
 				Gdx.app.log(LOG_TAG, "Queued telegram ready for dispatch: Sent to " + telegram.receiver + ". Msg is "
diff --git a/extensions/gdx-ai/src/com/badlogic/gdx/ai/msg/PriorityQueue.java b/extensions/gdx-ai/src/com/badlogic/gdx/ai/msg/PriorityQueue.java
index 994ec8b..84be8f0 100644
--- a/extensions/gdx-ai/src/com/badlogic/gdx/ai/msg/PriorityQueue.java
+++ b/extensions/gdx-ai/src/com/badlogic/gdx/ai/msg/PriorityQueue.java
@@ -95,7 +95,8 @@ public class PriorityQueue<E extends Comparable<E>> {
 		this.uniqueness = uniqueness;
 	}
 
-	/** Inserts the specified element into this priority queue.
+	/** Inserts the specified element into this priority queue. If {@code uniqueness} is enabled and this priority queue already
+	 * contains the element, the call leaves the queue unchanged and returns false.
 	 * 
 	 * @return true if the element was added to this queue, else false
 	 * @throws ClassCastException if the specified element cannot be compared with elements currently in this priority queue
@@ -103,7 +104,7 @@ public class PriorityQueue<E extends Comparable<E>> {
 	 * @throws NullPointerException if the specified element is null */
 	public boolean add (E e) {
 		if (e == null) throw new NullPointerException();
-		if (uniqueness && set.contains(e)) return false;
+		if (uniqueness && !set.add(e)) return false;
 		int i = size;
 		if (i >= queue.length) growToSize(i + 1);
 		size = i + 1;
@@ -111,7 +112,6 @@ public class PriorityQueue<E extends Comparable<E>> {
 			queue[0] = e;
 		else
 			siftUp(i, e);
-		if (uniqueness) set.add(e);
 		return true;
 	}
 
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/collision_wrap.cpp b/extensions/gdx-bullet/jni/swig-src/collision/collision_wrap.cpp
index df7d95c..cb18bb3 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/collision_wrap.cpp
+++ b/extensions/gdx-bullet/jni/swig-src/collision/collision_wrap.cpp
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * This file is not intended to be easily readable and contains a number of
  * coding conventions designed to improve portability and efficiency. Do not make
@@ -1930,6 +1930,48 @@ SWIGINTERN int btManifoldPoint_getUserValue(btManifoldPoint *self){
 SWIGINTERN void btManifoldPoint_setUserValue(btManifoldPoint *self,int value){
 		self->m_userPersistentData = (void*)value;
 	}
+SWIGINTERN void btManifoldPoint_getLocalPointA(btManifoldPoint *self,btVector3 &out){
+		out = self->m_localPointA;
+	}
+SWIGINTERN void btManifoldPoint_setLocalPointA(btManifoldPoint *self,btVector3 const &value){
+		self->m_localPointA = value;
+	}
+SWIGINTERN void btManifoldPoint_getLocalPointB(btManifoldPoint *self,btVector3 &out){
+		out = self->m_localPointB;
+	}
+SWIGINTERN void btManifoldPoint_setLocalPointB(btManifoldPoint *self,btVector3 const &value){
+		self->m_localPointB = value;
+	}
+SWIGINTERN void btManifoldPoint_getPositionWorldOnA(btManifoldPoint *self,btVector3 &out){
+		out = self->m_positionWorldOnA;
+	}
+SWIGINTERN void btManifoldPoint_setPositionWorldOnA(btManifoldPoint *self,btVector3 const &value){
+		self->m_positionWorldOnA = value;
+	}
+SWIGINTERN void btManifoldPoint_getPositionWorldOnB(btManifoldPoint *self,btVector3 &out){
+		out = self->m_positionWorldOnB;
+	}
+SWIGINTERN void btManifoldPoint_setPositionWorldOnB(btManifoldPoint *self,btVector3 const &value){
+		self->m_positionWorldOnB = value;
+	}
+SWIGINTERN void btManifoldPoint_getNormalWorldOnB(btManifoldPoint *self,btVector3 &out){
+		out = self->m_normalWorldOnB;
+	}
+SWIGINTERN void btManifoldPoint_setNormalWorldOnB(btManifoldPoint *self,btVector3 const &value){
+		self->m_normalWorldOnB = value;
+	}
+SWIGINTERN void btManifoldPoint_getLateralFrictionDir1(btManifoldPoint *self,btVector3 &out){
+		out = self->m_lateralFrictionDir1;
+	}
+SWIGINTERN void btManifoldPoint_setLateralFrictionDir1(btManifoldPoint *self,btVector3 const &value){
+		self->m_lateralFrictionDir1 = value;
+	}
+SWIGINTERN void btManifoldPoint_getLateralFrictionDir2(btManifoldPoint *self,btVector3 &out){
+		out = self->m_lateralFrictionDir2;
+	}
+SWIGINTERN void btManifoldPoint_setLateralFrictionDir2(btManifoldPoint *self,btVector3 const &value){
+		self->m_lateralFrictionDir2 = value;
+	}
 
 #include <BulletCollision/NarrowPhaseCollision/btContinuousConvexCollision.h>
 
@@ -2000,72 +2042,6 @@ bool custom_ContactListener_setEvents(ContactListener *listener);
 
 
 	// Inline (cached) method to retrieve the type's jclass
-	SWIGINTERN inline jclass gdx_getClassbtManifoldPoint(JNIEnv * jenv) {
-		static jclass cls = NULL;
-		if (cls == NULL)
-			cls = (jclass) jenv->NewGlobalRef(jenv->FindClass("com/badlogic/gdx/physics/bullet/collision/btManifoldPoint"));
-		return cls;
-	}
-	
-	// Inline method to get the termporary instance
-	SWIGINTERN inline jobject gdx_getTempbtManifoldPoint(JNIEnv * jenv, void *cPtr, bool ownMem) {
-	  static jobject ret = NULL;
-	  static jclass clazz = gdx_getClassbtManifoldPoint(jenv);
-	  if (ret == NULL) {
-	    jfieldID field = jenv->GetStaticFieldID(clazz, "temp", "com/badlogic/gdx/physics/bullet/collision/btManifoldPoint");
-	    ret = jenv->NewGlobalRef(jenv->GetStaticObjectField(clazz, field));
-	  }
-	  
-	  static jmethodID reuseMethod = NULL;
-	  if (reuseMethod == NULL)
-		  reuseMethod = (jmethodID) jenv->GetMethodID(clazz, "reset", "(JZ)V");
-	  
-	  long ptr;
-	  *(const void **)&ptr = cPtr;
-	  jenv->CallVoidMethod(ret, reuseMethod, ptr, (jboolean)ownMem);
-	  return ret;
-	}
-
-	// Inline method to obtain an instance from the pool
-	SWIGINTERN inline jobject gdx_obtainbtManifoldPoint(JNIEnv * jenv, jclass clazz, void *cPtr, bool ownMem) {
-		static jmethodID obtainMethod = NULL;
-		if (obtainMethod == NULL)
-			obtainMethod = (jmethodID) jenv->GetStaticMethodID(clazz, "obtain", "(JZ)Lcom/badlogic/gdx/physics/bullet/collision/btManifoldPoint;");
-		
-		long ptr;
-		*(const void **)&ptr = cPtr; 
-		jobject ret = jenv->CallStaticObjectMethod(clazz, obtainMethod, ptr, (jboolean)ownMem);
-		
-		return ret;
-	}
-	
-	// Inline method to free an instance from the pool
-	SWIGINTERN inline void gdx_freebtManifoldPoint(JNIEnv * jenv, const jclass clazz, const jobject obj) {
-		static jmethodID freeMethod = NULL;
-		if (freeMethod == NULL)
-			freeMethod = (jmethodID) jenv->GetStaticMethodID(clazz, "free", "(Lcom/badlogic/gdx/physics/bullet/collision/btManifoldPoint;)V");
-		
-		jenv->CallStaticVoidMethod(clazz, freeMethod, obj);
-		
-		jenv->DeleteLocalRef(obj);
-	}
-	
-	// Simple raii class to auto free the instance from the pool 
-	class gdxAutoFreebtManifoldPoint {
-	private:
-		JNIEnv * jenv;
-		jobject jbtManifoldPoint;
-		jclass jclazz;
-	public:
-		gdxAutoFreebtManifoldPoint(JNIEnv * jenv, jclass jclazz, jobject jbtManifoldPoint) : 
-			jenv(jenv), jbtManifoldPoint(jbtManifoldPoint), jclazz(jclazz) { }
-		virtual ~gdxAutoFreebtManifoldPoint() {
-			gdx_freebtManifoldPoint(this->jenv, this->jclazz, this->jbtManifoldPoint);
-		}
-	};
-
-
-	// Inline (cached) method to retrieve the type's jclass
 	SWIGINTERN inline jclass gdx_getClassbtCollisionObjectWrapper(JNIEnv * jenv) {
 		static jclass cls = NULL;
 		if (cls == NULL)
@@ -4138,7 +4114,7 @@ bool SwigDirector_ContactListener::onContactAdded(btManifoldPoint &cp, btCollisi
   JNIEnvWrapper swigjnienv(this) ;
   JNIEnv * jenv = swigjnienv.getJNIEnv() ;
   jobject swigjobj = (jobject) NULL ;
-  jobject jcp = 0 ;
+  jlong jcp = 0 ;
   jobject jcolObj0Wrap = 0 ;
   jint jpartId0  ;
   jint jindex0  ;
@@ -4152,9 +4128,7 @@ bool SwigDirector_ContactListener::onContactAdded(btManifoldPoint &cp, btCollisi
   }
   swigjobj = swig_get_self(jenv);
   if (swigjobj && jenv->IsSameObject(swigjobj, NULL) == JNI_FALSE) {
-    jclass jccp = gdx_getClassbtManifoldPoint(jenv);
-    jcp = gdx_obtainbtManifoldPoint(jenv, jccp, (void*)&cp, false);
-    gdxAutoFreebtManifoldPoint autoRelease_jcp(jenv, jccp, jcp);
+    *(btManifoldPoint **)&jcp = (btManifoldPoint *) &cp; 
     jclass jccolObj0Wrap = gdx_getClassbtCollisionObjectWrapper(jenv);
     jcolObj0Wrap = gdx_obtainbtCollisionObjectWrapper(jenv, jccolObj0Wrap, (void*)&colObj0Wrap, false);
     gdxAutoFreebtCollisionObjectWrapper autoRelease_jcolObj0Wrap(jenv, jccolObj0Wrap, jcolObj0Wrap);
@@ -4186,7 +4160,7 @@ bool SwigDirector_ContactListener::onContactAdded(btManifoldPoint &cp, btCollisi
   JNIEnvWrapper swigjnienv(this) ;
   JNIEnv * jenv = swigjnienv.getJNIEnv() ;
   jobject swigjobj = (jobject) NULL ;
-  jobject jcp = 0 ;
+  jlong jcp = 0 ;
   jlong jcolObj0 = 0 ;
   jint jpartId0  ;
   jint jindex0  ;
@@ -4200,9 +4174,7 @@ bool SwigDirector_ContactListener::onContactAdded(btManifoldPoint &cp, btCollisi
   }
   swigjobj = swig_get_self(jenv);
   if (swigjobj && jenv->IsSameObject(swigjobj, NULL) == JNI_FALSE) {
-    jclass jccp = gdx_getClassbtManifoldPoint(jenv);
-    jcp = gdx_obtainbtManifoldPoint(jenv, jccp, (void*)&cp, false);
-    gdxAutoFreebtManifoldPoint autoRelease_jcp(jenv, jccp, jcp);
+    *(btManifoldPoint **)&jcp = (btManifoldPoint *) &cp; 
     *((btCollisionObject **)&jcolObj0) = (btCollisionObject *) colObj0; 
     jpartId0 = (jint) partId0;
     jindex0 = (jint) index0;
@@ -4230,7 +4202,7 @@ bool SwigDirector_ContactListener::onContactAdded(btManifoldPoint &cp, int userV
   JNIEnvWrapper swigjnienv(this) ;
   JNIEnv * jenv = swigjnienv.getJNIEnv() ;
   jobject swigjobj = (jobject) NULL ;
-  jobject jcp = 0 ;
+  jlong jcp = 0 ;
   jint juserValue0  ;
   jint jpartId0  ;
   jint jindex0  ;
@@ -4244,9 +4216,7 @@ bool SwigDirector_ContactListener::onContactAdded(btManifoldPoint &cp, int userV
   }
   swigjobj = swig_get_self(jenv);
   if (swigjobj && jenv->IsSameObject(swigjobj, NULL) == JNI_FALSE) {
-    jclass jccp = gdx_getClassbtManifoldPoint(jenv);
-    jcp = gdx_obtainbtManifoldPoint(jenv, jccp, (void*)&cp, false);
-    gdxAutoFreebtManifoldPoint autoRelease_jcp(jenv, jccp, jcp);
+    *(btManifoldPoint **)&jcp = (btManifoldPoint *) &cp; 
     juserValue0 = (jint) userValue0;
     jpartId0 = (jint) partId0;
     jindex0 = (jint) index0;
@@ -4274,7 +4244,7 @@ bool SwigDirector_ContactListener::onContactAdded(btManifoldPoint &cp, btCollisi
   JNIEnvWrapper swigjnienv(this) ;
   JNIEnv * jenv = swigjnienv.getJNIEnv() ;
   jobject swigjobj = (jobject) NULL ;
-  jobject jcp = 0 ;
+  jlong jcp = 0 ;
   jobject jcolObj0Wrap = 0 ;
   jint jpartId0  ;
   jint jindex0  ;
@@ -4290,9 +4260,7 @@ bool SwigDirector_ContactListener::onContactAdded(btManifoldPoint &cp, btCollisi
   }
   swigjobj = swig_get_self(jenv);
   if (swigjobj && jenv->IsSameObject(swigjobj, NULL) == JNI_FALSE) {
-    jclass jccp = gdx_getClassbtManifoldPoint(jenv);
-    jcp = gdx_obtainbtManifoldPoint(jenv, jccp, (void*)&cp, false);
-    gdxAutoFreebtManifoldPoint autoRelease_jcp(jenv, jccp, jcp);
+    *(btManifoldPoint **)&jcp = (btManifoldPoint *) &cp; 
     jclass jccolObj0Wrap = gdx_getClassbtCollisionObjectWrapper(jenv);
     jcolObj0Wrap = gdx_obtainbtCollisionObjectWrapper(jenv, jccolObj0Wrap, (void*)&colObj0Wrap, false);
     gdxAutoFreebtCollisionObjectWrapper autoRelease_jcolObj0Wrap(jenv, jccolObj0Wrap, jcolObj0Wrap);
@@ -4326,7 +4294,7 @@ bool SwigDirector_ContactListener::onContactAdded(btManifoldPoint &cp, btCollisi
   JNIEnvWrapper swigjnienv(this) ;
   JNIEnv * jenv = swigjnienv.getJNIEnv() ;
   jobject swigjobj = (jobject) NULL ;
-  jobject jcp = 0 ;
+  jlong jcp = 0 ;
   jlong jcolObj0 = 0 ;
   jint jpartId0  ;
   jint jindex0  ;
@@ -4342,9 +4310,7 @@ bool SwigDirector_ContactListener::onContactAdded(btManifoldPoint &cp, btCollisi
   }
   swigjobj = swig_get_self(jenv);
   if (swigjobj && jenv->IsSameObject(swigjobj, NULL) == JNI_FALSE) {
-    jclass jccp = gdx_getClassbtManifoldPoint(jenv);
-    jcp = gdx_obtainbtManifoldPoint(jenv, jccp, (void*)&cp, false);
-    gdxAutoFreebtManifoldPoint autoRelease_jcp(jenv, jccp, jcp);
+    *(btManifoldPoint **)&jcp = (btManifoldPoint *) &cp; 
     *((btCollisionObject **)&jcolObj0) = (btCollisionObject *) colObj0; 
     jpartId0 = (jint) partId0;
     jindex0 = (jint) index0;
@@ -4374,7 +4340,7 @@ bool SwigDirector_ContactListener::onContactAdded(btManifoldPoint &cp, int userV
   JNIEnvWrapper swigjnienv(this) ;
   JNIEnv * jenv = swigjnienv.getJNIEnv() ;
   jobject swigjobj = (jobject) NULL ;
-  jobject jcp = 0 ;
+  jlong jcp = 0 ;
   jint juserValue0  ;
   jint jpartId0  ;
   jint jindex0  ;
@@ -4390,9 +4356,7 @@ bool SwigDirector_ContactListener::onContactAdded(btManifoldPoint &cp, int userV
   }
   swigjobj = swig_get_self(jenv);
   if (swigjobj && jenv->IsSameObject(swigjobj, NULL) == JNI_FALSE) {
-    jclass jccp = gdx_getClassbtManifoldPoint(jenv);
-    jcp = gdx_obtainbtManifoldPoint(jenv, jccp, (void*)&cp, false);
-    gdxAutoFreebtManifoldPoint autoRelease_jcp(jenv, jccp, jcp);
+    *(btManifoldPoint **)&jcp = (btManifoldPoint *) &cp; 
     juserValue0 = (jint) userValue0;
     jpartId0 = (jint) partId0;
     jindex0 = (jint) index0;
@@ -4680,7 +4644,7 @@ void SwigDirector_ContactListener::onContactProcessed(btManifoldPoint &cp, btCol
   JNIEnvWrapper swigjnienv(this) ;
   JNIEnv * jenv = swigjnienv.getJNIEnv() ;
   jobject swigjobj = (jobject) NULL ;
-  jobject jcp = 0 ;
+  jlong jcp = 0 ;
   jlong jcolObj0 = 0 ;
   jlong jcolObj1 = 0 ;
   
@@ -4690,9 +4654,7 @@ void SwigDirector_ContactListener::onContactProcessed(btManifoldPoint &cp, btCol
   }
   swigjobj = swig_get_self(jenv);
   if (swigjobj && jenv->IsSameObject(swigjobj, NULL) == JNI_FALSE) {
-    jclass jccp = gdx_getClassbtManifoldPoint(jenv);
-    jcp = gdx_obtainbtManifoldPoint(jenv, jccp, (void*)&cp, false);
-    gdxAutoFreebtManifoldPoint autoRelease_jcp(jenv, jccp, jcp);
+    *(btManifoldPoint **)&jcp = (btManifoldPoint *) &cp; 
     *((btCollisionObject **)&jcolObj0) = (btCollisionObject *) colObj0; 
     *((btCollisionObject **)&jcolObj1) = (btCollisionObject *) colObj1; 
     jenv->CallStaticVoidMethod(Swig::jclass_CollisionJNI, Swig::director_methids[44], swigjobj, jcp, jcolObj0, jcolObj1);
@@ -4712,7 +4674,7 @@ void SwigDirector_ContactListener::onContactProcessed(btManifoldPoint &cp, int u
   JNIEnvWrapper swigjnienv(this) ;
   JNIEnv * jenv = swigjnienv.getJNIEnv() ;
   jobject swigjobj = (jobject) NULL ;
-  jobject jcp = 0 ;
+  jlong jcp = 0 ;
   jint juserValue0  ;
   jint juserValue1  ;
   
@@ -4722,9 +4684,7 @@ void SwigDirector_ContactListener::onContactProcessed(btManifoldPoint &cp, int u
   }
   swigjobj = swig_get_self(jenv);
   if (swigjobj && jenv->IsSameObject(swigjobj, NULL) == JNI_FALSE) {
-    jclass jccp = gdx_getClassbtManifoldPoint(jenv);
-    jcp = gdx_obtainbtManifoldPoint(jenv, jccp, (void*)&cp, false);
-    gdxAutoFreebtManifoldPoint autoRelease_jcp(jenv, jccp, jcp);
+    *(btManifoldPoint **)&jcp = (btManifoldPoint *) &cp; 
     juserValue0 = (jint) userValue0;
     juserValue1 = (jint) userValue1;
     jenv->CallStaticVoidMethod(Swig::jclass_CollisionJNI, Swig::director_methids[45], swigjobj, jcp, juserValue0, juserValue1);
@@ -4744,7 +4704,7 @@ void SwigDirector_ContactListener::onContactProcessed(btManifoldPoint &cp, btCol
   JNIEnvWrapper swigjnienv(this) ;
   JNIEnv * jenv = swigjnienv.getJNIEnv() ;
   jobject swigjobj = (jobject) NULL ;
-  jobject jcp = 0 ;
+  jlong jcp = 0 ;
   jlong jcolObj0 = 0 ;
   jboolean jmatch0  ;
   jlong jcolObj1 = 0 ;
@@ -4756,9 +4716,7 @@ void SwigDirector_ContactListener::onContactProcessed(btManifoldPoint &cp, btCol
   }
   swigjobj = swig_get_self(jenv);
   if (swigjobj && jenv->IsSameObject(swigjobj, NULL) == JNI_FALSE) {
-    jclass jccp = gdx_getClassbtManifoldPoint(jenv);
-    jcp = gdx_obtainbtManifoldPoint(jenv, jccp, (void*)&cp, false);
-    gdxAutoFreebtManifoldPoint autoRelease_jcp(jenv, jccp, jcp);
+    *(btManifoldPoint **)&jcp = (btManifoldPoint *) &cp; 
     *((btCollisionObject **)&jcolObj0) = (btCollisionObject *) colObj0; 
     jmatch0 = (jboolean) match0;
     *((btCollisionObject **)&jcolObj1) = (btCollisionObject *) colObj1; 
@@ -4780,7 +4738,7 @@ void SwigDirector_ContactListener::onContactProcessed(btManifoldPoint &cp, int u
   JNIEnvWrapper swigjnienv(this) ;
   JNIEnv * jenv = swigjnienv.getJNIEnv() ;
   jobject swigjobj = (jobject) NULL ;
-  jobject jcp = 0 ;
+  jlong jcp = 0 ;
   jint juserValue0  ;
   jboolean jmatch0  ;
   jint juserValue1  ;
@@ -4792,9 +4750,7 @@ void SwigDirector_ContactListener::onContactProcessed(btManifoldPoint &cp, int u
   }
   swigjobj = swig_get_self(jenv);
   if (swigjobj && jenv->IsSameObject(swigjobj, NULL) == JNI_FALSE) {
-    jclass jccp = gdx_getClassbtManifoldPoint(jenv);
-    jcp = gdx_obtainbtManifoldPoint(jenv, jccp, (void*)&cp, false);
-    gdxAutoFreebtManifoldPoint autoRelease_jcp(jenv, jccp, jcp);
+    *(btManifoldPoint **)&jcp = (btManifoldPoint *) &cp; 
     juserValue0 = (jint) userValue0;
     jmatch0 = (jboolean) match0;
     juserValue1 = (jint) userValue1;
@@ -40077,151 +40033,6 @@ SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_collision_Collisio
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_btManifoldPoint_1localPointA_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
-  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
-  btVector3 *arg2 = (btVector3 *) 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  (void)jarg2_;
-  arg1 = *(btManifoldPoint **)&jarg1; 
-  arg2 = *(btVector3 **)&jarg2; 
-  if (arg1) (arg1)->m_localPointA = *arg2;
-}
-
-
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_btManifoldPoint_1localPointA_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
-  jlong jresult = 0 ;
-  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
-  btVector3 *result = 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  arg1 = *(btManifoldPoint **)&jarg1; 
-  result = (btVector3 *)& ((arg1)->m_localPointA);
-  *(btVector3 **)&jresult = result; 
-  return jresult;
-}
-
-
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_btManifoldPoint_1localPointB_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
-  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
-  btVector3 *arg2 = (btVector3 *) 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  (void)jarg2_;
-  arg1 = *(btManifoldPoint **)&jarg1; 
-  arg2 = *(btVector3 **)&jarg2; 
-  if (arg1) (arg1)->m_localPointB = *arg2;
-}
-
-
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_btManifoldPoint_1localPointB_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
-  jlong jresult = 0 ;
-  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
-  btVector3 *result = 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  arg1 = *(btManifoldPoint **)&jarg1; 
-  result = (btVector3 *)& ((arg1)->m_localPointB);
-  *(btVector3 **)&jresult = result; 
-  return jresult;
-}
-
-
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_btManifoldPoint_1positionWorldOnB_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
-  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
-  btVector3 *arg2 = (btVector3 *) 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  (void)jarg2_;
-  arg1 = *(btManifoldPoint **)&jarg1; 
-  arg2 = *(btVector3 **)&jarg2; 
-  if (arg1) (arg1)->m_positionWorldOnB = *arg2;
-}
-
-
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_btManifoldPoint_1positionWorldOnB_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
-  jlong jresult = 0 ;
-  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
-  btVector3 *result = 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  arg1 = *(btManifoldPoint **)&jarg1; 
-  result = (btVector3 *)& ((arg1)->m_positionWorldOnB);
-  *(btVector3 **)&jresult = result; 
-  return jresult;
-}
-
-
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_btManifoldPoint_1positionWorldOnA_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
-  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
-  btVector3 *arg2 = (btVector3 *) 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  (void)jarg2_;
-  arg1 = *(btManifoldPoint **)&jarg1; 
-  arg2 = *(btVector3 **)&jarg2; 
-  if (arg1) (arg1)->m_positionWorldOnA = *arg2;
-}
-
-
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_btManifoldPoint_1positionWorldOnA_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
-  jlong jresult = 0 ;
-  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
-  btVector3 *result = 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  arg1 = *(btManifoldPoint **)&jarg1; 
-  result = (btVector3 *)& ((arg1)->m_positionWorldOnA);
-  *(btVector3 **)&jresult = result; 
-  return jresult;
-}
-
-
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_btManifoldPoint_1normalWorldOnB_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
-  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
-  btVector3 *arg2 = (btVector3 *) 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  (void)jarg2_;
-  arg1 = *(btManifoldPoint **)&jarg1; 
-  arg2 = *(btVector3 **)&jarg2; 
-  if (arg1) (arg1)->m_normalWorldOnB = *arg2;
-}
-
-
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_btManifoldPoint_1normalWorldOnB_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
-  jlong jresult = 0 ;
-  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
-  btVector3 *result = 0 ;
-  
-  (void)jenv;
-  (void)jcls;
-  (void)jarg1_;
-  arg1 = *(btManifoldPoint **)&jarg1; 
-  result = (btVector3 *)& ((arg1)->m_normalWorldOnB);
-  *(btVector3 **)&jresult = result; 
-  return jresult;
-}
-
-
 SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_btManifoldPoint_1distance1_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
   btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
   btScalar arg2 ;
@@ -40726,117 +40537,283 @@ SWIGEXPORT jint JNICALL Java_com_badlogic_gdx_physics_bullet_collision_Collision
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_btManifoldPoint_1lateralFrictionDir1_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
+SWIGEXPORT jfloat JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_btManifoldPoint_1getDistance(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
+  jfloat jresult = 0 ;
   btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
-  btVector3 *arg2 = (btVector3 *) 0 ;
+  btScalar result;
   
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
-  (void)jarg2_;
   arg1 = *(btManifoldPoint **)&jarg1; 
-  arg2 = *(btVector3 **)&jarg2; 
-  if (arg1) (arg1)->m_lateralFrictionDir1 = *arg2;
+  result = (btScalar)((btManifoldPoint const *)arg1)->getDistance();
+  jresult = (jfloat)result; 
+  return jresult;
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_btManifoldPoint_1lateralFrictionDir1_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
-  jlong jresult = 0 ;
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_btManifoldPoint_1setDistance(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
   btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
-  btVector3 *result = 0 ;
+  btScalar arg2 ;
   
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
   arg1 = *(btManifoldPoint **)&jarg1; 
-  result = (btVector3 *)& ((arg1)->m_lateralFrictionDir1);
-  *(btVector3 **)&jresult = result; 
+  arg2 = (btScalar)jarg2; 
+  (arg1)->setDistance(arg2);
+}
+
+
+SWIGEXPORT jint JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_btManifoldPoint_1getUserValue(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
+  jint jresult = 0 ;
+  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
+  int result;
+  
+  (void)jenv;
+  (void)jcls;
+  (void)jarg1_;
+  arg1 = *(btManifoldPoint **)&jarg1; 
+  result = (int)btManifoldPoint_getUserValue(arg1);
+  jresult = (jint)result; 
   return jresult;
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_btManifoldPoint_1lateralFrictionDir2_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_btManifoldPoint_1setUserValue(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
   btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
-  btVector3 *arg2 = (btVector3 *) 0 ;
+  int arg2 ;
   
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
-  (void)jarg2_;
   arg1 = *(btManifoldPoint **)&jarg1; 
-  arg2 = *(btVector3 **)&jarg2; 
-  if (arg1) (arg1)->m_lateralFrictionDir2 = *arg2;
+  arg2 = (int)jarg2; 
+  btManifoldPoint_setUserValue(arg1,arg2);
 }
 
 
-SWIGEXPORT jlong JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_btManifoldPoint_1lateralFrictionDir2_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
-  jlong jresult = 0 ;
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_btManifoldPoint_1getLocalPointA(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
   btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
-  btVector3 *result = 0 ;
+  btVector3 *arg2 = 0 ;
   
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
   arg1 = *(btManifoldPoint **)&jarg1; 
-  result = (btVector3 *)& ((arg1)->m_lateralFrictionDir2);
-  *(btVector3 **)&jresult = result; 
-  return jresult;
+  btVector3 local_arg2;
+  gdx_setbtVector3FromVector3(jenv, local_arg2, jarg2);
+  arg2 = &local_arg2;
+  gdxAutoCommitVector3 auto_commit_arg2(jenv, jarg2, &local_arg2);
+  btManifoldPoint_getLocalPointA(arg1,*arg2);
 }
 
 
-SWIGEXPORT jfloat JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_btManifoldPoint_1getDistance(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
-  jfloat jresult = 0 ;
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_btManifoldPoint_1setLocalPointA(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
   btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
-  btScalar result;
+  btVector3 *arg2 = 0 ;
   
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
   arg1 = *(btManifoldPoint **)&jarg1; 
-  result = (btScalar)((btManifoldPoint const *)arg1)->getDistance();
-  jresult = (jfloat)result; 
-  return jresult;
+  btVector3 local_arg2;
+  gdx_setbtVector3FromVector3(jenv, local_arg2, jarg2);
+  arg2 = &local_arg2;
+  gdxAutoCommitVector3 auto_commit_arg2(jenv, jarg2, &local_arg2);
+  btManifoldPoint_setLocalPointA(arg1,(btVector3 const &)*arg2);
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_btManifoldPoint_1setDistance(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_btManifoldPoint_1getLocalPointB(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
   btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
-  btScalar arg2 ;
+  btVector3 *arg2 = 0 ;
   
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
   arg1 = *(btManifoldPoint **)&jarg1; 
-  arg2 = (btScalar)jarg2; 
-  (arg1)->setDistance(arg2);
+  btVector3 local_arg2;
+  gdx_setbtVector3FromVector3(jenv, local_arg2, jarg2);
+  arg2 = &local_arg2;
+  gdxAutoCommitVector3 auto_commit_arg2(jenv, jarg2, &local_arg2);
+  btManifoldPoint_getLocalPointB(arg1,*arg2);
 }
 
 
-SWIGEXPORT jint JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_btManifoldPoint_1getUserValue(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
-  jint jresult = 0 ;
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_btManifoldPoint_1setLocalPointB(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
   btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
-  int result;
+  btVector3 *arg2 = 0 ;
   
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
   arg1 = *(btManifoldPoint **)&jarg1; 
-  result = (int)btManifoldPoint_getUserValue(arg1);
-  jresult = (jint)result; 
-  return jresult;
+  btVector3 local_arg2;
+  gdx_setbtVector3FromVector3(jenv, local_arg2, jarg2);
+  arg2 = &local_arg2;
+  gdxAutoCommitVector3 auto_commit_arg2(jenv, jarg2, &local_arg2);
+  btManifoldPoint_setLocalPointB(arg1,(btVector3 const &)*arg2);
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_btManifoldPoint_1setUserValue(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_btManifoldPoint_1getPositionWorldOnA(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
   btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
-  int arg2 ;
+  btVector3 *arg2 = 0 ;
   
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
   arg1 = *(btManifoldPoint **)&jarg1; 
-  arg2 = (int)jarg2; 
-  btManifoldPoint_setUserValue(arg1,arg2);
+  btVector3 local_arg2;
+  gdx_setbtVector3FromVector3(jenv, local_arg2, jarg2);
+  arg2 = &local_arg2;
+  gdxAutoCommitVector3 auto_commit_arg2(jenv, jarg2, &local_arg2);
+  btManifoldPoint_getPositionWorldOnA(arg1,*arg2);
+}
+
+
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_btManifoldPoint_1setPositionWorldOnA(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
+  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
+  btVector3 *arg2 = 0 ;
+  
+  (void)jenv;
+  (void)jcls;
+  (void)jarg1_;
+  arg1 = *(btManifoldPoint **)&jarg1; 
+  btVector3 local_arg2;
+  gdx_setbtVector3FromVector3(jenv, local_arg2, jarg2);
+  arg2 = &local_arg2;
+  gdxAutoCommitVector3 auto_commit_arg2(jenv, jarg2, &local_arg2);
+  btManifoldPoint_setPositionWorldOnA(arg1,(btVector3 const &)*arg2);
+}
+
+
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_btManifoldPoint_1getPositionWorldOnB(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
+  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
+  btVector3 *arg2 = 0 ;
+  
+  (void)jenv;
+  (void)jcls;
+  (void)jarg1_;
+  arg1 = *(btManifoldPoint **)&jarg1; 
+  btVector3 local_arg2;
+  gdx_setbtVector3FromVector3(jenv, local_arg2, jarg2);
+  arg2 = &local_arg2;
+  gdxAutoCommitVector3 auto_commit_arg2(jenv, jarg2, &local_arg2);
+  btManifoldPoint_getPositionWorldOnB(arg1,*arg2);
+}
+
+
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_btManifoldPoint_1setPositionWorldOnB(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
+  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
+  btVector3 *arg2 = 0 ;
+  
+  (void)jenv;
+  (void)jcls;
+  (void)jarg1_;
+  arg1 = *(btManifoldPoint **)&jarg1; 
+  btVector3 local_arg2;
+  gdx_setbtVector3FromVector3(jenv, local_arg2, jarg2);
+  arg2 = &local_arg2;
+  gdxAutoCommitVector3 auto_commit_arg2(jenv, jarg2, &local_arg2);
+  btManifoldPoint_setPositionWorldOnB(arg1,(btVector3 const &)*arg2);
+}
+
+
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_btManifoldPoint_1getNormalWorldOnB(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
+  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
+  btVector3 *arg2 = 0 ;
+  
+  (void)jenv;
+  (void)jcls;
+  (void)jarg1_;
+  arg1 = *(btManifoldPoint **)&jarg1; 
+  btVector3 local_arg2;
+  gdx_setbtVector3FromVector3(jenv, local_arg2, jarg2);
+  arg2 = &local_arg2;
+  gdxAutoCommitVector3 auto_commit_arg2(jenv, jarg2, &local_arg2);
+  btManifoldPoint_getNormalWorldOnB(arg1,*arg2);
+}
+
+
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_btManifoldPoint_1setNormalWorldOnB(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
+  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
+  btVector3 *arg2 = 0 ;
+  
+  (void)jenv;
+  (void)jcls;
+  (void)jarg1_;
+  arg1 = *(btManifoldPoint **)&jarg1; 
+  btVector3 local_arg2;
+  gdx_setbtVector3FromVector3(jenv, local_arg2, jarg2);
+  arg2 = &local_arg2;
+  gdxAutoCommitVector3 auto_commit_arg2(jenv, jarg2, &local_arg2);
+  btManifoldPoint_setNormalWorldOnB(arg1,(btVector3 const &)*arg2);
+}
+
+
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_btManifoldPoint_1getLateralFrictionDir1(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
+  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
+  btVector3 *arg2 = 0 ;
+  
+  (void)jenv;
+  (void)jcls;
+  (void)jarg1_;
+  arg1 = *(btManifoldPoint **)&jarg1; 
+  btVector3 local_arg2;
+  gdx_setbtVector3FromVector3(jenv, local_arg2, jarg2);
+  arg2 = &local_arg2;
+  gdxAutoCommitVector3 auto_commit_arg2(jenv, jarg2, &local_arg2);
+  btManifoldPoint_getLateralFrictionDir1(arg1,*arg2);
+}
+
+
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_btManifoldPoint_1setLateralFrictionDir1(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
+  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
+  btVector3 *arg2 = 0 ;
+  
+  (void)jenv;
+  (void)jcls;
+  (void)jarg1_;
+  arg1 = *(btManifoldPoint **)&jarg1; 
+  btVector3 local_arg2;
+  gdx_setbtVector3FromVector3(jenv, local_arg2, jarg2);
+  arg2 = &local_arg2;
+  gdxAutoCommitVector3 auto_commit_arg2(jenv, jarg2, &local_arg2);
+  btManifoldPoint_setLateralFrictionDir1(arg1,(btVector3 const &)*arg2);
+}
+
+
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_btManifoldPoint_1getLateralFrictionDir2(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
+  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
+  btVector3 *arg2 = 0 ;
+  
+  (void)jenv;
+  (void)jcls;
+  (void)jarg1_;
+  arg1 = *(btManifoldPoint **)&jarg1; 
+  btVector3 local_arg2;
+  gdx_setbtVector3FromVector3(jenv, local_arg2, jarg2);
+  arg2 = &local_arg2;
+  gdxAutoCommitVector3 auto_commit_arg2(jenv, jarg2, &local_arg2);
+  btManifoldPoint_getLateralFrictionDir2(arg1,*arg2);
+}
+
+
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_btManifoldPoint_1setLateralFrictionDir2(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
+  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
+  btVector3 *arg2 = 0 ;
+  
+  (void)jenv;
+  (void)jcls;
+  (void)jarg1_;
+  arg1 = *(btManifoldPoint **)&jarg1; 
+  btVector3 local_arg2;
+  gdx_setbtVector3FromVector3(jenv, local_arg2, jarg2);
+  arg2 = &local_arg2;
+  gdxAutoCommitVector3 auto_commit_arg2(jenv, jarg2, &local_arg2);
+  btManifoldPoint_setLateralFrictionDir2(arg1,(btVector3 const &)*arg2);
 }
 
 
@@ -43779,7 +43756,7 @@ SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_collision_Colli
 }
 
 
-SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_ContactListener_1onContactAdded_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jobject jarg3, jint jarg4, jint jarg5, jobject jarg6, jint jarg7, jint jarg8) {
+SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_ContactListener_1onContactAdded_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jobject jarg3, jint jarg4, jint jarg5, jobject jarg6, jint jarg7, jint jarg8) {
   jboolean jresult = 0 ;
   ContactListener *arg1 = (ContactListener *) 0 ;
   btManifoldPoint *arg2 = 0 ;
@@ -43794,6 +43771,7 @@ SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_collision_Colli
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
+  (void)jarg2_;
   arg1 = *(ContactListener **)&jarg1; 
   arg2 = *(btManifoldPoint **)&jarg2;
   if (!arg2) {
@@ -43820,7 +43798,7 @@ SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_collision_Colli
 }
 
 
-SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_ContactListener_1onContactAdded_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5, jlong jarg6, jobject jarg6_, jint jarg7, jint jarg8) {
+SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_ContactListener_1onContactAdded_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5, jlong jarg6, jobject jarg6_, jint jarg7, jint jarg8) {
   jboolean jresult = 0 ;
   ContactListener *arg1 = (ContactListener *) 0 ;
   btManifoldPoint *arg2 = 0 ;
@@ -43835,6 +43813,7 @@ SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_collision_Colli
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
+  (void)jarg2_;
   (void)jarg3_;
   (void)jarg6_;
   arg1 = *(ContactListener **)&jarg1; 
@@ -43855,7 +43834,7 @@ SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_collision_Colli
 }
 
 
-SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_ContactListener_1onContactAdded_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jint jarg3, jint jarg4, jint jarg5, jint jarg6, jint jarg7, jint jarg8) {
+SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_ContactListener_1onContactAdded_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5, jint jarg6, jint jarg7, jint jarg8) {
   jboolean jresult = 0 ;
   ContactListener *arg1 = (ContactListener *) 0 ;
   btManifoldPoint *arg2 = 0 ;
@@ -43870,6 +43849,7 @@ SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_collision_Colli
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
+  (void)jarg2_;
   arg1 = *(ContactListener **)&jarg1; 
   arg2 = *(btManifoldPoint **)&jarg2;
   if (!arg2) {
@@ -43888,7 +43868,7 @@ SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_collision_Colli
 }
 
 
-SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_ContactListener_1onContactAdded_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jobject jarg3, jint jarg4, jint jarg5, jboolean jarg6, jobject jarg7, jint jarg8, jint jarg9, jboolean jarg10) {
+SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_ContactListener_1onContactAdded_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jobject jarg3, jint jarg4, jint jarg5, jboolean jarg6, jobject jarg7, jint jarg8, jint jarg9, jboolean jarg10) {
   jboolean jresult = 0 ;
   ContactListener *arg1 = (ContactListener *) 0 ;
   btManifoldPoint *arg2 = 0 ;
@@ -43905,6 +43885,7 @@ SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_collision_Colli
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
+  (void)jarg2_;
   arg1 = *(ContactListener **)&jarg1; 
   arg2 = *(btManifoldPoint **)&jarg2;
   if (!arg2) {
@@ -43933,7 +43914,7 @@ SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_collision_Colli
 }
 
 
-SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_ContactListener_1onContactAdded_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5, jboolean jarg6, jlong jarg7, jobject jarg7_, jint jarg8, jint jarg9, jboolean jarg10) {
+SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_ContactListener_1onContactAdded_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5, jboolean jarg6, jlong jarg7, jobject jarg7_, jint jarg8, jint jarg9, jboolean jarg10) {
   jboolean jresult = 0 ;
   ContactListener *arg1 = (ContactListener *) 0 ;
   btManifoldPoint *arg2 = 0 ;
@@ -43950,6 +43931,7 @@ SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_collision_Colli
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
+  (void)jarg2_;
   (void)jarg3_;
   (void)jarg7_;
   arg1 = *(ContactListener **)&jarg1; 
@@ -43972,7 +43954,7 @@ SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_collision_Colli
 }
 
 
-SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_ContactListener_1onContactAdded_1_1SWIG_15(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jint jarg3, jint jarg4, jint jarg5, jboolean jarg6, jint jarg7, jint jarg8, jint jarg9, jboolean jarg10) {
+SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_ContactListener_1onContactAdded_1_1SWIG_15(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5, jboolean jarg6, jint jarg7, jint jarg8, jint jarg9, jboolean jarg10) {
   jboolean jresult = 0 ;
   ContactListener *arg1 = (ContactListener *) 0 ;
   btManifoldPoint *arg2 = 0 ;
@@ -43989,6 +43971,7 @@ SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_collision_Colli
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
+  (void)jarg2_;
   arg1 = *(ContactListener **)&jarg1; 
   arg2 = *(btManifoldPoint **)&jarg2;
   if (!arg2) {
@@ -44240,7 +44223,7 @@ SWIGEXPORT jboolean JNICALL Java_com_badlogic_gdx_physics_bullet_collision_Colli
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_ContactListener_1onContactProcessed_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_ContactListener_1onContactProcessed_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
   ContactListener *arg1 = (ContactListener *) 0 ;
   btManifoldPoint *arg2 = 0 ;
   btCollisionObject *arg3 = (btCollisionObject *) 0 ;
@@ -44249,6 +44232,7 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_collision_Collision
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
+  (void)jarg2_;
   (void)jarg3_;
   (void)jarg4_;
   arg1 = *(ContactListener **)&jarg1; 
@@ -44263,7 +44247,7 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_collision_Collision
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_ContactListener_1onContactProcessed_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jint jarg3, jint jarg4) {
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_ContactListener_1onContactProcessed_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
   ContactListener *arg1 = (ContactListener *) 0 ;
   btManifoldPoint *arg2 = 0 ;
   int arg3 ;
@@ -44272,6 +44256,7 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_collision_Collision
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
+  (void)jarg2_;
   arg1 = *(ContactListener **)&jarg1; 
   arg2 = *(btManifoldPoint **)&jarg2;
   if (!arg2) {
@@ -44284,7 +44269,7 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_collision_Collision
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_ContactListener_1onContactProcessed_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jlong jarg3, jobject jarg3_, jboolean jarg4, jlong jarg5, jobject jarg5_, jboolean jarg6) {
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_ContactListener_1onContactProcessed_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jboolean jarg4, jlong jarg5, jobject jarg5_, jboolean jarg6) {
   ContactListener *arg1 = (ContactListener *) 0 ;
   btManifoldPoint *arg2 = 0 ;
   btCollisionObject *arg3 = (btCollisionObject *) 0 ;
@@ -44295,6 +44280,7 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_collision_Collision
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
+  (void)jarg2_;
   (void)jarg3_;
   (void)jarg5_;
   arg1 = *(ContactListener **)&jarg1; 
@@ -44311,7 +44297,7 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_collision_Collision
 }
 
 
-SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_ContactListener_1onContactProcessed_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jint jarg3, jboolean jarg4, jint jarg5, jboolean jarg6) {
+SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_collision_CollisionJNI_ContactListener_1onContactProcessed_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jboolean jarg4, jint jarg5, jboolean jarg6) {
   ContactListener *arg1 = (ContactListener *) 0 ;
   btManifoldPoint *arg2 = 0 ;
   int arg3 ;
@@ -44322,6 +44308,7 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_collision_Collision
   (void)jenv;
   (void)jcls;
   (void)jarg1_;
+  (void)jarg2_;
   arg1 = *(ContactListener **)&jarg1; 
   arg2 = *(btManifoldPoint **)&jarg2;
   if (!arg2) {
@@ -46021,22 +46008,22 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_collision_Collision
       "SwigDirector_CustomCollisionDispatcher_needsResponse", "(Lcom/badlogic/gdx/physics/bullet/collision/CustomCollisionDispatcher;JJ)Z" 
     },
     {
-      "SwigDirector_ContactListener_onContactAdded__SWIG_0", "(Lcom/badlogic/gdx/physics/bullet/collision/ContactListener;Lcom/badlogic/gdx/physics/bullet/collision/btManifoldPoint;Lcom/badlogic/gdx/physics/bullet/collision/btCollisionObjectWrapper;IILcom/badlogic/gdx/physics/bullet/collision/btCollisionObjectWrapper;II)Z" 
+      "SwigDirector_ContactListener_onContactAdded__SWIG_0", "(Lcom/badlogic/gdx/physics/bullet/collision/ContactListener;JLcom/badlogic/gdx/physics/bullet/collision/btCollisionObjectWrapper;IILcom/badlogic/gdx/physics/bullet/collision/btCollisionObjectWrapper;II)Z" 
     },
     {
-      "SwigDirector_ContactListener_onContactAdded__SWIG_1", "(Lcom/badlogic/gdx/physics/bullet/collision/ContactListener;Lcom/badlogic/gdx/physics/bullet/collision/btManifoldPoint;JIIJII)Z" 
+      "SwigDirector_ContactListener_onContactAdded__SWIG_1", "(Lcom/badlogic/gdx/physics/bullet/collision/ContactListener;JJIIJII)Z" 
     },
     {
-      "SwigDirector_ContactListener_onContactAdded__SWIG_2", "(Lcom/badlogic/gdx/physics/bullet/collision/ContactListener;Lcom/badlogic/gdx/physics/bullet/collision/btManifoldPoint;IIIIII)Z" 
+      "SwigDirector_ContactListener_onContactAdded__SWIG_2", "(Lcom/badlogic/gdx/physics/bullet/collision/ContactListener;JIIIIII)Z" 
     },
     {
-      "SwigDirector_ContactListener_onContactAdded__SWIG_3", "(Lcom/badlogic/gdx/physics/bullet/collision/ContactListener;Lcom/badlogic/gdx/physics/bullet/collision/btManifoldPoint;Lcom/badlogic/gdx/physics/bullet/collision/btCollisionObjectWrapper;IIZLcom/badlogic/gdx/physics/bullet/collision/btCollisionObjectWrapper;IIZ)Z" 
+      "SwigDirector_ContactListener_onContactAdded__SWIG_3", "(Lcom/badlogic/gdx/physics/bullet/collision/ContactListener;JLcom/badlogic/gdx/physics/bullet/collision/btCollisionObjectWrapper;IIZLcom/badlogic/gdx/physics/bullet/collision/btCollisionObjectWrapper;IIZ)Z" 
     },
     {
-      "SwigDirector_ContactListener_onContactAdded__SWIG_4", "(Lcom/badlogic/gdx/physics/bullet/collision/ContactListener;Lcom/badlogic/gdx/physics/bullet/collision/btManifoldPoint;JIIZJIIZ)Z" 
+      "SwigDirector_ContactListener_onContactAdded__SWIG_4", "(Lcom/badlogic/gdx/physics/bullet/collision/ContactListener;JJIIZJIIZ)Z" 
     },
     {
-      "SwigDirector_ContactListener_onContactAdded__SWIG_5", "(Lcom/badlogic/gdx/physics/bullet/collision/ContactListener;Lcom/badlogic/gdx/physics/bullet/collision/btManifoldPoint;IIIZIIIZ)Z" 
+      "SwigDirector_ContactListener_onContactAdded__SWIG_5", "(Lcom/badlogic/gdx/physics/bullet/collision/ContactListener;JIIIZIIIZ)Z" 
     },
     {
       "SwigDirector_ContactListener_onContactAdded__SWIG_6", "(Lcom/badlogic/gdx/physics/bullet/collision/ContactListener;Lcom/badlogic/gdx/physics/bullet/collision/btCollisionObjectWrapper;IILcom/badlogic/gdx/physics/bullet/collision/btCollisionObjectWrapper;II)Z" 
@@ -46057,16 +46044,16 @@ SWIGEXPORT void JNICALL Java_com_badlogic_gdx_physics_bullet_collision_Collision
       "SwigDirector_ContactListener_onContactAdded__SWIG_11", "(Lcom/badlogic/gdx/physics/bullet/collision/ContactListener;IIIZIIIZ)Z" 
     },
     {
-      "SwigDirector_ContactListener_onContactProcessed__SWIG_0", "(Lcom/badlogic/gdx/physics/bullet/collision/ContactListener;Lcom/badlogic/gdx/physics/bullet/collision/btManifoldPoint;JJ)V" 
+      "SwigDirector_ContactListener_onContactProcessed__SWIG_0", "(Lcom/badlogic/gdx/physics/bullet/collision/ContactListener;JJJ)V" 
     },
     {
-      "SwigDirector_ContactListener_onContactProcessed__SWIG_1", "(Lcom/badlogic/gdx/physics/bullet/collision/ContactListener;Lcom/badlogic/gdx/physics/bullet/collision/btManifoldPoint;II)V" 
+      "SwigDirector_ContactListener_onContactProcessed__SWIG_1", "(Lcom/badlogic/gdx/physics/bullet/collision/ContactListener;JII)V" 
     },
     {
-      "SwigDirector_ContactListener_onContactProcessed__SWIG_2", "(Lcom/badlogic/gdx/physics/bullet/collision/ContactListener;Lcom/badlogic/gdx/physics/bullet/collision/btManifoldPoint;JZJZ)V" 
+      "SwigDirector_ContactListener_onContactProcessed__SWIG_2", "(Lcom/badlogic/gdx/physics/bullet/collision/ContactListener;JJZJZ)V" 
     },
     {
-      "SwigDirector_ContactListener_onContactProcessed__SWIG_3", "(Lcom/badlogic/gdx/physics/bullet/collision/ContactListener;Lcom/badlogic/gdx/physics/bullet/collision/btManifoldPoint;IZIZ)V" 
+      "SwigDirector_ContactListener_onContactProcessed__SWIG_3", "(Lcom/badlogic/gdx/physics/bullet/collision/ContactListener;JIZIZ)V" 
     },
     {
       "SwigDirector_ContactListener_onContactProcessed__SWIG_4", "(Lcom/badlogic/gdx/physics/bullet/collision/ContactListener;JJ)V" 
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/collision_wrap.h b/extensions/gdx-bullet/jni/swig-src/collision/collision_wrap.h
index b7f7002..ef58bd9 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/collision_wrap.h
+++ b/extensions/gdx-bullet/jni/swig-src/collision/collision_wrap.h
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * This file is not intended to be easily readable and contains a number of
  * coding conventions designed to improve portability and efficiency. Do not make
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/AllHitsRayResultCallback.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/AllHitsRayResultCallback.java
index 2c96e00..76a3dd7 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/AllHitsRayResultCallback.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/AllHitsRayResultCallback.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/BroadphaseNativeTypes.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/BroadphaseNativeTypes.java
index 497619a..9c4b0de 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/BroadphaseNativeTypes.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/BroadphaseNativeTypes.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/ClosestConvexResultCallback.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/ClosestConvexResultCallback.java
index 162780d..aa3ad7a 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/ClosestConvexResultCallback.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/ClosestConvexResultCallback.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/ClosestNotMeConvexResultCallback.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/ClosestNotMeConvexResultCallback.java
index a5f6aa9..8cbb4cf 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/ClosestNotMeConvexResultCallback.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/ClosestNotMeConvexResultCallback.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/ClosestNotMeRayResultCallback.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/ClosestNotMeRayResultCallback.java
index 26118c2..117a224 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/ClosestNotMeRayResultCallback.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/ClosestNotMeRayResultCallback.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/ClosestRayResultCallback.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/ClosestRayResultCallback.java
index 04aa8ea..b5ad945 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/ClosestRayResultCallback.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/ClosestRayResultCallback.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/Collision.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/Collision.java
index ad42865..7e1dce1 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/Collision.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/Collision.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/CollisionConstants.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/CollisionConstants.java
index 28445c4..784385a 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/CollisionConstants.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/CollisionConstants.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/CollisionJNI.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/CollisionJNI.java
index 31e9ded..11a15f2 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/CollisionJNI.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/CollisionJNI.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
@@ -2169,16 +2169,6 @@ public class CollisionJNI {
   public final static native void delete_btConstraintRow(long jarg1);
   public final static native long new_btManifoldPoint__SWIG_0();
   public final static native long new_btManifoldPoint__SWIG_1(Vector3 jarg1, Vector3 jarg2, Vector3 jarg3, float jarg4);
-  public final static native void btManifoldPoint_localPointA_set(long jarg1, btManifoldPoint jarg1_, long jarg2, btVector3 jarg2_);
-  public final static native long btManifoldPoint_localPointA_get(long jarg1, btManifoldPoint jarg1_);
-  public final static native void btManifoldPoint_localPointB_set(long jarg1, btManifoldPoint jarg1_, long jarg2, btVector3 jarg2_);
-  public final static native long btManifoldPoint_localPointB_get(long jarg1, btManifoldPoint jarg1_);
-  public final static native void btManifoldPoint_positionWorldOnB_set(long jarg1, btManifoldPoint jarg1_, long jarg2, btVector3 jarg2_);
-  public final static native long btManifoldPoint_positionWorldOnB_get(long jarg1, btManifoldPoint jarg1_);
-  public final static native void btManifoldPoint_positionWorldOnA_set(long jarg1, btManifoldPoint jarg1_, long jarg2, btVector3 jarg2_);
-  public final static native long btManifoldPoint_positionWorldOnA_get(long jarg1, btManifoldPoint jarg1_);
-  public final static native void btManifoldPoint_normalWorldOnB_set(long jarg1, btManifoldPoint jarg1_, long jarg2, btVector3 jarg2_);
-  public final static native long btManifoldPoint_normalWorldOnB_get(long jarg1, btManifoldPoint jarg1_);
   public final static native void btManifoldPoint_distance1_set(long jarg1, btManifoldPoint jarg1_, float jarg2);
   public final static native float btManifoldPoint_distance1_get(long jarg1, btManifoldPoint jarg1_);
   public final static native void btManifoldPoint_combinedFriction_set(long jarg1, btManifoldPoint jarg1_, float jarg2);
@@ -2215,14 +2205,24 @@ public class CollisionJNI {
   public final static native float btManifoldPoint_contactCFM2_get(long jarg1, btManifoldPoint jarg1_);
   public final static native void btManifoldPoint_lifeTime_set(long jarg1, btManifoldPoint jarg1_, int jarg2);
   public final static native int btManifoldPoint_lifeTime_get(long jarg1, btManifoldPoint jarg1_);
-  public final static native void btManifoldPoint_lateralFrictionDir1_set(long jarg1, btManifoldPoint jarg1_, long jarg2, btVector3 jarg2_);
-  public final static native long btManifoldPoint_lateralFrictionDir1_get(long jarg1, btManifoldPoint jarg1_);
-  public final static native void btManifoldPoint_lateralFrictionDir2_set(long jarg1, btManifoldPoint jarg1_, long jarg2, btVector3 jarg2_);
-  public final static native long btManifoldPoint_lateralFrictionDir2_get(long jarg1, btManifoldPoint jarg1_);
   public final static native float btManifoldPoint_getDistance(long jarg1, btManifoldPoint jarg1_);
   public final static native void btManifoldPoint_setDistance(long jarg1, btManifoldPoint jarg1_, float jarg2);
   public final static native int btManifoldPoint_getUserValue(long jarg1, btManifoldPoint jarg1_);
   public final static native void btManifoldPoint_setUserValue(long jarg1, btManifoldPoint jarg1_, int jarg2);
+  public final static native void btManifoldPoint_getLocalPointA(long jarg1, btManifoldPoint jarg1_, Vector3 jarg2);
+  public final static native void btManifoldPoint_setLocalPointA(long jarg1, btManifoldPoint jarg1_, Vector3 jarg2);
+  public final static native void btManifoldPoint_getLocalPointB(long jarg1, btManifoldPoint jarg1_, Vector3 jarg2);
+  public final static native void btManifoldPoint_setLocalPointB(long jarg1, btManifoldPoint jarg1_, Vector3 jarg2);
+  public final static native void btManifoldPoint_getPositionWorldOnA(long jarg1, btManifoldPoint jarg1_, Vector3 jarg2);
+  public final static native void btManifoldPoint_setPositionWorldOnA(long jarg1, btManifoldPoint jarg1_, Vector3 jarg2);
+  public final static native void btManifoldPoint_getPositionWorldOnB(long jarg1, btManifoldPoint jarg1_, Vector3 jarg2);
+  public final static native void btManifoldPoint_setPositionWorldOnB(long jarg1, btManifoldPoint jarg1_, Vector3 jarg2);
+  public final static native void btManifoldPoint_getNormalWorldOnB(long jarg1, btManifoldPoint jarg1_, Vector3 jarg2);
+  public final static native void btManifoldPoint_setNormalWorldOnB(long jarg1, btManifoldPoint jarg1_, Vector3 jarg2);
+  public final static native void btManifoldPoint_getLateralFrictionDir1(long jarg1, btManifoldPoint jarg1_, Vector3 jarg2);
+  public final static native void btManifoldPoint_setLateralFrictionDir1(long jarg1, btManifoldPoint jarg1_, Vector3 jarg2);
+  public final static native void btManifoldPoint_getLateralFrictionDir2(long jarg1, btManifoldPoint jarg1_, Vector3 jarg2);
+  public final static native void btManifoldPoint_setLateralFrictionDir2(long jarg1, btManifoldPoint jarg1_, Vector3 jarg2);
   public final static native void delete_btManifoldPoint(long jarg1);
   public final static native long new_btContinuousConvexCollision__SWIG_0(long jarg1, btConvexShape jarg1_, long jarg2, btConvexShape jarg2_, long jarg3, btVoronoiSimplexSolver jarg3_, long jarg4, btConvexPenetrationDepthSolver jarg4_);
   public final static native long new_btContinuousConvexCollision__SWIG_1(long jarg1, btConvexShape jarg1_, long jarg2, btStaticPlaneShape jarg2_);
@@ -2408,12 +2408,12 @@ public class CollisionJNI {
   public final static native void ContactListener_enableOnAdded(long jarg1, ContactListener jarg1_);
   public final static native void ContactListener_disableOnAdded(long jarg1, ContactListener jarg1_);
   public final static native boolean ContactListener_isOnAddedEnabled(long jarg1, ContactListener jarg1_);
-  public final static native boolean ContactListener_onContactAdded__SWIG_0(long jarg1, ContactListener jarg1_, btManifoldPoint jarg2, btCollisionObjectWrapper jarg3, int jarg4, int jarg5, btCollisionObjectWrapper jarg6, int jarg7, int jarg8);
-  public final static native boolean ContactListener_onContactAdded__SWIG_1(long jarg1, ContactListener jarg1_, btManifoldPoint jarg2, long jarg3, btCollisionObject jarg3_, int jarg4, int jarg5, long jarg6, btCollisionObject jarg6_, int jarg7, int jarg8);
-  public final static native boolean ContactListener_onContactAdded__SWIG_2(long jarg1, ContactListener jarg1_, btManifoldPoint jarg2, int jarg3, int jarg4, int jarg5, int jarg6, int jarg7, int jarg8);
-  public final static native boolean ContactListener_onContactAdded__SWIG_3(long jarg1, ContactListener jarg1_, btManifoldPoint jarg2, btCollisionObjectWrapper jarg3, int jarg4, int jarg5, boolean jarg6, btCollisionObjectWrapper jarg7, int jarg8, int jarg9, boolean jarg10);
-  public final static native boolean ContactListener_onContactAdded__SWIG_4(long jarg1, ContactListener jarg1_, btManifoldPoint jarg2, long jarg3, btCollisionObject jarg3_, int jarg4, int jarg5, boolean jarg6, long jarg7, btCollisionObject jarg7_, int jarg8, int jarg9, boolean jarg10);
-  public final static native boolean ContactListener_onContactAdded__SWIG_5(long jarg1, ContactListener jarg1_, btManifoldPoint jarg2, int jarg3, int jarg4, int jarg5, boolean jarg6, int jarg7, int jarg8, int jarg9, boolean jarg10);
+  public final static native boolean ContactListener_onContactAdded__SWIG_0(long jarg1, ContactListener jarg1_, long jarg2, btManifoldPoint jarg2_, btCollisionObjectWrapper jarg3, int jarg4, int jarg5, btCollisionObjectWrapper jarg6, int jarg7, int jarg8);
+  public final static native boolean ContactListener_onContactAdded__SWIG_1(long jarg1, ContactListener jarg1_, long jarg2, btManifoldPoint jarg2_, long jarg3, btCollisionObject jarg3_, int jarg4, int jarg5, long jarg6, btCollisionObject jarg6_, int jarg7, int jarg8);
+  public final static native boolean ContactListener_onContactAdded__SWIG_2(long jarg1, ContactListener jarg1_, long jarg2, btManifoldPoint jarg2_, int jarg3, int jarg4, int jarg5, int jarg6, int jarg7, int jarg8);
+  public final static native boolean ContactListener_onContactAdded__SWIG_3(long jarg1, ContactListener jarg1_, long jarg2, btManifoldPoint jarg2_, btCollisionObjectWrapper jarg3, int jarg4, int jarg5, boolean jarg6, btCollisionObjectWrapper jarg7, int jarg8, int jarg9, boolean jarg10);
+  public final static native boolean ContactListener_onContactAdded__SWIG_4(long jarg1, ContactListener jarg1_, long jarg2, btManifoldPoint jarg2_, long jarg3, btCollisionObject jarg3_, int jarg4, int jarg5, boolean jarg6, long jarg7, btCollisionObject jarg7_, int jarg8, int jarg9, boolean jarg10);
+  public final static native boolean ContactListener_onContactAdded__SWIG_5(long jarg1, ContactListener jarg1_, long jarg2, btManifoldPoint jarg2_, int jarg3, int jarg4, int jarg5, boolean jarg6, int jarg7, int jarg8, int jarg9, boolean jarg10);
   public final static native boolean ContactListener_onContactAdded__SWIG_6(long jarg1, ContactListener jarg1_, btCollisionObjectWrapper jarg2, int jarg3, int jarg4, btCollisionObjectWrapper jarg5, int jarg6, int jarg7);
   public final static native boolean ContactListener_onContactAdded__SWIG_7(long jarg1, ContactListener jarg1_, long jarg2, btCollisionObject jarg2_, int jarg3, int jarg4, long jarg5, btCollisionObject jarg5_, int jarg6, int jarg7);
   public final static native boolean ContactListener_onContactAdded__SWIG_8(long jarg1, ContactListener jarg1_, int jarg2, int jarg3, int jarg4, int jarg5, int jarg6, int jarg7);
@@ -2423,10 +2423,10 @@ public class CollisionJNI {
   public final static native void ContactListener_enableOnProcessed(long jarg1, ContactListener jarg1_);
   public final static native void ContactListener_disableOnProcessed(long jarg1, ContactListener jarg1_);
   public final static native boolean ContactListener_isOnProcessedEnabled(long jarg1, ContactListener jarg1_);
-  public final static native void ContactListener_onContactProcessed__SWIG_0(long jarg1, ContactListener jarg1_, btManifoldPoint jarg2, long jarg3, btCollisionObject jarg3_, long jarg4, btCollisionObject jarg4_);
-  public final static native void ContactListener_onContactProcessed__SWIG_1(long jarg1, ContactListener jarg1_, btManifoldPoint jarg2, int jarg3, int jarg4);
-  public final static native void ContactListener_onContactProcessed__SWIG_2(long jarg1, ContactListener jarg1_, btManifoldPoint jarg2, long jarg3, btCollisionObject jarg3_, boolean jarg4, long jarg5, btCollisionObject jarg5_, boolean jarg6);
-  public final static native void ContactListener_onContactProcessed__SWIG_3(long jarg1, ContactListener jarg1_, btManifoldPoint jarg2, int jarg3, boolean jarg4, int jarg5, boolean jarg6);
+  public final static native void ContactListener_onContactProcessed__SWIG_0(long jarg1, ContactListener jarg1_, long jarg2, btManifoldPoint jarg2_, long jarg3, btCollisionObject jarg3_, long jarg4, btCollisionObject jarg4_);
+  public final static native void ContactListener_onContactProcessed__SWIG_1(long jarg1, ContactListener jarg1_, long jarg2, btManifoldPoint jarg2_, int jarg3, int jarg4);
+  public final static native void ContactListener_onContactProcessed__SWIG_2(long jarg1, ContactListener jarg1_, long jarg2, btManifoldPoint jarg2_, long jarg3, btCollisionObject jarg3_, boolean jarg4, long jarg5, btCollisionObject jarg5_, boolean jarg6);
+  public final static native void ContactListener_onContactProcessed__SWIG_3(long jarg1, ContactListener jarg1_, long jarg2, btManifoldPoint jarg2_, int jarg3, boolean jarg4, int jarg5, boolean jarg6);
   public final static native void ContactListener_onContactProcessed__SWIG_4(long jarg1, ContactListener jarg1_, long jarg2, btCollisionObject jarg2_, long jarg3, btCollisionObject jarg3_);
   public final static native void ContactListener_onContactProcessed__SWIG_5(long jarg1, ContactListener jarg1_, int jarg2, int jarg3);
   public final static native void ContactListener_onContactProcessed__SWIG_6(long jarg1, ContactListener jarg1_, long jarg2, btCollisionObject jarg2_, boolean jarg3, long jarg4, btCollisionObject jarg4_, boolean jarg5);
@@ -2675,23 +2675,23 @@ public class CollisionJNI {
   public static boolean SwigDirector_CustomCollisionDispatcher_needsResponse(CustomCollisionDispatcher self, long body0, long body1) {
     return self.needsResponse(btCollisionObject.getInstance(body0, false), btCollisionObject.getInstance(body1, false));
   }
-  public static boolean SwigDirector_ContactListener_onContactAdded__SWIG_0(ContactListener self, btManifoldPoint cp, btCollisionObjectWrapper colObj0Wrap, int partId0, int index0, btCollisionObjectWrapper colObj1Wrap, int partId1, int index1) {
-    return self.onContactAdded(cp, colObj0Wrap, partId0, index0, colObj1Wrap, partId1, index1);
+  public static boolean SwigDirector_ContactListener_onContactAdded__SWIG_0(ContactListener self, long cp, btCollisionObjectWrapper colObj0Wrap, int partId0, int index0, btCollisionObjectWrapper colObj1Wrap, int partId1, int index1) {
+    return self.onContactAdded(btManifoldPoint.obtainForArgument(cp, false), colObj0Wrap, partId0, index0, colObj1Wrap, partId1, index1);
   }
-  public static boolean SwigDirector_ContactListener_onContactAdded__SWIG_1(ContactListener self, btManifoldPoint cp, long colObj0, int partId0, int index0, long colObj1, int partId1, int index1) {
-    return self.onContactAdded(cp, btCollisionObject.getInstance(colObj0, false), partId0, index0, btCollisionObject.getInstance(colObj1, false), partId1, index1);
+  public static boolean SwigDirector_ContactListener_onContactAdded__SWIG_1(ContactListener self, long cp, long colObj0, int partId0, int index0, long colObj1, int partId1, int index1) {
+    return self.onContactAdded(btManifoldPoint.obtainForArgument(cp, false), btCollisionObject.getInstance(colObj0, false), partId0, index0, btCollisionObject.getInstance(colObj1, false), partId1, index1);
   }
-  public static boolean SwigDirector_ContactListener_onContactAdded__SWIG_2(ContactListener self, btManifoldPoint cp, int userValue0, int partId0, int index0, int userValue1, int partId1, int index1) {
-    return self.onContactAdded(cp, userValue0, partId0, index0, userValue1, partId1, index1);
+  public static boolean SwigDirector_ContactListener_onContactAdded__SWIG_2(ContactListener self, long cp, int userValue0, int partId0, int index0, int userValue1, int partId1, int index1) {
+    return self.onContactAdded(btManifoldPoint.obtainForArgument(cp, false), userValue0, partId0, index0, userValue1, partId1, index1);
   }
-  public static boolean SwigDirector_ContactListener_onContactAdded__SWIG_3(ContactListener self, btManifoldPoint cp, btCollisionObjectWrapper colObj0Wrap, int partId0, int index0, boolean match0, btCollisionObjectWrapper colObj1Wrap, int partId1, int index1, boolean match1) {
-    return self.onContactAdded(cp, colObj0Wrap, partId0, index0, match0, colObj1Wrap, partId1, index1, match1);
+  public static boolean SwigDirector_ContactListener_onContactAdded__SWIG_3(ContactListener self, long cp, btCollisionObjectWrapper colObj0Wrap, int partId0, int index0, boolean match0, btCollisionObjectWrapper colObj1Wrap, int partId1, int index1, boolean match1) {
+    return self.onContactAdded(btManifoldPoint.obtainForArgument(cp, false), colObj0Wrap, partId0, index0, match0, colObj1Wrap, partId1, index1, match1);
   }
-  public static boolean SwigDirector_ContactListener_onContactAdded__SWIG_4(ContactListener self, btManifoldPoint cp, long colObj0, int partId0, int index0, boolean match0, long colObj1, int partId1, int index1, boolean match1) {
-    return self.onContactAdded(cp, btCollisionObject.getInstance(colObj0, false), partId0, index0, match0, btCollisionObject.getInstance(colObj1, false), partId1, index1, match1);
+  public static boolean SwigDirector_ContactListener_onContactAdded__SWIG_4(ContactListener self, long cp, long colObj0, int partId0, int index0, boolean match0, long colObj1, int partId1, int index1, boolean match1) {
+    return self.onContactAdded(btManifoldPoint.obtainForArgument(cp, false), btCollisionObject.getInstance(colObj0, false), partId0, index0, match0, btCollisionObject.getInstance(colObj1, false), partId1, index1, match1);
   }
-  public static boolean SwigDirector_ContactListener_onContactAdded__SWIG_5(ContactListener self, btManifoldPoint cp, int userValue0, int partId0, int index0, boolean match0, int userValue1, int partId1, int index1, boolean match1) {
-    return self.onContactAdded(cp, userValue0, partId0, index0, match0, userValue1, partId1, index1, match1);
+  public static boolean SwigDirector_ContactListener_onContactAdded__SWIG_5(ContactListener self, long cp, int userValue0, int partId0, int index0, boolean match0, int userValue1, int partId1, int index1, boolean match1) {
+    return self.onContactAdded(btManifoldPoint.obtainForArgument(cp, false), userValue0, partId0, index0, match0, userValue1, partId1, index1, match1);
   }
   public static boolean SwigDirector_ContactListener_onContactAdded__SWIG_6(ContactListener self, btCollisionObjectWrapper colObj0Wrap, int partId0, int index0, btCollisionObjectWrapper colObj1Wrap, int partId1, int index1) {
     return self.onContactAdded(colObj0Wrap, partId0, index0, colObj1Wrap, partId1, index1);
@@ -2711,17 +2711,17 @@ public class CollisionJNI {
   public static boolean SwigDirector_ContactListener_onContactAdded__SWIG_11(ContactListener self, int userValue0, int partId0, int index0, boolean match0, int userValue1, int partId1, int index1, boolean match1) {
     return self.onContactAdded(userValue0, partId0, index0, match0, userValue1, partId1, index1, match1);
   }
-  public static void SwigDirector_ContactListener_onContactProcessed__SWIG_0(ContactListener self, btManifoldPoint cp, long colObj0, long colObj1) {
-    self.onContactProcessed(cp, btCollisionObject.getInstance(colObj0, false), btCollisionObject.getInstance(colObj1, false));
+  public static void SwigDirector_ContactListener_onContactProcessed__SWIG_0(ContactListener self, long cp, long colObj0, long colObj1) {
+    self.onContactProcessed(btManifoldPoint.obtainForArgument(cp, false), btCollisionObject.getInstance(colObj0, false), btCollisionObject.getInstance(colObj1, false));
   }
-  public static void SwigDirector_ContactListener_onContactProcessed__SWIG_1(ContactListener self, btManifoldPoint cp, int userValue0, int userValue1) {
-    self.onContactProcessed(cp, userValue0, userValue1);
+  public static void SwigDirector_ContactListener_onContactProcessed__SWIG_1(ContactListener self, long cp, int userValue0, int userValue1) {
+    self.onContactProcessed(btManifoldPoint.obtainForArgument(cp, false), userValue0, userValue1);
   }
-  public static void SwigDirector_ContactListener_onContactProcessed__SWIG_2(ContactListener self, btManifoldPoint cp, long colObj0, boolean match0, long colObj1, boolean match1) {
-    self.onContactProcessed(cp, btCollisionObject.getInstance(colObj0, false), match0, btCollisionObject.getInstance(colObj1, false), match1);
+  public static void SwigDirector_ContactListener_onContactProcessed__SWIG_2(ContactListener self, long cp, long colObj0, boolean match0, long colObj1, boolean match1) {
+    self.onContactProcessed(btManifoldPoint.obtainForArgument(cp, false), btCollisionObject.getInstance(colObj0, false), match0, btCollisionObject.getInstance(colObj1, false), match1);
   }
-  public static void SwigDirector_ContactListener_onContactProcessed__SWIG_3(ContactListener self, btManifoldPoint cp, int userValue0, boolean match0, int userValue1, boolean match1) {
-    self.onContactProcessed(cp, userValue0, match0, userValue1, match1);
+  public static void SwigDirector_ContactListener_onContactProcessed__SWIG_3(ContactListener self, long cp, int userValue0, boolean match0, int userValue1, boolean match1) {
+    self.onContactProcessed(btManifoldPoint.obtainForArgument(cp, false), userValue0, match0, userValue1, match1);
   }
   public static void SwigDirector_ContactListener_onContactProcessed__SWIG_4(ContactListener self, long colObj0, long colObj1) {
     self.onContactProcessed(btCollisionObject.getInstance(colObj0, false), btCollisionObject.getInstance(colObj1, false));
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/CollisionObjectWrapper.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/CollisionObjectWrapper.java
index c80f458..c78d483 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/CollisionObjectWrapper.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/CollisionObjectWrapper.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/ContactCache.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/ContactCache.java
index e330e2e..9ecddca 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/ContactCache.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/ContactCache.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/ContactCallbackEvent.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/ContactCallbackEvent.java
index 6c2ff61..4dae63b 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/ContactCallbackEvent.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/ContactCallbackEvent.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/ContactListener.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/ContactListener.java
index 459f40f..5ff639e 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/ContactListener.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/ContactListener.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
@@ -106,27 +106,27 @@ public class ContactListener extends BulletBase {
   }
 
   public boolean onContactAdded(btManifoldPoint cp, btCollisionObjectWrapper colObj0Wrap, int partId0, int index0, btCollisionObjectWrapper colObj1Wrap, int partId1, int index1) {
-    return CollisionJNI.ContactListener_onContactAdded__SWIG_0(swigCPtr, this, cp, colObj0Wrap, partId0, index0, colObj1Wrap, partId1, index1);
+    return CollisionJNI.ContactListener_onContactAdded__SWIG_0(swigCPtr, this, btManifoldPoint.getCPtr(cp), cp, colObj0Wrap, partId0, index0, colObj1Wrap, partId1, index1);
   }
 
   public boolean onContactAdded(btManifoldPoint cp, btCollisionObject colObj0, int partId0, int index0, btCollisionObject colObj1, int partId1, int index1) {
-    return CollisionJNI.ContactListener_onContactAdded__SWIG_1(swigCPtr, this, cp, btCollisionObject.getCPtr(colObj0), colObj0, partId0, index0, btCollisionObject.getCPtr(colObj1), colObj1, partId1, index1);
+    return CollisionJNI.ContactListener_onContactAdded__SWIG_1(swigCPtr, this, btManifoldPoint.getCPtr(cp), cp, btCollisionObject.getCPtr(colObj0), colObj0, partId0, index0, btCollisionObject.getCPtr(colObj1), colObj1, partId1, index1);
   }
 
   public boolean onContactAdded(btManifoldPoint cp, int userValue0, int partId0, int index0, int userValue1, int partId1, int index1) {
-    return CollisionJNI.ContactListener_onContactAdded__SWIG_2(swigCPtr, this, cp, userValue0, partId0, index0, userValue1, partId1, index1);
+    return CollisionJNI.ContactListener_onContactAdded__SWIG_2(swigCPtr, this, btManifoldPoint.getCPtr(cp), cp, userValue0, partId0, index0, userValue1, partId1, index1);
   }
 
   public boolean onContactAdded(btManifoldPoint cp, btCollisionObjectWrapper colObj0Wrap, int partId0, int index0, boolean match0, btCollisionObjectWrapper colObj1Wrap, int partId1, int index1, boolean match1) {
-    return CollisionJNI.ContactListener_onContactAdded__SWIG_3(swigCPtr, this, cp, colObj0Wrap, partId0, index0, match0, colObj1Wrap, partId1, index1, match1);
+    return CollisionJNI.ContactListener_onContactAdded__SWIG_3(swigCPtr, this, btManifoldPoint.getCPtr(cp), cp, colObj0Wrap, partId0, index0, match0, colObj1Wrap, partId1, index1, match1);
   }
 
   public boolean onContactAdded(btManifoldPoint cp, btCollisionObject colObj0, int partId0, int index0, boolean match0, btCollisionObject colObj1, int partId1, int index1, boolean match1) {
-    return CollisionJNI.ContactListener_onContactAdded__SWIG_4(swigCPtr, this, cp, btCollisionObject.getCPtr(colObj0), colObj0, partId0, index0, match0, btCollisionObject.getCPtr(colObj1), colObj1, partId1, index1, match1);
+    return CollisionJNI.ContactListener_onContactAdded__SWIG_4(swigCPtr, this, btManifoldPoint.getCPtr(cp), cp, btCollisionObject.getCPtr(colObj0), colObj0, partId0, index0, match0, btCollisionObject.getCPtr(colObj1), colObj1, partId1, index1, match1);
   }
 
   public boolean onContactAdded(btManifoldPoint cp, int userValue0, int partId0, int index0, boolean match0, int userValue1, int partId1, int index1, boolean match1) {
-    return CollisionJNI.ContactListener_onContactAdded__SWIG_5(swigCPtr, this, cp, userValue0, partId0, index0, match0, userValue1, partId1, index1, match1);
+    return CollisionJNI.ContactListener_onContactAdded__SWIG_5(swigCPtr, this, btManifoldPoint.getCPtr(cp), cp, userValue0, partId0, index0, match0, userValue1, partId1, index1, match1);
   }
 
   public boolean onContactAdded(btCollisionObjectWrapper colObj0Wrap, int partId0, int index0, btCollisionObjectWrapper colObj1Wrap, int partId1, int index1) {
@@ -166,19 +166,19 @@ public class ContactListener extends BulletBase {
   }
 
   public void onContactProcessed(btManifoldPoint cp, btCollisionObject colObj0, btCollisionObject colObj1) {
-    CollisionJNI.ContactListener_onContactProcessed__SWIG_0(swigCPtr, this, cp, btCollisionObject.getCPtr(colObj0), colObj0, btCollisionObject.getCPtr(colObj1), colObj1);
+    CollisionJNI.ContactListener_onContactProcessed__SWIG_0(swigCPtr, this, btManifoldPoint.getCPtr(cp), cp, btCollisionObject.getCPtr(colObj0), colObj0, btCollisionObject.getCPtr(colObj1), colObj1);
   }
 
   public void onContactProcessed(btManifoldPoint cp, int userValue0, int userValue1) {
-    CollisionJNI.ContactListener_onContactProcessed__SWIG_1(swigCPtr, this, cp, userValue0, userValue1);
+    CollisionJNI.ContactListener_onContactProcessed__SWIG_1(swigCPtr, this, btManifoldPoint.getCPtr(cp), cp, userValue0, userValue1);
   }
 
   public void onContactProcessed(btManifoldPoint cp, btCollisionObject colObj0, boolean match0, btCollisionObject colObj1, boolean match1) {
-    CollisionJNI.ContactListener_onContactProcessed__SWIG_2(swigCPtr, this, cp, btCollisionObject.getCPtr(colObj0), colObj0, match0, btCollisionObject.getCPtr(colObj1), colObj1, match1);
+    CollisionJNI.ContactListener_onContactProcessed__SWIG_2(swigCPtr, this, btManifoldPoint.getCPtr(cp), cp, btCollisionObject.getCPtr(colObj0), colObj0, match0, btCollisionObject.getCPtr(colObj1), colObj1, match1);
   }
 
   public void onContactProcessed(btManifoldPoint cp, int userValue0, boolean match0, int userValue1, boolean match1) {
-    CollisionJNI.ContactListener_onContactProcessed__SWIG_3(swigCPtr, this, cp, userValue0, match0, userValue1, match1);
+    CollisionJNI.ContactListener_onContactProcessed__SWIG_3(swigCPtr, this, btManifoldPoint.getCPtr(cp), cp, userValue0, match0, userValue1, match1);
   }
 
   public void onContactProcessed(btCollisionObject colObj0, btCollisionObject colObj1) {
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/ContactResultCallback.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/ContactResultCallback.java
index a632a65..61bfe53 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/ContactResultCallback.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/ContactResultCallback.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/ConvexResultCallback.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/ConvexResultCallback.java
index 405d42e..cab6500 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/ConvexResultCallback.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/ConvexResultCallback.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/CustomCollisionDispatcher.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/CustomCollisionDispatcher.java
index 42878dd..a10b6fb 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/CustomCollisionDispatcher.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/CustomCollisionDispatcher.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/GdxCollisionObjectBridge.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/GdxCollisionObjectBridge.java
index 153cac9..76ab08b 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/GdxCollisionObjectBridge.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/GdxCollisionObjectBridge.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/LocalConvexResult.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/LocalConvexResult.java
index 6c1edf9..97d4d16 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/LocalConvexResult.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/LocalConvexResult.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/LocalRayResult.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/LocalRayResult.java
index a6100e4..3815314 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/LocalRayResult.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/LocalRayResult.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/LocalShapeInfo.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/LocalShapeInfo.java
index 8130dc0..66cbf53 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/LocalShapeInfo.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/LocalShapeInfo.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/PHY_ScalarType.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/PHY_ScalarType.java
index fe23791..88f55f9 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/PHY_ScalarType.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/PHY_ScalarType.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/RayResultCallback.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/RayResultCallback.java
index 14bdb10..87dbff4 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/RayResultCallback.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/RayResultCallback.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_PHY_ScalarType.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_PHY_ScalarType.java
index 6d2508a..838f951 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_PHY_ScalarType.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_PHY_ScalarType.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_btAlignedObjectArrayT_btBroadphaseInterface_p_t.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_btAlignedObjectArrayT_btBroadphaseInterface_p_t.java
index 74b1875..88145f8 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_btAlignedObjectArrayT_btBroadphaseInterface_p_t.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_btAlignedObjectArrayT_btBroadphaseInterface_p_t.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_btAlignedObjectArrayT_btBvhSubtreeInfo_t.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_btAlignedObjectArrayT_btBvhSubtreeInfo_t.java
index a52bed4..3a6e234 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_btAlignedObjectArrayT_btBvhSubtreeInfo_t.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_btAlignedObjectArrayT_btBvhSubtreeInfo_t.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_btAlignedObjectArrayT_btDbvtNode_const_p_t.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_btAlignedObjectArrayT_btDbvtNode_const_p_t.java
index 0bd6cce..bbf5b8b 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_btAlignedObjectArrayT_btDbvtNode_const_p_t.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_btAlignedObjectArrayT_btDbvtNode_const_p_t.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_btAlignedObjectArrayT_btDbvt__sStkNN_t.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_btAlignedObjectArrayT_btDbvt__sStkNN_t.java
index 750b94f..9eee687 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_btAlignedObjectArrayT_btDbvt__sStkNN_t.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_btAlignedObjectArrayT_btDbvt__sStkNN_t.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_btAlignedObjectArrayT_btDbvt__sStkNPS_t.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_btAlignedObjectArrayT_btDbvt__sStkNPS_t.java
index 82c93e8..7f8cb73 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_btAlignedObjectArrayT_btDbvt__sStkNPS_t.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_btAlignedObjectArrayT_btDbvt__sStkNPS_t.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_btAlignedObjectArrayT_btFace_t.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_btAlignedObjectArrayT_btFace_t.java
index ae079dd..32af75b 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_btAlignedObjectArrayT_btFace_t.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_btAlignedObjectArrayT_btFace_t.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_btAlignedObjectArrayT_btIndexedMesh_t.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_btAlignedObjectArrayT_btIndexedMesh_t.java
index c0b6c5f..fa92ffc 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_btAlignedObjectArrayT_btIndexedMesh_t.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_btAlignedObjectArrayT_btIndexedMesh_t.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_btAlignedObjectArrayT_btQuantizedBvhNode_t.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_btAlignedObjectArrayT_btQuantizedBvhNode_t.java
index 467b4c1..f5f41cc 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_btAlignedObjectArrayT_btQuantizedBvhNode_t.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_btAlignedObjectArrayT_btQuantizedBvhNode_t.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_btAlignedObjectArrayT_btSimplePair_t.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_btAlignedObjectArrayT_btSimplePair_t.java
index 38cbede..e8d7f99 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_btAlignedObjectArrayT_btSimplePair_t.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_btAlignedObjectArrayT_btSimplePair_t.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_btAlignedObjectArrayT_int_t.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_btAlignedObjectArrayT_int_t.java
index ddcf13b..64bea8c 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_btAlignedObjectArrayT_int_t.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_btAlignedObjectArrayT_int_t.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_btSerializer.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_btSerializer.java
index 74cd2a6..4c48bc5 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_btSerializer.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_btSerializer.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_f_p_q_const__btCollisionShape_p_q_const__btCollisionShape__bool.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_f_p_q_const__btCollisionShape_p_q_const__btCollisionShape__bool.java
index 06adc45..db0fb38 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_f_p_q_const__btCollisionShape_p_q_const__btCollisionShape__bool.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_f_p_q_const__btCollisionShape_p_q_const__btCollisionShape__bool.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_f_r_btBroadphasePair_r_btCollisionDispatcher_r_q_const__btDispatcherInfo__void.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_f_r_btBroadphasePair_r_btCollisionDispatcher_r_q_const__btDispatcherInfo__void.java
index cede884..7f3f734 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_f_r_btBroadphasePair_r_btCollisionDispatcher_r_q_const__btDispatcherInfo__void.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_f_r_btBroadphasePair_r_btCollisionDispatcher_r_q_const__btDispatcherInfo__void.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_f_r_btManifoldPoint_p_q_const__btCollisionObjectWrapper_int_int_p_q_const__btCollisionObjectWrapper_int_int__bool.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_f_r_btManifoldPoint_p_q_const__btCollisionObjectWrapper_int_int_p_q_const__btCollisionObjectWrapper_int_int__bool.java
index 0b4a9b8..e560857 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_f_r_btManifoldPoint_p_q_const__btCollisionObjectWrapper_int_int_p_q_const__btCollisionObjectWrapper_int_int__bool.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_f_r_btManifoldPoint_p_q_const__btCollisionObjectWrapper_int_int_p_q_const__btCollisionObjectWrapper_int_int__bool.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_float.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_float.java
index 77a38c9..e1c0ee6 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_float.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_float.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_int.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_int.java
index ad9d480..f683488 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_int.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_int.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_p_btCollisionObject.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_p_btCollisionObject.java
index d474124..a861257 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_p_btCollisionObject.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_p_btCollisionObject.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_p_btDbvtNode.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_p_btDbvtNode.java
index c8cc381..5a824e3 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_p_btDbvtNode.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_p_btDbvtNode.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_p_btDbvtProxy.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_p_btDbvtProxy.java
index 8b1adaf..79d8a34 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_p_btDbvtProxy.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_p_btDbvtProxy.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_p_btPersistentManifold.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_p_btPersistentManifold.java
index 00fb8df..6cdfd2c 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_p_btPersistentManifold.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_p_btPersistentManifold.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_p_btVector3.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_p_btVector3.java
index 95da591..008b86e 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_p_btVector3.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_p_btVector3.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_p_unsigned_char.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_p_unsigned_char.java
index 89c4093..b26c061 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_p_unsigned_char.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SWIGTYPE_p_p_unsigned_char.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SphereTriangleDetector.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SphereTriangleDetector.java
index 460232a..b29e259 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SphereTriangleDetector.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/SphereTriangleDetector.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/bt32BitAxisSweep3.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/bt32BitAxisSweep3.java
index 9f6e833..3adff1d 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/bt32BitAxisSweep3.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/bt32BitAxisSweep3.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btActivatingCollisionAlgorithm.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btActivatingCollisionAlgorithm.java
index 488cce3..f7f8630 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btActivatingCollisionAlgorithm.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btActivatingCollisionAlgorithm.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btAxisSweep3.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btAxisSweep3.java
index 51e1887..a562691 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btAxisSweep3.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btAxisSweep3.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btAxisSweep3InternalInt.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btAxisSweep3InternalInt.java
index 4ddb443..e3fffd2 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btAxisSweep3InternalInt.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btAxisSweep3InternalInt.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btAxisSweep3InternalShort.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btAxisSweep3InternalShort.java
index 6f9da87..9b60a19 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btAxisSweep3InternalShort.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btAxisSweep3InternalShort.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBU_Simplex1to4.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBU_Simplex1to4.java
index cf1710b..59ddd2b 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBU_Simplex1to4.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBU_Simplex1to4.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBox2dBox2dCollisionAlgorithm.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBox2dBox2dCollisionAlgorithm.java
index ca78af6..bf5418e 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBox2dBox2dCollisionAlgorithm.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBox2dBox2dCollisionAlgorithm.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBox2dShape.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBox2dShape.java
index 4800bfd..9d0cf87 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBox2dShape.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBox2dShape.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBoxBoxCollisionAlgorithm.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBoxBoxCollisionAlgorithm.java
index bb95c1a..5493a71 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBoxBoxCollisionAlgorithm.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBoxBoxCollisionAlgorithm.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBoxBoxDetector.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBoxBoxDetector.java
index f6935b4..82918a6 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBoxBoxDetector.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBoxBoxDetector.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBoxShape.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBoxShape.java
index eae95a1..cddcf87 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBoxShape.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBoxShape.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBroadphaseAabbCallback.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBroadphaseAabbCallback.java
index ffb53a7..54c67ed 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBroadphaseAabbCallback.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBroadphaseAabbCallback.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBroadphaseInterface.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBroadphaseInterface.java
index 0167909..da34f85 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBroadphaseInterface.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBroadphaseInterface.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBroadphasePair.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBroadphasePair.java
index e719649..ab78c5e 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBroadphasePair.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBroadphasePair.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBroadphasePairArray.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBroadphasePairArray.java
index c17731a..e7eb712 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBroadphasePairArray.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBroadphasePairArray.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBroadphasePairSortPredicate.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBroadphasePairSortPredicate.java
index 16f14d7..83abba1 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBroadphasePairSortPredicate.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBroadphasePairSortPredicate.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBroadphaseProxy.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBroadphaseProxy.java
index 39f705b..1ecefbc 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBroadphaseProxy.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBroadphaseProxy.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBroadphaseRayCallback.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBroadphaseRayCallback.java
index b5691af..3f96d72 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBroadphaseRayCallback.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBroadphaseRayCallback.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBvhSubtreeInfo.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBvhSubtreeInfo.java
index 5cddc60..3b115de 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBvhSubtreeInfo.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBvhSubtreeInfo.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBvhSubtreeInfoData.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBvhSubtreeInfoData.java
index 6e73ce6..31ae13e 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBvhSubtreeInfoData.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBvhSubtreeInfoData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBvhTriangleMeshShape.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBvhTriangleMeshShape.java
index a8318ae..3aa8c96 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBvhTriangleMeshShape.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btBvhTriangleMeshShape.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCapsuleShape.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCapsuleShape.java
index 04dd74a..a735eec 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCapsuleShape.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCapsuleShape.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCapsuleShapeData.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCapsuleShapeData.java
index ba8a4c8..cd4d5cb 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCapsuleShapeData.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCapsuleShapeData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCapsuleShapeX.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCapsuleShapeX.java
index aba619e..15dbba6 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCapsuleShapeX.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCapsuleShapeX.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCapsuleShapeZ.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCapsuleShapeZ.java
index 4b58682..d82e6e4 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCapsuleShapeZ.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCapsuleShapeZ.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCharIndexTripletData.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCharIndexTripletData.java
index 7965b8a..0091183 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCharIndexTripletData.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCharIndexTripletData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionAlgorithm.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionAlgorithm.java
index dd3abcd..6744d7c 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionAlgorithm.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionAlgorithm.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionAlgorithmConstructionInfo.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionAlgorithmConstructionInfo.java
index 7338a11..66a840b 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionAlgorithmConstructionInfo.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionAlgorithmConstructionInfo.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionAlgorithmCreateFunc.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionAlgorithmCreateFunc.java
index 5effd61..e131a07 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionAlgorithmCreateFunc.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionAlgorithmCreateFunc.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionConfiguration.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionConfiguration.java
index 7366b18..b0c0a5b 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionConfiguration.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionConfiguration.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionDispatcher.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionDispatcher.java
index 3708e62..b340572 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionDispatcher.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionDispatcher.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionObject.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionObject.java
index 768a79b..87fec33 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionObject.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionObject.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionObjectArray.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionObjectArray.java
index d9aec4a..57a5915 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionObjectArray.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionObjectArray.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionObjectConstArray.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionObjectConstArray.java
index ea82cdf..fea2895 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionObjectConstArray.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionObjectConstArray.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionObjectDoubleData.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionObjectDoubleData.java
index 4e6da9d..eefc461 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionObjectDoubleData.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionObjectDoubleData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionObjectFloatData.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionObjectFloatData.java
index cf96f17..b2f0b11 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionObjectFloatData.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionObjectFloatData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionObjectWrapper.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionObjectWrapper.java
index 57af74a..b2533e3 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionObjectWrapper.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionObjectWrapper.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionShape.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionShape.java
index 2c62c6d..4669b26 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionShape.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionShape.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionShapeData.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionShapeData.java
index df083f6..d03d77b 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionShapeData.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionShapeData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionWorld.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionWorld.java
index bc14885..2b89c6a 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionWorld.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCollisionWorld.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCompoundCollisionAlgorithm.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCompoundCollisionAlgorithm.java
index f75a0c2..5eb3ced 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCompoundCollisionAlgorithm.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCompoundCollisionAlgorithm.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCompoundCompoundCollisionAlgorithm.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCompoundCompoundCollisionAlgorithm.java
index e7e1ed7..dfee4d7 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCompoundCompoundCollisionAlgorithm.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCompoundCompoundCollisionAlgorithm.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCompoundShape.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCompoundShape.java
index 4d93e37..38e3b1e 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCompoundShape.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCompoundShape.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCompoundShapeChild.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCompoundShapeChild.java
index f720083..58a78a0 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCompoundShapeChild.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCompoundShapeChild.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCompoundShapeChildData.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCompoundShapeChildData.java
index bb90063..c8895af 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCompoundShapeChildData.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCompoundShapeChildData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCompoundShapeData.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCompoundShapeData.java
index cbfc043..18c4c27 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCompoundShapeData.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCompoundShapeData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConcaveShape.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConcaveShape.java
index 5fb8f57..b669dc6 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConcaveShape.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConcaveShape.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConeShape.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConeShape.java
index dc65e37..a4a460a 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConeShape.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConeShape.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConeShapeData.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConeShapeData.java
index f1120fa..9a3c0e6 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConeShapeData.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConeShapeData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConeShapeX.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConeShapeX.java
index 25b009c..72d1131 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConeShapeX.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConeShapeX.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConeShapeZ.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConeShapeZ.java
index 901423d..ae52bdb 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConeShapeZ.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConeShapeZ.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConstraintRow.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConstraintRow.java
index 1876116..1d5bdd6 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConstraintRow.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConstraintRow.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btContactManifoldTypes.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btContactManifoldTypes.java
index 4d69e48..3e03b4f 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btContactManifoldTypes.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btContactManifoldTypes.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btContinuousConvexCollision.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btContinuousConvexCollision.java
index bf17c0c..ab41ca0 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btContinuousConvexCollision.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btContinuousConvexCollision.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvex2dConvex2dAlgorithm.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvex2dConvex2dAlgorithm.java
index 6b23fc6..e5c049a 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvex2dConvex2dAlgorithm.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvex2dConvex2dAlgorithm.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvex2dShape.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvex2dShape.java
index 7ca23eb..8c620c5 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvex2dShape.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvex2dShape.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexCast.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexCast.java
index 23cc116..7081332 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexCast.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexCast.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexConcaveCollisionAlgorithm.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexConcaveCollisionAlgorithm.java
index d896bcf..b66fd6d 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexConcaveCollisionAlgorithm.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexConcaveCollisionAlgorithm.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexConvexAlgorithm.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexConvexAlgorithm.java
index 5c6701a..3588248 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexConvexAlgorithm.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexConvexAlgorithm.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexHullShape.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexHullShape.java
index 32d2e8d..009e78b 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexHullShape.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexHullShape.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexHullShapeData.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexHullShapeData.java
index e118bab..4680ca4 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexHullShapeData.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexHullShapeData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexInternalAabbCachingShape.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexInternalAabbCachingShape.java
index c61338e..761b8d1 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexInternalAabbCachingShape.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexInternalAabbCachingShape.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexInternalShape.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexInternalShape.java
index 42ab153..482430e 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexInternalShape.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexInternalShape.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexInternalShapeData.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexInternalShapeData.java
index 78b5e2f..7d65bb7 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexInternalShapeData.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexInternalShapeData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexPenetrationDepthSolver.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexPenetrationDepthSolver.java
index 22d0d60..73aa2eb 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexPenetrationDepthSolver.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexPenetrationDepthSolver.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexPlaneCollisionAlgorithm.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexPlaneCollisionAlgorithm.java
index 0d11e7f..0f2ebca 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexPlaneCollisionAlgorithm.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexPlaneCollisionAlgorithm.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexPointCloudShape.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexPointCloudShape.java
index 1bce72c..f7f3d49 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexPointCloudShape.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexPointCloudShape.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexPolyhedron.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexPolyhedron.java
index c6d3223..4ee349d 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexPolyhedron.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexPolyhedron.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexShape.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexShape.java
index 26c8f04..e95ec45 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexShape.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexShape.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexTriangleCallback.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexTriangleCallback.java
index a6f5c4a..12191b9 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexTriangleCallback.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexTriangleCallback.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexTriangleMeshShape.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexTriangleMeshShape.java
index deb1c47..c11dd71 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexTriangleMeshShape.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btConvexTriangleMeshShape.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCylinderShape.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCylinderShape.java
index ec8dc39..5c3ca42 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCylinderShape.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCylinderShape.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCylinderShapeData.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCylinderShapeData.java
index 36a2425..12885c8 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCylinderShapeData.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCylinderShapeData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCylinderShapeX.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCylinderShapeX.java
index 48f08a9..2933b2c 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCylinderShapeX.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCylinderShapeX.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCylinderShapeZ.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCylinderShapeZ.java
index a607230..8b654ab 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCylinderShapeZ.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btCylinderShapeZ.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btDbvt.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btDbvt.java
index 0eff908..a1b9896 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btDbvt.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btDbvt.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btDbvtAabbMm.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btDbvtAabbMm.java
index 90fb777..13a46f3 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btDbvtAabbMm.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btDbvtAabbMm.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btDbvtBroadphase.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btDbvtBroadphase.java
index b3360dc..684f6fd 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btDbvtBroadphase.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btDbvtBroadphase.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btDbvtNode.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btDbvtNode.java
index 4c29a9b..9079fa9 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btDbvtNode.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btDbvtNode.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btDbvtProxy.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btDbvtProxy.java
index 7c36283..57283e4 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btDbvtProxy.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btDbvtProxy.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btDefaultCollisionConfiguration.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btDefaultCollisionConfiguration.java
index 23c3086..cd03026 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btDefaultCollisionConfiguration.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btDefaultCollisionConfiguration.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btDefaultCollisionConstructionInfo.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btDefaultCollisionConstructionInfo.java
index b29fd24..4e1832b 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btDefaultCollisionConstructionInfo.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btDefaultCollisionConstructionInfo.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btDiscreteCollisionDetectorInterface.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btDiscreteCollisionDetectorInterface.java
index d22d838..d7cc35d 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btDiscreteCollisionDetectorInterface.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btDiscreteCollisionDetectorInterface.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btDispatcher.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btDispatcher.java
index 4d8b946..68e4179 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btDispatcher.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btDispatcher.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btDispatcherInfo.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btDispatcherInfo.java
index 3890e49..7b7d977 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btDispatcherInfo.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btDispatcherInfo.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btElement.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btElement.java
index 5bc6d3b..56da346 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btElement.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btElement.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btEmptyAlgorithm.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btEmptyAlgorithm.java
index 9cb5375..0331351 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btEmptyAlgorithm.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btEmptyAlgorithm.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btEmptyShape.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btEmptyShape.java
index 50c409f..cef8148 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btEmptyShape.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btEmptyShape.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btFace.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btFace.java
index d21726f..f9c9be9 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btFace.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btFace.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btGhostObject.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btGhostObject.java
index def0c4b..2af437c 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btGhostObject.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btGhostObject.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btGhostPairCallback.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btGhostPairCallback.java
index 71cb504..7225111 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btGhostPairCallback.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btGhostPairCallback.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btGjkConvexCast.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btGjkConvexCast.java
index f45198f..b08f67c 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btGjkConvexCast.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btGjkConvexCast.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btGjkEpaPenetrationDepthSolver.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btGjkEpaPenetrationDepthSolver.java
index f92ab1f..be015b3 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btGjkEpaPenetrationDepthSolver.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btGjkEpaPenetrationDepthSolver.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btGjkEpaSolver2.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btGjkEpaSolver2.java
index 597f853..0ff1957 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btGjkEpaSolver2.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btGjkEpaSolver2.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btGjkPairDetector.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btGjkPairDetector.java
index 6621663..526dc47 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btGjkPairDetector.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btGjkPairDetector.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btHashedOverlappingPairCache.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btHashedOverlappingPairCache.java
index db4c813..c652e73 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btHashedOverlappingPairCache.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btHashedOverlappingPairCache.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btHashedSimplePairCache.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btHashedSimplePairCache.java
index d651b77..f4054d8 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btHashedSimplePairCache.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btHashedSimplePairCache.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btHeightfieldTerrainShape.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btHeightfieldTerrainShape.java
index 78eecad..6b49042 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btHeightfieldTerrainShape.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btHeightfieldTerrainShape.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btIndexedMesh.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btIndexedMesh.java
index 619dc7e..341fd08 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btIndexedMesh.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btIndexedMesh.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btIntIndexData.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btIntIndexData.java
index a224137..31ae7e3 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btIntIndexData.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btIntIndexData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btInternalEdgeAdjustFlags.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btInternalEdgeAdjustFlags.java
index a7d697c..6dd53d4 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btInternalEdgeAdjustFlags.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btInternalEdgeAdjustFlags.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btInternalTriangleIndexCallback.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btInternalTriangleIndexCallback.java
index 144a16f..d99abfb 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btInternalTriangleIndexCallback.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btInternalTriangleIndexCallback.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btManifoldPoint.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btManifoldPoint.java
index f8caa3e..9a2414a 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btManifoldPoint.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btManifoldPoint.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
@@ -58,29 +58,21 @@ public class btManifoldPoint extends BulletBase {
 		super.delete();
 	}
 
-	/** Temporary instance, use by native methods that return a btManifoldPoint instance */
-	protected final static btManifoldPoint temp = new btManifoldPoint(0, false);
-	public static btManifoldPoint internalTemp(long cPtr, boolean own) {
+	private final static btManifoldPoint temp = new btManifoldPoint(0, false);
+	/** Obtains a temporary instance, used by native methods that return a btManifoldPoint instance */
+	protected static btManifoldPoint obtainTemp(long cPtr, boolean own) {
 		temp.reset(cPtr, own);
 		return temp;
 	}
-	/** Pool of btManifoldPoint instances, used by director interface to provide the arguments. */
-	protected static final com.badlogic.gdx.utils.Pool<btManifoldPoint> pool = new com.badlogic.gdx.utils.Pool<btManifoldPoint>() {
-		@Override
-		protected btManifoldPoint newObject() {
-			return new btManifoldPoint(0, false);
-		}
-	};
-	/** Reuses a previous freed instance or creates a new instance and set it to reflect the specified native object */
-	public static btManifoldPoint obtain(long cPtr, boolean own) {
-		final btManifoldPoint result = pool.obtain();
-		result.reset(cPtr, own);
-		return result;
-	}
-	/** delete the native object if required and allow the instance to be reused by the obtain method */
-	public static void free(final btManifoldPoint inst) {
-		inst.dispose();
-		pool.free(inst);
+	
+	private static btManifoldPoint[] argumentInstances = new btManifoldPoint[] {new btManifoldPoint(0, false),
+		new btManifoldPoint(0, false), new btManifoldPoint(0, false), new btManifoldPoint(0, false)};
+	private static int argumentIndex = -1;
+	/** Obtains a temporary instance, used for callback methods with one or more btManifoldPoint arguments */
+	protected static btManifoldPoint obtainForArgument(final long swigCPtr, boolean owner) {
+		btManifoldPoint instance = argumentInstances[argumentIndex = (argumentIndex + 1) & 3];
+		instance.reset(swigCPtr, owner);
+		return instance;
 	}
 
   public btManifoldPoint() {
@@ -91,51 +83,6 @@ public class btManifoldPoint extends BulletBase {
     this(CollisionJNI.new_btManifoldPoint__SWIG_1(pointA, pointB, normal, distance), true);
   }
 
-  public void setLocalPointA(btVector3 value) {
-    CollisionJNI.btManifoldPoint_localPointA_set(swigCPtr, this, btVector3.getCPtr(value), value);
-  }
-
-  public btVector3 getLocalPointA() {
-    long cPtr = CollisionJNI.btManifoldPoint_localPointA_get(swigCPtr, this);
-    return (cPtr == 0) ? null : new btVector3(cPtr, false);
-  }
-
-  public void setLocalPointB(btVector3 value) {
-    CollisionJNI.btManifoldPoint_localPointB_set(swigCPtr, this, btVector3.getCPtr(value), value);
-  }
-
-  public btVector3 getLocalPointB() {
-    long cPtr = CollisionJNI.btManifoldPoint_localPointB_get(swigCPtr, this);
-    return (cPtr == 0) ? null : new btVector3(cPtr, false);
-  }
-
-  public void setPositionWorldOnB(btVector3 value) {
-    CollisionJNI.btManifoldPoint_positionWorldOnB_set(swigCPtr, this, btVector3.getCPtr(value), value);
-  }
-
-  public btVector3 getPositionWorldOnB() {
-    long cPtr = CollisionJNI.btManifoldPoint_positionWorldOnB_get(swigCPtr, this);
-    return (cPtr == 0) ? null : new btVector3(cPtr, false);
-  }
-
-  public void setPositionWorldOnA(btVector3 value) {
-    CollisionJNI.btManifoldPoint_positionWorldOnA_set(swigCPtr, this, btVector3.getCPtr(value), value);
-  }
-
-  public btVector3 getPositionWorldOnA() {
-    long cPtr = CollisionJNI.btManifoldPoint_positionWorldOnA_get(swigCPtr, this);
-    return (cPtr == 0) ? null : new btVector3(cPtr, false);
-  }
-
-  public void setNormalWorldOnB(btVector3 value) {
-    CollisionJNI.btManifoldPoint_normalWorldOnB_set(swigCPtr, this, btVector3.getCPtr(value), value);
-  }
-
-  public btVector3 getNormalWorldOnB() {
-    long cPtr = CollisionJNI.btManifoldPoint_normalWorldOnB_get(swigCPtr, this);
-    return (cPtr == 0) ? null : new btVector3(cPtr, false);
-  }
-
   public void setDistance1(float value) {
     CollisionJNI.btManifoldPoint_distance1_set(swigCPtr, this, value);
   }
@@ -280,24 +227,6 @@ public class btManifoldPoint extends BulletBase {
     return CollisionJNI.btManifoldPoint_lifeTime_get(swigCPtr, this);
   }
 
-  public void setLateralFrictionDir1(btVector3 value) {
-    CollisionJNI.btManifoldPoint_lateralFrictionDir1_set(swigCPtr, this, btVector3.getCPtr(value), value);
-  }
-
-  public btVector3 getLateralFrictionDir1() {
-    long cPtr = CollisionJNI.btManifoldPoint_lateralFrictionDir1_get(swigCPtr, this);
-    return (cPtr == 0) ? null : new btVector3(cPtr, false);
-  }
-
-  public void setLateralFrictionDir2(btVector3 value) {
-    CollisionJNI.btManifoldPoint_lateralFrictionDir2_set(swigCPtr, this, btVector3.getCPtr(value), value);
-  }
-
-  public btVector3 getLateralFrictionDir2() {
-    long cPtr = CollisionJNI.btManifoldPoint_lateralFrictionDir2_get(swigCPtr, this);
-    return (cPtr == 0) ? null : new btVector3(cPtr, false);
-  }
-
   public float getDistance() {
     return CollisionJNI.btManifoldPoint_getDistance(swigCPtr, this);
   }
@@ -314,4 +243,60 @@ public class btManifoldPoint extends BulletBase {
     CollisionJNI.btManifoldPoint_setUserValue(swigCPtr, this, value);
   }
 
+  public void getLocalPointA(Vector3 out) {
+    CollisionJNI.btManifoldPoint_getLocalPointA(swigCPtr, this, out);
+  }
+
+  public void setLocalPointA(Vector3 value) {
+    CollisionJNI.btManifoldPoint_setLocalPointA(swigCPtr, this, value);
+  }
+
+  public void getLocalPointB(Vector3 out) {
+    CollisionJNI.btManifoldPoint_getLocalPointB(swigCPtr, this, out);
+  }
+
+  public void setLocalPointB(Vector3 value) {
+    CollisionJNI.btManifoldPoint_setLocalPointB(swigCPtr, this, value);
+  }
+
+  public void getPositionWorldOnA(Vector3 out) {
+    CollisionJNI.btManifoldPoint_getPositionWorldOnA(swigCPtr, this, out);
+  }
+
+  public void setPositionWorldOnA(Vector3 value) {
+    CollisionJNI.btManifoldPoint_setPositionWorldOnA(swigCPtr, this, value);
+  }
+
+  public void getPositionWorldOnB(Vector3 out) {
+    CollisionJNI.btManifoldPoint_getPositionWorldOnB(swigCPtr, this, out);
+  }
+
+  public void setPositionWorldOnB(Vector3 value) {
+    CollisionJNI.btManifoldPoint_setPositionWorldOnB(swigCPtr, this, value);
+  }
+
+  public void getNormalWorldOnB(Vector3 out) {
+    CollisionJNI.btManifoldPoint_getNormalWorldOnB(swigCPtr, this, out);
+  }
+
+  public void setNormalWorldOnB(Vector3 value) {
+    CollisionJNI.btManifoldPoint_setNormalWorldOnB(swigCPtr, this, value);
+  }
+
+  public void getLateralFrictionDir1(Vector3 out) {
+    CollisionJNI.btManifoldPoint_getLateralFrictionDir1(swigCPtr, this, out);
+  }
+
+  public void setLateralFrictionDir1(Vector3 value) {
+    CollisionJNI.btManifoldPoint_setLateralFrictionDir1(swigCPtr, this, value);
+  }
+
+  public void getLateralFrictionDir2(Vector3 out) {
+    CollisionJNI.btManifoldPoint_getLateralFrictionDir2(swigCPtr, this, out);
+  }
+
+  public void setLateralFrictionDir2(Vector3 value) {
+    CollisionJNI.btManifoldPoint_setLateralFrictionDir2(swigCPtr, this, value);
+  }
+
 }
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btManifoldResult.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btManifoldResult.java
index ef4576d..5bb55fd 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btManifoldResult.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btManifoldResult.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btMaterial.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btMaterial.java
index 8803f77..d092523 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btMaterial.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btMaterial.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btMaterialProperties.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btMaterialProperties.java
index 3ff3ad8..fe7732f 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btMaterialProperties.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btMaterialProperties.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btMeshPartData.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btMeshPartData.java
index d3c6ce0..0a3851f 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btMeshPartData.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btMeshPartData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btMinkowskiPenetrationDepthSolver.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btMinkowskiPenetrationDepthSolver.java
index 13bc002..ef9a0a5 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btMinkowskiPenetrationDepthSolver.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btMinkowskiPenetrationDepthSolver.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btMinkowskiSumShape.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btMinkowskiSumShape.java
index 37a0ad3..3203106 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btMinkowskiSumShape.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btMinkowskiSumShape.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btMultiSapBroadphase.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btMultiSapBroadphase.java
index 4bed5c2..6d4a611 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btMultiSapBroadphase.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btMultiSapBroadphase.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btMultiSphereShape.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btMultiSphereShape.java
index 29c6bc7..44a49e2 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btMultiSphereShape.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btMultiSphereShape.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btMultiSphereShapeData.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btMultiSphereShapeData.java
index 430b846..c5417bd 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btMultiSphereShapeData.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btMultiSphereShapeData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btMultimaterialTriangleMeshShape.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btMultimaterialTriangleMeshShape.java
index 5758ea9..03fe945 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btMultimaterialTriangleMeshShape.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btMultimaterialTriangleMeshShape.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btNodeOverlapCallback.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btNodeOverlapCallback.java
index fc401c4..a2f4e67 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btNodeOverlapCallback.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btNodeOverlapCallback.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btNullPairCache.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btNullPairCache.java
index 1fe9681..9f496cd 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btNullPairCache.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btNullPairCache.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btOptimizedBvh.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btOptimizedBvh.java
index 86db187..126c343 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btOptimizedBvh.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btOptimizedBvh.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btOptimizedBvhNode.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btOptimizedBvhNode.java
index e1d282f..c2c752a 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btOptimizedBvhNode.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btOptimizedBvhNode.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btOptimizedBvhNodeDoubleData.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btOptimizedBvhNodeDoubleData.java
index e4a2f8f..ee6dcf0 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btOptimizedBvhNodeDoubleData.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btOptimizedBvhNodeDoubleData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btOptimizedBvhNodeFloatData.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btOptimizedBvhNodeFloatData.java
index 1ac2458..9dfbca0 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btOptimizedBvhNodeFloatData.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btOptimizedBvhNodeFloatData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btOverlapCallback.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btOverlapCallback.java
index f8b76ca..86e1d26 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btOverlapCallback.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btOverlapCallback.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btOverlapFilterCallback.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btOverlapFilterCallback.java
index 1fa62c2..4133047 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btOverlapFilterCallback.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btOverlapFilterCallback.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btOverlappingPairCache.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btOverlappingPairCache.java
index 61a5413..3fe2a43 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btOverlappingPairCache.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btOverlappingPairCache.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btOverlappingPairCallback.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btOverlappingPairCallback.java
index 42ffa6f..ec7c011 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btOverlappingPairCallback.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btOverlappingPairCallback.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btPairCachingGhostObject.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btPairCachingGhostObject.java
index 1a4ccd2..5999379 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btPairCachingGhostObject.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btPairCachingGhostObject.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btPersistentManifold.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btPersistentManifold.java
index 5c44c78..cec78e1 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btPersistentManifold.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btPersistentManifold.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btPersistentManifoldArray.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btPersistentManifoldArray.java
index 349d7c7..b38d384 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btPersistentManifoldArray.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btPersistentManifoldArray.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btPointCollector.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btPointCollector.java
index 66afb64..0656246 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btPointCollector.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btPointCollector.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btPolyhedralContactClipping.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btPolyhedralContactClipping.java
index cc0a6a6..cabe0ad 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btPolyhedralContactClipping.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btPolyhedralContactClipping.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btPolyhedralConvexAabbCachingShape.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btPolyhedralConvexAabbCachingShape.java
index d9d135b..1624b87 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btPolyhedralConvexAabbCachingShape.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btPolyhedralConvexAabbCachingShape.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btPolyhedralConvexShape.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btPolyhedralConvexShape.java
index 6f33207..2f2d860 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btPolyhedralConvexShape.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btPolyhedralConvexShape.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btPositionAndRadius.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btPositionAndRadius.java
index 48278a8..3c21d57 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btPositionAndRadius.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btPositionAndRadius.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btQuantizedBvh.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btQuantizedBvh.java
index 94b974d..098a5c5 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btQuantizedBvh.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btQuantizedBvh.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btQuantizedBvhDoubleData.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btQuantizedBvhDoubleData.java
index f527af6..8dede04 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btQuantizedBvhDoubleData.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btQuantizedBvhDoubleData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btQuantizedBvhFloatData.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btQuantizedBvhFloatData.java
index 18ac8c9..2c6a0b3 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btQuantizedBvhFloatData.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btQuantizedBvhFloatData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btQuantizedBvhNode.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btQuantizedBvhNode.java
index fba63a1..562c19b 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btQuantizedBvhNode.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btQuantizedBvhNode.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btQuantizedBvhNodeData.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btQuantizedBvhNodeData.java
index 2d9f901..8c80d16 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btQuantizedBvhNodeData.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btQuantizedBvhNodeData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btScaledBvhTriangleMeshShape.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btScaledBvhTriangleMeshShape.java
index a4771f3..590a831 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btScaledBvhTriangleMeshShape.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btScaledBvhTriangleMeshShape.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btScaledTriangleMeshShapeData.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btScaledTriangleMeshShapeData.java
index 3fe62c1..0b1406a 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btScaledTriangleMeshShapeData.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btScaledTriangleMeshShapeData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btShapeHull.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btShapeHull.java
index 05b2b98..f2eb8e7 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btShapeHull.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btShapeHull.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btShortIntIndexData.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btShortIntIndexData.java
index b71de0e..593afb5 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btShortIntIndexData.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btShortIntIndexData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btShortIntIndexTripletData.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btShortIntIndexTripletData.java
index 90646c3..aadca7f 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btShortIntIndexTripletData.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btShortIntIndexTripletData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btSimpleBroadphase.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btSimpleBroadphase.java
index 7889b1e..88518bd 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btSimpleBroadphase.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btSimpleBroadphase.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btSimpleBroadphaseProxy.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btSimpleBroadphaseProxy.java
index b239dd2..f213150 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btSimpleBroadphaseProxy.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btSimpleBroadphaseProxy.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btSimplePair.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btSimplePair.java
index 3c7c7e9..cf8c50a 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btSimplePair.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btSimplePair.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btSimulationIslandManager.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btSimulationIslandManager.java
index 4c12388..856738b 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btSimulationIslandManager.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btSimulationIslandManager.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btSortedOverlappingPairCache.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btSortedOverlappingPairCache.java
index 9589e1e..5db2064 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btSortedOverlappingPairCache.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btSortedOverlappingPairCache.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btSphereBoxCollisionAlgorithm.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btSphereBoxCollisionAlgorithm.java
index 047c6ee..8242ccc 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btSphereBoxCollisionAlgorithm.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btSphereBoxCollisionAlgorithm.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btSphereShape.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btSphereShape.java
index ef27153..d4aefbb 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btSphereShape.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btSphereShape.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btSphereSphereCollisionAlgorithm.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btSphereSphereCollisionAlgorithm.java
index 8540e21..dfd2b11 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btSphereSphereCollisionAlgorithm.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btSphereSphereCollisionAlgorithm.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btSphereTriangleCollisionAlgorithm.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btSphereTriangleCollisionAlgorithm.java
index ebed4f3..d1f8f42 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btSphereTriangleCollisionAlgorithm.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btSphereTriangleCollisionAlgorithm.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btStaticPlaneShape.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btStaticPlaneShape.java
index 6e25d0f..4ee9587 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btStaticPlaneShape.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btStaticPlaneShape.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btStaticPlaneShapeData.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btStaticPlaneShapeData.java
index 2813bea..5b5efc8 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btStaticPlaneShapeData.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btStaticPlaneShapeData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btStorageResult.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btStorageResult.java
index d3bae97..60c455b 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btStorageResult.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btStorageResult.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btStridingMeshInterface.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btStridingMeshInterface.java
index 9a9c6ba..4d7cfef 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btStridingMeshInterface.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btStridingMeshInterface.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btStridingMeshInterfaceData.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btStridingMeshInterfaceData.java
index 4f58d05..065cbc9 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btStridingMeshInterfaceData.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btStridingMeshInterfaceData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btSubSimplexClosestResult.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btSubSimplexClosestResult.java
index 0d4e41f..ffb53a5 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btSubSimplexClosestResult.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btSubSimplexClosestResult.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btSubsimplexConvexCast.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btSubsimplexConvexCast.java
index e805b63..a49057a 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btSubsimplexConvexCast.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btSubsimplexConvexCast.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangle.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangle.java
index a9556b0..51753d6 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangle.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangle.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleBuffer.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleBuffer.java
index d396999..123bb00 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleBuffer.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleBuffer.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleCallback.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleCallback.java
index e803db5..ea05db0 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleCallback.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleCallback.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleConvexcastCallback.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleConvexcastCallback.java
index 97b7f3e..e404842 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleConvexcastCallback.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleConvexcastCallback.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleIndexVertexArray.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleIndexVertexArray.java
index f6b6029..1dd540c 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleIndexVertexArray.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleIndexVertexArray.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleIndexVertexMaterialArray.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleIndexVertexMaterialArray.java
index c2af8bc..5eb3059 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleIndexVertexMaterialArray.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleIndexVertexMaterialArray.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleInfo.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleInfo.java
index 97840e4..dfda074 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleInfo.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleInfo.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleInfoData.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleInfoData.java
index edf3354..bdee2c8 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleInfoData.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleInfoData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleInfoMap.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleInfoMap.java
index 93c787b..3345061 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleInfoMap.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleInfoMap.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleInfoMapData.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleInfoMapData.java
index a620377..beb4dc4 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleInfoMapData.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleInfoMapData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleMesh.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleMesh.java
index 97df985..244ca38 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleMesh.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleMesh.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleMeshShape.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleMeshShape.java
index ad3d6ac..a84c3e4 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleMeshShape.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleMeshShape.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleMeshShapeData.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleMeshShapeData.java
index ec10df2..41c104c 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleMeshShapeData.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleMeshShapeData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleRaycastCallback.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleRaycastCallback.java
index 280bbd7..8f6d4f0 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleRaycastCallback.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleRaycastCallback.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleShape.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleShape.java
index e9f9515..f22febe 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleShape.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btTriangleShape.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btUniformScalingShape.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btUniformScalingShape.java
index 724c429..83cc315 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btUniformScalingShape.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btUniformScalingShape.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btUnionFind.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btUnionFind.java
index 1640b66..fd14315 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btUnionFind.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btUnionFind.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btUsageBitfield.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btUsageBitfield.java
index 45218be..116585f 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btUsageBitfield.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btUsageBitfield.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btVoronoiSimplexSolver.java b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btVoronoiSimplexSolver.java
index 8652084..9f22fa7 100644
--- a/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btVoronoiSimplexSolver.java
+++ b/extensions/gdx-bullet/jni/swig-src/collision/com/badlogic/gdx/physics/bullet/collision/btVoronoiSimplexSolver.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/Dynamics.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/Dynamics.java
index b080638..bb47046 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/Dynamics.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/Dynamics.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/DynamicsConstants.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/DynamicsConstants.java
index ce811bb..8251a53 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/DynamicsConstants.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/DynamicsConstants.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/DynamicsJNI.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/DynamicsJNI.java
index 0becc85..07c12cd 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/DynamicsJNI.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/DynamicsJNI.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/InternalTickCallback.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/InternalTickCallback.java
index 9452e56..4d15405 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/InternalTickCallback.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/InternalTickCallback.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/SWIGTYPE_p_btAlignedObjectArrayT_btSolverConstraint_t.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/SWIGTYPE_p_btAlignedObjectArrayT_btSolverConstraint_t.java
index 5ac025c..937c113 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/SWIGTYPE_p_btAlignedObjectArrayT_btSolverConstraint_t.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/SWIGTYPE_p_btAlignedObjectArrayT_btSolverConstraint_t.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/SWIGTYPE_p_btAlignedObjectArrayT_btWheelInfo_t.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/SWIGTYPE_p_btAlignedObjectArrayT_btWheelInfo_t.java
index 2376110..81eba6f 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/SWIGTYPE_p_btAlignedObjectArrayT_btWheelInfo_t.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/SWIGTYPE_p_btAlignedObjectArrayT_btWheelInfo_t.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/SWIGTYPE_p_btMatrix3x3DoubleData.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/SWIGTYPE_p_btMatrix3x3DoubleData.java
index 9a7ed43..5e6e220 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/SWIGTYPE_p_btMatrix3x3DoubleData.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/SWIGTYPE_p_btMatrix3x3DoubleData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/SWIGTYPE_p_btMatrix3x3FloatData.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/SWIGTYPE_p_btMatrix3x3FloatData.java
index 0bb3610..27d2a0d 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/SWIGTYPE_p_btMatrix3x3FloatData.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/SWIGTYPE_p_btMatrix3x3FloatData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/SWIGTYPE_p_btSerializer.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/SWIGTYPE_p_btSerializer.java
index 7644873..dc94c85 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/SWIGTYPE_p_btSerializer.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/SWIGTYPE_p_btSerializer.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/SWIGTYPE_p_f_p_btDynamicsWorld_float__void.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/SWIGTYPE_p_f_p_btDynamicsWorld_float__void.java
index 5db6ad3..eb9084a 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/SWIGTYPE_p_f_p_btDynamicsWorld_float__void.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/SWIGTYPE_p_f_p_btDynamicsWorld_float__void.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/SWIGTYPE_p_float.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/SWIGTYPE_p_float.java
index 6e3ffc7..8b4fe87 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/SWIGTYPE_p_float.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/SWIGTYPE_p_float.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/SWIGTYPE_p_int.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/SWIGTYPE_p_int.java
index 2272ba9..85a290e 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/SWIGTYPE_p_int.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/SWIGTYPE_p_int.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/SWIGTYPE_p_p_btCollisionObject.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/SWIGTYPE_p_p_btCollisionObject.java
index bee7128..0f6d151 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/SWIGTYPE_p_p_btCollisionObject.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/SWIGTYPE_p_p_btCollisionObject.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/SWIGTYPE_p_p_btPersistentManifold.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/SWIGTYPE_p_p_btPersistentManifold.java
index beb5dc3..1f91ed2 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/SWIGTYPE_p_p_btPersistentManifold.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/SWIGTYPE_p_p_btPersistentManifold.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/SWIGTYPE_p_p_btTypedConstraint.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/SWIGTYPE_p_p_btTypedConstraint.java
index a51fba9..bf5cdcd 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/SWIGTYPE_p_p_btTypedConstraint.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/SWIGTYPE_p_p_btTypedConstraint.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/bt6DofFlags.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/bt6DofFlags.java
index f3885c3..f7bf3aa 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/bt6DofFlags.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/bt6DofFlags.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btActionInterface.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btActionInterface.java
index 600402b..ea4694a 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btActionInterface.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btActionInterface.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btAngularLimit.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btAngularLimit.java
index e3a488e..0f32f97 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btAngularLimit.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btAngularLimit.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btCharacterControllerInterface.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btCharacterControllerInterface.java
index ea566f4..94f7dce 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btCharacterControllerInterface.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btCharacterControllerInterface.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btConeTwistConstraint.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btConeTwistConstraint.java
index cae19f5..6b34f9e 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btConeTwistConstraint.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btConeTwistConstraint.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btConeTwistConstraintData.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btConeTwistConstraintData.java
index b1de9bd..da1b594 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btConeTwistConstraintData.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btConeTwistConstraintData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btConeTwistConstraintDoubleData.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btConeTwistConstraintDoubleData.java
index eea0b5f..4dad703 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btConeTwistConstraintDoubleData.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btConeTwistConstraintDoubleData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btConeTwistFlags.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btConeTwistFlags.java
index b5fc79c..d2c7ec5 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btConeTwistFlags.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btConeTwistFlags.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btConstraintParams.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btConstraintParams.java
index 2aa182b..51cc279 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btConstraintParams.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btConstraintParams.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btConstraintSetting.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btConstraintSetting.java
index 9503cc4..a264b10 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btConstraintSetting.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btConstraintSetting.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btConstraintSolver.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btConstraintSolver.java
index 49de14b..33652d5 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btConstraintSolver.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btConstraintSolver.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btConstraintSolverType.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btConstraintSolverType.java
index 6a6b88a..6d7123b 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btConstraintSolverType.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btConstraintSolverType.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btContactConstraint.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btContactConstraint.java
index 2ce867d..56324de 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btContactConstraint.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btContactConstraint.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btContactSolverInfo.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btContactSolverInfo.java
index 5373c13..6988690 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btContactSolverInfo.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btContactSolverInfo.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btContactSolverInfoData.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btContactSolverInfoData.java
index 526be23..1346d25 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btContactSolverInfoData.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btContactSolverInfoData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btContactSolverInfoDoubleData.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btContactSolverInfoDoubleData.java
index e41e12f..068aad9 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btContactSolverInfoDoubleData.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btContactSolverInfoDoubleData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btContactSolverInfoFloatData.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btContactSolverInfoFloatData.java
index aa4723e..d1a6168 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btContactSolverInfoFloatData.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btContactSolverInfoFloatData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btDefaultVehicleRaycaster.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btDefaultVehicleRaycaster.java
index 57891f7..e827897 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btDefaultVehicleRaycaster.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btDefaultVehicleRaycaster.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btDiscreteDynamicsWorld.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btDiscreteDynamicsWorld.java
index 2581ace..e0cc49a 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btDiscreteDynamicsWorld.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btDiscreteDynamicsWorld.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btDynamicsWorld.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btDynamicsWorld.java
index 808efbe..3fc7c71 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btDynamicsWorld.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btDynamicsWorld.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btDynamicsWorldDoubleData.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btDynamicsWorldDoubleData.java
index 2ef47ce..9780346 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btDynamicsWorldDoubleData.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btDynamicsWorldDoubleData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btDynamicsWorldFloatData.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btDynamicsWorldFloatData.java
index 2a2eb99..d0035d9 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btDynamicsWorldFloatData.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btDynamicsWorldFloatData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btDynamicsWorldType.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btDynamicsWorldType.java
index d4870be..43dc0cf 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btDynamicsWorldType.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btDynamicsWorldType.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btGeneric6DofConstraint.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btGeneric6DofConstraint.java
index 742f37b..8c0c76b 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btGeneric6DofConstraint.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btGeneric6DofConstraint.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btGeneric6DofConstraintData.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btGeneric6DofConstraintData.java
index 0df6760..65f387c 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btGeneric6DofConstraintData.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btGeneric6DofConstraintData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btGeneric6DofConstraintDoubleData2.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btGeneric6DofConstraintDoubleData2.java
index 62e44b9..36a3d7d 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btGeneric6DofConstraintDoubleData2.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btGeneric6DofConstraintDoubleData2.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btGeneric6DofSpringConstraint.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btGeneric6DofSpringConstraint.java
index c4d98af..d56cee6 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btGeneric6DofSpringConstraint.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btGeneric6DofSpringConstraint.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btGeneric6DofSpringConstraintData.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btGeneric6DofSpringConstraintData.java
index 04b846b..0947d87 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btGeneric6DofSpringConstraintData.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btGeneric6DofSpringConstraintData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btGeneric6DofSpringConstraintDoubleData2.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btGeneric6DofSpringConstraintDoubleData2.java
index 428b075..aee102f 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btGeneric6DofSpringConstraintDoubleData2.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btGeneric6DofSpringConstraintDoubleData2.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btHinge2Constraint.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btHinge2Constraint.java
index 8b23ef0..27e214b 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btHinge2Constraint.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btHinge2Constraint.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btHingeConstraint.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btHingeConstraint.java
index 288adbe..46b6c3e 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btHingeConstraint.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btHingeConstraint.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btHingeConstraintDoubleData.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btHingeConstraintDoubleData.java
index 611b6f0..7cf0132 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btHingeConstraintDoubleData.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btHingeConstraintDoubleData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btHingeConstraintDoubleData2.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btHingeConstraintDoubleData2.java
index 9e2402c..928e893 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btHingeConstraintDoubleData2.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btHingeConstraintDoubleData2.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btHingeConstraintFloatData.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btHingeConstraintFloatData.java
index 98d38ac..3730447 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btHingeConstraintFloatData.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btHingeConstraintFloatData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btHingeFlags.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btHingeFlags.java
index 7675ef2..9301d19 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btHingeFlags.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btHingeFlags.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btJacobianEntry.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btJacobianEntry.java
index 1dcc750..3aaeaa8 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btJacobianEntry.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btJacobianEntry.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btJointFeedback.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btJointFeedback.java
index ccb651c..8b83b44 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btJointFeedback.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btJointFeedback.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btKinematicCharacterController.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btKinematicCharacterController.java
index 8bce105..3850c16 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btKinematicCharacterController.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btKinematicCharacterController.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btPoint2PointConstraint.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btPoint2PointConstraint.java
index 706e572..edcc15c 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btPoint2PointConstraint.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btPoint2PointConstraint.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btPoint2PointConstraintDoubleData.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btPoint2PointConstraintDoubleData.java
index a0fe8d5..8895b69 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btPoint2PointConstraintDoubleData.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btPoint2PointConstraintDoubleData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btPoint2PointConstraintDoubleData2.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btPoint2PointConstraintDoubleData2.java
index b5aa393..554456a 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btPoint2PointConstraintDoubleData2.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btPoint2PointConstraintDoubleData2.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btPoint2PointConstraintFloatData.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btPoint2PointConstraintFloatData.java
index 44d4e42..c17608a 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btPoint2PointConstraintFloatData.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btPoint2PointConstraintFloatData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btPoint2PointFlags.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btPoint2PointFlags.java
index 91afd40..3a706a9 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btPoint2PointFlags.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btPoint2PointFlags.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btRaycastVehicle.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btRaycastVehicle.java
index 480fc2b..1148894 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btRaycastVehicle.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btRaycastVehicle.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btRigidBody.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btRigidBody.java
index e160735..e5f6b09 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btRigidBody.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btRigidBody.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btRigidBodyDoubleData.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btRigidBodyDoubleData.java
index 4519222..86624e4 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btRigidBodyDoubleData.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btRigidBodyDoubleData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btRigidBodyFlags.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btRigidBodyFlags.java
index 9cfb99a..450e089 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btRigidBodyFlags.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btRigidBodyFlags.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btRigidBodyFloatData.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btRigidBodyFloatData.java
index 1a84483..13daea1 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btRigidBodyFloatData.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btRigidBodyFloatData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btRotationalLimitMotor.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btRotationalLimitMotor.java
index 9f600ce..7385ea3 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btRotationalLimitMotor.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btRotationalLimitMotor.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btSequentialImpulseConstraintSolver.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btSequentialImpulseConstraintSolver.java
index 29fb9c4..809d33a 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btSequentialImpulseConstraintSolver.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btSequentialImpulseConstraintSolver.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btSimpleDynamicsWorld.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btSimpleDynamicsWorld.java
index 98aed81..538bd69 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btSimpleDynamicsWorld.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btSimpleDynamicsWorld.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btSliderConstraint.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btSliderConstraint.java
index 5a56a34..28cc9a7 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btSliderConstraint.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btSliderConstraint.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btSliderConstraintData.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btSliderConstraintData.java
index c9d7b55..25f0c86 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btSliderConstraintData.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btSliderConstraintData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btSliderConstraintDoubleData.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btSliderConstraintDoubleData.java
index 757a3cb..dfc0ccb 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btSliderConstraintDoubleData.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btSliderConstraintDoubleData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btSliderFlags.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btSliderFlags.java
index 0592645..802be1f 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btSliderFlags.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btSliderFlags.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btSolve2LinearConstraint.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btSolve2LinearConstraint.java
index 0f4ec76..07d6174 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btSolve2LinearConstraint.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btSolve2LinearConstraint.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btSolverBody.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btSolverBody.java
index 8f3f3df..f8bd044 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btSolverBody.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btSolverBody.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btSolverConstraint.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btSolverConstraint.java
index 61bfc1a..5b1c113 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btSolverConstraint.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btSolverConstraint.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btSolverMode.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btSolverMode.java
index fd13224..c27b1a6 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btSolverMode.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btSolverMode.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btTranslationalLimitMotor.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btTranslationalLimitMotor.java
index 10de320..033063f 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btTranslationalLimitMotor.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btTranslationalLimitMotor.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btTypedConstraint.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btTypedConstraint.java
index e2ac740..0e41a7b 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btTypedConstraint.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btTypedConstraint.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btTypedConstraintData.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btTypedConstraintData.java
index 4bda4ff..06e123b 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btTypedConstraintData.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btTypedConstraintData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btTypedConstraintDoubleData.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btTypedConstraintDoubleData.java
index 5c81829..73f91d2 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btTypedConstraintDoubleData.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btTypedConstraintDoubleData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btTypedConstraintFloatData.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btTypedConstraintFloatData.java
index 7dba1b9..17db836 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btTypedConstraintFloatData.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btTypedConstraintFloatData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btTypedConstraintType.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btTypedConstraintType.java
index fbb08f9..6f9f89b 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btTypedConstraintType.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btTypedConstraintType.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btUniversalConstraint.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btUniversalConstraint.java
index 8db5aee..60f0da4 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btUniversalConstraint.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btUniversalConstraint.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btVehicleRaycaster.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btVehicleRaycaster.java
index f7e7535..61d6002 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btVehicleRaycaster.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btVehicleRaycaster.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btWheelInfo.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btWheelInfo.java
index d228ae6..329f14a 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btWheelInfo.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btWheelInfo.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btWheelInfoConstructionInfo.java b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btWheelInfoConstructionInfo.java
index 1c090fb..51ca6f9 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btWheelInfoConstructionInfo.java
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/com/badlogic/gdx/physics/bullet/dynamics/btWheelInfoConstructionInfo.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/dynamics_wrap.cpp b/extensions/gdx-bullet/jni/swig-src/dynamics/dynamics_wrap.cpp
index fab5321..05823af 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/dynamics_wrap.cpp
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/dynamics_wrap.cpp
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * This file is not intended to be easily readable and contains a number of
  * coding conventions designed to improve portability and efficiency. Do not make
diff --git a/extensions/gdx-bullet/jni/swig-src/dynamics/dynamics_wrap.h b/extensions/gdx-bullet/jni/swig-src/dynamics/dynamics_wrap.h
index bddf7fc..6bdbf06 100644
--- a/extensions/gdx-bullet/jni/swig-src/dynamics/dynamics_wrap.h
+++ b/extensions/gdx-bullet/jni/swig-src/dynamics/dynamics_wrap.h
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * This file is not intended to be easily readable and contains a number of
  * coding conventions designed to improve portability and efficiency. Do not make
diff --git a/extensions/gdx-bullet/jni/swig-src/extras/com/badlogic/gdx/physics/bullet/extras/Extras.java b/extensions/gdx-bullet/jni/swig-src/extras/com/badlogic/gdx/physics/bullet/extras/Extras.java
index bf43688..8137dc6 100644
--- a/extensions/gdx-bullet/jni/swig-src/extras/com/badlogic/gdx/physics/bullet/extras/Extras.java
+++ b/extensions/gdx-bullet/jni/swig-src/extras/com/badlogic/gdx/physics/bullet/extras/Extras.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/extras/com/badlogic/gdx/physics/bullet/extras/ExtrasJNI.java b/extensions/gdx-bullet/jni/swig-src/extras/com/badlogic/gdx/physics/bullet/extras/ExtrasJNI.java
index 2c75aea..f92c5e7 100644
--- a/extensions/gdx-bullet/jni/swig-src/extras/com/badlogic/gdx/physics/bullet/extras/ExtrasJNI.java
+++ b/extensions/gdx-bullet/jni/swig-src/extras/com/badlogic/gdx/physics/bullet/extras/ExtrasJNI.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/extras/com/badlogic/gdx/physics/bullet/extras/SWIGTYPE_p_bParse__btBulletFile.java b/extensions/gdx-bullet/jni/swig-src/extras/com/badlogic/gdx/physics/bullet/extras/SWIGTYPE_p_bParse__btBulletFile.java
index 17b5d0f..1b1a921 100644
--- a/extensions/gdx-bullet/jni/swig-src/extras/com/badlogic/gdx/physics/bullet/extras/SWIGTYPE_p_bParse__btBulletFile.java
+++ b/extensions/gdx-bullet/jni/swig-src/extras/com/badlogic/gdx/physics/bullet/extras/SWIGTYPE_p_bParse__btBulletFile.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/extras/com/badlogic/gdx/physics/bullet/extras/SWIGTYPE_p_btGImpactMeshShape.java b/extensions/gdx-bullet/jni/swig-src/extras/com/badlogic/gdx/physics/bullet/extras/SWIGTYPE_p_btGImpactMeshShape.java
index cecfd2b..3d699c6 100644
--- a/extensions/gdx-bullet/jni/swig-src/extras/com/badlogic/gdx/physics/bullet/extras/SWIGTYPE_p_btGImpactMeshShape.java
+++ b/extensions/gdx-bullet/jni/swig-src/extras/com/badlogic/gdx/physics/bullet/extras/SWIGTYPE_p_btGImpactMeshShape.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/extras/com/badlogic/gdx/physics/bullet/extras/btBulletWorldImporter.java b/extensions/gdx-bullet/jni/swig-src/extras/com/badlogic/gdx/physics/bullet/extras/btBulletWorldImporter.java
index b2fd0fb..d0da869 100644
--- a/extensions/gdx-bullet/jni/swig-src/extras/com/badlogic/gdx/physics/bullet/extras/btBulletWorldImporter.java
+++ b/extensions/gdx-bullet/jni/swig-src/extras/com/badlogic/gdx/physics/bullet/extras/btBulletWorldImporter.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/extras/com/badlogic/gdx/physics/bullet/extras/btStringArray.java b/extensions/gdx-bullet/jni/swig-src/extras/com/badlogic/gdx/physics/bullet/extras/btStringArray.java
index a4774e2..9b1c666 100644
--- a/extensions/gdx-bullet/jni/swig-src/extras/com/badlogic/gdx/physics/bullet/extras/btStringArray.java
+++ b/extensions/gdx-bullet/jni/swig-src/extras/com/badlogic/gdx/physics/bullet/extras/btStringArray.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/extras/com/badlogic/gdx/physics/bullet/extras/btWorldImporter.java b/extensions/gdx-bullet/jni/swig-src/extras/com/badlogic/gdx/physics/bullet/extras/btWorldImporter.java
index ef08ca1..e2fe7bf 100644
--- a/extensions/gdx-bullet/jni/swig-src/extras/com/badlogic/gdx/physics/bullet/extras/btWorldImporter.java
+++ b/extensions/gdx-bullet/jni/swig-src/extras/com/badlogic/gdx/physics/bullet/extras/btWorldImporter.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/extras/extras_wrap.cpp b/extensions/gdx-bullet/jni/swig-src/extras/extras_wrap.cpp
index 436660a..f168831 100644
--- a/extensions/gdx-bullet/jni/swig-src/extras/extras_wrap.cpp
+++ b/extensions/gdx-bullet/jni/swig-src/extras/extras_wrap.cpp
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * This file is not intended to be easily readable and contains a number of
  * coding conventions designed to improve portability and efficiency. Do not make
diff --git a/extensions/gdx-bullet/jni/swig-src/extras/extras_wrap.h b/extensions/gdx-bullet/jni/swig-src/extras/extras_wrap.h
index af2def7..22fdece 100644
--- a/extensions/gdx-bullet/jni/swig-src/extras/extras_wrap.h
+++ b/extensions/gdx-bullet/jni/swig-src/extras/extras_wrap.h
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * This file is not intended to be easily readable and contains a number of
  * coding conventions designed to improve portability and efficiency. Do not make
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/ConvexH.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/ConvexH.java
index 92e7136..e0f61ac 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/ConvexH.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/ConvexH.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/GrahamVector3.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/GrahamVector3.java
index b1ebd42..d1bcf84 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/GrahamVector3.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/GrahamVector3.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/HullDesc.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/HullDesc.java
index e80e7a1..9745a90 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/HullDesc.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/HullDesc.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/HullError.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/HullError.java
index 381118a..4510dd2 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/HullError.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/HullError.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/HullFlag.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/HullFlag.java
index 8dd0342..2aad1b5 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/HullFlag.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/HullFlag.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/HullLibrary.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/HullLibrary.java
index 0e5c788..31be682 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/HullLibrary.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/HullLibrary.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/HullResult.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/HullResult.java
index be74b0a..7d60b19 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/HullResult.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/HullResult.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/LinearMath.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/LinearMath.java
index b406da8..7b1a4f3 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/LinearMath.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/LinearMath.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/LinearMathConstants.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/LinearMathConstants.java
index 918aa70..97b23e3 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/LinearMathConstants.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/LinearMathConstants.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/LinearMathJNI.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/LinearMathJNI.java
index 92a8192..7524d9c 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/LinearMathJNI.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/LinearMathJNI.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/PHullResult.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/PHullResult.java
index 80ba483..f045a13 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/PHullResult.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/PHullResult.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/SWIGTYPE_p_btAlignedObjectArrayT_ConvexH__HalfEdge_t.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/SWIGTYPE_p_btAlignedObjectArrayT_ConvexH__HalfEdge_t.java
index 6c53f08..4a2e9e3 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/SWIGTYPE_p_btAlignedObjectArrayT_ConvexH__HalfEdge_t.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/SWIGTYPE_p_btAlignedObjectArrayT_ConvexH__HalfEdge_t.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/SWIGTYPE_p_btAlignedObjectArrayT_GrahamVector3_t.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/SWIGTYPE_p_btAlignedObjectArrayT_GrahamVector3_t.java
index 2124c41..839f781 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/SWIGTYPE_p_btAlignedObjectArrayT_GrahamVector3_t.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/SWIGTYPE_p_btAlignedObjectArrayT_GrahamVector3_t.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/SWIGTYPE_p_btAlignedObjectArrayT_btConvexHullComputer__Edge_t.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/SWIGTYPE_p_btAlignedObjectArrayT_btConvexHullComputer__Edge_t.java
index b26ea82..2cbfcd5 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/SWIGTYPE_p_btAlignedObjectArrayT_btConvexHullComputer__Edge_t.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/SWIGTYPE_p_btAlignedObjectArrayT_btConvexHullComputer__Edge_t.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/SWIGTYPE_p_btAlignedObjectArrayT_btPlane_t.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/SWIGTYPE_p_btAlignedObjectArrayT_btPlane_t.java
index 200525f..da01787 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/SWIGTYPE_p_btAlignedObjectArrayT_btPlane_t.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/SWIGTYPE_p_btAlignedObjectArrayT_btPlane_t.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/SWIGTYPE_p_btAlignedObjectArrayT_int_t.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/SWIGTYPE_p_btAlignedObjectArrayT_int_t.java
index 9cbf7b1..fb0e4cd 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/SWIGTYPE_p_btAlignedObjectArrayT_int_t.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/SWIGTYPE_p_btAlignedObjectArrayT_int_t.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/SWIGTYPE_p_btAlignedObjectArrayT_unsigned_int_t.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/SWIGTYPE_p_btAlignedObjectArrayT_unsigned_int_t.java
index 6714c08..49767df 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/SWIGTYPE_p_btAlignedObjectArrayT_unsigned_int_t.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/SWIGTYPE_p_btAlignedObjectArrayT_unsigned_int_t.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/SWIGTYPE_p_btMatrix3x3DoubleData.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/SWIGTYPE_p_btMatrix3x3DoubleData.java
index 7dda778..ea68312 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/SWIGTYPE_p_btMatrix3x3DoubleData.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/SWIGTYPE_p_btMatrix3x3DoubleData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/SWIGTYPE_p_btMatrix3x3FloatData.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/SWIGTYPE_p_btMatrix3x3FloatData.java
index 1785942..33196e4 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/SWIGTYPE_p_btMatrix3x3FloatData.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/SWIGTYPE_p_btMatrix3x3FloatData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/SWIGTYPE_p_f_p_void__void.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/SWIGTYPE_p_f_p_void__void.java
index e3ebb0c..e7bf851 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/SWIGTYPE_p_f_p_void__void.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/SWIGTYPE_p_f_p_void__void.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/SWIGTYPE_p_f_size_t__p_void.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/SWIGTYPE_p_f_size_t__p_void.java
index 5e8294f..103f144 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/SWIGTYPE_p_f_size_t__p_void.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/SWIGTYPE_p_f_size_t__p_void.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/SWIGTYPE_p_f_size_t_int__p_void.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/SWIGTYPE_p_f_size_t_int__p_void.java
index 8451686..b188bcc 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/SWIGTYPE_p_f_size_t_int__p_void.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/SWIGTYPE_p_f_size_t_int__p_void.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/SWIGTYPE_p_float.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/SWIGTYPE_p_float.java
index b7d0153..17c9d5b 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/SWIGTYPE_p_float.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/SWIGTYPE_p_float.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btAngleCompareFunc.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btAngleCompareFunc.java
index bf764a2..e54f9dc 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btAngleCompareFunc.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btAngleCompareFunc.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btBlock.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btBlock.java
index fc90ef5..68f56c5 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btBlock.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btBlock.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btConvexHullComputer.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btConvexHullComputer.java
index 3fbf48f..55baf2a 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btConvexHullComputer.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btConvexHullComputer.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btConvexSeparatingDistanceUtil.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btConvexSeparatingDistanceUtil.java
index f4ac574..5432f08 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btConvexSeparatingDistanceUtil.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btConvexSeparatingDistanceUtil.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btDefaultMotionState.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btDefaultMotionState.java
index f97afc4..741c871 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btDefaultMotionState.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btDefaultMotionState.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btGEN_Link.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btGEN_Link.java
index 421935d..d856f65 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btGEN_Link.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btGEN_Link.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btGEN_List.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btGEN_List.java
index 2725359..26915da 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btGEN_List.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btGEN_List.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btGeometryUtil.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btGeometryUtil.java
index e290b35..125f476 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btGeometryUtil.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btGeometryUtil.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btHashInt.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btHashInt.java
index 4673a58..de70e3b 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btHashInt.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btHashInt.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btHashPtr.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btHashPtr.java
index 070dfce..2df24ba 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btHashPtr.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btHashPtr.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btHashString.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btHashString.java
index 2a87dbc..15f22ea 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btHashString.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btHashString.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btIDebugDraw.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btIDebugDraw.java
index b65817c..aeebcaf 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btIDebugDraw.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btIDebugDraw.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btMotionState.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btMotionState.java
index a454f2d..3fb0a8d 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btMotionState.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btMotionState.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btPlane.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btPlane.java
index be4c77d..cfb341c 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btPlane.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btPlane.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btPoolAllocator.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btPoolAllocator.java
index cbd965c..cc155f5 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btPoolAllocator.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btPoolAllocator.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btQuaternion.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btQuaternion.java
index 771ce6e..b1a5e03 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btQuaternion.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btQuaternion.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btScalarArray.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btScalarArray.java
index 99e5710..34b62da 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btScalarArray.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btScalarArray.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btStackAlloc.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btStackAlloc.java
index ce75fe9..0b5e33e 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btStackAlloc.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btStackAlloc.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btTransform.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btTransform.java
index e171340..5460844 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btTransform.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btTransform.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btTransformDoubleData.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btTransformDoubleData.java
index a3fc297..ba6bb6d 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btTransformDoubleData.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btTransformDoubleData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btTransformFloatData.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btTransformFloatData.java
index bbacfbe..fb99a73 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btTransformFloatData.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btTransformFloatData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btTransformUtil.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btTransformUtil.java
index a635b68..84e3da2 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btTransformUtil.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btTransformUtil.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btTypedObject.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btTypedObject.java
index 712895c..3808fe2 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btTypedObject.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btTypedObject.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btVector3.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btVector3.java
index b97639a..02f34e2 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btVector3.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btVector3.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btVector3Array.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btVector3Array.java
index b923544..d52a043 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btVector3Array.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btVector3Array.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btVector3DoubleData.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btVector3DoubleData.java
index 03adbd1..165c058 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btVector3DoubleData.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btVector3DoubleData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btVector3FloatData.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btVector3FloatData.java
index 62e4459..5ae1f57 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btVector3FloatData.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btVector3FloatData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btVector4.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btVector4.java
index c2ba8c0..54e8967 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btVector4.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/btVector4.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/int4.java b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/int4.java
index 076ff17..dc70cb4 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/int4.java
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/com/badlogic/gdx/physics/bullet/linearmath/int4.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/linearmath_wrap.cpp b/extensions/gdx-bullet/jni/swig-src/linearmath/linearmath_wrap.cpp
index 6318404..ee9b25f 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/linearmath_wrap.cpp
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/linearmath_wrap.cpp
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * This file is not intended to be easily readable and contains a number of
  * coding conventions designed to improve portability and efficiency. Do not make
diff --git a/extensions/gdx-bullet/jni/swig-src/linearmath/linearmath_wrap.h b/extensions/gdx-bullet/jni/swig-src/linearmath/linearmath_wrap.h
index 1f841c3..03858b3 100644
--- a/extensions/gdx-bullet/jni/swig-src/linearmath/linearmath_wrap.h
+++ b/extensions/gdx-bullet/jni/swig-src/linearmath/linearmath_wrap.h
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * This file is not intended to be easily readable and contains a number of
  * coding conventions designed to improve portability and efficiency. Do not make
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_a_3_1__a_3_1__float.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_a_3_1__a_3_1__float.java
index b1f56a1..343531a 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_a_3_1__a_3_1__float.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_a_3_1__a_3_1__float.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_bool_t.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_bool_t.java
index d07fab5..7302378 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_bool_t.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_bool_t.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Anchor_t.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Anchor_t.java
index d50b629..7c85269 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Anchor_t.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Anchor_t.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Cluster_p_t.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Cluster_p_t.java
index 6427f5a..8bb6920 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Cluster_p_t.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Cluster_p_t.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Face_t.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Face_t.java
index 0f8299d..d31ce88 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Face_t.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Face_t.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Joint_p_t.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Joint_p_t.java
index a9b05b3..d7ec549 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Joint_p_t.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Joint_p_t.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Link_t.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Link_t.java
index 8d552e9..e251035 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Link_t.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Link_t.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Material_p_t.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Material_p_t.java
index 1424372..52401c3 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Material_p_t.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Material_p_t.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Node_p_t.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Node_p_t.java
index 77a9618..19a961b 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Node_p_t.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Node_p_t.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Node_t.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Node_t.java
index a38fd07..da5b910 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Node_t.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Node_t.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Note_t.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Note_t.java
index e1424b9..9ef9185 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Note_t.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Note_t.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__RContact_t.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__RContact_t.java
index ed8e57c..a146519 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__RContact_t.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__RContact_t.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__SContact_t.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__SContact_t.java
index 38193d9..ca8354a 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__SContact_t.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__SContact_t.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Tetra_t.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Tetra_t.java
index 88a11d0..96fc15f 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Tetra_t.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Tetra_t.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__ePSolver____t.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__ePSolver____t.java
index f6a436d..73ffbaf 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__ePSolver____t.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__ePSolver____t.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__eVSolver____t.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__eVSolver____t.java
index 49149fb..5c5f20c 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__eVSolver____t.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__eVSolver____t.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody_p_t.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody_p_t.java
index 292f200..a37f3d7 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody_p_t.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody_p_t.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSparseSdfT_3_t__Cell_p_t.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSparseSdfT_3_t__Cell_p_t.java
index 5c4044d..80a3dc6 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSparseSdfT_3_t__Cell_p_t.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_btSparseSdfT_3_t__Cell_p_t.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_int_t.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_int_t.java
index 83536e4..53488ed 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_int_t.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btAlignedObjectArrayT_int_t.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btMatrix3x3.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btMatrix3x3.java
index 9867266..1e46676 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btMatrix3x3.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btMatrix3x3.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btMatrix3x3FloatData.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btMatrix3x3FloatData.java
index 40b0fa3..64870af 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btMatrix3x3FloatData.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btMatrix3x3FloatData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btSoftBody__eFeature___.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btSoftBody__eFeature___.java
index a3f59cb..c5600a5 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btSoftBody__eFeature___.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_btSoftBody__eFeature___.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_f_p_btSoftBody_float_float__void.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_f_p_btSoftBody_float_float__void.java
index 681090d..e63e328 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_f_p_btSoftBody_float_float__void.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_f_p_btSoftBody_float_float__void.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_float.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_float.java
index df74137..d648434 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_float.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_float.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_int.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_int.java
index 3779cea..a4ccb6e 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_int.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_int.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_p_SoftBodyMaterialData.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_p_SoftBodyMaterialData.java
index 4039f30..546e9df 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_p_SoftBodyMaterialData.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_p_SoftBodyMaterialData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_p_btSoftBody.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_p_btSoftBody.java
index 9154929..323a2c1 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_p_btSoftBody.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_p_btSoftBody.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_p_btSoftBody__Node.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_p_btSoftBody__Node.java
index 9c04da1..072c47e 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_p_btSoftBody__Node.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SWIGTYPE_p_p_btSoftBody__Node.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SoftBodyClusterData.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SoftBodyClusterData.java
index 5643c1d..33c533e 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SoftBodyClusterData.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SoftBodyClusterData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SoftBodyConfigData.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SoftBodyConfigData.java
index 0c20369..3881bfc 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SoftBodyConfigData.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SoftBodyConfigData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SoftBodyFaceData.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SoftBodyFaceData.java
index 76ab2e5..374aea1 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SoftBodyFaceData.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SoftBodyFaceData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SoftBodyLinkData.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SoftBodyLinkData.java
index 67bc83f..5610b29 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SoftBodyLinkData.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SoftBodyLinkData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SoftBodyMaterialData.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SoftBodyMaterialData.java
index 34109dd..c36611e 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SoftBodyMaterialData.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SoftBodyMaterialData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SoftBodyNodeData.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SoftBodyNodeData.java
index 417750d..0d3887e 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SoftBodyNodeData.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SoftBodyNodeData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SoftBodyPoseData.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SoftBodyPoseData.java
index 04a82f3..8813c03 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SoftBodyPoseData.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SoftBodyPoseData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SoftBodyTetraData.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SoftBodyTetraData.java
index 948f199..ac60e94 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SoftBodyTetraData.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SoftBodyTetraData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SoftRigidAnchorData.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SoftRigidAnchorData.java
index be4940e..968c3ff 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SoftRigidAnchorData.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SoftRigidAnchorData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/Softbody.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/Softbody.java
index 85582b4..99fc81a 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/Softbody.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/Softbody.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SoftbodyConstants.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SoftbodyConstants.java
index 5f84f52..4e4f500 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SoftbodyConstants.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SoftbodyConstants.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SoftbodyJNI.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SoftbodyJNI.java
index c0d7531..955965b 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SoftbodyJNI.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/SoftbodyJNI.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btCPUVertexBufferDescriptor.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btCPUVertexBufferDescriptor.java
index 9781938..3ab6c1b 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btCPUVertexBufferDescriptor.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btCPUVertexBufferDescriptor.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btDefaultSoftBodySolver.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btDefaultSoftBodySolver.java
index 6e1e5ba..3829a78 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btDefaultSoftBodySolver.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btDefaultSoftBodySolver.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btEigen.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btEigen.java
index 0336c49..83adfae 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btEigen.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btEigen.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftBody.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftBody.java
index 44ae8ca..6a77291 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftBody.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftBody.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftBodyCollisionShape.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftBodyCollisionShape.java
index 4ce42d8..ff4143e 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftBodyCollisionShape.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftBodyCollisionShape.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftBodyConcaveCollisionAlgorithm.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftBodyConcaveCollisionAlgorithm.java
index f277fe4..0391014 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftBodyConcaveCollisionAlgorithm.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftBodyConcaveCollisionAlgorithm.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftBodyFloatData.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftBodyFloatData.java
index bdc1c16..5e1abd6 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftBodyFloatData.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftBodyFloatData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftBodyHelpers.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftBodyHelpers.java
index 0652e03..22ec555 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftBodyHelpers.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftBodyHelpers.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftBodyJointData.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftBodyJointData.java
index 76b7a41..8e113bd 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftBodyJointData.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftBodyJointData.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftBodyRigidBodyCollisionConfiguration.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftBodyRigidBodyCollisionConfiguration.java
index 5353b2d..d3b6519 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftBodyRigidBodyCollisionConfiguration.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftBodyRigidBodyCollisionConfiguration.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftBodySolver.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftBodySolver.java
index b7372da..a07e922 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftBodySolver.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftBodySolver.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftBodySolverOutput.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftBodySolverOutput.java
index f5e8b50..ef1d392 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftBodySolverOutput.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftBodySolverOutput.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftBodyTriangleCallback.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftBodyTriangleCallback.java
index 5e9d823..424d8d7 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftBodyTriangleCallback.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftBodyTriangleCallback.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftBodyWorldInfo.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftBodyWorldInfo.java
index 45dc1f2..c19ded3 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftBodyWorldInfo.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftBodyWorldInfo.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftClusterCollisionShape.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftClusterCollisionShape.java
index 14f7dac..6ba9421 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftClusterCollisionShape.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftClusterCollisionShape.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftColliders.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftColliders.java
index f652873..be51ba3 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftColliders.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftColliders.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftJointBodyType.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftJointBodyType.java
index 0d94c04..1752eee 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftJointBodyType.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftJointBodyType.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftRigidCollisionAlgorithm.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftRigidCollisionAlgorithm.java
index 22cd22a..c2395ad 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftRigidCollisionAlgorithm.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftRigidCollisionAlgorithm.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftRigidDynamicsWorld.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftRigidDynamicsWorld.java
index 4eb181a..60b550b 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftRigidDynamicsWorld.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftRigidDynamicsWorld.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftSoftCollisionAlgorithm.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftSoftCollisionAlgorithm.java
index 5f0165c..e0cd6e2 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftSoftCollisionAlgorithm.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSoftSoftCollisionAlgorithm.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSparseSdf3.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSparseSdf3.java
index 1050ded..bb00ee8 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSparseSdf3.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btSparseSdf3.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btTriIndex.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btTriIndex.java
index 5afc3b9..f1fdc8c 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btTriIndex.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btTriIndex.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btVertexBufferDescriptor.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btVertexBufferDescriptor.java
index f848cdf..e069599 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btVertexBufferDescriptor.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/btVertexBufferDescriptor.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/fDrawFlags.java b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/fDrawFlags.java
index 93971c1..b3b2e1f 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/fDrawFlags.java
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/com/badlogic/gdx/physics/bullet/softbody/fDrawFlags.java
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * Do not make changes to this file unless you know what you are doing--modify
  * the SWIG interface file instead.
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/softbody_wrap.cpp b/extensions/gdx-bullet/jni/swig-src/softbody/softbody_wrap.cpp
index ece0f31..85f1c77 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/softbody_wrap.cpp
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/softbody_wrap.cpp
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * This file is not intended to be easily readable and contains a number of
  * coding conventions designed to improve portability and efficiency. Do not make
diff --git a/extensions/gdx-bullet/jni/swig-src/softbody/softbody_wrap.h b/extensions/gdx-bullet/jni/swig-src/softbody/softbody_wrap.h
index b352127..aa1a874 100644
--- a/extensions/gdx-bullet/jni/swig-src/softbody/softbody_wrap.h
+++ b/extensions/gdx-bullet/jni/swig-src/softbody/softbody_wrap.h
@@ -1,6 +1,6 @@
 /* ----------------------------------------------------------------------------
  * This file was automatically generated by SWIG (http://www.swig.org).
- * Version 3.0.0
+ * Version 3.0.2
  *
  * This file is not intended to be easily readable and contains a number of
  * coding conventions designed to improve portability and efficiency. Do not make
diff --git a/extensions/gdx-bullet/jni/swig/collision/btManifoldPoint.i b/extensions/gdx-bullet/jni/swig/collision/btManifoldPoint.i
index b7d329f..8640ad0 100644
--- a/extensions/gdx-bullet/jni/swig/collision/btManifoldPoint.i
+++ b/extensions/gdx-bullet/jni/swig/collision/btManifoldPoint.i
@@ -1,6 +1,41 @@
 %module btManifoldPoint
 
-CREATE_POOLED_OBJECT(btManifoldPoint, com/badlogic/gdx/physics/bullet/collision/btManifoldPoint);
+%typemap(javadirectorin) btManifoldPoint, const btManifoldPoint, const btManifoldPoint &, btManifoldPoint & 	"btManifoldPoint.obtainForArgument($1, false)"
+
+%typemap(javaout) 	btManifoldPoint *, const btManifoldPoint *, btManifoldPoint * const & {
+	return btManifoldPoint.obtainTemp($jnicall, $owner);
+}
+
+%typemap(javacode) btManifoldPoint %{
+	private final static btManifoldPoint temp = new btManifoldPoint(0, false);
+	/** Obtains a temporary instance, used by native methods that return a btManifoldPoint instance */
+	protected static btManifoldPoint obtainTemp(long cPtr, boolean own) {
+		temp.reset(cPtr, own);
+		return temp;
+	}
+	
+	private static btManifoldPoint[] argumentInstances = new btManifoldPoint[] {new btManifoldPoint(0, false),
+		new btManifoldPoint(0, false), new btManifoldPoint(0, false), new btManifoldPoint(0, false)};
+	private static int argumentIndex = -1;
+	/** Obtains a temporary instance, used for callback methods with one or more btManifoldPoint arguments */
+	protected static btManifoldPoint obtainForArgument(final long swigCPtr, boolean owner) {
+		btManifoldPoint instance = argumentInstances[argumentIndex = (argumentIndex + 1) & 3];
+		instance.reset(swigCPtr, owner);
+		return instance;
+	}
+%}
+
+%ignore btManifoldPoint::m_localPointA;
+%ignore btManifoldPoint::m_localPointB;
+%ignore btManifoldPoint::m_positionWorldOnA;
+%ignore btManifoldPoint::m_positionWorldOnB;
+%ignore btManifoldPoint::m_normalWorldOnB;
+%ignore btManifoldPoint::m_lateralFrictionDir1;
+%ignore btManifoldPoint::m_lateralFrictionDir2;
+%ignore btManifoldPoint::getPositionWorldOnA() const;
+%ignore btManifoldPoint::getPositionWorldOnB() const;
+//%rename(internalGetPositionWorldOnA) btManifoldPoint::getPositionWorldOnA() const;
+//%rename(internalGetPositionWorldOnB) btManifoldPoint::getPositionWorldOnB() const;
 
 %{
 #include <BulletCollision/NarrowPhaseCollision/btManifoldPoint.h>
@@ -17,4 +52,60 @@ CREATE_POOLED_OBJECT(btManifoldPoint, com/badlogic/gdx/physics/bullet/collision/
 	void setUserValue(int value) {
 		$self->m_userPersistentData = (void*)value;
 	}
+	
+	void getLocalPointA(btVector3 &out) {
+		out = $self->m_localPointA;
+	}
+	
+	void setLocalPointA(const btVector3 &value) {
+		$self->m_localPointA = value;
+	}
+	
+	void getLocalPointB(btVector3 &out) {
+		out = $self->m_localPointB;
+	}
+	
+	void setLocalPointB(const btVector3 &value) {
+		$self->m_localPointB = value;
+	}
+	
+	void getPositionWorldOnA(btVector3 &out) {
+		out = $self->m_positionWorldOnA;
+	}
+	
+	void setPositionWorldOnA(const btVector3 &value) {
+		$self->m_positionWorldOnA = value;
+	}
+	
+	void getPositionWorldOnB(btVector3 &out) {
+		out = $self->m_positionWorldOnB;
+	}
+	
+	void setPositionWorldOnB(const btVector3 &value) {
+		$self->m_positionWorldOnB = value;
+	}
+	
+	void getNormalWorldOnB(btVector3 &out) {
+		out = $self->m_normalWorldOnB;
+	}
+	
+	void setNormalWorldOnB(const btVector3 &value) {
+		$self->m_normalWorldOnB = value;
+	}
+	
+	void getLateralFrictionDir1(btVector3 &out) {
+		out = $self->m_lateralFrictionDir1;
+	}
+	
+	void setLateralFrictionDir1(const btVector3 &value) {
+		$self->m_lateralFrictionDir1 = value;
+	}
+	
+	void getLateralFrictionDir2(btVector3 &out) {
+		out = $self->m_lateralFrictionDir2;
+	}
+	
+	void setLateralFrictionDir2(const btVector3 &value) {
+		$self->m_lateralFrictionDir2 = value;
+	}
 };
\ No newline at end of file
diff --git a/extensions/gdx-bullet/jni/swig/collision/collision.i b/extensions/gdx-bullet/jni/swig/collision/collision.i
index d1e4052..5ff64e2 100644
--- a/extensions/gdx-bullet/jni/swig/collision/collision.i
+++ b/extensions/gdx-bullet/jni/swig/collision/collision.i
@@ -23,8 +23,6 @@
 %include "../../swig-src/linearmath/classes.i"
 
 %ignore btManifoldPoint::getLifeTime;
-%ignore btManifoldPoint::getPositionWorldOnA;
-%ignore btManifoldPoint::getPositionWorldOnB;
 %ignore btManifoldPoint::getAppliedImpulse;
 %ignore btVoronoiSimplexSolver::setEqualVertexThreshold;
 %ignore btVoronoiSimplexSolver::getEqualVertexThreshold;
diff --git a/extensions/gdx-bullet/jni/swig/common/gdxPooledTypemap.i b/extensions/gdx-bullet/jni/swig/common/gdxPooledTypemap.i
index 124dc42..86cc2bd 100644
--- a/extensions/gdx-bullet/jni/swig/common/gdxPooledTypemap.i
+++ b/extensions/gdx-bullet/jni/swig/common/gdxPooledTypemap.i
@@ -111,7 +111,6 @@
 	gdx_set##JTYPE##From##CTYPE(jenv, $input, $1);
 	gdxAutoCommit##CTYPE##AndRelease##JTYPE auto_commit_$1(jenv, $input, &$1, TOSTRING##JTYPE(pool##JTYPE));
 }
-
 %typemap(out, fragment="gdxBulletHelpers##JTYPE", noblock=1)		CTYPE, CTYPE &, const CTYPE &	{
 	$result = gdx_getReturn##JTYPE(jenv);
 	gdx_set##JTYPE##From##CTYPE(jenv, $result, $1);
diff --git a/extensions/gdx-freetype/src/com/badlogic/gdx/graphics/g2d/freetype/FreeTypeFontGenerator.java b/extensions/gdx-freetype/src/com/badlogic/gdx/graphics/g2d/freetype/FreeTypeFontGenerator.java
index fd39212..cbccac2 100644
--- a/extensions/gdx-freetype/src/com/badlogic/gdx/graphics/g2d/freetype/FreeTypeFontGenerator.java
+++ b/extensions/gdx-freetype/src/com/badlogic/gdx/graphics/g2d/freetype/FreeTypeFontGenerator.java
@@ -127,7 +127,7 @@ public class FreeTypeFontGenerator implements Disposable {
 	 * need to fit onto a single texture.
 	 * @param size the size in pixels
 	 * @param characters the characters the font should contain
-	 * @param flip whether to flip the font horizontally, see {@link BitmapFont#BitmapFont(FileHandle, TextureRegion, boolean)}
+	 * @param flip whether to flip the font vertically, see {@link BitmapFont#BitmapFont(FileHandle, TextureRegion, boolean)}
 	 * @deprecated use {@link #generateFont(FreeTypeFontParameter)} instead */
 	public BitmapFont generateFont (int size, String characters, boolean flip) {
 		FreeTypeBitmapFontData data = generateData(size, characters, flip, null);
@@ -259,7 +259,7 @@ public class FreeTypeFontGenerator implements Disposable {
 	 * 
 	 * @param size the size in pixels
 	 * @param characters the characters the font should contain
-	 * @param flip whether to flip the font horizontally, see {@link BitmapFont#BitmapFont(FileHandle, TextureRegion, boolean)}
+	 * @param flip whether to flip the font vertically, see {@link BitmapFont#BitmapFont(FileHandle, TextureRegion, boolean)}
 	 * @deprecated use {@link #generateData(FreeTypeFontParameter)} instead */
 	public FreeTypeBitmapFontData generateData (int size, String characters, boolean flip) {
 		return generateData(size, characters, flip, null);
@@ -270,7 +270,7 @@ public class FreeTypeFontGenerator implements Disposable {
 	 * 
 	 * @param size the size in pixels
 	 * @param characters the characters the font should contain
-	 * @param flip whether to flip the font horizontally, see {@link BitmapFont#BitmapFont(FileHandle, TextureRegion, boolean)}
+	 * @param flip whether to flip the font vertically, see {@link BitmapFont#BitmapFont(FileHandle, TextureRegion, boolean)}
 	 * @param packer the optional PixmapPacker to use
 	 * @deprecated use {@link #generateData(FreeTypeFontParameter)} instead */
 	public FreeTypeBitmapFontData generateData (int size, String characters, boolean flip, PixmapPacker packer) {
@@ -500,7 +500,7 @@ public class FreeTypeFontGenerator implements Disposable {
 		public boolean kerning = true;
 		/** The optional PixmapPacker to use */
 		public PixmapPacker packer = null;
-		/** Whether to flip the font horizontally */
+		/** Whether to flip the font vertically */
 		public boolean flip = false;
 		/** Whether or not to generate mip maps for the resulting texture */
 		public boolean genMipMaps = false;
diff --git a/extensions/gdx-freetype/src/com/badlogic/gdx/graphics/g2d/freetype/FreeTypeFontGeneratorLoader.java b/extensions/gdx-freetype/src/com/badlogic/gdx/graphics/g2d/freetype/FreeTypeFontGeneratorLoader.java
index 4879fdc..8974a09 100644
--- a/extensions/gdx-freetype/src/com/badlogic/gdx/graphics/g2d/freetype/FreeTypeFontGeneratorLoader.java
+++ b/extensions/gdx-freetype/src/com/badlogic/gdx/graphics/g2d/freetype/FreeTypeFontGeneratorLoader.java
@@ -46,11 +46,11 @@ public class FreeTypeFontGeneratorLoader extends
 		return generator;
 	}
 
-	static public class FreeTypeFontGeneratorParameters extends AssetLoaderParameters<FreeTypeFontGenerator> {
-	}
-
 	@Override
 	public Array<AssetDescriptor> getDependencies (String fileName, FileHandle file, FreeTypeFontGeneratorParameters parameter) {
 		return null;
 	}
+	
+	static public class FreeTypeFontGeneratorParameters extends AssetLoaderParameters<FreeTypeFontGenerator> {
+	}
 }
diff --git a/extensions/gdx-freetype/src/com/badlogic/gdx/graphics/g2d/freetype/FreetypeFontLoader.java b/extensions/gdx-freetype/src/com/badlogic/gdx/graphics/g2d/freetype/FreetypeFontLoader.java
new file mode 100644
index 0000000..4bc1488
--- /dev/null
+++ b/extensions/gdx-freetype/src/com/badlogic/gdx/graphics/g2d/freetype/FreetypeFontLoader.java
@@ -0,0 +1,54 @@
+package com.badlogic.gdx.graphics.g2d.freetype;
+
+import com.badlogic.gdx.assets.AssetDescriptor;
+import com.badlogic.gdx.assets.AssetLoaderParameters;
+import com.badlogic.gdx.assets.AssetManager;
+import com.badlogic.gdx.assets.loaders.AsynchronousAssetLoader;
+import com.badlogic.gdx.assets.loaders.FileHandleResolver;
+import com.badlogic.gdx.files.FileHandle;
+import com.badlogic.gdx.graphics.g2d.BitmapFont;
+import com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData;
+import com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator.FreeTypeBitmapFontData;
+import com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator.FreeTypeFontParameter;
+import com.badlogic.gdx.utils.Array;
+
+/**
+ * Creates {@link BitmapFont} instances from FreeType font files. Requires a {@link FreeTypeFontLoaderParameter} to be
+ * passed to {@link AssetManager#load(String, Class, AssetLoaderParameters)} which specifies the name of the TTF
+ * file as well the parameters used to generate the BitmapFont (size, characters, etc.) 
+ */
+public class FreetypeFontLoader extends AsynchronousAssetLoader<BitmapFont, FreetypeFontLoader.FreeTypeFontLoaderParameter>{
+
+	public FreetypeFontLoader (FileHandleResolver resolver) {
+		super(resolver);
+	}
+
+	public static class FreeTypeFontLoaderParameter extends AssetLoaderParameters<BitmapFont>{
+		/** the name of the TTF file to be used to load the font **/
+		public String fontFileName;
+		/** the parameters used to generate the font, e.g. size, characters, etc. **/
+		public FreeTypeFontParameter fontParameters = new FreeTypeFontParameter();
+	}
+
+	@Override
+	public void loadAsync (AssetManager manager, String fileName, FileHandle file, FreeTypeFontLoaderParameter parameter) {
+		if(parameter == null) throw new RuntimeException("FreetypeFontParameter must be set in AssetManager#load to point at a TTF file!");		
+	}
+
+	@Override
+	public BitmapFont loadSync (AssetManager manager, String fileName, FileHandle file, FreeTypeFontLoaderParameter parameter) {
+		if(parameter == null) throw new RuntimeException("FreetypeFontParameter must be set in AssetManager#load to point at a TTF file!");
+		FreeTypeFontGenerator generator = manager.get(parameter.fontFileName, FreeTypeFontGenerator.class);	
+		FreeTypeBitmapFontData data = generator.generateData(parameter.fontParameters);
+		BitmapFont font = new BitmapFont(data, data.getTextureRegions(), false);
+		font.setOwnsTexture(true);
+		return font;
+	}
+
+	@Override
+	public Array<AssetDescriptor> getDependencies (String fileName, FileHandle file, FreeTypeFontLoaderParameter parameter) {
+		Array<AssetDescriptor> deps = new Array<AssetDescriptor>();
+		deps.add(new AssetDescriptor<FreeTypeFontGenerator>(parameter.fontFileName, FreeTypeFontGenerator.class));
+		return deps;
+	}
+}
diff --git a/extensions/gdx-setup/src/com/badlogic/gdx/setup/DependencyBank.java b/extensions/gdx-setup/src/com/badlogic/gdx/setup/DependencyBank.java
index 96bb4bd..072106c 100644
--- a/extensions/gdx-setup/src/com/badlogic/gdx/setup/DependencyBank.java
+++ b/extensions/gdx-setup/src/com/badlogic/gdx/setup/DependencyBank.java
@@ -10,7 +10,7 @@ public class DependencyBank {
 	static String libgdxVersion = "1.2.0";
 	//Temporary snapshot version, we need a more dynamic solution for pointing to the latest nightly
 	static String libgdxNightlyVersion = "1.2.1-SNAPSHOT";
-	static String roboVMVersion = "0.0.13";
+	static String roboVMVersion = "0.0.14";
 	static String buildToolsVersion = "19.1.0";
 	static String androidAPILevel = "19";
 	static String gwtVersion = "2.6.0";
@@ -24,7 +24,7 @@ public class DependencyBank {
 	//Project plugins
 	static String gwtPluginImport = "de.richsource.gradle.plugins:gwt-gradle-plugin:0.4";
 	static String androidPluginImport = "com.android.tools.build:gradle:0.10+";
-	static String roboVMPluginImport = "com.github.jtakakura:gradle-robovm-plugin:0.0.9";
+	static String roboVMPluginImport = "com.github.jtakakura:gradle-robovm-plugin:0.0.10";
 
 	HashMap<ProjectDependency, Dependency> gdxDependencies = new HashMap<ProjectDependency, Dependency>();
 	LinkedHashMap<ProjectDependency, String[]> gwtInheritances = new LinkedHashMap<ProjectDependency, String[]>();
@@ -43,6 +43,7 @@ public class DependencyBank {
 		gwtInheritances.put(ProjectDependency.CONTROLLERS, new String[]{"com.badlogic.gdx.controllers.controllers-gwt"});
 		gwtInheritances.put(ProjectDependency.BOX2D, new String[]{"com.badlogic.gdx.physics.box2d.box2d-gwt"});
 		gwtInheritances.put(ProjectDependency.BOX2DLIGHTS, new String[]{"Box2DLights"});
+		gwtInheritances.put(ProjectDependency.ASHLEY, new String[]{"com.badlogic.ashley_gwt"});
 	}
 
 	public Dependency getDependency(ProjectDependency gdx) {
@@ -109,6 +110,13 @@ public class DependencyBank {
 			new String[]{"com.badlogicgames.box2dlights:box2dlights:1.2"},
 			new String[]{},
 			new String[]{"com.badlogicgames.box2dlights:box2dlights:1.2:sources"}
+		),
+		ASHLEY(
+			new String[]{"com.badlogicgames.ashley:ashley:1.0.1"},
+			new String[]{},
+			new String[]{"com.badlogicgames.ashley:ashley:1.0.1"},
+			new String[]{},
+			new String[]{"com.badlogicgames.ashley:ashley:1.0.1:sources"}
 		);
 
 		private String[] coreDependencies;
diff --git a/extensions/gdx-setup/src/com/badlogic/gdx/setup/GdxSetup.java b/extensions/gdx-setup/src/com/badlogic/gdx/setup/GdxSetup.java
index 4681a68..fbf8b1b 100644
--- a/extensions/gdx-setup/src/com/badlogic/gdx/setup/GdxSetup.java
+++ b/extensions/gdx-setup/src/com/badlogic/gdx/setup/GdxSetup.java
@@ -22,6 +22,8 @@ import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 
+import javax.swing.JOptionPane;
+
 import com.badlogic.gdx.setup.DependencyBank.ProjectDependency;
 import com.badlogic.gdx.setup.DependencyBank.ProjectType;
 import com.badlogic.gdx.setup.Executor.CharCallback;
@@ -43,26 +45,140 @@ public class GdxSetup {
 	}
 
 	public static boolean isSdkUpToDate (String sdkLocation) {
-		boolean hasTools = false;
-		boolean hasApi = false;
 		File buildTools = new File(sdkLocation, "build-tools");
 		if (!buildTools.exists()) {
+			JOptionPane.showMessageDialog(null, "You have no build tools!\nUpdate your Android SDK with build tools version: "
+				+ DependencyBank.buildToolsVersion);
 			return false;
 		}
-		for (File toolsVersion : buildTools.listFiles()) {
-			if (toolsVersion.getName().equals(DependencyBank.buildToolsVersion)) {
-				hasTools = true;
-				break;
+
+		File apis = new File(sdkLocation, "platforms");
+		if (!apis.exists()) {
+			JOptionPane.showMessageDialog(null, "You have no Android APIs!\nUpdate your Android SDK with API level: "
+				+ DependencyBank.androidAPILevel);
+			return false;
+		}
+		String newestLocalTool = getLatestTools(buildTools);
+		int[] localToolVersion = convertTools(newestLocalTool);
+		int[] targetToolVersion = convertTools(DependencyBank.buildToolsVersion);
+		if (compareVersions(targetToolVersion, localToolVersion)) {
+			int value = JOptionPane.showConfirmDialog(null,
+				"You have a more recent version of android build tools than the recommended.\nDo you want to use this version?",
+				"Warning!", JOptionPane.YES_NO_OPTION);
+			if (value != 0) {
+				JOptionPane.showMessageDialog(null, "Using build tools: " + DependencyBank.buildToolsVersion);
+			} else {
+				DependencyBank.buildToolsVersion = newestLocalTool;
+			}
+		} else {
+			if (!hasFileInDirectory(buildTools, DependencyBank.buildToolsVersion)) {
+				JOptionPane.showMessageDialog(null, "Please update your Android SDK, you need build tools: "
+					+ DependencyBank.buildToolsVersion);
+				return false;
 			}
 		}
-		File apis = new File(sdkLocation, "platforms");
+
+		int newestLocalApi = getLatestApi(apis);
+		if (newestLocalApi > Integer.valueOf(DependencyBank.androidAPILevel)) {
+			int value = JOptionPane.showConfirmDialog(null,
+				"You have a more recent Android API than the recommended.\nDo you want to use this version?", "Warning!",
+				JOptionPane.YES_NO_OPTION);
+			if (value != 0) {
+				JOptionPane.showMessageDialog(null, "Using API level: " + DependencyBank.androidAPILevel);
+			} else {
+				DependencyBank.androidAPILevel = String.valueOf(newestLocalApi);
+			}
+		} else {
+			if (!hasFileInDirectory(apis, "android-" + DependencyBank.androidAPILevel)) {
+				JOptionPane.showMessageDialog(null, "Please update your Android SDK, you need the Android API: "
+					+ DependencyBank.androidAPILevel);
+				return false;
+			}
+		}
+		return true;
+	}
+
+	private static boolean hasFileInDirectory (File file, String fileName) {
+		for (String name : file.list()) {
+			if (name.equals(fileName)) return true;
+		}
+		return false;
+	}
+
+	private static int getLatestApi (File apis) {
+		int apiLevel = 0;
 		for (File api : apis.listFiles()) {
-			if (api.getName().equals("android-" + DependencyBank.androidAPILevel)) {
-				hasApi = true;
-				break;
+			if (apiLevel != 0) {
+				try {
+					apiLevel = Integer.parseInt(api.getName().split("android-")[1]);
+				} catch (NumberFormatException nfe) {
+					continue;
+				} catch (ArrayIndexOutOfBoundsException ioobe) {
+					continue;
+				}
+			}
+			try {
+				int testLevel = Integer.parseInt(api.getName().split("android-")[1]);
+				if (testLevel > apiLevel) apiLevel = testLevel;
+			} catch (NumberFormatException nfe) {
+				continue;
+			} catch (ArrayIndexOutOfBoundsException ioobe) {
+				continue;
 			}
 		}
-		return hasTools && hasApi;
+		return apiLevel;
+	}
+
+	private static String getLatestTools (File buildTools) {
+		String version = null;
+		int[] versionSplit = new int[3];
+		int[] testSplit = new int[3];
+		for (File toolsVersion : buildTools.listFiles()) {
+			if (version == null) {
+				version = toolsVersion.getName();
+				versionSplit = convertTools(version);
+				continue;
+			}
+			testSplit = convertTools(toolsVersion.getName());
+			if (compareVersions(versionSplit, testSplit)) {
+				version = toolsVersion.getName();
+			}
+		}
+		if (version != null) {
+			return version;
+		} else {
+			return "0.0.0";
+		}
+	}
+	
+	private static boolean compareVersions(int[] version, int[] testVersion) {
+		if (testVersion[0] > version[0]) {
+			return true;
+		} else if (testVersion[0] == version[0]) {
+			if (testVersion[1] > version[1]) {
+				return true;
+			} else if (testVersion[1] == version[1]) {
+				return testVersion[2] > version[2];
+			}
+		}
+		return false;
+	}
+
+	private static int[] convertTools (String toolsVersion) {
+		String[] stringSplit = toolsVersion.split("\\.");
+		int[] versionSplit = new int[3];
+		if (stringSplit.length == 3) {
+			try {
+				versionSplit[0] = Integer.parseInt(stringSplit[0]);
+				versionSplit[1] = Integer.parseInt(stringSplit[1]);
+				versionSplit[2] = Integer.parseInt(stringSplit[2]);
+				return versionSplit;
+			} catch (NumberFormatException nfe) {
+				return new int[] {0, 0, 0};
+			}
+		} else {
+			return new int[] {0, 0, 0};
+		}
 	}
 
 	public void build (ProjectBuilder builder, String outputDir, String appName, String packageName, String mainClass,
@@ -71,7 +187,7 @@ public class GdxSetup {
 
 		String packageDir = packageName.replace('.', '/');
 		String sdkPath = sdkLocation.replace('\\', '/');
-		
+
 		if (!isSdkLocationValid(sdkLocation)) {
 			System.out.println("Android SDK location '" + sdkLocation + "' doesn't contain an SDK");
 		}
@@ -89,7 +205,9 @@ public class GdxSetup {
 		// core project
 		project.files.add(new ProjectFile("core/build.gradle"));
 		project.files.add(new ProjectFile("core/src/MainClass", "core/src/" + packageDir + "/" + mainClass + ".java", true));
-		project.files.add(new ProjectFile("core/CoreGdxDefinition", "core/src/" + mainClass + ".gwt.xml", true));
+		if (builder.modules.contains(ProjectType.HTML)) {
+			project.files.add(new ProjectFile("core/CoreGdxDefinition", "core/src/" + mainClass + ".gwt.xml", true));
+		}
 
 		// desktop project
 		if (builder.modules.contains(ProjectType.DESKTOP)) {
@@ -171,7 +289,7 @@ public class GdxSetup {
 		// HACK executable flag isn't preserved for whatever reason...
 		new File(outputDir, "gradlew").setExecutable(true);
 
-		Executor.execute(new File(outputDir), "gradlew.bat", "gradlew", "clean" + parseGradleArgs(gradleArgs), callback);
+		Executor.execute(new File(outputDir), "gradlew.bat", "gradlew", "clean" + parseGradleArgs(builder.modules, gradleArgs), callback);
 	}
 
 	private void copyAndReplace (String outputDir, Project project, Map<String, String> values) {
@@ -339,11 +457,12 @@ public class GdxSetup {
 		}
 		return parsed;
 	}
-	
-	private String parseGradleArgs (List<String> args) {
+
+	private String parseGradleArgs (List<ProjectType> modules, List<String> args) {
 		String argString = "";
 		if (args == null) return argString;
 		for (String argument : args) {
+			if (argument.equals("afterEclipseImport") && !modules.contains(ProjectType.DESKTOP)) continue;
 			argString += " " + argument;
 		}
 		return argString;
@@ -360,11 +479,11 @@ public class GdxSetup {
 
 	public static void main (String[] args) throws IOException {
 		Map<String, String> params = parseArgs(args);
-		if (!params.containsKey("dir") || 
-			 !params.containsKey("name") || 
-			 !params.containsKey("package") || 
-			 !params.containsKey("mainClass") || 
-			 ((!params.containsKey("sdkLocation") && System.getenv("ANDROID_HOME") == null))) {
+		if (!params.containsKey("dir") ||
+			!params.containsKey("name") ||
+			!params.containsKey("package") ||
+			!params.containsKey("mainClass") ||
+			((!params.containsKey("sdkLocation") && System.getenv("ANDROID_HOME") == null))) {
 			new GdxSetupUI();
 			printHelp();
 		} else {
@@ -374,7 +493,7 @@ public class GdxSetup {
 			} else {
 				sdkLocation = params.get("sdkLocation");
 			}
-			
+
 			DependencyBank bank = new DependencyBank();
 			ProjectBuilder builder = new ProjectBuilder(bank);
 			List<ProjectType> projects = new ArrayList<ProjectType>();
@@ -386,7 +505,7 @@ public class GdxSetup {
 
 			List<Dependency> dependencies = new ArrayList<Dependency>();
 			dependencies.add(bank.getDependency(ProjectDependency.GDX));
-			
+
 			builder.buildProject(projects, dependencies);
 			builder.build();
 			new GdxSetup().build(builder, params.get("dir"), params.get("name"), params.get("package"), params.get("mainClass"),
diff --git a/extensions/gdx-setup/src/com/badlogic/gdx/setup/GdxSetupUI.java b/extensions/gdx-setup/src/com/badlogic/gdx/setup/GdxSetupUI.java
index 50ad76f..3d75920 100644
--- a/extensions/gdx-setup/src/com/badlogic/gdx/setup/GdxSetupUI.java
+++ b/extensions/gdx-setup/src/com/badlogic/gdx/setup/GdxSetupUI.java
@@ -49,6 +49,7 @@ import java.util.List;
 
 import javax.imageio.ImageIO;
 import javax.swing.BorderFactory;
+import javax.swing.Box;
 import javax.swing.BoxLayout;
 import javax.swing.ButtonModel;
 import javax.swing.ImageIcon;
@@ -155,8 +156,20 @@ public class GdxSetupUI extends JFrame {
 			return;
 		}
 
-		if (!GdxSetup.isSdkUpToDate(sdkLocation) && modules.contains(ProjectType.ANDROID)) {
-			JOptionPane.showMessageDialog(this, "Please update your Android SDK, you need: \nAndroid API " + DependencyBank.androidAPILevel + "\nAndroid Build Tools " + DependencyBank.buildToolsVersion);
+		if (modules.contains(ProjectType.ANDROID)) {
+			if (!GdxSetup.isSdkUpToDate(sdkLocation)) { 
+				try {  //give them a poke in the right direction
+					if (System.getProperty("os.name").contains("Windows")) {
+						String replaced = sdkLocation.replace("\\", "\\\\");
+						Runtime.getRuntime().exec("\"" + replaced + "\\SDK Manager.exe\"");
+					} else {
+						Runtime.getRuntime().exec(sdkLocation + "tools/android sdk");
+					}
+				} catch (IOException e) {
+					e.printStackTrace();
+				}
+				return;
+			}
 		}
 
 		if (!GdxSetup.isEmptyDirectory(destination)) {
@@ -527,7 +540,7 @@ public class GdxSetupUI extends JFrame {
 			int depCounter = 0;
 
 			for (int row = 0; row <= (ProjectDependency.values().length / 5); row++) {
-				JPanel extensionPanel = new JPanel(new GridLayout());
+				JPanel extensionPanel = new JPanel(new GridLayout(1, 5));
 				while (depCounter < ProjectDependency.values().length) {
 					if (ProjectDependency.values()[depCounter] != null) {
 						final ProjectDependency projDep = ProjectDependency.values()[depCounter];
@@ -560,6 +573,10 @@ public class GdxSetupUI extends JFrame {
 						depCounter++;
 					}
 				}
+				
+				for (int left = depCounter - 5; left > 1; left--) {
+					extensionPanel.add(Box.createHorizontalBox());
+				}
 
 				extensionsPanels.add(extensionPanel);
 			}
diff --git a/extensions/gdx-setup/src/com/badlogic/gdx/setup/resources/ios/robovm.xml b/extensions/gdx-setup/src/com/badlogic/gdx/setup/resources/ios/robovm.xml
index 7be693f..a38af62 100644
--- a/extensions/gdx-setup/src/com/badlogic/gdx/setup/resources/ios/robovm.xml
+++ b/extensions/gdx-setup/src/com/badlogic/gdx/setup/resources/ios/robovm.xml
@@ -19,15 +19,18 @@
   </resources>
   <forceLinkClasses>
     <pattern>com.badlogic.gdx.scenes.scene2d.ui.*</pattern>
-    <pattern>org.apache.harmony.xnet.provider.jsse.OpenSSLProvider</pattern>
-    <pattern>org.apache.harmony.security.provider.cert.DRLCertFactory</pattern>
+    <pattern>com.badlogic.gdx.physics.bullet.**</pattern>
+	<pattern>com.android.okhttp.HttpHandler</pattern>
+    <pattern>com.android.okhttp.HttpsHandler</pattern>
+    <pattern>com.android.org.conscrypt.**</pattern>
     <pattern>com.android.org.bouncycastle.jce.provider.BouncyCastleProvider</pattern>
-    <pattern>org.apache.harmony.security.provider.crypto.CryptoProvider</pattern>
-    <pattern>org.apache.harmony.xnet.provider.jsse.JSSEProvider</pattern>
-    <pattern>com.android.org.bouncycastle.jce.provider.JDKKeyStore</pattern>
-    <pattern>org.apache.harmony.security.provider.cert.X509CertFactoryImpl</pattern>
+    <pattern>com.android.org.bouncycastle.jcajce.provider.keystore.BC$Mappings</pattern>
+    <pattern>com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi</pattern>
+    <pattern>com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$Std</pattern>
     <pattern>com.android.org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi</pattern>
-    <pattern>org.apache.harmony.xnet.provider.jsse.OpenSSLMessageDigestJDK$MD5</pattern>
+    <pattern>com.android.org.bouncycastle.crypto.digests.AndroidDigestFactoryOpenSSL</pattern>
+    <pattern>org.apache.harmony.security.provider.cert.DRLCertFactory</pattern>
+    <pattern>org.apache.harmony.security.provider.crypto.CryptoProvider</pattern>
   </forceLinkClasses>
   <libs>      
   </libs>
diff --git a/gdx/src/com/badlogic/gdx/Net.java b/gdx/src/com/badlogic/gdx/Net.java
index ccdbca9..e8c7e75 100644
--- a/gdx/src/com/badlogic/gdx/Net.java
+++ b/gdx/src/com/badlogic/gdx/Net.java
@@ -20,11 +20,14 @@ import java.io.IOException;
 import java.io.InputStream;
 import java.io.OutputStream;
 import java.io.StringWriter;
+import java.lang.IllegalArgumentException;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 import java.util.concurrent.Future;
 
+import com.badlogic.gdx.Application.ApplicationType;
+import com.badlogic.gdx.Gdx;
 import com.badlogic.gdx.Net.HttpRequest;
 import com.badlogic.gdx.Net.HttpResponseListener;
 import com.badlogic.gdx.net.HttpStatus;
@@ -144,6 +147,8 @@ public interface Net {
 		private String content;
 		private InputStream contentStream;
 		private long contentLength;
+		
+		private boolean followRedirects = true;
 
 		/** Creates a new HTTP request with the specified HTTP method, see {@link HttpMethods}.
 		 * @param httpMethod This is the HTTP method for the request, see {@link HttpMethods} */
@@ -187,6 +192,19 @@ public interface Net {
 		public void setTimeOut (int timeOut) {
 			this.timeOut = timeOut;
 		}
+		
+		/** Sets whether 301 and 302 redirects are followed. By default true.
+		 * Can't be changed in the GWT backend because this uses XmlHttpRequests which always redirect.
+		 * @param followRedirects whether to follow redirects.
+		 * @exception IllegalArgumentException if redirection is disabled on the GWT backend.*/
+		public void setFollowRedirects (boolean followRedirects) throws IllegalArgumentException {
+			if (followRedirects == true || Gdx.app.getType() != ApplicationType.WebGL) {
+				this.followRedirects = followRedirects;
+			}
+			else {
+				throw new IllegalArgumentException("Following redirects can't be disabled using the GWT/WebGL backend!");
+			}
+		}
 
 		/** Returns the timeOut of the HTTP request.
 		 * @return the timeOut. */
@@ -223,6 +241,12 @@ public interface Net {
 		public Map<String, String> getHeaders () {
 			return headers;
 		}
+		
+		/** Returns whether 301 and 302 redirects are followed. By default true.
+		 *  Whether to follow redirects. */
+		public boolean getFollowRedirects() {
+			return followRedirects;
+		}
 
 	}
 
diff --git a/gdx/src/com/badlogic/gdx/Preferences.java b/gdx/src/com/badlogic/gdx/Preferences.java
index 7aa567b..d2fc26f 100644
--- a/gdx/src/com/badlogic/gdx/Preferences.java
+++ b/gdx/src/com/badlogic/gdx/Preferences.java
@@ -36,17 +36,17 @@ import java.util.Map;
  * 
  * @author mzechner */
 public interface Preferences {
-	public void putBoolean (String key, boolean val);
+	public Preferences putBoolean (String key, boolean val);
 
-	public void putInteger (String key, int val);
+	public Preferences putInteger (String key, int val);
 
-	public void putLong (String key, long val);
+	public Preferences putLong (String key, long val);
 
-	public void putFloat (String key, float val);
+	public Preferences putFloat (String key, float val);
 
-	public void putString (String key, String val);
+	public Preferences putString (String key, String val);
 
-	public void put (Map<String, ?> vals);
+	public Preferences put (Map<String, ?> vals);
 
 	public boolean getBoolean (String key);
 
diff --git a/gdx/src/com/badlogic/gdx/assets/loaders/resolvers/ResolutionFileResolver.java b/gdx/src/com/badlogic/gdx/assets/loaders/resolvers/ResolutionFileResolver.java
index 5161f7b..2bf22af 100644
--- a/gdx/src/com/badlogic/gdx/assets/loaders/resolvers/ResolutionFileResolver.java
+++ b/gdx/src/com/badlogic/gdx/assets/loaders/resolvers/ResolutionFileResolver.java
@@ -51,7 +51,12 @@ public class ResolutionFileResolver implements FileHandleResolver {
 	}
 
 	protected String resolve (FileHandle originalHandle, String suffix) {
-		return originalHandle.parent() + "/" + suffix + "/" + originalHandle.name();
+		String parentString = "";
+		FileHandle parent = originalHandle.parent();
+		if (parent != null && !parent.name().equals("")) {
+			parentString = parent + "/";
+		}		
+		return parentString + suffix + "/" + originalHandle.name();
 	}
 
 	static public Resolution choose (Resolution... descriptors) {
diff --git a/gdx/src/com/badlogic/gdx/audio/Music.java b/gdx/src/com/badlogic/gdx/audio/Music.java
index 9cdabc4..83ed028 100644
--- a/gdx/src/com/badlogic/gdx/audio/Music.java
+++ b/gdx/src/com/badlogic/gdx/audio/Music.java
@@ -78,7 +78,7 @@ public interface Music extends Disposable {
 	 * @param volume the volume in the range [0,1]. */
 	public void setPan (float pan, float volume);
 
-	/** Returns the playback position in milliseconds. */
+	/** Returns the playback position in seconds. */
 	public float getPosition ();
 
 	/** Needs to be called when the Music is no longer needed. */
diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java b/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java
index 130dbb4..513eb52 100644
--- a/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java
+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java
@@ -26,9 +26,6 @@ import com.badlogic.gdx.math.MathUtils;
 import com.badlogic.gdx.math.Rectangle;
 import com.badlogic.gdx.math.collision.BoundingBox;
 
-// BOZO - Javadoc.
-// BOZO - Add a duplicate emitter button.
-
 public class ParticleEmitter {
 	static private final int UPDATE_SCALE = 1 << 0;
 	static private final int UPDATE_ANGLE = 1 << 1;
diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/SpriteCache.java b/gdx/src/com/badlogic/gdx/graphics/g2d/SpriteCache.java
index 7d8aafe..d44b14d 100644
--- a/gdx/src/com/badlogic/gdx/graphics/g2d/SpriteCache.java
+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/SpriteCache.java
@@ -867,7 +867,7 @@ public class SpriteCache implements Disposable {
 		drawing = true;
 	}
 
-	/** Completes rendering for this SpriteCache.f */
+	/** Completes rendering for this SpriteCache. */
 	public void end () {
 		if (!drawing) throw new IllegalStateException("begin must be called before end.");
 		drawing = false;
diff --git a/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java b/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java
index 9e321de..5e793bf 100644
--- a/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java
+++ b/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java
@@ -98,7 +98,7 @@ public class DefaultShader extends BaseShader {
 		public final static Uniform emissiveColor = new Uniform("u_emissiveColor", ColorAttribute.Emissive);
 		public final static Uniform reflectionColor = new Uniform("u_reflectionColor", ColorAttribute.Reflection);
 		public final static Uniform normalTexture = new Uniform("u_normalTexture", TextureAttribute.Normal);
-		public final static Uniform alphaTest = new Uniform("u_alphaTest", FloatAttribute.AlphaTest);
+		public final static Uniform alphaTest = new Uniform("u_alphaTest");
 
 		public final static Uniform ambientCube = new Uniform("u_ambientCubemap");
 		public final static Uniform dirLights = new Uniform("u_dirLights");
@@ -486,7 +486,8 @@ public class DefaultShader extends BaseShader {
 
 	/** The renderable used to create this shader, invalid after the call to init */
 	private Renderable renderable;
-	private long materialMask;
+	/** The material attributes that this shader supports */
+	protected final long materialMask;
 	private long vertexMask;
 	protected final Config config;
 	/** Material attributes which are not required but always supported. */
diff --git a/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DepthShader.java b/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DepthShader.java
index 461326d..26bb47c 100644
--- a/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DepthShader.java
+++ b/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DepthShader.java
@@ -22,12 +22,16 @@ import com.badlogic.gdx.graphics.GL20;
 import com.badlogic.gdx.graphics.VertexAttribute;
 import com.badlogic.gdx.graphics.VertexAttributes.Usage;
 import com.badlogic.gdx.graphics.g3d.Renderable;
+import com.badlogic.gdx.graphics.g3d.attributes.BlendingAttribute;
+import com.badlogic.gdx.graphics.g3d.attributes.FloatAttribute;
+import com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute;
 import com.badlogic.gdx.graphics.g3d.utils.RenderContext;
 import com.badlogic.gdx.graphics.glutils.ShaderProgram;
 
 public class DepthShader extends DefaultShader {
 	public static class Config extends DefaultShader.Config {
 		public boolean depthBufferOnly = false;
+		public float defaultAlphaTest = 0.5f;
 
 		public Config () {
 			super();
@@ -56,28 +60,14 @@ public class DepthShader extends DefaultShader {
 	}
 
 	public static String createPrefix (final Renderable renderable, final Config config) {
-		String prefix = "";
-		final long mask = renderable.material.getMask();
-		final long attributes = renderable.mesh.getVertexAttributes().getMask();
-		if ((attributes & Usage.BoneWeight) == Usage.BoneWeight) {
-			final int n = renderable.mesh.getVertexAttributes().size();
-			for (int i = 0; i < n; i++) {
-				final VertexAttribute attr = renderable.mesh.getVertexAttributes().get(i);
-				if (attr.usage == Usage.BoneWeight) prefix += "#define boneWeight" + attr.unit + "Flag\n";
-			}
-		}
-		// FIXME Add transparent texture support
-// if ((mask & BlendingAttribute.Type) == BlendingAttribute.Type)
-// prefix += "#define "+BlendingAttribute.Alias+"Flag\n";
-// if ((mask & TextureAttribute.Diffuse) == TextureAttribute.Diffuse)
-// prefix += "#define "+TextureAttribute.DiffuseAlias+"Flag\n";
-		if (renderable.bones != null && config.numBones > 0) prefix += "#define numBones " + config.numBones + "\n";
+		String prefix = DefaultShader.createPrefix(renderable, config);
 		if (!config.depthBufferOnly) prefix += "#define PackedDepthFlag\n";
 		return prefix;
 	}
 
 	public final int numBones;
 	public final int weights;
+	private final FloatAttribute alphaTestAttribute;
 
 	public DepthShader (final Renderable renderable) {
 		this(renderable, new Config());
@@ -107,6 +97,7 @@ public class DepthShader extends DefaultShader {
 			if (attr.usage == Usage.BoneWeight) w |= (1 << attr.unit);
 		}
 		weights = w;
+		alphaTestAttribute = new FloatAttribute(FloatAttribute.AlphaTest, config.defaultAlphaTest);
 	}
 
 	@Override
@@ -124,6 +115,12 @@ public class DepthShader extends DefaultShader {
 
 	@Override
 	public boolean canRender (Renderable renderable) {
+		if (renderable.material.has(BlendingAttribute.Type)) {
+			if ((materialMask & BlendingAttribute.Type) != BlendingAttribute.Type)
+				return false;
+			if (renderable.material.has(TextureAttribute.Diffuse) != ((materialMask & TextureAttribute.Diffuse) == TextureAttribute.Diffuse))
+				return false;
+		}
 		final boolean skinned = ((renderable.mesh.getVertexAttributes().getMask() & Usage.BoneWeight) == Usage.BoneWeight);
 		if (skinned != (numBones > 0)) return false;
 		if (!skinned) return true;
@@ -135,4 +132,21 @@ public class DepthShader extends DefaultShader {
 		}
 		return w == weights;
 	}
+	
+	@Override
+	public void render (final Renderable renderable) {
+		if (renderable.material.has(BlendingAttribute.Type)) {
+			final BlendingAttribute blending = (BlendingAttribute)renderable.material.get(BlendingAttribute.Type);
+			renderable.material.remove(BlendingAttribute.Type);
+			final boolean hasAlphaTest = renderable.material.has(FloatAttribute.AlphaTest);
+			if (!hasAlphaTest)
+				renderable.material.set(alphaTestAttribute);
+			if (blending.opacity >= ((FloatAttribute)renderable.material.get(FloatAttribute.AlphaTest)).value)
+				super.render(renderable);
+			if (!hasAlphaTest)
+				renderable.material.remove(FloatAttribute.AlphaTest);
+			renderable.material.set(blending);
+		} else
+			super.render(renderable);
+	}
 }
diff --git a/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/depth.fragment.glsl b/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/depth.fragment.glsl
index b016e99..7aa2c9e 100644
--- a/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/depth.fragment.glsl
+++ b/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/depth.fragment.glsl
@@ -9,11 +9,23 @@ precision mediump float;
 #define HIGH
 #endif
 
+#if defined(diffuseTextureFlag) && defined(blendedFlag)
+#define blendedTextureFlag
+varying MED vec2 v_texCoords0;
+uniform sampler2D u_diffuseTexture;
+uniform float u_alphaTest;
+#endif
+
 #ifdef PackedDepthFlag
 varying HIGH float v_depth;
 #endif //PackedDepthFlag
 
 void main() {
+	#ifdef blendedTextureFlag
+		if (texture2D(u_diffuseTexture, v_texCoords0).a < u_alphaTest)
+			discard;
+	#endif // blendedTextureFlag
+	
 	#ifdef PackedDepthFlag
 		HIGH float depth = v_depth;
 		const HIGH vec4 bias = vec4(1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0, 0.0);
diff --git a/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/depth.vertex.glsl b/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/depth.vertex.glsl
index a91858c..297a478 100644
--- a/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/depth.vertex.glsl
+++ b/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/depth.vertex.glsl
@@ -1,6 +1,13 @@
 attribute vec3 a_position;
 uniform mat4 u_projViewWorldTrans;
 
+#if defined(diffuseTextureFlag) && defined(blendedFlag)
+#define blendedTextureFlag
+attribute vec2 a_texCoord0;
+varying vec2 v_texCoords0;
+#endif
+
+
 #ifdef boneWeight0Flag
 #define boneWeightsFlag
 attribute vec2 a_boneWeight0;
@@ -72,6 +79,10 @@ varying float v_depth;
 #endif //PackedDepthFlag
 
 void main() {
+	#ifdef blendedTextureFlag
+		v_texCoords0 = a_texCoord0;
+	#endif // blendedTextureFlag
+	
 	#ifdef skinningFlag
 		mat4 skinning = mat4(0.0);
 		#ifdef boneWeight0Flag
diff --git a/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java
index 579706f..a035eb3 100644
--- a/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java
+++ b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java
@@ -591,6 +591,9 @@ public class MeshBuilder implements MeshPartBuilder {
 	@Override
 	public void patch (VertexInfo corner00, VertexInfo corner10, VertexInfo corner11, VertexInfo corner01, int divisionsU,
 		int divisionsV) {
+		if (divisionsU < 1 || divisionsV < 1) {
+			throw new GdxRuntimeException("divisionsU and divisionV must be > 0, u,v: " + divisionsU + ", " + divisionsV);
+		}
 		ensureRectangles((divisionsV + 1) * (divisionsU + 1), divisionsV * divisionsU);
 		for (int u = 0; u <= divisionsU; u++) {
 			final float alphaU = (float)u / (float)divisionsU;
diff --git a/gdx/src/com/badlogic/gdx/graphics/g3d/utils/RenderContext.java b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/RenderContext.java
index a64e094..7812b6a 100644
--- a/gdx/src/com/badlogic/gdx/graphics/g3d/utils/RenderContext.java
+++ b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/RenderContext.java
@@ -22,7 +22,7 @@ import com.badlogic.gdx.graphics.GL20;
 /** Manages OpenGL state and tries to reduce state changes. Uses a {@link TextureBinder} to reduce texture binds as well. Call
  * {@link #begin()} to setup the context, call {@link #end()} to undo all state changes. Use the setters to change state, use
  * {@link #textureBinder} to bind textures.
- * @author badlogic */
+ * @author badlogic, Xoppa */
 public class RenderContext {
 	/** used to bind textures **/
 	public final TextureBinder textureBinder;
@@ -41,7 +41,7 @@ public class RenderContext {
 
 	/** Sets up the render context, must be matched with a call to {@link #end()}. Assumes that the OpenGL states are in their
 	 * defaults. */
-	public final void begin () {
+	public void begin () {
 		Gdx.gl.glDisable(GL20.GL_DEPTH_TEST);
 		depthFunc = 0;
 		Gdx.gl.glDepthMask(true);
@@ -54,7 +54,7 @@ public class RenderContext {
 	}
 
 	/** Resets all changed OpenGL states to their defaults. */
-	public final void end () {
+	public void end () {
 		if (depthFunc != 0) Gdx.gl.glDisable(GL20.GL_DEPTH_TEST);
 		if (!depthMask) Gdx.gl.glDepthMask(true);
 		if (blending) Gdx.gl.glDisable(GL20.GL_BLEND);
@@ -62,15 +62,15 @@ public class RenderContext {
 		textureBinder.end();
 	}
 
-	public final void setDepthMask (final boolean depthMask) {
+	public void setDepthMask (final boolean depthMask) {
 		if (this.depthMask != depthMask) Gdx.gl.glDepthMask(this.depthMask = depthMask);
 	}
 
-	public final void setDepthTest (final int depthFunction) {
+	public void setDepthTest (final int depthFunction) {
 		setDepthTest(depthFunction, 0f, 1f);
 	}
 
-	public final void setDepthTest (final int depthFunction, final float depthRangeNear, final float depthRangeFar) {
+	public void setDepthTest (final int depthFunction, final float depthRangeNear, final float depthRangeFar) {
 		final boolean wasEnabled = depthFunc != 0;
 		final boolean enabled = depthFunction != 0;
 		if (depthFunc != depthFunction) {
@@ -88,7 +88,7 @@ public class RenderContext {
 		}
 	}
 
-	public final void setBlending (final boolean enabled, final int sFactor, final int dFactor) {
+	public void setBlending (final boolean enabled, final int sFactor, final int dFactor) {
 		if (enabled != blending) {
 			blending = enabled;
 			if (enabled)
@@ -103,7 +103,7 @@ public class RenderContext {
 		}
 	}
 
-	public final void setCullFace (final int face) {
+	public void setCullFace (final int face) {
 		if (face != cullFace) {
 			cullFace = face;
 			if ((face == GL20.GL_FRONT) || (face == GL20.GL_BACK) || (face == GL20.GL_FRONT_AND_BACK)) {
diff --git a/gdx/src/com/badlogic/gdx/input/GestureDetector.java b/gdx/src/com/badlogic/gdx/input/GestureDetector.java
index 358fdad..b3f8fb2 100644
--- a/gdx/src/com/badlogic/gdx/input/GestureDetector.java
+++ b/gdx/src/com/badlogic/gdx/input/GestureDetector.java
@@ -449,4 +449,4 @@ public class GestureDetector extends InputAdapter {
 			return sum;
 		}
 	}
-}
+}
\ No newline at end of file
diff --git a/gdx/src/com/badlogic/gdx/maps/tiled/TmxMapLoader.java b/gdx/src/com/badlogic/gdx/maps/tiled/TmxMapLoader.java
index f772fc2..af32752 100644
--- a/gdx/src/com/badlogic/gdx/maps/tiled/TmxMapLoader.java
+++ b/gdx/src/com/badlogic/gdx/maps/tiled/TmxMapLoader.java
@@ -42,10 +42,13 @@ import com.badlogic.gdx.maps.objects.PolygonMapObject;
 import com.badlogic.gdx.maps.objects.PolylineMapObject;
 import com.badlogic.gdx.maps.objects.RectangleMapObject;
 import com.badlogic.gdx.maps.tiled.TiledMapTileLayer.Cell;
+import com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile;
 import com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile;
 import com.badlogic.gdx.math.Polygon;
 import com.badlogic.gdx.math.Polyline;
+import com.badlogic.gdx.utils.*;
 import com.badlogic.gdx.utils.Array;
+import com.badlogic.gdx.utils.LongArray;
 import com.badlogic.gdx.utils.GdxRuntimeException;
 import com.badlogic.gdx.utils.ObjectMap;
 import com.badlogic.gdx.utils.XmlReader;
@@ -355,10 +358,28 @@ public class TmxMapLoader extends AsynchronousAssetLoader<TiledMap, TmxMapLoader
 
 			Array<Element> tileElements = element.getChildrenByName("tile");
 
+			Array<AnimatedTiledMapTile> animatedTiles = new Array<AnimatedTiledMapTile>();
+
 			for (Element tileElement : tileElements) {
 				int localtid = tileElement.getIntAttribute("id", 0);
 				TiledMapTile tile = tileset.getTile(firstgid + localtid);
 				if (tile != null) {
+					Element animationElement = tileElement.getChildByName("animation");
+					if (animationElement != null) {
+
+						Array<StaticTiledMapTile> staticTiles = new Array<StaticTiledMapTile>();
+						LongArray intervals = new LongArray();
+						for (Element frameElement: animationElement.getChildrenByName("frame")) {
+							staticTiles.add((StaticTiledMapTile) tileset.getTile(firstgid + frameElement.getIntAttribute("tileid")));
+							intervals.add(frameElement.getIntAttribute("duration"));
+						}
+
+						AnimatedTiledMapTile animatedTile = new AnimatedTiledMapTile(intervals, staticTiles);
+						animatedTile.setId(tile.getId());
+						animatedTiles.add(animatedTile);
+						tile = animatedTile;
+					}
+
 					String terrain = tileElement.getAttribute("terrain", null);
 					if (terrain != null) {
 						tile.getProperties().put("terrain", terrain);
@@ -374,6 +395,10 @@ public class TmxMapLoader extends AsynchronousAssetLoader<TiledMap, TmxMapLoader
 				}
 			}
 
+			for (AnimatedTiledMapTile tile : animatedTiles) {
+				tileset.putTile(tile.getId(), tile);
+			}
+
 			Element properties = element.getChildByName("properties");
 			if (properties != null) {
 				loadProperties(tileset.getProperties(), properties);
diff --git a/gdx/src/com/badlogic/gdx/maps/tiled/tiles/AnimatedTiledMapTile.java b/gdx/src/com/badlogic/gdx/maps/tiled/tiles/AnimatedTiledMapTile.java
index 4127cd1..fb65ffb 100644
--- a/gdx/src/com/badlogic/gdx/maps/tiled/tiles/AnimatedTiledMapTile.java
+++ b/gdx/src/com/badlogic/gdx/maps/tiled/tiles/AnimatedTiledMapTile.java
@@ -19,7 +19,10 @@ package com.badlogic.gdx.maps.tiled.tiles;
 import com.badlogic.gdx.graphics.g2d.TextureRegion;
 import com.badlogic.gdx.maps.MapProperties;
 import com.badlogic.gdx.maps.tiled.TiledMapTile;
+import com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile;
 import com.badlogic.gdx.utils.Array;
+import com.badlogic.gdx.utils.LongArray;
+import com.badlogic.gdx.utils.FloatArray;
 import com.badlogic.gdx.utils.GdxRuntimeException;
 import com.badlogic.gdx.utils.TimeUtils;
 
@@ -34,10 +37,11 @@ public class AnimatedTiledMapTile implements TiledMapTile {
 
 	private MapProperties properties;
 
-	private Array<StaticTiledMapTile> frameTiles;
+	private StaticTiledMapTile[] frameTiles;
 
-	private float animationInterval;
+	private long[] animationIntervals;
 	private long frameCount = 0;
+	private long loopDuration;
 	private static final long initialTimeOffset = TimeUtils.millis();
 
 	@Override
@@ -60,16 +64,26 @@ public class AnimatedTiledMapTile implements TiledMapTile {
 		this.blendMode = blendMode;
 	}
 
+	private TiledMapTile getCurrentFrame() {
+		long currentTime = lastTiledMapRenderTime % loopDuration;
+
+		for (int i = 0; i < animationIntervals.length; ++i){
+			long animationInterval = animationIntervals[i];
+			if (currentTime<=animationInterval) return frameTiles[i];
+			currentTime -= animationInterval;
+		}
+
+		throw new GdxRuntimeException("Could not determine current animation frame in AnimatedTiledMapTile.  This should never happen.");
+	}
+
 	@Override
 	public TextureRegion getTextureRegion () {
-		long currentFrame = (lastTiledMapRenderTime / (long)(animationInterval * 1000f)) % frameCount;
-		return frameTiles.get((int)currentFrame).getTextureRegion();
+		return getCurrentFrame().getTextureRegion();
 	}
 
 	@Override
 	public float getOffsetX () {
-		long currentFrame = (lastTiledMapRenderTime / (long)(animationInterval * 1000f)) % frameCount;
-		return frameTiles.get((int)currentFrame).getOffsetX();
+		return getCurrentFrame().getOffsetX();
 	}
 
 	@Override
@@ -79,8 +93,7 @@ public class AnimatedTiledMapTile implements TiledMapTile {
 
 	@Override
 	public float getOffsetY () {
-		long currentFrame = (lastTiledMapRenderTime / (long)(animationInterval * 1000f)) % frameCount;
-		return frameTiles.get((int)currentFrame).getOffsetY();
+		return getCurrentFrame().getOffsetY();
 	}
 
 	@Override
@@ -107,9 +120,32 @@ public class AnimatedTiledMapTile implements TiledMapTile {
 	 * @param interval The interval between each individual frame tile.
 	 * @param frameTiles An array of {@link StaticTiledMapTile}s that make up the animation. */
 	public AnimatedTiledMapTile (float interval, Array<StaticTiledMapTile> frameTiles) {
-		this.frameTiles = frameTiles;
-		this.animationInterval = interval;
+		this.frameTiles = new StaticTiledMapTile[frameTiles.size];
+		this.frameCount = frameTiles.size;
+
+		this.loopDuration = (long)(frameTiles.size * interval * 1000f);
+		this.animationIntervals = new long[frameTiles.size];
+		for (int i = 0; i < frameTiles.size; ++i){
+			this.frameTiles[i] = frameTiles.get(i);
+			this.animationIntervals[i] = (long)(interval * 1000f);
+		}
+	}
+
+	/** Creates an animated tile with the given animation intervals and frame tiles.
+	 *
+	 * @param intervals The intervals between each individual frame tile in milliseconds.
+	 * @param frameTiles An array of {@link StaticTiledMapTile}s that make up the animation. */
+	public AnimatedTiledMapTile (LongArray intervals, Array<StaticTiledMapTile> frameTiles) {
+		this.frameTiles = new StaticTiledMapTile[frameTiles.size];
 		this.frameCount = frameTiles.size;
+
+		this.animationIntervals = intervals.toArray();
+		this.loopDuration = 0;
+
+		for (int i = 0; i < intervals.size; ++i){
+			this.frameTiles[i] = frameTiles.get(i);
+			this.loopDuration += intervals.get(i);
+		}
 	}
 
 }
diff --git a/gdx/src/com/badlogic/gdx/math/Ellipse.java b/gdx/src/com/badlogic/gdx/math/Ellipse.java
index c33a10a..baecf2f 100644
--- a/gdx/src/com/badlogic/gdx/math/Ellipse.java
+++ b/gdx/src/com/badlogic/gdx/math/Ellipse.java
@@ -178,7 +178,7 @@ public class Ellipse implements Serializable {
 		return this;
 	}
 
-	/** @return The area of this {@link Ellipse} as {@link MathUtils#PI} * {@link rx Ellipse#width} * {@link ry Ellipse#height} */
+	/** @return The area of this {@link Ellipse} as {@link MathUtils#PI} * {@link Ellipse#width} * {@link Ellipse#height} */
 	public float area () {
 		return MathUtils.PI * (this.width * this.height) / 4;
 	}
diff --git a/gdx/src/com/badlogic/gdx/math/Quaternion.java b/gdx/src/com/badlogic/gdx/math/Quaternion.java
index 25909f9..8340b7a 100644
--- a/gdx/src/com/badlogic/gdx/math/Quaternion.java
+++ b/gdx/src/com/badlogic/gdx/math/Quaternion.java
@@ -27,7 +27,6 @@ import com.badlogic.gdx.utils.NumberUtils;
  * @author xoppa */
 public class Quaternion implements Serializable {
 	private static final long serialVersionUID = -7661875440774897168L;
-	private static final float NORMALIZATION_TOLERANCE = 0.00001f;
 	private static Quaternion tmp1 = new Quaternion(0, 0, 0, 0);
 	private static Quaternion tmp2 = new Quaternion(0, 0, 0, 0);
 
@@ -175,7 +174,7 @@ public class Quaternion implements Serializable {
 	 * @return the rotation around the x axis in radians (between -(PI/2) and +(PI/2)) */
 	public float getPitchRad() {
 		final int pole = getGimbalPole();
-		return pole == 0 ? (float)Math.asin(2f*(w*x-z*y)) : (float)pole * MathUtils.PI * 0.5f;
+		return pole == 0 ? (float)Math.asin(MathUtils.clamp(2f*(w*x-z*y), -1f, 1f)) : (float)pole * MathUtils.PI * 0.5f;
 	}
 
 	/** Get the pitch euler angle in degrees, which is the rotation around the x axis. Requires that this quaternion is normalized. 
@@ -209,7 +208,7 @@ public class Quaternion implements Serializable {
 	 * @return the quaternion for chaining */
 	public Quaternion nor () {
 		float len = len2();
-		if (len != 0.f && (Math.abs(len - 1.0f) > NORMALIZATION_TOLERANCE)) {
+		if (len != 0.f && !MathUtils.isEqual(len, 1f)) {
 			len = (float)Math.sqrt(len);
 			w /= len;
 			x /= len;
@@ -778,7 +777,7 @@ public class Quaternion implements Serializable {
 		if (this.w > 1) this.nor(); // if w>1 acos and sqrt will produce errors, this cant happen if quaternion is normalised
 		float angle = (float)(2.0 * Math.acos(this.w));
 		double s = Math.sqrt(1 - this.w * this.w); // assuming quaternion normalised then w is less than 1, so term always positive.
-		if (s < NORMALIZATION_TOLERANCE) { // test to avoid divide by zero, s is always positive due to sqrt
+		if (s < MathUtils.FLOAT_ROUNDING_ERROR) { // test to avoid divide by zero, s is always positive due to sqrt
 			// if s close to zero then direction of axis not important
 			axis.x = this.x; // if it is important that axis is normalised then replace with x=1; y=z=0;
 			axis.y = this.y;
diff --git a/gdx/src/com/badlogic/gdx/math/RandomXS128.java b/gdx/src/com/badlogic/gdx/math/RandomXS128.java
index d890b2b..cb9dca3 100644
--- a/gdx/src/com/badlogic/gdx/math/RandomXS128.java
+++ b/gdx/src/com/badlogic/gdx/math/RandomXS128.java
@@ -1,34 +1,188 @@
+/*******************************************************************************
+ * Copyright 2011 See AUTHORS file.
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/
 
 package com.badlogic.gdx.math;
 
 import java.util.Random;
 
-/** This class implements the xorshift 128+ algorithm known as the fastest among the PRNG, the comparisons between this and the
- * java default random show an average difference of 10 ms on an input of 1 millions of floating point numbers. More information
- * and algorithms can be found <a href="http://xorshift.di.unimi.it/">here</a> */
+/** This class implements the xorshift128+ algorithm that is a very fast, top-quality 64-bit pseudo-random number generator. The
+ * quality of this PRNG is much higher than {@link Random}'s, and its cycle length is 2<sup>128</sup>&nbsp;&minus;&nbsp;1, which
+ * is more than enough for any single-thread application. More details and algorithms can be found <a
+ * href="http://xorshift.di.unimi.it/">here</a>.
+ * <p>
+ * Instances of RandomXS128 are not thread-safe.
+ * 
+ * @author Inferno
+ * @author davebaol */
 public class RandomXS128 extends Random {
-	long seed0, seed1;
 
+	/** Normalization constant for double. */
+	private static final double NORM_DOUBLE = 1.0 / (1L << 53);
+
+	/** Normalization constant for float. */
+	private static final double NORM_FLOAT = 1.0 / (1L << 24);
+
+	/** The first half of the internal state of this pseudo-random number generator. */
+	private long seed0;
+
+	/** The second half of the internal state of this pseudo-random number generator. */
+	private long seed1;
+
+	/** Creates a new random number generator. This constructor sets the seed of the random number generator to a value very likely
+	 * to be distinct from any other invocation of this constructor.
+	 * <p>
+	 * This implementation creates a {@link Random} instance to generate the initial seed. */
+	public RandomXS128 () {
+		setSeed(new Random().nextLong());
+	}
+
+	/** Creates a new random number generator using a single {@code long} seed.
+	 * @param seed the initial seed */
+	public RandomXS128 (long seed) {
+		setSeed(seed);
+	}
+
+	/** Creates a new random number generator using two {@code long} seeds.
+	 * @param seed0 the first part of the initial seed
+	 * @param seed1 the second part of the initial seed */
 	public RandomXS128 (long seed0, long seed1) {
-		this.seed0 = seed0;
-		this.seed1 = seed1;
+		setState(seed0, seed1);
 	}
 
-	/** It will allocate a {@link Random} to generate the two long seeds */
-	public RandomXS128 () {
-		Random random = new Random();
-		seed0 = random.nextLong();
-		seed1 = random.nextLong();
+	/** Returns the next pseudo-random, uniformly distributed {@code long} value from this random number generator's sequence.
+	 * <p>
+	 * Subclasses should override this, as this is used by all other methods. */
+	@Override
+	public long nextLong () {
+		long s1 = this.seed0;
+		final long s0 = this.seed1;
+		this.seed0 = s0;
+		s1 ^= s1 << 23;
+		return (this.seed1 = (s1 ^ s0 ^ (s1 >>> 17) ^ (s0 >>> 26))) + s0;
+	}
+
+	/** This protected method is final because, contrary to the superclass, it's not used anymore by the other methods. */
+	@Override
+	protected final int next (int bits) {
+		return (int)(nextLong() & ((1L << bits) - 1));
+	}
+
+	/** Returns the next pseudo-random, uniformly distributed {@code int} value from this random number generator's sequence.
+	 * <p>
+	 * This implementation uses {@link #nextLong()} internally. */
+	@Override
+	public int nextInt () {
+		return (int)nextLong();
+	}
+
+	/** Returns a pseudo-random, uniformly distributed {@code int} value between 0 (inclusive) and the specified value (exclusive),
+	 * drawn from this random number generator's sequence.
+	 * <p>
+	 * This implementation uses {@link #nextLong()} internally.
+	 * @param n the positive bound on the random number to be returned.
+	 * @return the next pseudo-random {@code int} value between {@code 0} (inclusive) and {@code n} (exclusive). */
+	@Override
+	public int nextInt (final int n) {
+		return (int)nextLong(n);
 	}
 
+	/** Returns a pseudo-random, uniformly distributed {@code long} value between 0 (inclusive) and the specified value (exclusive),
+	 * drawn from this random number generator's sequence. The algorithm used to generate the value guarantees that the result is
+	 * uniform, provided that the sequence of 64-bit values produced by this generator is.
+	 * <p>
+	 * This implementation uses {@link #nextLong()} internally.
+	 * @param n the positive bound on the random number to be returned.
+	 * @return the next pseudo-random {@code long} value between {@code 0} (inclusive) and {@code n} (exclusive). */
+	public long nextLong (final long n) {
+		if (n <= 0) throw new IllegalArgumentException("n must be positive");
+		for (;;) {
+			final long bits = nextLong() >>> 1;
+			final long value = bits % n;
+			if (bits - value + (n - 1) >= 0) return value;
+		}
+	}
+
+	/** Returns a pseudo-random, uniformly distributed {@code double} value between 0.0 and 1.0from this random number generator's
+	 * sequence.
+	 * <p>
+	 * This implementation uses {@link #nextLong()} internally. */
+	@Override
+	public double nextDouble () {
+		return (nextLong() >>> 11) * NORM_DOUBLE;
+	}
+
+	/** Returns a pseudo-random, uniformly distributed {@code float} value between 0.0 and 1.0 from this random number generator's
+	 * sequence.
+	 * <p>
+	 * This implementation uses {@link #nextLong()} internally. */
+	@Override
+	public float nextFloat () {
+		return (float)((nextLong() >>> 40) * NORM_FLOAT);
+	}
+
+	/** Returns a pseudo-random, uniformly distributed {@code boolean } value from this random number generator's sequence.
+	 * <p>
+	 * This implementation uses {@link #nextLong()} internally. */
+	@Override
+	public boolean nextBoolean () {
+		return (nextLong() & 1) != 0;
+	}
+
+	/** Generates random bytes and places them into a user-supplied byte array. The number of random bytes produced is equal to the
+	 * length of the byte array.
+	 * <p>
+	 * This implementation uses {@link #nextLong()} internally. */
 	@Override
-	protected int next (int bits) {
-		long s1 = seed0;
-		long s0 = seed1;
-		seed0 = s0;
-		s1 ^= s1 << 23; // a
-		s1 = (s1 ^ s0 ^ (s1 >> 17) ^ (s0 >> 26)) + s0; // b, c
-		seed1 = s1;
-		return (int)(s1 & ((1L << bits) - 1));
+	public void nextBytes (final byte[] bytes) {
+		int n = 0;
+		int i = bytes.length;
+		while (i != 0) {
+			n = i < 8 ? i : 8; // min(i, 8);
+			for (long bits = nextLong(); n-- != 0; bits >>= 8)
+				bytes[--i] = (byte)bits;
+		}
 	}
+
+	/** Sets the internal seed of this generator based on the given {@code long} value.
+	 * <p>
+	 * The given seed is passed twice through an hash function. This way, if the user passes a small value we avoid the short
+	 * irregular transient associated with states having a very small number of bits set.
+	 * @param seed a nonzero seed for this generator (if zero, the generator will be seeded with {@link Long#MIN_VALUE}). */
+	@Override
+	public void setSeed (final long seed) {
+		long seed0 = murmurHash3(seed == 0 ? Long.MIN_VALUE : seed);
+		setState(seed0, murmurHash3(seed0));
+	}
+
+	/** Sets the internal state of this generator.
+	 * @param seed0 the first part of the internal state
+	 * @param seed1 the second part of the internal state */
+	public void setState (final long seed0, final long seed1) {
+		this.seed0 = seed0;
+		this.seed1 = seed1;
+	}
+
+	private final static long murmurHash3 (long x) {
+		x ^= x >>> 33;
+		x *= 0xff51afd7ed558ccdL;
+		x ^= x >>> 33;
+		x *= 0xc4ceb9fe1a85ec53L;
+		x ^= x >>> 33;
+
+		return x;
+	}
+
 }
diff --git a/gdx/src/com/badlogic/gdx/net/NetJavaImpl.java b/gdx/src/com/badlogic/gdx/net/NetJavaImpl.java
index 1d98ff8..a844689 100644
--- a/gdx/src/com/badlogic/gdx/net/NetJavaImpl.java
+++ b/gdx/src/com/badlogic/gdx/net/NetJavaImpl.java
@@ -139,13 +139,14 @@ public class NetJavaImpl {
 			} else {
 				url = new URL(httpRequest.getUrl());
 			}
-
+			
 			final HttpURLConnection connection = (HttpURLConnection)url.openConnection();
 			// should be enabled to upload data.
 			final boolean doingOutPut = method.equalsIgnoreCase(HttpMethods.POST) || method.equalsIgnoreCase(HttpMethods.PUT);
 			connection.setDoOutput(doingOutPut);
 			connection.setDoInput(true);
 			connection.setRequestMethod(method);
+			HttpURLConnection.setFollowRedirects(httpRequest.getFollowRedirects());
 
 			lock.lock();
 			connections.put(httpRequest, connection);
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/Actor.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/Actor.java
index ddbd33b..68b002c 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/Actor.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/Actor.java
@@ -24,8 +24,6 @@ import com.badlogic.gdx.math.Vector2;
 import com.badlogic.gdx.scenes.scene2d.InputEvent.Type;
 import com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener;
 import com.badlogic.gdx.scenes.scene2d.utils.ClickListener;
-import com.badlogic.gdx.scenes.scene2d.utils.Scene2DDebugRenderer;
-import com.badlogic.gdx.scenes.scene2d.utils.Scene2DDebugRenderer.DebugRect;
 import com.badlogic.gdx.scenes.scene2d.utils.ScissorStack;
 import com.badlogic.gdx.utils.Array;
 import com.badlogic.gdx.utils.DelayedRemovalArray;
@@ -67,9 +65,6 @@ public class Actor {
 	final Color color = new Color(1, 1, 1, 1);
 	private Object userObject;
 
-	private boolean debuggingEnabled = true;
-	public static Color debugColor = new Color(0, 1, 0, 1);
-
 	/** Draws the actor. The Batch is configured to draw in the parent's coordinate system.
 	 * {@link Batch#draw(com.badlogic.gdx.graphics.g2d.TextureRegion, float, float, float, float, float, float, float, float, float)
 	 * This draw method} is convenient to draw a rotated and scaled TextureRegion. {@link Batch#begin()} has already been called on
@@ -89,9 +84,13 @@ public class Actor {
 		for (int i = 0; i < actions.size; i++) {
 			Action action = actions.get(i);
 			if (action.act(delta) && i < actions.size) {
-				actions.removeIndex(i);
-				action.setActor(null);
-				i--;
+				Action current = actions.get(i);
+				int actionIndex = current == action ? i : actions.indexOf(action, true);
+				if (actionIndex != -1) {
+					actions.removeIndex(actionIndex);
+					action.setActor(null);
+					i--;
+				}
 			}
 		}
 	}
@@ -380,16 +379,16 @@ public class Actor {
 	}
 
 	/** Set position of Actor centered on x, y */
-	public void setCenterPosition (float x, float y) {
+	public void setCenterPosition(float x, float y) {
 		this.x = x - width / 2;
 		this.y = y - height / 2;
 	}
 
-	public float getCenterX () {
+	public float getCenterX() {
 		return this.x + width / 2;
 	}
 
-	public float getCenterY () {
+	public float getCenterY() {
 		return this.y + height / 2;
 	}
 
@@ -505,7 +504,7 @@ public class Actor {
 		this.scaleY = scaleY;
 	}
 
-	/** Sets the scale X and scale X. */
+	/** Sets the scale for both X and Y */
 	public void setScale (float scaleXY) {
 		this.scaleX = scaleXY;
 		this.scaleY = scaleXY;
@@ -555,7 +554,8 @@ public class Actor {
 		return color;
 	}
 
-	/** Retrieve custom actor name set with {@link Actor#setName(String)}, used for easier identification */
+	/** Retrieve custom actor name set with {@link Actor#setName(String)},
+	 * used for easier identification */
 	public String getName () {
 		return name;
 	}
@@ -566,28 +566,6 @@ public class Actor {
 		this.name = name;
 	}
 
-	/** The {@link Scene2DDebugRenderer} will ask every actor of a stage for their debugging rectangles. To fill the given array you
-	 * can obtain fresh {@link DebugRect}s via the {@link Scene2DDebugRenderer#debugRectPool}. To avoid the garbage collection you
-	 * should make sure to free them later, but it's not a strict requirement. */
-	public void getDebugRects (Array<DebugRect> debugRects) {
-		DebugRect debugRect = Scene2DDebugRenderer.debugRectPool.obtain();
-		debugRect.bottomLeft.set(0, 0);
-		debugRect.topRight.set(width, height);
-		debugRect.color.set(Actor.debugColor);
-		debugRects.add(debugRect);
-	}
-
-	/** Used only in combination with a {@link Scene2DDebugRenderer}. It does only influence this particular actor, not its
-	 * children, in case we have a {@link Group}. */
-	public void setDebuggingEnabled (boolean enabled) {
-		debuggingEnabled = enabled;
-	}
-
-	/** Used only in combination with a {@link Scene2DDebugRenderer}. */
-	public boolean isDebuggingEnabled () {
-		return debuggingEnabled;
-	}
-
 	/** Changes the z-order for this actor so it is in front of all siblings. */
 	public void toFront () {
 		setZIndex(Integer.MAX_VALUE);
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/Group.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/Group.java
index 1b8b493..bda642c 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/Group.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/Group.java
@@ -22,7 +22,6 @@ import com.badlogic.gdx.math.Matrix4;
 import com.badlogic.gdx.math.Rectangle;
 import com.badlogic.gdx.math.Vector2;
 import com.badlogic.gdx.scenes.scene2d.utils.Cullable;
-import com.badlogic.gdx.scenes.scene2d.utils.Scene2DDebugRenderer;
 import com.badlogic.gdx.utils.Array;
 import com.badlogic.gdx.utils.SnapshotArray;
 
@@ -290,12 +289,12 @@ public class Group extends Actor implements Cullable {
 	public <T extends Actor> T findActor (String name) {
 		Array<Actor> children = this.children;
 		for (int i = 0, n = children.size; i < n; i++)
-			if (name.equals(children.get(i).getName())) return (T)children.get(i);
+			if (name.equals(children.get(i).getName())) return (T) children.get(i);
 		for (int i = 0, n = children.size; i < n; i++) {
 			Actor child = children.get(i);
 			if (child instanceof Group) {
 				Actor actor = ((Group)child).findActor(name);
-				if (actor != null) return (T)actor;
+				if (actor != null) return (T) actor;
 			}
 		}
 		return null;
@@ -365,21 +364,6 @@ public class Group extends Actor implements Cullable {
 		print("");
 	}
 
-	/** Used only in combination with a {@link Scene2DDebugRenderer}.
-	 * @param recursively If {@code true} it will also recursively disable all children of this group. */
-	public void setDebuggingEnabled (boolean enabled, boolean recursively) {
-		setDebuggingEnabled(enabled);
-		if (recursively) {
-			for (Actor child : children) {
-				if (child instanceof Group) {
-					((Group)child).setDebuggingEnabled(enabled, recursively);
-				} else {
-					child.setDebuggingEnabled(enabled);
-				}
-			}
-		}
-	}
-
 	private void print (String indent) {
 		Actor[] actors = children.begin();
 		for (int i = 0, n = children.size; i < n; i++) {
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java
index a66c1c0..ef5329d 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java
@@ -107,6 +107,7 @@ public class Cell<T extends Actor> implements Poolable {
 
 	/** Sets the minWidth, prefWidth, maxWidth, minHeight, prefHeight, and maxHeight to the specified value. */
 	public Cell<T> size (Value size) {
+		if (size == null) throw new IllegalArgumentException("size cannot be null.");
 		minWidth = size;
 		minHeight = size;
 		prefWidth = size;
@@ -118,6 +119,8 @@ public class Cell<T extends Actor> implements Poolable {
 
 	/** Sets the minWidth, prefWidth, maxWidth, minHeight, prefHeight, and maxHeight to the specified values. */
 	public Cell<T> size (Value width, Value height) {
+		if (width == null) throw new IllegalArgumentException("width cannot be null.");
+		if (height == null) throw new IllegalArgumentException("height cannot be null.");
 		minWidth = width;
 		minHeight = height;
 		prefWidth = width;
@@ -141,6 +144,7 @@ public class Cell<T extends Actor> implements Poolable {
 
 	/** Sets the minWidth, prefWidth, and maxWidth to the specified value. */
 	public Cell<T> width (Value width) {
+		if (width == null) throw new IllegalArgumentException("width cannot be null.");
 		minWidth = width;
 		prefWidth = width;
 		maxWidth = width;
@@ -155,6 +159,7 @@ public class Cell<T extends Actor> implements Poolable {
 
 	/** Sets the minHeight, prefHeight, and maxHeight to the specified value. */
 	public Cell<T> height (Value height) {
+		if (height == null) throw new IllegalArgumentException("height cannot be null.");
 		minHeight = height;
 		prefHeight = height;
 		maxHeight = height;
@@ -169,6 +174,7 @@ public class Cell<T extends Actor> implements Poolable {
 
 	/** Sets the minWidth and minHeight to the specified value. */
 	public Cell<T> minSize (Value size) {
+		if (size == null) throw new IllegalArgumentException("size cannot be null.");
 		minWidth = size;
 		minHeight = size;
 		return this;
@@ -176,17 +182,21 @@ public class Cell<T extends Actor> implements Poolable {
 
 	/** Sets the minWidth and minHeight to the specified values. */
 	public Cell<T> minSize (Value width, Value height) {
+		if (width == null) throw new IllegalArgumentException("width cannot be null.");
+		if (height == null) throw new IllegalArgumentException("height cannot be null.");
 		minWidth = width;
 		minHeight = height;
 		return this;
 	}
 
 	public Cell<T> minWidth (Value minWidth) {
+		if (minWidth == null) throw new IllegalArgumentException("minWidth cannot be null.");
 		this.minWidth = minWidth;
 		return this;
 	}
 
 	public Cell<T> minHeight (Value minHeight) {
+		if (minHeight == null) throw new IllegalArgumentException("minHeight cannot be null.");
 		this.minHeight = minHeight;
 		return this;
 	}
@@ -215,6 +225,7 @@ public class Cell<T extends Actor> implements Poolable {
 
 	/** Sets the prefWidth and prefHeight to the specified value. */
 	public Cell<T> prefSize (Value size) {
+		if (size == null) throw new IllegalArgumentException("size cannot be null.");
 		prefWidth = size;
 		prefHeight = size;
 		return this;
@@ -222,17 +233,21 @@ public class Cell<T extends Actor> implements Poolable {
 
 	/** Sets the prefWidth and prefHeight to the specified values. */
 	public Cell<T> prefSize (Value width, Value height) {
+		if (width == null) throw new IllegalArgumentException("width cannot be null.");
+		if (height == null) throw new IllegalArgumentException("height cannot be null.");
 		prefWidth = width;
 		prefHeight = height;
 		return this;
 	}
 
 	public Cell<T> prefWidth (Value prefWidth) {
+		if (prefWidth == null) throw new IllegalArgumentException("prefWidth cannot be null.");
 		this.prefWidth = prefWidth;
 		return this;
 	}
 
 	public Cell<T> prefHeight (Value prefHeight) {
+		if (prefHeight == null) throw new IllegalArgumentException("prefHeight cannot be null.");
 		this.prefHeight = prefHeight;
 		return this;
 	}
@@ -261,6 +276,7 @@ public class Cell<T extends Actor> implements Poolable {
 
 	/** Sets the maxWidth and maxHeight to the specified value. */
 	public Cell<T> maxSize (Value size) {
+		if (size == null) throw new IllegalArgumentException("size cannot be null.");
 		maxWidth = size;
 		maxHeight = size;
 		return this;
@@ -268,17 +284,21 @@ public class Cell<T extends Actor> implements Poolable {
 
 	/** Sets the maxWidth and maxHeight to the specified values. */
 	public Cell<T> maxSize (Value width, Value height) {
+		if (width == null) throw new IllegalArgumentException("width cannot be null.");
+		if (height == null) throw new IllegalArgumentException("height cannot be null.");
 		maxWidth = width;
 		maxHeight = height;
 		return this;
 	}
 
 	public Cell<T> maxWidth (Value maxWidth) {
+		if (maxWidth == null) throw new IllegalArgumentException("maxWidth cannot be null.");
 		this.maxWidth = maxWidth;
 		return this;
 	}
 
 	public Cell<T> maxHeight (Value maxHeight) {
+		if (maxHeight == null) throw new IllegalArgumentException("maxHeight cannot be null.");
 		this.maxHeight = maxHeight;
 		return this;
 	}
@@ -307,6 +327,7 @@ public class Cell<T extends Actor> implements Poolable {
 
 	/** Sets the spaceTop, spaceLeft, spaceBottom, and spaceRight to the specified value. */
 	public Cell<T> space (Value space) {
+		if (space == null) throw new IllegalArgumentException("space cannot be null.");
 		spaceTop = space;
 		spaceLeft = space;
 		spaceBottom = space;
@@ -315,6 +336,10 @@ public class Cell<T extends Actor> implements Poolable {
 	}
 
 	public Cell<T> space (Value top, Value left, Value bottom, Value right) {
+		if (top == null) throw new IllegalArgumentException("top cannot be null.");
+		if (left == null) throw new IllegalArgumentException("left cannot be null.");
+		if (bottom == null) throw new IllegalArgumentException("bottom cannot be null.");
+		if (right == null) throw new IllegalArgumentException("right cannot be null.");
 		spaceTop = top;
 		spaceLeft = left;
 		spaceBottom = bottom;
@@ -323,21 +348,25 @@ public class Cell<T extends Actor> implements Poolable {
 	}
 
 	public Cell<T> spaceTop (Value spaceTop) {
+		if (spaceTop == null) throw new IllegalArgumentException("spaceTop cannot be null.");
 		this.spaceTop = spaceTop;
 		return this;
 	}
 
 	public Cell<T> spaceLeft (Value spaceLeft) {
+		if (spaceLeft == null) throw new IllegalArgumentException("spaceLeft cannot be null.");
 		this.spaceLeft = spaceLeft;
 		return this;
 	}
 
 	public Cell<T> spaceBottom (Value spaceBottom) {
+		if (spaceBottom == null) throw new IllegalArgumentException("spaceBottom cannot be null.");
 		this.spaceBottom = spaceBottom;
 		return this;
 	}
 
 	public Cell<T> spaceRight (Value spaceRight) {
+		if (spaceRight == null) throw new IllegalArgumentException("spaceRight cannot be null.");
 		this.spaceRight = spaceRight;
 		return this;
 	}
@@ -391,6 +420,7 @@ public class Cell<T extends Actor> implements Poolable {
 
 	/** Sets the padTop, padLeft, padBottom, and padRight to the specified value. */
 	public Cell<T> pad (Value pad) {
+		if (pad == null) throw new IllegalArgumentException("pad cannot be null.");
 		padTop = pad;
 		padLeft = pad;
 		padBottom = pad;
@@ -399,6 +429,10 @@ public class Cell<T extends Actor> implements Poolable {
 	}
 
 	public Cell<T> pad (Value top, Value left, Value bottom, Value right) {
+		if (top == null) throw new IllegalArgumentException("top cannot be null.");
+		if (left == null) throw new IllegalArgumentException("left cannot be null.");
+		if (bottom == null) throw new IllegalArgumentException("bottom cannot be null.");
+		if (right == null) throw new IllegalArgumentException("right cannot be null.");
 		padTop = top;
 		padLeft = left;
 		padBottom = bottom;
@@ -407,21 +441,25 @@ public class Cell<T extends Actor> implements Poolable {
 	}
 
 	public Cell<T> padTop (Value padTop) {
+		if (padTop == null) throw new IllegalArgumentException("padTop cannot be null.");
 		this.padTop = padTop;
 		return this;
 	}
 
 	public Cell<T> padLeft (Value padLeft) {
+		if (padLeft == null) throw new IllegalArgumentException("padLeft cannot be null.");
 		this.padLeft = padLeft;
 		return this;
 	}
 
 	public Cell<T> padBottom (Value padBottom) {
+		if (padBottom == null) throw new IllegalArgumentException("padBottom cannot be null.");
 		this.padBottom = padBottom;
 		return this;
 	}
 
 	public Cell<T> padRight (Value padRight) {
+		if (padRight == null) throw new IllegalArgumentException("padRight cannot be null.");
 		this.padRight = padRight;
 		return this;
 	}
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java
index 40146f3..2366aed 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java
@@ -83,7 +83,7 @@ public class Container<T extends Actor> extends WidgetGroup {
 		this.background = background;
 		if (adjustPadding) {
 			if (background == null)
-				pad(null);
+				pad(Value.zero);
 			else
 				pad(background.getTopHeight(), background.getLeftWidth(), background.getBottomHeight(), background.getRightWidth());
 			invalidate();
@@ -194,6 +194,7 @@ public class Container<T extends Actor> extends WidgetGroup {
 
 	/** Sets the minWidth, prefWidth, maxWidth, minHeight, prefHeight, and maxHeight to the specified value. */
 	public Container<T> size (Value size) {
+		if (size == null) throw new IllegalArgumentException("size cannot be null.");
 		minWidth = size;
 		minHeight = size;
 		prefWidth = size;
@@ -205,6 +206,8 @@ public class Container<T extends Actor> extends WidgetGroup {
 
 	/** Sets the minWidth, prefWidth, maxWidth, minHeight, prefHeight, and maxHeight to the specified values. */
 	public Container<T> size (Value width, Value height) {
+		if (width == null) throw new IllegalArgumentException("width cannot be null.");
+		if (height == null) throw new IllegalArgumentException("height cannot be null.");
 		minWidth = width;
 		minHeight = height;
 		prefWidth = width;
@@ -228,6 +231,7 @@ public class Container<T extends Actor> extends WidgetGroup {
 
 	/** Sets the minWidth, prefWidth, and maxWidth to the specified value. */
 	public Container<T> width (Value width) {
+		if (width == null) throw new IllegalArgumentException("width cannot be null.");
 		minWidth = width;
 		prefWidth = width;
 		maxWidth = width;
@@ -242,6 +246,7 @@ public class Container<T extends Actor> extends WidgetGroup {
 
 	/** Sets the minHeight, prefHeight, and maxHeight to the specified value. */
 	public Container<T> height (Value height) {
+		if (height == null) throw new IllegalArgumentException("height cannot be null.");
 		minHeight = height;
 		prefHeight = height;
 		maxHeight = height;
@@ -256,6 +261,7 @@ public class Container<T extends Actor> extends WidgetGroup {
 
 	/** Sets the minWidth and minHeight to the specified value. */
 	public Container<T> minSize (Value size) {
+		if (size == null) throw new IllegalArgumentException("size cannot be null.");
 		minWidth = size;
 		minHeight = size;
 		return this;
@@ -263,17 +269,21 @@ public class Container<T extends Actor> extends WidgetGroup {
 
 	/** Sets the minWidth and minHeight to the specified values. */
 	public Container<T> minSize (Value width, Value height) {
+		if (width == null) throw new IllegalArgumentException("width cannot be null.");
+		if (height == null) throw new IllegalArgumentException("height cannot be null.");
 		minWidth = width;
 		minHeight = height;
 		return this;
 	}
 
 	public Container<T> minWidth (Value minWidth) {
+		if (minWidth == null) throw new IllegalArgumentException("minWidth cannot be null.");
 		this.minWidth = minWidth;
 		return this;
 	}
 
 	public Container<T> minHeight (Value minHeight) {
+		if (minHeight == null) throw new IllegalArgumentException("minHeight cannot be null.");
 		this.minHeight = minHeight;
 		return this;
 	}
@@ -286,7 +296,7 @@ public class Container<T extends Actor> extends WidgetGroup {
 
 	/** Sets the minWidth and minHeight to the specified values. */
 	public Container<T> minSize (float width, float height) {
-		minSize(new Fixed(width));
+		minSize(new Fixed(width), new Fixed(height));
 		return this;
 	}
 
@@ -302,6 +312,7 @@ public class Container<T extends Actor> extends WidgetGroup {
 
 	/** Sets the prefWidth and prefHeight to the specified value. */
 	public Container<T> prefSize (Value size) {
+		if (size == null) throw new IllegalArgumentException("size cannot be null.");
 		prefWidth = size;
 		prefHeight = size;
 		return this;
@@ -309,24 +320,28 @@ public class Container<T extends Actor> extends WidgetGroup {
 
 	/** Sets the prefWidth and prefHeight to the specified values. */
 	public Container<T> prefSize (Value width, Value height) {
+		if (width == null) throw new IllegalArgumentException("width cannot be null.");
+		if (height == null) throw new IllegalArgumentException("height cannot be null.");
 		prefWidth = width;
 		prefHeight = height;
 		return this;
 	}
 
 	public Container<T> prefWidth (Value prefWidth) {
+		if (prefWidth == null) throw new IllegalArgumentException("prefWidth cannot be null.");
 		this.prefWidth = prefWidth;
 		return this;
 	}
 
 	public Container<T> prefHeight (Value prefHeight) {
+		if (prefHeight == null) throw new IllegalArgumentException("prefHeight cannot be null.");
 		this.prefHeight = prefHeight;
 		return this;
 	}
 
 	/** Sets the prefWidth and prefHeight to the specified value. */
 	public Container<T> prefSize (float width, float height) {
-		prefSize(new Fixed(width));
+		prefSize(new Fixed(width), new Fixed(height));
 		return this;
 	}
 
@@ -348,6 +363,7 @@ public class Container<T extends Actor> extends WidgetGroup {
 
 	/** Sets the maxWidth and maxHeight to the specified value. */
 	public Container<T> maxSize (Value size) {
+		if (size == null) throw new IllegalArgumentException("size cannot be null.");
 		maxWidth = size;
 		maxHeight = size;
 		return this;
@@ -355,17 +371,21 @@ public class Container<T extends Actor> extends WidgetGroup {
 
 	/** Sets the maxWidth and maxHeight to the specified values. */
 	public Container<T> maxSize (Value width, Value height) {
+		if (width == null) throw new IllegalArgumentException("width cannot be null.");
+		if (height == null) throw new IllegalArgumentException("height cannot be null.");
 		maxWidth = width;
 		maxHeight = height;
 		return this;
 	}
 
 	public Container<T> maxWidth (Value maxWidth) {
+		if (maxWidth == null) throw new IllegalArgumentException("maxWidth cannot be null.");
 		this.maxWidth = maxWidth;
 		return this;
 	}
 
 	public Container<T> maxHeight (Value maxHeight) {
+		if (maxHeight == null) throw new IllegalArgumentException("maxHeight cannot be null.");
 		this.maxHeight = maxHeight;
 		return this;
 	}
@@ -378,7 +398,7 @@ public class Container<T extends Actor> extends WidgetGroup {
 
 	/** Sets the maxWidth and maxHeight to the specified values. */
 	public Container<T> maxSize (float width, float height) {
-		maxSize(new Fixed(width));
+		maxSize(new Fixed(width), new Fixed(height));
 		return this;
 	}
 
@@ -394,6 +414,7 @@ public class Container<T extends Actor> extends WidgetGroup {
 
 	/** Sets the padTop, padLeft, padBottom, and padRight to the specified value. */
 	public Container<T> pad (Value pad) {
+		if (pad == null) throw new IllegalArgumentException("pad cannot be null.");
 		padTop = pad;
 		padLeft = pad;
 		padBottom = pad;
@@ -402,6 +423,10 @@ public class Container<T extends Actor> extends WidgetGroup {
 	}
 
 	public Container<T> pad (Value top, Value left, Value bottom, Value right) {
+		if (top == null) throw new IllegalArgumentException("top cannot be null.");
+		if (left == null) throw new IllegalArgumentException("left cannot be null.");
+		if (bottom == null) throw new IllegalArgumentException("bottom cannot be null.");
+		if (right == null) throw new IllegalArgumentException("right cannot be null.");
 		padTop = top;
 		padLeft = left;
 		padBottom = bottom;
@@ -410,21 +435,25 @@ public class Container<T extends Actor> extends WidgetGroup {
 	}
 
 	public Container<T> padTop (Value padTop) {
+		if (padTop == null) throw new IllegalArgumentException("padTop cannot be null.");
 		this.padTop = padTop;
 		return this;
 	}
 
 	public Container<T> padLeft (Value padLeft) {
+		if (padLeft == null) throw new IllegalArgumentException("padLeft cannot be null.");
 		this.padLeft = padLeft;
 		return this;
 	}
 
 	public Container<T> padBottom (Value padBottom) {
+		if (padBottom == null) throw new IllegalArgumentException("padBottom cannot be null.");
 		this.padBottom = padBottom;
 		return this;
 	}
 
 	public Container<T> padRight (Value padRight) {
+		if (padRight == null) throw new IllegalArgumentException("padRight cannot be null.");
 		this.padRight = padRight;
 		return this;
 	}
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java
index c9fb0d0..c683005 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java
@@ -598,7 +598,7 @@ public class ScrollPane extends WidgetGroup {
 		this.velocityX = velocityX;
 		this.velocityY = velocityY;
 	}
-	
+
 	public float getPrefWidth () {
 		if (widget instanceof Layout) {
 			float width = ((Layout)widget).getPrefWidth();
@@ -710,7 +710,7 @@ public class ScrollPane extends WidgetGroup {
 		scrollX(MathUtils.clamp(pixels, 0, maxX));
 	}
 
-	/** Returns the x scroll position in pixels. */
+	/** Returns the x scroll position in pixels, where 0 is the left of the scroll pane. */
 	public float getScrollX () {
 		return amountX;
 	}
@@ -719,7 +719,7 @@ public class ScrollPane extends WidgetGroup {
 		scrollY(MathUtils.clamp(pixels, 0, maxY));
 	}
 
-	/** Returns the y scroll position in pixels. */
+	/** Returns the y scroll position in pixels, where 0 is the top of the scroll pane. */
 	public float getScrollY () {
 		return amountY;
 	}
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java
index cab85cd..6866462 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java
@@ -16,17 +16,23 @@
 
 package com.badlogic.gdx.scenes.scene2d.ui;
 
+import com.badlogic.gdx.Application;
+import com.badlogic.gdx.Gdx;
 import com.badlogic.gdx.graphics.Color;
+import com.badlogic.gdx.graphics.GL20;
 import com.badlogic.gdx.graphics.g2d.Batch;
+import com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer;
+import com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20;
+import com.badlogic.gdx.math.Rectangle;
 import com.badlogic.gdx.scenes.scene2d.Actor;
+import com.badlogic.gdx.scenes.scene2d.Group;
+import com.badlogic.gdx.scenes.scene2d.Stage;
 import com.badlogic.gdx.scenes.scene2d.Touchable;
 import com.badlogic.gdx.scenes.scene2d.ui.Label.LabelStyle;
 import com.badlogic.gdx.scenes.scene2d.ui.Value.Fixed;
 import com.badlogic.gdx.scenes.scene2d.utils.Align;
 import com.badlogic.gdx.scenes.scene2d.utils.Drawable;
 import com.badlogic.gdx.scenes.scene2d.utils.Layout;
-import com.badlogic.gdx.scenes.scene2d.utils.Scene2DDebugRenderer;
-import com.badlogic.gdx.scenes.scene2d.utils.Scene2DDebugRenderer.DebugRect;
 import com.badlogic.gdx.utils.Array;
 import com.badlogic.gdx.utils.Pool;
 
@@ -36,10 +42,6 @@ import com.badlogic.gdx.utils.Pool;
  * The preferred and minimum sizes are that of the children when laid out in columns and rows.
  * @author Nathan Sweet */
 public class Table extends WidgetGroup {
-
-	public static Color debugColor = new Color(0, 0, 1, 1);
-	public static Color debugCellColor = new Color(1, 0, 0, 1);
-
 	static Pool<Cell> cellPool = new Pool<Cell>() {
 		protected Cell newObject () {
 			return new Cell();
@@ -66,7 +68,7 @@ public class Table extends WidgetGroup {
 	int align = Align.center;
 
 	Debug debug = Debug.none;
-	Array<DebugRect> debugRects = new Array<DebugRect>();
+	Array<DebugRect> debugRects;
 
 	private Drawable background;
 	private boolean clip;
@@ -152,7 +154,7 @@ public class Table extends WidgetGroup {
 		this.background = background;
 		if (adjustPadding) {
 			if (background == null)
-				pad(null);
+				pad(Value.zero);
 			else
 				pad(background.getTopHeight(), background.getLeftWidth(), background.getBottomHeight(), background.getRightWidth());
 			invalidate();
@@ -279,7 +281,7 @@ public class Table extends WidgetGroup {
 
 	/** Adds a cell without an actor. */
 	public Cell add () {
-		return add((Actor)null);
+		return add((Actor) null);
 	}
 
 	/** Adds a new cell to the table with the specified actors in a {@link Stack}.
@@ -327,10 +329,7 @@ public class Table extends WidgetGroup {
 		padBottom = Value.zero;
 		padRight = Value.zero;
 		align = Align.center;
-		if (debug != Debug.none) {
-			Scene2DDebugRenderer.debugRectPool.freeAll(debugRects);
-			debugRects.clear();
-		}
+		if (debug != Debug.none) debugRects.clear();
 		debug = Debug.none;
 		cellDefaults.defaults();
 		for (int i = 0, n = columnDefaults.size; i < n; i++) {
@@ -429,6 +428,7 @@ public class Table extends WidgetGroup {
 
 	/** Sets the padTop, padLeft, padBottom, and padRight around the table to the specified value. */
 	public Table pad (Value pad) {
+		if (pad == null) throw new IllegalArgumentException("pad cannot be null.");
 		padTop = pad;
 		padLeft = pad;
 		padBottom = pad;
@@ -438,6 +438,10 @@ public class Table extends WidgetGroup {
 	}
 
 	public Table pad (Value top, Value left, Value bottom, Value right) {
+		if (top == null) throw new IllegalArgumentException("top cannot be null.");
+		if (left == null) throw new IllegalArgumentException("left cannot be null.");
+		if (bottom == null) throw new IllegalArgumentException("bottom cannot be null.");
+		if (right == null) throw new IllegalArgumentException("right cannot be null.");
 		padTop = top;
 		padLeft = left;
 		padBottom = bottom;
@@ -448,6 +452,7 @@ public class Table extends WidgetGroup {
 
 	/** Padding at the top edge of the table. */
 	public Table padTop (Value padTop) {
+		if (padTop == null) throw new IllegalArgumentException("padTop cannot be null.");
 		this.padTop = padTop;
 		sizeInvalid = true;
 		return this;
@@ -455,6 +460,7 @@ public class Table extends WidgetGroup {
 
 	/** Padding at the left edge of the table. */
 	public Table padLeft (Value padLeft) {
+		if (padLeft == null) throw new IllegalArgumentException("padLeft cannot be null.");
 		this.padLeft = padLeft;
 		sizeInvalid = true;
 		return this;
@@ -462,6 +468,7 @@ public class Table extends WidgetGroup {
 
 	/** Padding at the bottom edge of the table. */
 	public Table padBottom (Value padBottom) {
+		if (padBottom == null) throw new IllegalArgumentException("padBottom cannot be null.");
 		this.padBottom = padBottom;
 		sizeInvalid = true;
 		return this;
@@ -469,6 +476,7 @@ public class Table extends WidgetGroup {
 
 	/** Padding at the right edge of the table. */
 	public Table padRight (Value padRight) {
+		if (padRight == null) throw new IllegalArgumentException("padRight cannot be null.");
 		this.padRight = padRight;
 		sizeInvalid = true;
 		return this;
@@ -590,10 +598,7 @@ public class Table extends WidgetGroup {
 	public Table debug (Debug debug) {
 		this.debug = debug;
 		if (debug == Debug.none) {
-			if (debugRects != null) {
-				Scene2DDebugRenderer.debugRectPool.freeAll(debugRects);
-				debugRects.clear();
-			}
+			if (debugRects != null) debugRects.clear();
 		} else
 			invalidate();
 		return this;
@@ -649,7 +654,8 @@ public class Table extends WidgetGroup {
 		return align;
 	}
 
-	/** Returns the row index for the y coordinate, or -1 if there are no cells. */
+	/** Returns the row index for the y coordinate, or -1 if there are no cells.
+	 * @param y The y coordinate, where 0 is the top of the table. */
 	public int getRow (float y) {
 		Array<Cell> cells = this.cells;
 		int row = 0;
@@ -674,6 +680,14 @@ public class Table extends WidgetGroup {
 		this.round = round;
 	}
 
+	public int getRows () {
+		return rows;
+	}
+
+	public int getColumns () {
+		return columns;
+	}
+
 	private float[] ensureSize (float[] array, int size) {
 		if (array == null || array.length < size) return new float[size];
 		for (int i = 0, n = array.length; i < n; i++)
@@ -1085,22 +1099,19 @@ public class Table extends WidgetGroup {
 
 		// Store debug rectangles.
 		if (debug == Debug.none) return;
-		if (debugRects != null) {
-			Scene2DDebugRenderer.debugRectPool.freeAll(debugRects);
-			debugRects.clear();
-		}
+		if (debugRects != null) debugRects.clear();
 		currentX = x;
 		currentY = y;
 		if (debug == Debug.table || debug == Debug.all) {
-			addDebugRect(layoutX, layoutY, layoutWidth, layoutHeight, debugColor);
-			addDebugRect(x, y, tableWidth - hpadding, tableHeight - vpadding, debugColor);
+			TableDebug.addRectangle(this, Debug.table, layoutX, layoutY, layoutWidth, layoutHeight);
+			TableDebug.addRectangle(this, Debug.table, x, y, tableWidth - hpadding, tableHeight - vpadding);
 		}
 		for (int i = 0; i < cellCount; i++) {
 			Cell c = cells.get(i);
 
 			// Actor bounds.
 			if (debug == Debug.actor || debug == Debug.all)
-				addDebugRect(c.actorX, c.actorY, c.actorWidth, c.actorHeight, Actor.debugColor);
+				TableDebug.addRectangle(this, Debug.actor, c.actorX, c.actorY, c.actorWidth, c.actorHeight);
 
 			// Cell bounds.
 			float spannedCellWidth = 0;
@@ -1109,8 +1120,8 @@ public class Table extends WidgetGroup {
 			spannedCellWidth -= c.computedPadLeft + c.computedPadRight;
 			currentX += c.computedPadLeft;
 			if (debug == Debug.cell || debug == Debug.all) {
-				addDebugRect(currentX, currentY + c.computedPadTop, spannedCellWidth, rowHeight[c.row] - c.computedPadTop
-					- c.computedPadBottom, debugCellColor);
+				TableDebug.addRectangle(this, Debug.cell, currentX, currentY + c.computedPadTop, spannedCellWidth, rowHeight[c.row]
+					- c.computedPadTop - c.computedPadBottom);
 			}
 
 			if (c.endRow) {
@@ -1121,18 +1132,11 @@ public class Table extends WidgetGroup {
 		}
 	}
 
-	@Override
-	public void getDebugRects (Array<DebugRect> debugRects) {
-		debugRects.addAll(this.debugRects);
-	}
-
-	private void addDebugRect (float x, float y, float width, float height, Color color) {
-		DebugRect debugRect = Scene2DDebugRenderer.debugRectPool.obtain();
-		float yCorrected = getHeight() - y - height;
-		debugRect.bottomLeft.set(x, yCorrected);
-		debugRect.topRight.set(x + width, yCorrected + height);
-		debugRect.color.set(color);
-		debugRects.add(debugRect);
+	/** Draws the debug lines for all tables in the stage. If this method is not called each frame, no debug lines will be drawn. If
+	 * debug is never turned on for any table in the application, calling this method will have no effect. If a table has ever had
+	 * debug set, calling this method causes an expensive traversal of all actors in the stage. */
+	static public void drawDebug (Stage stage) {
+		if (TableDebug.draw) TableDebug.draw(stage);
 	}
 
 	/** @author Nathan Sweet */
@@ -1140,4 +1144,97 @@ public class Table extends WidgetGroup {
 		none, all, table, cell, actor
 	}
 
+	/** @author Nathan Sweet */
+	static class DebugRect extends Rectangle {
+		final Debug type;
+
+		public DebugRect (Debug type, float x, float y, float width, float height) {
+			super(x, y, width, height);
+			this.type = type;
+		}
+	}
+
+	/** @author Nathan Sweet */
+	static class TableDebug {
+		static boolean draw;
+
+		static private Application app;
+		static private ImmediateModeRenderer debugRenderer;
+
+		static public void addRectangle (Table table, Debug type, float x, float y, float w, float h) {
+			draw = true;
+			if (table.debugRects == null) table.debugRects = new Array();
+			table.debugRects.add(new DebugRect(type, x, table.getHeight() - y, w, h));
+		}
+
+		static void draw (Stage stage) {
+			// Handle cases where Android holds on to static objects
+			if (app != Gdx.app || debugRenderer == null) {
+				debugRenderer = new ImmediateModeRenderer20(128, false, true, 0);
+				app = Gdx.app;
+			}
+
+			debugRenderer.begin(stage.getBatch().getProjectionMatrix(), GL20.GL_LINES);
+			draw(stage.getActors());
+			debugRenderer.end();
+		}
+
+		static void draw (Array<Actor> actors) {
+			for (int i = 0, n = actors.size; i < n; i++) {
+				Actor actor = actors.get(i);
+				if (!actor.isVisible()) continue;
+				if (actor instanceof Table) draw((Table)actor);
+				if (actor instanceof Group) draw(((Group)actor).getChildren());
+			}
+		}
+
+		static public void draw (Table table) {
+			if (table.debug == Debug.none) return;
+			Array<DebugRect> debugRects = table.debugRects;
+			if (debugRects == null) return;
+
+			float x = 0, y = 0;
+			Actor parent = table;
+			while (parent != null) {
+				if (parent instanceof Group) {
+					x += parent.getX();
+					y += parent.getY();
+				}
+				parent = parent.getParent();
+			}
+
+			for (int i = 0, n = debugRects.size; i < n; i++) {
+				DebugRect rect = debugRects.get(i);
+				float x1 = x + rect.x;
+				float y1 = y + rect.y - rect.height;
+				float x2 = x1 + rect.width;
+				float y2 = y1 + rect.height;
+				float r = rect.type == Debug.cell ? 1 : 0;
+				float g = rect.type == Debug.actor ? 1 : 0;
+				float b = rect.type == Debug.table ? 1 : 0;
+
+				debugRenderer.color(r, g, b, 1);
+				debugRenderer.vertex(x1, y1, 0);
+				debugRenderer.color(r, g, b, 1);
+				debugRenderer.vertex(x1, y2, 0);
+
+				debugRenderer.color(r, g, b, 1);
+				debugRenderer.vertex(x1, y2, 0);
+				debugRenderer.color(r, g, b, 1);
+				debugRenderer.vertex(x2, y2, 0);
+
+				debugRenderer.color(r, g, b, 1);
+				debugRenderer.vertex(x2, y2, 0);
+				debugRenderer.color(r, g, b, 1);
+				debugRenderer.vertex(x2, y1, 0);
+
+				debugRenderer.color(r, g, b, 1);
+				debugRenderer.vertex(x2, y1, 0);
+				debugRenderer.color(r, g, b, 1);
+				debugRenderer.vertex(x1, y1, 0);
+
+				if (debugRenderer.getNumVertices() == 128) debugRenderer.flush();
+			}
+		}
+	}
 }
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java
index 2ae2b67..c69d654 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java
@@ -879,11 +879,13 @@ public class TextField extends Widget implements Disableable {
 					}
 					if (add && !remove) {
 						// Character may be added to the text.
-						if (character != ENTER_DESKTOP && character != ENTER_ANDROID) {
+						boolean isEnter = character == ENTER_DESKTOP || character == ENTER_ANDROID;
+						if (!isEnter) {
 							if (filter != null && !filter.acceptChar(TextField.this, character)) return true;
 						}
 						if (!withinMaxLength(text.length())) return true;
-						text = insert(cursor++, String.valueOf(character), text);
+						String insertion = isEnter ? "\n" : String.valueOf(character);
+						text = insert(cursor++, insertion, text);
 					}
 					updateDisplayText();
 				}
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/Scene2DDebugRenderer.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/Scene2DDebugRenderer.java
deleted file mode 100644
index 62c3998..0000000
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/Scene2DDebugRenderer.java
+++ /dev/null
@@ -1,144 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-
-package com.badlogic.gdx.scenes.scene2d.utils;
-
-import com.badlogic.gdx.graphics.Color;
-import com.badlogic.gdx.graphics.glutils.ShapeRenderer;
-import com.badlogic.gdx.graphics.glutils.ShapeRenderer.ShapeType;
-import com.badlogic.gdx.math.Vector2;
-import com.badlogic.gdx.scenes.scene2d.Actor;
-import com.badlogic.gdx.scenes.scene2d.Group;
-import com.badlogic.gdx.scenes.scene2d.Stage;
-import com.badlogic.gdx.utils.Array;
-import com.badlogic.gdx.utils.Pool;
-import com.badlogic.gdx.utils.Pool.Poolable;
-import com.badlogic.gdx.utils.ReflectionPool;
-
-/** This debugging utility takes a {@link Stage} and renders all {@link Actor}s bounding boxes via a {@link ShapeRenderer}. The
- * bounding boxes are not axis-aligned but rotated and scaled just like the actor. All you need to do is calling the
- * {@link #render()} method each frame.
- * 
- * @author Daniel Holderbaum */
-public class Scene2DDebugRenderer {
-
-	public static class DebugRect implements Poolable {
-		public Vector2 bottomLeft;
-		public Vector2 topRight;
-		public Color color;
-
-		public DebugRect () {
-			bottomLeft = new Vector2();
-			topRight = new Vector2();
-			color = new Color(1, 1, 1, 1);
-		}
-
-		@Override
-		public void reset () {
-			bottomLeft.setZero();
-			topRight.setZero();
-			color.set(1, 1, 1, 1);
-		}
-	}
-
-	public static Pool<DebugRect> debugRectPool = new ReflectionPool(DebugRect.class);
-
-	private Array<DebugRect> debugRects = new Array<DebugRect>();
-
-	/** Set to {@code true} if you want to render the actors that are not visible ({@code visible=false} of the actor or any parent)
-	 * as well. */
-	public boolean renderInvisibleActors = false;
-
-	private Stage stage;
-
-	private ShapeRenderer shapeRenderer;
-
-	public Scene2DDebugRenderer (Stage stage) {
-		this.stage = stage;
-		this.shapeRenderer = new ShapeRenderer();
-	}
-
-	/** Renders the bounding boxes of all actors of the stage. */
-	public void render () {
-		shapeRenderer.setProjectionMatrix(stage.getCamera().projection);
-		shapeRenderer.setTransformMatrix(stage.getCamera().view);
-		shapeRenderer.begin(ShapeType.Line);
-		for (Actor actor : stage.getActors()) {
-			renderRecursive(actor);
-		}
-		shapeRenderer.end();
-	}
-
-	private Vector2 topLeft = new Vector2();
-	private Vector2 topRight = new Vector2();
-	private Vector2 bottomRight = new Vector2();
-	private Vector2 bottomLeft = new Vector2();
-
-	private void renderRecursive (Actor actor) {
-		if (actor.isDebuggingEnabled() && (renderInvisibleActors || isActorVisible(actor))) {
-
-			actor.getDebugRects(debugRects);
-			for (DebugRect debugRect : debugRects) {
-				topLeft.set(debugRect.bottomLeft.x, debugRect.topRight.y);
-				topRight.set(debugRect.topRight.x, debugRect.topRight.y);
-				bottomRight.set(debugRect.topRight.x, debugRect.bottomLeft.y);
-				bottomLeft.set(debugRect.bottomLeft.x, debugRect.bottomLeft.y);
-
-				renderBoundingBox(actor, topLeft, topRight, bottomRight, bottomLeft, debugRect.color);
-			}
-			debugRects.clear();
-		}
-
-		// children are still rendered, even if the group has no debugging enabled
-		if (actor instanceof Group) {
-			Group group = (Group)actor;
-			for (Actor child : group.getChildren()) {
-				renderRecursive(child);
-			}
-		}
-
-	}
-
-	private void renderBoundingBox (Actor actor, Vector2 topLeft, Vector2 topRight, Vector2 bottomRight, Vector2 bottomLeft,
-		Color color) {
-		// transform to stage coordinates using offsets, scales,
-		// rotations etc of the whole ancestor hierarchy until the root
-		actor.localToStageCoordinates(topLeft);
-		actor.localToStageCoordinates(topRight);
-		actor.localToStageCoordinates(bottomRight);
-		actor.localToStageCoordinates(bottomLeft);
-
-		shapeRenderer.setColor(color);
-		shapeRenderer.line(topLeft, topRight);
-		shapeRenderer.line(topRight, bottomRight);
-		shapeRenderer.line(bottomRight, bottomLeft);
-		shapeRenderer.line(bottomLeft, topLeft);
-	}
-
-	/** Returns {@code true} in case the given actor and all of its ancestors are visible. {@code False} otherwise. */
-	private boolean isActorVisible (Actor actor) {
-		Actor currentActor = actor;
-		while (currentActor != null) {
-			if (currentActor.isVisible() == false) {
-				return false;
-			} else {
-				currentActor = currentActor.getParent();
-			}
-		}
-
-		return true;
-	}
-}
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/Selection.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/Selection.java
index 4ceacf6..253dc90 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/Selection.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/Selection.java
@@ -1,12 +1,10 @@
 
 package com.badlogic.gdx.scenes.scene2d.utils;
 
-import com.badlogic.gdx.Gdx;
-import com.badlogic.gdx.Input.Keys;
 import com.badlogic.gdx.scenes.scene2d.Actor;
 import com.badlogic.gdx.scenes.scene2d.utils.ChangeListener.ChangeEvent;
 import com.badlogic.gdx.utils.Array;
-import com.badlogic.gdx.utils.ObjectSet;
+import com.badlogic.gdx.utils.OrderedSet;
 import com.badlogic.gdx.utils.Pools;
 
 import java.util.Iterator;
@@ -16,8 +14,8 @@ import java.util.Iterator;
  * @author Nathan Sweet */
 public class Selection<T> implements Disableable, Iterable<T> {
 	private Actor actor;
-	final ObjectSet<T> selected = new ObjectSet();
-	private final ObjectSet<T> old = new ObjectSet();
+	final OrderedSet<T> selected = new OrderedSet();
+	private final OrderedSet<T> old = new OrderedSet();
 	boolean isDisabled;
 	private boolean toggle;
 	boolean multiple;
@@ -65,7 +63,7 @@ public class Selection<T> implements Disableable, Iterable<T> {
 		return selected.size;
 	}
 
-	public ObjectSet<T> items () {
+	public OrderedSet<T> items () {
 		return selected;
 	}
 
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/SpriteDrawable.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/SpriteDrawable.java
index 15c24f7..2330c2b 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/SpriteDrawable.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/SpriteDrawable.java
@@ -39,11 +39,7 @@ public class SpriteDrawable extends BaseDrawable implements TransformDrawable {
 	}
 
 	public void draw (Batch batch, float x, float y, float width, float height) {
-		sprite.setBounds(x, y, width, height);
-		Color color = sprite.getColor();
-		sprite.setColor(Color.tmp.set(color).mul(batch.getColor()));
-		sprite.draw(batch);
-		sprite.setColor(color);
+		draw(batch, x, y, width / 2f, height / 2f, width, height, 1f, 1f, 0f);
 	}
 
 	public void draw (Batch batch, float x, float y, float originX, float originY, float width, float height, float scaleX,
diff --git a/gdx/src/com/badlogic/gdx/utils/Bits.java b/gdx/src/com/badlogic/gdx/utils/Bits.java
index fcdd24d..29a8342 100644
--- a/gdx/src/com/badlogic/gdx/utils/Bits.java
+++ b/gdx/src/com/badlogic/gdx/utils/Bits.java
@@ -16,6 +16,8 @@
 
 package com.badlogic.gdx.utils;
 
+import java.util.Arrays;
+
 /** A bitset, without size limitation, allows comparison via bitwise operators to other bitfields.
  * 
  * @author mzechner
@@ -280,4 +282,21 @@ public class Bits {
 		}
 		return true;
 	}
+	
+	@Override
+	public int hashCode() {
+		return Arrays.hashCode(bits);
+	}
+
+	@Override
+	public boolean equals(Object obj) {
+		if (this == obj)
+			return true;
+		if (obj == null)
+			return false;
+		if (getClass() != obj.getClass())
+			return false;
+		Bits other = (Bits) obj;
+		return Arrays.equals(bits, other.bits);
+	}
 }
diff --git a/gdx/src/com/badlogic/gdx/utils/DelayedRemovalArray.java b/gdx/src/com/badlogic/gdx/utils/DelayedRemovalArray.java
index fa127b4..20dd30c 100644
--- a/gdx/src/com/badlogic/gdx/utils/DelayedRemovalArray.java
+++ b/gdx/src/com/badlogic/gdx/utils/DelayedRemovalArray.java
@@ -26,7 +26,7 @@ import java.util.Comparator;
  * problem..
  * @author Nathan Sweet */
 public class DelayedRemovalArray<T> extends Array<T> {
-	private boolean iterating;
+	private int iterating;
 	private IntArray remove = new IntArray(0);
 
 	public DelayedRemovalArray () {
@@ -62,13 +62,16 @@ public class DelayedRemovalArray<T> extends Array<T> {
 	}
 
 	public void begin () {
-		iterating = true;
+		iterating++;
 	}
 
 	public void end () {
-		iterating = false;
-		for (int i = 0, n = remove.size; i < n; i++)
-			removeIndex(remove.pop());
+		if (iterating == 0) throw new IllegalStateException("begin must be called before end.");
+		iterating--;
+		if (iterating == 0) {
+			for (int i = 0, n = remove.size; i < n; i++)
+				removeIndex(remove.pop());
+		}
 	}
 
 	private void remove (int index) {
@@ -84,7 +87,7 @@ public class DelayedRemovalArray<T> extends Array<T> {
 	}
 
 	public boolean removeValue (T value, boolean identity) {
-		if (iterating) {
+		if (iterating > 0) {
 			int index = indexOf(value, identity);
 			if (index == -1) return false;
 			remove(index);
@@ -94,7 +97,7 @@ public class DelayedRemovalArray<T> extends Array<T> {
 	}
 
 	public T removeIndex (int index) {
-		if (iterating) {
+		if (iterating > 0) {
 			remove(index);
 			return get(index);
 		}
@@ -102,7 +105,7 @@ public class DelayedRemovalArray<T> extends Array<T> {
 	}
 
 	public void removeRange (int start, int end) {
-		if (iterating) {
+		if (iterating > 0) {
 			for (int i = end; i >= start; i--)
 				remove(i);
 		} else
@@ -110,52 +113,52 @@ public class DelayedRemovalArray<T> extends Array<T> {
 	}
 
 	public void set (int index, T value) {
-		if (iterating) throw new IllegalStateException("Invalid between begin/end.");
+		if (iterating > 0) throw new IllegalStateException("Invalid between begin/end.");
 		super.set(index, value);
 	}
 
 	public void insert (int index, T value) {
-		if (iterating) throw new IllegalStateException("Invalid between begin/end.");
+		if (iterating > 0) throw new IllegalStateException("Invalid between begin/end.");
 		super.insert(index, value);
 	}
 
 	public void swap (int first, int second) {
-		if (iterating) throw new IllegalStateException("Invalid between begin/end.");
+		if (iterating > 0) throw new IllegalStateException("Invalid between begin/end.");
 		super.swap(first, second);
 	}
 
 	public T pop () {
-		if (iterating) throw new IllegalStateException("Invalid between begin/end.");
+		if (iterating > 0) throw new IllegalStateException("Invalid between begin/end.");
 		return super.pop();
 	}
 
 	public void clear () {
-		if (iterating) throw new IllegalStateException("Invalid between begin/end.");
+		if (iterating > 0) throw new IllegalStateException("Invalid between begin/end.");
 		super.clear();
 	}
 
 	public void sort () {
-		if (iterating) throw new IllegalStateException("Invalid between begin/end.");
+		if (iterating > 0) throw new IllegalStateException("Invalid between begin/end.");
 		super.sort();
 	}
 
 	public void sort (Comparator<? super T> comparator) {
-		if (iterating) throw new IllegalStateException("Invalid between begin/end.");
+		if (iterating > 0) throw new IllegalStateException("Invalid between begin/end.");
 		super.sort(comparator);
 	}
 
 	public void reverse () {
-		if (iterating) throw new IllegalStateException("Invalid between begin/end.");
+		if (iterating > 0) throw new IllegalStateException("Invalid between begin/end.");
 		super.reverse();
 	}
 
 	public void shuffle () {
-		if (iterating) throw new IllegalStateException("Invalid between begin/end.");
+		if (iterating > 0) throw new IllegalStateException("Invalid between begin/end.");
 		super.shuffle();
 	}
 
 	public void truncate (int newSize) {
-		if (iterating) throw new IllegalStateException("Invalid between begin/end.");
+		if (iterating > 0) throw new IllegalStateException("Invalid between begin/end.");
 		super.truncate(newSize);
 	}
 
diff --git a/gdx/src/com/badlogic/gdx/utils/ObjectMap.java b/gdx/src/com/badlogic/gdx/utils/ObjectMap.java
index a3d0883..d128aa4 100644
--- a/gdx/src/com/badlogic/gdx/utils/ObjectMap.java
+++ b/gdx/src/com/badlogic/gdx/utils/ObjectMap.java
@@ -17,7 +17,6 @@
 package com.badlogic.gdx.utils;
 
 import com.badlogic.gdx.math.MathUtils;
-import com.badlogic.gdx.utils.ObjectMap.Entry;
 
 import java.util.Iterator;
 import java.util.NoSuchElementException;
@@ -162,7 +161,7 @@ public class ObjectMap<K, V> implements Iterable<ObjectMap.Entry<K, V>> {
 
 	public void putAll (ObjectMap<K, V> map) {
 		ensureCapacity(map.size);
-		for (Entry<K, V> entry : map.entries())
+		for (Entry<K, V> entry : map)
 			put(entry.key, entry.value);
 	}
 
@@ -578,7 +577,7 @@ public class ObjectMap<K, V> implements Iterable<ObjectMap.Entry<K, V>> {
 	}
 
 	/** Returns an iterator for the values in the map. Remove is supported. Note that the same iterator instance is returned each
-	 * time this method is called. Use the {@link Entries} constructor for nested or multithreaded iteration. */
+	 * time this method is called. Use the {@link Values} constructor for nested or multithreaded iteration. */
 	public Values<V> values () {
 		if (values1 == null) {
 			values1 = new Values(this);
@@ -597,7 +596,7 @@ public class ObjectMap<K, V> implements Iterable<ObjectMap.Entry<K, V>> {
 	}
 
 	/** Returns an iterator for the keys in the map. Remove is supported. Note that the same iterator instance is returned each time
-	 * this method is called. Use the {@link Entries} constructor for nested or multithreaded iteration. */
+	 * this method is called. Use the {@link Keys} constructor for nested or multithreaded iteration. */
 	public Keys<K> keys () {
 		if (keys1 == null) {
 			keys1 = new Keys(this);
@@ -639,10 +638,10 @@ public class ObjectMap<K, V> implements Iterable<ObjectMap.Entry<K, V>> {
 		public void reset () {
 			currentIndex = -1;
 			nextIndex = -1;
-			advance();
+			findNextIndex();
 		}
 
-		void advance () {
+		void findNextIndex () {
 			hasNext = false;
 			K[] keyTable = map.keyTable;
 			for (int n = map.capacity + map.stashSize; ++nextIndex < n;) {
@@ -658,7 +657,7 @@ public class ObjectMap<K, V> implements Iterable<ObjectMap.Entry<K, V>> {
 			if (currentIndex >= map.capacity) {
 				map.removeStashIndex(currentIndex);
 				nextIndex = currentIndex - 1;
-				advance();
+				findNextIndex();
 			} else {
 				map.keyTable[currentIndex] = null;
 				map.valueTable[currentIndex] = null;
@@ -683,7 +682,7 @@ public class ObjectMap<K, V> implements Iterable<ObjectMap.Entry<K, V>> {
 			entry.key = keyTable[nextIndex];
 			entry.value = map.valueTable[nextIndex];
 			currentIndex = nextIndex;
-			advance();
+			findNextIndex();
 			return entry;
 		}
 
@@ -712,7 +711,7 @@ public class ObjectMap<K, V> implements Iterable<ObjectMap.Entry<K, V>> {
 			if (!valid) throw new GdxRuntimeException("#iterator() cannot be used nested.");
 			V value = map.valueTable[nextIndex];
 			currentIndex = nextIndex;
-			advance();
+			findNextIndex();
 			return value;
 		}
 
@@ -722,16 +721,14 @@ public class ObjectMap<K, V> implements Iterable<ObjectMap.Entry<K, V>> {
 
 		/** Returns a new array containing the remaining values. */
 		public Array<V> toArray () {
-			Array array = new Array(true, map.size);
-			while (hasNext)
-				array.add(next());
-			return array;
+			return toArray(new Array(true, map.size));
 		}
 
 		/** Adds the remaining values to the specified array. */
-		public void toArray (Array<V> array) {
+		public Array<V> toArray (Array<V> array) {
 			while (hasNext)
 				array.add(next());
+			return array;
 		}
 	}
 
@@ -750,7 +747,7 @@ public class ObjectMap<K, V> implements Iterable<ObjectMap.Entry<K, V>> {
 			if (!valid) throw new GdxRuntimeException("#iterator() cannot be used nested.");
 			K key = map.keyTable[nextIndex];
 			currentIndex = nextIndex;
-			advance();
+			findNextIndex();
 			return key;
 		}
 
@@ -760,7 +757,11 @@ public class ObjectMap<K, V> implements Iterable<ObjectMap.Entry<K, V>> {
 
 		/** Returns a new array containing the remaining keys. */
 		public Array<K> toArray () {
-			Array array = new Array(true, map.size);
+			return toArray(new Array(true, map.size));
+		}
+
+		/** Adds the remaining keys to the array. */
+		public Array<K> toArray (Array<K> array) {
 			while (hasNext)
 				array.add(next());
 			return array;
diff --git a/gdx/src/com/badlogic/gdx/utils/ObjectSet.java b/gdx/src/com/badlogic/gdx/utils/ObjectSet.java
index be0f311..3765f60 100644
--- a/gdx/src/com/badlogic/gdx/utils/ObjectSet.java
+++ b/gdx/src/com/badlogic/gdx/utils/ObjectSet.java
@@ -43,7 +43,7 @@ public class ObjectSet<T> implements Iterable<T> {
 	private int stashCapacity;
 	private int pushIterations;
 
-	private SetIterator iterator1, iterator2;
+	private ObjectSetIterator iterator1, iterator2;
 
 	/** Creates a new set with an initial capacity of 32 and a load factor of 0.8. This set will hold 25 items before growing the
 	 * backing table. */
@@ -84,7 +84,8 @@ public class ObjectSet<T> implements Iterable<T> {
 		size = set.size;
 	}
 
-	/** Returns true if the key was not already in the set. */
+	/** Returns true if the key was not already in the set. If this set already contains the key, the call leaves the set unchanged
+	 * and returns false. */
 	public boolean add (T key) {
 		if (key == null) throw new IllegalArgumentException("key cannot be null.");
 		T[] keyTable = this.keyTable;
@@ -428,11 +429,11 @@ public class ObjectSet<T> implements Iterable<T> {
 	}
 
 	/** Returns an iterator for the keys in the set. Remove is supported. Note that the same iterator instance is returned each time
-	 * this method is called. Use the {@link SetIterator} constructor for nested or multithreaded iteration. */
-	public SetIterator<T> iterator () {
+	 * this method is called. Use the {@link ObjectSetIterator} constructor for nested or multithreaded iteration. */
+	public ObjectSetIterator<T> iterator () {
 		if (iterator1 == null) {
-			iterator1 = new SetIterator(this);
-			iterator2 = new SetIterator(this);
+			iterator1 = new ObjectSetIterator(this);
+			iterator2 = new ObjectSetIterator(this);
 		}
 		if (!iterator1.valid) {
 			iterator1.reset();
@@ -452,14 +453,14 @@ public class ObjectSet<T> implements Iterable<T> {
 		return set;
 	}
 
-	static public class SetIterator<K> implements Iterable<K>, Iterator<K> {
+	static public class ObjectSetIterator<K> implements Iterable<K>, Iterator<K> {
 		public boolean hasNext;
 
 		final ObjectSet<K> set;
 		int nextIndex, currentIndex;
 		boolean valid = true;
 
-		public SetIterator (ObjectSet<K> set) {
+		public ObjectSetIterator (ObjectSet<K> set) {
 			this.set = set;
 			reset();
 		}
@@ -512,19 +513,16 @@ public class ObjectSet<T> implements Iterable<T> {
 			return this;
 		}
 
-		/** Adds the remaining keys to the array. */
+		/** Adds the remaining values to the array. */
 		public Array<K> toArray (Array<K> array) {
 			while (hasNext)
 				array.add(next());
 			return array;
 		}
 
-		/** Returns a new array containing the remaining keys. */
+		/** Returns a new array containing the remaining values. */
 		public Array<K> toArray () {
-			Array array = new Array(true, set.size);
-			while (hasNext)
-				array.add(next());
-			return array;
+			return toArray(new Array(true, set.size));
 		}
 	}
 }
diff --git a/gdx/src/com/badlogic/gdx/utils/OrderedMap.java b/gdx/src/com/badlogic/gdx/utils/OrderedMap.java
index 1770a37..fc1bd82 100644
--- a/gdx/src/com/badlogic/gdx/utils/OrderedMap.java
+++ b/gdx/src/com/badlogic/gdx/utils/OrderedMap.java
@@ -16,6 +16,9 @@
 
 package com.badlogic.gdx.utils;
 
+import java.util.Iterator;
+import java.util.NoSuchElementException;
+
 /** An {@link ObjectMap} that also stores keys in an {@link Array} using the insertion order. There is some additional overhead for
  * put and remove. Iteration over the {@link #entries()}, {@link #keys()}, and {@link #values()} is ordered. Keys can also be
  * accessed and the order changed using {@link #orderedKeys()}.
@@ -23,8 +26,11 @@ package com.badlogic.gdx.utils;
 public class OrderedMap<K, V> extends ObjectMap<K, V> {
 	final Array<K> keys;
 
+	private Entries entries1, entries2;
+	private Values values1, values2;
+	private Keys keys1, keys2;
+
 	public OrderedMap () {
-		super();
 		keys = new Array();
 	}
 
@@ -67,62 +73,65 @@ public class OrderedMap<K, V> extends ObjectMap<K, V> {
 		return keys;
 	}
 
-	public Entries<K, V> entries () {
-		return new Entries(this) {
-			void advance () {
-				nextIndex++;
-				hasNext = nextIndex < map.size;
-			}
-
-			public Entry next () {
-				entry.key = keys.get(nextIndex);
-				entry.value = map.get(entry.key);
-				advance();
-				return entry;
-			}
-
-			public void remove () {
-				map.remove(entry.key);
-			}
-		};
+	public Iterator<Entry<K, V>> iterator () {
+		return entries();
 	}
 
-	public Keys<K> keys () {
-		return new Keys(this) {
-			void advance () {
-				nextIndex++;
-				hasNext = nextIndex < map.size;
-			}
-
-			public K next () {
-				K key = keys.get(nextIndex);
-				advance();
-				return key;
-			}
-
-			public void remove () {
-				map.remove(keys.get(nextIndex - 1));
-			}
-		};
+	/** Returns an iterator for the entries in the map. Remove is supported. Note that the same iterator instance is returned each
+	 * time this method is called. Use the {@link OrderedMapEntries} constructor for nested or multithreaded iteration. */
+	public Entries<K, V> entries () {
+		if (entries1 == null) {
+			entries1 = new Entries(this);
+			entries2 = new Entries(this);
+		}
+		if (!entries1.valid) {
+			entries1.reset();
+			entries1.valid = true;
+			entries2.valid = false;
+			return entries1;
+		}
+		entries2.reset();
+		entries2.valid = true;
+		entries1.valid = false;
+		return entries2;
 	}
 
+	/** Returns an iterator for the values in the map. Remove is supported. Note that the same iterator instance is returned each
+	 * time this method is called. Use the {@link OrderedMapValues} constructor for nested or multithreaded iteration. */
 	public Values<V> values () {
-		return new Values(this) {
-			void advance () {
-				nextIndex++;
-				hasNext = nextIndex < map.size;
-			}
-
-			public V next () {
-				V value = (V)map.get(keys.get(nextIndex));
-				advance();
-				return value;
-			}
+		if (values1 == null) {
+			values1 = new Values(this);
+			values2 = new Values(this);
+		}
+		if (!values1.valid) {
+			values1.reset();
+			values1.valid = true;
+			values2.valid = false;
+			return values1;
+		}
+		values2.reset();
+		values2.valid = true;
+		values1.valid = false;
+		return values2;
+	}
 
-			public void remove () {
-				map.remove(keys.get(nextIndex - 1));
-			}
-		};
+	/** Returns an iterator for the keys in the map. Remove is supported. Note that the same iterator instance is returned each time
+	 * this method is called. Use the {@link OrderedMapKeys} constructor for nested or multithreaded iteration. */
+	public Keys<K> keys () {
+		if (keys1 == null) {
+			keys1 = new Keys(this);
+			keys2 = new Keys(this);
+		}
+		if (!keys1.valid) {
+			keys1.reset();
+			keys1.valid = true;
+			keys2.valid = false;
+			return keys1;
+		}
+		keys2.reset();
+		keys2.valid = true;
+		keys1.valid = false;
+		return keys2;
 	}
 
 	public String toString () {
@@ -140,4 +149,89 @@ public class OrderedMap<K, V> extends ObjectMap<K, V> {
 		buffer.append('}');
 		return buffer.toString();
 	}
+
+	static public class OrderedMapEntries<K, V> extends Entries<K, V> {
+		private Array<K> keys;
+
+		public OrderedMapEntries (OrderedMap<K, V> map) {
+			super(map);
+			keys = map.keys;
+		}
+
+		public void reset () {
+			nextIndex = 0;
+			hasNext = map.size > 0;
+		}
+
+		public Entry next () {
+			if (!hasNext) throw new NoSuchElementException();
+			if (!valid) throw new GdxRuntimeException("#iterator() cannot be used nested.");
+			entry.key = keys.get(nextIndex);
+			entry.value = map.get(entry.key);
+			nextIndex++;
+			hasNext = nextIndex < map.size;
+			return entry;
+		}
+
+		public void remove () {
+			if (currentIndex < 0) throw new IllegalStateException("next must be called before remove.");
+			map.remove(entry.key);
+		}
+	}
+
+	static public class OrderedMapKeys<K> extends Keys<K> {
+		private Array<K> keys;
+
+		public OrderedMapKeys (OrderedMap<K, ?> map) {
+			super(map);
+			keys = map.keys;
+		}
+
+		public void reset () {
+			nextIndex = 0;
+			hasNext = map.size > 0;
+		}
+
+		public K next () {
+			if (!hasNext) throw new NoSuchElementException();
+			if (!valid) throw new GdxRuntimeException("#iterator() cannot be used nested.");
+			K key = keys.get(nextIndex);
+			nextIndex++;
+			hasNext = nextIndex < map.size;
+			return key;
+		}
+
+		public void remove () {
+			if (currentIndex < 0) throw new IllegalStateException("next must be called before remove.");
+			map.remove(keys.get(nextIndex - 1));
+		}
+	}
+
+	static public class OrderedMapValues<V> extends Values<V> {
+		private Array keys;
+
+		public OrderedMapValues (OrderedMap<?, V> map) {
+			super(map);
+			keys = map.keys;
+		}
+
+		public void reset () {
+			nextIndex = 0;
+			hasNext = map.size > 0;
+		}
+
+		public V next () {
+			if (!hasNext) throw new NoSuchElementException();
+			if (!valid) throw new GdxRuntimeException("#iterator() cannot be used nested.");
+			V value = (V)map.get(keys.get(nextIndex));
+			nextIndex++;
+			hasNext = nextIndex < map.size;
+			return value;
+		}
+
+		public void remove () {
+			if (currentIndex < 0) throw new IllegalStateException("next must be called before remove.");
+			map.remove(keys.get(nextIndex - 1));
+		}
+	}
 }
diff --git a/gdx/src/com/badlogic/gdx/utils/OrderedSet.java b/gdx/src/com/badlogic/gdx/utils/OrderedSet.java
new file mode 100644
index 0000000..86f1961
--- /dev/null
+++ b/gdx/src/com/badlogic/gdx/utils/OrderedSet.java
@@ -0,0 +1,133 @@
+/*******************************************************************************
+ * Copyright 2011 See AUTHORS file.
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ ******************************************************************************/
+
+package com.badlogic.gdx.utils;
+
+import java.util.NoSuchElementException;
+
+/** An unordered set where the keys are objects. This implementation uses cuckoo hashing using 3 hashes, random walking, and a
+ * small stash for problematic keys. Null keys are not allowed. No allocation is done except when growing the table size. <br>
+ * <br>
+ * This set performs very fast contains and remove (typically O(1), worst case O(log(n))). Add may be a bit slower, depending on
+ * hash collisions. Load factors greater than 0.91 greatly increase the chances the set will have to rehash to the next higher POT
+ * size.
+ * @author Nathan Sweet */
+public class OrderedSet<T> extends ObjectSet<T> {
+	final Array<T> items;
+	OrderedSetIterator iterator1, iterator2;
+
+	public OrderedSet () {
+		items = new Array();
+	}
+
+	public OrderedSet (int initialCapacity, float loadFactor) {
+		super(initialCapacity, loadFactor);
+		items = new Array(capacity);
+	}
+
+	public OrderedSet (int initialCapacity) {
+		super(initialCapacity);
+		items = new Array(capacity);
+	}
+
+	public OrderedSet (ObjectSet set) {
+		super(set);
+		items = new Array(capacity);
+	}
+
+	public boolean add (T key) {
+		if (!contains(key)) items.add(key);
+		return super.add(key);
+	}
+
+	public boolean remove (T key) {
+		items.removeValue(key, false);
+		return super.remove(key);
+	}
+
+	public void clear (int maximumCapacity) {
+		items.clear();
+		super.clear(maximumCapacity);
+	}
+
+	public void clear () {
+		items.clear();
+		super.clear();
+	}
+
+	public Array<T> orderedItems () {
+		return items;
+	}
+
+	public OrderedSetIterator<T> iterator () {
+		if (iterator1 == null) {
+			iterator1 = new OrderedSetIterator(this);
+			iterator2 = new OrderedSetIterator(this);
+		}
+		if (!iterator1.valid) {
+			iterator1.reset();
+			iterator1.valid = true;
+			iterator2.valid = false;
+			return iterator1;
+		}
+		iterator2.reset();
+		iterator2.valid = true;
+		iterator1.valid = false;
+		return iterator2;
+	}
+
+	public String toString () {
+		if (size == 0) return "{}";
+		StringBuilder buffer = new StringBuilder(32);
+		buffer.append('{');
+		Array<T> keys = this.items;
+		for (int i = 0, n = keys.size; i < n; i++) {
+			T key = keys.get(i);
+			if (i > 0) buffer.append(", ");
+			buffer.append(key);
+		}
+		buffer.append('}');
+		return buffer.toString();
+	}
+
+	static public class OrderedSetIterator<T> extends ObjectSetIterator<T> {
+		private Array<T> items;
+
+		public OrderedSetIterator (OrderedSet<T> set) {
+			super(set);
+			items = set.items;
+		}
+
+		public void reset () {
+			nextIndex = 0;
+			hasNext = set.size > 0;
+		}
+
+		public T next () {
+			if (!hasNext) throw new NoSuchElementException();
+			if (!valid) throw new GdxRuntimeException("#iterator() cannot be used nested.");
+			T key = items.get(nextIndex);
+			nextIndex++;
+			hasNext = nextIndex < set.size;
+			return key;
+		}
+
+		public void remove () {
+			if (nextIndex < 0) throw new IllegalStateException("next must be called before remove.");
+			set.remove(items.get(nextIndex - 1));
+		}
+	}
+}
diff --git a/gdx/src/com/badlogic/gdx/utils/UBJsonWriter.java b/gdx/src/com/badlogic/gdx/utils/UBJsonWriter.java
index e223a0c..10911e4 100644
--- a/gdx/src/com/badlogic/gdx/utils/UBJsonWriter.java
+++ b/gdx/src/com/badlogic/gdx/utils/UBJsonWriter.java
@@ -324,7 +324,18 @@ public class UBJsonWriter implements Closeable {
 		out.writeByte('#');
 		value(values.length);
 		for (int i = 0, n = values.length; i < n; i++) {
-			value(values[i]);
+			byte[] bytes = values[i].getBytes("UTF-8");
+			if (bytes.length <= Byte.MAX_VALUE) {
+				out.writeByte('i');
+				out.writeByte(bytes.length);
+			} else if (bytes.length <= Short.MAX_VALUE) {
+				out.writeByte('I');
+				out.writeShort(bytes.length);
+			} else {
+				out.writeByte('l');
+				out.writeInt(bytes.length);
+			}
+			out.write(bytes);
 		}
 		pop(true);
 		return this;
diff --git a/pom.xml b/pom.xml
index 9632405..97819c1 100644
--- a/pom.xml
+++ b/pom.xml
@@ -46,7 +46,7 @@
     <gwt.version>2.6.0</gwt.version>
     <lwjgl.version>2.9.1</lwjgl.version>
     <jglfw.version>1.1</jglfw.version>
-    <robovm.version>0.0.13</robovm.version>
+    <robovm.version>0.0.14</robovm.version>
   </properties>
 
   <modules>
diff --git a/tests/gdx-tests-iosrobovm/robovm.xml b/tests/gdx-tests-iosrobovm/robovm.xml
index 73aaa0e..d3dbe87 100644
--- a/tests/gdx-tests-iosrobovm/robovm.xml
+++ b/tests/gdx-tests-iosrobovm/robovm.xml
@@ -17,15 +17,17 @@
   <forceLinkClasses>
     <pattern>com.badlogic.gdx.scenes.scene2d.ui.*</pattern>
     <pattern>com.badlogic.gdx.physics.bullet.**</pattern>
-    <pattern>org.apache.harmony.xnet.provider.jsse.OpenSSLProvider</pattern>
-    <pattern>org.apache.harmony.security.provider.cert.DRLCertFactory</pattern>
+	<pattern>com.android.okhttp.HttpHandler</pattern>
+    <pattern>com.android.okhttp.HttpsHandler</pattern>
+    <pattern>com.android.org.conscrypt.**</pattern>
     <pattern>com.android.org.bouncycastle.jce.provider.BouncyCastleProvider</pattern>
-    <pattern>org.apache.harmony.security.provider.crypto.CryptoProvider</pattern>
-    <pattern>org.apache.harmony.xnet.provider.jsse.JSSEProvider</pattern>
-    <pattern>com.android.org.bouncycastle.jce.provider.JDKKeyStore</pattern>
-    <pattern>org.apache.harmony.security.provider.cert.X509CertFactoryImpl</pattern>
+    <pattern>com.android.org.bouncycastle.jcajce.provider.keystore.BC$Mappings</pattern>
+    <pattern>com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi</pattern>
+    <pattern>com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$Std</pattern>
     <pattern>com.android.org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi</pattern>
-    <pattern>org.apache.harmony.xnet.provider.jsse.OpenSSLMessageDigestJDK$MD5</pattern>
+    <pattern>com.android.org.bouncycastle.crypto.digests.AndroidDigestFactoryOpenSSL</pattern>
+    <pattern>org.apache.harmony.security.provider.cert.DRLCertFactory</pattern>
+    <pattern>org.apache.harmony.security.provider.crypto.CryptoProvider</pattern>
   </forceLinkClasses>
   <libs>
     <lib>../../gdx/libs/ios32/libgdx.a</lib>
diff --git a/tests/gdx-tests-iosrobovm/src/com/badlogic/gdx/tests/IOSRobovmTests.java b/tests/gdx-tests-iosrobovm/src/com/badlogic/gdx/tests/IOSRobovmTests.java
index a3e53e0..8239199 100644
--- a/tests/gdx-tests-iosrobovm/src/com/badlogic/gdx/tests/IOSRobovmTests.java
+++ b/tests/gdx-tests-iosrobovm/src/com/badlogic/gdx/tests/IOSRobovmTests.java
@@ -29,7 +29,7 @@ public class IOSRobovmTests extends IOSApplication.Delegate {
 	protected IOSApplication createApplication() {
 		IOSApplicationConfiguration config = new IOSApplicationConfiguration();
 		config.useAccelerometer = false;
-		return new IOSApplication(new Benchmark3DTest(), config);
+		return new IOSApplication(new DownloadTest(), config);
 	}
 
 	public static void main(String[] argv) {
diff --git a/tests/gdx-tests-lwjgl/src/com/badlogic/gdx/tests/lwjgl/LwjglDebugStarter.java b/tests/gdx-tests-lwjgl/src/com/badlogic/gdx/tests/lwjgl/LwjglDebugStarter.java
index be6c184..552d6a0 100644
--- a/tests/gdx-tests-lwjgl/src/com/badlogic/gdx/tests/lwjgl/LwjglDebugStarter.java
+++ b/tests/gdx-tests-lwjgl/src/com/badlogic/gdx/tests/lwjgl/LwjglDebugStarter.java
@@ -21,6 +21,8 @@ import com.badlogic.gdx.backends.lwjgl.LwjglApplicationConfiguration;
 import com.badlogic.gdx.tests.AlphaTest;
 import com.badlogic.gdx.tests.Box2DTestCollection;
 import com.badlogic.gdx.tests.BulletTestCollection;
+import com.badlogic.gdx.tests.DownloadTest;
+import com.badlogic.gdx.tests.FreeTypeFontLoaderTest;
 import com.badlogic.gdx.tests.GamepadTest;
 import com.badlogic.gdx.tests.MusicTest;
 import com.badlogic.gdx.tests.PixmapTest;
@@ -40,7 +42,7 @@ public class LwjglDebugStarter {
 //		new SharedLibraryLoader("../../extensions/gdx-controllers/gdx-controllers-desktop/libs/gdx-controllers-desktop-natives.jar").load("gdx-controllers-desktop");
 //		new SharedLibraryLoader("../../gdx/libs/gdx-natives.jar").load("gdx");
 
-		GdxTest test = new StateMachineTest();		
+		GdxTest test = new DownloadTest();		
 		LwjglApplicationConfiguration config = new LwjglApplicationConfiguration();
 		config.r = config.g = config.b = config.a = 8;
 //		config.width = 320;
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/ContainerTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/ContainerTest.java
index ac55466..09f09c0 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/ContainerTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/ContainerTest.java
@@ -10,20 +10,17 @@ import com.badlogic.gdx.scenes.scene2d.ui.Container;
 import com.badlogic.gdx.scenes.scene2d.ui.Label;
 import com.badlogic.gdx.scenes.scene2d.ui.Skin;
 import com.badlogic.gdx.scenes.scene2d.ui.Table;
-import com.badlogic.gdx.scenes.scene2d.utils.Scene2DDebugRenderer;
 import com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable;
 import com.badlogic.gdx.tests.utils.GdxTest;
 
 public class ContainerTest extends GdxTest {
 	Skin skin;
 	Stage stage;
-	Scene2DDebugRenderer debugRenderer;
 
 	@Override
 	public void create () {
 		skin = new Skin(Gdx.files.internal("data/uiskin.json"));
 		stage = new Stage();
-		debugRenderer = new Scene2DDebugRenderer(stage);
 		Gdx.input.setInputProcessor(stage);
 
 		TextureRegionDrawable logo = new TextureRegionDrawable(new TextureRegion(new Texture(
@@ -84,7 +81,7 @@ public class ContainerTest extends GdxTest {
 		Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);
 		stage.act();
 		stage.draw();
-		debugRenderer.render();
+		Table.drawDebug(stage);
 	}
 
 	@Override
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/DownloadTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/DownloadTest.java
index b290d53..4e65144 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/DownloadTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/DownloadTest.java
@@ -39,6 +39,7 @@ public class DownloadTest extends GdxTest {
 			
 			@Override
 			public void failed (Throwable t) {
+				t.printStackTrace();
 				Gdx.app.log("EmptyDownloadTest", "Failed", t);
 			}
 			
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/DragAndDropTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/DragAndDropTest.java
index a4951eb..cb2ae5e 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/DragAndDropTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/DragAndDropTest.java
@@ -109,6 +109,7 @@ public class DragAndDropTest extends GdxTest {
 		Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);
 		stage.act(Gdx.graphics.getDeltaTime());
 		stage.draw();
+		Table.drawDebug(stage);
 	}
 
 	public void resize (int width, int height) {
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/FilesTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/FilesTest.java
index 3321c61..14f714e 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/FilesTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/FilesTest.java
@@ -386,7 +386,7 @@ public class FilesTest extends GdxTest {
 		if (handle.delete()) fail();
 		if (handle.list().length != 0) fail();
 		if (handle.child("meow").exists()) fail();
-		if (handle.parent().exists()) fail();
+		if (!handle.parent().exists()) fail();
 		try {
 			handle.read().close();
 			fail();
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/FreeTypeFontLoaderTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/FreeTypeFontLoaderTest.java
new file mode 100644
index 0000000..e92f921
--- /dev/null
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/FreeTypeFontLoaderTest.java
@@ -0,0 +1,79 @@
+package com.badlogic.gdx.tests;
+
+import com.badlogic.gdx.Gdx;
+import com.badlogic.gdx.assets.AssetManager;
+import com.badlogic.gdx.assets.loaders.FileHandleResolver;
+import com.badlogic.gdx.assets.loaders.resolvers.InternalFileHandleResolver;
+import com.badlogic.gdx.graphics.GL20;
+import com.badlogic.gdx.graphics.g2d.BitmapFont;
+import com.badlogic.gdx.graphics.g2d.SpriteBatch;
+import com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator;
+import com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGeneratorLoader;
+import com.badlogic.gdx.graphics.g2d.freetype.FreetypeFontLoader;
+import com.badlogic.gdx.graphics.g2d.freetype.FreetypeFontLoader.FreeTypeFontLoaderParameter;
+import com.badlogic.gdx.tests.utils.GdxTest;
+
+public class FreeTypeFontLoaderTest extends GdxTest {
+	AssetManager manager;
+	SpriteBatch batch;
+
+	@Override
+	public void create () {
+		manager = new AssetManager();
+		
+		// set the loaders for the generator and the fonts themselves
+		FileHandleResolver resolver = new InternalFileHandleResolver();
+		manager.setLoader(FreeTypeFontGenerator.class, new FreeTypeFontGeneratorLoader(resolver));
+		manager.setLoader(BitmapFont.class, ".ttf", new FreetypeFontLoader(resolver));
+		
+		// load to fonts via the generator (implicitely done by the FreetypeFontLoader).
+		// Note: you MUST specify a FreetypeFontGenerator defining the ttf font file name and the size
+		// of the font to be generated. The names of the fonts are arbitrary and are not pointing
+		// to a file on disk!
+		FreeTypeFontLoaderParameter size1Params = new FreeTypeFontLoaderParameter();
+		size1Params.fontFileName = "data/arial.ttf";
+		size1Params.fontParameters.size = 10;
+		manager.load("size10.ttf", BitmapFont.class, size1Params);
+		
+		FreeTypeFontLoaderParameter size2Params = new FreeTypeFontLoaderParameter();
+		size2Params.fontFileName = "data/arial.ttf";
+		size2Params.fontParameters.size = 20;
+		manager.load("size20.ttf", BitmapFont.class, size2Params);
+		
+		// we also load a "normal" font generated via Hiero
+		manager.load("data/default.fnt", BitmapFont.class);
+		
+		batch = new SpriteBatch();
+	}
+
+	@Override
+	public void render () {
+		Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);
+		if(manager.update() && manager.isLoaded("size10.ttf")) {
+			batch.begin();
+			manager.get("size10.ttf", BitmapFont.class).draw(batch, "First font!", 20, 20);
+			manager.get("size20.ttf", BitmapFont.class).draw(batch, "Second font!", 20, 50);
+			manager.get("data/default.fnt", BitmapFont.class).draw(batch, "Default font!", 20, 100);
+			batch.end();
+		}
+		
+		if(Gdx.input.justTouched() && manager.isLoaded("size10.ttf")) {
+			// unload all the things and check if they really get disposed properly
+			manager.unload("size10.ttf");
+			manager.finishLoading();
+			if(!manager.isLoaded("size20.ttf")) throw new RuntimeException("broken");
+			if(!manager.isLoaded("data/arial.ttf")) throw new RuntimeException("broken");
+			
+			manager.unload("size20.ttf");
+			manager.finishLoading();
+			if(manager.isLoaded("size20.ttf")) throw new RuntimeException("broken");
+			if(manager.isLoaded("data/arial.ttf")) throw new RuntimeException("broken");
+		}
+	}
+
+	@Override
+	public void dispose () {
+		manager.dispose();
+		batch.dispose();
+	}
+}
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/ImageTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/ImageTest.java
index cf6ceb8..0cb6499 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/ImageTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/ImageTest.java
@@ -24,7 +24,6 @@ import com.badlogic.gdx.scenes.scene2d.Stage;
 import com.badlogic.gdx.scenes.scene2d.ui.Image;
 import com.badlogic.gdx.scenes.scene2d.ui.Skin;
 import com.badlogic.gdx.scenes.scene2d.ui.Table;
-import com.badlogic.gdx.scenes.scene2d.utils.Scene2DDebugRenderer;
 import com.badlogic.gdx.tests.utils.GdxTest;
 import com.badlogic.gdx.utils.Scaling;
 
@@ -33,24 +32,21 @@ public class ImageTest extends GdxTest {
 	Stage ui;
 	Table root;
 	TextureRegion image2;
-	Scene2DDebugRenderer debugRenderer;
 
 	@Override
 	public void create () {
 		skin = new Skin(Gdx.files.internal("data/uiskin.json"));
 		image2 = new TextureRegion(new Texture(Gdx.files.internal("data/badlogic.jpg")));
 		ui = new Stage();
-		debugRenderer = new Scene2DDebugRenderer(ui);
 		Gdx.input.setInputProcessor(ui);
 
 		root = new Table();
-		root.setSize(Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
 		ui.addActor(root);
 		root.debug();
 
 		Image image = new Image(image2);
 		image.setScaling(Scaling.fill);
-		root.add(image).width(image2.getRegionWidth()).height(image2.getRegionHeight());
+		root.add(image).width(160).height(100);
 	}
 
 	@Override
@@ -66,11 +62,12 @@ public class ImageTest extends GdxTest {
 		Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);
 		ui.act(Math.min(Gdx.graphics.getDeltaTime(), 1 / 30f));
 		ui.draw();
-		debugRenderer.render();
+		Table.drawDebug(ui);
 	}
 
 	@Override
 	public void resize (int width, int height) {
 		ui.getViewport().update(width, height, true);
+		root.setSize(width, height);
 	}
 }
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/LabelScaleTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/LabelScaleTest.java
index a08cb4f..bafb24d 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/LabelScaleTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/LabelScaleTest.java
@@ -24,7 +24,6 @@ import com.badlogic.gdx.scenes.scene2d.Stage;
 import com.badlogic.gdx.scenes.scene2d.ui.Label;
 import com.badlogic.gdx.scenes.scene2d.ui.Skin;
 import com.badlogic.gdx.scenes.scene2d.ui.Table;
-import com.badlogic.gdx.scenes.scene2d.utils.Scene2DDebugRenderer;
 import com.badlogic.gdx.tests.utils.GdxTest;
 
 public class LabelScaleTest extends GdxTest {
@@ -32,14 +31,12 @@ public class LabelScaleTest extends GdxTest {
 	Stage stage;
 	SpriteBatch batch;
 	Actor root;
-	Scene2DDebugRenderer debugRenderer;
 
 	@Override
 	public void create () {
 		batch = new SpriteBatch();
 		skin = new Skin(Gdx.files.internal("data/uiskin.json"));
 		stage = new Stage();
-		debugRenderer = new Scene2DDebugRenderer(stage);
 		Gdx.input.setInputProcessor(stage);
 
 		Table table = new Table();
@@ -73,7 +70,7 @@ public class LabelScaleTest extends GdxTest {
 
 		stage.act(Math.min(Gdx.graphics.getDeltaTime(), 1 / 30f));
 		stage.draw();
-		debugRenderer.render();
+		Table.drawDebug(stage);
 	}
 
 	@Override
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/LabelTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/LabelTest.java
index 98b6a1f..834cf80 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/LabelTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/LabelTest.java
@@ -30,7 +30,6 @@ import com.badlogic.gdx.scenes.scene2d.ui.Label;
 import com.badlogic.gdx.scenes.scene2d.ui.Skin;
 import com.badlogic.gdx.scenes.scene2d.ui.Table;
 import com.badlogic.gdx.scenes.scene2d.utils.Align;
-import com.badlogic.gdx.scenes.scene2d.utils.Scene2DDebugRenderer;
 import com.badlogic.gdx.tests.utils.GdxTest;
 
 public class LabelTest extends GdxTest {
@@ -39,7 +38,6 @@ public class LabelTest extends GdxTest {
 	SpriteBatch batch;
 	Actor root;
 	ShapeRenderer renderer;
-	Scene2DDebugRenderer debugRenderer;
 
 	@Override
 	public void create () {
@@ -49,7 +47,6 @@ public class LabelTest extends GdxTest {
 		skin.getAtlas().getTextures().iterator().next().setFilter(TextureFilter.Nearest, TextureFilter.Nearest);
 		skin.getFont("default-font").setMarkupEnabled(true);
 		stage = new Stage();
-		debugRenderer = new Scene2DDebugRenderer(stage);
 		Gdx.input.setInputProcessor(stage);
 
 		Table table = new Table();
@@ -92,7 +89,7 @@ public class LabelTest extends GdxTest {
 
 		stage.act(Math.min(Gdx.graphics.getDeltaTime(), 1 / 30f));
 		stage.draw();
-		debugRenderer.render();
+		Table.drawDebug(stage);
 
 		float x = 40, y = 40;
 
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/ProjectiveTextureTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/ProjectiveTextureTest.java
index 5ba9d09..287206d 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/ProjectiveTextureTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/ProjectiveTextureTest.java
@@ -102,7 +102,7 @@ public class ProjectiveTextureTest extends GdxTest {
 	}
 
 	public void setupUI () {
-		ui = new Stage();
+		ui = new Stage();;
 		skin = new Skin(Gdx.files.internal("data/uiskin.json"));
 		TextButton reload = new TextButton("Reload Shaders", skin.get(TextButtonStyle.class));
 		camera = new SelectBox(skin.get(SelectBoxStyle.class));
@@ -170,6 +170,7 @@ public class ProjectiveTextureTest extends GdxTest {
 		fps.setText("fps: " + Gdx.graphics.getFramesPerSecond());
 		ui.act();
 		ui.draw();
+		Table.drawDebug(ui);
 	}
 
 	Vector3 position = new Vector3();
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/Scene2DDebugRendererTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/Scene2DDebugRendererTest.java
deleted file mode 100644
index b8043fc..0000000
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/Scene2DDebugRendererTest.java
+++ /dev/null
@@ -1,130 +0,0 @@
-/*******************************************************************************
- * Copyright 2011 See AUTHORS file.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *   http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- ******************************************************************************/
-
-package com.badlogic.gdx.tests;
-
-import com.badlogic.gdx.Gdx;
-import com.badlogic.gdx.graphics.GL20;
-import com.badlogic.gdx.graphics.Pixmap;
-import com.badlogic.gdx.graphics.Texture;
-import com.badlogic.gdx.graphics.Pixmap.Format;
-import com.badlogic.gdx.graphics.g2d.Batch;
-import com.badlogic.gdx.graphics.g2d.TextureRegion;
-import com.badlogic.gdx.scenes.scene2d.Actor;
-import com.badlogic.gdx.scenes.scene2d.Group;
-import com.badlogic.gdx.scenes.scene2d.Stage;
-import com.badlogic.gdx.scenes.scene2d.ui.Label;
-import com.badlogic.gdx.scenes.scene2d.ui.Skin;
-import com.badlogic.gdx.scenes.scene2d.ui.Table;
-import com.badlogic.gdx.scenes.scene2d.ui.TextButton;
-import com.badlogic.gdx.scenes.scene2d.utils.Scene2DDebugRenderer;
-import com.badlogic.gdx.tests.utils.GdxTest;
-
-/** @author Daniel Holderbaum */
-public class Scene2DDebugRendererTest extends GdxTest {
-
-	static TextureRegion textureRegion;
-
-	private Stage stage;
-	private Stage stage1;
-	private Stage stage2;
-
-	private Scene2DDebugRenderer debugRenderer;
-
-	class DebugActor extends Actor {
-
-		@Override
-		public void draw (Batch batch, float parentAlpha) {
-			batch.draw(textureRegion, getX(), getY(), getOriginX(), getOriginY(), getWidth(), getHeight(), getScaleX(), getScaleY(),
-				getRotation());
-		}
-	}
-
-	@Override
-	public void create () {
-		textureRegion = new TextureRegion(new Texture("data/badlogic.jpg"));
-
-		Gdx.input.setInputProcessor(this);
-
-		stage1 = new Stage();
-		stage1.getCamera().position.set(100, 100, 0);
-
-		Group group = new Group();
-//		 group.setBounds(0, 0, 10, 10);
-		// group.setOrigin(25, 50);
-		group.setRotation(10);
-		group.setScale(1.2f);
-		stage1.addActor(group);
-
-		DebugActor actor = new DebugActor();
-		actor.setBounds(400, 240, 50, 100);
-		actor.setOrigin(25, 50);
-		actor.setRotation(-45);
-		actor.setScale(2f);
-		group.addActor(actor);
-
-		stage2 = new Stage();
-		Skin skin = new Skin(Gdx.files.internal("data/uiskin.json"));
-
-		Table root = new Table(skin);
-		root.setFillParent(true);
-		root.setBackground(skin.getDrawable("default-pane"));
-		root.defaults().space(6);
-		root.debug();
-		TextButton shortButton = new TextButton("Button short", skin);
-		root.add(shortButton).pad(5);
-		shortButton.debug();
-		TextButton longButton = new TextButton("Button loooooooooong", skin);
-		longButton.debug();
-		root.add(longButton).row();
-		root.add("Colspan").colspan(2).row();
-		root.setTransform(true);
-		root.rotateBy(10);
-		stage2.addActor(root);
-
-		switchStage();
-	}
-
-	@Override
-	public void render () {
-		Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT | GL20.GL_DEPTH_BUFFER_BIT);
-
-		stage.draw();
-		debugRenderer.render();
-	}
-
-	@Override
-	public boolean touchDown (int screenX, int screenY, int pointer, int button) {
-		switchStage();
-		return false;
-	}
-
-	@Override
-	public void resize (int width, int height) {
-		stage1.getViewport().update(width, height, true);
-		stage2.getViewport().update(width, height, true);
-	}
-
-	private void switchStage () {
-		if (stage != stage1) {
-			stage = stage1;
-		} else {
-			stage = stage2;
-		}
-		debugRenderer = new Scene2DDebugRenderer(stage);
-	}
-
-}
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/Scene2dTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/Scene2dTest.java
index efa16aa..1b0ade2 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/Scene2dTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/Scene2dTest.java
@@ -40,19 +40,16 @@ import com.badlogic.gdx.scenes.scene2d.ui.TextButton;
 import com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup;
 import com.badlogic.gdx.scenes.scene2d.ui.Window;
 import com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener;
-import com.badlogic.gdx.scenes.scene2d.utils.Scene2DDebugRenderer;
 import com.badlogic.gdx.scenes.scene2d.utils.TiledDrawable;
 import com.badlogic.gdx.tests.utils.GdxTest;
 
 public class Scene2dTest extends GdxTest {
 	Stage stage;
-	Scene2DDebugRenderer debugRenderer;
 	private FloatAction meow = new FloatAction(10, 5);
 	private TiledDrawable patch;
 
 	public void create () {
 		stage = new Stage();
-		debugRenderer = new Scene2DDebugRenderer(stage);
 		Gdx.input.setInputProcessor(stage);
 
 		final TextureRegion region = new TextureRegion(new Texture("data/badlogic.jpg"));
@@ -177,7 +174,7 @@ public class Scene2dTest extends GdxTest {
 		Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);
 		stage.act(Gdx.graphics.getDeltaTime());
 		stage.draw();
-		debugRenderer.render();
+		Table.drawDebug(stage);
 
 		stage.getBatch().begin();
 		patch.draw(stage.getBatch(), 300, 100, 126, 126);
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/ScrollPane2Test.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/ScrollPane2Test.java
index 2fc53be..3d6f4e7 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/ScrollPane2Test.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/ScrollPane2Test.java
@@ -26,17 +26,14 @@ import com.badlogic.gdx.scenes.scene2d.ui.Image;
 import com.badlogic.gdx.scenes.scene2d.ui.ScrollPane;
 import com.badlogic.gdx.scenes.scene2d.ui.Skin;
 import com.badlogic.gdx.scenes.scene2d.ui.Table;
-import com.badlogic.gdx.scenes.scene2d.utils.Scene2DDebugRenderer;
 import com.badlogic.gdx.tests.utils.GdxTest;
 
 public class ScrollPane2Test extends GdxTest {
 	Stage stage;
 	Skin skin;
-	Scene2DDebugRenderer debugRenderer;
 
 	public void create () {
 		stage = new Stage();
-		debugRenderer = new Scene2DDebugRenderer(stage);
 		Gdx.input.setInputProcessor(stage);
 
 		skin = new Skin(Gdx.files.internal("data/uiskin.json"));
@@ -85,7 +82,7 @@ public class ScrollPane2Test extends GdxTest {
 		Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);
 		stage.act(Gdx.graphics.getDeltaTime());
 		stage.draw();
-		debugRenderer.render();
+		Table.drawDebug(stage);
 	}
 
 	public void resize (int width, int height) {
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/ScrollPaneScrollBarsTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/ScrollPaneScrollBarsTest.java
index 445757a..7cfd449 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/ScrollPaneScrollBarsTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/ScrollPaneScrollBarsTest.java
@@ -224,6 +224,7 @@ public class ScrollPaneScrollBarsTest extends GdxTest {
 		Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);
 		stage.act(Gdx.graphics.getDeltaTime());
 		stage.draw();
+		Table.drawDebug(stage);
 	}
 
 	public void resize (int width, int height) {
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/ScrollPaneTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/ScrollPaneTest.java
index ceb9cd2..08004fc 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/ScrollPaneTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/ScrollPaneTest.java
@@ -123,6 +123,7 @@ public class ScrollPaneTest extends GdxTest {
 		Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);
 		stage.act(Gdx.graphics.getDeltaTime());
 		stage.draw();
+		Table.drawDebug(stage);
 	}
 
 	public void resize (int width, int height) {
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/TableLayoutTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/TableLayoutTest.java
index 71a36e9..3ae1f7f 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/TableLayoutTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/TableLayoutTest.java
@@ -30,16 +30,13 @@ import com.badlogic.gdx.scenes.scene2d.ui.Table;
 import com.badlogic.gdx.scenes.scene2d.ui.TextButton;
 import com.badlogic.gdx.scenes.scene2d.ui.TextField;
 import com.badlogic.gdx.scenes.scene2d.utils.ChangeListener;
-import com.badlogic.gdx.scenes.scene2d.utils.Scene2DDebugRenderer;
 import com.badlogic.gdx.tests.utils.GdxTest;
 
 public class TableLayoutTest extends GdxTest {
 	Stage stage;
-	Scene2DDebugRenderer debugRenderer;
 
 	public void create () {
 		stage = new Stage();
-		debugRenderer = new Scene2DDebugRenderer(stage);
 		Gdx.input.setInputProcessor(stage);
 		Skin skin = new Skin(Gdx.files.internal("data/uiskin.json"));
 
@@ -94,7 +91,7 @@ public class TableLayoutTest extends GdxTest {
 		Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);
 		stage.act(Gdx.graphics.getDeltaTime());
 		stage.draw();
-		debugRenderer.render();
+		Table.drawDebug(stage);
 	}
 
 	public void resize (int width, int height) {
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/TableTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/TableTest.java
index 5b11fcf..0635517 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/TableTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/TableTest.java
@@ -31,7 +31,6 @@ import com.badlogic.gdx.scenes.scene2d.ui.Table;
 import com.badlogic.gdx.scenes.scene2d.ui.TextButton;
 import com.badlogic.gdx.scenes.scene2d.ui.TextButton.TextButtonStyle;
 import com.badlogic.gdx.scenes.scene2d.utils.ClickListener;
-import com.badlogic.gdx.scenes.scene2d.utils.Scene2DDebugRenderer;
 import com.badlogic.gdx.tests.utils.GdxTest;
 
 public class TableTest extends GdxTest {
@@ -39,12 +38,10 @@ public class TableTest extends GdxTest {
 	Stage stage;
 	Texture texture;
 	Table root;
-	Scene2DDebugRenderer debugRenderer;
 
 	@Override
 	public void create () {
 		stage = new Stage();
-		debugRenderer = new Scene2DDebugRenderer(stage);
 		Gdx.input.setInputProcessor(stage);
 
 		skin = new Skin(Gdx.files.internal("data/uiskin.json"));
@@ -108,7 +105,7 @@ public class TableTest extends GdxTest {
 
 		stage.act(Math.min(Gdx.graphics.getDeltaTime(), 1 / 30f));
 		stage.draw();
-		debugRenderer.render();
+		Table.drawDebug(stage);
 	}
 
 	@Override
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/TreeTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/TreeTest.java
index 2a65472..4fc0785 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/TreeTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/TreeTest.java
@@ -68,6 +68,7 @@ public class TreeTest extends GdxTest {
 		Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);
 		stage.act(Gdx.graphics.getDeltaTime());
 		stage.draw();
+		Table.drawDebug(stage);
 	}
 
 	public void resize (int width, int height) {
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/UISimpleTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/UISimpleTest.java
index aeb5327..95363b9 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/UISimpleTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/UISimpleTest.java
@@ -97,6 +97,7 @@ public class UISimpleTest extends GdxTest {
 		Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);
 		stage.act(Math.min(Gdx.graphics.getDeltaTime(), 1 / 30f));
 		stage.draw();
+		Table.drawDebug(stage);
 	}
 
 	@Override
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/UITest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/UITest.java
index fca61ca..c4678d3 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/UITest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/UITest.java
@@ -182,6 +182,7 @@ public class UITest extends GdxTest {
 
 		stage.act(Math.min(Gdx.graphics.getDeltaTime(), 1 / 30f));
 		stage.draw();
+		Table.drawDebug(stage);
 	}
 
 	@Override
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/ViewportTest1.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/ViewportTest1.java
index 82a0e9c..a9b7195 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/ViewportTest1.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/ViewportTest1.java
@@ -27,7 +27,6 @@ import com.badlogic.gdx.scenes.scene2d.ui.Label;
 import com.badlogic.gdx.scenes.scene2d.ui.Skin;
 import com.badlogic.gdx.scenes.scene2d.ui.Table;
 import com.badlogic.gdx.scenes.scene2d.ui.TextButton;
-import com.badlogic.gdx.scenes.scene2d.utils.Scene2DDebugRenderer;
 import com.badlogic.gdx.tests.utils.GdxTest;
 import com.badlogic.gdx.utils.Array;
 import com.badlogic.gdx.utils.Scaling;
@@ -45,12 +44,10 @@ public class ViewportTest1 extends GdxTest {
 	Array<String> names;
 	Stage stage;
 	Label label;
-	Scene2DDebugRenderer debugRenderer;
 
 	public void create () {
 		stage = new Stage();
 		Skin skin = new Skin(Gdx.files.internal("data/uiskin.json"));
-		debugRenderer = new Scene2DDebugRenderer(stage);
 
 		label = new Label("", skin);
 
@@ -89,8 +86,7 @@ public class ViewportTest1 extends GdxTest {
 
 		Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);
 		stage.draw();
-		debugRenderer.render();
-//		Table.drawDebug(stage);
+		Table.drawDebug(stage);
 	}
 
 	public void resize (int width, int height) {
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/ConvexHullDistanceTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/ConvexHullDistanceTest.java
index 99a2c1a..1c2ba8a 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/ConvexHullDistanceTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/ConvexHullDistanceTest.java
@@ -115,7 +115,7 @@ public class ConvexHullDistanceTest extends BaseBulletTest {
 		private btCollisionDispatcher dispatcher;
 		private btDbvtBroadphase pairCache;
 		private btCollisionWorld collisionWorld;
-		Vector3[] vectors;
+		Vector3[] vectors = new Vector3[]{new Vector3(), new Vector3()};
 
 		public ConvexHullDistance () {
 			collisionConfiguration = new btDefaultCollisionConfiguration();
@@ -145,10 +145,8 @@ public class ConvexHullDistanceTest extends BaseBulletTest {
 			public float addSingleResult (btManifoldPoint cp, btCollisionObjectWrapper colObj0Wrap, int partId0, int index0,
 				btCollisionObjectWrapper colObj1Wrap, int partId1, int index1) {
 
-				btVector3 startVector = cp.getPositionWorldOnA();
-				btVector3 endVector = cp.getPositionWorldOnB();
-
-				vectors = new Vector3[] {new Vector3(startVector.getFloats()), new Vector3(endVector.getFloats())};
+				cp.getPositionWorldOnA(vectors[0]);
+				cp.getPositionWorldOnB(vectors[1]);
 
 				return 1.f;
 			}
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/g3d/Animation3DTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/g3d/Animation3DTest.java
index 7e20bd8..8e01a31 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/g3d/Animation3DTest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/g3d/Animation3DTest.java
@@ -26,7 +26,9 @@ import com.badlogic.gdx.graphics.g3d.Material;
 import com.badlogic.gdx.graphics.g3d.Model;
 import com.badlogic.gdx.graphics.g3d.ModelBatch;
 import com.badlogic.gdx.graphics.g3d.ModelInstance;
+import com.badlogic.gdx.graphics.g3d.attributes.BlendingAttribute;
 import com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute;
+import com.badlogic.gdx.graphics.g3d.attributes.FloatAttribute;
 import com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute;
 import com.badlogic.gdx.graphics.g3d.environment.DirectionalShadowLight;
 import com.badlogic.gdx.graphics.g3d.model.Animation;
@@ -45,6 +47,7 @@ public class Animation3DTest extends BaseG3dHudTest {
 	ModelInstance skydome;
 	Model floorModel;
 	ModelInstance character;
+	ModelInstance tree;
 	AnimationController animation;
 	DirectionalShadowLight shadowLight;
 	ModelBatch shadowBatch;
@@ -57,7 +60,7 @@ public class Animation3DTest extends BaseG3dHudTest {
 		lights = new Environment();
 		lights.set(new ColorAttribute(ColorAttribute.AmbientLight, 0.4f, 0.4f, 0.4f, 1.f));
 		lights.add((shadowLight = new DirectionalShadowLight(1024, 1024, 30f, 30f, 1f, 100f))
-			.set(0.8f, 0.8f, 0.8f, -1f, -.8f, -.2f));
+			.set(0.8f, 0.8f, 0.8f, -.4f, -.4f, -.4f));
 		lights.shadowMap = shadowLight;
 		inputController.rotateLeftKey = inputController.rotateRightKey = inputController.forwardKey = inputController.backwardKey = 0;
 		cam.position.set(25, 25, 25);
@@ -66,6 +69,7 @@ public class Animation3DTest extends BaseG3dHudTest {
 		modelsWindow.setVisible(false);
 		assets.load("data/g3d/skydome.g3db", Model.class);
 		assets.load("data/g3d/concrete.png", Texture.class);
+		assets.load("data/tree.png", Texture.class);
 		loading = true;
 		trForward.translation.set(0, 0, 8f);
 		trBackward.translation.set(0, 0, -8f);
@@ -74,14 +78,21 @@ public class Animation3DTest extends BaseG3dHudTest {
 
 		ModelBuilder builder = new ModelBuilder();
 		builder.begin();
+		builder.node().id = "floor";
 		MeshPartBuilder part = builder.part("floor", GL20.GL_TRIANGLES, Usage.Position | Usage.TextureCoordinates | Usage.Normal,
-			new Material());
+			new Material("concrete"));
 		((MeshBuilder)part).ensureRectangles(1600);
 		for (float x = -200f; x < 200f; x += 10f) {
 			for (float z = -200f; z < 200f; z += 10f) {
 				part.rect(x, 0, z + 10f, x + 10f, 0, z + 10f, x + 10f, 0, z, x, 0, z, 0, 1, 0);
 			}
 		}
+		builder.node().id = "tree";
+		part = builder.part("tree", GL20.GL_TRIANGLES, Usage.Position | Usage.TextureCoordinates | Usage.Normal,
+			new Material("tree"));
+		part.rect( 0f, 0f, -10f, 10f, 0f, -10f, 10f, 10f, -10f,  0f, 10f, -10f, 0, 0, 1f);
+		part.setUVRange(1, 0, 0, 1);
+		part.rect(10f, 0f, -10f,  0f, 0f, -10f,  0f, 10f, -10f, 10f, 10f, -10f, 0, 0, -1f);
 		floorModel = builder.end();
 
 		shadowBatch = new ModelBatch(new DepthShaderProvider());
@@ -143,6 +154,7 @@ public class Animation3DTest extends BaseG3dHudTest {
 			shadowLight.begin(character.transform.getTranslation(tmpVector), cam.direction);
 			shadowBatch.begin(shadowLight.getCamera());
 			if (character != null) shadowBatch.render(character);
+			if (tree != null) shadowBatch.render(tree);
 			shadowBatch.end();
 			shadowLight.end();
 		}
@@ -169,8 +181,13 @@ public class Animation3DTest extends BaseG3dHudTest {
 	protected void onLoaded () {
 		if (skydome == null) {
 			skydome = new ModelInstance(assets.get("data/g3d/skydome.g3db", Model.class));
-			floorModel.materials.get(0).set(TextureAttribute.createDiffuse(assets.get("data/g3d/concrete.png", Texture.class)));
-			instances.add(new ModelInstance(floorModel));
+			floorModel.getMaterial("concrete").set(TextureAttribute.createDiffuse(assets.get("data/g3d/concrete.png", Texture.class)));
+			floorModel.getMaterial("tree").set(
+				TextureAttribute.createDiffuse(assets.get("data/tree.png", Texture.class)),
+				new BlendingAttribute()
+				);
+			instances.add(new ModelInstance(floorModel, "floor"));
+			instances.add(tree = new ModelInstance(floorModel, "tree"));
 			assets.load("data/g3d/knight.g3db", Model.class);
 			loading = true;
 		} else if (character == null) {
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/net/NetAPITest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/net/NetAPITest.java
index 9a5e8b8..bbfb991 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/net/NetAPITest.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/net/NetAPITest.java
@@ -44,6 +44,7 @@ public class NetAPITest extends GdxTest implements HttpResponseListener {
 	Stage stage;
 	TextButton btnDownloadImage;
 	TextButton btnDownloadText;
+	TextButton btnDownloadLarge;
 	TextButton btnDownloadError;
 	TextButton btnPost;
 	TextButton btnCancel;
@@ -106,6 +107,8 @@ public class NetAPITest extends GdxTest implements HttpResponseListener {
 						url = "http://i.imgur.com/vxomF.jpg";
 					else if (clickedButton == btnDownloadText)
 						url = "http://www.apache.org/licenses/LICENSE-2.0.txt";
+					else if (clickedButton == btnDownloadLarge)
+						url = "http://libgdx.badlogicgames.com/releases/libgdx-1.2.0.zip";
 					else if (clickedButton == btnDownloadError)
 						url = "http://www.badlogicgames.com/doesnotexist";
 					else {
@@ -129,13 +132,14 @@ public class NetAPITest extends GdxTest implements HttpResponseListener {
 					super.clicked(event, x, y);
 					if (httpRequest != null) {
 						Gdx.net.cancelHttpRequest(httpRequest);
+						Gdx.app.log("NetAPITest", "Cancelling request " + httpRequest.getUrl());
 						statusLabel.setText("Cancelling request " + httpRequest.getUrl());
 					}
 				}
 			};
 
 			btnCancel = new TextButton("Cancel", skin);
-			btnCancel.setPosition(Gdx.graphics.getWidth() * 0.5f - btnCancel.getWidth() * 1.5f, 60f);
+			btnCancel.setPosition(Gdx.graphics.getWidth() * 0.35f - btnCancel.getWidth() * 1.5f, 60f);
 			btnCancel.addListener(cancelListener);
 			stage.addActor(btnCancel);
 
@@ -149,8 +153,13 @@ public class NetAPITest extends GdxTest implements HttpResponseListener {
 			btnDownloadText.addListener(clickListener);
 			stage.addActor(btnDownloadText);
 
+			btnDownloadLarge = new TextButton("GET Large", skin);
+			btnDownloadLarge.setPosition(btnDownloadText.getX() + btnDownloadText.getWidth() + 10, 60f);
+			btnDownloadLarge.addListener(clickListener);
+			stage.addActor(btnDownloadLarge);
+
 			btnDownloadError = new TextButton("GET Error", skin);
-			btnDownloadError.setPosition(btnDownloadText.getX() + btnDownloadText.getWidth() + 10, 60f);
+			btnDownloadError.setPosition(btnDownloadLarge.getX() + btnDownloadLarge.getWidth() + 10, 60f);
 			btnDownloadError.addListener(clickListener);
 			stage.addActor(btnDownloadError);
 
@@ -189,6 +198,20 @@ public class NetAPITest extends GdxTest implements HttpResponseListener {
 					texture = new Texture(pixmap);
 				}
 			});
+
+		} else if (clickedButton == btnDownloadLarge) {
+			Gdx.app.postRunnable(new Runnable() {
+				public void run () {
+					text = "Retrieving large file...";
+				}
+			});
+			final byte[] rawFileBytes = httpResponse.getResult();
+			Gdx.app.postRunnable(new Runnable() {
+				public void run () {
+					text = "Retrieved large file: " + rawFileBytes.length;
+				}
+			});
+
 		} else {
 			setText(httpResponse);
 		}
@@ -255,6 +278,7 @@ public class NetAPITest extends GdxTest implements HttpResponseListener {
 		Gdx.app.postRunnable(new Runnable() {
 			public void run () {
 				setButtonDisabled(false);
+				Gdx.app.log("NetAPITest", "HTTP request cancelled");
 				statusLabel.setText("HTTP request cancelled");
 			}
 		});
diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/utils/GdxTests.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/utils/GdxTests.java
index 602f14f..7e2402c 100644
--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/utils/GdxTests.java
+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/utils/GdxTests.java
@@ -28,6 +28,7 @@
 
 package com.badlogic.gdx.tests.utils;
 
+import com.badlogic.gdx.graphics.g2d.freetype.FreetypeFontLoader;
 import com.badlogic.gdx.tests.*;
 import com.badlogic.gdx.tests.bench.TiledMapBench;
 import com.badlogic.gdx.tests.examples.MoveSpriteExample;
@@ -159,7 +160,6 @@ public class GdxTests {
 		ReflectionTest.class,
 		RotationTest.class,
 		RunnablePostTest.class,
-		Scene2DDebugRendererTest.class,
 		Scene2dTest.class,
 		ScrollPane2Test.class,
 		ScrollPaneScrollBarsTest.class,
@@ -214,7 +214,8 @@ public class GdxTests {
 		ViewportTest1.class,
 		ViewportTest2.class,
 		ViewportTest3.class,
-		YDownTest.class
+		YDownTest.class,
+		FreeTypeFontLoaderTest.class
 		// @on
 
 		// SoundTouchTest.class, Mpg123Test.class, WavTest.class, FreeTypeTest.class,
